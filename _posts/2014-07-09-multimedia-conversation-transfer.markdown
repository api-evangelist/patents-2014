---

title: Multimedia conversation transfer
abstract: A method performed by a conversation manager in a communications network includes establishing a multimedia conversation between a first device associated with a first user and at least one endpoint associated with at least one other user, the multimedia conversation comprising at least two different media types according to respective and different protocol types. The method further includes receiving an instruction to transfer the conversation from the first device of the first user to a second device, adding the second device to the multimedia conversation by establishing connections for the at least two different media types to the second device, and removing the first device from the multimedia conversation by removing connections for the at least two media types to the first device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09276982&OS=09276982&RS=09276982
owner: GENBAND US LLC
number: 09276982
owner_city: Frisco
owner_country: US
publication_date: 20140709
---
The present disclosure relates generally to communication management and more particularly to methods and systems for transferring communications between devices.

People often communicate using various types of media. For example people may engage in voice communication over the phone whether by a landline mobile phone or voice over internet protocol VOIP applications. Additionally users may use email and instant messaging applications. Other methods such as video conferencing and document sharing technologies are available as well.

In general when one user is communicating with another user using one type of media and desires to use a second type of media the user has to manually connect or set up a connection with the new media. For example if a user is on a phone call with another user and desires to share his or her computer desktop with the other user the user has to manually set up the desktop sharing with the other user. This typically involves sending a link via email to the other user. Additionally a user may wish to change devices during a communication session.

Managing multiple applications and media types can often be a daunting task for a user. This can have an adverse effect on productivity. Additionally this may be a source of frustration for a user. Thus it is desirable to provide methods and systems that provide a better user experience for various communication applications.

According to one example a method performed by a conversation manager in a communications network includes establishing a multimedia conversation between a first device associated with a first user and at least one endpoint associated with at least one other user the multimedia conversation comprising at least two different media types according to respective and different protocol types. The method further includes receiving an instruction to transfer the conversation from the first device of the first user to a second device adding the second device to the multimedia conversation by establishing connections for the at least two different media types to the second device and removing the first device from the multimedia conversation by removing connections for the at least two media types to the first device.

According to one examples a computer program product comprising machine readable instructions on a non transitory storage medium. The computer program product includes computer program code for sending a request to grab a multimedia conversation from an active client device the active client device being active within the multimedia conversation the multimedia conversation comprising communication sessions that include multiple media types defined by respective media communication protocols. The computer program code further includes computer program code for establishing a connection with endpoints of the multimedia conversation using at least a subset of the communication protocols of the multimedia conversation. Wherein establishing the connection includes removing the active client device from the multimedia conversation.

A computing system includes a processor and a memory comprising machine readable instructions that when executed by the processor cause the system to establish a multimedia conversation between a first device associated with a first user and at least one endpoint associated with at least one other user the multimedia conversation comprising at least two different media types according to a variety of media protocol types. The machine readable instructions are further to receive an instruction to transfer the conversation from the first device of the first user to a second device add the second device to the multimedia conversation by establishing connections for the at least two different media types to the second device and remove the first device from the multimedia conversation by removing connections for the at least two media types to the first device.

In the figures elements having similar designations may or may not have the same or similar functions.

In the following description specific details are set forth describing some embodiments consistent with the present disclosure. It will be apparent however to one skilled in the art that some embodiments may be practiced without some or all of these specific details. The specific embodiments disclosed herein are meant to be illustrative but not limiting. One skilled in the art may realize other elements that although not specifically described here are within the scope and the spirit of this disclosure. In addition to avoid unnecessary repetition one or more features shown and described in association with one embodiment may be incorporated into other embodiments unless specifically described otherwise or if the one or more features would make an embodiment non functional.

As described above a user of conventional systems has to manage multiple communication applications when communicating with different types of media. Managing multiple applications and media types can often be a daunting task for a user. Such tasks become increasingly complex when a user would like to switch devices. For example a user may be engaged in a conversation that involves both audio video and instant messaging between multiple parties. The user may be using a device such as a desktop computer. It may be the case that the user has to move to a different location and would like to switch to a different device such as a tablet device or a smartphone device. The user typically has to exit the communication session on the desktop computer and then re establish communication with the other parties using the tablet or smartphone device. This can be a source of frustration for the user.

According to principles described herein a user may seamlessly transfer a multimedia conversation from a first device to a second device. This may be done by sending a command from the first device which will be referred to as pushing the conversation. Alternatively the user may send a command from the second device which will be referred to as grabbing the conversation. Specifically when a user sends the command to transfer a multimedia conversation to the second device the data streams being transferred between the first device and other conversation participants are duplicated and transferred to the second device. This connects the second device to the multimedia conversation. Then the data streams to the first device can be shut down. Because the multimedia conversation may involve multiple media types using multiple different protocols the data streams for each protocol are set up on the second device and shut down on the first device.

In one example a conversation manager may be used to transfer multimedia conversations as described above. A conversation manager is an application that runs on one or more computing devices and is responsible for establishing multimedia communications between multiple parties. In one example a user may wish to use a tablet device to grab a multimedia conversation from a laptop computing device. The user thus sends a grab command from the tablet device to the conversation manager. The conversation manager then establishes data streams between the tablet device and the other conversation participants. These data streams include media data adopted to the various protocols currently being used in the multimedia conversation. After the tablet device has successfully been added to the conversation the data streams being transmitted to the laptop device are shut down. Thus the multiparty multiprotocol conversation is seamlessly transferred to a different device.

The server includes software and hardware that responds to requests over the network . Specifically the server receives requests from various devices over the network . The server then responds to those requests accordingly. Such requests may include requests to establish communication from one device to another. In some examples multiple servers may be used in concert to perform the functions described herein.

The server includes a communication application that will be referred to as the conversation manager . In this example a conversation includes a communication involving two or more users and two or more types of media. Thus the conversation manager manages communication sessions involving two or more types of media and between two or more end user devices.

The network may include various types of networks involving multiple types of physical media and transport protocols. For example the network may include a Local Area Network LAN using Ethernet wireless and fiber optic connections. The network may also include the Internet. The network may use various transmission protocols such as Real time Transfer Protocol RTP Session Information Protocol SIP and Hypertext Transfer Protocol HTTP to transmit data in the form of packets between user devices . The network may also include mobile data networks such as Long Term Evolution LTE networks. The scope of embodiments is not limited to any particular network technology for use as or in network .

The user devices may include a variety of different devices such as desktop computers laptop computers tablet computing devices mobile smart phones and others. Different devices may have different media capabilities. For example desktop computers laptop computers and some tablet computing devices may have the capability of sharing the desktop with another device. But smart phones may not have such capability.

Each device has a multimedia communication application installed thereon. The multimedia communication application provides users of their respective devices with the tools to communicate with each other using various types of media. Thus the multimedia communication application is designed for use with various types of protocols for different types of media. As described above such protocols may include but are not limited to RTP SIP HTTP and SMS.

Each device may be associated with a specific user . For example the first device is associated with the first user the second device is associated with the second user the third device is associated with the third user and the fourth device is associated with the fourth user . In one example each user is associated with a unique identification string such as a SIP username. Thus when a user of one device wishes to contact another user he or she can use that user s unique identification string to make such contact. The conversation manager can associate a user s unique identification string with a protocol address associated with that user s device. For example the conversation manager may associate a user s unique identification number with a specific Media Access Control MAC address or an Internet Protocol IP address.

In some examples a user has an account registered with the conversation manager . The user may access his or her account through any device having the multimedia communication application installed thereon. When a user logs in through the multimedia communication application of a specific device the conversation manager can register that device with the unique identification number for that user. Thus when anyone attempts to start a multimedia conversation with that user the packet stream will be directed to the proper device. Furthermore although not shown herein a single user may be associated with or logged in at more than one device at a time.

The conversation manager may maintain a database of ongoing and previous conversations. Each conversation may be represented by a data structure that includes a unique conversation identifier such as a conversation number. The data structure may also indicate the users involved the devices being used by those users and the capabilities of those devices. In one example the data structure also indicates the types of media involved and the protocols used to transmit those different types of media over the network .

According to certain illustrative examples the client system includes a memory which may include software such as the client communication application . The client system also includes a processor a network interface and a user interface .

The memory may be one of several different types of memory. Some types of memory such as non volatile types of memory typically have large storage volume but relatively slow performance. Volatile memory such as those used for Random Access Memory RAM are optimized for speed and are often referred to as working memory. The server memory may also include various types of memory such as volatile or non volatile memory. In some embodiments the software is stored as computer readable code in memory and executed by processors and respectively.

The client system also includes a processor for executing software and using or updating data stored in memory . The software may include an operating system and various other software applications. In addition to the communication application the client device may include other software such as other communication applications which may interface with the communication application and other productivity applications such as word processing and web browsing.

The user interface may include a number of input devices such as a mouse touchpad or touchscreen that allow the user to interact with a GUI. The user interface may also include a number of different types of output devices such as a monitor or a touchscreen. The user interface allows the user to interact with the client system .

The network interface may include hardware and software that allows the client system to communicate with other devices over a network . The network interface may be designed to communicate with the network through hardwire media or wireless media as appropriate. Examples of networks for use in system include the Internet a LAN a cellular network or any other appropriate network.

According to certain illustrative examples the server system includes a memory and a processor . The memory may have stored thereon the conversation manager application . The server system also includes a network interface for communicating with other devices such as the client system .

The conversation manager application may be similar to the conversation manager described above. The implementation of the features described above may be distributed between the server side application and the client side application in a variety of ways.

The contact list displays a list of contact objects . Each contact object represents another user having an account with the multimedia communication system. In this example a first contact is represented by a first contact object a second contact is represented by a second contact object a third contact is represented by a third contact object a fourth contact is represented by a fourth contact object and a fifth contact is represented by a fifth contact object . The contact list may be specific to the operating user. Each specific user may have a different set of contacts with which he or she communicates. In some embodiments the contact list may be shared among a group of users such as employees of a company.

The conversation container is a region within the graphical user interface that represents any ongoing communication sessions between other users. In this example the conversation container is an active object within interface and the operating user interacts with the container to manage conversations as described below. As mentioned above a multimedia conversation includes a communication between two or more users and involving two or more media types. Thus the appearance of the conversation container will depend on the nature of the present conversation.

In the present example the multimedia conversation includes audio and video communication and chat communication . Thus the conversation container displays the video stream to the operating user. Other combinations of conversation media may be used as well. For example a conversation may include voice and screen sharing or video and document sharing. Other combinations of media are contemplated as well.

The conversation toolbar may provide the user with a number of selectable objects related to the conversation represented by the conversation container . For example the user may select an object on the toolbar to initiate or terminate communication with various users. The user may select an object on the toolbar to increase or lower volume. The operating user may further add new media types or new users to the present conversation by selecting an object from the toolbar .

In this example the first type communication session is between the first device and a first endpoint . The second type communication session is between the first device and a second endpoint . In some examples both endpoints correspond to the same device. For instance end points may represent communication applications. Specifically a single device such as a laptop computer or desktop computer is being used to engage in the multimedia conversation. In some examples however the two endpoints may be on two separate devices. For example the first endpoint may be a laptop computer and the second endpoint may be a mobile smartphone. Both the laptop and the mobile smartphone may be used simultaneously by the same user.

As described above the conversation manager is responsible for establishing communication sessions between multiple parties. Thus the conversation manager establishes the communication sessions between the first device and the endpoints . Additionally the conversation manager handles the transfer of the multimedia conversation from the first device to the second device .

Establishing a communication may include using e.g. SIP to set up an RTP audio video stream. SIP works in concert with other protocols and is generally involved in the signaling portion of a communication session. SIP clients typically use TCP or UDP to connect to SIP servers and other SIP endpoints. SIP is often used in setting up and tearing down voice or video calls. In this example the voice and video stream communications in SIP applications are carried over another application protocol the Real time Transport Protocol RTP . Parameters port numbers protocols codecs for these media streams are defined and negotiated using the Session Description Protocol SDP which is transported in the SIP packet body. However the scope of embodiments includes any appropriate signaling protocol and media protocol for multimedia conversation.

In the present example the first device is a desktop computer. An operating user of the desktop computer is engaged in the multimedia conversation involving the first type communication session and the second type communication session with a different user associated with the endpoints . The operating user wishes to switch the multimedia conversation from the first device to the second device which in this example is a tablet device.

According to the present example a request is sent to the conversation manager . The request indicates that the user wishes to switch from the first device to the second device. In one example the request is sent from the first device. For example the user may select an option within the communication application of the first device that selects a list of registered devices eligible for transfer. In response to such action the request is sent form the first device to the conversation manager.

In some examples the request is sent from the second device to the conversation manager . This may be done by the operating user selecting a particular command within a communication application of the second device . In one example the user may enter a code into the communication application of the second device. This code may be unique to the present conversation. This code may be provided to the user through the communication application of the first device .

In one example the sending of the request is triggered by the second device coming into proximity with the first device . For example both devices may have Near Field Communication NFC tags. NFC is a method of transferring data between two endpoints in close proximity to each other. In the present example the NFC tags may transfer any data that may be used to identify the device and indicate that the user wishes to switch to such a device. For example by moving the NFC tag of the second device in close proximity with the NFC tag of the first device various data may be communicated from the second device to the first device . This data can then be used to send a request to the conversation manager to transfer the multimedia conversation. Such data may include network addresses such as Media Access Control MAC addresses or Internet Protocol IP addresses. Other proximity mechanisms such as Radio Frequency Identification RFID tags may be used as well.

In some examples the second device may not have all of the capabilities of the first device. In one example the first type communication session is an audio video communication session and the second type communication session is a screen sharing communication session. Additionally the first device is a desktop computing device and the second device is a mobile phone. Furthermore the mobile phone is incapable of document sharing. But the mobile phone is capable of audio video streaming. Thus when the multimedia conversation transfers from the first device to the second device only the audio video communication session is transferred. The operating user is thus no longer part of the screen sharing aspect of the multimedia conversation.

In some cases however when the operating user again switches the conversation to a device that does have screen sharing capability the screen sharing aspect of the multimedia conversation can be automatically reestablished. For example the first device may be a user s work computer at the user s work office. The user may wish to transfer a multimedia conversation to a mobile device while the user travels home. Upon arriving at home the user may transfer the multimedia conversation from the mobile device to the user s home computer which does have screen sharing capability. The user may then be prompted to determine whether reestablishment of the screen sharing communication session is desired. If the user so chooses the screen sharing capability may be reestablished.

In this example the first user has moderator rights. This is indicated by the highlighted box associated with the first device . Moderator rights include a variety of privileges associated with moderating a multimedia conversation. For example the moderator may have the ability to invite other users to the multimedia conversation or remove current participants to the multimedia conversation. The moderator may have the ability to add additional media types to the conversation. For example the moderator can add a screen sharing type of media to a conversation that presently includes voice and video communication.

In some examples the user of the first device may wish to switch the conversation to a different device. But it may also be the case that device to which the first user wishes to switch does not have the capabilities for moderating the conversation. For example the first device is a desktop computer and the first type of media is a voice call and the second type of media is a screen sharing function. The first user may wish to switch the conversation to his or her mobile phone. But the mobile phone is not capable of handling the screen sharing function. Thus moderator rights can be passed to another user.

After the moderator rights have been transferred the first user can switch to his or her replacement device such as a mobile phone. But because the replacement device does not have the capability to handle the second type of media the first user is now involved only in the first type of media aspect of the conversation.

According to the present example at step the conversation manager establishes a multimedia conversation between the first device and the second device. The multimedia conversation includes at least two different types of media. For example the multimedia conversation may include audio video conference communication and document sharing communication.

In one example at step the first device from which the multimedia conversation is being transferred sends a request to the conversation manager the request being to transfer the conversation from the first device to the second device. The request may be sent in response to a user command from the first device. For example the user of the first device may have the option to select a list of registered devices that are eligible for transferring the conversation.

Alternatively in one example at step the request to transfer the conversation is sent from the second device. Thus the multimedia conversation is grabbed from the first device. For example in response to a user command on the second device the second device indicates to the conversation manager that is available to take a conversation. The conversation manager can then determine if the registered user of the second device is currently involved in a conversation on a different device. If so the conversation can be transferred from that different device e.g. the first device to the second device.

Additionally at step the second device publishes its capabilities to the conversation manager. This allows the conversation manager to determine what data streams from the multimedia conversation should be set up on the new device. In some cases not all aspects of the conversation may be able to transfer to the second device. As described above the second device to which the conversation is being transferred may not have the capabilities to handle certain aspects of the call. For example the second device may be capable of voice but not video. Thus only the voice aspect of the multimedia conversation is transferred to the second device in such cases.

At step the conversation manager receives the capabilities of the second device. The conversation manager can then determine what types of media should be transferred to the second device. In some cases each media type involved in the multimedia conversation can be transferred. In some cases only a subset of the media types involved in the multimedia conversation can be transferred.

At step the conversation manager causes the data streams for the different types of media to be transmitted to the second device. In one example such data streams are duplicate data streams of the data streams currently being transmitted to the first device. At step the second device receives the data streams and thus becomes a participant in the multimedia conversation.

At step the second device acknowledges successful receipt of each of the data streams for each protocol involved with the different types of media. At step after receiving acknowledgement from the second device the conversation manager causes the data streams being transmitted to the first device to discontinue transmission. At step the first device ceases to receive the transmission of data streams and thus is no longer part of the multimedia conversation. The user can now continue the multimedia conversation on the second device. Using principles described herein a user can seamlessly transfer a multimedia conversation i.e. a conversation involving multiple media types and multiple protocols between devices during an ongoing conversation.

Some examples of processing systems described herein may include non transitory tangible machine readable media that include executable code that when run by one or more processors e.g. processor may cause the one or more processors to perform the processes of method as described above. Some common forms of machine readable media that may include the processes of method are for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge and or any other medium from which a processor or computer is adapted to read.

Although illustrative embodiments have been shown and described a wide range of modification change and substitution is contemplated in the foregoing disclosure and in some instances some features of the embodiments may be employed without a corresponding use of other features. One of ordinary skill in the art would recognize many variations alternatives and modifications. Thus the scope of the invention should be limited only by the following claims and it is appropriate that the claims be construed broadly and in a manner consistent with the scope of the embodiments disclosed herein.

