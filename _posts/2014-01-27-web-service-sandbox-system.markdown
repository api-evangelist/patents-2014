---

title: Web service sandbox system
abstract: A web service sandbox system. The web service sandbox system provides a secure mechanism with little to no risk to an origination domain hosting a user agent for the user agent to retrieve content from a potentially insecure web service hosted in another domain and using JSONP to bypass same-origin policy restrictions. The user agent posts a command message to a separate quarantined web session of a sandbox service acting as intermediary between the user agent web session and the web service. The sandbox service makes the actual call to and parses the response from the web service. Scripts from the response are executed only in the quarantined web session of the sandbox service. The resulting “safe” content obtained from the web service by the sandbox service is returned to the user agent where it may be rendered.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09349000&OS=09349000&RS=09349000
owner: Microsoft Technology Licensing, LLC
number: 09349000
owner_city: Redmond
owner_country: US
publication_date: 20140127
---
There is often a need for a web application operating in a first domain to request information from a second domain. This is referred to as a cross domain request. Due to security concerns almost all client side scripting languages e.g. JavaScript have a same origin policy. The XMLHttpRequest XHR application programming interface API available to various programming languages to make requests and receive responses also implements the same origin policy. The same origin policy prevents the originating domain from sending requests to a different domain and receiving a response. More specifically the same origin policy allows free access to the document object model DOM of a resource e.g. a web page or web service only if the target i.e. destination resource has the same host domain protocol and port number as the originating resource and prevents access to the DOM of a destination resource hosted in a different domain i.e. having a different host protocol or port than the originating resource.

A number of techniques to avoid the limitations imposed by the same origin policy are available. Cross origin resource sharing CORS is a draft standard that extends HTTP with new headers that allow a destination resource to explicitly specify the originating domains that can make requests to the server. While the proposed standard allows the use of a wildcard when specifying the originating domains to allow access from any domain this introduces other limitations that may not be acceptable in some situations. For example the use of the wildcard value accepting any domain does not allow the request to supply credentials i.e. secure socket layer SSL certificates or cookies.

JavaScript Object Notation with Padding JSONP allows cross domain requests without requiring the originating domain to be explicitly authorized by the destination resource. The JSONP response is typically JavaScript code that invokes a function call on JavaScript Object Notation JSON data. In other words the JSONP response is a wrapper around the JSON data. This is accomplished by including a script element in the JSONP response that is dynamically injected into a hypertext markup language HTML document and loads the JSON data from the destination resource when executed in the originating domain. However the use of JSONP puts the originating domain at risk. If the destination resource has any vulnerability that allows script code injection the destination resource may be compromised e.g. by malicious script code . When the script element in the response is executed the originating domain is subject to attack from the malicious code.

It is with respect to these and other considerations that the present invention has been made. Although relatively specific problems have been discussed it should be understood that the embodiments disclosed herein should not be limited to solving the specific problems identified in the background.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description section. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Embodiments of a web service sandbox system providing a user agent with a secure mechanism to retrieve content from a web service hosted in another domain that uses JSONP encoding to bypass same origin policy restrictions and whose security cannot be assured with little to no risk to the origination domain hosting the user agent. The user agent includes an event handler i.e. event listener a message poster a message listener and a frame element such as an inline frame element e.g. an iFrame element . The event listener detects a user action that involves making a request to a supported web service. When the event listener determines that interaction with a supported web service has been initiated the event listener invokes the message poster and passes the event arguments such as but not limited to the action the search term and the destination web service. The message poster posts a message with the appropriate arguments to the sandbox service. In various embodiments the message poster uses a PostMessage providing a controlled mechanism to securely circumvent the same origination restriction and safely enable cross origin cross document communication.

A sandbox service running on a sandbox device serves as an intermediary between the user agent and the web service. The sandbox service includes a message listener a message poster a requester and a JSONP response parser. The sandbox service message listener receives and processes the message posted by the user agent and invokes the requester with the appropriate information from the received message. The requester then makes a web service call to the web service. The response parser processes the JSONP response from the web service. In various embodiments the script elements are interpreted in a secure environment. The content of the response without the script elements is packaged or re encoded by the response parser and the sandbox message poster is invoked. The content may be re encoded as JSON data. The sandbox service may include a frame element such as an inline frame element.

The web session associated with the user agent is separate from the web session associated with the sandbox service. In other words scripts executed in the sandbox service web session do not have access to and cannot affect the user agent session. The sandbox service web session serves as buffer between the user agent and the web service. If the web service is compromised malicious and or harmful scripts may gain access to the sandbox service web session but the user agent web session and the user s system remain secure because the sandbox service restricts passing script elements back to the user agent.

Various embodiments are described more fully below with reference to the accompanying drawings which form a part hereof and which show specific exemplary embodiments. However embodiments may be implemented in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of the embodiments to those skilled in the art. Embodiments may be practiced as methods systems or devices. Accordingly embodiments may take the form of a hardware implementation an entirely software implementation or an implementation combining software and hardware aspects. The following detailed description is therefore not to be taken in a limiting sense.

Embodiments of a web service sandbox system are described herein and illustrated in the accompanying figures. The web service sandbox system provides a secure mechanism with little to no risk to an origination domain hosting a user agent for the user agent to retrieve content from a potentially insecure web service hosted in another domain and using JSONP to bypass same origin policy restrictions. The user agent posts a command message to a separate web session of a sandbox service acting as intermediary between the user agent web session and the web service. The sandbox service makes the actual call to and parses the response from the web service. Scripts from the response are executed only in the quarantined web session of the sandbox service. The resulting safe content obtained from the web service by the sandbox service is returned to the user agent where it may be rendered.

The illustrated embodiment shows one non limiting example of the user agent operating as an add in to an associated word processing application . In various embodiments the user agent includes HTML pages and optionally scripts that provide the user interface. The exemplary user interface provides a search box and a search button in the user agent that may be used to initiate a user action ultimately executed against the web service. The user interface may vary depending upon factors such as but not limited to the user agent and the associated application. The user interface may also allow user actions against the web service to be initiated from the associated application. For example the user interface may permit the user to highlight a term in document and select a search action from a menu such as but not limited to the associated application menu bar a right click menu accessed using a mouse or a radial menu accessed through a touch gesture e.g. a long press .

The web service may be and typically is operated by a third party. Web service transactions are through an interface described in a computer readable format such as the Web Service Definition Language WSDL that defines the access point s method s and other specifications of the web service or an application programming interface API . One non limiting example of a web service that may be accessed by the user agent is the Wikipedia web service accessed through the MediaWiki API. The web service interface accepts messages specifying input arguments e.g. actions and returns responses that may be used by the requesting client e.g. content . The messages are written using data exchange formats such as but not limited to the Extensible Markup Language XML JavaScript Object Notation JSON and JavaScript Object Notation with Padding JSONP . The messages are typically sent over the Internet using transport protocols such as but not limited to Hypertext Transfer Protocol HTTP and Hypertext Transfer Protocol Secure HTTPS . The web service may be a Representational State Transfer REST compliant service with a uniform set of methods or an arbitrary service with an arbitrary set of methods.

A sandbox service running on the client device serves as an intermediary between the user agent and the web service. In various embodiments the sandbox service runs in a frame element e.g. an inline frame of an HTML page from the user agent and includes HTML pages and scripts used to process requests received from the user agent and responses received from the web service. The user agent the sandbox service and the web service are hosted in different domains the origination domain the intermediate domain and the destination domain respectively. The intermediate domain and therefore any potentially harmful scripts being processed by the sandbox service do not have access to the data and resources of the origination domain such as sign in tokens cache and personal information. An initial request for information from a supported web service made by the user agent is sent to the sandbox service using a cross domain call. One example of a suitable cross domain call is a PostMessage function. The sandbox service makes a call to the web service based on the initial request and receives the response from the web service. The sandbox service then processes the response and generates a new message containing the substantive content that is sent to the user agent. The message returned to the user agent by the sandbox is free from any potentially malicious elements.

The client device and the destination device communicate through the sandbox service over at least one computer network such as but not limited to the Internet an intranet a local area network or a wide area network. The client device and the destination device are all computing devices. Examples of suitable computing devices for implementing the client device include but are not limited to desktop computers laptops tablet or surface computers smart phones and smart appliances. The user agent and the sandbox service may be executed on the same computing device in different process spaces.

The user agent includes an event handler i.e. event listener a sandbox interaction component that handles communications with the sandbox service and a user interface renderer . The sandbox interaction component includes a message poster and a message listener . The event listener detects user actions that involve making requests to a supported web service. The user interface renderer is responsible for displaying the user interface that allows the user to make the request to the supported web service and to display the response from the web service. The manner in which the user action is invoked may vary based upon the user agent the associated application and the type of user interface. For example the user may enter a search term into a search box and initiate a search by activating a search button. Alternatively the user may highlight a term in document and select a search option through a right click action or a touch gesture. The message listener may optionally share information with the associated application allowing the response to be consumed and used by the associated application. For example the associated application may paste content received from the web service directly into the document created with the associated application.

When interaction with a supported web service has been initiated the event listener invokes the message poster and provides the event arguments such as but not limited to the action the search term and the destination web service as represented by data flow arrow A. The message poster posts a message with the appropriate arguments to the sandbox service as represented by data flow arrow B. The message may be in a format that may be understandable by the web service or the message may be in an intermediate format that will be understood by the sandbox service and translated into an appropriate request format for use with the web service. For example the message may be a parameterized uniform resource locator URL for retrieving data from a web service or the message may be one or more parameters such as a command e.g. callService and corresponding arguments e.g. service name service address or search terms . In various embodiments the message poster uses a PostMessage function provided by Java JavaScript or a web API. The PostMessage method provides a controlled mechanism to securely circumvent the same origination restriction and safely enable cross origin cross document communication.

The sandbox service includes a user agent interaction component and a web service interaction component . The user agent interaction component cooperates with the sandbox interaction component to provide two way communication between the user agent and the sandbox service . The user agent interaction component includes a message listener and a message poster . The web service interaction component cooperates with the sandbox interaction component to provide two way communication between the sandbox service and the web service. The web service interaction component includes the message listener and a response parser . In various embodiments the response parser is a JSONP parser and interpreter.

The sandbox service message listener receives and processes the message posted by the user agent and makes a web service call to the web service with the appropriate information from the received message as represented by data flow arrow C. For example the sandbox service message listener may generate a parameterized uniform resource locator URL for retrieving data from a web service. The response parser receives the response from the web service as represented by data flow arrow D. The response parser parses out data elements and interprets any script elements. In various embodiments the script elements are interpreted in a secure environment such as a quarantined web session i.e. a sandbox . Once the content has been obtained from the web service and all script elements have been executed in the sandbox the content without any script elements is packaged or re encoded by the response parser and the sandbox message poster is invoked. The content may be re encoded as JSON data. The message poster redirects the message to the user agent as represented by data flow arrow E. In various embodiments the sandbox message poster uses a PostMessage function to return serialized JSON data containing the data i.e. content retrieved from the web service. The user agent message listener may optionally parse the message e.g. the serialized JSON data without evaluating or interpreting it and only allow non script elements to be rendered providing an additional layer of defense. Because access to the sandbox service is limited and the response is processed by the sandbox service before being made available to the user agent the risk of malicious content that could threaten the integrity of the origination domain is minimal to non existent.

The web session associated with the user agent is separate from the web session associated with the sandbox service. In other words scripts executed in the sandbox service web session do not have access to and cannot affect the user agent session. The sandbox service web session serves as buffer between the user agent and the web service. In the event that the web service has been compromised malicious and or harmful scripts may gain access to the sandbox service web session but the user agent web session and the user s system remain secure because the sandbox service restricts passing script elements back to the user agent.

A message receipt operation receives the message at the sandbox service endpoint i.e. the sandbox service message listener and processes the message. In various embodiments the sandbox service message listener filters messages based on a whitelist of approved domains. The message or the relevant information e.g. parameters such as the keyword being searched from the message is passed on to the requester. A web service request operation makes the actual request to the web service. This may involve addressing the message posted by the user agent to the web service endpoint reformatting the message to be acceptable by the web service or generating a new request based on the message posted by the user agent. Because the sandbox service is hosted in different domain than the web service the same origin policy restriction constrains the interaction between the sandbox and the web service. In various embodiments the web service provides a JSONP response allowing cross domain communication on its own initiative or because the request specifies JSONP for the response.

A response parsing operation parses and interprets the response from the web service. In various embodiments the web service responds with a JSONP response. The script elements may be dynamically inserted into the document being compiled by the sandbox service and executed against JSON data at the web service in order to bypass the same origin policy restriction. Because of the potential security risks associated with the use JSONP a threat mitigation operation works to eliminate those potential security risks. Ultimately the threat mitigation operation obtains the content e.g. the JSON encoded data from the web service by interpreting and executing the script elements of the JSONP response. The safe content i.e. non script content is then re encoded without any script elements for transfer to the user agent. For example the non script HTML elements may be re encoded as a serialized JSON payload that is returned using the PostMessage function and rendered by the user agent. The ultimate output of the response parsing operation is the content received from the web service in non script HTML elements that pose no risk of malicious code execution when rendered by the user agent.

In a response posting operation the response parser posts a message from the frame element e.g. the inline frame containing the sandbox service containing the encoded data to the parent HTML page i.e. the user agent . A response receipt operation receives the message from the sandbox service at the user agent message listener and processes the response message as necessary. For example the user agent endpoint may execute the parse the encoded data to extract the content without interpreting or executing the encoded data. In various embodiments the sandbox service message listener filters messages based on a whitelist of approved domains. A rendering operation presents the content in the user agent for viewing by the user.

Unlike a persistent and publicly available web service that may be infected with malicious code access to the sandbox service is limited. Further if the sandbox service uses virtual machines any malicious code is discarded when the virtual machine is uninstantiated. The more frequently that the virtual machines are refreshed the risk of potential threats decreases. Further the content provided by the sandbox server contains few if any script elements.

The subject matter of this application may be practiced in a variety of embodiments as systems devices and other articles of manufacture or as methods. Embodiments may be implemented as hardware software computer readable media or a combination thereof. The embodiments and functionalities described herein may operate via a multitude of computing systems including without limitation desktop computer systems wired and wireless computing systems mobile computing systems e.g. mobile telephones netbooks tablet or slate type computers notebook computers and laptop computers hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers and mainframe computers.

User interfaces and information of various types may be displayed via on board computing device displays or via remote display units associated with one or more computing devices . For example user interfaces and information of various types may be displayed and interacted with on a wall surface onto which user interfaces and information of various types are projected. Interaction with the multitude of computing systems with which embodiments of the invention may be practiced include keystroke entry touch screen entry voice or other audio entry gesture entry where an associated computing device is equipped with detection e.g. camera functionality for capturing and interpreting user gestures for controlling the functionality of the computing device and the like.

As stated above a number of program modules and data files may be stored in the system memory . While executing on the processing unit the software applications may perform processes including but not limited to one or more of the stages of the sandboxing method . Other program modules that may be used in accordance with embodiments of the present invention may include electronic mail and contacts applications word processing applications spreadsheet applications database applications slide presentation applications drawing or computer aided application programs etc.

Furthermore embodiments of the invention may be practiced in an electrical circuit comprising discrete electronic elements packaged or integrated electronic chips containing logic gates a circuit utilizing a microprocessor or on a single chip containing electronic elements or microprocessors. For example embodiments of the invention may be practiced via a system on a chip SOC where each or many of the illustrated components may be integrated onto a single integrated circuit. Such an SOC device may include one or more processing units graphics units communications units system virtualization units and various application functionality all of which are integrated or burned onto the chip substrate as a single integrated circuit. When operating via an SOC the functionality described herein with respect to the software applications may be operated via application specific logic integrated with other components of the computing device on the single integrated circuit chip . Embodiments of the invention may also be practiced using other technologies capable of performing logical operations such as for example AND OR and NOT including but not limited to mechanical optical fluidic and quantum technologies. In addition embodiments of the invention may be practiced within a general purpose computer or in any other circuits or systems.

The computing device may also have one or more input device s such as a keyboard a mouse a pen a sound input device a touch input device etc. The output device s such as a display speakers a printer etc. may also be included. The aforementioned devices are examples and others may be used. The computing device may include one or more communication connections allowing communications with other computing devices . Examples of suitable communication connections include but are not limited to RF transmitter receiver and or transceiver circuitry universal serial bus USB parallel and or serial ports.

The term computer readable media as used herein may include computer storage media. Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures or program modules. The system memory the removable storage device and the non removable storage device are all examples of computer storage media i.e. memory storage. Computer storage media may include random access memory RAM read only memory ROM electrically erasable read only memory EEPROM flash memory or other memory technology compact disc read only memory CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other article of manufacture which can be used to store information and which can be accessed by the computing device . Any such computer storage media may be part of the computing device .

One or more application programs may be loaded into the memory and run on or in association with the operating system . Examples of the application programs include phone dialer programs e mail programs personal information management PIM programs word processing programs spreadsheet programs Internet browser programs messaging programs and so forth. The system also includes a non volatile storage area within the memory . The non volatile storage area may be used to store persistent information that should not be lost if the system is powered down. The application programs may use and store information in the non volatile storage area such as e mail or other messages used by an e mail application and the like. A synchronization application not shown also resides on the system and is programmed to interact with a corresponding synchronization application resident on a host computer to keep the information stored in the non volatile storage area synchronized with corresponding information stored at the host computer. As should be appreciated other applications may be loaded into the memory and run on the mobile computing device including software applications described herein.

The system has a power supply which may be implemented as one or more batteries. The power supply might further include an external power source such as an AC adapter or a powered docking cradle that supplements or recharges the batteries.

The system may also include a radio that performs the function of transmitting and receiving radio frequency communications. The radio facilitates wireless connectivity between the system and the outside world via a communications carrier or service provider. Transmissions to and from the radio are conducted under control of the operating system . In other words communications received by the radio may be disseminated to the application programs via the operating system and vice versa.

The visual indicator may be used to provide visual notifications and or an audio interface may be used for producing audible notifications via the audio transducer . In the illustrated embodiment the visual indicator is a light emitting diode LED and the audio transducer is a speaker. These devices may be directly coupled to the power supply so that when activated they remain on for a duration dictated by the notification mechanism even though the processor and other components might shut down for conserving battery power. The LED may be programmed to remain on indefinitely until the user takes action to indicate the powered on status of the device. The audio interface is used to provide audible signals to and receive audible signals from the user. For example in addition to being coupled to the audio transducer the audio interface may also be coupled to a microphone to receive audible input such as to facilitate a telephone conversation. In accordance with embodiments of the present invention the microphone may also serve as an audio sensor to facilitate control of notifications as will be described below. The system may further include a video interface that enables an operation of an on board camera to record still images video stream and the like.

A mobile computing device implementing the system may have additional features or functionality. For example the mobile computing device may also include additional data storage devices removable and or non removable such as magnetic disks optical disks or tape. Such additional storage is illustrated by the non volatile storage area .

Data information generated or captured by the mobile computing device and stored via the system may be stored locally on the mobile computing device as described above or the data may be stored on any number of storage media that may be accessed by the device via the radio or via a wired connection between the mobile computing device and a separate computing device associated with the mobile computing device for example a server computer in a distributed computing network such as the Internet. As should be appreciated such data information may be accessed via the mobile computing device via the radio or via a distributed computing network. Similarly such data information may be readily transferred between computing devices for storage and use according to well known data information transfer and storage means including electronic mail and collaborative data information sharing systems.

The description and illustration of one or more embodiments provided in this application are intended to provide a complete thorough and complete disclosure the full scope of the subject matter to those skilled in the art and not intended to limit or restrict the scope of the invention as claimed in any way. The embodiments examples and details provided in this application are considered sufficient to convey possession and enable those skilled in the art to practice the best mode of claimed invention. Descriptions of structures resources operations and acts considered well known to those skilled in the art may be brief or omitted to avoid obscuring lesser known or unique aspects of the subject matter of this application. The claimed invention should not be construed as being limited to any embodiment example or detail provided in this application unless expressly stated herein. Regardless of whether shown or described collectively or separately the various features both structural and methodological are intended to be selectively included or omitted to produce an embodiment with a particular set of features. Further any or all of the functions and acts shown or described may be performed in any order or concurrently. Having been provided with the description and illustration of the present application one skilled in the art may envision variations modifications and alternate embodiments falling within the spirit of the broader aspects of the general inventive concept embodied in this application that do not depart from the broader scope of the claimed invention.

