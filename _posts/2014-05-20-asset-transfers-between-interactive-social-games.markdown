---

title: Asset transfers between interactive social games
abstract: A method and system to transfer assets between interactive social games is described. In some embodiments, the method generates a visual expression of a transfer mechanism in a first computer-implemented game. The method further generates the visual expression of the transfer mechanism in a second computer-implemented game. The transfer mechanism is capable of transferring an in-game asset from the first computer-implemented game to the second computer-implemented game. The method transfers the in-game asset from the first computer-implemented game to the second computer-implemented game using the transfer mechanism.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09387403&OS=09387403&RS=09387403
owner: Zynga Inc.
number: 09387403
owner_city: San Francisco
owner_country: US
publication_date: 20140520
---
This application is a continuation of U.S. patent application Ser. No. 13 277 864 filed on Oct. 20 2011 which is incorporated by reference herein in its entirety.

The present disclosure generally relates to games and applications in general and in particular embodiments to computer implemented online social games.

Many games include various types of in game assets that a player can obtain for use within the game. For example a player may acquire game points gold coins experience points character levels character attributes virtual cash game keys tools energy or other in game items of value. In many games there are also various types of in game obstacles that a player needs to overcome to advance within the game. In game obstacles can include tasks puzzles opponents levels gates actions and so forth. In some games a goal of the game includes acquiring certain in game assets which are then used to complete in game tasks or to overcome certain in game obstacles.

An electronic social networking system typically operates with one or more social networking servers providing interaction between users such that a particular user can specify other users of the social networking system as friends. A collection of users and the friend connections between users can form a social graph that can be traversed to find additional connections between users much like a graph of nodes connected by edges can be traversed.

Example systems and methods to transfer assets between interactive social games are described. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of example embodiments. It will be evident however to one skilled in the art that the described systems and methods may be practiced without these specific details.

The systems and methods described herein allow players to transfer in game assets to other players playing different games. An in game asset refers to any in game item skill capability or other game related element that has value in at least one game. Further an in game asset may include an in game item skill capability or other game related element that is useful or has utility in at least one game. Example in game assets include game points gold coins experience points character levels character attributes virtual cash game keys tools vehicles structures energy fuel food or other in game items of value usefulness or utility. A particular in game asset may have value in any number of different games although the value may vary from one game to another. For example a particular farming tool may have greater value in a farming game than in a building development game.

Social networking system is a network addressable computing system that can host one or more social graphs. Social networking system can generate store receive and transmit social networking data. Social networking system can be accessed by the other components of system either directly or via network . Game networking system is a network addressable computing system that can host one or more online games. Game networking system can generate store receive and transmit game related data such as for example game account data game input game state data and game displays. Game networking system can be accessed by the other components of system either directly or via network . Player may use client system to access send data to and receive data from social networking system and game networking system . Client system can access social networking system or game networking system directly via network or via a third party system. As an example and not by way of limitation client system may access game networking system via social networking system . Client system can be any suitable computing device such as a personal computer laptop cellular phone smart phone computing tablet and the like.

Although illustrates a particular number of players social networking systems game networking systems client systems and networks this disclosure contemplates any suitable number of players social networking systems game networking systems client systems and networks . As an example and not by way of limitation system may include one or more game networking systems and no social networking systems . As another example and not by way of limitation system may include a system that comprises both social networking system and game networking system . Moreover although illustrates a particular arrangement of player social networking system game networking system client system and network this disclosure contemplates any suitable arrangement of player social networking system game networking system client system and network .

The components of system may be connected to each other using any suitable connections . For example suitable connections include wireline such as for example Digital Subscriber Line DSL or Data Over Cable Service Interface Specification DOCSIS wireless such as for example Wireless Fidelity Wi Fi or Worldwide Interoperability for Microwave Access WiMAX or optical such as for example Synchronous Optical Network SONET or Synchronous Digital Hierarchy SDH connections. In particular embodiments one or more connections each include an ad hoc network an intranet an extranet a VPN a LAN a WLAN a WAN a WWAN a MAN a portion of the Internet a portion of the PSTN a cellular telephone network or another type of connection or a combination of two or more such connections. Connections need not necessarily be the same throughout system . One or more first connections may differ in one or more respects from one or more second connections . Although illustrates particular connections between player social networking system game networking system client system and network this disclosure contemplates any suitable connections between player social networking system game networking system client system and network . As an example and not by way of limitation in particular embodiments client system may have a direct connection to social networking system or game networking system bypassing network .

In an online computer game a game engine manages the game state of the game. Game state comprises all game play parameters including player character state non player character NPC state in game object state game world state e.g. internal game clocks game environment and other game play parameters. Each player controls one or more player characters PCs . The game engine controls all other aspects of the game including non player characters NPCs and in game objects. The game engine also manages game state including player character state for currently active online and inactive offline players.

An online game can be hosted by game networking system which can be accessed using any suitable connection with a suitable client system . A player may have a game account on game networking system wherein the game account can contain a variety of information associated with the player e.g. the player s personal information financial information purchase history player character state game state . In some embodiments a player may play multiple games on game networking system which may maintain a single game account for the player with respect to all the games or multiple individual game accounts for each game with respect to the player. In some embodiments game networking system can assign a unique identifier to each player of an online game hosted on game networking system . Game networking system can determine that a player is accessing the online game by reading the user s cookies which may be appended to HyperText Transfer Protocol HTTP requests transmitted by client system and or by the player logging onto the online game.

In particular embodiments player may access an online game and control the game s progress via client system e.g. by inputting commands to the game at the client device . Client system can display the game interface receive inputs from player transmit user inputs or other events to the game engine and receive instructions from the game engine. The game engine can be executed on any suitable system such as for example client system social networking system or game networking system . As an example and not by way of limitation client system can download client components of an online game which are executed locally while a remote game server such as game networking system provides backend support for the client components and may be responsible for maintaining application data of the game processing the inputs from the player updating and or synchronizing the game state based on the game logic and each input from the player and transmitting instructions to client system . As another example and not by way of limitation each time player provides an input to the game through the client system such as for example by typing on the keyboard or clicking the mouse of client system the client components of the game may transmit the player s input to game networking system

In an online multiplayer game players may control player characters PCs while a game engine controls non player characters NPCs and game features. The game engine also manages player character state and game state and tracks the state for currently active i.e. online players and currently inactive i.e. offline players. A player character can have a set of attributes and a set of friends associated with the player character. As used herein the term player character state can refer to any in game characteristic of a player character such as location assets levels condition health status inventory skill set name orientation affiliation specialty and so on. Player characters may be displayed as graphical avatars within a user interface of the game. In other implementations no avatar or other graphical representation of the player character is displayed. Game state encompasses the notion of player character state and refers to any parameter value that characterizes the state of an in game element such as a non player character a virtual object such as a wall or castle and so forth. The game engine may use player character state to determine the outcome of game events while sometimes also considering set or random variables. Generally a player character s probability of having a more favorable outcome is greater when the player character has a better state. For example a healthier player character is less likely to die in a particular encounter relative to a weaker player character or non player character. In some embodiments the game engine can assign a unique client identifier to each player.

In particular embodiments player may access particular game instances of an online game. A game instance is a copy of a specific game play area that is created during runtime. In particular embodiments a game instance is a discrete game play area where one or more players can interact in synchronous or asynchronous play. A game instance may be for example a level zone area region location virtual space or other suitable play area. A game instance may be populated by one or more in game objects. Each object may be defined within the game instance by one or more variables such as for example position height width depth direction time duration speed color and other suitable variables. A game instance may be exclusive i.e. accessible by specific players or non exclusive i.e. accessible by any player . In particular embodiments a game instance is populated by one or more player characters controlled by one or more players and one or more in game objects controlled by the game engine. When accessing an online game the game engine may allow player to select a particular game instance to play from a plurality of game instances. Alternatively the game engine may automatically select the game instance that player will access. In particular embodiments an online game comprises only one game instance that all players of the online game can access.

In particular embodiments a specific game instance may be associated with one or more specific players. A game instance is associated with a specific player when one or more game parameters of the game instance are associated with the specific player. As an example and not by way of limitation a game instance associated with a first player may be named First Player s Play Area. This game instance may be populated with the first player s PC and one or more in game objects associated with the first player. In particular embodiments a game instance associated with a specific player may only be accessible by that specific player. As an example and not by way of limitation a first player may access a first game instance when playing an online game and this first game instance may be inaccessible to all other players. In other embodiments a game instance associated with a specific player may be accessible by one or more other players either synchronously or asynchronously with the specific player s game play. As an example and not by way of limitation a first player may be associated with a first game instance but the first game instance may be accessed by all first degree friends in the first player s social network. In particular embodiments the game engine may create a specific game instance for a specific player when that player accesses the game. As an example and not by way of limitation the game engine may create a first game instance when a first player initially accesses an online game and that same game instance may be loaded each time the first player accesses the game. As another example and not by way of limitation the game engine may create a new game instance each time a first player accesses an online game wherein each game instance may be created randomly or selected from a set of predetermined game instances.

In particular embodiments the set of in game actions available to a specific player may be different in a game instance that is associated with that player compared to a game instance that is not associated with that player. The set of in game actions available to a specific player in a game instance associated with that player may be a subset superset or independent of the set of in game actions available to that player in a game instance that is not associated with him. As an example and not by way of limitation a first player may be associated with Blackacre Farm in an online farming game. The first player may be able to plant crops on Blackacre Farm. If the first player accesses a game instance associated with another player such as Whiteacre Farm the game engine may not allow the first player to plant crops in that game instance. However other in game actions may be available to the first player such as watering or fertilizing crops on Whiteacre Farm.

In particular embodiments a game engine can interface with a social graph. Social graphs are models of connections between entities e.g. individuals users contacts friends players player characters non player characters businesses groups associations concepts etc. . These entities are considered users of the social graph as such the terms entity and user may be used interchangeably when referring to social graphs herein. A social graph can have a node for each entity and edges to represent relationships between entities. A node in a social graph can represent any entity. In particular embodiments a unique client identifier can be assigned to each user in the social graph. This disclosure assumes that at least one entity of a social graph is a player or player character in an online multiplayer game though this disclosure includes any suitable social graph users.

The minimum number of edges needed to connect a player or player character to another user is considered the degree of separation between them. For example where the player and the user are directly connected one edge they are deemed to be separated by one degree of separation. The user would be a so called first degree friend of the player. Where the player and the user are connected through one other user two edges they are deemed to be separated by two degrees of separation. This user would be a so called second degree friend of the player. Where the player and the user are connected through N edges or N 1 other users they are deemed to be separated by N degrees of separation. This user would be a so called Nth degree friend. As used herein the term friend means only first degree friends unless context suggests otherwise.

Within the social graph each player or player character has a social network. A player s social network includes all users in the social graph within Ndegrees of the player where Nis the maximum degree of separation allowed by the system managing the social graph such as for example social networking system or game networking system . In one embodiment Nequals 1 such that the player s social network includes only first degree friends. In another embodiment Nis unlimited and the player s social network is coextensive with the social graph.

In particular embodiments the social graph is managed by game networking system which is managed by the game operator. In other embodiments the social graph is part of a social networking system managed by a third party e.g. Facebook Friendster Myspace . In yet other embodiments player has a social network on both game networking system and social networking system wherein player can have a social network on the game networking system that is a subset superset or independent of the player s social network on social networking system . In such combined systems game network system can maintain social graph information with edge type attributes that indicate whether a given friend is an in game friend an out of game friend or both. The various embodiments disclosed herein are operable when the social graph is managed by social networking system game networking system or both.

As shown in Player has direct connections with several friends. When Player has a direct connection with another individual that connection is referred to as a first degree friend. In social network Player has two first degree friends. That is Player is directly connected to Friend 1 and Friend 2. In a social graph it is possible for individuals to be connected to other individuals through their first degree friends i.e. friends of friends . As described above each edge necessary to connect a player to another user is considered the degree of separation. For example shows that Player has three second degree friends to which he is connected via his connection to his first degree friends. Second degree Friend 1 and Friend 2 are connected to Player via his first degree Friend 1. Second degree Friend 3 is connected to Player via his first degree Friend 2. The limit on the depth of friend connections or the number of degrees of separation for associations that Player is allowed is typically dictated by the restrictions and policies implemented by social networking system

In various embodiments Player can have Nth degree friends connected to him through a chain of intermediary degree friends as indicated in . For example Nth degree Friend 1 is connected to Player via second degree Friend 3 and one or more other higher degree friends. Various embodiments may utilize the distinction between the various degrees of friendship relative to Player .

In particular embodiments a player or player character can have a social graph within an online multiplayer game that is maintained by the game engine and another social graph maintained by a separate social networking system. depicts an example of in game social network and out of game social network . In this example Player has out of game connections to a plurality of friends forming out of game social network . Here Friend 1 and Friend 2 are first degree friends with Player in his out of game social network . Player also has in game connections to a plurality of players forming in game social network . Here Friend 2 Friend 3 and Friend 4 are first degree friends with Player in his in game social network . Additionally Friend 4 is a second degree friend with Player in the in game social network . In some embodiments it is possible for a friend to be in both the out of game social network and the in game social network . Here Friend 2 has both an out of game connection and an in game connection with Player such that Friend 2 is in both Player s in game social network and Player s out of game social network .

As with other social networks Player can have second degree and higher degree friends in both his in game and out of game social networks. In some embodiments it is possible for Player to have a friend connected to him both in his in game and out of game social networks wherein the friend is at different degrees of separation in each network. For example if Friend 2 had a direct in game connection with Player Friend 2 would be a second degree friend in Player s out of game social network but a first degree friend in Player s in game social network. In particular embodiments a game engine can access in game social network out of game social network or both.

In particular embodiments the connections in a player s in game social network can be formed both explicitly e.g. users friend each other and implicitly e.g. the system observes user behaviors and friends users to each other . Unless otherwise indicated reference to a friend connection between two or more players can be interpreted to cover both explicit and implicit connections using one or more social graphs and other factors to infer friend connections. The friend connections can be unidirectional or bidirectional. It is also not a limitation of this description that two players who are deemed friends for the purposes of this disclosure are not friends in real life i.e. in disintermediated interactions or the like but that could be the case.

As shown in multiple players are playing Game 1 and multiple players are playing Game 2. In particular embodiments any number of players can play a specific game. Further players may actively play more than one game. For example one or more players playing Game 1 may also be playing Game 2 as well as any number of other games not shown .

Players and may interact with gaming system using any device and any communication mechanism supported by gaming system . In particular embodiments players and interact with gaming system using a computing device such as a personal computer laptop cellular phone smart phone computing tablet game console set top box portable entertainment device and the like. Players and may communicate with gaming system through for example a wired or wireless communication link using any communication protocol or multiple communication protocols . In particular embodiments players and communicate with gaming system through one or more data communication networks such as the Internet.

As discussed herein the example environment shown in allows players to transfer in game assets to other players playing different games. For example a particular player playing Game 1 may transfer an in game asset from Game 1 to a particular player playing Game 2. This in game asset transfer is facilitated by gaming system . In another example a particular player playing Game 1 may transfer a specific in game asset to multiple players playing Game 2. Additional details regarding the transfer of in game assets between players of different games are discussed herein.

Although two games are shown in in other embodiments gaming system may support any number of different games and facilitate the transfer of in game assets between the different games. Further alternate embodiments may include multiple gaming systems to support multiple different games. In these embodiments the multiple gaming systems communicate with one another as needed to facilitate inter game asset transfer.

Player 2 receives the asset request from Player 1. In response to the asset request Player 2 may choose to provide the requested in game asset to Player 1. As mentioned above the requested in game asset has value in Game 1. In particular embodiments Player 2 already has at least one of the requested in game assets as a result of playing Game 2. In this situation Player 2 can provide one of their accumulated in game assets to Player 1 which removes the in game asset from Player 2 s inventory. In some implementations a player may be limited to providing or requesting a predetermined number of in game assets during a particular time period.

In other embodiments Player 2 does not have the requested in game asset e.g. the asset is not used in Game 2 or Player 2 has not yet acquired the in game asset as a result of playing Game 2 . In this situation the game may allow Player 2 to provide the requested in game asset to Player 1 even though Player 2 does not have the requested in game asset.

In a particular embodiment Player 1 and Player 2 are friends with different gaming interests. Although they both like to play games they prefer different types of games. The systems and methods described herein allow Player 1 and Player 2 to interact with each other while playing games without requiring them to play the same game. Thus the two players can exchange assets to support one another in their respective games while each continues to play the game they prefer.

The example of represents an example in game asset transfer between players of two different games. In alternate embodiments similar procedures are used to by a single player to transfer assets between two games played by that single player. For example a player may transfer virtual currency goods or energy from a first game played by the player to a second game played by the same player. Additionally the player may transfer assets between different versions of the same game e.g. between a first generation of a particular game and a second generation of the same game .

A first user User 1 initiates a transfer mechanism in a first game Game 1 to request an in game asset needed in Game 1 at . In various embodiments the transfer mechanism may be implemented as a vehicle e.g. a train truck boat airplane or space ship a delivery container e.g. a shipping box or envelope a building or structure e.g. a delivery office or a post office a portal e.g. a door or gate or other object associated with the transfer of an in game asset. In a particular example User 1 initiates a transfer mechanism by providing an in game asset request to the transfer mechanism.

Method continues as the transfer mechanism in Game 1 communicates with a corresponding transfer mechanism in Game 2 at . In particular embodiments the transfer mechanisms in Game 1 and Game 2 are implemented in the same manner e.g. both transfer mechanisms are shipping boxes . In other embodiments the transfer mechanism is implemented differently in each game e.g. the Game 1 transfer mechanism is a boat and the Game 2 transfer mechanism is a post office . The communication between the transfer mechanisms includes for example identification of the request the player requesting the asset and the asset associated with the request.

As a result of the communication at the transfer mechanism in Game 2 displays the request to a second user User 2 playing Game 2 at . In particular embodiments the request is displayed graphically in the transfer mechanism. For example if the transfer mechanism is a vehicle the request may be delivered by a vehicle. Alternatively the transfer mechanism may provide a separate visual indicator representing the received request e.g. flashing lights on a vehicle or a message indicator at a delivery office . In other embodiments indication of the request is provided by audible sound or other indicator instead of or in addition to the visual indicator.

User 2 responds to the received request by providing the requested in game asset to the transfer mechanism in Game 2 at . In particular embodiments User 2 deposits a graphical representation of the in game asset such as a coin or tool icon into the transfer mechanism or a receptacle associated with the transfer mechanism. For example User 2 may drag and drop an in game asset onto a train or into an envelope to facilitate a transfer of the in game asset to the requesting user User 1 . In other embodiments User 2 responds to the received request by activating a button icon or other visual indicator that acknowledges User 2 s desire to transfer the in game asset to User 1. In particular embodiments User 2 receives in game currency or other in game asset having value in Game 2 in exchange for providing the requested asset at 510. User 2 may receive a predetermined in game asset or may have the option to select among multiple in game assets. The in game asset provided to User 2 has value in Game 2 but does not necessarily have value in Game 1. In alternate embodiments User 2 does not receive any in game currency or other in game asset in exchange for providing the requested asset to User 1. In these alternate embodiments User 2 is providing the requested in game asset to User 1 as a gift.

Method continues as the transfer mechanism in Game 2 communicates with the corresponding transfer mechanism in Game 1 by indicating that User 2 provided the requested in game asset at 512. In response to this communication the transfer mechanism in Game 1 provides the requested in game asset to User 1 at . In particular embodiments the requested in game asset is provided to User 1 by presenting a visual indicator through for example the transfer mechanism. For example if the transfer mechanism is a boat the visual indicator may include a boat arriving at a port or dock containing the requested in game asset. Alternatively the transfer mechanism may provide a visual indicator e.g. a flashing light or notification message identifying receipt of the requested in game asset.

After the train travels from Game 1 to Game 2 a corresponding train is displayed to User 2 in Game 2 at . This corresponding train displays the in game asset request from User 1 that was generated in Game 1. The in game asset request may appear for example as an item carried by the train or as another indicator that identifies the existence of the request associated with the train to User 2. Method continues as User 2 responds to the displayed train by loading the requested in game asset onto the train and sending the train back to User 1 at . For example User 2 may load the requested in game asset onto the train by dragging and dropping the requested in game asset from an inventory or other asset store and activating a visual indicator to send the train to User 1 in Game 1. Alternatively User 2 may select a visual indicator or perform another activity that loads the requested in game asset onto the train and sends the train to User 1 in Game 1.

After User 2 has loaded the requested in game asset onto the train the train travels from Game 2 to Game 1 at . The train delivers the requested in game asset to User 1 in Game 1 at . In particular embodiments the requested in game asset appears as an item carried by the train. In other embodiments the train includes another indicator that identifies the existence of the in game asset on the train. User 1 can unload or otherwise retrieve the in game asset from the train for example by clicking on the train or performing another activity that makes the in game asset available for use by User 1. In alternate embodiments the in game asset is automatically unloaded from the train and provided to User 1 e.g. placed in User 1 s inventory when the train arrives in Game 1.

Method continues as the user accepts the invitation to play Game 2 at . The user plays Game 2 for a period of time at . The user may play Game 2 immediately after receiving the invitation from the gaming service or at a future time. The user may play Game 2 for a single session or play Game 2 repeatedly during multiple sessions. After the user has played Game 2 during one or more sessions the gaming service analyzes the user s play activity in Game 2 at . For example the gaming service determines whether the user s play activity in Game 2 satisfies one or more requirements associated with earning the in game asset. If the user has earned the in game asset at 712 the gaming service awards the in game asset to the user at for application in Game 1. For example if the user earns seven gold coins based on their game play in Game 2 those gold coins are added to the user s inventory or other asset store in Game 1. In particular embodiments the in game asset is provided to the user through a visual expression of a transfer mechanism of the type discussed herein. If the user has not yet earned the in game asset at the gaming service invites the user at to continue playing Game 2 until the requirements are satisfied to earn the in game asset. For example the gaming service may send the user an email message text message in game message or other communication reminding the user to continue playing Game 2 to earn the in game asset.

Client system can receive and transmit data to and from game networking system . This data can include for example webpages messages game inputs game displays HTTP packets data requests transaction information updates and other suitable data. At some other time or at the same time game networking system can communicate data e.g. game state information game system account information page info messages data requests updates etc. with other networking systems such as social networking system e.g. Facebook Myspace etc. . Client system can also receive and transmit data to and from social networking system . This data can include for example webpages messages social graph information social network displays HTTP packets data requests transaction information updates and other suitable data.

Communication between client system social networking system and game networking system can occur over any appropriate electronic communication medium or network using any suitable communications protocols. For example client system as well as various servers of the systems described herein may include Transport Control Protocol Internet Protocol TCP IP networking stacks to provide for datagram and transport functions. Of course any other suitable network and transport layer protocols can be utilized.

In addition hosts or end systems described herein may use a variety of higher layer communications protocols including client server or request response protocols such as HTTP and other communications protocols such as HTTP S FTP File Transfer Protocol SNMP Simple Network Management Protocol TELNET and a number of other protocols may be used. In addition a server in one interaction context may be a client in another interaction context. In particular embodiments the information transmitted between hosts may be formatted as HyperText Markup Language HTML documents. Other structured document languages or formats can be used such as XML Extensible Markup Language and the like. Executable code objects such as JavaScript and ActionScript can also be embedded in the structured documents.

In some client server protocols such as the use of HTML over HTTP a server generally transmits a response to a request from a client. The response may comprise one or more data objects. For example the response may comprise a first data object followed by subsequently transmitted data objects. In particular embodiments a client request may cause a server to respond with a first data object such as an HTML page which itself refers to other data objects. A client application such as a browser will request these additional data objects as it parses or otherwise processes the first data object.

In particular embodiments an instance of an online game can be stored as a set of game state parameters that characterize the state of various in game objects such as for example player character state parameters non player character parameters and virtual item parameters. In particular embodiments game state is maintained in a database as a serialized unstructured string of text data as a so called Binary Large Object BLOB . When a player accesses an online game on game networking system the BLOB containing the game state for the instance corresponding to the player can be transmitted to client system for use by a client side executed object to process. In particular embodiments the client side executable may be a FLASH based game which can de serialize the game state data in the BLOB. As a player plays the game the game logic implemented at client system maintains and modifies the various game state parameters locally. The client side game logic may also batch game events such as mouse clicks and transmit these events to game networking system . Game networking system may itself operate by retrieving a copy of the BLOB from a database or an intermediate memory cache memcache layer. Game networking system can also de serialize the BLOB to resolve the game state parameters and execute its own game logic based on the events in the batch file of events transmitted by the client to synchronize the game state on the server side. Game networking system may then re serialize the game state now modified into a BLOB and pass this to a memory cache layer for lazy updates to a persistent database.

With a client server environment in which the online games may run one server system such as game networking system may support multiple client systems . At any given time there may be multiple players at multiple client systems all playing the same online game. In practice the number of players playing the same game at the same time may be very large. As the game progresses with each player multiple players may provide different inputs to the online game at their respective client systems and multiple client systems may transmit multiple player inputs and or game events to game networking system for further processing. In addition multiple client systems may transmit other types of application data to game networking system

In particular embodiments a computer implemented game may be a text based or turn based game implemented as a series of web pages that are generated after a player selects one or more actions to perform. The web pages may be displayed in a browser client executed on client system . As an example and not by way of limitation a client application downloaded to client system may operate to serve a set of webpages to a player. As another example and not by way of limitation a computer implemented game may be an animated or rendered game executable as a stand alone application or within the context of a webpage or other structured document. In particular embodiments the computer implemented game may be implemented using Adobe Flash based technologies. As an example and not by way of limitation a game may be fully or partially implemented as a SWF object that is embedded in a web page and executable by a Flash media player plug in. In particular embodiments one or more described webpages may be associated with or accessed by social networking system . This disclosure contemplates using any suitable application for the retrieval and rendering of structured documents hosted by any suitable network addressable resource or website.

Application event data of a game is any data relevant to the game e.g. player inputs . In particular embodiments each application datum may have a name and a value and the value of the application datum may change i.e. be updated at any time. When an update to an application datum occurs at client system either caused by an action of a game player or by the game logic itself client system may need to inform game networking system of the update. For example if the game is a farming game with a harvest mechanic such as Zynga FarmVille an event can correspond to a player clicking on a parcel of land to harvest a crop. In such an instance the application event data may identify an event or action e.g. harvest and an object in the game to which the event or action applies. For illustration purposes and not by way of limitation system is discussed in reference to updating a multi player online game hosted on a network addressable system such as for example social networking system or game networking system where an instance of the online game is executed remotely on a client system which then transmits application event data to the hosting system such that the remote game server synchronizes game state associated with the instance executed by the client system .

In particular embodiments one or more objects of a game may be represented as an Adobe Flash object. Flash may manipulate vector and raster graphics and supports bidirectional streaming of audio and video. Flash may mean the authoring environment the player or the application files. In particular embodiments client system may include a Flash client. The Flash client may be configured to receive and run Flash application or game object code from any suitable networking system such as for example social networking system or game networking system . In particular embodiments the Flash client may be run in a browser client executed on client system . A player can interact with Flash objects using client system and the Flash client. The Flash objects can represent a variety of in game objects. Thus the player may perform various in game actions on various in game objects by making various changes and updates to the associated Flash objects. In particular embodiments in game actions can be initiated by clicking or similarly interacting with a Flash object that represents a particular in game object. For example a player can interact with a Flash object to use move rotate delete attack shoot or harvest an in game object. This disclosure contemplates performing any suitable in game action by interacting with any suitable Flash object. In particular embodiments when the player makes a change to a Flash object representing an in game object the client executed game logic may update one or more game state parameters associated with the in game object. To ensure synchronization between the Flash object shown to the player at client system the Flash client may send the events that caused the game state changes to the in game object to game networking system . However to expedite the processing and hence the speed of the overall gaming experience the Flash client may collect a batch of some number of events or updates into a batch file. The number of events or updates may be determined by the Flash client dynamically or determined by game networking system based on server loads or other factors. For example client system may send a batch file to game networking system whenever updates have been collected or after a threshold period of time such as every minute.

As used herein the term application event data may refer to any data relevant to a computer implemented game application that may affect one or more game state parameters including for example and without limitation changes to player data or metadata changes to player social connections or contacts player inputs to the game and events generated by the game logic. In particular embodiments each application datum may have a name and a value. The value of an application datum may change at any time in response to the game play of a player or in response to the game engine e.g. based on the game logic . In particular embodiments an application data update occurs when the value of a specific application datum is changed. In particular embodiments each application event datum may include an action or event name and a value such as an object identifier . Thus each application datum may be represented as a name value pair in the batch file. The batch file may include a collection of name value pairs representing the application data that have been updated at client system . In particular embodiments the batch file may be a text file and the name value pairs may be in string format.

In particular embodiments when a player plays an online game on client system game networking system may serialize all the game related data including for example and without limitation game states game events and user inputs for this particular user and this particular game into a BLOB and store the BLOB in a database. The BLOB may be associated with an identifier that indicates that the BLOB contains the serialized game related data for a particular player and a particular online game. In particular embodiments while a player is not playing the online game the corresponding BLOB may be stored in the database. This enables a player to stop playing the game at any time without losing the current state of the game the player is in. When a player resumes playing the game next time game networking system may retrieve the corresponding BLOB from the database to determine the most recent values of the game related data. In particular embodiments while a player is playing the online game game networking system may also load the corresponding BLOB into a memory cache so that the game system may have faster access to the BLOB and the game related data contained therein.

In particular embodiments one or more described webpages may be associated with a networking system or networking service. However alternate embodiments may have application to the retrieval and rendering of structured documents hosted by any type of network addressable resource or web site. Additionally as used herein a user may be an individual a group or an entity such as a business or third party application .

Particular embodiments may operate in a WAN environment such as the Internet including multiple network addressable systems. illustrates an example network environment in which various example embodiments may operate. Network cloud generally represents one or more interconnected networks over which the systems and hosts described herein can communicate. Network cloud may include packet based WANs such as the Internet private networks wireless networks satellite networks cellular networks paging networks and the like. As illustrates particular embodiments may operate in a network environment comprising one or more networking systems such as social networking system game networking system and one or more client systems . The components of social networking system and game networking system operate analogously as such hereinafter they may be referred to simply at networking system . Client systems are operably connected to the network environment via a network service provider a wireless carrier or any other suitable means.

Networking system is a network addressable system that in various example embodiments comprises one or more physical servers and data stores . The one or more physical servers are operably connected to network cloud via by way of example a set of routers and or networking switches . In an example embodiment the functionality hosted by the one or more physical servers may include web or HTTP servers FTP servers as well as without limitation webpages and applications implemented using Common Gateway Interface CGI script PHP Hyper text Preprocessor PHP Active Server Pages ASP HTML XML Java JavaScript Asynchronous JavaScript and XML AJAX Flash ActionScript and the like.

Physical servers may host functionality directed to the operations of networking system . Hereinafter servers may be referred to as server although server may include numerous servers hosting for example networking system as well as other content distribution servers data stores and databases. Data store may store content and data relating to and enabling operation of networking system as digital data objects. A data object in particular embodiments is an item of digital information typically stored or embodied in a data file database or record. Content objects may take many forms including text e.g. ASCII SGML HTML images e.g. jpeg tif and gif graphics vector based or bitmap audio video e.g. mpeg or other multimedia and combinations thereof. Content object data may also include executable code objects e.g. games executable within a browser window or frame podcasts and the like. Logically data store corresponds to one or more of a variety of separate and integrated databases such as relational databases and object oriented databases that maintain information as an integrated collection of logically related records or files stored on one or more physical systems. Structurally data store may generally include one or more of a large class of data storage and management systems. In particular embodiments data store may be implemented by any suitable physical system s including components such as one or more database servers mass storage media media library systems storage area networks data storage clouds and the like. In one example embodiment data store includes one or more servers databases e.g. MySQL and or data warehouses. Data store may include data associated with different networking system users and or client systems .

Client system is generally a computer or computing device including functionality for communicating e.g. remotely over a computer network. Client system may be a desktop computer laptop computer personal digital assistant PDA in or out of car navigation system smart phone or other cellular or mobile phone or mobile gaming device among other suitable computing devices. Client system may execute one or more client applications such as a web browser e.g. Microsoft Internet Explorer Mozilla Firefox Apple Safari Google Chrome and Opera to access and view content over a computer network. In particular embodiments the client applications allow a user of client system to enter addresses of specific network resources to be retrieved such as resources hosted by networking system . These addresses can be Uniform Resource Locators URLs and the like. In addition once a page or other resource has been retrieved the client applications may provide access to other pages or records when the user clicks on hyperlinks to other resources. By way of example such hyperlinks may be located within the webpages and provide an automated way for the user to enter the URL of another page and to retrieve that page.

A webpage or resource embedded within a webpage which may itself include multiple embedded resources may include data records such as plain textual information or more complex digitally encoded multimedia content such as software programs or other code objects graphics images audio signals videos and so forth. One prevalent markup language for creating webpages is HTML. Other common web browser supported languages and technologies include XML the Extensible Hypertext Markup Language XHTML JavaScript Flash ActionScript Cascading Style Sheet CSS and frequently Java. By way of example HTML enables a page developer to create a structured document by denoting structural semantics for text and links as well as images web applications and other objects that can be embedded within the page. Generally a webpage may be delivered to a client as a static document however through the use of web elements embedded in the page an interactive experience may be achieved with the page or a sequence of pages. During a user session at the client the web browser interprets and displays the pages and associated resources received or retrieved from the website hosting the page as well as potentially resources from other websites.

When a user at a client system desires to view a particular webpage hereinafter also referred to as target structured document hosted by networking system the user s web browser or other document rendering engine or suitable client application formulates and transmits a request to networking system . The request generally includes a URL or other document identifier as well as metadata or other information. By way of example the request may include information identifying the user such as a user identification as well as information identifying or characterizing the web browser or operating system running on the user s client computing device . The request may also include location information identifying a geographic location of the user s client system or a logical network location of the user s client system. The request may also include a timestamp identifying when the request was transmitted.

Although the example network environment described above and illustrated in is described with respect to social networking system and game networking system this disclosure encompasses any suitable network environment using any suitable systems. As an example and not by way of limitation the network environment may include online media systems online reviewing systems online search engines online advertising systems or any combination of two or more such systems.

The elements of hardware system are described in greater detail below. In particular network interface provides communication between hardware system and any of a wide range of networks such as an Ethernet e.g. IEEE 802.3 network a backplane and the like. Mass storage provides permanent storage for the data and programming instructions to perform the above described functions implemented in servers whereas system memory e.g. DRAM Dynamic Random Access Memory provides temporary storage for the data and programming instructions when executed by processor . I O ports are one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may be coupled to hardware system .

Hardware system may include a variety of system architectures and various components of hardware system may be rearranged. For example cache may be on chip with processor . Alternatively cache and processor may be packed together as a processor module with processor being referred to as the processor core. Furthermore certain embodiments of the present disclosure may not require nor include all of the above components. For example the peripheral devices shown coupled to standard I O bus may couple to high performance I O bus . In addition in some embodiments only a single bus may exist with the components of hardware system being coupled to the single bus. Furthermore hardware system may include additional components such as additional processors storage devices or memories.

An operating system manages and controls the operation of hardware system including the input and output of data to and from software applications not shown . The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. Any suitable operating system may be used such as the LINUX Operating System the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems Microsoft Windows operating systems BSD operating systems and the like. Of course other embodiments are possible. For example the functions described herein may be implemented in firmware or on an application specific integrated circuit.

Furthermore the above described elements and operations can be comprised of instructions that are stored on non transitory storage media. The instructions can be retrieved and executed by a processing system. Some examples of instructions are software program code and firmware. Some examples of non transitory storage media are memory devices tape disks integrated circuits and servers. The instructions are operational when executed by the processing system to direct the processing system to operate in accord with the disclosure. The term processing system refers to a single processing device or a group of inter operational processing devices. Some examples of processing devices are integrated circuits and logic circuitry. Those skilled in the art are familiar with instructions computers and storage media.

One or more features from any embodiment may be combined with one or more features of any other embodiment without departing from the scope of the disclosure. A recitation of a an or the is intended to mean one or more unless specifically indicated to the contrary. In addition it is to be understood that functional operations such as awarding locating permitting and the like are executed by game application logic that accesses and or causes changes to various data attribute values maintained in a database or other memory.

The present disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly where appropriate the appended claims encompass all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend.

For example the methods game features and game mechanics described herein may be implemented using hardware components software components and or any combination thereof. By way of example while embodiments of the present disclosure have been described as operating in connection with a networking website various embodiments of the present disclosure can be used in connection with any communications facility that supports web applications. Furthermore in some embodiments the term web service and website may be used interchangeably and may additionally refer to a custom or generalized API Application Programming Interface on a device such as a mobile device e.g. cellular phone smart phone personal GPS Global Positioning System PDA personal gaming device and the like that makes API calls directly to a server. Still further while the embodiments described above operate with business related virtual objects such as stores and restaurants the described systems and methods can be applied to any in game asset around which a harvest mechanic is implemented such as a virtual stove a plot of land and the like. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the disclosure as set forth in the claims and that the disclosure is intended to cover all modifications and equivalents within the scope of the following claims.

Thus methods and systems for transferring assets between games have been described. Although the methods and systems have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

In the foregoing description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the description with each claim standing on its own as a separate embodiment.

