---

title: Message switch file sharing
abstract: Embodiments relate to message switch file sharing. A file is accessed by a computer processor of a client producer device to share with a plurality of client consumer devices across a network. The computer processor partitions the file into a sequence of message payloads associated with a topic and a scheme. The scheme defines a sequence identifier to establish an order to reassemble the sequence of message payloads into the file. A sequence of messages is formed including the topic and the sequence of message payloads. The sequence of messages is published to a message queue associated with the topic in a message switch in the network. The message switch provides the client consumer devices with access to the sequence of message payloads based on subscriptions to the topic.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09560114&OS=09560114&RS=09560114
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09560114
owner_city: Armonk
owner_country: US
publication_date: 20140909
---
This application is a continuation of U.S. application Ser. No. 14 154 375 filed Jan. 14 2014 the disclosure of which is incorporated by reference herein in its entirety.

The present disclosure relates to computer networks and more specifically to file sharing using a message switch.

A message switch is a device that supports publication and subscription to topics for sharing messages with many subscribers. Messages are typically limited to a relatively small payload for publishing information. The format of messages for a topic is determined by a scheme associated with message payloads. Each topic has a first in first out FIFO message queue that stores message payloads to be shared with subscribers to the topic. A publisher produces a message associated with a topic and applies the associated scheme such that consumers of the message can receive the message for the subscribed topic and apply the associated scheme to interpret the payload of the message. Larger data objects such as files are not typically supported by message switches due to message size constraints and throughput limitations. For example a message switch may ingest millions of messages per second across many thousands of users.

According to an embodiment a method for message switch file sharing is provided. The method includes accessing a file by a computer processor of a client producer device to share with a plurality of client consumer devices across a network. The computer processor partitions the file into a sequence of message payloads associated with a topic and a scheme. The scheme defines a sequence identifier to establish an order to reassemble the sequence of message payloads into the file. The computer processor forms a sequence of messages including the topic and the sequence of message payloads. The sequence of messages is published to a message queue associated with the topic in a message switch in the network. The message switch provides the client consumer devices with access to the sequence of message payloads based on subscriptions to the topic.

According to a further embodiment a computer program product for message switch file sharing is provided. The computer program product includes a computer readable storage medium having program code embodied therewith. The program code is executable by a computer processor for accessing a file to share with a plurality of client consumer devices across a network. The file is partitioned into a sequence of message payloads associated with a topic and a scheme. The scheme defines a sequence identifier to establish an order to reassemble the sequence of message payloads into the file. A sequence of messages is formed that includes the topic and the sequence of message payloads. The sequence of messages is published to a message queue associated with the topic in a message switch in the network. The message switch provides the client consumer devices with access to the sequence of message payloads based on subscriptions to the topic.

Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with the advantages and the features refer to the description and to the drawings.

Exemplary embodiments relate to message switch file sharing in a network environment. Turning now to an example of a system upon which message switch file sharing may be implemented will now be described in greater detail. The system represents a networked environment such as the Internet where millions of messages may pass through a message switch . In the example depicted in the system includes the message switch configured to communicate with one or more client producer devices A N and client consumer devices A N over a network . The network may be any type of communications network known in the art and can include a combination of wireless wired and or fiber optic links. Although only one message switch is depicted in the network it will be understood that there can be multiple message switches which can interface with each other within the network across a geographically wide area.

In exemplary embodiments the message switch is a high speed processing device e.g. a mainframe computer an embedded computing device or the like including at least one processing circuit e.g. a computer processor CPU capable of reading and executing instructions and handling interactions with various components of the system . Alternatively the message switch can be embodied entirely in hardware including circuits and memory to perform processes as described herein. In the example of the message switch includes a publish application programming interface API configured to interface the client producer devices A N with one or more message queues where only one message queue is depicted in . The message switch also includes a subscribe API configured to interface the client consumer devices A N with the one or more message queues . The one or more message queues are implemented in memory of the message switch as first in first out FIFO queues to hold a plurality of message payloads .

In exemplary embodiments the message payloads are configured as single message objects or multiple message objects. For example message object in the message queue of includes a single message payload message object includes six message payloads associated with a sequence of six messages and message object includes three message payloads . A sequence identifier such as sequential numbers can be used to establish an order to reassemble the message payloads into a data object or file.

In exemplary embodiments the client producer devices A N and the client consumer devices A N can include a variety of computing devices with processing circuits and I O interfaces such as a keys buttons a touchscreen audio input a display device and audio output. The client producer devices A N and the client consumer devices A N may be embodied in any type of computing device known in the art such as a laptop tablet computer mobile device personal computer workstation server and the like. Accordingly the client producer devices A N and the client consumer devices A N can include various computer communication hardware and software technology known in the art such as one or more processing units or circuits volatile and non volatile memory including removable media power supplies network interfaces support circuitry operating systems and the like.

In exemplary embodiments each of the client producer devices A N includes a client producer configured to send data objects and or files in one or more messages to the message queues of the message switch . The client producer can be implemented in software hardware or a combination thereof. As described herein the data objects and files can be used interchangeably for instance a file may be a type of data object. In general the data objects may reside in volatile memory of the client producer devices A N and the files may reside in non volatile memory of the client producer devices A N however embodiments are not so constrained. Similarly each of the client consumer devices A N includes a client consumer configured to consume data objects and or files from one or more messages of the message queues in the message switch . The client consumer can be implemented in software hardware or a combination thereof. As described herein the data objects and files can be used interchangeably for instance a file may be a type of data object. In general the data objects may reside in volatile memory of the client consumer devices A N and the files may reside in non volatile memory of the client consumer devices A N. Accordingly the client producer can send a file or data object from the files or data objects to the message switch via the publish API as a sequence of messages including message payloads to be consumed by the client consumer subscribed to the same topic. The client consumer can receive a sequence of message payloads including the message payloads via the subscribe API . Message payloads can be analyzed by the client consumer for sequence identifiers to establish an order to reassemble the sequence of message payloads into a file which can be stored in the data objects or files for further use.

In one example the client producer accesses a file named trees.avi from the data objects or files to share with one or more client consumer devices A N across the network . The client producer partitions the file into message payloads associated with a topic such as films and a scheme. A scheme may be used to define the sequence identifiers for reassembling the message payloads into the file. The client producer forms a sequence of messages that includes the topic and the message payloads . The sequence of messages is published via the publish API to message queue associated with the topic as message object . The message switch provides the client consumer devices A N with access to the message payloads based on subscriptions to the topic in this example films . The client consumer devices A N may be notified of the message payloads by a callback notification or by polling the message queue for new messages. The client consumer devices A N can fetch the message payloads as a single object i.e. message object or as individual payloads forming a sequence of message payloads . The sequence identifiers can be used to determine which message to consume next to maintain order and can also be useful if message consumption is stopped or paused before resuming at the last i.e. most recently fetched message payload rather than restarting consumption at the beginning of the message payloads .

Other features may be defined in the access control lists A N or associated with the access control lists A N such as notification preferences and or filters. As one example a callback notification can be configured to notify one or more of the client consumer devices A N of . Alternatively the client consumer devices A N can be configured to poll the message queues A N based on mapping of topics . A filter can be applied to the callback notification to refine subscriptions to specific data within a topic as filtered callback data .

In an exemplary embodiment in terms of hardware architecture as shown in the computer includes a computer processor and memory coupled to a memory controller and one or more input and or output I O devices or peripherals that are communicatively coupled via a local input output controller . The input output controller can be for example but not limited to one or more buses or other wired or wireless connections as is known in the art. The input output controller may have additional elements which are omitted for simplicity such as controllers buffers caches drivers repeaters and receivers to enable communications. Further the local interface may include address control and or data connections to enable appropriate communications among the aforementioned components.

The computer processor is a processing device for executing software particularly software stored in storage such as cache storage or memory . The computer processor can be any custom made or commercially available computer processor a central processing unit CPU an auxiliary processor among several processors associated with the computer a semiconductor based microprocessor in the form of a microchip or chip set a macroprocessor or generally any device for executing instructions.

The memory can include any one or combination of volatile memory elements e.g. random access memory RAM such as DRAM SRAM SDRAM etc. and nonvolatile memory elements e.g. ROM erasable programmable read only memory EPROM electronically erasable programmable read only memory EEPROM programmable read only memory PROM tape compact disc read only memory CD ROM disk diskette cartridge cassette or the like etc. . Moreover the memory may incorporate electronic magnetic optical and or other types of storage media. Note that the memory can have a distributed architecture where various components are situated remote from one another but can be accessed by the computer processor .

When the message switch of is embodied as the computer the message queue of can be located in the memory and distributed in different types of the memory based on access frequency. For example objects or message payloads of that are recently written or accessed can be stored in faster volatile memory while less recently accessed data is stored to solid state nonvolatile memory and even less recently accessed data is stored to a spinning disk medium. As the sequence of message payloads of is accessed the message switch of can predictively move older message payloads that are part of the same object or file being accessed from spinning disk or solid state nonvolatile memory to volatile memory in the memory prior to the older message payload being requested to reduce access time.

The instructions in memory may include one or more separate programs each of which comprises an ordered listing of executable instructions for implementing logical functions. In the example of the instructions in the memory include a suitable operating system OS . The operating system essentially controls the execution of other computer programs and provides scheduling input output control file and data management memory management and communication control and related services.

In an exemplary embodiment a conventional keyboard and mouse can be coupled to the input output controller . Other output devices such as the I O devices may include input devices for example but not limited to a printer a scanner microphone and the like. Finally the I O devices may further include devices that communicate both inputs and outputs for instance but not limited to a network interface card NIC or modulator demodulator for accessing other files devices systems or a network a radio frequency RF or other transceiver a telephonic interface a bridge a router and the like. The system can further include a display controller coupled to a display . In an exemplary embodiment the system can further include a network interface for coupling to a network such as network of . The network can be an IP based network for communication between the computer and any external server client and the like via a broadband connection. The network transmits and receives data between the computer and external systems. In an exemplary embodiment network can be a managed Internet Protocol IP network administered by a service provider. The network may be implemented in a wireless fashion e.g. using wireless protocols and technologies such as WiFi WiMax etc. The network can also be a packet switched network such as a local area network wide area network metropolitan area network Internet network or other similar type of network environment. The network may be a fixed wireless network a wireless local area network LAN a wireless wide area network WAN a personal area network PAN a virtual private network VPN intranet or other suitable network system and includes equipment for receiving and transmitting signals.

If the computer is a PC workstation intelligent device or the like the instructions in the memory may further include a basic input output system BIOS omitted for simplicity . The BIOS is a set of essential software routines that initialize and test hardware at startup start the OS and support the transfer of data among the hardware devices. The BIOS is stored in ROM so that the BIOS can be executed when the computer is activated.

When the computer is in operation the computer processor is configured to execute instructions stored within the memory to communicate data to and from the memory and to generally control operations of the computer pursuant to the instructions.

Turning now to a process for message switch file sharing will be described in accordance with an exemplary embodiment. The process is described in reference to and can be implemented by the message switch of . When embodied in the computer of a computer processor of one of the client producer devices A N can be configured to perform the process as client producer .

At block the client producer accesses a file to share with a plurality of client consumer devices A N across the network . The file can be from data objects or files . For example the file can be a data object having a size greater than an individual message payload size.

At block the client producer partitions the file into a sequence of message payloads associated with a topic and a scheme. The scheme such as scheme of defines a sequence identifier to establish an order to reassemble the sequence of message payloads into the file. The scheme can further include a subject field to describe payload contents of message payloads in message payload field . The client producer is further configured to populate the subject field in the sequence of message payloads as payload subjects to describe the file.

At block the client producer forms a sequence of messages including the topic and the sequence of message payloads . At block the client producer publishes the sequence of messages to a message queue associated with the topic in a message switch in the network . The message switch provides the client consumer devices A N with access to the sequence of message payloads based on subscriptions to the topic .

Subscription information can be stored on the message switch in one or more access control lists associated with the message queue . The one or more access control lists are configured by the client producer to manage access to the topic . The one or more access control lists can be analyzed across multiple topics to discover producers consumers and shared content. A message notification from the message switch to the client consumer devices A N can be configured as a callback notification . A filter may be applied to the callback notification to refine subscriptions to specific data within the topic .

At block a client consumer fetches the sequence of message payloads from the message switch . At least one of the client consumer devices A N can be configured to fetch payload subjects from the subject fields in message queue to discover current contents stored in the message queue prior to fetching the sequence of message payloads . The sequence of message payloads can be presented to the client consumer devices A N as a single object. The client consumer devices A N may be configured to fetch the sequence of message payloads from the message switch as either individual message payloads or as a single object.

Technical effects include partitioning large files or data objects into a number of message payloads and providing the message payloads in a sequence of messages to a message switch. Sequence identifier and subject data can be used to analyze and fetch a sequence of message payloads from the message switch as individual message payloads or a single data object. Publish and subscribe features can be managed by content publishers using access control lists rather than relying upon a system administrator of the message switch.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible and non transitory storage medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one more other features integers steps operations element components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated

The flow diagrams depicted herein are just one example. There may be many variations to this diagram or the steps or operations described therein without departing from the spirit of the invention. For instance the steps may be performed in a differing order or steps may be added deleted or modified. All of these variations are considered a part of the claimed invention.

While the preferred embodiment to the invention had been described it will be understood that those skilled in the art both now and in the future may make various improvements and enhancements which fall within the scope of the claims which follow. These claims should be construed to maintain the proper protection for the invention first described.

