---

title: Dynamic hierarchical navigation schemes for storage management systems
abstract: Methods, systems, and machine-readable medium are disclosed for creating and providing dynamic hierarchical navigation schemes in storage management systems. A mapping data structure is maintained to store hierarchical relationship mapping within a storage management system, allowing users to customize their interactions with the storage system. The method, includes receiving a user-defined navigation preference to view an attribute of a second storage object from a navigation screen defined for a first storage object; updating a mapping data structure for storing a hierarchical relationship of a second storage object, based on the user-defined navigation preference; and presenting the attribute of the second storage object at the navigation screen for the first storage object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600180&OS=09600180&RS=09600180
owner: NETAPP, INC.
number: 09600180
owner_city: Sunnyvale
owner_country: US
publication_date: 20141017
---
The present disclosure relates to storage systems and more particularly to the management of storage systems through user defined navigation.

Various forms of storage systems are used today. These forms include direct attached storage DAS network attached storage NAS systems storage area networks SANs and others. Network storage systems are commonly used for a variety of purposes such as providing multiple users with access to shared data backing up data and others.

A storage system typically includes at least one computing system executing a storage operating system for storing and retrieving data on behalf of one or more client computing systems clients . The storage operating system stores and manages shared data containers in a set of mass storage devices.

These storage systems can often be large and complex systems including clusters which have multiple nodes each node presenting multiple virtual servers that may use multiple storage volumes that are based on storage space at various physical storage devices. As storage systems get more and more complex it is important to have a management application that can help IT or data center managers to oversee and effectively manage the storage systems. Within such a management application and storage system information about the system itself is subject to categorization and sub categorization often for many levels thereby creating a detailed hierarchy. The management application is typically closely tied to this hierarchy. Navigation and use of the management application can become context sensitive and rigid.

At the same time however small storage units for example may be categorized from both logical and physical points of view. While some management application users may be more used to the logical point of view others may be more comfortable understanding the storage system from a physical point of view. This problem can be compounded because various parts of the storage systems may be supplied by different vendors all having their own perspective for certain aspects of the system. As such it can become a complex task simply to remember the way a storage hierarchy is set up and to drill down from a top level to the data that is of interest.

A solution that allows quick access to relevant information regarding storage within the complex hierarchy without the user having to learn and navigate the context sensitive hierarchy is needed.

In one aspect a machine implemented method is provided. The method includes receiving a user defined navigation preference to view an attribute of a second storage object from a navigation screen defined for a first storage object updating a mapping data structure for storing a hierarchical relationship of a second storage object based on the user defined navigation preference and presenting the attribute of the second storage object at the navigation screen for the first storage object.

In another aspect a non transitory machine readable storage medium having stored thereon instructions for performing a method comprising machine executable code. The machine executable code which when executed by at least one machine causes the machine to receive a user defined navigation preference to view an attribute of a second storage object from a navigation screen defined for a first storage object update a mapping data structure for storing a hierarchical relationship between the first storage object and the of a second storage object based on the user defined navigation preference and present the attribute of the second storage object at the navigation screen for the first storage object.

In yet another aspect a system having a memory containing machine readable medium comprising machine executable code having stored thereon instructions and a processor module coupled to the memory are provided. The processor module is configured to execute the machine executable code to receive a user defined navigation preference to view an attribute of a second storage object from a navigation screen defined for a first storage object update a mapping data structure for storing a hierarchical relationship between the first storage object and the of a second storage object based on the user defined navigation preference and present the attribute of the second storage object at the navigation screen for the first storage object.

This brief summary has been provided so that the nature of this disclosure may be understood quickly. A more complete understanding of the disclosure can be obtained by reference to the following detailed description of the various thereof in connection with the attached drawings.

As a preliminary note the terms component module system and the like as used herein are intended to refer to a computer related entity either software executing general purpose processor hardware firmware and a combination thereof. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer.

By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Also these components can execute from various non transitory computer readable media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal .

Computer executable components can be stored for example at non transitory computer readable media including but not limited to an ASIC application specific integrated circuit CD compact disc DVD digital video disk ROM read only memory floppy disk hard disk EEPROM electrically erasable programmable read only memory memory stick or any other storage device in accordance with the claimed subject matter.

Methods systems and machine readable medium are disclosed for creating and providing dynamic hierarchical navigation schemes in storage management systems. A mapping data structure is maintained to store hierarchical relationship mapping within a storage management system allowing users to customize their interactions with the storage system. The method includes receiving a user defined navigation preference to view an attribute of a second storage object from a navigation screen defined for a first storage object updating a mapping data structure for storing a hierarchical relationship of a second storage object based on the user defined navigation preference and presenting the attribute of the second storage object at the navigation screen for the first storage object.

In the illustrated aspect the clustered storage system includes a plurality of nodes . . executing a plurality of modules a cluster switching fabric and a plurality of mass storage devices . . may be also be referred to as . The mass storage devices may include writable storage device media such as magnetic disks video tape optical DVD magnetic tape non volatile memory devices for example self encrypting drives flash memory devices solid state storage drives SSDs combinations of the same and any other similar media adapted to store information. The storage devices may be organized as one or more groups of Redundant Array of Independent or Inexpensive Disks RAID . The aspects disclosed are not limited to any particular storage device or storage device configuration.

The storage system provides a set of storage volumes to clients for storing information at storage devices . A storage operating system executed by the nodes of storage system present or export data stored at storage devices as a volume or one or more qtree sub volume units. Each volume may be configured to store data files or data containers or data objects scripts word processing documents executable programs and any other type of structured or unstructured data. From the perspective of client systems each volume can appear to be a single storage drive. However each volume can represent the storage space in a portion of a storage device one storage device an aggregate of some or all of the storage space in multiple storage devices a RAID group or any other suitable set of storage space.

The storage system may be used to store and manage information at storage devices based on a client request. The request may be based on file based access protocols for example the Common Internet File System CIFS protocol or Network File System NFS protocol over the Transmission Control Protocol Internet Protocol TCP IP . Alternatively the request may use block based access protocols for example the Small Computer Systems Interface SCSI protocol encapsulated over TCP iSCSI and SCSI encapsulated over Fibre Channel FCP .

Each of the plurality of nodes . . is configured to include an N module a D module and an M Module each of which can be implemented as a processor executable module. For example node . includes N module . D module . and M Module . node . includes N module . D module . and M Module . and node . includes N module . D module . and M Module ..

The N modules . . include functionality that enable the respective nodes . . to connect to one or more of the client systems . .N over network and with other nodes via switching fabric . The D modules . . connect to one or more of the storage devices . .. The M Modules . . provide management functions for the clustered storage system .

A switched virtualization layer including a plurality of virtual interfaces VIFs is provided to interface between the respective N modules . . and the client systems . .N allowing storage . . associated with the nodes . . to be presented to the client systems . .N as a single shared storage pool.

In one aspect the clustered storage system can be organized into any suitable number of virtual servers may also be referred to as VServers or virtual storage machines . A VServer is a virtual representation of a physical storage controller system and is presented to a client system for storing information at storage devices . Each VServer represents a single storage system namespace with independent network access. Each VServer has a user domain and a security domain that are separate from the user and security domains of other VServers. Moreover each VServer is associated with one or more VIFs and can span one or more physical nodes each of which can hold one or more VIFs and storage associated with one or more VServers. Client systems can access the data on a VServer from any node of the clustered system through the VIFs associated with that VServer.

Each of the nodes . . is defined as a computing system to provide application services to one or more of the client systems . .N. The nodes . . are interconnected by the switching fabric which for example may be embodied as a switch or any other type of connecting device.

Although depicts an equal number i.e. 3 of the N modules . . the D modules . . and the M Modules . . any other suitable number of N modules D modules and M Modules may be provided. There may also be different numbers of N modules D modules and or M Modules within the clustered storage system . For example in alternative aspects the clustered storage system may include a plurality of N modules and a plurality of D modules interconnected in a configuration that does not reflect a one to one correspondence between the N modules and D modules.

Each client system may request the services of one of the respective nodes . . . and that node may return the results of the services requested by the client system by exchanging packets over the computer network which may be wire based optical fiber wireless any other suitable combination thereof or the like. The client systems may issue packets according to file based access protocols such as the NFS or CIFS protocol when accessing information in the form of files and directories.

System also includes a management console executing a management application out of a memory. Management console may be used to configure and manage various elements of system .

Management application is extensively used by IT and data storage managers particularly as storage systems get more and more complex. In an aspect according to the present disclosure management application interacts with storage system nodes . through network see . In an aspect the node . includes the storage operating system as described in more detail with respect to which maintains storage objects containing information about the storage system elements described in more detail below with respect to . The storage operating system further communicates with a management application interface module which is used to process communications to and from management application through network and a storage system interface module operating at management application .

Management application includes a processing module which communicates with and coordinates operations of other modules of the management application . Specifically these other modules may include in an aspect a discovery module a navigation module and a Graphic User Interface GUI module . The GUI module provides the GUI on a monitor or other display for interaction with the IT user or storage manager. The discovery module communicates with the storage operating system to retrieve information from the storage objects such as for display in GUI .

The navigation module interacts with the user through the GUI to help process user requests and create dynamic navigation as described more fully herein. In an aspect the GUI module may comprise a web browser for viewing data delivered to or by discovery module as a URL. In one aspect the navigation module may comprise a web server and create records from storage objects and provides a URL to the discovery module . The discovery module collects information regarding storage objects from the storage operating system and provides the collected data to navigation module . In another aspect storage operating system sends information related to the storage objects to discovery module which then creates a record and URL for processing module .

In yet another aspect information is passed through to the GUI module . It should be further noted that in some aspects information is presented through a command line interface CLI and or through various visual or non visual means. For example information may be presented to a user aurally and or visually.

Next the information relevant to the management application as disclosed herein is described. illustrates an exemplary storage hierarchy that is maintained by storage operating system such as at a node .. Any or all of the elements of the hierarchy described herein may also be classified as storage objects mentioned above with respect to . First the hierarchy identifies a cluster to which it belongs with a cluster identifier . The storage operating system also maintains cluster properties A that pertain to the cluster. Cluster properties A may include information such as the number of nodes in a cluster the number and identity of clients that are allowed to access the cluster and other information associated with the cluster. As described above within a cluster there are nodes . so there will be node identifiers associated with the cluster identifier and each cluster node will have associated cluster node properties A.

Cluster nodes may then have one or more VServers associated with them which can be associated in the storage hierarchy by VServer Identifier s . VServer s then have at least one logical interface LIF A associated with them as well as VServer properties B which may include for example which business group owns controls the VServer special properties of the VServer access rights and limitations and so on . The VServer s then have storage volumes associated with them that are identified by storage volume identifiers . As described above storage volumes are logical objects that are presented to a client and are associated with physical storage in some way which may include one or more LUNs NAS storage or the like. Storage volume identifiers are then associated with storage volume properties A such as for example storage size back up time frames and so on.

Storage volume identifier further have storage aggregate identifiers . Storage aggregate is a logical object for managing physical storage. Additionally storage aggregate identifiers have storage aggregate properties A which may include for example what physical storage locations are included in the aggregate the size which storage controller and which storage devices include the physical storage etc. An aggregate is a pool of storage that combines one or more physical mass storage devices e.g. disks or parts thereof into a single logical storage object. An aggregate contains or provides storage for one or more other logical data sets at a higher level of abstraction e.g. volumes.

This logical structure provides a great deal of information for storage managers overseeing the systems but in order to determine certain storage aggregate properties for example a manager must start at the Cluster identifier and drill down through multiple pages to get to the aggregate properties of interest.

In conventional systems such a feature page would be accessible to a user based on one or more navigation names such as Storage Location. However the GUI would display the navigation name to a user only within specific contexts of the storage hierarchy. Thus a user has to remember how to get to a specific context to obtain access to the navigation name and the feature page that they are interested in viewing. For example each feature page may have been populated using a Zephyr Application Programming Interface ZAPI . In such a case a property object is used as a parameter in a ZAPI call. This property object thus defined the context and the mechanism to arrive at a feature page had to be hard coded which makes the conventional systems rigid and undesirable.

The present disclosure provides a navigation module mentioned above and described in more detail with respect to . In the aspect described in the navigation module includes an interface layer that provides a mapping data structure that can be used not only to display feature pages to the user based on context specific navigation name links but also can learn user defined links and provide more ready access to the information that a user wishes to access.

In one aspect mapping data structure includes a data structure for example a table that maps one or more tags N N . . . N to a property object and a feature link . The tag is defined by the user s preferences and the property object stores an indication of the hierarchy navigation to the feature link desired by the user. In an aspect multiple tags for example Nand N may map to the same property object and or feature link . This may allow different users to define their own tags for example. With multiple users further information may be stored in mapping data structure to allow display of tags that are associated with that current user and or hide display of tags associated with another user.

With reference to user defined links may be defined in various ways according to different aspects without detracting from the spirit of the present disclosure. For example a user defined link and a tag may be the same or may be indications of the same thing in an aspect. In another aspect property object may include sufficient information to navigate a storage hierarchy and locate a feature link on the fly without storing a feature link in the mapping data structure. Contrarily a feature link may be sufficient to link to the feature page that a user wants to see without having to know the storage hierarchy path that a property object might represent. As such in one aspect tags and feature links are mapped in data structure without a property object .

In yet another aspect a property object may be used for disambiguation such as to keep the mapping data structure more streamlined. As described above the complex storage systems may provide different paths to get to the same data so two users may originally get to different information from different paths. If both create user defined links the interface layer may use the information of property object to associate both tags with the same feature link without storing the storage hierarchy paths of both users.

Processors A B may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such hardware devices. The local storage comprises one or more storage devices utilized by the node to locally store configuration information for example in a configuration data structure .

The cluster access adapter comprises a plurality of ports adapted to couple node . to other nodes of cluster . In the illustrative aspect Ethernet may be used as the clustering protocol and interconnect media although it will be apparent to those skilled in the art that other types of protocols and interconnects may be utilized within the cluster architecture described herein. In alternate aspects where the N modules and D modules are implemented on separate storage systems or computers the cluster access adapter is utilized by the N D module for communicating with other N D modules in the cluster .

Node . is illustratively embodied as a dual processor storage system executing a storage operating system that preferably implements a high level module such as a file system to logically organize the information as a hierarchical structure of named directories and files on storage . However it will be apparent to those of ordinary skill in the art that the node . may alternatively comprise a single or more than two processor systems. Illustratively one processor A executes the functions of the N module and M module while the other processor B executes the functions of the D module . In another aspect one processor executes the functions of M module while the other processor executes the functions of both D module and N module . In yet another aspect a dedicated processor not shown may be used to execute the functions of M module .

The memory illustratively comprises storage locations that are addressable by the processors and adapters for storing programmable instructions and data structures. The processor and adapters may in turn comprise processing elements and or logic circuitry configured to execute the programmable instructions and manipulate the data structures. It will be apparent to those skilled in the art that other processing and memory means including various computer readable media may be used for storing and executing program instructions pertaining to the presented disclosure.

The storage operating system portions of which are typically resident in memory and executed by the processing elements functionally organizes the node . by inter alia invoking storage operation in support of the storage service implemented by the node.

The network adapter comprises a plurality of ports adapted to couple the node . to one or more clients over point to point links wide area networks virtual private networks implemented over a public network Internet a shared local area network or the like. The network adapter thus may comprise the mechanical electrical and signaling circuitry needed to connect the node to the network.

The storage adapter cooperates with the storage operating system executing on the node . to access information requested by the clients. The information may be stored on any type of attached array of writable storage device media such as video tape optical DVD magnetic tape bubble memory electronic random access memory micro electro mechanical magnetic disk SSD and any other similar media adapted to store information including data and parity information. However as illustratively described herein the information is preferably stored on storage device . The storage adapter comprises a plurality of ports having input output I O interface circuitry that couples to the storage devices over an I O interconnect arrangement such as a conventional high performance FC link topology.

In one example storage operating system may include several modules or layers executed by one or both of N Module and D Module . These layers include a file system manager that keeps track of a directory structure hierarchy of the data stored in storage devices and manages read write operation i.e. executes read write operation on storage in response to client requests.

Storage operating system may also include a protocol layer and an associated network access layer to allow node . to communicate over a network with other systems. Protocol layer may implement one or more of various higher level network protocols such as NFS CIFS Hypertext Transfer Protocol HTTP TCP IP and others as described below.

Network access layer may include one or more drivers which implement one or more lower level protocols to communicate over the network such as Ethernet. Interactions between clients and mass storage devices are illustrated schematically as a path which illustrates the flow of data through storage operating system .

The storage operating system may also include a storage access layer and an associated storage driver layer to allow D module to communicate with a storage device. The storage access layer may implement a higher level storage protocol such as RAID redundant array of inexpensive disks while the storage driver layer may implement a lower level storage device access protocol such as FC or SCSI. The storage driver layer may maintain various data structures not shown for storing information relating to LUN storage volume aggregate and various storage devices.

As used herein the term storage operating system generally refers to the computer executable code operable on a computer to perform a storage function that manages data access and may in the case of a node . implement data access semantics of a general purpose operating system. The storage operating system can also be implemented as a microkernel an application program operating over a general purpose operating system such as Linux Apple iOS UNIX or Windows XP or as a general purpose operating system with configurable functionality which is configured for storage applications as described herein.

In addition it will be understood to those skilled in the art that the disclosure described herein may apply to any type of special purpose e.g. file server filer or storage serving appliance or general purpose computer including a standalone computer or portion thereof embodied as or including a storage system. Moreover the teachings of this disclosure can be adapted to a variety of storage system architectures including but not limited to a network attached storage environment a storage area network and a storage device directly attached to a client or host computer. The term storage system should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems. It should be noted that while this description is written in terms of a write any where file system the teachings of the present disclosure may be utilized with any suitable file system including a write in place file system.

The processing system includes one or more processor s and memory coupled to a bus system . The bus system shown in is an abstraction that represents any one or more separate physical buses and or point to point connections connected by appropriate bridges adapters and or controllers. The bus system therefore may include for example a system bus a Peripheral Component Interconnect PCI bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire .

The processor s are the central processing units CPUs of the processing system and thus control its overall operation. In certain aspects the processors accomplish this by executing software stored in memory . A processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

Memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. Memory includes the main memory of the processing system . In an aspect instructions implement the process steps described herein with respect to may reside in and be executed by processors from memory .

Also connected to the processors through the bus system are one or more internal mass storage devices and a network adapter . Internal mass storage devices may be or may include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks. The network adapter provides the processing system with the ability to communicate with remote devices e.g. storage servers over a network and may be for example an Ethernet adapter a Fibre Channel adapter or the like. In some aspects software such as operating systems and or applications and which may embody instructions are stored in mass storage devices until preparing to be executed at which time they are loaded into memory .

The processing system also includes one or more input output I O devices coupled to the bus system . The I O devices may include for example a display device a keyboard a mouse etc.

The system and techniques described above are applicable and useful in the upcoming cloud computing environment. Cloud computing means computing capability that provides an abstraction between the computing resource and its underlying technical architecture e.g. servers storage networks enabling convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. The term cloud is intended to refer to a network for example the Internet or any other network type to provide computing as a service.

Typical cloud computing providers deliver common business applications online which are accessed from another web service or software like a web browser while the software and data are stored remotely on servers. The cloud computing architecture uses a layered approach for providing application services. A first layer is an application layer that is executed at client computers. In this example the application allows a client to access storage via a cloud. After the application layer layers include a cloud platform and cloud infrastructure followed by a server layer that includes hardware and computer software designed for cloud specific services.

Thus methods and systems for creating dynamic hierarchical navigation schemes for storage management systems have been described. Note that references throughout this specification to one aspect or an aspect mean that a particular feature structure or characteristic described in connection with the aspect is included in at least one aspect of the present disclosure. Therefore it is emphasized and should be appreciated that two or more references to an aspect or one aspect or an alternative aspect in various portions of this specification are not necessarily all referring to the same aspect. Furthermore the particular features structures or characteristics being referred to may be combined as suitable in one or more aspects of the disclosure as will be recognized by those of ordinary skill in the art.

While the present disclosure is described above with respect to what is currently considered its preferred aspects it is to be understood that the disclosure is not limited to that described above. To the contrary the disclosure is intended to cover various modifications and equivalent arrangements within the spirit and scope of the appended claims.

