---

title: Using question answering (QA) systems to identify answers and evidence of different medium types
abstract: First, a computer may receive an input query of a first medium type. The input query may then be analyzed. Based on the analysis, the input query may be categorized as being associated with at least a second medium type. A first-medium-type search of a set of corpora may then be performed. Based on the results of the first-medium-type search, a candidate answer of the first medium type may be generated. In response to the categorizing, a second-medium-type search of the set of corpora may also be performed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09613093&OS=09613093&RS=09613093
owner: International Business Machines Corporation
number: 09613093
owner_city: Armonk
owner_country: US
publication_date: 20141016
---
The present disclosure relates to computer systems and more specifically to question answering QA systems.

Recent research has been directed to developing QA systems designed to receive input questions analyze them and return applicable answers. These systems may rely on natural language processing automated reasoning machine learning and other advanced techniques. Using these techniques QA systems may provide mechanisms for searching corpora e.g. large bodies of source items containing relevant content and analyzing the content with regard to a given input query in order to determine an answer to the question. In some QA systems this may take the form of hypothesis generation confidence scoring and ranking in order to determine a final set of one or more output candidate answers.

According to embodiments of the present disclosure aspects of the disclosure may include a method a system and a computer program product. First a computer may receive an input query of a first medium type. The input query may then be analyzed. Based on the analysis the input query may be categorized as being associated with at least a second medium type. A first medium type search of a set of corpora may then be performed. Based on the results of the first medium type search a candidate answer of the first medium type may be generated. In response to the categorizing a second medium type search of the set of corpora may also be performed.

The above summary is not intended to describe each illustrated embodiment or every implementation of the present disclosure.

While the invention is amenable to various modifications and alternative forms specifics thereof have been shown by way of example in the drawings and will be described in detail. It should be understood however that the intention is not to limit the invention to the particular embodiments described. On the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention.

Aspects of the present disclosure relate to question answering QA systems. While the present disclosure is not necessarily limited to such applications various aspects of the disclosure may be appreciated through a discussion of various examples using this context. Furthermore it is contemplated that some embodiments may use or take the form of computer systems that may not be QA systems.

Often times the use of QA systems may be more focused on words e.g. text rather than on other non textual medium types such as content that is of an image type an audio type a video type etc. . For example some QA systems may be primarily configured to receive textual input queries e.g. user questions analyze textual source items e.g. sources of information such as literature and based on the analysis output textual candidate answers to the user. In some situations this focus on textual content may be appropriate. This may be particularly true in situations where a textual search is likely to produce reliable accurate results or conversely in situations where a non textual medium type search is unlikely to yield material of value. For example searching a corpus of pictures e.g. image type source items might be of only limited use when trying to solve a complex algebraic equation. Moreover in situations where non textual medium type searches are associated with higher resource costs in terms of time money etc. they may not be worth the price potentially even when such searches may be likely to produce better answers to input queries than their textual counterparts.

On the other hand non textual type content may be put to valuable use in QA systems under some circumstances. For example by analyzing images or other non textual medium type source items a QA system may be able to extract data from the non textual source items both textual and non textual data and use this extracted data to produce better answers than could be produced using textual searches. Furthermore some input questions are best answered with non textual candidate answers. Indeed in some situations the old adage that a picture is worth a thousand words may be as true in reference to QA systems as it is anywhere. That is to say a non textual candidate answer may be inherently more likely to be accurate or complete than its textual counterpart. For example in response the question What color is a sunset it may be a better answer to produce a picture of a sunset than to produce a paragraph describing the different combinations of hues that are created when the sun goes down.

Given that non textual medium type searches may have value in some circumstances and not in others there may be some advantage in being able to predict the situations in which these searches should be performed. Specifically in some situations analyzing an input question itself may be helpful in predicting whether a non textual medium type search should be performed as part of attempting to answer that question. Furthermore there may be some advantage in using textual data and non textual data extracted from non textual source items in order to obtain quality candidate answers.

In some embodiments aspects of the present disclosure may include receiving by a QA system an input query of a first medium type e.g. textual type from a user. The input query may be analyzed and based on the analysis a determination may be made that the input query is associated with a second medium type e.g. image type and the input query may be categorized accordingly. A first medium type search of a corpus may then be performed and a first medium type candidate answer may be generated thereby. The QA system may then calculate a confidence score for that candidate answer and compare the confidence score to a threshold e.g. minimum confidence score. If the confidence score is below the threshold a second medium type search may be performed. As a result of the second medium type search a second candidate answer may be generated and presented to the user.

In some embodiments searches e.g. first medium type searches second medium type searches performed as part of the methods described herein may include the steps of extracting data from source items and processing this extracted data. This extracted data may be either of a textual type or of non textual type. The extracted data may then be analyzed as part of generating candidate answers. Further in some embodiments a plurality of factors may be used in determining whether a second medium type search should be performed in any particular case. These factors may include for example the cost of performing a second medium type search.

As discussed above aspects of the disclosure may relate to QA systems. Accordingly an understanding of the embodiments of the present invention may be aided by describing embodiments of these QA systems and the environments in which these systems may operate. Turning now to the figures shown in a block diagram of an example computing environment for use with a QA system in accordance with embodiments of the present disclosure. In some embodiments the computing environment may include one or more remote devices and one or more host devices . Remote devices and host device may be distant from each other and communicate over a network in which the host device comprises a central hub from which remote devices may establish a communication connection. Alternatively the host device and remote devices may be configured in any other suitable relationship e.g. in a peer to peer or other relationship .

In some embodiments the network may be implemented by any number of any suitable communications media e.g. wide area network WAN local area network LAN Internet Intranet . Alternatively remote devices and host devices may be local to each other and communicate via any appropriate local communication medium e.g. local area network LAN hardwire wireless link Intranet . In some embodiments the network may be implemented within a cloud computing environment or using one or more cloud computing services. Consistent with various embodiments a cloud computing environment may include a network based distributed data processing system that provides one or more cloud computing services. Further a cloud computing environment may include any number of computers e.g. hundreds or thousands of them or more disposed within one or more data centers and configured to share resources over the network .

In some embodiments host device may include a QA system having a search application and an answer module . The search application may be implemented by a conventional or other search engine and may be distributed across multiple computer systems. The search application may be configured to search one or more databases or other computer systems for content that is related to a question input by a user at a remote device .

In some embodiments remote devices may enable users to submit input queries e.g. search requests or other user queries to host devices to retrieve search results. For example the remote devices may include a query module e.g. in the form of a web browser or any other suitable software module and present a graphical user interface or other interface command line prompts menu screens etc. to solicit queries from users for submission to one or more host devices and to display answers results obtained from the host devices in relation to such user queries.

Consistent with various embodiments host device and remote devices may be computer systems and may each be equipped with a display or monitor. The computer systems may include at least one processor memories internal or external network interface or communications devices e.g. modem network interface cards optional input devices e.g. a keyboard mouse touchscreen or other input device and any commercially available or custom software e.g. browser software communications software server software natural language processing software search engine and or web crawling software filter modules for filtering content based upon predefined criteria . In some embodiments the computer systems may include servers desktops laptops and hand held devices. In addition the answer module may include one or more modules or units to perform the various functions of embodiments as described below receiving an input query determining whether an input query is associated with a non textual medium type etc. and may be implemented by any combination of any quantity of software and or hardware modules or units.

Turning now to shown is a block diagram of an example QA system configured to generate answers to one or more input queries in accordance with embodiments of the present disclosure. Aspects of are directed toward an exemplary system architecture including a QA system to generate answers to user queries e.g. input questions . In some embodiments one or more users may send requests for information to QA system using a remote device such as remote devices of . Such a remote device may include a client application which may itself involve one or more entities operable to generate information that is then dispatched to QA system via network . QA system may be able to perform methods and techniques for responding to the requests sent by the client application . In some embodiments the information received at QA system may correspond to input questions received from users where the input questions may be expressed in natural language or images or other forms.

A question similarly referred to herein as an input query may be one or more words that form a search term or request for data information or knowledge. A question may be expressed in the form of one or more keywords. Questions may include various selection criteria and search terms. A question may be composed of complex linguistic features in addition to keywords. However a keyword based search for answers may also be possible. In some embodiments using restricted syntax for questions posed by users may be enabled. The use of restricted syntax may result in a variety of alternative expressions that assist users in better stating their needs. In some embodiments input questions may be implied rather than explicit questions. Furthermore in some embodiments questions may be audio type e.g. spoken word recordings music scientific sound recordings video type e.g. a film a silent movie a video of a person asking a detailed question image type e.g. a picture a photograph a drawing or any other type that may be received and processed by the QA system.

In some embodiments client application may operate on a variety of devices. Such devices may include but are not limited to mobile and hand held devices e.g. laptops mobile phones personal or enterprise digital assistants and the like personal computers servers or other computer systems that access the services and functionality provided by QA system . In some embodiments client application may include one or more components such as a mobile client . Mobile client acting as an agent of client application may dispatch user query requests to QA system .

Consistent with various embodiments client application may also include a search application either as part of mobile client or separately that may perform several functions including some or all of the above functions of mobile client listed above. For example in some embodiments search application may dispatch requests for information to QA system . In some embodiments search application may be a client application to QA system . Search application may send requests for answers to QA system . Search application may be installed on a personal computer a server or other computer system.

In some embodiments search application may include a search graphical user interface GUI and session manager . In such situations users may be able to enter questions in search GUI . In some embodiments search GUI may be a search box or other GUI component the content of which may represent a question to be submitted to QA system . Users may authenticate to QA system via session manager . In some embodiments session manager may keep track of user activity across sessions of interaction with the QA system . Session manager may also keep track of what questions are submitted within the lifecycle of a session of a user. For example session manager may retain a succession of questions posed by a user during a session. In some embodiments answers produced by QA system in response to questions posed throughout the course of a user session may also be retained. Information for sessions managed by session manager may be shared between computer systems and devices.

In some embodiments client application and QA system may be communicatively coupled through network e.g. the Internet intranet or other public or private computer network. In some embodiments QA system and client application may communicate by using Hypertext Transfer Protocol HTTP or Representational State Transfer REST calls. In some embodiments QA system may reside on a server node. Client application may establish server client communication with QA system or vice versa. In some embodiments the network may be implemented within a cloud computing environment or using one or more cloud computing services.

Consistent with various embodiments QA system may respond to the requests for information sent by client applications e.g. questions posed by users . QA system may generate answers to the received questions. In some embodiments QA system may include a question analyzer data sources and answer generator . Question analyzer may be a computer module that analyzes the received questions. Question analyzer may perform various methods and techniques for analyzing the questions syntactic analysis semantic analysis image recognition analysis etc. . In some embodiments question analyzer may parse received questions. Question analyzer may include various modules to perform analyses of received questions. For example computer modules that question analyzer may encompass include but are not limited to a tokenizer part of speech POS tagger semantic relationship identifier and syntactic relationship identifier .

In some embodiments tokenizer may be a computer module that performs lexical analysis. Tokenizer may convert a sequence of characters into a sequence of tokens. A token may be a string of characters typed by a user and categorized as a meaningful symbol. Further in some embodiments tokenizer may identify word boundaries in an input question and break the question or any text into its component parts such as words multiword tokens numbers and punctuation marks. In some embodiments tokenizer may receive a string of characters identify the lexemes in the string and categorize them into tokens.

Consistent with various embodiments POS tagger may be a computer module that marks up a word in a text to correspond to a particular part of speech. POS tagger may read a question or other text in natural language and assign a part of speech to each word or other token. POS tagger may determine the part of speech to which a word corresponds based on the definition of the word and the context of the word. The context of a word may be based on its relationship with adjacent and related words in a phrase sentence question or paragraph. In some embodiments the context of a word may be dependent on one or more previously posed questions. Examples of parts of speech that may be assigned to words include but are not limited to nouns verbs adjectives adverbs and the like. Examples of other part of speech categories that POS tagger may assign include but are not limited to comparative or superlative adverbs wh adverbs conjunctions determiners negative particles possessive markers prepositions wh pronouns and the like. In some embodiments POS tagger may tag or otherwise annotate tokens of a question with part of speech categories. In some embodiments POS tagger may tag tokens or words of a question to be parsed by QA system .

In some embodiments semantic relationship identifier may be a computer module that may identify semantic relationships of recognized entities e.g. words phrases in questions posed by users. In some embodiments semantic relationship identifier may determine functional dependencies between entities and other semantic relationships.

Consistent with various embodiments syntactic relationship identifier may be a computer module that may identify syntactic relationships in a question composed of tokens posed by users to QA system . Syntactic relationship identifier may determine the grammatical structure of sentences for example which groups of words are associated as phrases and which word is the subject or object of a verb. Syntactic relationship identifier may conform to formal grammar.

In some embodiments question analyzer may be a computer module that may parse a received user query and generate a corresponding data structure of the user query. For example in response to receiving a question at QA system question analyzer may output the parsed question as a data structure. In some embodiments the parsed question may be represented in the form of a parse tree or other graph structure. To generate the parsed question question analyzer may trigger computer modules . Additionally in some embodiments question analyzer may use external computer systems for dedicated tasks that are part of the question parsing process.

In some embodiments the output of question analyzer may be used by QA system to perform a search of a set of i.e. one or more corpora to retrieve information to answer a question posed by a user. As used herein a corpus may refer to one or more data sources. In some embodiments data sources may include data warehouses information corpora data models and document repositories. In some embodiments the data source may include an information corpus . The information corpus may enable data storage and retrieval. In some embodiments the information corpus may be a storage mechanism that houses a standardized consistent clean and integrated form of data. The data may be sourced from various operational systems. Data stored in the information corpus may be structured in a way to specifically address reporting and analytic requirements. In some embodiments the information corpus may be a relational database. In some example embodiments data sources may include one or more document repositories.

In some embodiments answer generator may be a computer module that generates answers to posed questions. Examples of answers generated by answer generator may include but are not limited to answers in the form of natural language sentences reports charts or other analytic representation raw data web pages and the like. In some embodiments answers may be of audio type image type or any other suitable medium type.

In some embodiments answer generator may include query processor visualization processor and feedback handler . When information in a data source matching a parsed question is located a technical query associated with the pattern may be executed by query processor . Based on data retrieved by a technical query executed by query processor visualization processor may be able to render visualization of the retrieved data where the visualization represents the answer e.g. a candidate answer . In some embodiments visualization processor may render various analytics to represent the answer including but not limited to images charts tables dashboards maps and the like. In some embodiments visualization processor may present the answer to the user.

In some embodiments feedback handler may be a computer module that processes feedback from users on answers generated by answer generator . In some embodiments users may be engaged in dialog with the QA system to evaluate the relevance of received answers. Answer generator may produce a list of answers e.g. candidate answers corresponding to a question submitted by a user. The user may rank each answer according to its relevance to the question. In some embodiments the feedback of users on generated answers may be used for future question answering sessions.

The various components of the exemplary QA system described above may be used to implement various aspects of the present disclosure. For example the client application could be used to receive an input question from a user. The question analyzer could in some embodiments be used to analyze input queries and to categorize input queries as associated non textual medium types. The answer generator could in some embodiments be used to perform textual and or non textual medium type searches and to present candidate answers to users.

Turning now to shown is a flowchart illustrating an example method for answering questions using a QA system in accordance with embodiments of the present disclosure. The method may begin at block where an input query of a first medium type is received. The input query may have originated with a user for example through the query module of remote device of . As used herein a medium type of a query may refer to the format in which the query is posed by a user. Example medium types that may be used include video type audio type image type or textual type. Video type may refer to moving images rendered in any viewable format. These videos may or may not incorporate sound content. An example of video type content might be a six second film clip of a child riding a bike. Audio type may refer to any aural content that is presented without an associated image. An example of audio type content might include a song taken from a compact disc. Further an example of an audio type input query might a recording of a voice asking a specific question. Image type may refer to any still photograph drawing or other visual image. In some embodiments image type content may be rendered from video type content e.g. when a user has taken a single frame from a video . Textual type content i.e. textual content may refer to content having a format that is intended to be read by a human e.g. alphanumeric character strings . In some embodiments textual type content may be a set of words. The set of words may or may not form a sentence. The set of words may or may not include punctuation. The set of words may or may not be spelled correctly. Examples of a textual type input query may include Where is Petoskey or Why is the sky blue 

In some embodiments multiple medium types may be included within a single input question. For example a single question could include the text What color is this shirt along with an image of a teal t shirt. Further it is contemplated that in some embodiments input questions may not always be received from human users and instead may be generated by computer systems or components of computer systems.

Once the input query is received then per block the input query may be analyzed by the QA system. This analysis may be performed for example using question analyzer of . The question analyzer may use one or more components e.g. components that may be able to analyze one or more aspects of the input query. Natural language processing techniques may be particularly appropriate in situations where the input query is of a textual type. It may also be appropriate where the input query is of another type. For example natural language processing may be used to analyze textual annotations e.g. meta tags associated with image type or video type content received as part of the input query. Furthermore ontology matching techniques may also be used.

In some embodiments other techniques may also be appropriate for analyzing input queries. For example an input query of an image type or video type may be analyzed using object recognition software designed to determine the nature of objects within a given image using edge detection greyscale matching gradient matching and other related techniques. Furthermore when audio type content is analyzed software having speech recognition or speaker identification software may be useful. Any other relevant techniques may also be used.

Per block based on the analysis of block a determination may be made as to whether the input query is associated with a second medium type. As used herein an input query of a first medium type may be associated with a second medium type in situations where an answer to the input query is likely to be efficiently shown to a user in the format of the second medium type. The input query may also in some embodiments be associated with a second medium type in situations where searching content of the second medium type is likely to lead to a high quality answer to the input query. Further in some embodiments where there is textual input query the input query may be deemed associated with a non textual medium type in situations where the words of the input query either individually or together connote imply or suggest a particular non textual medium type or concepts that are generally presented in non textual medium type formats. More particularly this may occur when the words or structure of a textual input query are related to an ontology of a particular non textual medium type. For example words like sound listen heard and noise may indicate an association with an audio type e.g. because these words represent concepts that encompassed within an audio type ontology . Further in some embodiments words like look color and bright may presume that is there is a relationship to an image type. Further in some embodiments actions verbs that imply changes in physical status or movement running dancing growing etc. may mean that the textual input query is associated with a video type. Other types of associations are also possible.

An example of an input query that is associated with a second medium type might include a written question of What sound does a dove make In this example the input query is of a textual type and the QA system may determine e.g. using natural language processing that keys on the word sound that the question is associated with an audio type. Another example of an input query that is associated with a second medium type might be a question that is posed in the form of a photograph of the painting of the Mona Lisa. In this second example the input query is of the image type and the QA system may analyze the photograph e.g. using natural language processing of meta tags associated with the photograph or using facial recognition technology to analyze the image of the face within the painting to determine that the query is associated with the textual type e.g. because the QA system recognizes the image as a painting and knows that questions posed as a painting is usually best answered with the written title of the painting .

Depending on the determination made in block the method may continue to block or block . If in block it is determined that the input query is not associated with a second medium type then the QA system may per block perform normal search operations in order to generate a candidate answer to the input query. These operations may be well known to those skilled in the art. If however in block a determination is made that the input query is associated with a second medium type then per block the input query may be categorized as being associated with the second medium type. In some embodiments this categorization may take the form of a simple notation that is associated with the input query or its processing history.

Next per block the QA system may perform a first medium type search of a set of corpora. As used herein a specific medium type search may refer to a search for e.g. analysis of source items of that medium type e.g. various units of written printed or electronic matter that provide information or evidence as part of generating candidate answers to an input query of the same or different medium type . For example an image type search might incorporate a review and processing of all of the relevant image type source items photographs drawings etc. that are in a particular corpus. Further as part of such an image type search both visible content of each source item may be searched as well as the underlying data e.g. both a webpage image itself and the webpage image s source code . In some embodiments the searched corpora could contain only source items of one particular type e.g. all audio type source items . In other situations the searched corpora could contain multiple different types of source items and QA system could then determine which of the source items are of the type that is relevant for a given search.

As stated herein in this example of method the search that is performed in block is of the same type as the input query e.g. if the input query is in a textual type format then the search of block is also of the textual type . This may decrease the quantity of source items that are searched or the complexity of the search process e.g. because it may be more cost effective to search for source items that are of the same medium type as the relevant input query .

Next per block a first set of i.e. one or more candidate answers of the first medium type may be generated as a result of the first medium type search. In this context in some embodiments generating may refer to initially identifying a candidate answer using one or more source items to supporting using the one or more source items a candidate answer that was previously generated or both. Furthermore in some embodiments some potential candidate answers may be identified or generated but later rejected or modified without becoming part of the set of candidate answers.

In some embodiments this step of generating may be performed for example using answer generator of . Further in some embodiments a source item may support more than one candidate answer and a candidate answer may be supported by one or more source items. Moreover in some embodiments a source item may itself become a candidate answer. For example if an image type search is performed of corpus including a picture of a house as a source item then that picture if relevant could be used as a candidate answer.

At block a confidence score may be calculated for each candidate answer of the first set of candidate answers. In some embodiments each confidence score may indicate a level of confidence in a given candidate answer based on a number of factors. These factors may include for example the trustworthiness of a source item s publisher the content of a source item the content of a candidate answer the similarity of the context of a source item with the context of an applicable user question etc. It is contemplated that factors may be weighted differently and that not all factors may be applicable to every candidate answer. In some embodiments a confidence rule may be used to determine confidence scores. As used herein a confidence rule may refer to a rule e.g. an algorithm a set of algorithms or a set of other procedures that may rely on inputting values for variables in order to output a score that may be indicative of among potentially other things the value of a given source item in the context of supporting a given candidate answer to a given input query.

Next per block a determination may be as to whether all of the confidence scores associated with the first set of candidate answers are below a threshold confidence score. As used herein a threshold confidence score may be indicative of a minimal acceptable level of confidence in a particular candidate answer. Different threshold confidence scores may be used under different circumstances. If at least one of the confidence scores is above the threshold level of confidence then per block one or more of the candidate answers e.g. the candidate answer with the highest confidence score may be presented to the user. If however all of the confidence scores are below a threshold level of confidence then per block the QA system may perform another search of the set of corpora with this search being a second medium type search. This search may in some embodiments be performed in the same manner as the first medium type search of block with an exception being that this second search may be of the second medium type i.e. the medium type with which the input query was categorized as being associated in block . In some embodiments the second medium type search may be performed in a different corpus or set of corpora than the corpus or corpora in which the first medium type search was performed.

In block either as part of the search of block or separately first data of the first medium type may be extracted from a set of source items of the second medium type e.g. relevant source items found by the QA system during the search of the set of corpora . Similarly in block second data of the second medium type may be extracted from the set of source items. Next per block the first and second extracted data may be processed. More details regarding blocks are discussed herein in reference to . As a result of the processing per block a second set of one or more candidate answers are generated and per block the second set of candidate answers may be presented to the user for example via a user interface of remote device of . As discussed previously not all potential candidate answers may be presented to the user and the final version of the second set of candidate answers may be selected based on having the highest confidence scores of all of the potential candidate answers. In some embodiments the set of candidate answers presented to the user may include only a single best candidate answer. Further in some embodiments the second set of candidate answers may include candidate answers of the first medium type the second medium type or both. For example a set of five candidate answers presented to a user could include three candidate answers of the first medium type and two candidate answers of the second medium type.

Many variants of method are contemplated. For example in some embodiments the first medium type search of block may not be comprehensive search but rather a lesser preliminary search used to determine whether a second medium type search should be performed. In some embodiments such a preliminary search may be designed to be faster and or less expensive in terms of monetary costs or other resources than normal searches that the QA system might perform under other circumstances. A preliminary search may be useful for example when performing a first medium type search is less expensive than performing a second medium type search and the QA system needs to determine whether performing the second medium type search will be necessary or worthwhile.

In another variant of method in some embodiments an input query of a first medium type may per block be determined to be associated with more than one other medium type. For example a textual type input question of How do I ride a bike may be associated with both an image type and a video type. In some embodiments in instances where more than one medium type is determined to be associated with the input query the input query may be categorized as associated with each type and corresponding search of each type may be performed for example per block . In this bike example both a video type search and image type search may be performed. Moreover in this example the set of candidate answers presented to the user may include all three of textual type video type and image type responses.

In yet another variant of method in some embodiments a set of relative value criteria may be used in setting a threshold confidence level e.g. as is shown in block when determining whether to perform a second medium type search of the set of corpora. As used herein relative value criteria may refer to criteria that relate to whether a second medium type search is worth performing. Factors that may affect relative value criteria and therefore the threshold confidence score may include the resource cost of performing a second medium type search and the relative importance of answering the input query correctly. For example a lower threshold confidence score may be used in situations where the input query relates to relatively unimportant subject matter.

In yet another variant of method in some embodiments the concept of using confidence scores to determine whether a second medium type search should be performed e.g. per blocks and may be eliminated. For example in some embodiments once the input query is categorized as being associated with the second medium type per block then both the first medium type search and the second medium type search may be performed at the same time e.g. a variant of method may be used wherein blocks are ignored and blocks and are combined . Further in some embodiments where a first medium type search and a second medium type search are performed contemporaneously e.g. as part of the same search a single set of candidate answers including candidate answers of the first medium type the second medium type or both may be generated from the searches and presented to the user.

Turning now to shown is a block diagram of high level logical architecture of an example QA system being used to provide a textual response to an example textual input query in accordance with embodiments of the present disclosure. Aspects of are directed toward components and modules for use with a QA system . In some embodiments host device and remote device may be embodied by host device and remote device of respectively. In some embodiments the question analysis module located on host device may receive a natural language question e.g. a textual input query from a remote device and may analyze the question to produce information about the question based on the question s content and context. This may be accomplished for example by using components of . The information produced by question analysis module may include for example the fact that there may be an association between the input query and a second medium type the second medium type being in this particular case an image type. In addition the question analysis module may formulate queries and then pass these queries on to textual search module which may consult various corpora e.g. resources such as the internet or one or more knowledge resources to retrieve textual type source items that are relevant to answering the user question.

Further as shown in the textual search module may consult first corpus . The textual candidate answer generation module may extract from the search results obtained by textual search module potential candidate answers of the textual type which it may then score e.g. with confidence scores and rank. The confidence scores of this first set of candidate answers may then be compared with a threshold confidence score by an answer evaluation module . If there are confidence scores that exceed the threshold then one or more candidate answers may then be sent from the answer evaluation module to remote device for presentation to the user. If however none of the candidate answers exceed the threshold level of confidence then given that the input query was associated with the image type the first set of textual candidate answers are not presented to the user. Instead image type search module is used to perform an image type search of a second corpus . Based on the results of this second search second candidate generation module generates a second set of candidate answers which are then presented to the user via remote device .

A more specific example of the architecture of system being used to answer an input query will now be provided. In this example a user enters an input query of What is 132 divided by 12 in a user interface of remote device . The question is transmitted to host device where it is received by question analysis module . Using various natural language processing techniques the question analysis module determines that the input query is not associated with any other medium type e.g. any non textual medium type . The fact that the input query has not been categorized as associated with a second medium type is transmitted to the answer evaluation module . The question analysis module then transfers the input query either in an unmodified form or modified to the textual search module . The textual search module then performs a search of first corpus for relevant textual type source items. In this instance a textual division table is discovered in the search and used by textual candidate answer generation module to obtain a candidate answer of 11 . A relatively high confidence score is then calculated for the candidate answer. The candidate answer is then transmitted to the answer evaluation module . The answer evaluation module determines that because the input query is not associated with any non textual medium type which fact was itself determined by question analysis module other non textual search modules should not be used. The answer evaluation module then transmits the answer of 11 and the associated confidence score to the remote device for presentation to the user.

Turning now to shown again is the block diagram of the high level logical architecture of the example QA system this time being used to provide an image type response to a different example textual input query in accordance with embodiments of the present disclosure. In this second example the input query received by the remote device is What does a lion look like This new query is transmitted to question analysis module . The question analysis module determines that the input query is associated with an image type e.g. because the QA system recognizes that look connotes an image and that a lion is a visible physical object . The input query is then categorized as associated with the image type and notice of this categorization is transmitted to the answer evaluation module . The question analysis module then transfers the input query to the textual search module . The textual search module then searches the first corpus for relevant textual source items. In this instance several passages describing lions are taken from books discovered in the search and used by textual candidate answer generation module to obtain a candidate answer of a large cat. The answer however receives a low confidence score. The textual candidate answer is then transmitted to the answer evaluation module . The answer evaluation module then compares the confidence score to the appropriate threshold confidence score. The answer evaluation module then determines that because the confidence score associated with the textual candidate answer is below the threshold and because the input query is associated with the image type that an image type search should be performed. The input query is then transmitted to the image type search module which performs an image type search of second corpus . A digital photograph of a lion discovered in the second search is then selected as the second candidate answer by the second candidate answer generation module . The lion photograph is then transmitted to remote device and presented to the user as the answer to the input query.

Turning now to shown is a block diagram illustrating an embodiment of a QA system using an image type search to obtain an image type candidate answer to a textual input query according to embodiments of the present disclosure. In this example the query input is What shape is a football Because of the irregular shape of footballs it may be likely that a satisfactory textual answer would not be produced as a result of textual search of a corpus in this particular instance. An image type search module may thus be called upon to perform an image type search of corpus which may be the same or different corpus from the corpus in which the related textual search was performed . In this example the search of the corpus uncovers two relevant images an image of a football alone and an image of a child carrying a football . In this example additional analysis may be necessary in order for the QA system to decide which of the images would be a better candidate answer to the input query . In this example the image of the football alone is selected and presented to user as candidate answer output . The image may be selected over the other image for example because the QA system determines that the shape of the football in the second image is too obscured by other objects in the image to be a satisfactory candidate answer.

While some of the examples provided herein discuss the concept of an image type search being used to obtain image type answers it is also contemplated that in some embodiments image type searches may be used to generate textual answers. Turning now to shown is a block diagram illustrating an embodiment of a QA system using an image type search to obtain a textual candidate answer to a textual input query according to embodiments of the present disclosure. In this example the QA system may receive an input of What color is a trombone To continue the example a textual type search may be performed and yield a first candidate answers with low confidence which may prompt the system to use image type search module to perform an image type search of corpus . The search of corpus may yield several image type source items including the first image of a trombone taken from an online auction website with the auction image including a meta tag having a description of the trombone and a second image that is an old photograph of a boy playing a trombone with the photograph including a handwritten message of November 1959 Johnny playing his golden trombone. As part of the search the image type search module may extract textual data from these image source items e.g. meta tag and handwritten message . This textual data may be processed e.g. analyzed using natural language processing to obtain a textual candidate answer output of gold. In this particular example the answer of gold may be generated based on an analysis of the word gold in the meta tag and the word golden in the handwritten message .

It is noted that in reference to the concept of processing textual data extracted from non textual source items e.g. image type source items in order to obtain a candidate answer is shown. Other types of data e.g. non textual data however may also be used in some embodiments. Turning now to shown is a block diagram illustrating an embodiment of a QA system using non textual data to obtain a textual candidate answer to a textual input query according to embodiments of the present disclosure. The example shown in this figure is the same as the example of except in this instance the candidate answer of gold is obtained by analyzing non textual data extracted from the trombone auction image and the old trombone photograph image rather by than analyzing textual data as was done in reference to . In this example image recognition software is used to perform a shape capture and color capture of trombone auction image . The shape capture may result in a determination that the image includes a trombone mouthpiece and the color capture may capture a gold color. Likewise the image recognition software may perform a shape capture and color capture of old trombone photograph image . The shape capture may result in a determination that the image include a trombone bell and the color capture may capture a gold color. This non textual data extracted from both images and may then be analyzed and used to generate a candidate answer output of gold . Furthermore in some embodiments the textual data analysis of may be combined with the non textual data analysis of to yield a better candidate answer or more confidence in the candidate answer of gold. 

While the examples provided in reference to use an image type search to obtain a textual candidate answer it is more broadly contemplated that in some embodiments any first medium type search could be used to obtain a candidate answer of any other second medium type. For example a video type search could be used to generate an image type answer e.g. by extracting a single frame from a video source item and presenting that as an answer to the user . As another example an audio type search could be used to generate a textual answer e.g. by using speech recognition software to generate writing from an audio track which text is then presented as a candidate answer . Furthermore in some embodiments where a second medium type candidate answer is provided the results of the first medium type search may be added as evidence and returned to the user in order to show the answer generation process.

As discussed in more detail below it is contemplated that some or all of the steps of some of the embodiments of methods described herein may be performed in alternative orders or may not be performed at all furthermore multiple steps may occur at the same time or as an internal part of a larger process. For example per blocks and of method of the first data and the second data may in some embodiments be extracted together rather than as being extracted as part of separate steps having their own distinct outputs.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present disclosure have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

