---

title: Method and apparatus for deploying a minimal-cost CCN topology
abstract: A CCN-deployment system can design and deploy a content centric network (CCN) topology, either across a collection of CCN nodes or across an existing computer network. During operation, the system analyzes a computer network of N network nodes to determine a physical network topology. The system also determines a number, k, of network nodes of the physical network on which to overlay a content centric network (CCN). The system then determines an average degree of connectivity, and a degree-of-connectivity distribution, that achieves an optimal performance metric for the CCN overlay network. The system generates a network topology of k network nodes that satisfies the average degree of connectivity, and that satisfies the degree-of-connectivity distribution. The system can deploy the content centric network topology across k nodes of the underlying physical network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09537719&OS=09537719&RS=09537719
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09537719
owner_city: Palo Alto
owner_country: US
publication_date: 20140619
---
This disclosure is generally related to computer networks. More specifically this disclosure is related to deploying an overlay content centric network across an Internet Protocol network.

Recent research efforts are producing content centric networking CCN to re architect the entire network stack around content. In CCN packets typically do not contain network addresses for a source and a destination of the packet. Rather clients issue requests for Content Objects and routers across the network route these requests directly through the network to a closest network node that stores a copy of the content which returns a packet that includes the requested Content Object to respond to the request.

CCN can use controlled flooding as a mechanism to route the requests to the appropriate content providers which eliminates the burden of having to configure explicit routes to all possible content providers. However the benefits produced by this mechanism comes at the cost of an increased overhead of the object requesting traffic in the network. To make matters worse the way CCN nodes are connected to each other has a major impact in the amount of Interests present in the network which makes it difficult to deploy a CCN network without a debilitating overhead. For example a sub optimal CCN topology may cause Interests to flow via an undesirably large number of links and can produce network congestion at certain CCN nodes. This sub optimal topology can result in unnecessary processing overhead at the CCN nodes and can increase the delivery time for content accessed by these Interests.

One embodiment provides a system that designs and deploys a content centric network CCN topology either across a collection of CCN nodes or across an existing Internet Protocol IP network as an overlay. During operation the system analyzes a computer network of N network nodes to determine a physical network topology. The system also determines a number k of network nodes of the physical network on which to overlay a content centric network CCN . The system then determines topology specific properties such as average degree of connectivity and a degree of connectivity distribution that achieves an optimal performance metric for the CCN overlay network. The system generates a network topology of k network nodes that satisfies the average degree of connectivity and that satisfies the degree of connectivity distribution or any other alternative or additional requirement . The system can deploy the content centric network topology across k nodes of the underlying physical network.

In some embodiments the overlay CCN network can forward Interest messages based on a name for a piece of data using the IP based physical network. In CCN each piece of content is individually named and each piece of data is bound to a unique name that distinguishes the data from any other piece of data such as other versions of the same data or data from other sources. This unique name allows a network device to request the data by disseminating a request or an Interest that indicates the unique name and can obtain the data independent from the data s storage location network location application and means of transportation. The following terms describe elements of a CCN architecture 

Content Object A single piece of named data which is bound to a unique name. Content Objects are persistent which means that the unique name and data are bound via a cryptographic signature. A Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name via a new cryptographic signature.

Unique Names A name in a CCN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object without requiring a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ndn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ndn test.txt. Thus the name parc home ndn can be a parent or prefix of parc home ndn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814 entitled ORDERED ELEMENT NAMING FOR NAME BASED PACKET FORWARDING by inventor Ignacio Solis filed 20 Mar. 2013 which is hereby incorporated by reference. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

Interest A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an Content Centric Network which CCN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

In some embodiments the methods disclosed herein are also applicable to other information centric networking ICN architectures such as a named data network NDN . A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference.

In some embodiments the performance metrics include at least one of Interest overhead a number of Interest retransmissions available network bandwidth a network utilization and an Interest to Content Object round trip delay.

In some embodiments while determining the average degree of connectivity the system iterates over one or more values for average degrees of connectivity to generate a network topology of k network nodes for each average degree of connectivity. The system computes a performance metric for each network topology and selects an average degree of connectivity with a highest performance metric.

In some embodiments while determining the degree of connectivity distribution the system determines an optimal distribution based on a power law distribution based on a Gaussian distribution or parameters associated with the distribution. The system can also determine an optimal distribution based on any other probability distribution now known or later developed and or with parameters associated with the distribution.

In some embodiments while determining the degree of connectivity distribution the system iterates over one or more distribution functions to generate a network topology of k network nodes that satisfies the average degree of connectivity based on a corresponding distribution function. The system then computes a performance metric for each network topology and selects a degree of connectivity distribution with a highest performance metric.

In some embodiments while determining the degree of connectivity distribution the system iterates over one or more parameters for the distribution function to generate a network topology of k network nodes that satisfies the average degree of connectivity based on each distribution function. The system then computes a performance metric for each network topology and selects network parameters with a highest performance metric.

In some embodiments while determining the degree of connectivity distribution the system determines an optimal degree distribution matrix that specifies an occurrence value for each pair of degrees of connectivity. The degree distribution matrix achieves an optimal performance metric for a network topology of k network nodes that satisfies the average degree of connectivity.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a CCN deployment system that solves the problem of determining an optimal network topology for a content centric network CCN such as when deploying the CCN network on a network where every node has CCN capabilities or when deploying a CCN overlay on top of the Internet or any physical network. For example a physical network can include a set of routers servers and client devices each of which is tied to an IP address. Specifically each IP address corresponds to a specific network node of the physical IP network and nodes in the physical network can forward a data packet to an intended recipient based on its IP address. However in a CCN network an Interest message specifies a name for a piece of data being requested and nodes across the CCN network can forward the Interest message to reach any device that can provide the data.

In some embodiments the CCN deployment system can determine a network topology for the CCN network and deploys the CCN network across the physical IP network as an overlay network using a subset of the nodes in the IP network. While deploying the CCN network the CCN deployment system may create the appropriate faces e.g. physical or virtual interfaces or virtual links across the physical IP network that implement the CCN topology. Also the CCN network s topology can influence the performance of the overlay CCN network. Hence the system can test various topology parameters using one or more performance metrics to determine which topologies achieve near optimal performance metrics. The connectivity properties of the CCN topology can have a major impact in the amount of Interests present in the network. For instance a sub optimal CCN topology may cause Interests to flow via an undesirably large number of links and can produce network congestion at certain CCN nodes.

The system can use graph characterization as well as connectivity information among the CCN nodes to create the overlay CCN network and to predict performance metrics for the overlay network. These performance metrics can include typical network performance metrics as well as CCN specific performance metrics such as a number or percentage of CCN Interests messages that are transmitted or retransmitted an overhead due to these Interests messages an expected time to retrieve the Content Object etc.

The system can use these predicted metrics as well as measurements gathered from the live network to fine tune the overlay network s topology such as by creating new CCN faces or links or tearing down existing CCN faces to achieve an optimal CCN network topology. For example if a network provider wants to deploy CCN on k nodes of a physical network the system can compute the best CCN overlay topology design e.g. a mesh topology a tree topology etc. based on the connectivity properties of each overlay network to predict the performance metrics. The operator or the CCN deployment system can adjust the overlay CCN network by dynamically adding or removing CCN edges based on the CCN topology produced by the system.

In some embodiments physical network may include a pre existing computer network such as an IP based network. The CCN deployment system can select a subset of physical network to use for deploying an overlay CCN network illustrated using bold lines in physical network . For example the system can determine that a four node overlay CCN network can have a near optimal performance when the overlay CCN network has a certain topology e.g. a tree topology or a topology with a certain average degree or a certain degree distribution . Hence the system can deploy overlay CCN network by configuring edge node and edge node to also function as CCN nodes. Edge nodes and can include a forwarding information base FIB for processing and forwarding Interests a pending interest table PIT for processing and forwarding Content Objects and a Content Store CS for caching Content Objects. The system can also configure router nodes and to operate as CCN nodes due to their high degree of connectivity. Specifically the system can configure router node to operate as a hub of overlay CCN network due to its connectivity to the other nodes of CCN network .

In some embodiments the system can maintain overlay CCN network to ensure that it maintains a desired topology. For example if a link or a CCN face fails or if a CCN node goes offline or becomes unreachable e.g. router node or the system can select other nodes in the physical network to use to preserve the same topology or can deploy an alternative CCN network topology that achieves near optimal performance metrics.

The CCN deployment system characterizes network topology properties that contribute to the increase in the Interests overhead and that impact the time to deliver content and use this property characterization information to design optimal CCN overlays. For example the system can first isolate the topological properties that impact CCN Interest overhead and the time to deliver content. To achieve this the system analyzes graph properties in a dK series of graphs to determine how they are interconnected. These graphs include n nodes where degrees k k . . . kare the unique degrees in the graph. The number of unique degrees p does not need to be equal to the size of the graph n as multiple nodes may have the same degree.

The system can generate a set of dK graphs that reproduce a correlation between each dK property and the degrees of connectivity in all d sized sub graphs of an underlying graph e.g. an underlying N node physical network topology . When d 0 0K graphs reproduce the average degree of connectivity of the underlying graph. For d 1 1K graphs reproduce the degree of connectivity distribution of the underlying graph. When d 2 2K graphs reproduce the joint degree distribution of the given graph. Extending this series in a similar fashion when d n the generated nK graphs are isomorphic to the underlying graph. In summary each property in the dK series embeds increasingly more information about the underlying graph s structure and thus the corresponding dK graphs are increasingly constrained until the dK graphs converge to the underlying graph.

The system can generate the dK graphs by generating random graph structures that satisfy the dK distribution and measures the expected CCN performance metrics e.g. the Interest overhead and time to deliver content for each chosen distribution. These dK graphs can reveal the distribution of topological properties for various graph topologies such as the average node degree or the probability of finding k 1 nodes interconnected in a given structure e.g. a tree structure a mesh structure etc. . For example 2K graphs can reveal the probability that a node of degree m connects to another node with degree p. Further 3K graphs can capture the probability distribution of loops up to 3 nodes. Once the dK distribution is revealed the dK graph constructing algorithm can be used to construct random graphs that represent this distribution.

In some embodiments the system can characterize 2K graphs by their assortativity coefficient which summarizes the 2K graph configuration distribution in one single value. The system can map performance metric values e.g. an expected CCN traffic overhead and a time to deliver content to the corresponding assortativity coefficient that describes the topological properties of a specific 2K family of graphs.

The system can also generate a plot graph that illustrates this mapping with the performance metrics on the x axis and the assortativity coefficients on the y axis to allow network administrators to easily choose an assortativity coefficient that best suits the needs of their CCN infrastructure. The plot graph can include a plot for each different performance metric being used to analyze the dK graphs which illustrates the correlation between the assortativity coefficients and the various corresponding graph structures to the various different performance metrics.

In some embodiments the system can automatically e.g. without human intervention compute a near optimal assortativity coefficient value by searching for and identifying an assortativity coefficient that optimizes one or more predetermined performance metrics e.g. by minimizing both the average path length and the average Interests count .

The system can also analyze higher order dK graphs. For example the system can analyze 3K graph probability distributions to compute a clustering coefficient. These 3K graphs can yield more information about the graph topological constraints but doing so requires a significantly higher computational overhead. As a work around to this problem the system can generate smaller 3K graphs to analyze their graph topological constraints and compare their clustering coefficients. Then after selecting a graph structure that satisfies the topological constraints the system can use a graph scaling algorithm to generate a scaled the graph of the desired size and which preserves the desired graph structure s clustering coefficient.

Once the system identifies the assortativity coefficient and or the clustering coefficient that satisfies CCN network requirements the system can generate the necessary CCN topology that satisfies these coefficients using the dK graph constructing algorithm. The administrator can also use the CCN deployment system to further refine the CCN topology using real world performance data obtained after having deployed the CCN topology across a computer network e.g. the Internet or any physical network . For example if the deployed CCN topology experiences congestion conditions or when down links are detected in a running CCN environment the system can revise the CCN topology to produce a new graph configuration that preserves the desired dK distribution.

The system then selects a number k for a size of an overlay content centric network to deploy over the physical network operation . The system also determines characteristics of the overlay content centric network that can optimize one or more performance metrics. For example the system can construct and analyze various overlay network topologies to determine an average degree of connectivity that achieves an optimal performance metric for the overlay CCN network operation . The system can also fine tune the requirements for the overlay network topology by constructing and analyzing various overlay network topologies to determine a degree of connectivity distribution that satisfies the average degree of connectivity and that further optimizes the performance metric for the overlay CCN network operation .

In some embodiments the system can determine whether to further optimize the performance metrics operation . If the system does not need to further optimize the performance metrics the system can proceed to generate a network topology of k nodes that satisfies the average degree of connectivity and the degree of connectivity distribution operation .

On the other hand if the system needs to further optimize the performance metrics the system can determine an optimal degree distribution matrix that further optimizes the performance metrics for a network topology that satisfies the average degree of connectivity operation . The system then generates a network topology of k nodes that satisfies the average degree of connectivity and the degree distribution matrix operation .

Once the system has generated an optimized network topology the system can deploy the overlay CCN network across k nodes of the physical network topology operation .

In some embodiments the system generates degree of connectivity distribution to satisfy a predetermined average degree of connectivity. For example if the system has determined that an average degree of connectivity of 1.96 can result in near optimal performance metrics the system can generate various alternative degree of connectivity distributions that satisfy the 1.96 average degree of connectivity. The system can use a power law distribution function a Gaussian distribution function or any other distribution function now known or later developed. While generating distribution the system can fine tune the distribution function s parameters to ensure the distribution satisfies the predetermined average degree of connectivity. The system can test these various distribution functions by generating and simulating various network topologies that satisfy these distributions and selects a distribution that further improves the quality metrics.

Also the system can generate degree distribution matrix to satisfy a predetermined average degree of connectivity. In some embodiments the system can generate matrix by first entering values based on a predetermined distribution function and then adjusting the occurrence values at various cells to further improve the quality metrics while preserving the predetermined average degree of distribution. In some other embodiments the system can generate matrix by first entering randomly generated occurrence values for each cell across matrix . The system then adjusts the occurrence values at various cells to further improve the quality metrics and to preserve the predetermined average degree of distribution.

If the system has more average degree of connectivity values to analyze the system can return to operation . Otherwise the system can proceed to select an average degree of connectivity with a highest performance metric operation .

The system then generates a network topology of k network nodes operation and computes a performance metric for the network topology operation . The system generates the network topology so that it satisfies the average degree of connectivity and satisfies the distribution function and the parameters. Also the system can store the performance metric in association with the average degree of connectivity the distribution function and the function parameters such as in a flat file e.g. a spreadsheet document or in a database repository.

In some embodiments the system can generate and test additional alternative network topologies for other function parameters or for other distribution functions. For example if the system needs to analyze other parameters for the same distribution function operation the system can return to operation to select other parameters and to compute a performance metric for these parameters. Otherwise if the system needs to analyze a different distribution function operation the system can return to operation to select another distribution function and function parameters for the k nodes and to compute a performance metric for this other function and its parameters.

Once the system has computed performance metrics for various distribution functions and various alternative function parameters the system can determine the highest computed performance metric and can select a distribution function and function parameters that are stored in association with the highest performance metric operation . The system can use this distribution function and function parameters to produce network topologies with a near optimal performance metric.

In some embodiments topology characterizing module can determine a number k of network nodes for a CCN network and can determine at least an average degree of connectivity and a degree of connectivity distribution that achieves an optimal performance metric for the CCN network. Topology generating module can generate a network topology of k network nodes that satisfies the average degree of connectivity and satisfies the degree of connectivity distribution. Network analyzing module can select k of network nodes of a computer network on which to overlay the CCN network such that the selected nodes satisfy the generated network topology for the CCN network. Also CCN deploying module can deploy the CCN network across the k nodes of the computer network.

CCN deployment system can include instructions which when executed by computer system can cause computer system to perform methods and or processes described in this disclosure. Specifically CCN deployment system may include instructions for determining a number k of network nodes for a CCN network and determining at least an average degree of connectivity and a degree of connectivity distribution that achieves an optimal performance metric for the CCN network topology characterizing module . Further CCN deployment system can include instructions for generating a network topology of k network nodes that satisfies the average degree of connectivity and satisfies the degree of connectivity distribution topology generating module .

CCN deployment system can include instructions for select k of network nodes of a computer network on which to overlay the CCN network such that the selected nodes satisfy the generated network topology for the CCN network network analyzing module . CCN deployment system can also include instructions for deploying the CCN network across the k nodes of the computer network CCN deploying module .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least a network topology of an underlying physical network a series of network topologies for various graph sizes k and for various average degrees of connectivity d performance metrics for the various network topologies and an optimized topology for a CCN network to deploy across the underlying physical network.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

