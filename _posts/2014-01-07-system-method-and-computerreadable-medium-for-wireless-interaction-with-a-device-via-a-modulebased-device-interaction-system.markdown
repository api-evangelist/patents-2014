---

title: System, method, and computer-readable medium for wireless interaction with a device via a module-based device interaction system
abstract: A system, method, and computer-readable storage medium that enable a person to monitor and/or control a device via a network, such as the Internet, via an interactive hardware module that interfaces with the device and communicates with a module server located locally or remotely from the placement of the module. The hardware module allows for the transmission and receipt of data between the device interfaced to the hardware module and the module server, thereby enabling the user manually or automatically to control or monitor the device via an access medium, such as an API. The hardware module and the device may be interfaced via a wired or a wireless connection. Furthermore, the hardware module and the module server may enable the activation of an inactive device from a remote location.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09497261&OS=09497261&RS=09497261
owner: ioBridge, Inc.
number: 09497261
owner_city: Marlborough
owner_country: US
publication_date: 20140107
---
This application claims the benefit of U.S. provisional application No. 61 749 403 filed Jan. 7 2013 and is also a continuation in part of U.S. patent application Ser. No. 14 144 074 filed Dec. 30 2013 which is a continuation of U.S. patent application Ser. No. 13 585 362 filed Aug. 14 2012 which is a continuation of U.S. patent application Ser. No. 12 629 455 filed Dec. 2 2009 now issued U.S. Pat. No. 8 271 629 which claims the benefit of U.S. provisional application No. 61 200 692 filed Dec. 2 2008. This is also related to U.S. patent application Ser. No. 13 351 608 and U.S. patent application Ser. No. 13 220 685 filed Aug. 30 2011. All these aforementioned applications and any application claiming priority to them are incorporated by reference herein in entirety for all purposes.

This application relates generally to the control of remote mechanisms via a network. More particularly the present invention relates to an Internet based medium for controlling or monitoring devices via a network connection via wireless communication.

Controlling devices over the Internet requires considerable knowledge across several fields. For example to manipulate a device via the Internet such as via an interactive Web site a person may need to understand Web site design networking server management communication protocols multiple programming languages embedded systems and mechatronics. As such the vast majority of people do not possess the necessary skills to configure a system allowing for the control of a device via the Internet.

In addition to the knowledge required the hardware requirements of such an undertaking are prohibitive to small entities such as individuals or small organizations. Current Internet based device monitoring and control interface systems are meant for industrial applications. The expense and power requirements of industrial equipment are too great to make this a realistic solution. In addition the equipment is rather large consuming large cabinets and racks impractical for home or small business use. This solution may also require familiarity with the equipment s programming interface and custom cabling and hardware.

Other current solutions for Internet based device control require a person to establish a server which accepts requests from the Internet. These servers are typically embedded Web servers that host their own Web pages for device interaction. The Internet connections employed by small entities are typically based on dynamic internet protocol IP address assignment. Hosting a server on a dynamic IP address is problematic because the IP address may change causing a disruption in the server s connection to the Internet and preventing a remote user from contacting the server. Additionally hosting a server requires the user to configure the local network. An average person may have difficulty with the intricacies of remapping router ports and other such matters. Furthermore some individuals may not have access to their Internet connection networking equipment such as people living in apartment complexes or dormitories. Internet Service Providers ISPs may cause additional problems for server based architectures. Many ISPs frown upon users hosting servers and may block ports used for this.

Both the aforementioned industrial and server solutions lack convenient mechanisms for Web site and Web service integration. Considerable knowledge of Hypertext Markup Language HTML JavaScript and Application Programming Interfaces APIs is required to place any controls on a Web site or to establish access via a Web service such as a social network web application desktop program mobile application etc. As a result such a solution requires customized Web site integration which again is beyond the skills of the average user.

One particular control procedure Wake on LAN WOL pertains to activating waking a device such as a computer from a remote location. An individual or an organization may wish to employ WOL to save on the costs accrued from running unnecessary devices full time. For example a field agent may require occasional remote access to a computer at his company s headquarters. WOL technology would allow the company to only pay for the energy used by the computer when it was in use by the remote field agent. However current systems do not allow for convenient or cost effective WOL configurations particularly when the device needs to be activated from outside the local network. For example WOL is often accomplished by a user remotely connecting to a peer computer on a network and having it send a special network message called a magic packet to the desired computer on the same network. The magic packet contains the media access control MAC address of the desired computer thereby identifying it. This configuration requires that the peer computer be left continuously activated in order to activate other computers and thus does not resolve the problem as power must be provided to the peer computer.

Additional obstacles arise when a user wishes to use the Internet to interact with devices that are not in close proximity to a network connection e.g. a router or a network interface. Using wires to connect nonadjacent devices is often troublesome and impractical. For example if a user s Internet connection is located on the ground floor of a building and the device he wishes to interact with is located on the second floor the user would be required to run wire through the building s structure in some fashion. A user may seek to avoid the problems of wired connections by connecting the nonadjacent device via a wireless connection however a wireless connection poses problems as well. The user may need to configure the device so that it interacts properly with a network connection a server and or a mechanism used to interact with the device via the network. This can be a daunting task for an average user.

What is needed is a convenient mechanism that enables an average person to configure an architecture to control or monitor a device via an Internet based medium. Furthermore what is needed is a mechanism for enabling a user to activate an inactive device via an Internet based medium. Additionally what is needed is a mechanism for enabling a device for wireless connectivity so that the device may be readily controlled or monitored via an Internet based medium when the device is nonadjacent to network connection mechanism.

The present invention addresses the aforementioned needs by providing a system method and computer readable storage medium that enables a person to monitor and or control a device via a network such as the Internet via an interactive hardware module that interfaces with the device and communicates with a module server located locally or remotely from the placement of the module. The hardware module allows for the transmission and receipt of data between the device interfaced to the hardware module and the module server thereby enabling the user manually or automatically to control or monitor the device via an access medium such as an API. The hardware module and the device may be interfaced via a wired or a wireless connection. Furthermore the hardware module and the module server may enable the activation of an inactive device from a remote location.

Various embodiments of the invention are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person with ordinary skill in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the invention.

The components of MBDIS may interact with one another via network which may be any applicable electronic and or wireless network. For example network may be a WAN such as the Internet or a mobile network. MBDIS may include hardware module configured to be an input output I O mechanism and enabled to allow for connections to one or more devices . Device may include any applicable electronic device such as a computer a server a sensor a printer a servo an actuator a switch a control system etc. Hardware module may be connected via network to module server thereby serving as a link between device and module server . Hardware module may connect to network via local network which may be for example a LAN or WLAN. As used herein local network may include any component physical or logical necessary for the particular network s implementation such as routers adapters subnets etc. For example various components may interact with one another via a router. Instead of or in addition to being connected to hardware module directly device may interface with hardware module via local network and local network may enable interaction between hardware module and device . Although not explicitly depicted in device may interface with hardware module via network either in conjunction with local network or independent from it.

Module server may receive data messages sent by hardware module such as those relayed from interfaced device . Module server may relay such communication to access medium and or another hardware module connected to network . Module server may interface with access medium to transmit communications to or from hardware module and or to configure hardware module .

Access medium may be a mechanism by which a user may control or monitor device . For example access medium may enable a user to operate device monitor the status of device receive and or review data generated by device activate device etc. In one embodiment access medium may be accessible by various agents such as a personal computer a mobile device etc. For example access medium may be an Internet service such as for example a streaming server a push driven server an email server a social network a data store an event notification service a scripting server a Web page etc. Additionally access medium may comprise an API such as a Web widget or gadget another convenient programming interface etc. Alternatively access medium may be a Web interface such as a dynamic scripting a Flash interface etc.

Data transmitted between one or more of device hardware module module server and access medium may be encrypted such as via a compressible encryption technique encapsulated and translated over common internetworking protocols and networking technologies.

Hardware module may act as a client to module server . This configuration enables MBDIS to overcome problems inherent in hosting a server. A dynamic IP address is no longer problematic. Hardware module may initiate the connection to module server and as such there is no need to keep track of the user s IP address. Additionally an ISP does not block outbound traffic from a user s location as opposed to in bound traffic as would be the case if the user employed a local server as this would be the equivalent to preventing the user from accessing the Internet entirely. Furthermore as hardware module itself establishes the connection as a client to module server there is no need for any network configuration on the part of the user. All traffic generated by the use of hardware module is viewed as normal traffic by network . This enables hardware module to work through firewalls and proxy servers.

The design of hardware module may vary per implementation. In one example hardware module may be constructed of a two sided 0.060 inch thick printed circuit board PCB . A top and bottom plate of 0.125 inch clear acrylic fixed in place by spacers and screws may provide a simple exterior structure for hardware module . A label on the top surface of hardware module may indicate the model number serial number connection assignments MAC address and I O channel pin out etc. In totality hardware module may be 3.8 inches 2.5 inches 1.24 and weigh approximately 90 grams. In other scenarios hardware module may be smaller or larger and may be constructed of different materials.

As illustrated by in one embodiment hardware module may include network connection mechanism module controller mechanism memory mechanism power mechanism initialization mechanism initialization status display connectivity status display one or more I O channel ports and event processor .

Hardware module may be located at a location convenient to the entity employing it. For example an individual may employ hardware module at his residence or a small business owner may employ hardware module at his work location. Hardware module may be located anywhere so long as the device to be controlled or monitored may interface with network connection mechanism directly via the local network and or via a wireless connection.

Module controller mechanism may communicate with the components of hardware module to direct the flow of data monitor and or direct the activity of components etc. For example module controller mechanism may communicate with network connection mechanism to enable the communication of data to and from hardware module . In one embodiment module controller mechanism is a microcontroller a microprocessor etc. In addition to enabling the transmission of messages from an interfaced device to module server module controller mechanism may relay messages from a device interfaced with one I O channel port e.g. I O channel port A to another device interfaced with a different I O channel port e.g. I O channel port B .

Network connection mechanism may enable hardware module to connect to network and thereby transmit and receive data from module server . In one embodiment network connection mechanism may connect with network via local network . For example hardware module may function on any 10 100 1000 Base T auto negotiated network. In one embodiment network connection mechanism may enable a wired connection. For example network connection mechanism may be an Ethernet controller. Alternatively network connection mechanism may enable a wireless connection. Hardware module may function via a Dynamic Host Configuration Protocol DHCP or static addressing. If local network is configured for MAC filtering the MAC address of hardware module may be added to the local network router s list of allowable addresses. Alternatively hardware module may be connected to a non MAC filtered network first and management tools may be used to change the MAC address of hardware module . Alternatively hardware module may connect to network directly. Additionally network connection mechanism may enable hardware module to interface with one or more devices connected to local network and or the network .

When hardware module connects to network it may establish a communication link with module server . The communication link may be established through any known protocol such as via Transmission Control Protocol Internet Protocol TCP IP . Hardware module may accept communications from and transmit messages to the module server .

Hardware module may include memory mechanism to store settings data etc. For example memory mechanism may be non volatile random access memory RAM .

Power mechanism may enable the distribution of power to hardware module . For example power mechanism may enable and monitor the receipt of electricity to power hardware module from an electrical cord battery solar terminal etc.

Initialization mechanism may be used to establish a connective link between hardware module and a user account at module server . Additionally initialization mechanism may enable a user to reset hardware module to a previous condition such as its factory condition. Initialization mechanism may be a manual implement. For example initialization mechanism may be a button that the user pushes or holds down. Alternatively initialization mechanism may be accessible electronically. For example the user may operate initialization mechanism via his computer such as via an access medium .

Hardware module may include one or more display mechanisms such as initialization status display . Initialization status display may relate information associated with hardware module s connection to module server . For example initialization status display may indicate one or more of the following 

Hardware module may include connectivity status display . Connectivity status display may indicate the state of connectivity between hardware module and module server . For example connectivity status display may indicate one or more of the following 

Hardware module may include one or more I O channel ports that may interface with one or more devices . Although four I O channel ports have been depicted in i.e. A B C D this is not to be construed as limiting and the amount may vary depending upon implementation. Device may be any appropriate apparatus such as conventional device A or smart device B described in detail below .

Hardware module may include expansion port . Expansion port may enable a direct connection to module controller mechanism and may allow hardware module to be enabled for additional and or enhanced functionality. In one embodiment expansion port may serve as an auxiliary I O channel port. In another embodiment expansion port may serve as a network connection mechanism such as an Ethernet port. For example it may enable two way communications via a connected mechanism.

Hardware module may interface with device via a wired or wireless connection. For example an I O channel port may include an outlet to receive a wired plug. Additionally or alternatively hardware module may be configured to receive and or transmit a wireless communications. In one embodiment as depicted in wireless extension mechanism may interface device with hardware module wirelessly. Wireless communication between hardware module and wireless extension mechanism may be enabled by a medium adapter connected to one or more components such as medium adapter and medium adapter respectively. For example medium adapter may be connected to hardware module via an I O channel port or via expansion port . Medium adapter and or medium adapter may enable various wireless communication methods and may enable the conversion of various communication methods. For example a medium adapter may enable the conversion of an electronic signal to a fiber optic or radio frequency signal. In one embodiment a medium adapter may be an adapter board that enables wireless point to point or mesh networking between hardware module and wireless extension mechanism and in turn device . Alternatively hardware module and or wireless extension mechanism may include a transmitter and or receiver that enables wireless interfacing without one or more of medium adapter and medium adapter .

As mentioned network connection mechanism may enable hardware module to interface with device via local network network or a combination thereof. In such a configuration network connection mechanism may serve as an I O channel port .

Hardware module may discover an interfaced device manually or automatically. To manually discover device the user may access his user account and indicate the type of device he had interfaced. For example a user may access a MBDIS Web site log into his user account and indicate the type of device such as via a dropdown menu or from a checkbox list. Alternatively module controller mechanism may include a discovery protocol which may enable plug and play functionality. For example the discovery protocol may interrogate module controller mechanism to determine whether interfaced device is a conventional device A or a smart device B.

In one embodiment each I O channel port has a separate digital input analog input and digital output. Each I O channel port may be configured to employ digital input and or output analog input and or output serial data input and or output pulse counting and or generation frequency counting and or generation audio input and or output video input and or output etc. Hardware module may be configured to set the state i.e. the digital voltage level of output on a particular I O channel port and may read a voltage input level. As described below in regard to smart mode an I O channel port may serve as a data channel for communication with interfaced smart devices B.

Each I O channel ports may be independent from one another and may be an input and output means for MBDIS . Communication from module server to hardware module may instruct hardware module to change output lines on I O channel ports while communication from hardware module to module server may relay information about device values and other inputs.

An I O channel port may include multiple lines or pins. The functionality of each pin may vary dependent upon the operating mode of the particular I O channel port . An I O channel port may be capable of operating in one of two modes normal mode and smart mode.

When an I O channel port is set to normal mode the hardware module may use digital I O and analog input capabilities native to the module controller mechanism to interact with an interfaced device . For example an I O channel port set to normal mode may be enabled for discreet digital input and or output pulse counting and or generation frequency counting and or generation serial input and or output and analog input and or output etc. In normal mode hardware module may interface with conventional devices such as analog sensors switches lights liquid crystal displays LCDs microcontroller units MCUs relays microprocessors etc. A device connected to an I O channel port set to normal mode may be considered a conventional device A.

When an I O channel port is set to smart mode hardware module may interface with more sophisticated devices . Smart mode may convert an I O channel port into a digital communication port allowing other equipment to interface with hardware module and an I O channel port set for this mode may be capable of serial communication via standard and proprietary protocols. For example smart mode may be employed if a particular function is beyond the scope of a simple analog sensor or digital I O device. A device interfaced to a smart mode enabled I O port channel may be considered a smart device B. Smart device B may include its own controller mechanism such as a microcontroller microprocessor etc. to manage communication via its particular I O port channel . For example smart devices B may be serial or servo controllers Infrared receivers and transmitters video devices audio devices USB hardware wireless transceiver medium adapters other peripheral hardware etc. Smart devices B provide data to hardware module which may relay it to module server which may in turn transmit it to an access medium or another hardware module . For example the data may be sent to a networked data store for logging. Likewise messages intended for smart device B may be received by module server relayed to hardware module and then transmitted to smart device B. Hardware module need not directly manage smart device B. In one embodiment hardware module merely registers the existence of smart device B on startup and directs messages to and from it.

Hardware module may act as a client while an interfaced smart device B may function as a server. Despite these roles this configuration allows for smart device B to generate and transmit a message unsolicited to hardware module and in turn module server .

Hardware module may include event processor . Event processor may monitor behavior of an interfaced device and when a particular event occurs event processor may push a message to another device interfaced with hardware module or to module server and in turn access medium or one or more additional hardware modules . For example if a device interfaced with hardware module is a thermometer event processor may send a message to a second interfaced device or to module server when a particular temperature is reached. As another example event processor may receive video or audio data and in turn initiate a message transmission. In addition to or instead of initiating the pushing of data based upon a particular device event event processor may push messages via an established schedule. For example an interfaced device may be a lamp and a user may configure hardware module to turn on the lamp at a certain time on a certain day. Furthermore event processor may communicate data when requested by access medium . For instance continuing with the thermometer example the user may employ access medium to request the thermometer s current temperature reading. Additionally event processor may periodically poll module server for data commands etc. For example event processor may query module server for a device activation command.

As is detailed below module server may include event processor and wireless extension mechanism may include event processor . One or more functionalities of event processor event processor and event processor may be equivalent to one another. Hardware module event processor module server event processor and wireless extension mechanism event processor may mirror one or more functions of each other. Therefore although particular functionalities may be described herein in regard to a particular event processor this is not to be construed as limiting. The functionalities described herein in regard to a particular event processor may additionally or alternatively be accomplished another event processor.

In one embodiment hardware module event processor may be synchronized with the configuration maintained by module server event processor . Once configured hardware module event processor may enable hardware module to function autonomously regardless of whether it has an active connection to module server .

Either or both hardware module event processor and module server event processor may cause the transmission of a message based on an event associated with one device to a second device . In one embodiment both the first and second devices may be interfaced with the same hardware module either via separate I O channel ports or the same I O channel port . As such event processor and or event processor may cause the relaying of data between two or more devices interfaced with the same hardware module .

Module server may relay data and instructions between hardware module and access medium or one or more additional hardware modules . Module server may be located remotely from hardware module but need not be. Module server may include server controller mechanism one or more module connections one or more access medium connections authentication data user account data transaction identifying mechanism transaction logging mechanism and event processor .

Server controller mechanism may enable the flow of data amongst the various components of module server .

A module connection may be a socket waiting and listening for incoming communication from hardware module . Module connection may enable the pulling and pushing of data between module server and hardware module and in turn device . Access medium connection is a socket used by module server to communicate with access medium . An access medium connection may wait and listen for incoming communication from access medium and may receive conventional requests from Web services such as Hypertext Transfer Protocol HTTP requests. For example an access medium connection may receive communication originating from a web browser or an automated Common Gateway Interface CGI script desktop application Web service API or mobile application. In one embodiment module connections and access medium connections wait and listen on different ports to ensure proper communication.

Module server may maintain authentication data which may include information pertinent to module identifiers e.g. serial numbers . Authentication data may include a record of all module identifiers for all hardware modules distributed by the MBDIS service provider. Authentication data may include data pertaining to encryption. For example when hardware module initiates a connection with module server server controller mechanism may access authentication data to locate a module identifier and its corresponding encryption key to authenticate the connection. If the module identifier is located and the encryption is successful hardware module may interface with module server and in turn access medium . Alternatively if a corresponding module identifier is not found or encryption fails server controller mechanism may close the connection.

Module server may include transaction logging mechanism to record transactions with one or more hardware modules . Transaction logging mechanism may be configured to record all transactions that are handled by module server and or those indicated by the configurations established via module server event processor or hardware module event processor . The recorded data may be employed to analyze system data such as to create charts plots or calculate values for record keeping or event triggering.

Module server may include transaction identifying mechanism . As described in detail below transaction identifying mechanism may associate a transaction identifier with each transmission sent to hardware module to ensure successful interaction between module server and hardware module .

Module server may maintain user account data which may include data pertaining to user accounts for individuals who have registered their hardware modules with MBDIS . A user account may include various information associated with the user such as contact information name mailing address email address phone numbers latitude longitude etc. information particular to the user s hardware module s model data make data a module identifier etc. authentication information e.g. username and password financial account information e.g. credit card numbers etc. device identifiers for devices e.g. MAC addresses IP addresses etc. etc. An individual may create a user account prior to initializing his hardware module . To create a user account the user may provide the MBDIS service provider with the necessary information via a Web site email mail verbally e.g. via a customer service representative fax etc.

As aforementioned module server may include event processor . Event processor may push a message to access medium or second hardware module per an event that has occurred at device that is interfaced with a first hardware module . This configuration may enable a user to monitor the performance of device in real time. In one scenario access medium may be an email service a text messaging service e.g. Short Message Service SMS etc. a social network service etc. For example if device is a thermometer event processor may push a message to a social networking service such as Facebook when the thermometer reaches a certain temperature and the temperature data may be displayed as a status update. As another example the temperature data may be sent to an email service and the user may receive the data in an email message. As with hardware module event processor module server event processor may transmit messages on a scheduled periodic basis. For example event processor may transmit an activation command to hardware module on a scheduled basis. In addition to pushing messages event processor may provide data or a command when requested by access medium or hardware module .

A user may access his user account via for example the MBDIS Web site and configure one or more triggers and corresponding action s for his registered hardware module s . As mentioned above the user may initiate a synchronization process whereby module server event processor settings are synchronized with those of hardware module event processor thereby configuring hardware module .

The synchronization process may enable a user to configure hardware module to poll module sever for data periodically such as at a particular time or on a particular schedule. For example the user may access his user account to configure hardware module to query module server every fifteen minutes. The synchronization process may be used to instruct hardware module to issue a query related to device such as a request for data or a command. For example the user may configure hardware module to query module server for activation commands. After the user has configured the polling setting module server may transmit this instruction including the appropriate device identifier to hardware server where it may be stored thereby configuring hardware module to issue query per the established setting. If hardware module is enabled to store a device identifier the user may configure hardware module to generate and transmit a message e.g. an activation message to an interfaced device without polling module server for an activation command .

Regarding communication between a first hardware module and a second hardware module event processor may provide instructions to the second hardware module based on an event that occurred at the first hardware module . For example event processor may receive temperature data from a thermometer device interfaced with a first hardware module and if the temperature data indicates a temperature higher than a certain threshold event processor may send a message to a second hardware module instructing it to activate an interfaced cooling device . Event processor may act in a similar fashion to relay messages between two or more devices interfaced with the same hardware module . For instance event processor may receive temperature data from thermometer device interfaced with one I O channel port and send a message to a cooling device interfaced with a second I O channel port on the same hardware module . In another example a device interfaced with hardware module may be a data storage medium and the user may employ the data storage medium to record data regarding a second device interfaced with a different I O channel port or another hardware module .

In addition or instead of sending a message to access medium or hardware module event processor may send data to transaction logging mechanism . The user may employ this configuration when he wishes to for example record data from device but does not desire real time monitoring. Additionally transaction logging mechanism may enable various visualization processes so that data recorded via event processor may be analyzed. For example data recorded by transaction logging mechanism may be accessible via access medium such as a Web widget that may display the recorded data as a chart or graph.

Event processor may be enabled to transmit data to an external data store for recordation analysis etc.

Access medium may be a mechanism by which a user may interact via module server with a device interfaced with hardware module . For example access medium may be an API a Web service a Web interface etc. As aforementioned via access medium a user may control or monitor device . For example access medium may request data from device translate data generated by device into a useful syntax and display it push a command to device activate an inactive device etc. Access medium may be provided by portable client side scripting that allows for embedding control and monitoring resources into Web sites mobile device applications and widgets Web service feeds social networks Web service APIs etc. Access medium interpret data received from device and present the data to users and Web services in current and appropriate scales formats and syntaxes. For example access medium may receive data from a thermometer device and present that data in degrees Fahrenheit or Centigrade. Access medium may receive data based upon push data transmission initiated by event processor may request data itself may access data recorded in transaction logging mechanism e.g. to display such logged data a chart graph etc. etc.

Additionally access medium may allow a user to configure hardware module and or interfaced devices via module server . For example the user may set an I O channel port to normal mode or smart mode.

Access medium may be accessible via Internet enabled devices such as personal computers e.g. desktop computer laptop computers tablet computers etc. and mobile devices e.g. mobile phones smart phones personal digital assistants etc. .

To enhance user convenience the MBDIS service provider may offer one or more access mediums to users. For example a user may visit an MBDIS Web site and access ready made Web widget coding that may be input into the coding of a Web page in order to control or monitor device from the Web page. The MBDIS service provider may provide access mediums for common functionalities such as light levels temperature display weather information etc. The MBDIS sever provider may provide a convenient interface by which a user may create a customized access medium . For example an MBDIS Web site may include a point and click interface a wizard interface or another form of customized programming interface by which a user may generate a customized access medium suitable to the user s needs and or the particular functionality of device .

In order for a user to employ to hardware module he may be required to authenticate it with module server thereby linking hardware module to a user account. The MBDIS service provider may employ an authentication process in order to confirm that an actual individual wishing to employ a particular hardware module is initializing the hardware module rather than an automated process. This may ensure that hardware module is being employed with the user s permission.

To begin initialization the user may connect hardware module to network step . As aforementioned the user may connect hardware module to network via local network . Hardware module may then transmit a connection request to the module server step . Module server may be configured to listen to network and enabled to await such requests. Once a connection has been established between module server and hardware module step connectivity status display may indicate this e.g. by displaying a green light .

The user may then register a module identifier associated with hardware module with module server step . In one embodiment the user may register a module identifier by associating it with a user account maintained by module server . Module identifier may be for example a serial number included on hardware module and or documentation provided to the user when hardware module was acquired. The module identifier may be included in firmware maintained by hardware module . In addition to registering the module identifier the user may register contact information authentication information e.g. username and password financial account information etc.

The registration process may involve the user establishing a user account with the MBDIS service provider. The user may establish the user account prior to the initialization. Additionally the user may be allowed to register multiple hardware modules with the same user account and therefore may employ the initialization process to add an additional hardware module to an existing user account. In one embodiment the user may establish a user account by employing a computing device e.g. personal computer mobile device etc. to access a Web site linked to module server . Once at the Web site the user may register the module identifier and other information. In alternate embodiments the user may establish and or augment a user account via other methods. For example a user may verbally establish an account by calling the MBDIS service provider and providing the necessary information to a customer service representative. As another example a user may complete a registration form and mail email or email it to the MBDIS service provider.

Once the user has registered the module identifier with his user account he may activate initialization mechanism step . For example if initialization mechanism is an external button the user may hold the button for particular amount of time e.g. five seconds . Initialization status display may indicate to the user that initialization has commenced.

Hardware module may receive authentication data transmitted from module server step . Hardware module may display this authentication data to the user via initialization status display mechanism . For example module server may transmit a series of digits to hardware module and initialization status display mechanism may display the digits to the user.

The user may provide the transmitted authentication data to the MBDIS service provider step . In one embodiment the user may enter the displayed authentication data at a Web site linked to module server . The user may do so during the same session with which he registered the module identifier. In alternate embodiments the user may provide the authentication data by verbally relating it to a customer service representative e.g. via telephone or by mailing emailing or faxing the authentication data to the MBDIS service provider.

The provided authentication data is relayed to module server which analyzes it to determine if it is valid. If the provided authentication data is incorrect the user may be requested to provide it again. If the user cannot successfully do so hardware module may receive a termination signal from module server step and hardware module may not be activated. If the authentication data is deemed valid hardware module may receive a signal from module server indicating that the initialization is complete step . Hardware module may now have an active connection with module server and initialization display mechanism may signal the end of initialization.

As aforementioned the configuration of MBDIS may enable hardware module to serve as a client rather than a server. Hardware module may issue transmissions via network to module server without module server replying immediately. In one embodiment Internet Protocol IP such as HTTP protocol may be used for communication between hardware module and module server . Hardware module may act as a client and issue requests to module server . Module server need not reply immediately thereby allowing hardware module to send another request to push data to module server . Although it may hardware module need not request anything from module server . Once hardware module makes its initial connection requests may be generated by module server . Hardware module may push data to module server and may do so without being solicited. In one embodiment hardware module may transmit HTTP POST requests which are not cached by web proxy servers. Furthermore the use of HTTP POST transmissions with no immediate reply from module server enables web proxy servers to manage the communication between hardware module and module server as standard HTTP traffic thereby alleviating unnecessary burden upon MBDIS .

Module server may manage numerous connections simultaneously. Since module server may request data from hardware module in addition to hardware module being able to send data to module server there is the possibility that data messages may cross in transit. As illustrated by transaction identifying mechanism may prevent any problem that may occur due to such a situation. Server controller mechanism may receive a transmission to be sent to hardware module step . For example a user may employ access medium to send control instructions to hardware module or event processor may send data to hardware module per an event triggered by device . Transaction identifying mechanism of module server may associate a transaction identifier with each transmission to be sent to hardware module step . Transaction identifying mechanism may record this transaction identifier step . For example module server may issue a unique six digit transaction identification code with each request sent to hardware module . Module server may send the transmission with its associated transaction identifier to hardware module step . Module server may receive a response transmission from hardware module and the response may include a transaction identifier such as in a Uniform Resource Identifier step . Transaction identifying mechanism may compare the received transaction identifier with those it has recorded to determine if the response is a valid transmission step . If the received transaction identifier does not match one recorded the response may be rejected step . If the received transaction identifier matches on record the response is deemed a valid transmission and accepted step . As aforementioned hardware module may transmit data unsolicited. For such transmissions module controller mechanism of hardware module may associate a particular transaction identifier with all unsolicited transmissions and transaction identifying mechanism may be configured to treat all such transmissions as valid. For example hardware module may use the transaction identifier 000000 for all unsolicited transmissions.

As another example a request from module server to hardware module may be formatted as the following 

As mentioned hardware module may generate and transmit messages on its own volition. For example rather than module server periodically polling hardware module for the status of a digital input event processor of hardware module may push a message at the instant it receives an indication from an I O channel port that an event has occurred at an interfaced device . As another example event processor may periodically poll module server for any received requests it has stored. Hardware module may push data to module server or a device on a separate I O channel port via auto messaging triggered messaging a smart device push etc. Auto messaging and triggered messaging may be accomplished via an I O channel port set to normal mode while a smart device push may be handled via smart mode.

To push data via auto messaging event processor of hardware module may be configured to send the state of an I O channel port and therefore an interfaced conventional device A automatically at a set schedule. For example an analog input value may be sent every fifteen seconds. Each I O channel port may be set to send either its analog input or digital input at a user determined schedule. Each I O channel port auto message interval may be set independently.

Data may be pushed via triggered messaging when the state of a digital or analog input from an interfaced conventional device A changes. Each I O channel port may have a configurable trigger and reset value. Hardware module may send a message when an input reaches a certain level.

If an I O channel port is set to smart mode hardware module may transmit an unsolicited message from smart device B. The message may be sent on behalf of the configuration of smart device B itself. For example particular events activities actions etc. that occur via smart device B may initiate the transmission of data to hardware module and in turn module server or another device interfaced with a separate I O channel port .

Hardware module and module server may be employed to enable Wake on LAN WOL procedures. It is to be understood that WOL as used herein encompasses wired network configurations wireless e.g. Wake on Wireless LAN network configurations or combinations thereof. Although the description herein typically describes activating an inactive device in terms of device interfaced with hardware module via local network this is not to be construed as limiting. In alternate embodiments the process described herein may be employed to activate device interfaced with hardware module directly or via network . Furthermore although module server is described typically herein as being remote from local network hardware module and or device this is not to be construed as limiting and module server may be located locally.

The configuration described herein consumes significantly less power than traditional WOL arrangements and may allow all unnecessary devices to be inactive until their services are required thereby consuming significantly less power than a typical WOL system . For example instead of providing power to an entire computer system power need only be provided to hardware module and an activation component of an inactive device such as a network interface card NIC .

A user may issue the request manually. For example the user may select a button on a Web widget interface to issue a request to activate an inactive device . The associated device identifier may be stored in an appropriate user account and module server may access it per the request. As another example the user may establish a reference for a stored device identifier and provide this reference to activate device . For example the user may establish the reference printer1 for the MAC address 0123456789ab and transmit a message including printer1 via access medium . The activation request also may be sent via an automated mechanism. For example a user may configure access medium to initiate an activation request at a particular time set a schedule for activation requests etc. Alternatively a device may initiate the activation request.

In another scenario the activation request may include the necessary device identifier. For example a user may enter a MAC address into a text box included in a Web widget and the MAC address may be sent to module server .

Once the activation request has been received module server may store a device activation command including the device identifier until it is to be sent to hardware module step . As aforementioned hardware module may connect with module server outside local network via a TCP IP connection. The device activation command may be transmitted to hardware module immediately at a particular time increment on a schedule or when it is requested by hardware module step . Hardware module may be configured to periodically poll module server for instructions such as at a set interval rather than wait for module server to push an activation command to it. Hardware module may store device identifiers for one or more networked devices and may poll module server by transmitting a query including such an identifier. If module server has stored a corresponding device activation command it may send it to hardware module .

After receiving the device activation command step hardware module may generate an activation message to be sent to the inactive device step . The activation message may include the device identifier included in the activation command. In this scenario the activation message may be a magic packet. 

The activation message may be communicated by hardware module to the inactive device through local network step . For example hardware module may broadcast a magic packet to other networked devices via a router. The inactive device may not be entirely inactive and may have a component that is kept operational to receive activation messages. For example the activation message may be received via an NIC. Even though this component may use a small amount of power it may be considerably less than the amount required to power device entirely. The inactive device may then activate per the received activation message.

Hardware module may generate a notification message regarding its transmission of the activation message step and transmit the notification message to module server thereby indicating that the activation message has been sent step . Module server may receive the notification message step and in turn notify access medium . The user may confirm that device has been activated by attempting to access it.

In one scenario hardware module may be configured to generate and issue an activation message without polling module server . As aforementioned the user may access his user account to configure hardware module to perform one or more actions. As hardware module may be configured to store a device identifier itself its event processor may cause hardware module to generate and transmit an activation message with a stored device identifier at a predetermined time per a predetermined schedule etc.

As with the components described in regard to components of are herein referenced as systems mechanisms modules processors etc. This is not to be construed as limiting and it is to be understood that each component may include the necessary hardware which may operate alone or under direction of appropriate firmware and or software to enable the processing storing communicating and or receiving of data. For example a component may include one or more computer processors computer servers data stores electronic components storage mediums memory etc. Although only a limited number of each component is depicted this is for illustrative purposes only and is not to be construed as limiting. For example one hardware module may interact with multiple wireless extension mechanisms and in turn multiple devices .

Wireless extension mechanism may serve as a wireless extension for digital inputs digital outputs analog inputs analog outputs the receipt and transmission of serial data etc. In one embodiment hardware module and wireless extension mechanism may be configured to function autonomously to perform local monitoring and or control without network connectivity.

Wireless extension mechanism may include extension controller mechanism that may communicate with the components of wireless extension mechanism and or hardware module in order to direct the flow of data monitor and or direct the activity of components etc. For example extension controller mechanism may communicate with wireless communication mechanism to enable the communication of data between wireless extension mechanism and hardware module . In one embodiment extension controller mechanism is a microcontroller microprocessor etc. For example extension controller mechanism may enable an I O channel port to monitor voltage of device .

Wireless communication mechanism may enable wireless extension mechanism to communicate with hardware module and thereby transmit and receive data from hardware module and or in turn module server . In one embodiment wireless communication mechanism may be configured to interact with medium adapter an antennae or other medium attached to or included with wireless extension mechanism in order to enable wireless extension mechanism to communicate with hardware module .

Wireless extension mechanism may include memory mechanism in order to store settings data etc. For example memory mechanism may be non volatile RAM.

Power mechanism may enable the distribution of power to wireless extension mechanism . For example power mechanism may enable and monitor the receipt of electricity to power wireless extension mechanism from an electrical cord battery solar terminal etc. In one embodiment wireless extension mechanism may include solar terminal mechanism to enable wireless extension mechanism to function completely or partially based upon solar power.

Wireless extension mechanism may include one or more I O channel ports e.g. I O channel ports A D . For example one or more I O channel ports may be configured to employ digital input and or output analog input and or output serial data input and or output pulse counting and or generation and frequency counting and or generation audio input and or output video input and or output etc. An I O channel port may be configured to interact with and or correlate to an I O channel ports and or expansion port . In one embodiment one or more I O channel ports may be mapped to one or more variables maintained by hardware module and or module server such as those of an I O channel ports or expansion port . I O channel port variables may be synchronized wirelessly with I O channel port variables.

Wireless extension mechanism may include a temperature sensing mechanism . This may enable wireless extension mechanism to obtain temperature data by itself instead of or in addition to for example a device enabled to monitor temperature. Wireless extension mechanism may include humidity sensing mechanism which may enable wireless extension mechanism to monitor the humidity of its surroundings.

Wireless extension mechanism may include event processor . Event processor may be configured to mirror the functionality of event processor and or event processor . For example event processor may monitor behavior of device initiate an action push a message via an established schedule communicate data when requested by access medium poll the module server for data and or commands etc. By mapping variables from wireless extension mechanism to hardware module one or more functions associated with event processor and or event processor may be synchronized with event processor . For example functions concerning local rules and or actions data logging alerting use of Web widgets etc. may be enabled. In one embodiment in addition to or instead of enabling such functionalities based upon device event processor may interact with a mechanism included with wireless extension mechanism such as temperature sensing mechanism humidity sensing mechanism etc.

Wireless extension mechanism may include one or more actuators e.g. actuators A E which may enable the configuration of one or more I O channel ports . For example an actuator may be switched to enable an I O channel port to function as an analog input to measure a particular amount of voltage on device . In another scenario the analog output voltage of an I O channel port may be mapped to hardware module variables. For example the value of hardware module variables may correspond to the output voltage in millivolts DC e.g. a hardware module variable value of 2500 may provide an output voltage of 2500 mV or 2.5V DC .

Extension controller mechanism and or relay mechanism may enable wireless extension mechanism to compensate for differences between wireless extension mechanism and hardware module . In one embodiment I O channel ports and or expansion port may operate at a different voltage e.g. higher lower etc. than I O channel ports . For example wireless extension mechanism may be designed to operate with lower voltage for power saving reasons. Relay mechanism may enable wireless mechanism extension to operate with minimal power while interacting with device . For example relay mechanism may enable an I O channel port configured for digital output to operate at a lower voltage than the corresponding mapped I O channel port . In one embodiment relay mechanism may not require power to maintain a state. For example relay mechanism may be a latchable relay that requires no power once it has been switched and may remain in the same state until it is switched again.

Wireless extension mechanism may have one or more modes of operation and therefore may serve as a multi purpose device. Wireless extension mechanism may provide added flexibility for user configurations and applications.

The modes of operation of the wireless extension mechanism may be configured by a user adjusting one or more of actuators . In one embodiment each mode may have two states one for each type of power source. For example one mode may be for battery power while another may be for mains power. The operation of wireless mechanism extension in each of these states may be different because a user may determine a desired mode of operation based upon the operation s power requirements e.g. because it may drain the battery quickly battery power may not provide sufficient or sustainable power etc. . When running in a low power state based upon battery power wireless extension mechanism may operate in an inactive state i.e. sleep and activate i.e. wake up on a periodic schedule and or to synchronize with hardware module and or module server before returning to an inactive state. When running in a high power state e.g. based upon mains power wireless extension mechanism may not need to enter into an inactive state and may communicate more frequently. For example the high power state may allow for serial communication with hardware module . As aforementioned wireless extension mechanism may include solar terminal mechanism and depending upon the power provided by solar terminal mechanism may operate in a low power or high power state based upon solar power.

In one embodiment one mode may configure wireless extension module to monitor temperature and or humidity instead of or in addition interfacing with one or more devices . This mode may enable wireless extension mechanism to operate as a wireless temperature sensor and optionally a wireless humidity sensor. In order to communicate data obtained from an internal sensing mechanism such as temperature sensing mechanism or humidity sensing mechanism an I O channel port may be disabled so that its value may be mapped to the internal sensing mechanism. For example an I O port channel configured for analog input may be disabled so that its value may be mapped to temperature sensing mechanism and or an I O port channel configured for digital input may be disabled so that the value from humidity sending mechanism may be mapped to that channel instead. A digital output I O channel port an analog output I O channel port and an I O channel port maintained by relay mechanism may be kept in sync with hardware module .

In one embodiment one mode may configure wireless extension module to mimic a set of operations of I O channel ports . In this mode I O channel ports may be set to digital output digital input analog input and analog output and may be synchronized with matching variables maintained by hardware module . Relay mechanism may ensure necessary synchronization transpires.

In one embodiment one mode may configure wireless extension module to count pulses. I O channel ports of wireless extension mechanism such as for example a pulse counting channel port a digital output an analog input an analog output may be kept in sync with matching variables on hardware module . Relay mechanism may ensure necessary synchronization transpires.

In one embodiment one mode may configure wireless extension module to operate similarly to Example Mode 2 when in a low power state but when in a high power state wireless extension module may send and or receive serial messages to and or from hardware module . For example this mode may enable hardware module to send serial messages received from module server from access mechanism e.g. a dashboard widget a serial API etc. to device via wireless extension mechanism . A serial message may be sent in raw format. For example a serial message may not be encapsulated for forwarding.

In one embodiment one mode may configure wireless extension module to operate similarly to Example Mode 2 when in a low power state but when in a high power state wireless extension mechanism may send encapsulated serial messages to hardware module and may receive raw serial messages from hardware module . For example as with Example Mode 4 this mode may enable hardware module to send serial messages received from module server from access mechanism to device via wireless extension mechanism . However unlike Example Mode 4 in this mode the serial messages sent to hardware module and in turn module server and in one scenario access mechanism are sent in an encapsulated format.

In one embodiment one mode may configure wireless extension mechanism to interact with a device that is a rangefinder such as an ultrasonic rangefinder. This mode is similar to Example Mode 2 however the digital input of an I O channel port may be replaced by range readings sent by a rangefinder device . For example a rangefinder device may provide wireless extension mechanism with serial messages representing range.

Hardware module may enable automatic configuration of one or more medium adapters e.g. medium adapter and medium adapter . For example hardware module may enable the configuration of an encryption key unique codes I O channel port settings etc. This may be accomplished by interfacing each medium adapter with hardware module and instructing hardware module to configure each medium adapter with the same settings e.g. the same encryption key . A user may instruct hardware module to do so via manual input access mechanism etc. Once each medium adapter is configured a user may interface each medium adapter with the appropriate component e.g. hardware module and wireless extension mechanism and each medium adapter may interact appropriately e.g. via the established encryption key . Alternatively a medium adapter may be connected to a computer a mobile device etc. e.g. via a USB adapter and may be configured via software.

These and other aspects of the present invention will become apparent to those skilled in the art by a review of the preceding detailed description. Although a number of salient features of the present invention have been described above the invention is capable of other embodiments and of being practiced and carried out in various ways that would be apparent to one of ordinary skill in the art after reading the disclosed invention. Therefore the description should not be considered to be exclusive of these other embodiments. Also it is to be understood that the phraseology and terminology employed herein are for the purposes of description and should not be regarded as limiting.

