---

title: Session-based device configuration
abstract: Techniques for session-based device configuration are described. According to one or more implementations, various settings of a wireless device are configured to optimize device performance while participating in a communication session via a wireless network. The settings, for instance, are configured dynamically and on a per-session basis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09614724&OS=09614724&RS=09614724
owner: Microsoft Technology Licensing, LLC
number: 09614724
owner_city: Redmond
owner_country: US
publication_date: 20140421
---
Mobile computing devices have been developed to increase the functionality that is made available to users in a mobile setting. For example a user may interact with a mobile phone tablet computer or other mobile computing device to check email surf the web write texts interact with applications and so on. In an enterprise setting a user may utilize a personal mobile device to engage in enterprise related activities such as online meetings content creation and or sharing and so forth.

While allowing a user to utilize their personal device in an enterprise setting is advantageous in terms of cost savings and convenience it presents a number of implementation challenges. For instance to leverage an enterprise wireless network to transmit and receive data wirelessly a personal device typically needs to be configured with particular settings to connect and transmit data over the wireless network. Since a wide variety of different mobile devices exist with a varied assortment of capabilities and operating environments configuring different devices with the appropriate settings can complicate users ability to leverage their devices in an enterprise wireless network.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Techniques for session based device configuration are described. According to one or more implementations various settings of a wireless device are configured to optimize device performance while participating in a communication session via a wireless network. The settings for instance are configured dynamically and on a per session basis.

Techniques for session based device configuration are described. In at least some embodiments a communication session refers to an exchange of communication data between different nodes in a network. Examples of a communication session include a Voice over Internet Protocol VoIP call a video call text messaging a file transfer and or combinations thereof. A communication session for instance represents a Unified Communication and Collaboration UC C session.

According to one or more implementations various settings of a wireless device are configured to optimize device performance while participating in a communication session via an enterprise wireless network. The settings for instance are configured dynamically and on a per session basis.

For instance consider a scenario where a user device e.g. a user s personal mobile device connects to a wireless enterprise network managed by an enterprise entity such as a business entity an educational entity a government entity and so forth. The enterprise entity establishes various network policies that specify rules and parameters for wireless connections to the enterprise network and or for participating in communication sessions via the enterprise network.

Further to the example scenario while connected to the enterprise network the user s device engages in a communication session with a different device. The different device may be connected to the enterprise network or may be connected to a different network that communicates with the enterprise network. In response to detecting that the user device is engaging in a communication session a network controller for the enterprise network ascertains various attributes of the user device and or the communication session. For instance the network controller may ascertain the attributes directly from the user device from network elements of the enterprise network e.g. wireless access points and or via a notification received from an external service.

The network controller applies the attributes to the network policies to specify different configuration parameters for the user device. The configuration parameters for instance specify different device settings for the user device. The network controller then generates a notification that includes the configuration parameters. As detailed below the notification may include an application programming interface API that is configured with the parameters.

Further to the example scenario the network controller communicates the notification to the user device. The user device receives the notification and processes the notification e.g. the API to ascertain the configuration parameters. The user device utilizes the configuration parameters to configure various settings and or attributes of the user device. For instance the configuration parameters are used to control various wireless related behaviors such as off channel scanning power saving procedures wireless access point connections and so forth.

As referenced above a device may be configured on a per session basis e.g. each time a new communication session is initiated that involves the device. Thus custom device configurations can be defined e.g. dynamically and based on network policies that enable devices to adapt to various network and or device states and to dynamically reconfigure themselves based on changes in network policies network state device state and so forth.

In the following discussion an example environment is first described that is operable to employ techniques described herein. Next a section entitled Propagating Session Awareness for Communication Sessions discusses some example ways for notifying different entities of attributes of communication sessions. Following this a section entitled Example Network Policies describes some example network policies in accordance with one or more embodiments. Next a section entitled Example Implementation Scenarios describes some example implementation scenarios in accordance with one or more embodiments. Following this a section entitled Example Procedures describes some example procedures in accordance with one or more embodiments. Finally a section entitled Example System and Device describes an example system and device that are operable to employ techniques discussed herein in accordance with one or more embodiments.

Having presented an overview of example implementations in accordance with one or more embodiments consider now an example environment in which example implementations may by employed.

The WEN is representative of a network that provides the client device with connectivity to various networks and or services such as the Internet. The WEN may be provided and or managed by a particular enterprise entity such as a business entity an educational institution e.g. a university a government institution and so forth. As used herein the term enterprise generally refers to an entity or group of entities that may maintain a wireless data network for various purposes. The WEN may provide the client device with wireless connectivity via a variety of different connectivity technologies such as broadband cable digital subscriber line DSL wireless data connectivity e.g. WiFi T carrier e.g. T1 Ethernet and so forth.

The WEN is implemented at least in part via wireless access points WAP which are representative of functionality to transmit and receive wireless data as part of the WEN . The WAP for instance provide wireless connectivity for the client device and other wireless enabled devices. The client device further includes wireless devices which are representative of functionalities to enable the client device to transmit and receive wireless data. Example implementations of the wireless devices include different types of antennas radios filters receivers transmitters and so forth.

The wireless devices are generally associated with wireless drivers which are representative of functionality to enable interaction between components of the client device and the wireless devices and vice versa. For instance a communication application may leverage the wireless drivers to enable communication data to be transmitted and received via the wireless devices .

Generally the communication application is representative of functionality to enable different forms of communication via the client device . Examples of the communication application include a voice communication application e.g. a VoIP client a video communication application a messaging application a content sharing application and combinations thereof. The communication application for instance enables different communication modalities to be combined to provide diverse communication scenarios. According to one or more embodiments the communication application represents an application that is installed on the client device . Additionally or alternatively the communication application can be implemented as a remote application that is accessible via a web browser a web application and so forth.

The environment further includes a network infrastructure which is representative of different connected components that exchange process and or route data among various entities. The network infrastructure for instance represents different networks and or sub networks that can be provided and managed by different entities such as Internet service providers ISP . For example the WAP are connected to the network infrastructure e.g. by a wired and or wireless connection to provide the WAP with network connectivity such as to the Internet the web other enterprise networks and so forth.

In at least some embodiments the network infrastructure enables different forms of communication. The network infrastructure for example enables transmission and receipt of voice data video data content data and so forth. In at least some embodiments the network infrastructure represents a Unified Communication and Collaboration UC C enabled network.

Connected to and or implemented as part of the network infrastructure is a communication service which is representative of a service to perform various tasks for management of communication between the client device and user devices . The communication service for instance can manage initiation moderation and termination of communication sessions. Examples of the communication service include a VoIP service an online conferencing service a UC C service and so forth. In at least some embodiments the communication service may be implemented as or be connected to a private branch exchange PBX in communication with a Public Switched Telephone Network PSTN to enable voice communication between the client device and user devices .

According to one or more implementations the client device is configured to interface with the communication service via the communication application to enable communication between the client device and the user devices . The communication application for instance represents a communication portal that is implemented and managed by the communication service to enable various types of communication.

The environment further includes a network controller which is representative of functionality to manage various aspects of the WEN . The network controller for instance is connected to the WEN and maintains state awareness of different components of the WEN . For example the network controller maintains a mapping of the WAP e.g. in terms of location and performance attributes of the WAP such as signal quality for the different WAP quality of service QoS attributes of the WAP and so forth. The network controller for instance may be implemented as a software defined networking SDN controller for managing various aspects of the WEN .

According to one or more embodiments the network controller includes connectivity and logic that accesses routing information for the WEN . For instance the network controller can access an Interior Gateway Protocol IGP and or spanning tree switching topology for the WEN . This enables the network controller to identify different data routing paths within the WEN and to map and remap the different routing paths. The network controller stores this information as part of a network database which is representative of functionality to track and store state information for components of the WEN .

The network controller may augment the network database with performance data from the WAP such as indications of data flow quality across the individual WAP . As further detailed herein this enables the network controller to make decisions based on quality metrics and to notify various entities e.g. the client device of quality metrics for the WAP to enable the entities to make network connectivity decisions.

The network controller further maintains network policies which are representative of different rules and parameters for the WEN . The network policies for instance specify particular behaviors and or settings for devices that connect to the WEN . Examples of different example implementations of the network policies are discussed below.

The network controller is configured to propagate the network policies to different entities via a configuration broker . Generally the configuration broker is representative of functionality to interact with different wireless devices e.g. the client device to enable the devices to be configured based on the network policies . The client device for instance includes a configuration module which is representative of functionality to interact with the configuration broker and or other functionalities to enable configuration of the client device for wireless communication via the WEN .

For example the configuration broker can communicate various attributes of the network policies to the configuration module . The configuration module can cause the client device to be configured according to the attributes such as to optimize wireless performance of the client device . The configuration module may be implemented in a variety of ways such as via software firmware hardware and or combinations thereof. According to one or more implementations the configuration module can be implemented as a physical layer PHY and or media access control MAC layer component of the client device . Thus various techniques discussed herein may be implemented at the PHY and or MAC layer to configure the client device for a communication session.

The network controller may also enable the WAP to be configured for different communication sessions. For instance various notifications and operations discussed herein with reference to the client device may also be utilized to notify the WAP of communication session attributes and policies to enable the WAP to be configured for particular communication sessions.

In at least some embodiments configuration of the client device according to the network policies can occur on a per session basis e.g. each time the client device participates in a communication session with another device. Further details concerning configuration of the client device according to different network policies and or session attributes are discussed below.

According to one or more implementations the network controller maintains active state awareness of various devices connected to the WEN state conditions of the WEN and of communication sessions that involve the WEN . For instance the network database tracks connectivity attributes of different devices and components within the WEN . The network database for example includes records for active communication sessions and dynamically updates the records such as based on changes in routing path changes in connection quality and so forth. In at least some embodiments quality metrics from the network database can be used to issue notifications to the client device that enable the client device to adjust to various state changes. Further details and implementations of the various entities of the environment are discussed below.

Having described an example environment in which the techniques described herein may operate consider now a discussion of example ways of propagating various attributes of communication sessions and network policies in accordance with one or more embodiments.

According to various embodiments techniques can be employed to dynamically enlighten various network components with information about communication sessions. For instance notification events can be generated that include various attributes of communication sessions. The notification events can be propagated to different entities further to techniques for session based device configuration discussed herein.

In at least some embodiments notification events can be configured using a communication application programming interface API that can be leveraged to configure and communicate session information to various network components involved in a communication session. For example the communication API can identify dialogue events and session events which can be populated with respective values for a particular communication session. Consider for instance the following events and attributes that may be conveyed via a notification event generated by the communication API 

These events apply to various portions of a communication session such as the start update and end of a communication session. A dialogue event can include one or more of the following example attributes.

 1 Timestamp This attribute can be leveraged to specify timestamps for a start of a communication session updates that occur during a communication session and an end e.g. termination of a communication session.

 2 Source IP Address This attribute can be leveraged to specify an IP address for a device that is a source of media during a communication session e.g. a device that initiates a communication session.

 3 Destination IP Address This attribute can be leveraged to specify an IP address for a device that is to receive media as part of a communication session.

 4 Transport Type This attribute can be leveraged to specify a transport type or combination of transport types for a communication session. Examples of transport types include Transmission Control Protocol TCP User Datagram Protocol UDP and so forth.

 5 Source Port this attribute can be leveraged to specify an identifier for a port at a source device e.g. a source device identified by the Source IP Address referenced above.

 6 Destination Port This attribute can be leveraged to specify an identifier for a port at a destination device e.g. a destination device identified by the Destination IP Address referenced above.

 7 Media Type This attribute can be leveraged to specify a media type and or types that are to be transmitted and or are being transmitted as part of a communication session. As discussed elsewhere herein the communication session can involve multiple different types of media. Thus the Media Type attribute can be employed to identify media types in a communication session such as for applying network policies discussed herein.

 8 Bandwidth Estimation This attribute can be leveraged to specify an estimated bandwidth that is to be allocated for a communication session. The estimated bandwidth for instance can be based on various factors such as a privilege level associated with a user type and or types of media included in a communication session a network policy applied to the communication session and so forth.

 9 To This attribute can be leveraged to identify a user to which media in a communication session is to be transmitted.

 10 From This attribute can be leveraged to identify a user from which media in a communication session is transmitted.

 11 Error Code This attribute can be leveraged to specify various error codes for errors that may occur as part of a communication session. For example errors can include errors that occur during initiation the communication session errors that occurred during a communication session errors that occur when a communication session is terminated and so forth.

These events can be generated and applied when a communication session experiences errors performance degradation and so forth. A session problem event may include one or more of the attributes discussed above with reference to Dialogue Events and may also include one or more of the following attributes.

 1 Mean Opinion Score MOS Degradation This attribute can be leveraged to specify a MOS for a communication session. The attribute for instance can be used to indicate that an overall quality of a communication session has decreased.

 2 Jitter Inter Arrival Time This attribute can be leveraged to specify jitter values for a communication session. The attribute for instance can be used to indicate that a jitter value or values have increased e.g. have exceeded a specified jitter value threshold.

 3 Packet Loss Rate This attribute can be leveraged to specify a packet loss rate for a communication session. The attribute for instance can be used to indicate that a packet loss rate has increased e.g. has exceeded a specified packet loss rate value threshold.

 4 Round Trip Delay RTD This attribute can be leveraged to specify RTD values for packets in communication sessions. The attribute for instance can be used to indicate that RTD values for packets have increased e.g. have exceeded a specified RTD value threshold.

 5 Concealment Ratio This attribute can be leveraged to specify a cumulative ratio of concealment time over speech time observed after starting a communication session. The attribute for instance can be used to specify that a concealment ratio has increased e.g. has exceeded a specified concealment ratio value threshold.

Thus various notifications discussed herein can include one or more of the attributes discussed above and can be used to propagate the attributes to various entities. Elements from the communication API discussed above for example can be configured based on network policies and attributes of a communication session. For instance attributes of a particular communication session can be applied to network policies to configure elements of the communication API. The configured elements can be communicated to a device e.g. the client device to enable the device to be configured based on values from the communication API elements.

Having described an example ways of propagating session awareness for communication sessions consider now some example network policies in accordance with one or more embodiments.

The following section describes example network policies e.g. network policies in accordance with one or more embodiments. As referenced above network policies generally specify various rules and parameters for connecting to a wireless network and for transmitting and receiving data via the wireless network.

Generally off channel scanning refers to scanning for available wireless network channels. For instance a device may scan for available wireless channels in attempt to maintain channel awareness in an event that a wireless channel is required.

An example network policy can specify that when a communication session is in progress off channel scanning is to be halted and or minimized. For instance a network policy may specify that off channel scanning is not to be performed while a communication session is in progress. Alternatively a network policy may specify a maximum amount of time during which off channel scanning may be performed while a communication session is in progress e.g. 30 milliseconds 60 milliseconds and so forth.

In at least some embodiments a notification event can be sent to a client device notifying the device that the device is currently participating in a communication session and thus off channel scanning is to be halted or minimized. The notification event for instance can include attributes of the communication API introduced above. When the communication event is terminated a notification event e.g. based on the communication API can be sent to the client device notifying the device that the communication event is terminated and thus off channel scanning may resume according to default settings.

Mobile devices often move between different locations. When a mobile device moves while connected to a wireless network the mobile device may transfer its network connection between different WAP. For instance if a user is participating in a communication session with a mobile device while walking between areas of an enterprise facility handoffs may occur between different WAP to enable the communication session to continue and to maintain an acceptable signal quality.

According to various implementations network policies can be employed to optimize connection handoff between different WAP. For instance the network controller can maintain various state information for components of the WEN . Examples of such state information include 

 2 A location of the client device . The location for instance can be determined relative to a WAP to which the client device is connected.

 3 Direction of movement of the client device . For instance the network controller can determine that the client device is moving in a particular direction such as relative to an associated WAP. In at least some embodiments this information can be received from a WAP that detects movement of the client device in a general direction.

 4 Signal quality attributes of a current connection of the client device to a WAP. Examples of signal quality attributes include signal to noise ratio SNR received signal strength indicator RSSI jitter packet delay wireless congestion and so forth.

 5 Signal quality attributes of other WAP of the WEN . The attributes for instance can be determined from the WAP themselves and or from connected devices.

 6 Locations of other WAP. The network controller for instance may maintain a map of WAP locations. Further the map may be augmented with signal quality attributes of the individual WAP such that the network controller maintains a mapping of wireless availability and quality in different locations.

The network controller can utilize this information to enable intelligent decisions to be made regarding access point candidates. For instance the network controller can identify a best candidate WAP for the client device e.g. based on location proximity to the client device and signal quality. The network controller can then send a notification event e.g. using the communication API to the client device instructing the client device to establish a connection with the WAP.

Alternatively or additionally the network controller can provide a list of best candidate WAP to the client device and the client device can employ internal decision making logic to select a WAP from the list with which to connect.

According to various implementations this process can occur dynamically and continuously. For instance the network controller can periodically and or continuously update its WAP state awareness. Further the network controller can periodically and or continuously update the client device regarding best candidate WAP for wireless data transmission.

Mobile devices often implement battery saving procedures when operating under battery power. For instance when disconnected from an alternating current AC source to conserve battery life a mobile device may lower the amount of power used to transmit wireless data. However reducing the amount of power to a wireless functionality e.g. the wireless devices may adversely affect wireless signal quality.

Accordingly a network policy may specify that while a communication session is in progress power supplied to wireless functionalities is not to be reduced. In at least some implementations this network policy can override a default device setting that attempts to reduce power for wireless data transmission when a device is operating on battery power.

The network controller for example can send a notification event to the client device e.g. using the communication API indicating that a communication session is in progress and thus power supplied to wireless functionality is not to be reduced. When the communication session terminates the network controller can send a notification event to the client device indicating that the communication session has terminated. Thus the client device may resume default power saving procedures such as reducing power supplied to wireless functionality.

Mobile devices may implement rate adaption procedures to compensate for problems in signal quality such as may occur in areas with noise sources that generate RF interference. Generally rate adaption refers to a process of reducing a transmission bit rate while increasing transmission power for data transmission. However typical rate adaption algorithms may adversely affect wireless signal quality. For instance some rate adaption algorithms cause increases in packet transmission retries and retransmissions which may cause a receiving device to drop packets as the time sequence to play out media from a communication session expires.

Accordingly a network policy may specify that while a communication session is in progress a default rate adaption algorithm is to be overridden with a custom rate adaption algorithm. The custom rate adaption algorithm for instance may specify that packet retransmissions and transmission retries are to be reduced from default levels Implementation of the custom rate adaption algorithm may reduce the likelihood that unnecessary packet retransmissions and transmission retries are performed by a transmitting device.

The network controller for example can send a notification event to the client device e.g. using the communication API indicating that a communication session is in progress and thus a custom rate adaption algorithm is to be implemented if rate adaption is to be performed. When the communication session terminates the network controller can send a notification event to the client device indicating that the communication session has terminated. Thus the client device may resume default rate adaption procedures.

According to various implementations wireless packets that are transmitted may be associated with quality of service QoS markings that specify how that packets are to be treated by various network elements. Examples of QoS markings include expedited forwarding assured forwarding best effort and so forth. For instance a differentiated services code point DSCP field in an IP packet can be configured based on different QoS levels to enable different levels of service to be assigned to network traffic. Typical solutions for QoS markings however rely on per packet QoS marking.

Accordingly a network policy may specify particular QoS levels that are to be applied to transmission of different data packets. The network controller for example can send a notification event to the client device e.g. using the communication API indicating that a communication session is in progress and thus a particular QoS level is to be applied to packets that are transmitted by the client device . The notification event for instance is out of band from the actual media packets of the communication session. The notification may include actual tags to be applied to the data packets regardless of how the data packets may be tagged when they are received for transmission. Thus a QoS level specified by the notification event for packets of a communication session may override a QoS marking attached to the packets. Thus embodiments discussed herein provide ways of dynamically configuring QoS for communication sessions such as on a per session basis.

As discussed above state information regarding different WAP can be maintained such as location and signal quality for different WAP. Thus if the client device experiences signal quality degradation with a current WAP the client device can be informed of candidate replacement WAP. The network controller for example can send a notification event to the client device e.g. using the communication API identifying a candidate WAP and or wireless channels that the client device may associate with to increase signal quality. In at least some implementations this can circumvent the need for the client device to perform channel search procedures such as off channel scanning.

Having described some example network policies consider now some example implementation scenarios for session based device configuration in accordance with one or more embodiments.

The following section describes example implementation scenarios for session based device configuration in accordance with one or more embodiments. The implementation scenarios may be implemented in the environment discussed above and or any other suitable environment.

In the scenario a communication session is initiated between the client device and the user device via the communication service . The communication service for instance serves as an intermediary between the communication application of the client device and the user device . For example the communication service may manage various aspects of initiation moderation and termination of the communication session .

The communication session may include various types of communication media such as voice video and or combinations thereof. While the user device is illustrated as being connected outside of the WEN in alternative implementations the client device and the user device may be connected directly to the WEN .

In response to initiation of the communication session the communication service generates a notification event and sends the notification event to the network controller . The notification event notifies the network controller that the communication session is initiated. The notification event includes a session notification API which represents an implementation of the communication API detailed above.

Further to the scenario the session notification API includes values for various attributes of the communication session . Examples of such attributes include identifiers for the client device and the user device such as IP addresses media access control MAC addresses and so forth. The attributes may further include attributes of the communication session itself such as a type or types of media being transferred during the communication session a start time of the communication session an application ID for the communication application and so forth. Examples of other attributes that may be communicated with the session notification API are detailed above such as in the discussion of the example communication API and the example network policies.

Thus based on information from the session notification API e.g. an ID for the client device the network controller ascertains that the client device is connected to a network domain of the network controller . Accordingly the network controller generates a configuration event that includes a session configuration API . The session configuration API for instance is configured by applying values from the session notification API to the network policies .

Further to the scenario the network controller communicates the configuration event to the client device via the WEN . For instance the configuration broker interacts with the configuration module to communicate the configuration event . The configuration module includes functionality to consume the session configuration API extract information from the API and to configure various attributes of the client device based on attributes and values included in the session configuration API . For instance the configuration module can propagate information from the session configuration API to different functionalities of the client device to enable the client device to operate according to the network policies e.g. while engaging in the communication session .

As an example consider that the wireless driver is configured by default to perform periodic off channel scanning to identify available wireless channels. According to the scenario the session configuration API includes an indication that the client device is either to halt off channel scanning during the communication session or is to limit the amount of time during which off channel scanning is performed. The configuration module can read this information from the session configuration API and communicate the information to the wireless driver . Thus the wireless driver may operate according to this policy to limit or stop off channel scanning while the communication session is active.

This example policy is presented for purpose of example only and it is to be appreciated that a wide variety of different policies and behaviors can be enforced utilizing techniques discussed herein. Examples of other policies and behaviors that may be utilized are discussed above.

In the scenario the communication service detects one or more changes in the communication session . For instance the communication service may receive an indication from the client device and or the user device of a problem with session quality of the communication session . Examples of session quality problems include lower than acceptable S N ratio low signal strength too much jitter too many dropped packets and so forth.

In response to the indication of session quality problems the communication service generates an update event that includes a session update API . The session update API for instance represents an implementation of the communication API detailed above. The communication service sends the update event to the network controller . The update event notifies the network controller of a change in the communication session e.g. of signal problems with the communication session.

Further to the scenario the session update API includes values for various attributes of the communication session . Examples of such attributes include identifiers for the client device and the user device such as IP addresses media access control MAC addresses and so forth. The attributes may further include a session ID for the communication session and an indication of the change to the communication session. Examples of other attributes that may be communicated with the session update API are detailed above such as in the discussion of the example communication API and the example network policies.

Thus based on information from the session update API the network controller ascertains that a problem is occurring with the communication session . The session update API for instance may indicate that signal quality for a WAP to which the client device is connected is poor.

Accordingly the network controller generates a reconfiguration event that includes a reconfiguration API . The reconfiguration API for instance is configured by applying values from the session update API to the network policies . In at least some embodiments the reconfiguration API may identify candidate WAP that have better signal quality than a current WAP to which the client device is connected.

Further to the scenario the network controller communicates the reconfiguration event to the client device via the WEN . For instance the configuration broker interacts with the configuration module to communicate the reconfiguration event . The configuration module includes functionality to consume the reconfiguration API extract information from the API and to configure various attributes of the client device based on attributes and values included in the reconfiguration API . For instance the configuration module can propagate information from the reconfiguration API to different functionalities of the client device to enable the client device to operate according to the network policies e.g. while engaging in the communication session .

In at least some embodiments based on a candidate WAP identified in the reconfiguration API the client device initiates a handoff procedure to disconnect from a current WAP and to connect to a different WAP . Thus signal quality for the communication session may be increased by connecting to a WAP with higher signal quality.

While the scenario is discussed with reference to the reconfiguration event being generated in response to the update event this is not intended to be limiting. For instance in at least some embodiments the network controller maintains its own session and or network awareness independent of the communication service . Thus the network controller can detect changes in network and or session attributes and can generate a reconfiguration event and reconfiguration API to notify the client device of the changes and appropriate configuration settings for the client device based on the changes. The network controller for instance can generate the reconfiguration event and the reconfiguration API based on its own state awareness and independent of a notification from an external entity such as the communication service .

Accordingly techniques discussed herein can be employed to dynamically update communication session awareness while a communication session is in progress. Further update events and reconfiguration events may be issued multiple times during a particular communication session thus enabling participating devices to be dynamically reconfigured to adapt to changes in session quality and or session attributes.

In the scenario the communication service detects that the communication session has terminated. For instance the communication service may receive an indication from the client device and or the user device that the communication session has ended.

In response to the indication of session termination the communication service generates an update event that includes a session update API . The session update API for instance represents an implementation of the communication API detailed above. The communication service sends the update event to the network controller . The update event notifies the network controller that the communication session has ended.

Further to the scenario the session update API includes values for various attributes of the communication session . Examples of such attributes include identifiers for the client device and the user device . The attributes may further include a session ID for the communication session and a session end timestamp for the communication session . Examples of other attributes that may be communicated with the session update API are detailed above in the discussion of the example communication API.

Thus based on information from the session update API the network controller ascertains that the communication session has ended. Accordingly the network controller generates a termination event that includes a termination API . The termination API for instance is configured by applying values from the session update API to the network policies . In at least some embodiments the termination API identifies the communication session and specifies that the communication session has ended.

Further to the scenario the network controller communicates the termination event to the client device via the WEN . For instance the configuration broker interacts with the configuration module to communicate the termination event . The configuration module includes functionality to consume the termination API and to configure various attributes of the client device based on attributes and values included in the termination API . For instance the configuration module can propagate information from the termination API to different functionalities of the client device to enable the client device to operate according to the network policies .

In at least some embodiments based on an indication that the communication session is terminated the client device may notify its various components that they may resume default behavior. For instance the configuration module may notify the wireless drivers that default behaviors may be resumed such as with reference to off channel scanning battery conservation techniques wireless rate adaption algorithms and so forth.

Accordingly techniques discussed herein can be employed to notify devices of session start and stop events and to dynamically configure device attributes on a per session basis.

Having discussed some example implementation scenarios consider now a discussion of some example procedures in accordance with one or more embodiments.

The following discussion describes some example procedures for session based device configuration in accordance with one or more embodiments. The example procedures may be employed in the environment of the system of and or any other suitable environment. Further the example procedures may represent implementations of the example scenarios discussed above. In at least some embodiments steps described for the various procedures can be implemented automatically and independent of user interaction.

Step receives a notification that a communication session is initiated in a network. The notification for instance includes various attributes of the communication session. For example the notification may be configured via the communication API detailed above. Examples of attributes and information that may be communicated via the notification are described above.

Step ascertains attributes of the communication session from the notification. For example the network controller can process the notification to identify session attributes such as from a communication API included with the notification.

Step applies the attributes of the communication session to network policies for the network to specify parameters for the communication session. For instance different policy based decisions can be made based on the attributes. Examples of network policies are detailed above.

Step generates a configuration event that includes the parameters for the communication session. The configuration event for instance includes a communication API that is populated with various values that represent the parameters for the communication session. Examples of such parameters include behaviors for a device that is participating in the communication session such as whether to engage in off channel scanning during the communication session allowed power conservation techniques during the communication session QoS marking to be applied to session packets and so forth.

Step communicates the configuration event to a device that is connected to the network and that is participating in the communication session. In at least some embodiments information from the configuration event enables the device to configure itself to operate according to the parameters for the communication session.

With reference to the environment and the scenarios discussed above the network controller can communicate the configuration event to the client device . Alternatively or additionally the network controller can communicate the configuration event to other network elements such as the WAP . For instance techniques discussed herein may be employed to configure the WAP and or other network components and network elements and are not limited to configuration of end user devices.

Step configures a notification event that includes attributes of a communication session that is occurring in a network. The communication service for instance populates a communication API with attributes of a communication session. Examples of communication API and communication session attributes are detailed above. In at least some embodiments the attributes may include attributes of a communication session that was recently initiated and or changes to attributes of an existing communication session.

Step communicates the notification event to a network controller for the network. The communication service for instance communicates the populated communication API to the network controller . The notification event may include attributes of a new communication session and or changes to attributes of an existing communication session. As detailed herein the network controller can utilize information from the communication API to apply network policies and notify various devices of parameters and behaviors to be applied for a communication session.

Step receives an indication of a change in communication session attributes for a communication session that is occurring in a network. The network controller for example receive an indication that one or more attributes of a communication session have changed. Examples of such a change include a change in session quality a change in device location a change in device performance e.g. for the client device and or a WAP and so forth. The indication of the change may be received from the communication service and or based on detected state conditions for the network.

Step generates a reconfiguration event based on the change in the communication session attributes. The network controller for instance applies the changed attributes to the network policies to generate a session update API for the communication session. The session update API for instance includes element values that reflect the change in the communication session attributes as applied to the network policies .

In at least some embodiments the reconfiguration event may identify WAP that are candidates to provide a wireless connection. The candidates may be identified based on signal quality for the individual WAP and or location for the individual WAP . For instance if the change in the communication session attributes indicates a change in session quality the reconfiguration event can identify WAP in a particular region that have a higher signal quality than a currently connected WAP.

Alternatively or additionally if the change in the communication session attributes indicates that a device e.g. the client device is moving from one location to another the reconfiguration event can identify WAP that occur in the general direction of movement and that are available to provide wireless connectivity. Thus a device that receives the reconfiguration event can process data from the event and select a WAP with which to associate such as to improve signal quality during a communication event and or enable the communication event to continue when moving between locations.

Step communicates the reconfiguration event to a device that is connected to the network and that is participating in the communication event. The network controller for instance communicates the reconfiguration event to the client device . Based on information from the communication event the client device can change its internal settings can connect to a different WAP and so forth.

Step receives a configuration event that includes parameters to be applied for a communication session. The client device for instance receives the configuration event from the network controller . In at least some embodiments the configuration event may be an initial configuration event e.g. a first configuration event that is received after initiation of a communication session. Alternatively the configuration event may be a reconfiguration event that is received during a communication session and subsequent to a previously received configuration event for the communication session. According to various implementations the configuration event is received after the client device has begun participating in the communication session.

Step processes the configuration event to identify the parameters for the communication session. The configuration event for example includes a communication API that is populated with different values for different session parameters and or device settings. The client device may process the communication API to expose the different parameters for the communication session.

Step configures a device for the communication session based on the parameters. The client device for instance can configure various device settings based on the parameters. For example the configuration module can communicate various parameters and or settings to the wireless drivers to enable the wireless drivers to control the wireless devices according to the parameters and settings. Examples of different device settings and attributes that can be configured are discussed above and include off channel scan settings power conservation settings QoS marking to be applied to communication session packets and so forth.

A device may be configured as part of an initial configuration of the device for a communication session and or as part of a configuration update. For instance the parameters may include updates to previously configured settings and device attributes such as received as part of a reconfiguration event. Thus previously applied settings and attributes for a device participating in a communication session may be updated for the communication session such as to reflect changes in the communication session.

As referenced above in the discussion of environment the configuration module can be implemented as a PHY and or MAC layer component of the client device . Aspects of the various procedures discussed above for instance may be implemented at the PHY and or MAC layer to configure a device for a communication session. For example processing of the communication API may occur at the PHY and or MAC layer to enable various device parameters and settings to be configured for a communication session.

While the method discussed above is described with reference to configuration a user device e.g. the client device for a communication session this is not intended to be limiting. For instance in at least some embodiments network components such as wireless access points network firewalls and so forth may be configured utilizing techniques discussed herein. Different events and APIs discussed herein for example may be communicated to different network components to enable the components to be configured for particular communication sessions. Configuration of network components may occur additionally or alternatively to configuration of an end user device and in at least some embodiments may occur in parallel with configuration of an end user device. For instance the various notification events discussed above as being communicated to the client device may additionally or alternatively be communicated to one or more of the WAP a network firewall component a hub a switch a router and so forth to enable the different components to be configured according to techniques discussed herein.

As discussed above the different notification events and APIs referenced herein may be communicated separately from data packets of a communication session. Thus the notification events may be considered as out of band communications with regard to communication sessions. In at least some embodiments this enables devices to be configured and reconfigured for a communication session without interfering with the communication session itself e.g. independent of a flow of data packets for the communication session.

Having discussed some example procedures consider now a discussion of an example system and device in accordance with one or more embodiments.

The example computing device as illustrated includes a processing system one or more computer readable media and one or more Input Output I O Interfaces that are communicatively coupled one to another. Although not shown the computing device may further include a system bus or other data and command transfer system that couples the various components one to another. A system bus can include any one or combination of different bus structures such as a memory bus or memory controller a peripheral bus a universal serial bus and or a processor or local bus that utilizes any of a variety of bus architectures. A variety of other examples are also contemplated such as control and data lines.

The processing system is representative of functionality to perform one or more operations using hardware. Accordingly the processing system is illustrated as including hardware element that may be configured as processors functional blocks and so forth. This may include implementation in hardware as an application specific integrated circuit or other logic device formed using one or more semiconductors. The hardware elements are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions.

The computer readable media is illustrated as including memory storage . The memory storage represents memory storage capacity associated with one or more computer readable media. The memory storage may include volatile media such as random access memory RAM and or nonvolatile media such as read only memory ROM Flash memory optical disks magnetic disks and so forth . The memory storage may include fixed media e.g. RAM ROM a fixed hard drive and so on as well as removable media e.g. Flash memory a removable hard drive an optical disc and so forth . The computer readable media may be configured in a variety of other ways as further described below.

Input output interface s are representative of functionality to allow a user to enter commands and information to computing device and also allow information to be presented to the user and or other components or devices using various input output devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone e.g. for voice recognition and or spoken input a scanner touch functionality e.g. capacitive or other sensors that are configured to detect physical touch a camera e.g. which may employ visible or non visible wavelengths such as infrared frequencies to detect movement that does not involve touch as gestures and so forth. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card tactile response device and so forth. Thus the computing device may be configured in a variety of ways as further described below to support user interaction.

Various techniques may be described herein in the general context of software hardware elements or program modules. Generally such modules include routines programs objects elements components data structures and so forth that perform particular tasks or implement particular abstract data types. The terms module functionality and component as used herein generally represent software firmware hardware or a combination thereof. The features of the techniques described herein are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

An implementation of the described modules and techniques may be stored on or transmitted across some form of computer readable media. The computer readable media may include a variety of media that may be accessed by the computing device . By way of example and not limitation computer readable media may include computer readable storage media and computer readable signal media. 

 Computer readable storage media may refer to media and or devices that enable persistent storage of information in contrast to mere signal transmission carrier waves or signals per se. Computer readable storage media do not include signals per se. The computer readable storage media includes hardware such as volatile and non volatile removable and non removable media and or storage devices implemented in a method or technology suitable for storage of information such as computer readable instructions data structures program modules logic elements circuits or other data. Examples of computer readable storage media may include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage hard disks magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or other storage device tangible media or article of manufacture suitable to store the desired information and which may be accessed by a computer.

 Computer readable signal media may refer to a signal bearing medium that is configured to transmit instructions to the hardware of the computing device such as via a network. Signal media typically may embody computer readable instructions data structures program modules or other data in a modulated data signal such as carrier waves data signals or other transport mechanism. Signal media also include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared and other wireless media.

As previously described hardware elements and computer readable media are representative of instructions modules programmable device logic and or fixed device logic implemented in a hardware form that may be employed in some embodiments to implement at least some aspects of the techniques described herein. Hardware elements may include components of an integrated circuit or on chip system an application specific integrated circuit ASIC a field programmable gate array FPGA a complex programmable logic device CPLD and other implementations in silicon or other hardware devices. In this context a hardware element may operate as a processing device that performs program tasks defined by instructions modules and or logic embodied by the hardware element as well as a hardware device utilized to store instructions for execution e.g. the computer readable storage media described previously.

Combinations of the foregoing may also be employed to implement various techniques and modules described herein. Accordingly software hardware or program modules and other program modules may be implemented as one or more instructions and or logic embodied on some form of computer readable storage media and or by one or more hardware elements . The computing device may be configured to implement particular instructions and or functions corresponding to the software and or hardware modules. Accordingly implementation of modules that are executable by the computing device as software may be achieved at least partially in hardware e.g. through use of computer readable storage media and or hardware elements of the processing system. The instructions and or functions may be executable operable by one or more articles of manufacture for example one or more computing devices and or processing systems to implement techniques modules and examples described herein.

As further illustrated in the example system enables ubiquitous environments for a seamless user experience when running applications on a personal computer PC a television device and or a mobile device. Services and applications run substantially similar in all three environments for a common user experience when transitioning from one device to the next while utilizing an application playing a video game watching a video and so on.

In the example system multiple devices are interconnected through a central computing device. The central computing device may be local to the multiple devices or may be located remotely from the multiple devices. In one embodiment the central computing device may be a cloud of one or more server computers that are connected to the multiple devices through a network the Internet or other data communication link.

In one embodiment this interconnection architecture enables functionality to be delivered across multiple devices to provide a common and seamless experience to a user of the multiple devices. Each of the multiple devices may have different physical requirements and capabilities and the central computing device uses a platform to enable the delivery of an experience to the device that is both tailored to the device and yet common to all devices. In one embodiment a class of target devices is created and experiences are tailored to the generic class of devices. A class of devices may be defined by physical features types of usage or other common characteristics of the devices.

In various implementations the computing device may assume a variety of different configurations such as for computer mobile and television uses. Each of these configurations includes devices that may have generally different constructs and capabilities and thus the computing device may be configured according to one or more of the different device classes. For instance the computing device may be implemented as the computer class of a device that includes a personal computer desktop computer a multi screen computer laptop computer netbook and so on.

The computing device may also be implemented as the mobile class of device that includes mobile devices such as a mobile phone portable music player portable gaming device a tablet computer a multi screen computer and so on. The computing device may also be implemented as the television class of device that includes devices having or connected to generally larger screens in casual viewing environments. These devices include televisions set top boxes gaming consoles and so on.

The techniques described herein may be supported by these various configurations of the computing device and are not limited to the specific examples of the techniques described herein. For example functionalities discussed with reference to the communication service the communication application and or the network controller may be implemented all or in part through use of a distributed system such as over a cloud via a platform as described below.

The cloud includes and or is representative of a platform for resources . The platform abstracts underlying functionality of hardware e.g. servers and software resources of the cloud . The resources may include applications and or data that can be utilized while computer processing is executed on servers that are remote from the computing device . Resources can also include services provided over the Internet and or through a subscriber network such as a cellular or Wi Fi network.

The platform may abstract resources and functions to connect the computing device with other computing devices. The platform may also serve to abstract scaling of resources to provide a corresponding level of scale to encountered demand for the resources that are implemented via the platform . Accordingly in an interconnected device embodiment implementation of functionality described herein may be distributed throughout the system . For example the functionality may be implemented in part on the computing device as well as via the platform that abstracts the functionality of the cloud .

Discussed herein are a number of methods that may be implemented to perform techniques discussed herein. Aspects of the methods may be implemented in hardware firmware or software or a combination thereof. The methods are shown as a set of steps that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. Further an operation shown with respect to a particular method may be combined and or interchanged with an operation of a different method in accordance with one or more implementations. Aspects of the methods can be implemented via interaction between various entities discussed above with reference to the environment .

Techniques for session based device configuration are described. Although embodiments are described in language specific to structural features and or methodological acts it is to be understood that the embodiments defined in the appended claims are not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as example forms of implementing the claimed embodiments.

