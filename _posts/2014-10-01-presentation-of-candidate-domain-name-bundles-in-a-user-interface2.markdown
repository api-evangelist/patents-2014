---

title: Presentation of candidate domain name bundles in a user interface
abstract: A system and method for the generation and presentation of candidate domain names are presented. The method includes receiving, by at least one server communicatively coupled to a network, a request to access or purchase access to a software application, the request being received from a user. Keywords associated with at least one of the user, a website of the user, and a business of the user are generated and a candidate domain name relevant to the keywords is generated. A user interface is displayed including the candidate domain name. The user interface enables the user to register the candidate domain name. A plurality of candidate domain names may be generated and organized into carousels or stacks according to a common theme. The candidate domain names may be displayed on a user interface and arranged thereon according to a relevance score of the domain name bundles.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09613374&OS=09613374&RS=09613374
owner: Go Daddy Operating Company, LLC
number: 09613374
owner_city: Scottsdale
owner_country: US
publication_date: 20141001
---
This application is a continuation in part and claims the benefit of U.S. patent application Ser. No. 14 051 358 filed Oct. 10 2013 and entitled CANDIDATE DOMAIN NAME GENERATION and this application is related to U.S. patent application Ser. No. 14 504 183 entitled System and Method for Grouping Candidate Domain Names for Display Ser. No. 14 504 188 entitled System and Method for Dynamic Grouping and Display of Candidate Domain Name Bundles and Ser. No. 14 504 200 entitled System and Method for Presentation of Candidate Domain Name Stacks in User Interface each filed Oct. 1 2014 all of which applications are incorporated herein by reference.

The present invention relates generally to the display of candidate domain names to a user for purchase and more particularly to systems and methods for grouping a plurality of candidate domain names together and presenting them to the user in viewable carousels and viewable stacks.

A network is a collection of links and nodes e.g. multiple computers and or other devices connected together arranged so that information may be passed from one part of the network to another over multiple links and through various nodes. Examples of networks include the Internet the public switched telephone network the global Telex network computer networks e.g. an intranet an extranet a local area network or a wide area network wired networks and wireless networks.

The Internet is a worldwide network of computers and computer networks arranged to allow the easy and robust exchange of information between computer users. Hundreds of millions of people around the world have access to computers connected to the Internet via Internet Service Providers ISPs . Content providers place multimedia information e.g. text graphics audio video animation and other forms of data at specific locations on the Internet referred to as web pages. Websites comprise a collection of connected or otherwise related web pages. The combination of all the websites and their corresponding web pages on the Internet is generally known as the World Wide Web WWW or simply the Web.

For Internet users and businesses alike the Internet continues to be increasingly valuable. More people use the Web for everyday tasks from social networking shopping banking and paying bills to consuming media and entertainment. E commerce is growing with businesses delivering more services and content across the Internet communicating and collaborating online and inventing new ways to connect with each other.

Prevalent on the Web are multimedia websites some of which may offer and sell goods and services to individuals and organizations. Websites may consist of a single webpage but typically consist of multiple interconnected and related web pages. Websites unless extremely large and complex or exposed to unusual traffic demands typically reside on a single server and are prepared and maintained by a single individual or entity. Menus and links may be used to move between different web pages within the website or to move to a different website as is known in the art. The interconnectivity of web pages enabled by the Internet can make it difficult for Internet users to tell where one website ends and another begins.

Websites may be created using HyperText Markup Language HTML to generate a standard set of tags that define how the web pages for the website are to be displayed. Users of the Internet may access content providers websites using software known as an Internet browser such as MICROSOFT INTERNET EXPLORER or MOZILLA FIREFOX. After the browser has located the desired webpage the browser requests and receives information from the webpage typically in the form of an HTML document and then displays the webpage content for the user. The user then may view other web pages at the same website or move to an entirely different website using the browser.

Some Internet users typically those that are larger and more sophisticated may provide their own hardware software and connections to the Internet. But many Internet users either do not have the resources available or do not want to create and maintain the infrastructure necessary to host their own websites. To assist such individuals or entities hosting companies exist that offer website hosting services. These hosting service providers typically provide the hardware software and electronic communication means necessary to connect multiple websites to the Internet. A single hosting service provider may literally host thousands of websites on one or more hosting servers.

Browsers are able to locate specific websites because each website resource and computer on the Internet has a unique Internet Protocol IP address. Presently there are two standards for IP addresses. The older IP address standard often called IP Version 4 IPv4 is a 32 bit binary number which is typically shown in dotted decimal notation where four 8 bit bytes are separated by a dot from each other e.g. 64.202.167.32 . The notation is used to improve human readability. The newer IP address standard often called IP Version 6 IPv6 or Next Generation Internet Protocol IPng is a 128 bit binary number. The standard human readable notation for IPv6 addresses presents the address as eight 16 bit hexadecimal words each separated by a colon e.g. 2EDC BA98 0332 0000 CF8A 000C 2154 7313 .

IP addresses however even in human readable notation are difficult for people to remember and use. A Uniform Resource Locator URL is much easier to remember and may be used to point to any computer directory or file on the Internet. A browser is able to access a website on the Internet through the use of a URL. The URL may include a Hypertext Transfer Protocol HTTP request combined with the website s Internet address also known as the website s domain name. An example of a URL with a HTTP request and domain name is http www.companyname.com. In this example the http identifies the URL as a HTTP request and the companyname.com is the domain name.

Domain names are easier to remember and use than their corresponding IP addresses. The Internet Corporation for Assigned Names and Numbers ICANN approves some Generic Top Level Domains gTLD and delegates the responsibility to a particular organization a registry for maintaining an authoritative source for the registered domain names within a TLD and their corresponding IP addresses. For certain TLDs e.g. .biz .info .name and .org the registry is also the authoritative source for contact information related to the domain name and is referred to as a thick registry. For other TLDs e.g. .com and .net only the domain name registrar identification and name server information is stored within the registry and a registrar is the authoritative source for the contact information related to the domain name. Such registries are referred to as thin registries. Most gTLDs are organized through a central domain name Shared Registration System SRS based on their TLD.

The process for registering a domain name with .com .net .org and some other TLDs allows an Internet user to use an ICANN accredited registrar to register their domain name. For example if an Internet user John Doe wishes to register the domain name mycompany.com John Doe may initially determine whether the desired domain name is available by contacting a domain name registrar. The Internet user may make this contact using the registrar s webpage and typing the desired domain name into a field on the registrar s webpage created for this purpose. Upon receiving the request from the Internet user the registrar may ascertain whether mycompany.com has already been registered by checking the SRS database associated with the TLD of the domain name. The results of the search then may be displayed on the webpage to thereby notify the Internet user of the availability of the domain name. If the domain name is available the Internet user may proceed with the registration process. If the domain name is not available for registration the Internet user may keep selecting alternative domain names until an available domain name is found.

For many users that wish to have an Internet presence the selection of a particular domain name may be secondary consideration. Some users for example may desire to construct a website and may even have a vague understanding of the concept of a domain name but may not understand that a domain name must be registered before the website can be hosted there. Other users may have already registered a domain name but may not understand that a domain name must in many cases be selected in order optimize the search engine performance of the domain name and associated website. For example a customer may wish to purchase advertising services for a website at a particular domain name but may not understand that the domain name is a poor match for the desired advertising. In such a case the user may observe better performance for the advertising if the user were to register a new better suited domain name and host the website on that domain name.

Domain names can have many potentially thousands of connected domain names that receive intentional or unintentional traffic i.e. volume and frequency of visitors . Example connections include misspellings of the selected domain name different top level domains from the selected domain name domain names having appended local identifiers e.g. mywebsitenyc.com is connected to mywebsite.com and the like. Many users may be unaware that more traffic to the user s primary websites can be generated by registering and managing domain names that are connected in some fashion to the selected domain name. Furthermore the users may be unaware that other entities could register those connected domain names and direct the traffic thereto away from the users websites. More sophisticated users may be aware of these traffic issues but may not know how to identify the most valuable and economically viable subset of connected domain names to own.

The present invention relates generally to the generation and grouping of candidate domain names and to the adaptable display of groups of candidate domain names to a user.

In one implementation the present disclosure provides a method performed by at least one server communicatively coupled to a network. The method includes receiving from a user input data including one or more search terms obtaining a plurality of candidate domain names relevant to the input data and arranging the plurality of candidate domain names into one or more sets such that each of the sets contains at least one of the candidate domain names. Each of the sets has a relevance score relative to one or both of the search terms and the user. In another implementation the present disclosure provides a system including at least one server computer in communication with a network and including a processor configured to receive input data from a user obtain one or more candidate domain names relevant to the input data and display a user interface including one or more of the sets and enabling the user to register one or more of the candidate domain names. The input data includes one or more search terms. The candidate domain names are arranged into one or more sets. Each set has a relevance score relative to one or both of the search terms and the user.

In another implementation the present disclosure provides a method performed by at least one server communicatively coupled to a network. The method includes receiving from a user input data that includes one or more search terms obtaining one or more candidate domain names relevant to the input data and arranged into one or more bundles and displaying a user interface including one or more of the bundles and enabling the user to select one or more of the bundles wherein each bundle is displayed according to a relevance score. In another implementation the present disclosure provides a system including at least one server computer in communication with a network and including a processor configured to receive input data from a user obtain one or more candidate domain names relevant to the input data and display a user interface including one or more of the bundles and enabling the user to register one or more of the bundles. The input data includes one or more search terms. The candidate domain names are arranged into one or more bundles. Each bundle is displayed according to a relevance score.

In another implementation the present disclosure provides a method of displaying candidate domain names for registration by a user the method being performed by at least one server communicatively coupled to a network. The method includes presenting to a user via a user device in electronic communication with the computer network a user interface. The user interface includes a carousel presenting a plurality of bundles each bundle including a plurality of the candidate domain names the candidate domain names being related to input data specified by the user and the carousel enabling the user to paginate through the bundles. The user interface further includes a selection mechanism to permit the selection of at least one relevant bundle from the plurality of bundles to thereby enable the user to formulate a request to register the candidate domain names in the relevant bundle.

In another implementation the present disclosure provides a method of displaying candidate domain names for registration by a user the method being performed by at least one server communicatively coupled to a network. The method includes obtaining a web page that includes a user interface receiving from a user via a user device in electronic communication with the computer network a user query including input data and presenting to the user via the user device the web page. The user interface includes a carousel presenting a plurality of bundles each bundle including a plurality of the candidate domain names the candidate domain names being related to the input data and the carousel enabling the user to paginate through the bundles. The user interface further includes a selection mechanism to permit the selection of at least one relevant bundle from the plurality of bundles to thereby enable the user to formulate a request to register the candidate domain names in the relevant bundle.

In another implementation the present disclosure provides a method of displaying candidate domain names for registration by a user the method being performed by at least one server communicatively coupled to a network. The method includes presenting to a user via a user device in electronic communication with the computer network a user interface. The user interface includes a plurality of sets each including one or more of the candidate domain names the candidate domain names being related to input data specified by the user and each set being displayed as one or more domain tiles each associated with one of the candidate domain names of the set. The user interface further includes a selection mechanism to permit the selection of at least one of the candidate domain names from at least one of the plurality of sets to thereby enable the user to formulate a request to register the selected candidate domain names.

In another implementation the present disclosure provides a method of displaying candidate domain names for registration by a user the method being performed by at least one server communicatively coupled to a network. The method includes obtaining a web page that includes a user interface receiving from a user via a user device in electronic communication with the computer network a user query including input data and presenting to the user via the user device the web page. The user interface includes a plurality of sets each including one or more candidate domain names the candidate domain names being related to input data specified by the user and each set being displayed as one or more domain tiles each associated with one of the candidate domain names of the set. The user interface further includes a selection mechanism to permit the selection of at least one of the candidate domain names from at least one of the sets to thereby enable the user to formulate a request to register the selected candidate domain names.

A user operating hosted software applications e.g. website builders email website hosting storage auctions advertising etc. or browsing for and purchasing the same often provides a large amount of information either personal or business related to the host of those applications such as a registrar. Many users however may not understand or want to take the steps necessary to search for and register a domain name while utilizing the client software applications or browsing for and purchasing the same. Therefore the present system can monitor the user s activities and provide the user with a listing of relevant candidate domain names and sets of domain names as an automated process based on the information provided by the user during interaction with the client software applications. If the user upon reviewing one or more of the provided candidate domain names or sets of domain names wishes to register one or more of the candidate domain names the user can select the desired domain name or set of domain names and undertake a registration procedure.

In general the present system allows for the monitoring of the actions of a user while that user interacts with a website. The interactions may involve the user shopping for e.g. searching for information describing and purchasing goods or services or utilizing one or more hosted software application provided by the website. As the user interacts with the website the user is providing information to the website either explicitly or implicitly. For example the user may explicitly provide information during a user account creation process or product research and product purchase and checkout process. Similarly the user may input information into one or more software application such as a website builder or advertising service. Alternatively the user may implicitly provide information such as the user s location products that were searched for and reviewed by the user but not purchased and the like. As described below this information can be collected and analyzed to generate a set of candidate domain names that may be displayed to the user for purchase where the candidate domain names are relevant to the user or for example the user s business.

The user begins by accessing the website . The user may be any Internet user for example who may wish to establish an online presence and may subsequently access the website such as GODADDY.COM s website to purchase one or more online services. In step the user is authenticated as either an existing user or a new user. If the user is an existing user the website provides the user with product and service options for purchase at step once the user has logged in with their credentials i.e. username and password . If the user is a new user a new user account may be generated at step . Once the user account is generated the website provides the user with a listing of the plurality of client software applications or services for purchase at step . In other implementations the process may be reversed with the user first browsing available product and service options and after selecting one or more for purchase authenticating to the website or creating a new user account. The plurality of client software applications and services as a non limiting example may include a website builder website hosting services search engine visibility i.e. advertising services online storage and or email applications.

At step once the user has selected one of the software applications or services for purchase one or more order forms as will be discussed in further detail below may be displayed to the user on a user interface. The form may vary depending on which of the plurality of client software applications the user has requested. Generally the form prompts the user to provide any additional information if necessary for the requested services to be provided to the user . For example the form may be a user information form a business information form a user contact information form a website information form or order form requesting specific user information and providing blanks for the user to enter personal and or business related data through the user interface. As the user completes the form the information provided by the user is captured. For example the form may request that the user provide input data that includes but is not limited to a title e.g. a business name a location e.g. home and or business address city state zip code etc. a phone number features relevant to the user s products and services that may be offered by the user s business email address text and metadata such as images provided by the user to the website at step . In some implementations some or all of the data requested by the order form may be populated with information retrieved from the user s account information. In that case a fillable order form may not be displayed for the user. Instead the form may be automatically created and the user may simply be provided with a user interface allowing the user to confirm that they wish to purchase the selected software application.

As the user is providing the input data the system may be configured to acquire additional data about the user from third party data sources at step . For example if the user provides their first and last name on the form or that information can be retrieved from the user s account the system may run a search on the third party data sources using the user s first and last name to gather additional information about the user . The third party data sources may include but are not limited to LINKEDIN FACEBOOK YELP TWITTER and a State Bar directory.

As a non limiting example the system may run a search on Facebook.com using the first and last name provided by the user . The system may gather information from Facebook.com such as where the user is from i.e. city and state where they are employed what college they attended etc.

In step the system combines the data collected about the user in steps and into a collection of keywords referred to herein as a keyword collection. These keywords in combination with any other data collected about the user will be used to generate one or more candidate domain names for the user as will be discussed in further detail below. In some implementations additional sources of information may be used to collect information about the user that may be utilized to make candidate domain name recommendations. Example additional sources include those that include the product search history of the user the user s purchase history a listing of other products or services that have already been purchased by the user the user s customer information and the like.

After the collection of keywords has been generated the system can use that collection of keywords to generate one or more candidate domain names for the user that the user may wish to purchase. In some cases this will involve analyzing in addition to the collection of keywords websites of third parties that are relevant to the user or the user s business. In that case the content of those third party websites can be analyzed to potentially generate additional keywords from which the candidate domain names can be generated or to determine the quality of one or more of the candidate domain names. In some implementations the system will also determine whether the generated candidate domain names are actually available to be registered. If for example a particular candidate domain name has already been registered that candidate domain name will not be displayed to the user for purchase.

For example if the user provided input data at step that included words such as menu or food the system may include these words in the keyword collection at step . The words menu and food from the keyword collection can then be compared to other related websites such as other restaurant websites in order to generate one or more candidate domain names relevant to the user s input data at step . The candidate domain names provided at step are therefore domain names that are relevant to the user and are provided to the user who may not have otherwise been searching for a domain name. Alternatively if the user was searching for a domain name on the domain name registration website the system may provide the user a link not shown to buy more or similar domain names based on the input data and additional data acquired from the third party data sources .

In some implementations the system checks to see if the user already has a registered domain name. If so the identification of such other domain names can be used to prevent the system from suggesting candidate domain names that are too similar to domain names already registered by the user .

In one embodiment of the present invention the system may be configured to only provide the candidate domain name or alternative domain name at step if a minimum data requirement is met. For example a new user may utilize one of the client software applications provided by the website and only provide input data that includes their name and email address for example at step . The minimum data requirement provided by the system may require a minimum of three pieces of information relevant to the user . As a non limiting example the minimum data requirements may be a name email address and a location provided by the user either implicitly or explicitly in order for the system to suggest the candidate or alternate domain name at step . Therefore if the user only provides two pieces of information at step the system may not generate a candidate or alternate domain name at step . This minimum data requirement provided by the system may ensure that the candidate and alternate domain names generated at step are in fact relevant to the user based on the keyword collection generated at step . Alternatively a relevance score may be internally generated by the system for the candidate or alternate domain name at step based on the keyword collection currently available. If the relevance score is greater than a predefined threshold for example the candidate or alternate domain name would be displayed to the user .

Once a candidate domain name or an alternate domain name is generated based on the keyword collection at step the system may provide the user an option to add the domain name to their shopping cart at step for purchase. Step may occur for example as the user is going through a checkout process for purchase of the client software application . At step the user may checkout and purchase the client software application and optionally the domain name generated at step .

To illustrate is a screenshot showing an example checkout page user interface including a candidate domain name. As shown in candidate domain name may be displayed to the user on the website . For example the candidate domain name may be mikesrestaurant.com based on the keywords generated at step of the method of . The candidate domain name may be displayed while the user is going through a checkout process for a website builder application for example. Alternatively the candidate domain name may be displayed while the user is going through a checkout process for an alternative product or service such as those provided at step of . The user may choose to add the candidate domain name to their shopping cart by selecting an Add button . The user may select a checkout button to complete their purchase of the website builder application and optionally the domain name generated at step .

Turning now to a flowchart illustrating a method by which candidate domain names can be generated for the user based on data received by the user while utilizing a software application or service such as a website builder shown in is shown. Although the present flowchart and method is described in terms of a user utilizing a specific type of software application i.e. a website builder the methods illustrated in and described herein may be utilized in conjunction with a user utilizing any software application that involves the user supplying information either explicitly or implicitly to a software application. For example the method may be utilized to provide a user with a listing of candidate domain names for purchase while the user is interacting with email software web hosting management software accounting software and the like.

Similarly to the flowchart illustrated in the user begins by accessing the website . In step the user is authenticated as either an existing user or a new user. If the user is an existing user the website provides the user access to the website builder application at step once the user has logged in with their credentials i.e. username and password . If the user is a new user a new user account may be generated at step . Once the user account is generated the website provides the user the website builder application at step .

As a new user the website builder application will provide the user a plurality of website templates not shown to begin building their website. The website templates are pre designed and may be related to categories such as business and services music entertainment online shop restaurant and hospitality photography design retail and fashion personal etc. Once a template is selected the user can begin building a website using the website builder application . As such the user is provided with a user interface such as that shown in . Within the interface menu options may be provided on the user interface to assist the user in building their website. Beginning with a home page as shown in the user may add a content block to the website for example that gives a brief description of the website being built. The user simply drags a content block icon to the desired location on the user interface and the user can type directly into the content block .

Additionally the user may add an image e.g. a company logo to the home page of the website by simply dragging the image icon to the desired location on the user interface . The image may be provided by the user or may be a stock image provided by the website builder application . Similarly the user has the option to add image galleries or video for example to their website by simply dragging an image gallery icon or a video icon to the desired location on the user interface . The user further has the option to add additional pages to their website by selecting the pages menu option. Other pages may include but are not limited to a site gallery page an about us page a contact information page an online store page a site map a forum page etc. The user also has the option to provide a link to their social web pages e.g. LINKEDIN TWITTER FACEBOOK etc. by selecting a social menu option as will be discussed in further detail below.

Returning to the flowchart illustrated in the user may navigate edit and update their website using the website builder application as described above and provided at step . At step while the user edits their website using the website builder application various forms such as user information forms business information forms user contact forms website information forms etc. may be provided to the user for the user to complete. For example when the user adds a content block to the website adds images image galleries videos or updates a contact information page as shown in each action may involve the user completing forms other otherwise providing information to the website builder application . The forms may vary depending on which menu option the user is utilizing. In some cases the forms include explicit user input devices e.g. textboxes check boxes radio buttons and the like into which the user provides input. Alternatively the forms may be incorporated into other user interfaces allowing the user to added content to or revise content within the user s website. For example the interface through which the user adds images to their website is considered a form as is the mechanism by which the user adds video. Regardless of the menu options being used the server shown in acquires data from the user as the user manipulates their website using the website builder application .

For example the user may fill out a user contact information form while creating or editing the contact information page of their website as shown in . The user contact information form may enable the user to provide input data such as a first name last name address city state zip code phone number etc. Returning to after capturing the input data the system may be configured to acquire additional data about the user or the user s business from third party data sources at step . For example if the user provides their first and last name on the user contact information form the system may run a search on the third party data sources using the user s first and last name to gather additional information about the user . The third party data sources may include but are not limited to LINKEDIN FACEBOOK YELP TWITTER and a State Bar directory. As a non limiting example the system may run a search on Facebook.com using the first and last name provided by the user . The system may gather information from Facebook.com such as where the user is from i.e. city and state where they are employed what college they attended etc.

The system provides an integration module not shown to generate a keyword collection at step by running a content analysis e.g. crawl on the website being built by the user that identifies keywords throughout the pages of the website. The keyword collection may contain for example keywords related to the user acquired at steps and keywords selected from title text on the user s website and information collected from third party sources about the user or the user s business. A cache storage database may be provided by the system to store the input data provided by the user at step and to store data related to the user acquired from the third party data sources at step . The keywords generated at step will be used to generate a candidate domain name for the user as will be discussed in further detail below.

After the collection of keywords has been generated the system can use that collection of keywords to generate one or more candidate domain names for the user that the user may wish to purchase. In some cases this will involve analyzing in addition to the collection of keywords websites of third parties that are relevant to the user or the user s business. In that case the content of those third party website s can be analyzed to potentially generate additional keywords from which the candidate domain names can be generated.

In some implementations the system checks to see if the user already has a registered domain name. If so the identification of these other domain names can be used to prevent the system from suggesting candidate domain names that are too close to domain names already registered by the user .

Once a candidate domain name or an alternate domain name is generated based on the keyword collection at step the system may provide the user an option to add the domain name to their shopping cart at step for purchase as part of the website builder interface. For example shows a web site builder user interface e.g. the user interface of modified to incorporate or display candidate domain name that may be offered for purchase by the user. Candidate domain name may be displayed on each user interface screen presented by the web site builder interface until for example candidate domain name is either dismissed by the user or the user decides to purchase or register the candidate domain name. Candidate domain name may only be displayed in the user interface once sufficient keywords have been collected to generate a candidate domain name with sufficient confidence. With reference to the user can choose to add the candidate domain name to their shopping cart by selecting an Add button . The user will then be given an opportunity to purchase or register the domain name.

Returning to at step the user may choose to add the candidate domain name to their shopping cart by selecting an Add button . At step the user may select a checkout button to complete their purchase of the website builder application and optionally the domain name generated at step .

As indicated by step if the user does not elect to purchase one of the candidate domain names the method repeats and the system continues providing the website builder application to the user and monitoring the user s actions. As such additional revisions or changes to the user s website can be captured in which case a new listing of candidate domain names may be generated and displayed for purchase by the user . Accordingly if the user does not elect to purchase one of the candidate domain names the system returns to step to again provide the website builder application to the user and monitor whether the user is updating or adding data to their website. During this process the system provides the cache storage in order to store the recently updated and added data as well as the data acquired from third party data sources . In this sense the system may access the cache storage to quickly generate either the candidate or alternate domain name at step and provide the user the option to add the domain name to their shopping cart at step .

In various implementations the method illustrated in may be continually executed as the user interacts with and utilizes the website builder application or other software application . As such the listing of candidate domain names can be continually updated as the user interacts with the software providing new information and or revising existing information. As such while the user utilizes the software application the listing of candidate domain names will continuously be refreshed and will always represent a list of potential domain names that are closely relevant to the content being supplied by the user into the software application.

Turning now to a flowchart illustrating a method by which candidate domain names can be generated for the user based on data acquired from third party data sources is shown. The user in this case may be an existing user and may begin by accessing the website . In step the user is authenticated as an existing user. Once authenticated the user may begin using one or more software applications made available by the website or may access the user s account information. While interacting with the website the user determines that he or she wishes to link their account to an external third party account. Accordingly while interacting with the website the user may activate a user interface enabling the user to begin the process of linking their account with a third party account. The process of linking the user s account with a third party account may be accomplished at a user account level.

At step the system prompts the user to link their existing user account to a third party account . As a non limiting example the third party account may include the user s LINKEDIN FACEBOOK YELP State Bar or TWITTER account. At step a user information form as shown in is provided to the user . The user information form may include for example a login window that enables the user to log into their third party account and grant the system permission to access the third party account . In order to link the third party account e.g. a social network account the system may use standard connection protocols provided by the third party data sources such as FACEBOOK connect FACEBOOK pages or LINKEDIN Company page. Alternatively the system may request that the user provide their public URL to third party data sources e.g. TWITTER handle YELP URL . Once linked a verification screen as shown in may appear on the website of the user s third party data source confirming that their user account is now linked and has access to the information provided by the third party data source. The system may then acquire data about the user from the newly linked third party data sources at step . For example the system may run a search on the third party data sources using the user s first and last name to gather additional information about the user . The third party data sources may include but are not limited to LINKEDIN FACEBOOK YELP TWITTER and a State Bar directory. The system may gather information from Facebook.com for example such as where the user is from i.e. city and state where they are employed what college they attended etc.

The system provides an integration module not shown to generate a keyword collection at step . The keyword collection may contain for example keywords related to the user acquired at step . These keywords will be used to generate a candidate domain name for the user as will be discussed in further detail below.

After the collection of keywords has been generated the system can use that collection of keywords to generate one or more candidate domain names for the user that the user may wish to purchase. In some cases this will involve analyzing in addition to the collection of keywords websites of third parties that are relevant to the user or the user s business. In that case the content of those third party website s can be analyzed to potentially generate additional keywords from which the candidate domain names can be generated.

In some implementations the system checks to see if the user already has a registered domain name. If so the identification of these other domain names can be used to prevent the system from suggesting candidate domain names that are too close to domain names already registered by the user .

Once a candidate domain name or an alternate domain name is generated based on the keyword collection at step the system may provide the user an option to add the domain name to their shopping cart at step for purchase. Step may occur for example as the user is going through a checkout process for a client software application or is otherwise navigating website as previously discussed. At step the user may checkout and purchase the domain name generated at step .

Turning now to a flowchart illustrating a method by which candidate domain names can be generated for the user based on input data related to an advertising software application or other advertising services is shown. The method shown in may be useful for example to assist a user that already has a website but wishes to add advertising to the website. However the user may be unaware that the domain name that they have selected for their existing website is not particularly suited to the type of advertising that will be displayed thereon. In that case the present method may be useful to make recommendations of improved domain names for the user that the user may wish to register at the same time the advertising services are purchased.

The user in this case may be an existing user and may begin by accessing the website . The user may be any Internet user for example who may wish to incorporate advertising into an existing website hosted at a particular domain name. As such the user accesses the website to execute advertising software application which is configured to assist the user in incorporating advertising into the user s website.

In step the user is authenticated as a user having an existing website. At step the website provides the user the advertising software application which allows the user to add advertising features to their existing website.

At step a website information form as shown in can be provided to the user on a website information page requesting that the user provide information useful for the incorporation of advertising content into the user s website. The website information form may enable the user to provide input data that includes but is not limited to a title e.g. a business name a location e.g. home and or business address city state zip code etc. a phone number features relevant to the user s products and services email address business website business tagline business category text and metadata such as images provided by the user or the website at step . The server shown in acquires data from the user as the business information form is filled out. At this point the system also knows the domain name of the user s existing website and can thereby access the user s existing website to collect one or more keywords therefrom. Accordingly at step the system may automatically scrape the user s existing website using web scraping software capable of scraping all the pages on the user s existing website to gather data including but not limited to page titles business location data product features and services metadata from images and pages etc. to generate the keyword collection. Additionally if an advertising campaign has been in place for some time for the web site the collection of keywords may include keywords that are determined to have performed well in the advertising campaign.

As the user is providing the input data the system may be configured to acquire additional data about the user from third party data sources at step . For example if the user provides their first and last name on the business information form the system may run a search on the third party data sources using the user s first and last name to gather additional information about the user . The third party data sources may include but are not limited to LINKEDIN FACEBOOK YELP TWITTER and a State Bar directory. As a non limiting example the system may run a search on Facebook.com using the first and last name provided by the user . The system may gather information from Facebook.com such as where the user is from i.e. city and state where they are employed what college they attended etc.

The system provides an integration module not shown to generate a keyword collection at step . The keyword collection may contain for example keywords related to the user acquired at steps and and generated by analysis of the user s existing website. These keywords will be used to generate a candidate domain name for the user as will be discussed in further detail below.

At step the system generates a number of candidate domain names for the user using the keyword collection and the information collected in steps and . In one implementation before performing step the system may first determine a quality rating for the user s existing website. For example the system may determine a search engine visibility rating for example of the user s existing domain name based on the input data . The search engine visibility rating may be a numerical rating for example that indicates whether the user s existing domain name is highly visible or not when other users perform queries on search engines such as BING YAHOO GOOGLE AOL etc. If the search engine visibility rating for the user s existing domain name is sufficiently low e.g. below a pre determined threshold the system may generate the candidate domain names for the user based on their existing search engine visibility rating and the keyword collection generated at step . The candidate domain names displayed will therefore be relevant to the user and specifically the user s website. The use of any one of the domain names generated at step may increase the website s traffic and consequently sales if the user s website hosts an online store for example.

Once the candidate domain names are generated based on the keyword collection at step the system may provide the user an option to add one or more of the candidate domain names to their shopping cart at step for purchase. Step may occur for example as the user is going through a checkout process for the advertising software application as previously discussed with respect to . At step the user may checkout and purchase the advertising services and optionally the domain name generated at step .

In some cases the candidate domain names will be displayed on a user interface utilized by a user to monitor their advertising campaign. For example depicts user interface . User interface provides a dashboard enabling a user to review the status of their current advertising or marketing campaign and provides information such as the number of impressions and clicks the web page has received as well as a budget status of the advertising campaign. As the campaign proceeds and certain keywords in the campaign are identified as generating increased traffic candidate domain names can be generated based upon those successful keywords. Once generated those candidate domain names can be provided to the user for potential purchase or registration. As such user interface includes candidate domain name . The user may choose to add the candidate domain name to their shopping cart by selecting an Add button . The user will then be given an opportunity to purchase or register the domain name.

Several different environments may be used to accomplish the steps of embodiments disclosed herein. demonstrate a streamlined example of such an environment and illustrate a non limiting example of a system and or structure that may be used to accomplish the methods and embodiments disclosed and described herein. Such methods may be performed by any central processing unit CPU in any computing system such as a microprocessor running on at least one server and or client and executing instructions stored perhaps as scripts and or software possibly as software modules in computer readable media accessible to the CPU such as a hard disk drive on a server and or client .

The example embodiments herein place no limitations on whom or what may comprise users. Thus as non limiting examples users may comprise any individual entity business corporation partnership organization governmental entity and or educational institution.

The example embodiments shown and described herein exist within the framework of a network and should not limit possible network configuration or connectivity. Such a network may comprise as non limiting examples any combination of the Internet the public switched telephone network the global Telex network computer networks e.g. an intranet an extranet a local area network or a wide area network a wired network a wireless network a telephone network a corporate network backbone or any other combination of known or later developed networks.

At least one server and at least one client may be communicatively coupled to the network via any method of network connection known in the art or developed in the future including but not limited to wired wireless modem dial up satellite cable modem Digital Subscriber Line DSL Asymmetric Digital Subscribers Line ASDL Virtual Private Network VPN Integrated Services Digital Network ISDN X.25 Ethernet token ring Fiber Distributed Data Interface FDDI IP over Asynchronous Transfer Mode ATM Infrared Data Association IrDA wireless WAN technologies T1 Frame Relay Point to Point Protocol over Ethernet PPPoE and or any combination thereof.

The server s and client s along with software modules and the data storage disclosed herein may be communicatively coupled to the network and to each other in such a way as to allow the exchange of information required to accomplish the method steps disclosed herein including but not limited to receiving the information from a user interface on one or more clients and one or more servers receiving the information.

The client may be any computer or program that provides services to other computers programs or users either in the same computer or over a computer network . As non limiting examples the client may be an application communication mail database proxy fax file media web peer to peer or standalone computer cell phone smart phone personal digital assistant PDA etc. which may contain an operating system a full file system a plurality of other necessary utilities or applications or any combination thereof on the client . Non limiting example programming environments for client applications may include JavaScript AJAX client side automation ASP JSP Ruby on Rails Python s Django PHP HTML pages or rich media like Flash Flex Silverlight any programming environments for mobile apps or any combination thereof.

The client computer s which may be operated by one or more users and may be used to connect to the network to accomplish the illustrated embodiments may include but are not limited to a desktop computer a laptop computer a hand held computer a terminal a television a television set top box a cellular phone a wireless phone a wireless hand held device a smart phone an Internet access device a rich client thin client or any other client functional with a client server computing architecture. Client software may be used for authenticated remote access to one more hosting computers or servers described below. These may be but are not limited to being accessed by a remote desktop program and or a web browser as are known in the art.

The user interface displayed on the client s or the server s may be any graphical textual scanned and or auditory information a computer program presents to the user and the control sequences such as keystrokes movements of the computer mouse selections with a touch screen scanned information etc. used to control the program. Examples of such interfaces include any known or later developed combination of Graphical User Interfaces GUI or Web based user interfaces as seen in and after including Touch interfaces Conversational Interface Agents Live User Interfaces LUI Command line interfaces Non command user interfaces Object oriented User Interfaces OOUI or Voice user interfaces. Any information generated by the user or any other information may be accepted using any field widget and or control used in such interfaces including but not limited to a text box text field button hyper link list drop down list check box radio button data grid icon graphical image embedded link etc.

The software modules used in the context of the current invention may be stored in the memory of and run on at least one server and or client . The software modules may comprise software and or scripts containing instructions that when executed by a microprocessor on a server and or client cause the microprocessor to accomplish the purpose of the module or the methods disclosed herein.

The software modules may interact and or exchange information via an Application Programming Interface or API. An API may be a software to software interface that specifies the protocol defining how independent computer programs interact or communicate with each other. The API may allow a requesting party s software to communicate and interact with the software application and or its provider perhaps over a network through a series of function calls requests for services . It may comprise an interface provided by the software application and or its provider to support function calls made of the software application by other computer programs perhaps those utilized by the requesting party to provide information for publishing or posting domain name and hosted website information.

The API may comprise any API type known in the art or developed in the future including but not limited to request style Berkeley Sockets Transport Layer Interface TLI Representational State Transfer REST SOAP Remote Procedure Calls RPC Standard Query Language SQL file transfer message delivery and or any combination thereof.

The software modules may also include mobile applications possibly on a client computer and or mobile device. These mobile applications or apps may comprise computer software designed to help people perform an activity and designed to help the user to perform singular or multiple related specific tasks. It helps to solve problems in the real world by manipulating text numbers graphics or a combination of these elements.

The server s utilized within the disclosed system may comprise any computer or program that provides services to other computers programs or users either in the same computer or over a computer network . As non limiting examples the server may comprise application communication mail database proxy fax file media web peer to peer standalone software or hardware servers i.e. server computers and may use any server format known in the art or developed in the future possibly a shared hosting server a virtual dedicated hosting server a dedicated hosting server a cloud hosting solution a grid hosting solution or any combination thereof .

The server may exist within a server cluster as illustrated. These clusters may include a group of tightly coupled computers that work together so that in many respects they can be viewed as though they are a single computer. The components may be connected to each other through fast local area networks which may improve performance and or availability over that provided by a single computer.

The server s or software modules within the server s may use query languages such as MSSQL or MySQL to retrieve the content from data storage . Server side scripting languages such as ASP PHP CGI Perl proprietary scripting software modules components etc. may be used to process the retrieved data. The retrieved data may be analyzed in order to determine information recognized by the scripting language information to be matched to those found in data storage availability of requested information comparisons to information displayed and input selected from the user interface or any other content retrieval within the method steps disclosed herein.

The server and or client may be communicatively coupled to data storage to retrieve any information requested. The data storage may be any computer components devices and or recording media that may retain digital data used for computing for some interval of time. The storage may be capable of retaining stored content for any data requested on a single machine or in a cluster of computers over the network in separate memory areas of the same machine such as different hard drives or in separate partitions within the same hard drive such as a database partition.

Non limiting examples of the data storage may include but are not limited to a Network Area Storage NAS which may be a self contained file level computer data storage connected to and supplying a computer network with file based data storage services. The storage subsystem may also be a Storage Area Network SAN an architecture to attach remote computer storage devices to servers in such a way that the devices appear as locally attached an NAS SAN hybrid any other means of central shared storage now known or later developed or any combination thereof.

Structurally the data storage may comprise any collection of data. As non limiting examples the data storage may comprise a local database online database desktop database server side database relational database hierarchical database network database object database object relational database associative database concept oriented database entity attribute value database multi dimensional database semi structured database star schema database XML database file collection of files spreadsheet and or other means of data storage such as a magnetic media hard drive other disk drive volatile memory e.g. RAM non volatile memory e.g. ROM or flash and or any combination thereof.

As seen in the server s and data storage may exist and or be hosted in one or more data centers . These data centers may provide hosting services for websites services or software relating to stored information or any related hosted website including but not limited to hosting one or more computers or servers in a data center as well as providing the general infrastructure necessary to offer hosting services to Internet users including hardware software Internet web sites hosting servers and electronic communication means necessary to connect multiple computers and or servers to the Internet or any other network . These data centers or the related clients may accept messages from text messages SMS web mobile web instant message third party API projects or other third party applications.

As users access and or input information this information may be redirected and distributed between and among the data centers via commands from any combination of software modules hosted on the server s and executed via processors on the server s . This information may then be accessed and manipulated by the combination of software modules or stored in the data storage of any of a plurality of data centers either separate from or integrated into the one or more servers so that the information is available to be searched and accessed by the user and or any other components of any or all data centers.

Any references to software combination combination of software combination of software modules etc. referred to herein may include any combination of software modules executed by a microprocessor on either the server or client computers. These software modules may also be used in combination with any other hardware or software structures disclosed herein. The servers may be hosted in any data center operated by any hosting provider such as those disclosed herein and the servers and clients may be operated by any users disclosed herein.

The system also may comprise a domain name generation module that may be stored in the memory of and run on at least one server and may comprise any software and or scripts containing instructions that when executed by the server s microprocessor cause the microprocessor to generate a domain name relevant to the keyword collection. As illustrated in the domain name generation module may comprise an information source receipt module and a keyword extraction and combination module . The information source receipt module may comprise scripts and or software running on the server that operates to obtain a plurality of data from any information source. As described in detail above the information source forming the basis of generated domain names may comprise any collection of data accessible to the domain name generation module that may contain data regarding the user and or the user s business for example including but not limited to websites web pages news feeds and or Real Simple Syndication RSS feeds.

The keyword extraction and combination module also may comprise software and or scripts running on the server and may operate to parse received data into a plurality of keywords combine keywords into a root name and concatenate a top level domain to the root name thereby generating the candidate or alternate domain name. In one possible embodiment the keyword extraction and combination module also may determine a topic to which each keyword relates sort the keywords into subcategories according to topic and generate a root name by combining keywords from the same subcategory. A domain name relevant to the keyword collection is thereby generated after a TLD is concatenated to the root name. Modules and may comprise any software and or scripts running on the server that may accomplish the methods described in detail above.

The system also may comprise a domain name registration module running on at least one server and offering the generated domain name for registration if available . This module may comprise software and or scripts containing instructions that when executed by the server s microprocessor cause the microprocessor to determine whether the domain name is available for registration and provide the domain name for registration if available. Additionally the domain name registration module may if the domain name is available register the domain name to the registrant. It may comprise any domain name registration system known in the art or developed in the future including but not limited to a website enabled domain name purchase and registration system such as that described in detail above and or may be available on GODADDY.COM s website. The domain names database may comprise as non limiting examples a local database online database desktop database server side database relational database hierarchical database network database object database object relational database associative database concept oriented database entity attribute value database multi dimensional database semi structured database star schema database XML database file collection of files spreadsheet or other means of data storage located on a computer client server or any other storage device known in the art or developed in the future.

In some embodiments any or a combination of the above described systems and methods may be implemented and if necessary modified to generate one or more sets of candidate domain names for presentation to and possible purchase by the user. The member domain names of each set may be related to each other according to a theme that may also be identified for the user in the presentation of the sets. A theme in this context may be any characteristic or combination of characteristics that is are common across a plurality of generated candidate domain names and potentially relevant to the user s website. Generally a theme may describe either a characteristic of a domain name e.g. Websites with a .org TLD a characteristic of the user s website to be hosted at or accessible from the domain name e.g. Mountain bike website or online store a characteristic of the user itself e.g. Nonprofit organization or Phoenix area business or a combination of such characteristics e.g. Mountain bike online store . Non limiting examples of themes some of which are used in additional examples below include 

In some embodiments one or more characteristics of each theme may be chosen in advance of generating the candidate domain names and the candidate domain names may then be generated using the theme as input data or additional data in accordance with the above methods. The generated results may then be stored in the set associated with the theme used for generating them. In other embodiments the candidate domain names may be generated without using a theme as input and the candidate domain names may be added to each themed set in a subsequent process.

The candidate domain name generation may be performed during a domain search in which the user attempts to identify one or more available domain names to purchase and or use. In such a scenario the input data used to generate candidate domain names may be a primary domain name desired by the user for hosting one of the user s websites e.g. the website being built in the website builder application of . The input data may also or alternatively be one or more keywords relevant to the user s website or to the user s desired primary domain name i.e. when the user does not know what to use as the primary domain name . The system may use the primary domain name and or the provided keywords to generate a plurality of candidate domain names that are relevant to the input data i.e. domain search terms .

The candidate domain names may correspond to one or more themes that are predetermined or preselected before the candidate domain names are generated or are identified as relevant themes during or after the candidate domain name generation process. The themes may be identified by the system as likely relevant to the user. Relevant themes may initially include themes that are commonly available to all users and are not dependent on the input data or any other data unique to the user such as common TLDs referring to a themed set that includes .com .org. .net and .us candidate domain names . The system may expand or refine the themes to include themes that are relevant to the particular user such as by analysis of the input data or of any additional data relevant to the user and identified by the system as described above. For example where the user has entered contact information or created a website identifying the user s entity as a photography studio the system may analyze the contact information and add themes such as photography and art. The themes may include themes actually selected by the user via an interface and may exclude themes not so selected. In one example the system may display to the user a list of available themes and receive the selection of themes from the user before generating the candidate domain names.

The system may alternatively or additionally use another method different from those described herein to generate the candidate domain names. The system may arrange the candidate domain names into the themed sets using any classification process described herein or a different process. Once the candidate domain names are arranged into the themed sets the system may present one or more of the sets to the user in a user interface for selection and purchase or for dismissal if the user is not interested in them.

In some embodiments the system may have stored thereon or have electronic access to pre set themes used to create sets and or bundles of candidate domain names as described below. The system may be configured to dynamically generate themed domain name bundles based on relevance to the domain name or keywords entered by the user or to a domain name suggested by the system in response to the domain name search and selected by the user. In the latter instance if the user picks a suggested domain name the system may be configured to analyze one or both of the user query and the selected domain name to identify what the user selected and perhaps what the user intended to purchase. Such analysis may include identifying relevant pre stored themes. For example if the system suggests and the user selects a domain name with a TLD that is a synonym of an input keyword the system may identify a keyword synonym theme as relevant to the user. In another example if the user selects a suggested domain name below a certain price point e.g. less than 10 the system may identify a value theme for lower cost domain names. The system may rank the identified theme higher than other themes. The system may use a relevance score as will be described in further detail below to prioritize relevant themes. This is advantageous over conventional domain name bundles that are typically provided as a single list where the user is not allowed to pick the most relevant set. However the system and method described herein provides the ability to create relevant and discounted domain name bundles in real time as will be described below.

Referring to the flow chart of a method by which candidate domain name bundles can be generated for the user based on an input domain name for purchase is shown. The method begins at step where the system acquires a domain name search from the user. In one non limiting example the domain name can be searched on a website such as the exemplary website shown in where the user may input a domain name in a search bar on a user interface of the website . For example the domain name searched for is filmsnotdead.com .

Returning to as the system acquires input data in the form of the domain name search from the user step additional data related to the user may be captured. For example a location relative to the user may be acquired based on information previously explicitly received by the user such as a home and or business address city state zip code etc. Additionally or alternatively if the user is a new user for instance the location may be determined from implicit information gathered from the user s usage such as the IP address of the user s device. The location may then be utilized by the system to generate relevant domain name bundles for the user to purchase as will be described in further detail below.

Metadata may also be acquired by the system as the domain name search is acquired at step . Metadata may be describe one or more instances of data related to the user. Some examples of such metadata may include but are not limited to user preferences e.g. preference of ccTLD gTLD or traditional TLD sub domains or sub directories created as well as destination of redirect created price sensitivity of the user e.g. user purchases domains less than 10 or greater than 25 prior purchase patterns of the user e.g. the user never purchases a particular TLD ccTLD or gTLD past purchase probability of the theme the user type e.g. small business domain investor and the like user renewal probabilities of domain names with a bundle and the user s website content such as keywords web page or image file names web page metadata or header information and the like. The metadata for an existing user may also describe structures of the user s data such as existing or previous website layouts subdomain or domain directory hierarchies arranged for serving certain web content via domain names already in the user s account and the like. The system may use the data to identify relevant themes and or domain naming conventions favored by the user .

In addition if the user is an existing user the system may be configured to acquire data related to prior purchases such as prior domain names made by the user . The data related to the prior purchases may then be utilized by the system to generate relevant domain name bundles for the user to purchase. For example if the user consistently purchases domain names related to a restaurant theme the system can track the historical purchases and generate domain name bundles related to restaurant themes as opposed to generating domain name bundles related to an artist theme for example. The data related to prior purchases may also include revenue data i.e. how much the user paid for a particular domain name that can be utilized by the system to accurately price and generate relevant domain name bundles for the user.

Similarly data related to a probability of the purchase size may be generated as the domain name search is acquired at step . The purchase size probability may be a numerical value e.g. a percentage an estimated quantity of domain names to be purchased or an estimated price the user will pay for one or more domain names. In one example if the user is an existing user the system may access previously acquired data related to the user s domain name purchase history. The domain name purchase history may include but is not limited to prices of previously purchased domain names from the user quantity of previously purchased domain names prices and quantities of domain names that were presented to the user on the website see but not purchased and the like. The system can then use the historical data to generate the purchase size probability corresponding to the user . In contrast if the user is a new user the purchase size probability may not be generated however based on the information describing some or all of the user s interactions with the interface the system can generate the purchase size probability for subsequent domain name purchases from that user.

Once the domain name search and related data is acquired at step the system may receive a request from the user to purchase the searched domain name at step . For example as shown in the searched domain name is indicated as being available on the user interface of the website . A select button and one or more lines of additional textual or graphical information about the desired domain name such as the purchase price may be presented to the user on the user interface . Once the user has selected the select button a continue to cart button may be selected by the user to complete the domain name purchase for example. Upon selection of the select button the user may be presented with one or more domain name bundles for each domain name that was added to the cart.

However prior to displaying the relevant domain name bundles the system may request the domain name bundles at step as shown in to display to the user. The system may request the domain name bundles from a source outside of the system . The system may generate the domain name bundles before requesting them at step in which case the request may be a query to one or more internal databases. Or the system may generate the domain name bundles as part of the request of step . Various methods may be used to generate the candidate domain name bundles presented to the user. In one non limiting example relevance bundles based on the domain name characteristics may be requested at step . The system may generate candidate domain names for the relevance bundle by taking one or more keywords from the searched domain name s SLD and inserting the one or more keywords into the TLD. For example if the selected domain name for purchase is theresaskitchen.com the system may take the keyword kitchen from the SLD and move it to the TLD to arrive at the candidate domain name theresas.kitchen for the relevance bundle .

In another non limiting example the system may generate candidate domain names for the relevance bundle by generating synonyms of keywords identified in the SLD gTLD TLD and the like. For example if the selected domain name for purchase is theresaskitchen.com the system may replace the word kitchen with caf to arrive at the candidate domain name theresascafe.com for the relevance bundle . In yet another non limiting example the system can create any combination of domain name formats e.g. SLD.TLD SLD.gTLD SLD.ccTLD etc. for the candidate domain names included in the relevance bundle . For example if the selected domain name for purchase is mycookingchannel.com the system can identify the dominant themes as food television and personal and a bundle of one or more candidate domain names may be created for the relevance bundle . The candidate domain names name include but are not limited to mycookingchannel.food category food mycookingchannel.menu category food mycookingchannel.recipe category food menu.mycookingchannel.com category food mycookingchannel.tv category tv mycookingchannel.me category personal and the like.

With continued reference to another method for generating candidate domain names for the user is the use of spelling variation bundles . In one non limiting example spelling variation bundles based on the domain name characteristics may be requested by the system at step . The system may generate candidate domain names for the spelling variation bundle by identifying misspelled versions of the SLD in the selected domain name and suggest alternative misspelled SLDs to the user. Additionally or alternatively the system may identify misspelled TLDs in the searched domain name and replace the TLD with the implied and or alternate TLD. The system may be configured to access a database such as the database of having stored thereon a list of common misspellings. Thus as the system analyzes the components of the searched domain name common misspellings can be identified and synonymous alternatives can be acquired from the database.

For example if the user searches for Queens rental accommodations the system may recognize that the implied SLD is .com . Thus the system may generate candidate domain names for the spelling variation bundle that include various spellings of the words accommodations or rental for example. The candidate domain names may include but are not limited to QueensRentalAcommodations.com single c in the word accommodations QueensRentalAccomodations.com single m in the word accommodations QueensRentelAccommodations.com usage of e in the word rental instead of the letter a . Similarly if the user purchases the searched domain name at step and the purchased domain name includes one or more misspelled words as identified by the system the candidate domain names in the spelling variation bundle may include domain names with the implied spelling. For example if the user purchases the doming name QueensRentelAccomodation.com where both rentel and accomodation are misspelled the system may generate one or more candidate domain names such as QueensRentalAcommodations.com single c in the word accommodations and QueensRentalAccomodations.com single m in the word accommodations . Additionally or alternatively the system may also generate a candidate domain name for the spelling variation bundle such as QueensRentalAccommodations.rent substituting the TLD .com with a gTLD .rent .

Another method for generating candidate domain names for the user is the use of pricing bundles as shown in . The system may generate candidate domain names for the pricing bundle by providing for example a price discounted bundle of domain names to the user. In one example the website of may merge available TLDs that are known to the system as being on sale with the TLDs that are available for discounting when merged with purchases for a specific TLD. For example if the user searches for mycookingchannel.com the discounted pricing bundle may include for example three candidate domain names e.g. mycookingchannel.co mycookingchannel.net and mycookingchannel.biz for a price discounted bundle of 19.99 if all three candidate domain names are purchased with the searched domain name for a total of four domain names.

In one example the system may be configured to analyze the retail price and actual costs of each domain name known to the system. Algorithms controlled by the system can then dynamically discount one or more domain names in the bundle based on various input data. The input data may include but is not limited to renewal probability competitor pricing and relevance of the domain name in the bundle to the domain name being purchased by the user. Thus various combinations of domain names are created and ranked by the system based on overall relevance discount and price. The top N ranked domain name bundles may then be presented to the user in the purchase flow.

With continued reference to another method for generating candidate domain names for the user is the use of search engine optimization SEO bundles . SEO bundles based on the website characteristics may be requested by the system at step . The system may generate candidate domain names for the SEO bundle by utilizing a SEO strategy implemented by the system . In one non limiting example search engine data such as keywords searched by the user on the website e.g. website in may be consumer related data obtained and used by the system to generate the SEO strategy. The SEO strategy may include for example generating a list of specific keywords based upon some or all of the data obtained at process blocks and . For example in the case where the user searches for domain names related to a food theme the system may determine that the keywords searched by the user as well as synonymous and alternatives to the keywords searched may be candidate keywords to include in the domain names contained in the SEO bundle .

For example the system may determine that keywords searched by the user such as restaurant and chicken are adequate keywords to include in the SEO strategy. These searched keywords may be good candidates for the domain names in the SEO bundle because they can target consumers that are searching for the offering provided by the user. Additionally or alternatively the keywords can be based on the location metadata prior purchase data or any other data obtained at steps and . Thus the system can create SEO bundles that include domain names that improve the value of user s primary domain from an SEO perspective.

Yet another method for generating candidate domain names for the user is by utilizing location bundles as shown in . The system may generate candidate domain names for the location bundles by providing for example a domain name bundle relevant to the user s location as determined by the system. The system may identify a location e.g. city state country and the like of the user searching for a domain name by acquiring an IP address for example of the device being used to access the website . Additionally or alternatively the system may identify a location of the user if perhaps the searched keywords include a specific city state country and the like. Thus if the system determines that the user is located in India for example the location bundle may include candidate domain names relevant to India.

In one instance the candidate domain names in the location bundle may include but are not limited to ccTLDs TLDs with location data in the SLD or TLD for example. One specific example would be if the user searches for organic plant pizza from an IP address in Queens N.Y. the system may generate candidate domain names that include SLD location variations such as QueensOrganicPizza.com QueensOrganicPizza.nyc OrganizPizza.com OrganicPizza.nyc BrooklynPizza.com BrooklynPizza.nyc BronxPizza.com BronxPizza.nyc ManhattanPizza.com ManhattanPizza.nyc or any combination thereof.

In another instance the system may be configured to generate candidate domain names for the location bundle that include internationalized domain names IDN . The system may generate a location bundle of relevant IDNs for a user visiting the website e.g. website of whose default language matches an IDN language. For example if the user visits the website from an India IP address and searches for Bandra morning walk group in the search box the system may generate a location bundle of candidate domain names that includes for instance BandraMorningWalkGroup.XXX where XXX is the Hindi TLD for .org BandraMorningWalkGroup.YYY where YYY is the Hindi TLD for .com and BandraMorningWalkGroup.ZZZ where ZZZ is the Hindi TLD for .net .

One or more of the above identified methods for generating candidate domain names for domain name bundles as discussed with respect to blocks and may be utilized by the system to provide the most suitable combination of domain name bundles to the user. However prior to presenting the domain name bundles to the user the system may price each of the bundles at step according to one or more pricing strategies.

In one non limiting example the system may compute or use an external source via API to compute a price and or savings for the domain name bundle e.g. the domain name bundle shown in . An API such as a merchandising API can return a retail price a bundle price and a bundle savings value as shown on the user interface of the website see . The retail price may be displayed on the user interface as a numerical value for example representative of the sum of retail prices of the domain names included in the bundle . The bundle price may be displayed on the user interface as a numerical value for example representative of a discounted price as compared to the retail price . The bundle savings value may also be displayed as a numerical value on the user interface representative of a percentage of savings between the retail price and the bundle price . In one instance the system may be configured to calculate the bundle savings value according to the following equation Bundle savings value 1 Sum of bundle price Sum of retail prices 1 

Thus as shown in the bundle savings value for the domain name bundle is 74 the bundle price is 12.99 and the retail price is 49.97. According to equation 1 above 1 12.99 49.97 74 . The system may further be configured to perform retail price and site price lookup to determine if the bundle is valid prior to displaying the bundle to the user. In one example the domain name bundle is determined to be valid if the bundle price is less than or equal to the retail price . Thus using the above example where the bundle price is 12.99 and the retail price is 49.79 the bundle price is less than the retail price therefore the domain name bundle is valid. However if the bundle price is greater than the retail price the system will reject the domain name bundle and not display it to the user for purchase.

Once the domain name bundles are priced and or discounted at step the system may be configured to calculate one or more relevance scores for the domain names at step . By calculating relevance scores for each of the domain names in the bundle the system can determine a suitable order for presenting the domain name bundles to the user. Relevance scores may be based on for example similar domain names and or domain name bundles that have already been purchased by another user. In one example the relevance score may be calculated by identifying website traffic data related to the domain name. The website traffic data may be a numeric value of the quantity of internet users visiting the website. The quantity of internet users visiting the website may be obtained through traffic statistics identified in a log file not shown stored on the server see for example. Additionally or alternatively the website traffic data may be obtained by a tracking application external to the website that is configured to record traffic by inserting tracking code in the website pages. Thus a higher value of website traffic may be related to the a higher relevance score of the website and similar domain names can then be recommended for the candidate domain names in the bundle.

Click through rate CTR data and or sales data may also be used to identify the relevance score at step for similar domain names. In one example the sales data may be acquired for the domain name and may be a numeric value of the quantity of product sold and or the dollar amount corresponding to the quantity of product sold on the website. Thus a higher value of sales data may be related to a higher relevance score for the domain name and the system may then be configured to display candidate domain names in the bundle to the user with similar characteristics e.g. domain name characteristic website characteristics etc. to previously purchased domain names having high relevance scores.

Additionally or alternatively the relevance score calculated at step may be for example a search engine visibility rating for example of the user s existing domain name based on the input data. The search engine visibility rating may be a numerical rating for example that indicates whether the user s existing domain name is highly visible or not when other users perform queries on search engines such as BING YAHOO GOOGLE AOL etc. If the search engine visibility rating for the user s existing domain name is sufficiently low e.g. below a pre determined threshold the system may generate the candidate domain names for the domain name bundles based on their existing search engine visibility rating. The candidate domain names displayed will therefore be relevant to the user and their domain name.

Based on the relevance scores for each domain name in the bundle the system may be configured to take an average of the relevance scores calculated at step . In one example the higher the calculated average of the relevance scores in a domain name bundle the higher the domain name bundle will be ranked. Thus the higher ranked domain name bundles will be displayed to the user prior to lower ranked domain name bundles on the user interface see .

Once the relevance score s are calculated at step the system may display one or more domain name bundles to the user at step . As shown in one domain name bundle is displayed on the user interface . However as shown in a plurality of domain name bundles may be displayed to the user for example. The domain name bundles may be displayed by different themes as best shown in . The themes may include but are not limited to a value bundle a photo bundle an event bundle an artist bundle and the like. The various themes for the domain name bundles can be generated based on some or all of the data acquired the previous steps outlined in .

In one non limiting example the system may arrange the candidate domain names into the themed bundles using a classification process described above or a different process. Once the candidate domain names are arranged into the themed bundles the system may present one or more of the bundles to the user in a user interface for selection and purchase or for dismissal if the user is not interested in them.

One implementation of an interface for presenting the themed bundles to the user may be presented during a domain search. That is before the interface is presented the user provided the desired primary domain name or one or more keywords to the system as input data i.e. domain search terms and the system generated the candidate domain names and identified one or more suitable themes not necessarily in that order based on at least the input data then the system added each of the candidate domain names to one or more bundles each associated with an identified theme. Referring to each bundle may then be presented to the user as a bundle carousel . The bundle carousel shown in includes a single domain name bundle and the bundle carousel shown in includes the plurality of domain name bundles . The number of domain name bundles presented to the user may be determined by the width of the domain names in each bundle for example.

The bundle carousel will now be described with respect to the bundle carousel shown in . However similar features are included in the bundle carousel shown in and thus similar reference numbers are used. In general the bundle carousel allows users to visualize different relevant themes of domain name bundles for their current purchases. In addition the bundle carousel presents the bundles horizontally or vertically adjacent to each other and allows users to scroll or paginate through a list of domain name bundles and pick the most relevant bundle.

Returning to the bundle carousel may include for example left and right caret buttons to allow the user to paginate horizontally through one or more pages of domain name bundles on the user interface . In alternate embodiments the bundles may be arranged vertically within the carousel and the caret buttons may be positioned at the top and bottom of the carousel so the user paginates vertically through the carousel . A page number may also be displayed to the user to indicate the current page position. Each domain name bundle displays the theme and candidate domain names and may further display a purchase button and one or more lines of additional textual or graphical information about the domain name bundle such as the purchase price . The purchase button allows the user to immediately purchase the domain name bundle or add it to a shopping cart.

The user may click or perform a gesture on the user interface such as click the left or right caret buttons and select the purchase button corresponding to one of the domain name bundles in the bundle carousel . The user may also dismiss the domain name bundles in the bundle carousel by simply paginating past and or not selecting the displayed domain name bundle. As the user is performing the various clicks and or gestures the system may collect feedback via the interface the feedback comprising information describing some or all of the user s interactions with the interface .

The various gestures performed by the user may correspond to decision step of such that the system determines whether the user selects a domain name bundle related to their searched domain name. For example the system may receive an indication that the user dismissed e.g. paginated past a particular domain name bundle or selected one or more domain name bundles from the bundle carousel and may adjust the bundle relevance score at step of the corresponding domain name bundle accordingly. Specifically dismissal of the domain name bundle or of one or more domain name bundles within the bundle carousel would have a negative impact on the domain name bundle s relevance score while purchase of a domain name bundle would have a positive impact on the domain name bundle s relevance score.

More specifically if a domain name bundle is not picked from the bundle carousel a negative score e.g. 1 may be applied to that domain name bundle at step . In contrast if the domain name bundle is picked from the bundle carousel a positive score e.g. 5 may be applied to the bundle at step . The system can then determine a logical position of the bundle within the bundle carousel e.g. 5 100 or 10 100 and can reposition the domain name bundle based on this information. In one example if the domain name bundle is picked from the bundle carousel and purchased by the user the system may be configured to provide a renewal option to the user for the purchased domain name bundle at the end of a predetermined time period e.g. at the end of one year . The domain name bundle renewal provided to the user may have one or more levels of discounts associated therewith. For example the domain name bundle renewal may offer the user a 20 discount to renew all the domain names within the bundle.

In addition the various gestures performed by the user corresponding to decision step of may be continuously monitored by the system to dynamically update the requested bundles at step . Thus the system may continuously improve and recommend domain name bundles to users that relate to highly relevant domain names with high relevance scores.

The sets of candidate domain names may be presented in formats other than the bundles described above although any theme selection or presentation criteria described above for bundles may be used for the other formats. Referring to the implementation of an interface for presenting the themed sets to the user may be presented during a domain search. That is before the interface is presented at step the system received the desired primary domain name or one or more keywords from the user as input data i.e. domain search terms and at steps and the system generated the candidate domain names and identified one or more suitable themes not necessarily in that order based on at least the input data then at step the system added each of the candidate domain names to one or more sets each associated with an identified theme. At step the system may then present the sets to the user in an interface.

Referring to each set may then be presented to the user as a stack . A stack may include a header tile oriented at the top of the stack and a plurality of domain tiles arranged below the header tile of the stack and above the header tile of a subsequent stack if any. The header tile may display the theme of the set associated with the stack and may further display one or more lines of additional descriptive information explaining the relevance of the set s member domain names to the user. Each domain tile displays a member domain name of the set and may further display a purchase button and one or more lines of additional textual or graphical information about the member domain name such as the purchase price.

The number and arrangement of domain tiles may depend on the number of member domain names in the set the type of user device on which the interface is displayed and characteristics of the device display e.g. screen size and resolution . Furthermore the interface may provide multiple interactive options to improve its usability for the user. illustrate an example layout of an interface for a desktop laptop or large tablet computer having a mouse and keyboard or a touchscreen input device. A search box is displayed at the top of the interface and receives and displays the domain search terms. In the illustrated example the domain search term is the desired primary domain name filmisnotdead.com. A primary result box indicates that the searched primary domain name is available or not available available in the illustrated example and if available includes a purchase button that allows the user to immediately purchase the domain name or add it to a shopping cart. If the domain search term is a keyword or series of keywords the primary result box may display the most likely desired primary domain name which in one non limiting example may be the searched keywords concatenated in sequence and having the most common TLD .com appended. In this case the primary result box may include a prompt not shown for the user to confirm that the displayed primary domain name is actually the user s desired primary domain name or to request that the system select a new primary domain name.

Interface elements described herein may be combined for contemporaneous presentation to the user. Thus a bundle carousel as described above may be displayed below the primary result box to present one or more sets of candidate domain names available for purchase together as a bundle. A stack navigation bar may be presented below the bundle carousel and may provide options to the user for modifying the presentation of stacks in the interface . In the exemplary embodiment the navigation bar allows the user to modify the number of domain tiles displayed and the arrangement of the display and further provides a selectable filter menu to apply one or more filters to the results. The filters may be available themes such as price grouping character length category TLD s geographic location and availability e.g. available immediately available via auction or other aftermarket purchase or not available . Additionally a filter menu or filter tile not shown presenting filter options may be displayed subsequent to a predetermined number of stacks or after a predetermined percentage of the search results have been displayed see below in order to provide the user the opportunity to revise the search parameters. For example after the user has scrolled through 70 of the retrieved results the system may conclude that the search results are not relevant and may present filter options e.g. a filter menu in the interface.

Other methods of modifying the way stacks are displayed may be presented. For example illustrates the interface presenting another combination of stacks with the domain name bundling functions described above. Specifically the system may link the candidate domain name associated with one or more of the domain tiles e.g. domain tile A with one or more candidate domain name bundles and the bundle may be presented for purchase on the domain tile A once the user has selected it i.e. has clicked the purchase button to add the candidate domain name associated with the domain tile to the shopping cart . The candidate domain name bundle may be created according to the above described methods using the candidate domain name of the domain tile A as the input data or primary domain name. The domain tile A may include the option for the user to remove the selected candidate domain name from the shopping cart after which the domain tile A may revert to its previous appearance i.e. displaying the candidate domain name as in the domain tiles of .

One or more stacks are then displayed below the stack navigation bar according to the options selected by the user. While any number of stacks and any number of domain tiles may be displayed in vertically stacked fashion a suitable default arrangement for a typical desktop computer is illustrated. In another embodiment the stacks may be displayed in horizontally stacked fashion and the user may switch between displayed stacks via mouse click or gesture. Returning to the illustration five stacks are presented in order of decreasing relevance score of each corresponding set in this case for the search term filmisnotdead.com the five most relevant stacks correspond to the following sets commonly selected TLDs common spelling variations geographic locations TLDs in the Ecommerce category and TLDs in the Art category . The topmost stack may be displayed with or without its header tile . The domain tiles may be presented in horizontal or vertical stacks according to the number of tiles to display the length of displayed candidate domain names and the available interface width. In the illustrated example the domain tiles are presented six at a time in three columns with the most relevant candidate domain names presented first. At the bottom of each stack an expand tile is presented if there are additional domain tiles to display in the stack the user s selection of the expand tile will show more domain tiles for the stack . The interface continues by displaying the next relevant stack determined as described above and with respect to any applied filters.

The user may click or perform a gesture on the header tile of each stack to contract the stack so only the header tile is shown and then do so again to expand the stack . The user may also dismiss the stack by selecting an appropriate prompt or performing a gesture such as swiping the header tile to the left or right to remove it from the display. The user may add candidate domain names to a shopping cart or purchase them immediately using the purchase button on each domain tile . The system may collect feedback via the interface see step of the feedback comprising information describing some or all of the user s interactions with the interface . For example the system may receive an indication that the user dismissed a particular stack or selected one or more domains from a particular stack and may adjust the relevance score of the corresponding set accordingly. Specifically dismissal of the stack or of one or more domain tiles within the stack would have a negative impact on the set s relevance score while purchase of a member domain name would have a positive impact on the set s relevance score.

Referring to another version of an interface for displaying candidate domain names in a domain search may be optimized for viewing on a smartphone or other mobile device typically having a touchscreen input. is an expanded diagram showing the stacks arranged so that all tiles are stacked vertically. A portion of the interface may be shown on the device display see and the user may scroll up and down to view the other portions of the interface . As in the exemplary desktop interface the mobile interface displays stacks with header tiles and one or more domain tiles followed by an expand tile if applicable. The stacks may again be stacked by relevance score of the corresponding sets. In one embodiment the default display of the interface may show the stacks collapsed so that the user touches or swipes a header tile to expand the stack if the user is interested in seeing the domain tiles . A default maximum number of stacks e.g. four may be shown with one or more closing tiles displayed at the bottom of the interface . The closing tiles may prompt the user to request more stacks which are then displayed or to refine the search terms to produce new results. The stacks may be expanded collapsed and dismissed and domain tiles selected for purchase or dismissed as described above. The system may collect feedback from the user s interactions with the interface .

In some embodiments in addition to driving the user toward the most relevant sets using relevance score based display the interface may drive the user toward new or lesser known candidate domain names such as premium discounted or aftermarket domain names or domain names on newly released pre registrable or localized e.g. yourdomain.vegas TLDs. Thus some of the header tiles may display information about and invite the user to review such products. Additionally as shown in a header tile may be a supplementary header tile A in which the additional information supplied is too voluminous to be displayed in the default view. The interface may allow the user to tap the supplementary header tile A which may expand the tile A to display all of the additional information.

The present disclosure describes preferred embodiments with reference to the Figures in which like numbers represent the same or similar elements. Reference throughout this specification to one embodiment an embodiment or similar language means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus appearances of the phrases in one embodiment in an embodiment and similar language throughout this specification may but do not necessarily all refer to the same embodiment.

The described features structures or characteristics of the invention may be combined in any suitable manner in one or more embodiments. In the description numerous specific details are recited to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize however that the invention may be practiced without one or more of the specific details or with other methods components materials and so forth. In other instances well known structures materials or operations are not shown or described in detail to avoid obscuring aspects of the invention.

The schematic flow chart diagrams included are generally set forth as logical flow chart diagrams. As such the depicted order and labeled steps are indicative of one embodiment of the presented method. Other steps and methods may be conceived that are equivalent in function logic or effect to one or more steps or portions thereof of the illustrated method. Additionally the format and symbols employed are provided to explain the logical steps of the method and are understood not to limit the scope of the method. Although various arrow types and line types may be employed in the flow chart diagrams they are understood not to limit the scope of the corresponding method. Indeed some arrows or other connectors may be used to indicate only the logical flow of the method. For instance an arrow may indicate a waiting or monitoring period of unspecified duration between enumerated steps of the depicted method. Additionally the order in which a particular method occurs may or may not strictly adhere to the order of the corresponding steps shown.

The present invention has been described in terms of one or more preferred embodiments and it should be appreciated that many equivalents alternatives variations and modifications aside from those expressly stated are possible and within the scope of the invention.

