---

title: Messaging devices and methods
abstract: An electronic messaging device includes a receiver configured to receive a message at one of a first operational frequency and second operational frequency. The messaging device can operate using a time synchronous protocol and can receive commands through over-the-internet-programming (OTIP) and over-the-air-programming (OTAP).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09608680&OS=09608680&RS=09608680
owner: American Messaging Services, LLC
number: 09608680
owner_city: Lewisville
owner_country: US
publication_date: 20140819
---
This application is a continuation of prior application U.S. patent application Ser. No. 13 758 643 entitled MESSAGING DEVICES AND METHODS filed Feb. 4 2013 the disclosures of which is incorporated herein by reference in its entirety.

The present application generally relates to the field of wireless electronic communications. More specifically the present application relates to messaging device systems and methods.

Paging systems are a reliable and generally inexpensive communication tool. Paging systems operate on a variety of communication protocols including the FLEX protocol by Motorola Inc. which is a four level protocol that presently functions at bit rates of up to sixty four hundred bits per second. Generally the FLEX protocol reduces the number of errors received in transmissions and reduces the possibility that a page will be missed or garbled to the point where it is unreadable or unusable. Further it allows for a relatively large number of end users to be supported.

The modulation range of FLEX is plus and minus forty eight hundred kilohertz of deviation. FLEX s four levels are defined as 4 800 hertz 1 600 hertz 1 600 hertz and 4 800 hertz with reference to the operating frequency. Each level represents two bits in a given transmission. They represent 00 01 11 and 10 respectively.

Additionally FLEX allows for the adjustment of bit rate based upon the channel loading operating at 1 600 3 200 or 6 400 bits per second. FLEX can switch between four level and two level operation as needed which can improve paging quality during times of low or reduced activity and increase channel capacity during times of high traffic.

Although the following text sets forth a detailed description of numerous different embodiments it should be understood that the legal scope of the description is defined by the words of the claims set forth at the end of this disclosure. The detailed description is to be construed as exemplary only and does not describe every possible embodiment since describing every possible embodiment would be impractical if not impossible. Numerous alternative embodiments could be implemented using either current technology or technology developed after the filing date of this patent which would still fall within the scope of the claims.

Throughout this disclosure references to components or modules generally refer to items that logically can be grouped together to perform a function or group of related functions. Components and modules can be implemented in software hardware or a combination of software and hardware. The term software is used expansively to include not only executable code but also data structures data stores and computing instructions in any electronic format firmware and embedded software. It should be noted that although examples discussed below might describe specific features or functions as part of a specific component or module those features or functions may be implemented as part of a different component or module.

The examples discussed below are examples only and are provided to assist in the explanation of the systems and methods described. None of the features or components shown in the drawings or discussed below should be taken as mandatory for any specific implementation of any of these systems or methods unless specifically designated as mandatory. For ease of reading and clarity certain components modules or methods may be described solely in connection with a specific figure. Any failure to specifically describe a combination or subcombination of components should not be understood as an indication that any combination or subcombination is not possible. Also for any methods described regardless of whether the method is described in conjunction with a flow diagram it should be understood that unless otherwise specified or required by context any explicit or implicit ordering of steps performed in the execution of a method does not imply that those steps must be performed in the order presented and may be performed in a different order or in parallel.

The presently disclosed system and methods generally relate to messaging devices such as pagers and associated systems that can be used in a variety of operational environments including the medical industry. For example the systems and methods as disclosed herein can be used in connection with messaging devices deployed in a geographically dispersed area such as a college campus airport or seaport that allow an authorized party to issue almost instantaneous updates on critical events such as a terrorist strike or a natural disaster though messages sent via a communication network. Thus while many of the embodiments described herein are in the context of the medical industry it is to be appreciated that such disclosure is merely illustrative and that the systems and methods disclosed herein are applicable across a wide range of operational environments.

The messaging devices described herein operate using a time synchronized protocol such as the FLEX paging protocol or other suitable time synchronized protocol. Generally with a time synchronized protocol the receiving device uses transmitted data to maintain synchronization. The time synchronized protocol provides data at precise time intervals allowing the receiver to monitor and adjust timing as needed. By comparison with asynchronous protocols a preamble is transmitted for a length of time to guarantee that all messaging devices with that asynchronous protocol can wake up or lock to the signal. The added preamble waste air time and can force messaging devices to keep their receiver circuits energized until a synchronization word is detected. Thus an asynchronous protocol is generally less efficient than a time synchronized protocol at the same data rate since the time spent transmitting a preamble in an asynchronous protocol can be time used to transmit other types of data in a synchronous protocol.

Messaging devices described herein can be one way devices or two way devices. Two way devices can utilize a return channel to provide information to the network such as the location of the messaging device message state or an alphanumeric message for example. Such devices can use any suitable protocol for these transmissions such as the ReFLEX paging protocol Motorola Inc. a WiFi based protocol or a Bluetooth based protocol. In some embodiments as described in more detail below the messaging device may be in wireless communication with a smart phone or other portable communications device of an end user via a suitable data communications link.

The systems and methods described herein generally provide numerous features that seek to improve the experience of the end user of a messaging device and or a network administrator including for example dual frequency capability over the internet programming OTIP a Universal Serial Bus USB interface battery savings techniques and or message encryption.

With regard to dual frequency capability messaging devices in accordance with the systems and methods described herein can operate on multiple frequencies utilizing any suitable protocol such as the FLEX ReFLEX protocol or other suitable time synchronous protocol. In typical hospital operational environments for example in house or campus wide paging networks operate on a frequency that is separate from the wide area frequencies provided by narrowband paging carriers. By utilizing dual frequency capability the messaging devices described herein generally combine the speed and reliability of an in house system with the wide area footprint of a commercial paging carrier since the messaging device is operating on both frequencies simultaneously. Some embodiments of the messaging devices can operate on more than two frequencies.

With regard to OTIP messaging devices in accordance with the systems and methods described herein seek to improve the efficiency for network administrators and end users by allowing certain pager features to be programmed or updated over the internet by way of a network connection. Therefore the necessity for an end user to bring or send their messaging device to a centralized location or to a vendor if certain pager programming is required can be reduced or even eliminated. In some embodiments as described in more detail below an end user can couple a messaging device to a computer to accept programming commands. Via a software application executed on the computer for example network administrators can send programming commands through the Internet to the end user s messaging device. Additionally when the messaging device is coupled to the computer the messaging device can upload messages from the messaging device to the computer for storage. In some embodiments when the messaging device is coupled to a computer the last fifty messages or other desired number of messages that were received by the messaging device will upload into a software application executed on the computer and can be subsequently routed to the network administrator for viewing and storage purposes. In order to preserve messaging for auditing or for other purposes in various embodiments messages stored locally on the messaging device can be deleted from the display screen by the end user but cannot be deleted from local storage on the messaging device until they are uploaded for storage.

The messaging device can interface with the computer using any suitable type of wired or wireless interface. In one embodiments a Universal Serial Bus USB interface is utilized which allows an electrical charge to be delivered to a rechargeable battery and a connection for local Paging Programming Software PPS on the computer and access to OTIP. As is to be appreciated a variety of different communication protocols can be used without departing from the scope of the present disclosure such Bluetooth protocols for example.

Messaging devices in accordance with various embodiments of the present disclosure can provide message encryption as is emerging as a requirement within certain operational environments such as hospital environments for example. Thus sensitive patient information or other private information can be sent over paging networks described herein in encrypted formats. In some embodiments the Secure Paging Layer SPL protocol from Critical Response Systems using AES 128 encryption can be used. Additional spoilers may be added for additional security. Details regarding the SPL protocol can be found in Secure Paging Layer Protocol Specification Version 0.9 February 2012 which is incorporated herein by reference. Updates to the encryption keys associated with the encryption protocol can be received via Over the Air Programming OTAP or via OTIP as described in more detail below. In some embodiments Critical Security Parameters CSP such as passcodes and encryption keys can have counters associated with them counting the number of times used how much time has elapsed since updates and how often a CSP is rejected. CSPs can be are stored in memory on the messaging device in a scrambled or interleave fashion. In some embodiments the messaging device can receive a destruct command either via OTAP or OTIP that will clear all messages from the device and render the device useless.

In some embodiments a messaging device can include a rechargeable power supply that is chargeable via a micro USB port. Other embodiments however utilize disposable batteries or other type of power source. In any event various power consumption techniques described herein seek to increase the life of the message device thereby seeking to reduce the need to charge the messaging device via an external power source or the need to replace the disposable batteries.

The messaging device can also include one or more interfaces which support data exchange between the messaging device and a computing device which can be any type computer device suitable for communication over the network such as a tablet computer a laptop computer netbook computer desktop computer and so forth. An example interface is illustrated as a Universal Serial Bus USB electrical interface . The USB electrical interface can include for example a standard USB or a micro USB port. Alternatively or additionally the messaging device can include a wireless interface to allow for wireless transfer of data between the messaging device and another computer device. The wireless interface can include a Bluetooth module a ZigBee module or a Wi Fi module for example.

Still referring to a memory can include volatile or non volatile memory. Volatile memory units can include random access memory RAM for example. Non volatile memory units can include read only memory ROM for example as well as mechanical non volatile memory systems such as for example a hard disk drive etc. The RAM and or ROM memory units can be implemented as discrete memory ICs for example. The memory can include program memory message storage or both. One or more device identifiers can be used by the controller to select signals intended for itself. The device identifiers can be Channel Access Protocol CAP codes as illustrated. The device identifiers can include a unique identifier so that the messaging device can be sent an individually targeted message.

A power source can be non removably mounted in the messaging device . The power source can be for example a 1100 milliamps per hour mAh Lithium Ion rechargeable battery or a 500 mAh Lithium Ion rechargeable battery. The power source can be in communication with a charging system that for example is configured to receive energy from the USB electrical interface . In one embodiment the charging system is an inductive charger. It is noted that some embodiments of the messaging device can utilize other power sources such as disposable batteries. The charging system can utilize a hardware or software fuel gauge to track the power source s relative state of charge SOC . In some embodiments a visual indication of the SOC is graphically provided on the display . The visual indication can be a percentage of battery life remaining and or a dynamic image of a battery that changes based on charge for example. An audio indictor can also be used such as a repeating chirp to indicate a low battery level.

The graphical user interface menu tree can be arranged in a nested menu format as shown or any other suitable arrangement. While depicts one example arrangement such arrangement is merely for illustrative purposes as a wide variety of other arrangements can be used without departing from the scope of the present disclosure. The top level menu can include a variety of options such as message folders settings status and about which can be navigated using the input device . Selecting or accessing one of the options can provide a user with additional choices. As described in more detail below various settings and parameters of the messaging device can be updated or changed using OTIP.

Receiving an input to select messages for example takes the user to a received message landing screen. Arrow keys of the input device can scroll up and down through message lists. The right arrow button can for example take the user to a screen that views the related message. Additional message options can include a delete message option. When the message is deleted it is removed from the message display list using this option however it may still remain stored local to the messaging device such as within memory shown in for later retrieval via the USB interface provided that the max number of messages has not been exceeded. Other message options can include locking a message and marking a message as unread as illustrated.

Receiving an input to select folders can take the user to a list of all folders on the messaging device . In some embodiments the messaging device can locally store a relatively large number of messages. For example some embodiments can be capable of storing in excess of 50 messages. Some other embodiments can be capable of storing in excess of 100 messages. Other embodiments can be capable of storing 200 or more messages. As the number of stored messages increases there is a need to efficiently navigate control and access the stored messages while using the input device and the display . The messaging of messaging device shown in utilizes a collection of message lists each list of which is viewable view the display . In the illustrated embodiment the messaging device includes a message view list an unread message list a locked message list an all message list and a deleted messages list. Messages stored in the memory such as memory of the messaging device will appear in one or more of these lists.

Exemplary guidelines for populating the lists will now be described. As is to be appreciated the particular guidelines may vary based on implementation. The Message view list is a list of the last X number of received messages where X is settable e.g. 10 25 etc. except deleted messages. Unread message list is a list of all unread messages from the total list of stored messages. Locked message list is a list of all of the locked messages from the total list of stored messages. In some embodiments a maximum number of locked messages may be set. Locked messages are not automatically deleted. All Message List is a list at all messages stored in the device including deleted messages. Deleted messages are shown in All Message List but are not shown in the Message View List. By navigating through the various lists the user operating the messaging device can access and control the relatively large number of messages that can be stored locally on the device.

It is noted that the folders can be defined or structured in any suitable fashion. For example some embodiments of the messaging device can arrange messages by CAP code Name such as Office Code Blue and Sports. 

The messaging device can have multiple address parameters called CAP codes. In some embodiments each CAP code can be designated of one of three types Personal Group or Maildrop. The personal CAP code is used for a main address. These types of CAP codes are for messages directed at only messaging device . A group CAP code can be a common CAP code sometimes referred to as a burned in CAP code or a hardwired CAP code that are programmed in to multiple messaging devices. Common CAP codes allow for only one message to be sent out and have multiple messaging devices receive the same message at generally the same time. This is typically referred to as One to Many addressing. Maildrop CAP codes can be used for Information Services IS . These CAP codes can receive daily weekly type information feeds where history is not required. For each of these types of CAP codes a number of Max Messages can be set. As is to be readily appreciated other messages devices in accordance with the systems and methods described herein can use different or alternative addressing techniques or protocols besides CAP codes such as addressing based on an electronic serial number for example. As such CAP codes as used herein are merely one exemplary addressing technique.

Receiving an input to select settings can allow the user to set or view various control parameters on the messaging device examples of which are shown in . Receiving an input to select status allows a user to view various operational parameters as well as modify various operational parameters. In particular the Channel Frequencies parameter of the System Config menu frequency can list the two frequencies that are set for dual frequency operation. The Channel Mode parameter can list for example the current mode of operation along with the current frequency that the messaging device is listening on. Addresses and Color Code can list the CAP Codes and their associated color code priority and CAP code Name. The System Collapse parameter can display the last received system collapse value. The FLEX time parameter can display the last received FLEX time from the network. The messaging device can also include other various options such as an About option which can display a message on the display when activated. The message can include a settable or programmable portion that be updated via the OTIP or OTAP functionality as described in more detail below.

The computing device can be any suitable processor based device or system such as a personal computer laptop server mainframe or a collection e.g. network of multiple computers for example. The computing device can include one or more processors and one or more computer memory units . For convenience only one processor and only one memory unit are shown in . The processor may execute software instructions stored on the memory unit to execute an account manager application . The processor may be implemented as an integrated circuit IC having one or multiple cores. The memory may include volatile and or non volatile memory units. Volatile memory units may include random access memory RAM for example. Non volatile memory units may include read only memory ROM for example as well as mechanical non volatile memory systems such as for example a hard disk drive an optical disk drive etc. The RAM and or ROM memory units may be implemented as discrete memory ICs for example.

The computing device can be in electrical communication with a host via a networked connection such as an Internet based connection through a network interface . The host can include a server for facilitating the transmission of commands instructions or other data to be sent to the messaging device via the computer device . Such communications can be encrypted or otherwise secured using suitable encryption protocols. A network administrator can interact with the host to selectively decide which commands will be sent to particular messaging devices. Such commands can include without limitation changes to the parameters settings of the messaging device such as various settings illustrated in the interface menu tree of updates to firmware of the messaging device changes to CAP codes and or adding additional encryption keys. A CAP code database can be used to store information regarding various messaging devices associated with the host . With regard to the firmware of the messaging device it is noted that in some embodiments the computer device can upgrade the firmware using the account manager application .

Messages or other information stored local to the messaging device can be uploaded to the computing device and or the host once the communications link is made. The host can receive messages from the messaging device and store them in suitable storage media such as a message database . The account manager application or other suitable software application executed by the computer device can facilitate the uploading or transferring of the messages.

Various messaging devices in accordance with the systems and methods described herein utilizing a time synchronous paging protocol such as FLEX have a dual frequency mode that generally allows a first frequency to be set as primary frequency and a second frequency as a secondary frequency. The device will stay on the primary frequency unless the primary frequency is determined to be lost or otherwise no longer acceptable for use. The primary frequency can be associated with a local transmission station and the secondary frequency can be association with a wide area transmission station. As described in more detail below various decision making processes based on settable variables and real time data can be used by the messaging device to control the switching between the available frequencies.

At a messaging device is running at the local frequency. At which can occur after a reset or device power up for example it is determined if a synchronization signal is detected at the messaging device. If the synchronization signal is not detected a variable is incremented at shown as Lost Sync Count . If the synchronization is not detected within a particular time period which can be determined based on the value of the Lost Sync Count variable the messaging device is switched to operate at the wide area frequency at . The time period is shown as 67.5 seconds which is merely one example time period and coordinates to the time period associated with 36 frames in the FLEX protocol which are broadcasted at intervals of 1.875 seconds. below illustrates an example switching of operational frequencies based on the lack of synchronization during a defined period. Referring again to if a synchronization frame is detected a variable related to lost synchronization e.g. Lost Sync Count is cleared at . After the synchronization frame is detected at it is determined at if another synchronization frame is detected at the messaging device. If the synchronization is not detected within a particular time period at shown as 67.5 seconds which again is merely one example time period the messaging device is switched to operate at the wide area frequency at . If a synchronization frame is detected at the process proceeds to analyze the signal to determine its usefulness.

In the illustrated embodiment at the received signal strength indication RSSI value of the received signal is analyzed to determine if it falls within a particular target range. In one embodiment the target range is 60 dBm and 120 dBm. Other target ranges can be used. As is to be readily appreciated other ranges of RSSI values can be used. If the RSSI value is within the range at the signal may be usable and a filtered average RSSI value is calculated. If the RSSI value is not within the target range the process returns to . In the illustrated embodiment an average of five RSSI values excluding the minimum and maximum RSSI values is determined. In other words in an effort to reduce spurious or overly frequent frequency changes the RSSI cannot be used to initiate frequency change until a certain quantity of RSSI values have been received. At it is determined how the filtered average RSSI value compares to a RSSI threshold. The RSSI threshold in the illustrated embodiment is 110 dBm. If the average RSSI value is greater than the RSSI value indicative of a relatively strong signal the process proceeds to where a variable is incremented and it is determined if the variable exceeds a threshold. In the illustrated embodiment the variable is shown as Local to Wide Clear and the threshold is set at three. When the threshold is exceeded which indicates the presence of a continually strong signal the process proceeds to where various variables including Local to Wide Clear and Local to Wide Clear Count are set to zero. Referring again to if the average RSSI value is less than the RSSI value indicative of a relatively weak signal the process proceeds to where a variable is incremented and it is determined if the variable meets or exceeds a threshold. In the illustrated embodiment the variable is shown as Local to Wide and the threshold is set at three. If the threshold is met or exceeded which indicates the presence of a continually weak signal at the primary frequency the messaging device is changed to operate at the secondary frequency at shown as the wide area frequency . Example operational scenarios illustrating the hysteresis effect of the processing blocks and is shown below in .

At a messaging device is operating a wide area frequency. Such operation can be based on a change to the wide area frequency initiated at . At it is determined if synchronization can be established with the wide area frequency. At it is determined synchronization is established within a certain time period. In the illustrated embodiment the time period is 67.5 seconds although this disclosure is not so limited. If the wide area frequency synchronization signal is not received within the time period the messaging device is changed to operate at the local frequency at . The process flow can than resume at as shown in . As is to be appreciated while flow diagram and flow diagram refer to particular time periods such time period can be a function of a variable incremented at certain intervals such the variable named Lost Sync Count of and . For example a variable may be incremented every 1.875 seconds. After 26 increments a time period of 48.75 seconds will have elapsed after 36 increments a time period of 67.5 seconds will have elapsed and so forth. Therefore the various time periods referred to herein can effectively be monitored by tracking the value of a variable that is incremented at known timed intervals.

If a synchronization signal on the wide area frequency was detected at the Lost Sync Count variable is reset at . If another synchronization signal on the wide area frequency is not detected at the process proceeds to where the Lost Sync Count variable is incremented to indicate the passage of time. If 67.5 seconds or other suitable time period has elapsed without detected a synchronization signal the messaging device changes to operate at the local frequency at . If another synchronization signal on the wide area frequency is detected at the process proceeds to where the messaging device is switched to operate on the local or primary frequency. After switching to the local frequency parameters associated with the local frequency levels can be analyzed to determine the appropriate course of action. At the RSSI value of the local frequency is analyzed to determine if it falls within a particular range which is shown as 60 dBm to 120 dBm although other embodiments can use different ranges. If the RSSI of the local frequency is not within the range it is not a usable signal and the messaging device is changed back to operating on the wide area frequency at . If the RSSI of the local frequency is within the range the filtered average RSSI value can be determined at once a requisite number of RSSI values have been determined.

At the average RSSI value is analyzed to determine its relative strength. If the average RSSI value is greater than or equal to a threshold shown as 103 dBm in the illustrated embodiment a variable is incremented at indicating a favorable local frequency signal strength is present. When the value of the variable meets or exceeds a threshold shown as 3 in the illustrated embodiment the messaging device can continue to operate at the local frequency as indicated at . If the average RSSI value at is not greater than or equal to a threshold shown as 103 dBm in the illustrated embodiment it may indicate a relatively weak local signal. A variable tracking this condition shown as Wide to Local Clear can be incremented. At the value of this variable is checked and if it is greater than or exceeds a threshold which could indicate a relatively long period of weak local signal strength various variables are reset to zero at . Example operational scenarios illustrating the hysteresis effect of the processing blocks and is shown below in .

The computing device can comprise various radio elements including a radio processor one or more transceivers amplifiers filters switches and so forth to provide voice and or data communication functionality. It can be appreciated that the computing device can operate in accordance with different types of wireless network systems utilize different radio elements to implement different communication techniques. The computing device also can comprise various input output I O interfaces for supporting different types of connections such as a serial connection port an IR port a Bluetooth interface a network interface a Wi Fi interface a WiMax interface a cellular network interface a wireless network interface card WNIC a transceiver and so forth. The computing device can comprise one or more internal and or external antennas to support operation in multiple frequency bands or sub bands such as the 2.4 GHz range of the ISM frequency band for Wi Fi and Bluetooth communications one or more of the 850 MHz 900 MHZ 1800 MHz and 1900 MHz frequency bands for GSM CDMA TDMA NAMPS cellular and or PCS communications the 2100 MHz frequency band for CDMA2000 EV DO and or WCDMA JMTS communications the 1575 MHz frequency band for Global Positioning System GPS operations and others.

The computing device can provide a variety of applications for allowing a user to accomplish one or more specific tasks using the embeddedness system . Applications can include without limitation a web browser application e.g. INTERNET EXPLORER MOZILLA FIREFOX SAFARI OPERA NETSCAPE NAVIGATOR telephone application e.g. cellular VoIP PTT networking application messaging application e.g. e mail IM SMS MMS BLACKBERRY Messenger contacts application calendar application and so forth. The computing device can comprise various software programs such as system programs and applications to provide computing capabilities in accordance with the described embodiments. System programs can include without limitation an operating system OS device drivers programming tools utility programs software libraries application programming interfaces APIs and so forth. Exemplary operating systems can include for example a PALM OS MICROSOFT OS APPLE OS UNIX OS LINUX OS SYMBIAN OS EMBEDIX OS Binary Run time Environment for Wireless BREW OS JavaOS a Wireless Application Protocol WAP OS and others.

A wireless communication link between the messaging device and the computing device can be any suitable data transmission link such as a Bluetooth link a Wi Fi link NFC link and so forth. The messaging device can be configured to attempt to establish the wireless communication link whenever it is in proximity to the computing device . Once a link has been established the messaging device can be configured to transfer messages that are received by the messaging device to the computing device via the wireless communication link . The computing device can include software instructions stored within a memory which when executed by the processor which would allow an end user to view the message on the computing device . In some embodiments the computing device can also transmit replies such as message statuses.

A return channel can allow for communication between the computing device and the server . As is to be appreciated the return channel can be routed through any suitable communications networks. The return channel can be used by the computing device to provide messaging to the server . The messaging could include any suitable data such as the status of the message . Thus the computing device can indicate the message was received read deleted and so forth. In some embodiments the messaging device is a one way device yet two way communication achieved by way of the return channel between the computing device and the server .

In some embodiments the computing device is configured to alert the user of the message that is received on the messaging device . The alert on the computing device could be an audible alert a visual alert or various combinations thereof. With the computer device synced to the server the computing device can also provide confirmation to the server indicating the receipt of the message .

The messaging device can be in communication with a secondary station transmitter which operates at a wide area frequency. In the illustrated example the messaging device is not in communication with the primary station transmitter which operates a local frequency. Both the secondary station transmitter and the primary station transmitter are in communication with a message server . The station transmitter can cause the transmission of a message which may be a one to many message or a one to one message from both transmitters and . The messaging device will receive the messages from the secondary station transmitter .

When the messaging device is plugged in to the USB port of the computer device or otherwise coupled thereto the messaging device can connect to a desktop application as shown in the protocol stack . In some embodiments the desktop application will prompt for device serial number and password or other types of login credentials. The person logging in to the desktop application may only be allowed to do certain functions based on a level of user rights. After the password is verified by accessing the messaging device the desktop application can use the serial number and the password for example to connect to the application at the server through the network . If a connection is not available or cannot otherwise be established then access to the messaging device may be denied. In some embodiments however if a high level of access accompanies a user s login credentials then a connection to the application at the server is not necessarily required.

Various functionality can be implemented between the computing device and the messaging device via the electrical coupling . For example using the desktop application executed on the computing device the computing device can send various commands to the messaging device device such as to set a parameter or to request information. The messaging device can send commands to the desktop application such as receive message list or check for new firmware . Moreover in some embodiments the desktop application can perform a firmware update process. It is noted that the desktop application executed on the computing device can provide security for all data received from the messaging device including anything that is temporally stored. The desktop application can also securely communicate with the server .

Communications between the computing device and the server can include for example setting configuration updates for the messaging device . The desktop application can also submit requests to the server such as get latest firmware version download latest firmware version and so forth. Communications between the computing device and the server can also include the uploading of received messages lists and or messaging device configurations.

The application executed by the server can provide various functionality. In some embodiments the application can send commands to the messaging device through the computing device to update its settings configurations and or operational parameters. The application can also send the latest version of firmware to the desktop application. The application can also store one or more sets of complete configurations parameters for a messaging device. Moreover the application can receive and store updates to configurations of the messaging device as received from the desktop application. The application can also respond to the requests commands and other types of messaging received from the desktop application e.g. to send the latest firmware version .

The examples presented herein are intended to illustrate potential and specific implementations of the present disclosure. It can be appreciated that the examples are intended primarily for purposes of illustration of the disclosure for those skilled in the art. No particular aspect or aspects of the examples are necessarily intended to limit the scope of the present disclosure. For example no particular aspect or aspects of the examples of system architectures user interface layouts or screen displays described herein are necessarily intended to limit the scope of the disclosure.

It is to be understood that the figures and descriptions of the present disclosure have been simplified to illustrate elements that are relevant for a clear understanding of the present disclosure while eliminating for purposes of clarity other elements. Those of ordinary skill in the art will recognize however that these sorts of focused discussions would not facilitate a better understanding of the present disclosure and therefore a more detailed description of such elements is not provided herein.

Any element expressed herein as a means for performing a specified function is intended to encompass any way of performing that function including for example a combination of elements that performs that function. Furthermore the disclosure as may be defined by such means plus function claims resides in the fact that the functionalities provided by the various recited means are combined and brought together in a manner as defined by the appended claims. Therefore any means that can provide such functionalities may be considered equivalents to the means shown herein.

In various embodiments modules or software can be used to practice certain aspects of the disclosure. For example software as a service SaaS models or application service provider ASP models may be employed as software application delivery models to communicate software applications to clients or other users. Such software applications can be downloaded through an Internet connection for example and operated either independently e.g. downloaded to a laptop or desktop computer system or through a third party service provider e.g. accessed through a third party web site . In addition cloud computing techniques may be employed in connection with various embodiments of the disclosure.

Moreover the processes associated with the present embodiments may be executed by programmable equipment such as the messaging devices described herein. Software or other sets of instructions that may be employed to cause programmable equipment to execute the processes may be stored in any storage device such as for example a computer system non volatile memory an optical disk magnetic tape or magnetic disk. Furthermore some of the processes may be programmed when the computer system is manufactured or via a computer readable memory medium.

It can also be appreciated that certain process aspects described herein may be performed using instructions stored on a non transitory computer readable memory medium or media that direct a computer or computer system to perform process steps. Non transitory computer readable medium may include for example memory devices such as diskettes compact discs of both read only and read write varieties optical disk drives and hard disk drives. A computer readable medium may also include memory storage that may be physical virtual permanent temporary semi permanent and or semi temporary.

A computer computer system host engine or processor may be for example and without limitation a processor microcomputer minicomputer server mainframe laptop personal data assistant PDA wireless e mail device cellular phone pager processor fax machine scanner or any other programmable device configured to transmit and or receive data over a network. Computer systems and computer based devices disclosed herein may include memory for storing certain software applications used in obtaining processing and communicating information. It can be appreciated that such memory may be internal or external with respect to operation of the disclosed embodiments. The memory may also include any means for storing software including a hard disk an optical disk floppy disk ROM read only memory RAM random access memory PROM programmable ROM EEPROM electrically erasable PROM and or other computer readable memory media.

In general it will be apparent to one of ordinary skill in the art that various embodiments described herein or components or parts thereof may be implemented in many different embodiments of software firmware and or hardware or modules thereof. The software code or specialized control hardware used to implement some of the present embodiments is not limiting of the present disclosure. For example the embodiments described hereinabove may be implemented in computer software using any suitable computer programming language such as .NET SQL MySQL or HTML using for example conventional or object oriented techniques. Programming languages for computer software and other computer implemented instructions may be translated into machine language by a compiler or an assembler before execution and or may be translated directly at run time by an interpreter. Examples of assembly languages include ARM MIPS and x86 examples of high level languages include Ada BASIC C C C COBOL Fortran Java Lisp Pascal Object Pascal and examples of scripting languages include Bourne script JavaScript Python Ruby PHP and Perl. Such software may be stored on any type of suitable computer readable medium or media such as for example a magnetic or optical storage medium. Thus the operation and behavior of the embodiments are described without specific reference to the actual software code or specialized hardware components. The absence of such specific references is feasible because it is clearly understood that artisans of ordinary skill would be able to design software and control hardware to implement the embodiments of the present disclosure based on the description herein with only a reasonable effort and without undue experimentation.

While various embodiments of the disclosure have been described herein it should be apparent however that various modifications alterations and adaptations to those embodiments may occur to persons skilled in the art with the attainment of some or all of the advantages of the present disclosure. The disclosed embodiments are therefore intended to include all such modifications alterations and adaptations without departing from the scope and spirit of the present disclosure as set forth in the appended claims.

