---

title: Context sensitive dynamic authentication in a cryptographic system
abstract: A system for performing authentication of a first user to a second user includes the ability for the first user to submit multiple instances of authentication data which are evaluated and then used to generate an overall level of confidence in the claimed identity of the first user. The individual authentication instances are evaluated based upon: the degree of match between the user provided by the first user during the authentication and the data provided by the first user during his enrollment; the inherent reliability of the authentication technique being used; the circumstances surrounding the generation of the authentication data by the first user; and the circumstances surrounding the generation of the enrollment data by the first user. This confidence level is compared with a required trust level which is based at least in part upon the requirements of the second user, and the authentication result is based upon this comparison.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09300649&OS=09300649&RS=09300649
owner: Security First Corporation
number: 09300649
owner_city: Rancho Santa Margarita
owner_country: US
publication_date: 20140418
---
The present application is a continuation of U.S. patent application Ser. No. 13 540 030 filed Jul. 2 2012 which is a continuation of U.S. patent application Ser. No. 12 878 317 filed Sep. 9 2010 now U.S. Pat. No. 8 214 650 which is a continuation of U.S. patent application Ser. No. 11 839 927 filed Aug. 16 2007 now U.S. Pat. No. 7 802 104 which is a continuation of U.S. patent application Ser. No. 09 666 377 filed Sep. 20 2000 now U.S. Pat. No. 7 260 724 which claims priority benefit under 35 U.S.C. 119 e from U.S. Provisional Patent Application No. 60 154 734 filed Sep. 20 1999 entitled SECURE SITE FOR INTERNET TRANSACTIONS and from U.S. Provisional Application No. 60 200 396 filed Apr. 27 2000 entitled SECURE SITE FOR INTERNET TRANSACTIONS. The contents of U.S. patent application Ser. Nos. 13 540 030 12 878 317 11 839 927 09 666 377 60 154 734 and 60 200 396 are hereby incorporated by reference herein.

The field relates to cryptographic authentication. More specifically the field relates to the evaluation of an authentication event based upon the context of that event.

With the continued increase in commercial and other transactions taking place across linked computer systems it has become desirable to secure these transactions and the information related to these transactions. One form of security is to prevent access to systems which perform certain functions for instance by requiring a password or PIN number in order to use an ATM. Another form of security is to protect data from being intercepted and used by those other than the intended recipients for instance when sending a credit card number electronically. Another form of security involves allowing someone to undeniably sign a document or otherwise assent to a transaction electronically.

All of these functions are related to the concept of authentication or proof of identity. Authentication of electronic systems particularly digital systems is generally carried out using cryptographic techniques and protocols. Cryptography is the scrambling of information in such a specific way that it can only be unscrambled by someone who holds the appropriate unscrambling key. By exchanging messages which can only be decrypted by those with access to the proper key cryptographic protocols can be used as a means to authenticate individuals.

Techniques of authentication vary in their ease of use and their reliability. For instance a classical authentication technique in both electronic and non electronic systems is the password. Anyone who knows the password for the club is assumed to be a member and is admitted. Anyone who doesn t know the password is prohibited. Similarly someone who knows a particular individual s password is assumed to be that individual while someone who doesn t is assumed to be someone else.

This technique is fairly simple to implement and fairly simple to use. The individuals being authenticated need merely remember the password and they can be authenticated by anyone else who knows the password. However such a technique is also fairly unreliable people may be forget their own password or overhear someone else s password.

Other techniques for authentication involve the use or control of a particular token such as a particular key either physical or electronic. Still other techniques are based upon some immutable physical characteristic of a user such as a fingerprint or the sound of their voice. Some of these techniques are more reliable than others. For instance fingerprints are more effective authenticators than passwords in most cases. However analyzing a fingerprint to determine if someone is who they claim to be is much more complex than simply comparing passwords. Generally the more reliable a technique of authentication is the more cumbersome it is to use.

Therefore there is a continued need for improved systems that provide appropriate levels of reliable authentication and security with the improved ease of use and reduced inconvenience to the users.

Based on the foregoing a need exists to provide a method for authenticating a user here the user is authenticated based on those aspects of his current circumstances which are most reliable for use in determining that the user is who he says he is. Accordingly one aspect of the invention is to provide a secure server or trust engine having server centric keys or in other words storing cryptographic keys and user authentication data on a server. According to this embodiment a user accesses the trust engine in order to perform authentication and cryptographic functions such as for example authentication authorization digital signing and generation storage and retrieval of certificates encryption notary like and power of attorney like actions and the like.

Another aspect of the invention is to provide a reliable or trusted authentication process. Moreover subsequent to a trustworthy positive authentication a wide number of differing actions may be taken from providing cryptographic technology to system or device authorization and access to permitting use or control of a wide number of electronic devices.

Another aspect of the invention is to provide cryptographic keys and authentication data in an environment where they are not lost stolen or compromised thereby advantageously avoiding a need to continually reissue and manage new keys and authentication data. According to another aspect of the invention the trust engine allows a user to use one key pair for multiple activities vendors and or authentication requests.

According to yet another aspect of the invention the trust engine performs the majority of cryptographic processing such as encrypting authenticating or signing on the server side thereby allowing clients to possess only minimal computing resources. According to yet another aspect of the invention the trust engine includes multiple depositories for storing portions of each cryptographic key and authentication data. The portions are created through a data splitting process that prohibits reconstruction without a predetermined portion from more than one depository. According to another embodiment the multiple depositories are geographically remote such that a rogue employee or otherwise compromised system at one depository will not provide access to a user s key or authentication data.

According to yet another aspect the authentication process advantageously allows the trust engine to process vendor and user authentication activities in parallel. According to yet another embodiment the trust engine may advantageously track failed access attempts and thereby limit the number of times malicious intruders may attempt to subvert the system.

According to yet another aspect the trust engine may include multiple instantiations where each trust engine may predict and share processing loads with the others. According to yet another embodiment the trust engine may include a redundancy module for polling a plurality of authentication results to ensure that more than one system authenticates the user.

Therefore one embodiment of the invention provides a method where data is obtained from the user during an authentication attempt along with data describing one or more aspects of the current circumstances surrounding the authentication attempt. This data is compared to previously received data associated with the circumstances of the previous authentication attempts by this user. Based upon this comparison a level of trust for the authentication attempt of the user.

According to another aspect of the invention a method for authenticating a user is provided in which authentication data is obtained associated with an authentication operation and metadata is obtained related to the authentication operation. This metadata is compared with data which has previously been received and a level of trust associated with the authentication operation is determined.

According to yet another aspect of the invention the authentication data is comprised of data generated using more than one authentication technique. Data generated using different techniques is compared with different portions of the set of previously stored data in order to determine a level of trust for the authentication.

An additional aspect of the invention provides a system for graded authentication comprising user data and circumstantial data used by a trust engine. The user data is obtained from a user during previously successful authentication attempts and circumstantial data associated with these previously successful authentication attempts is also received. The trust engine generates a level of trust associated with a current authentication attempt by comparing circumstantial data associated with the current authentication attempt with the circumstantial data associated with the previously successful authentication attempts.

In another embodiment of the invention a method for grading an authentication operation is relying on a variable set of authentication techniques used to obtain authentication data is provided. The reliability of the set of authentication techniques available is defined and authentication data is received during an authentication operation. The authentication data is generated using a subset of the available authentication techniques. The acceptability of the authentication data is determined for the subset of data generated by each of the techniques used and the level of trust is defined for the authentication operation based upon the acceptability the authentication data and the reliability of the authentication techniques used to generated the authentication data.

Yet another aspect of the invention provides an apparatus for evaluating an authentication attempt. The apparatus comprises reliability data which is associated with a set of authentication techniques that may be used in an authentication attempt. It also comprises a plurality of authentication instances generated using a subset of the authentication techniques. A trust engine determines a level of match associated with each authentication instance. These levels of match are used to assign a level of trust for the authentication attempt. The level of trust is determined by the level of match associated with each authentication instance and the reliability of the technique used in each authentication instance.

According to yet another aspect of the invention a method for grading an authentication attempt is provided in which the reliability of a set of authentication techniques that may be used in an authentication attempt is defined. A plurality of authentication instances generated using a subset of these authentication techniques is then received and a level of match is associated with each authentication instance. The level of trust of the authentication attempt is then defined based upon the level of match associated with each authentication instance and upon the reliability of the technique used in each authentication instance.

One aspect of the present invention is to provide a cryptographic system where one or more secure servers or a trust engine stores cryptographic keys and user authentication data. Users access the functionality of conventional cryptographic systems through network access to the trust engine however the trust engine does not release actual keys and other authentication data and therefore the keys and data remain secure. This server centric storage of keys and authentication data provides for user independent security portability availability and straightforwardness.

Because users can be confident in or trust the cryptographic system to perform user and document authentication and other cryptographic functions a wide variety of functionality may be incorporated into the system. For example the trust engine provider can ensure against agreement repudiation by for example authenticating the agreement participants digitally signing the agreement on behalf of or for the participants and storing a record of the agreement digitally signed by each participant. In addition the cryptographic system may monitor agreements and determine to apply varying degrees of authentication based on for example price user vendor geographic location place of use or the like.

To facilitate a complete understanding of the invention the remainder of the detailed description describes the invention with reference to the figures wherein like elements are referenced with like numerals throughout.

According to one embodiment of the invention the user system comprises a conventional general purpose computer having one or more microprocessors such as for example an Intel based processor. Moreover the user system includes an appropriate operating system such as for example an operating system capable of including graphics or windows such as Windows Unix Linux or the like. As shown in the user system may include a biometric device . The biometric device may advantageously capture a user s biometric and transfer the captured biometric to the trust engine . According to one embodiment of the invention the biometric device may advantageously comprise a device having attributes and features similar to those disclosed in U.S. patent application Ser. No. 08 926 277 filed on Sep. 5 1997 entitled RELIEF OBJECT IMAGE GENERATOR U.S. patent application Ser. No. 09 558 634 filed on Apr. 26 2000 entitled IMAGING DEVICE FOR A RELIEF OBJECT AND SYSTEM AND METHOD OF USING THE IMAGE DEVICE U.S. patent application Ser. No. 09 435 011 filed on Nov. 5 1999 entitled RELIEF OBJECT SENSOR ADAPTOR and U.S. patent application Ser. No. 09 477 943 filed on Jan. 5 2000 entitled PLANAR OPTICAL IMAGE SENSOR AND SYSTEM FOR GENERATING AN ELECTRONIC IMAGE OF A RELIEF OBJECT FOR FINGERPRINT READING all of which are owned by the instant assignee and all of which are hereby incorporated by reference herein.

In addition the user system may connect to the communication link through a conventional service provider such as for example a dial up digital subscriber line DSL cable modem fiber connection or the like. According to another embodiment the user system connects the communication link through network connectivity such as for example a local or wide area network. According to one embodiment the operating system includes a TCP IP stack that handles all incoming and outgoing message traffic passed over the communication link .

Although the user system is disclosed with reference to the foregoing embodiments the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein a wide number of alternatives embodiments of the user system including almost any computing device capable of sending or receiving information from another computer system. For example the user system may include a computer workstation an interactive television an interactive kiosk a personal mobile computing device such as a digital assistant mobile phone laptop or the like a wireless communications device a smartcard an embedded computing device or the like which can interact with the communication link . In such alternative systems the operating systems will likely differ and be adapted for the particular device. However according to one embodiment the operating systems advantageously continue to provide the appropriate communications protocols needed to establish communication with the communication link .

According to the embodiment where the user produces biometric data the user provides a physical characteristic such as a fingerprint or speech to the biometric device . The biometric device advantageously produces an electronic pattern or biometric of the physical characteristic. The electronic pattern is transferred through the user system to the trust engine for either enrollment or authentication purposes.

Once the user produces the appropriate authentication data and the trust engine determines a positive match between that authentication data current authentication data and the authentication data provided at the time of enrollment enrollment authentication data the trust engine provides the user with complete cryptographic functionality. For example the properly authenticated user may advantageously employ the trust engine to perform hashing digitally signing encrypting and decrypting often referred to only as encrypting creating or distributing digital certificates and the like. However the private cryptographic keys used in the cryptographic functions will not be available outside the trust engine thereby ensuring the integrity of the cryptographic keys.

According to one embodiment the trust engine generates and stores cryptographic keys. According to another embodiment at least one cryptographic key is associated with each user. Moreover when the cryptographic keys include public key technology each private key associated with a user is generated within and not released from the trust engine . Thus so long as the user has access to the trust engine the user may perform cryptographic functions using his or her private or public key. Such remote access advantageously allows users to remain completely mobile and access cryptographic functionality through practically any Internet connection such as cellular and satellite phones kiosks laptops hotel rooms and the like.

According to another embodiment the trust engine performs the cryptographic functionality using a key pair generated for the trust engine . According to this embodiment the trust engine first authenticates the user and after the user has properly produced authentication data matching the enrollment authentication data the trust engine uses its own cryptographic key pair to perform cryptographic functions on behalf of the authenticated user.

A skilled artisan will recognize from the disclosure herein that the cryptographic keys may advantageously include some or all of symmetric keys public keys and private keys. In addition a skilled artisan will recognize from the disclosure herein that the foregoing keys may be implemented with a wide number of algorithms available from commercial technologies such as for example RSA ELGAMAL or the like.

According to another embodiment the trust engine internally performs certificate issuances. In this embodiment the trust engine may access a certificate system for generating certificates and or may internally generate certificates when they are requested such as for example at the time of key generation or in the certificate standard requested at the time of the request. The trust engine will be disclosed in greater detail below.

Although the vendor system is disclosed with reference to the foregoing embodiments the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein that the vendor system may advantageously comprise any of the devices described with reference to the user system or combination thereof.

One popular part of the Internet is the World Wide Web. The World Wide Web contains different computers which store documents capable of displaying graphical and textual information. The computers that provide information on the World Wide Web are typically called websites. A website is defined by an Internet address that has an associated electronic page. The electronic page can be identified by a Uniform Resource Locator URL . Generally an electronic page is a document that organizes the presentation of text graphical images audio video and so forth.

Although the communication link is disclosed in terms of its preferred embodiment one of ordinary skill in the art will recognize from the disclosure herein that the communication link may include a wide range of interactive communications links. For example the communication link may include interactive television networks telephone networks wireless data transmission systems two way cable systems customized private or public computer networks interactive kiosk networks automatic teller machine networks direct links satellite or cellular networks and the like.

According to one embodiment the transaction engine comprises a data routing device such as a conventional Web server available from Netscape Microsoft Apache or the like. For example the Web server may advantageously receive incoming data from the communication link . According to one embodiment of the invention the incoming data is addressed to a front end security system for the trust engine . For example the front end security system may advantageously include a firewall an intrusion detection system searching for known attack profiles and or a virus scanner. After clearing the front end security system the data is received by the transaction engine and routed to one of the depository the authentication engine the cryptographic engine and the mass storage . In addition the transaction engine monitors incoming data from the authentication engine and cryptographic engine and routes the data to particular systems through the communication link . For example the transaction engine may advantageously route data to the user system the certificate authority or the vendor system .

According to one embodiment the data is routed using conventional HTTP routing techniques such as for example employing URLs or Uniform Resource Indicators URLs . URLs are similar to URLs however URLs typically 35 indicate the source of files or actions such as for example executables scripts and the like. Therefore according to the one embodiment the user system the certificate authority the vendor system and the components of the trust engine advantageously include sufficient data within communication URLs or URLs for the transaction engine to properly route data throughout the cryptographic system.

Although the data routing is disclosed with reference to its preferred embodiment a skilled artisan will recognize a wide number of possible data routing solutions or strategies. For example XML or other data packets may advantageously be unpacked and recognized by their format content or the like such that the transaction engine may properly route data throughout the trust engine . Moreover a skilled artisan will recognize that the data routing may advantageously be adapted to the data transfer protocols conforming to particular network systems such as for example when the communication link comprises a local network.

According to yet another embodiment of the invention the transaction engine includes conventional SSL encryption technologies such that the foregoing systems may authenticate themselves and vise versa with transaction engine during particular communications. As will be used throughout this disclosure the term SSL refers to communications where a server but not necessarily the client is SSL authenticated and the term FULL SSL refers to communications where the client and the server are SSL authenticated. When the instant disclosure uses the term SSL the communication may comprise or FULL SSL.

As the transaction engine routes data to the various components of the cryptographic system the transaction engine may advantageously create an audit trail. According to one embodiment the audit trail includes a record of at least the type and format of data routed by the transaction engine throughout the cryptographic system . Such audit data may advantageously be stored in the mass storage .

According to one embodiment the communication from the transaction engine to and from the authentication engine and the cryptographic engine comprises secure communication such as for example conventional SSL technology. In addition as mentioned in the foregoing the data of the communications to and from the depository may be transferred using URLs URLs HTTP or XML documents with any of the foregoing advantageously having data requests and formats embedded therein.

As mentioned above the depository may advantageously comprises a plurality of secure data storage facilities. In such an embodiment the secure data storage facilities may be configured such that a compromise of the security in one individual data storage facility will not compromise the cryptographic keys or the authentication data stored therein. For example according to this embodiment the cryptographic keys and the authentication data are mathematically operated on so as to statistically and substantially randomize the data stored in each data storage facility. According to one embodiment the randomization of the data of an individual data storage facility renders that data undecipherable. Thus compromise of an individual data storage facility produces only a randomized undecipherable number and does not compromise the security of any cryptographic keys or the authentication data as a whole.

According to one embodiment the communications to the authentication engine comprise secure communications such as for example SSL technology. Additionally security can be provided within the trust engine components such as for example super encryption using public key technologies. For example according to one embodiment the user encrypts the current authentication data with the public key of the authentication engine . In addition the depository also encrypts the enrollment authentication data with the public key of the authentication engine . In this way only the authentication engine s private key can be used to decrypt the transmissions.

As shown in the trust engine also includes the cryptographic engine . According to one embodiment the cryptographic engine comprises a cryptographic handling module configured to advantageously provide conventional cryptographic functions such as for example public key infrastructure PKI functionality. For example the cryptographic engine may advantageously issue public and private keys for users of the cryptographic system . In this manner the cryptographic keys are generated at the cryptographic engine and forwarded to the depository such that at least the private cryptographic keys are not available outside of the trust engine . According to another embodiment the cryptographic engine randomizes and splits at least the private cryptographic key data thereby storing only the randomized split data. Similar to the splitting of the enrollment authentication data the splitting process ensures the stored keys are not available outside the cryptographic engine . According to another embodiment the functions of the cryptographic engine can be combined with and performed by the authentication engine .

According to one embodiment communications to and from the cryptographic engine include secure communications such as SSL technology. In addition XML documents may advantageously be employed to transfer data and or make cryptographic function requests.

Although the trust engine is disclosed with reference to its preferred and alternative embodiments the invention is not intended to be limited thereby. Rather a skilled artisan will recognize in the disclosure herein a wide number of alternatives for the trust engine . For example the trust engine may advantageously perform only authentication or alternatively only some or all of the cryptographic functions such as data encryption and decryption. According to such embodiments one of the authentication engine and the cryptographic engine may advantageously be removed thereby creating a more straightforward design for the trust engine . In addition the cryptographic engine may also communicate with a certificate authority such that the certificate authority is embodied within the trust engine . According to yet another embodiment the trust engine may advantageously perform authentication and one or more cryptographic functions such as for example digital signing

According to another embodiment the depository may comprise distinct and physically separated data storage facilities as disclosed further with reference to .

Moreover the nature of biometric data comparisons may result in varying degrees of confidence being produced from the matching of current biometric authentication data to enrollment data. For example unlike a traditional password which may only return a positive or negative match a fingerprint may be determined to be a partial match e.g. a 90 match a 75 match or a 10 match rather than simply being correct or incorrect. Other biometric identifiers such as voice print analysis or face recognition may share this property of probabilistic authentication rather than absolute authentication.

When working with such probabilistic authentication or in other cases where an authentication is considered less than absolutely reliable it is desirable to apply the heuristics to determine whether the level of confidence in the authentication provided is sufficiently high to authenticate the transaction which is being made.

It will sometimes be the case that the transaction at issue is a relatively low value transaction where it is acceptable to be authenticated to a lower level of confidence. This could include a transaction which has a low dollar value associated with it e.g. a 10 purchase or a transaction with low risk e.g. admission to a members only web site .

Conversely for authenticating other transactions it may be desirable to require a high degree of confidence in the authentication before allowing the transaction to proceed. Such transactions may include transactions of large dollar value e.g. signing a multi million dollar supply contract or transaction with a high risk if an improper authentication occurs e.g. remotely logging onto a government computer .

The use of the heuristics in combination with confidence levels and transactions values may be used as will be described below to allow the comparator to provide a dynamic context sensitive authentication system.

According to another embodiment of the invention the comparator may advantageously track authentication attempts for a particular transaction. For example when a transaction fails the trust engine may request the user to re enter his or her current authentication data. The comparator of the authentication engine may advantageously employ an attempt limiter to limit the number of authentication attempts thereby prohibiting brute force attempts to impersonate a user s authentication data. According to one embodiment the attempt limiter comprises a software module monitoring transactions for repeating authentication attempts and for example limiting the authentication attempts for a given transaction to three. Thus the attempt limiter will limit an automated attempt to impersonate an individual s authentication data to for example simply three guesses. Upon three failures the attempt limiter may advantageously deny additional authentication attempts. Such denial may advantageously be implemented through for example the comparator returning a negative result regardless of the current authentication data being transmitted. On the other hand the transaction engine may advantageously block any additional authentication attempts pertaining to a transaction in which three attempts have previously failed.

The authentication engine also includes the data splitting module and the data assembling module . The data splitting module advantageously comprises a software hardware or combination module having the ability to mathematically operate on various data so as to substantially randomize and split the data into portions. According to one embodiment original data is not recreatable from an individual portion. The data assembling module advantageously comprises a software hardware or combination module configured to mathematically operate on the foregoing substantially randomized portions such that the combination thereof provides the original deciphered data. According to one embodiment the authentication engine employs the data splitting module to randomize and split enrollment authentication data into portions and employs the data assembling module to reassemble the portions into usable enrollment authentication data.

The cryptographic engine also comprises a cryptographic handling module configured to perform some or all of a wide number of cryptographic functions. According to one embodiment the cryptographic handling module may comprise software modules or programs hardware or both. According to another embodiment the cryptographic handling module may perform data comparisons data hashing data encryption or decryption digital signature verification or creation digital certificate generation storage or requests cryptographic key generation or the like. Moreover a skilled artisan will recognize from the disclosure herein that the cryptographic handling module may advantageously comprises a public key infrastructure such as Pretty Good Privacy PGP an RSA based public key system or a wide number of alternative key management systems. In addition the cryptographic handling module may perform public key encryption symmetric key encryption or both. In addition to the foregoing the cryptographic handling module may include one or more computer programs or modules hardware or both for implementing seamless transparent interoperability functions.

A skilled artisan will also recognize from the disclosure herein that the cryptographic functionality may include a wide number of functions generally surrounding cryptographic key management systems.

In response to requests for data from the transaction engine the depository system advantageously forwards stored data to the authentication engine and the cryptographic engine . The respective data assembling modules receive the forwarded data and assemble the data into useable formats. On the other hand communications from the authentication engine and the cryptographic engine to the data storage facilities D through D may include the transmission of sensitive data to be stored. For example according to one embodiment the authentication engine and the cryptographic engine may advantageously employ their respective data splitting modules to divide sensitive data into undecipherable portions and then transmit one or more undecipherable portions of the sensitive data to a particular data storage facility.

According to one embodiment each data storage facility D through D comprises a separate and independent storage system such as for example a directory server. According to another embodiment of the invention the depository system comprises multiple geographically separated independent data storage systems. By distributing the sensitive data into distinct and independent storage facilities D through D some or all of which may be advantageously geographically separated the depository system provides redundancy along with additional security measures. For example according to one embodiment only data from two of the multiple data storage facilities D through D are needed to decipher and reassemble the sensitive data. Thus as many as two of the four data storage facilities D through D may be inoperative due to maintenance system failure power failure or the like without affecting the functionality of the trust engine . In addition because according to one embodiment the data stored in each data storage facility is randomized and undecipherable compromise of any individual data storage facility does not necessarily compromise the sensitive data. Moreover in the embodiment having geographically separation of the data storage facilities a compromise of multiple geographically remote facilities becomes increasingly difficult. In fact even a rouge employee will be greatly challenged to subvert the needed multiple independent geographically remote data storage facilities.

Although the depository system is disclosed with reference to its preferred and alternative embodiments the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein a wide number of alternatives for the depository system . For example the depository system may comprise two or more data storage facilities. In addition sensitive data may be mathematically operated 25 such that portions from two or more data storage facilities are needed to reassemble and decipher the sensitive data.

As mentioned in the foregoing the authentication engine and the cryptographic engine each include a data splitting module and respectively for splitting sensitive data such as for example the authentication data and the cryptographic key data. illustrates a flowchart of a data splitting process performed by the data splitting module according to aspects of an embodiment of the invention. As shown in the data splitting process begins at step when sensitive data S is received by the data splitting module of the authentication engine or the cryptographic engine . Preferably in step the data splitting module then generates a substantially random number value or string or set of bits A. For example the random number A may be generated in a wide number of varying conventional techniques available to one of ordinary skill in the art for producing high quality random numbers suitable for use in cryptographic applications. In addition according to one embodiment the random number A comprises a bit length equal to the bit length of the sensitive data S.

In addition in step the data splitting process generates another statistically random number C. According to the preferred embodiment the generation of the statistically random numbers A and C may advantageously be done in parallel. The data splitting module then combines the numbers A and C with the sensitive data S such that new numbers B and D are generated. For example number B may comprise the binary combination of A XOR S and number D may comprise the binary combination of C XOR S. The foregoing combinations preferably occur in steps and respectively and according to one embodiment the foregoing combinations also occur in parallel. The data splitting process then proceeds to step where the random numbers A and C and the numbers B and D are paired such that none of the pairings contain sufficient data by themselves to reorganize and decipher the original sensitive data S. For example the numbers may be paired as follows AC AD BC and BD. According to one embodiment each of the foregoing pairings is distributed to one of the depositories D through D of . According to another embodiment each of the foregoing pairings is randomly distributed to one of the depositories D through D. For example during a first data splitting process the pairing AC may be sent to depository D through for example a random selection of D s IP address. Then during a second data splitting process the pairing AC may be sent to depository D through for example a random selection of D s IP address.

Based on the foregoing the data splitting process advantageously places portions of the sensitive data in each of the four data storage facilities D through D such that no single data storage facility D through D includes sufficient encrypted data to recreate the original sensitive data S. As mentioned in the foregoing such randomization of the data into individually unusable encrypted portions increases security and provides for maintained trust in the data even if one of the data storage facilities D through D is compromised.

Although the data splitting process is disclosed with reference to its preferred embodiment the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein a wide number of alternatives for the data splitting process . For example the data splitting process may advantageously Split the data into two numbers for example random number A and number B and randomly distribute A and B through two data storage facilities. Moreover the data splitting process may advantageously split the data among a wide number of data storage facilities through generation of an additional random numbers.

As mentioned in the foregoing in order to recreate the sensitive data S the data portions need to be derandomized and reorganized. This process may advantageously occur in the data assembling modules and of the authentication engine and the cryptographic engine respectively. The data assembling module for example data assembly module receives data portions from the data storage facilities D through D and reassembles the data into useable form. For example according to one embodiment where the data splitting module employed the data splitting process of the data assembling module uses data portions from at least two of the data storage facilities D through D to recreate the sensitive data S. For example the pairings of AC AD BC and BD were distributed such that any two provide one of A and B or C and D. Noting that S A XOR B or S C XOR D indicates that when the data assembling module receives one of A and B or C and D the data assembling module can advantageously reassemble the sensitive data S. Thus the data assembling module may assemble the sensitive data S when for example it receives data portions from at least the first two of the data storage facilities D through D to respond to an assemble request by the trust engine .

Based on the above data splitting and assembling processes the sensitive data S exists in usable format only in a limited area of the trust engine . For example when the sensitive data S includes enrollment authentication data usable nonrandomized enrollment authentication data is available only in the authentication engine Likewise when the sensitive data S includes private cryptographic key data usable nonrandomized private cryptographic key data is available only in the cryptographic engine .

Although the data splitting and assembling processes are disclosed with reference to their preferred embodiments the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein a wide number of alternatives for splitting and reassembling the sensitive data S. For example public key encryption may be used to further secure the data at the data storage facilities D through D.

According to one embodiment the user performs a single enrollment during step of the enrollment process . For example the user enrolls himself or herself as a particular person such as Joe User. When Joe User desires to enroll as Joe User CEO of Mega Corp. then according to this embodiment Joe User enrolls a second time receives a second unique user ID and the trust engine does not associate the two identities. According to another embodiment of the invention the enrollment process provides for multiple user identities for a single user ED. Thus in the above example the trust engine will advantageously associate the two identities of Joe User. As will be understood by a skilled artisan from the disclosure herein a user may have many identities for example Joe User the head of household Joe User the member of the Charitable Foundations and the like. Even though the user may have multiple identities according to this embodiment the trust engine preferably stores only one set of enrollment data. Moreover users may advantageously add edit update or delete identities as they are needed.

Although the enrollment process is disclosed with reference to its preferred embodiment the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein a wide number of alternatives for gathering of enrollment data and in particular enrollment authentication data. For example the applet may be common object model COM based applet or the like.

On the other hand the enrollment process may include graded enrollment. For example at a lowest level of enrollment the user may enroll over the communication link without producing documentation as to his or her identity. According to an increased level of enrollment the user enrolls using a trusted third party such as a digital notary. For example and the user may appear in person to the trusted third party produce credentials such as a birth certificate driver s license military ID or the like and the trusted third party may advantageously include for example their digital signature in enrollment submission. The trusted third party may include an actual notary a government agency such as the Post Office or Department of Motor Vehicles a human resources person in a large company enrolling an employee or the like. A skilled artisan will understand from the disclosure herein that a wide number of varying levels of enrollment may occur during the enrollment process .

After receiving the enrollment authentication data at step the transaction engine using conventional FULL SSL technology forwards the enrollment authentication data to the authentication engine . In step the authentication engine decrypts the enrollment authentication data using the private key of the authentication engine . In addition the authentication engine employs the data splitting module to mathematically operate on the enrollment authentication data so as to split the data into at least two independently undecipherable randomized numbers. As mentioned in the foregoing the at least two numbers may comprise a statistically random number and a binary XOR ed number. In step the authentication engine forwards each portion of the randomized numbers to one of the data storage facilities D through D. As mentioned in the foregoing the authentication engine may also advantageously randomize which portions are transferred to which depositories.

Often during the enrollment process the user will also desire to have a digital certificate issued such that he or she may receive encrypted documents from others outside the cryptographic system . As mentioned in the foregoing the certificate authority generally issues digital certificates according to one or more of several conventional standards. Generally the digital certificate includes a public key of the user or system which is known to everyone.

Whether the user requests a digital certificate at enrollment or at another time the request is transferred through the trust engine to the authentication engine . According to one embodiment the request includes an XML document having for example the proper name of the user. According to step the authentication engine transfers the request to the cryptographic engine instructing the cryptographic engine to generate a cryptographic key or key pair.

Upon request at step the cryptographic engine generates at least one cryptographic key. According to one embodiment the cryptographic handling module generates a key pair where one key is used as a private key and one is used as a public key. The cryptographic engine stores the private key and according to one embodiment a copy of the public key. In step the cryptographic engine transmits a request for a digital certificate to the transaction engine . According to one embodiment the request advantageously includes a standardized request such as PKCS embedded in for example and XML document. The request for a digital certificate may advantageously correspond to one or more certificate authorities and the one or more standard formats the certificate authorities require.

In step the transaction engine forwards this request to the certificate authority who in step returns a digital certificate. The return digital certificate may advantageously be in a standardized format such as PKCS7 or in a proprietary format of one or more of the certificate authorities . In step the digital certificate is received by the transaction engine and a copy is forwarded to the user and a copy is stored with the trust engine . The trust engine stores a copy of the certificate such that the trust engine will not need to rely on the availability of the certificate authority . For example when the user desires to send a digital certificate or a third party requests the user s digital certificate the request for the digital certificate is typically sent to the certificate authority . However if the certificate authority is conducting maintenance or has been victim of a failure or security compromise the digital certificate may not be available.

At any time after issuing the cryptographic keys the cryptographic engine may advantageously employ the data splitting process described above such that the cryptographic keys are split into independently undecipherable randomized numbers. Similar to the authentication data at step the cryptographic engine transfers the randomized numbers to the data storage facilities D through D.

A skilled artisan will recognize from the disclosure herein that the user may request a digital certificate anytime after enrollment. Moreover the communications between systems may advantageously include FULL SSL or public key encryption technologies. Moreover the enrollment process may issue multiple digital certificates from multiple certificate authorities including one or more proprietary certificate authorities internal or external to the trust engine .

As disclosed in steps through one embodiment of the invention includes the request for a certificate that is eventually stored on the trust engine . Because according to one embodiment the cryptographic handling module issues the keys used by the trust engine each certificate corresponds to a private key. Therefore the trust engine may advantageously provide for interoperability through monitoring the certificates owned by or associated with a user. For example when the cryptographic engine receives a request for a cryptographic function the cryptographic handling module may investigate the certificates owned by the requesting user to determine whether the user owns a private key matching the attributes of the request. When such a certificate exists the cryptographic handling module may use the certificate or the public or private keys associated therewith to perform the requested function. When such a certificate does not exist the cryptographic handling module may advantageously and transparently perform a number of actions to attempt to remedy the lack of an appropriate key. For example illustrates a flowchart of an interoperability process which according to aspects of an embodiment of the invention discloses the foregoing steps to ensure the cryptographic handling module performs cryptographic functions using appropriate keys.

As shown in the interoperability process begins with step where the cryptographic handling module determines the type of certificate desired. According to one embodiment of the invention the type of certificate may advantageously be specified in the request for cryptographic functions or other data provided by the requestor. According to another embodiment the certificate type may be ascertained by the data format of the request. For example the cryptographic handling module may advantageously recognize the request corresponds to a particular type.

According to one embodiment the certificate type may include one or more algorithm standards for example RSA ELGAMAL or the like. In addition the certificate type may include one or more key types such as symmetric keys public keys strong encryption keys such as 256 bit keys less secure keys or the like. Moreover the certificate type may include upgrades or replacements of one or more of the foregoing algorithm standards or keys one or more message or data formats one or more data encapsulation or encoding schemes such as Base 32 or Base 64. The certificate type may also include compatibility with one or more third party cryptographic applications or interfaces one or more communication protocols or one or more certificate standards or protocols. A skilled artisan will recognize from the disclosure herein that other differences may exist in certificate types and translations to and from those differences may be implemented as disclosed herein.

Once the cryptographic handling module determines the certificate type the interoperability process proceeds to step and determines whether the user owns a certificate matching the type determined in step . When the user owns a matching certificate for example the trust engine has access to the matching certificate through for example prior storage thereof the cryptographic handling module knows that a matching private key is also stored within the trust engine . For example the matching private key may be stored within the depository or depository system . The cryptographic handling module may advantageously request the matching private key be assembled from for example the depository and then in step use the matching private key to perform cryptographic actions or functions. For example as mentioned in the foregoing the cryptographic handling module may advantageously perform hashing hash comparisons data encryption or decryption digital signature verification or creation or the like.

When the user does not own a matching certificate the interoperability process proceeds to step where the cryptographic handling module determines whether the users owns a cross certified certificate. According to one embodiment cross certification between certificate authorities occurs when a first certificate authority determines to trust certificates from a second certificate authority. In other words the first certificate authority determines that certificates from the second certificate authority meets certain quality standards and therefore may be certified as equivalent to the first certificate authority s own certificates. Cross certification becomes more complex when the certificate authorities issue for example certificates having levels of trust. For example the first certificate authority may provide three levels of trust for a particular certificate usually based on the degree of reliability in the enrollment process while the second certificate authority may provide seven levels of trust. Cross certification may advantageously track which levels and which the certificates from the second certificate authority may be substituted for which levels and which certificates from the first. When the foregoing cross certification is done officially and publicly between two certification authorities the mapping of certificates and levels to one another is often called chaining. 

According to another embodiment of the invention the cryptographic handling module may advantageously develop cross certifications outside those agreed upon by the certificate authorities. For example the cryptographic handling module may access a first certificate authority s certificate practice statement CPS or other published policy statement and using for example the authentication tokens required by particular trust levels match the first certificate authority s certificates to those of another certificate authority.

When in step the cryptographic handling module determines that the users owns a cross certified certificate the interoperability process proceeds to step and performs the cryptographic action or function using the cross certified public key private key or both. Alternatively when the cryptographic handling module determines that the users does not own a cross certified certificate the interoperability process proceeds to step where the cryptographic handling module selects a certificate authority that issues the requested certificate type or a certificate cross certified thereto. In step the cryptographic handling module determines whether the user enrollment authentication data discussed in the foregoing meets the authentication requirements of the chosen certificate authority. For example if the user enrolled over a network by for example answering demographic and other questions the authentication data provided may establish a lower level of trust than a user providing biometric data and appearing before a third party such as for example a notary. According to one embodiment the foregoing authentication requirements may advantageously be provided in the chosen authentication authority s CPS.

When the user has provided the trust engine with enrollment authentication data meeting the requirements of chosen certificate authority the interoperability process proceeds to step where the cryptographic handling module acquires the certificate from the chosen certificate authority. According to one embodiment the cryptographic handling module acquires the certificate by following steps through of the enrollment process . For example the cryptographic handling module may advantageously employ one or more public keys from one or more of the key pairs already available to the cryptographic engine to request the certificate from the certificate authority. According to another embodiment the cryptographic handling module may advantageously generate one or more new key pairs and use the public keys corresponding thereto to request the certificate from the certificate authority.

According to another embodiment the trust engine may advantageously include one or more certificate issuing modules capable of issuing one or more certificate types. According to this embodiment the certificate issuing module may provide the foregoing certificate. When the cryptographic handling module acquires the certificate the interoperability process proceeds to step and performs the cryptographic action or function using the public key private key or both corresponding to the acquired certificate.

When the user in step has not provided the trust engine with enrollment authentication data meeting the requirements of chosen certificate authority the cryptographic handling module determines in step whether there are other certificate authorities that have different authentication requirements. For example the cryptographic handling module may look for certificate authorities having lower authentication requirements but still issue the chosen certificates or cross certifications thereof.

When the foregoing certificate authority having lower requirements exists the interoperability process proceeds to step and chooses that certificate authority. Alternatively when no such certificate authority exists in step the trust engine may request additional authentication tokens from the user. For example the trust engine may request new enrollment authentication data comprising for example biometric data. Also the trust engine may request the user appear before a trusted third party and provide appropriate authenticating credentials such as for example appearing before a notary with a drivers license social security card bank card birth certificate military ID or the like. When the trust engine receives updated authentication data the interoperability process proceeds to Step and acquires the foregoing chosen certificate.

Through the foregoing interoperability process the cryptographic handling module advantageously provides seamless transparent translations and conversions between differing cryptographic systems. A skilled artisan will recognize from the disclosure herein a wide number of advantages and implementations of the foregoing interoperable system. For example the foregoing step of the interoperability process may advantageously include aspects of trust arbitrage discussed in further detail below where the certificate authority may under special circumstances accept lower levels of cross certification. In addition the interoperability process may include ensuring interoperability between and employment of standard certificate revocations such as employing certificate revocation lists CRL online certificate status protocols OCSP or the like.

The authentication request may advantageously include what level of authentication is needed for a particular transaction. For example the vendor may specify a particular level of confidence that is required for the transaction at issue if authentication cannot be made to this level of confidence as will be discussed below the transaction will not occur without either further authentication by the user to raise the level of confidence or a change in the terms of the authentication between the vendor and the server. These issues are discussed more completely below.

According to one embodiment the transaction ID and the authentication request may advantageously generated by a vendor side applet or other software program. In addition the transmission of the transaction ID and authentication data may include one or more XML documents encrypted using conventional SSL technology such as for example SSL or in other words vendor side authenticated SSL.

After the user system receives the transaction ID and authentication request the user system gathers the current authentication data potentially including current biometric information from the user. The user system at step encrypts at least the current authentication data B and the transaction ID with the public key of the authentication engine and transfers that data to the trust engine . The transmission preferably comprises XML documents encrypted with at least conventional A SSL technology. In step the transaction engine receives the transmission preferably recognizes the data format or request in the URL or URI and forwards the transmission to the authentication engine .

During steps and the vendor system at step forwards the transaction ID and the authentication request to the trust engine using the preferred FULL SSL technology. This communication may also include a vendor ID although vendor identification may also be communicated through a non random portion of the transaction ID. At steps and the transaction engine receives the communication creates a record in the audit trail and generates a request for the user s enrollment authentication data to be assembled from the data storage facilities D through D. At step the depository system transfers the portions of the enrollment authentication data corresponding to the user to the authentication engine . At step the authentication engine decrypts the transmission using its private key and compares the enrollment authentication data to the current authentication data provided by the user.

The comparison of step may advantageously apply heuristical context sensitive authentication as referred to in the forgoing and discussed in further detail below. For example if the biometric information received does not match perfectly a lower confidence match results. In particular embodiments the level of confidence of the authentication is balanced against the nature of the transaction and the desires of both the user and the vendor. Again this is discussed in greater detail below.

At step the authentication engine fills in the authentication request with the result of the comparison of step . According to one embodiment of the invention the authentication request is filled with a YES NO or TRUE FALSE result of the authentication process . In step the filled in authentication request is returned to the vendor for the vendor to act upon for example allowing the user to complete the transaction that initiated the authentication request. According to one embodiment a confirmation message is passed to the user.

Based on the foregoing the authentication process advantageously keeps sensitive data secure and produces results configured to maintain the integrity of the sensitive data. For example the sensitive data is assembled only inside the authentication engine . For example the enrollment authentication data is undecipherable until it is assembled in the authentication engine by the data assembling module and the current authentication data is undecipherable until it is unwrapped by the conventional SSL technology and the private key of the authentication engine . Moreover the authentication result transmitted to the vendor does not include the sensitive data and the user may not even know whether he or she produced valid authentication data.

Although the authentication process is disclosed with reference to its preferred and alternative embodiments the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein a wide number of alternatives for the authentication process . For example the vendor may advantageously be replaced by almost any requesting application even those residing with the user system . For example a client application such as Microsoft Word may use an application program interface API or a cryptographic API CAPI to request authentication before unlocking a document. Alternatively a mail server a network a cellular phone a personal or mobile computing device a workstation or the like may all make authentication requests that can be filled by the authentication process . In fact after providing the foregoing trusted authentication process the requesting application or device may provide access to or use of a wide number of electronic or computer devices or systems.

Moreover the authentication process may employ a wide number of alternative procedures in the event of authentication failure. For example authentication failure may maintain the same transaction ID and request that the user reenter his or her current authentication data. As mentioned in the foregoing use of the same transaction ID allows the comparator of the authentication engine to monitor and limit the number of authentication attempts for a particular transaction thereby creating a more secure cryptographic system . In addition the authentication process may be advantageously be employed to develop elegant single sign on solutions such as unlocking a sensitive data vault. For example successful or positive authentication may provide the authenticated user the ability to automatically access any number of passwords for an almost limitless number of systems and applications. For example authentication of a user may provide the user access to password login financial credentials or the like associated with multiple online vendors a local area network various personal computing devices Internet service providers auction providers investment brokerages or the like. By employing a sensitive data vault users may choose truly large and random passwords because they no longer need to remember them through association. Rather the authentication process provides access thereto. For example a user may choose a random alphanumeric string that is twenty plus digits in length rather than something associated with a memorable data name etc.

According to one embodiment a sensitive data vault associated with a given user may advantageously be stored in the data storage facilities of the depository or split and stored in the depository system . According to this embodiment after positive user authentication the trust engine serves the requested sensitive data such as for example to the appropriate password to the requesting application. According to another embodiment the trust engine may include a separate system for storing the sensitive data vault. For example the trust engine may include a stand alone software engine implementing the data vault functionality and figuratively residing behind the foregoing front end security system of the trust engine . According to this embodiment the software engine serves the requested sensitive data after the software engine receives a signal indicating positive user authentication from the trust engine .

In yet another embodiment the data vault may be implemented by a third party system. Similar to the software engine embodiment the third party system may advantageously serve the requested sensitive data after the third party system receives a signal indicating positive user authentication from the trust engine . According to yet another embodiment the data vault may be implemented on the user system . A user side software engine may advantageously serve the foregoing data after receiving a signal indicating positive user authentication from the trust engine .

Although the foregoing data vaults are disclosed with reference to alternative embodiments a skilled artisan will recognize from the disclosure herein a wide number of additional implementations thereof. For example a particular data vault may include aspects from some or all of the foregoing embodiments. In addition any of the foregoing data vaults may employ one or more authentication requests at varying times. For example any of the data vaults may require authentication every one or more transactions periodically every one or more sessions every access to one or more Webpages or Websites at one or more other specified intervals or the like.

As shown in during the authentication steps the user and vendor may advantageously agree on a message such as for example a contract. During signing the signing process advantageously ensures that the contract signed by the user is identical to the contract supplied by the vendor. Therefore according to one embodiment during authentication the vendor and the user include a hash of their respective copies of the message or contract in the data transmitted to the authentication engine . By employing only a hash of a message or contract the trust engine may advantageously store a significantly reduced amount of data providing for a more efficient and cost effective cryptographic system. In addition the stored hash may be advantageously compared to a hash of a document in question to determine whether the document in question matches one signed by any of the parties. The ability to determine whether the document is identical to one relating to a transaction provides for additional evidence that can be used against a claim for repudiation by a party to a transaction.

In step the authentication engine assembles the enrollment authentication data and compares it to the current authentication data provided by the user. When the comparator of the authentication engine indicates that the enrollment authentication data matches the current authentication data the comparator of the authentication engine also compares the hash of the message supplied by the vendor to the hash of the message supplied by the user. Thus the authentication engine advantageously ensures that the message agreed to by the user is identical to that agreed to by the vendor.

In step the authentication engine transmits a digital signature request to the cryptographic engine . According to one embodiment of the invention the request includes a hash of the message or contract. However a skill artisan will recognize from the disclosure herein that the cryptographic engine may encrypt virtually any text to form the desired digital signature. Returning to step the digital signature request preferably comprises an XML document communicated through conventional SSL technologies.

In step the authentication engine transmits a request to each of the data storage facilities D through D such that each of the data storage facilities D through D transmit their respective portion of the cryptographic key or keys corresponding to a signing party. According to another embodiment the cryptographic engine employs some or all of the steps of the interoperability process discussed in the foregoing such that the cryptographic engine first determines the appropriate key or keys to request from the depository or the depository system for the signing party and takes actions to provide appropriate matching keys. According to still another embodiment the authentication engine or the cryptographic engine may advantageously request one or more of the keys associated with the signing party and stored in the depository or depository system .

According to one embodiment the signing party includes one or both the user and the vendor. In such case the authentication engine advantageously requests the cryptographic keys corresponding to the user and or the vendor. According to another embodiment the signing party includes the trust engine . In this embodiment the trust engine is certifying that the authentication process properly authenticated the user vendor or both. Therefore the authentication engine requests the cryptographic key of the trust engine such as for example the key belonging to the cryptographic engine to perform the digital signature. According to another embodiment the trust engine performs a digital notary like function. In this embodiment the signing party includes the user vendor or both along with the trust engine . Thus the trust engine provides the digital signature of the user and or vendor and then indicates with its own digital signature that the user and or vendor were properly authenticated. In this embodiment the authentication engine may advantageously request assembly of the cryptographic keys corresponding to the user the vendor or both. According to another embodiment the authentication engine may advantageously request assembly of the cryptographic keys corresponding to the trust engine .

According to another embodiment the trust engine performs power of attorney like functions. For example the trust engine may digitally sign the message on behalf of a third party. In such case the authentication engine requests the cryptographic keys associated with the third party. According to this embodiment the signing process may advantageously include authentication of the third party before allowing power of attorney like functions. In addition the authentication process may include a check for third party constraints such as for example business logic or the like dictating when and in what circumstances a particular third party s signature may be used.

Based on the foregoing in step the authentication engine requested the cryptographic keys from the data storage facilities D through D corresponding to the signing party. In step the data storage facilities D through D transmit their respective portions of the cryptographic key corresponding to the signing party to the cryptographic engine . According to one embodiment the foregoing transmissions include SSL technologies. According to another embodiment the foregoing transmissions may advantageously be super encrypted with the public key of the cryptographic engine .

In step the cryptographic engine assembles the foregoing cryptographic keys of the signing party and encrypts the message therewith thereby fanning the digital signature s . In step of the signing process the cryptographic engine transmits the digital signature s to the authentication engine . In step the authentication engine transmits the filled in authentication request along with a copy of the hashed message and the digital signature s to the transaction engine . In step the transaction engine transmits a receipt comprising the transaction ID an indication of whether the authentication was successful and the digital signature s to the vendor. According to one embodiment the foregoing transmission may advantageously include the digital signature of the trust engine . For example the trust engine may encrypt the hash of the receipt with its private key thereby forming a digital signature to be attached to the transmission to the vendor.

According to one embodiment the transaction engine also transmits a confirmation message to the user.

Although the signing process is disclosed with reference to its preferred and alternative embodiments the invention is not intended to be limited thereby. Rather a skilled artisan will recognize from the disclosure herein a wide number of alternatives for the signing process . For example the vendor may be replaced with a user application such as an email application. For example the user may wish to digitally sign a particular email with his or her digital signature. In such an embodiment the transmission throughout the signing process may advantageously include only one copy of a hash of the message. Moreover a skilled artisan will recognize from the disclosure herein that a wide number of client applications may request digital signatures. For example the client applications may comprise word processors spreadsheets emails voicemail access to restricted system areas or the like.

In addition a skilled artisan will recognize from the disclosure herein that steps through of the signing process may advantageously employ some or all of the steps of the interoperability process of thereby providing interoperability between differing cryptographic systems that may for example need to process the digital signature under differing signature types.

Returning to the decryption process after the user has been authenticated in step the authentication engine forwards the encrypted session key to the cryptographic engine . In step the authentication engine forwards a request to each of the data storage facilities D through D requesting the cryptographic key data of the user. In step each data storage facility D through D transmits their respective portion of the cryptographic key to the cryptographic engine . According to one embodiment the foregoing transmission is encrypted with the public key of the cryptographic engine .

In step of the decryption process the cryptographic engine assembles the cryptographic key and decrypts the session key therewith. In step the cryptographic engine forwards the session key to the authentication engine . In step the authentication engine fills in the authentication request including the decrypted session key and transmits the filled in authentication request to the transaction engine . In step the transaction engine forwards the authentication request along with the session key to the requesting application or vendor. Then according to one embodiment the requesting application or vendor uses the session key to decrypt the encrypted message.

Although the decryption process is disclosed with reference to its preferred and alternative embodiments a skilled artisan will recognize from the disclosure herein a wide number of alternatives for the decryption process . For example the decryption process may forego synchronous key encryption and rely on full public key technology. In such an embodiment the requesting application may transmit the entire message to the cryptographic engine or may employ some type of compression or reversible hash in order to transmit the message to the cryptographic engine . A skilled artisan will also recognize from the disclosure herein that the foregoing communications may advantageously include XML documents wrapped in SSL technology.

The encryption decryption process also provides for encryption of documents or other data. Thus in step a requesting application or vendor may advantageously transmit to the transaction engine of the 35 trust engine a request for the public key of the user. The requesting application or vendor makes this request because the requesting application or vendor uses the public key of the user for example to encrypt the session key that will be used to encrypt the document or message. As mentioned in the enrollment process the transaction engine stores a copy of the digital certificate of the user for example in the mass storage . Thus in step of the encryption process the transaction engine requests the digital certificate of the user from the mass storage . In step the mass storage transmits the digital certificate corresponding to the user to the transaction engine . In step the transaction engine transmits the digital certificate to the requesting application or vendor. According to one embodiment the encryption portion of the encryption process does not include the authentication of a user. This is because the requesting vendor needs only the public key of the user and is not requesting any sensitive data.

A skilled artisan will recognize from the disclosure herein that if a particular user does not have a digital certificate the trust engine may employ some or all of the enrollment process in order to generate a digital certificate for that particular user. Then the trust engine may initiate the encryption decryption process and thereby provide the appropriate digital certificate. In addition a skilled artisan will recognize from the disclosure herein that steps and through of the encryption decryption process may advantageously employ some or all of the steps of the interoperability process of thereby providing interoperability between differing cryptographic systems that may for example need to process the encryption.

According to one embodiment of the invention each of the trust engines and are geographically separated such that for example the trust engine may reside in a first location the trust engine may reside in a second location the trust engine may reside in a third location and the trust engine may reside in a fourth location. The foregoing geographic separation advantageously decreases system response time while increasing the security of the overall trust engine system .

For example when a user logs onto the cryptographic system the user may be nearest the first location and may desire to be authenticated. As described with reference to to be authenticated the user provides current authentication data such as a biometric or the like and the current authentication data is compared to that user s enrollment authentication data. Therefore according to one example the user advantageously provides current authentication data to the geographically nearest trust engine . The transaction engine of the trust engine then forwards the current authentication data to the authentication engine also residing at the first location. According to another embodiment the transaction engine forwards the current authentication data to one or more of the authentication engines of the trust engines or .

The transaction engine also requests the assembly of the enrollment authentication data from the depositories of for example each of the trust engines through . According to this embodiment each depository provides its portion of the enrollment authentication data to the authentication engine of the trust engine . The authentication engine then employs the encrypted data portions from for example the first two depositories to respond and assembles the enrollment authentication data into deciphered form. The authentication engine compares the enrollment authentication data with the current authentication data and returns an authentication result to the transaction engine of the trust engine .

Based on the above the trust engine system employs the nearest one of a plurality of geographically separated trust engines through to perform the authentication process. According to one embodiment of the invention the routing of information to the nearest transaction engine may advantageously be performed at client side applets executing on one or more of the user system vendor system or certificate authority . According to an alternative embodiment a more sophisticated decision process may be employed to select from the trust engines through . For example the decision may be based on the availability operability speed of connections load performance geographic proximity or a combination thereof of a given trust engine.

In this way the trust engine system lowers its response time while maintaining the security advantages associated with geographically remote data storage facilities such as those discussed with reference to where each data storage facility stores randomized portions of sensitive data. For example a security compromise at for example the depository of the trust engine does not necessarily compromise the sensitive data of the trust engine system . This is because the depository contains only non decipherable randomized data that without more is entirely useless.

According to another embodiment the trust engine system may advantageously include multiple cryptographic engines arranged similar to the authentication engines. The cryptographic engines may advantageously performs cryptographic functions such as those disclosed with reference to . According to yet another embodiment the trust engine system may advantageously replace the multiple authentication engines with multiple cryptographic engines thereby performing cryptographic functions such as those disclosed with reference to . According to yet another embodiment of the invention the trust engine system may replace each multiple authentication engine with an engine having some or all of the functionality of the authentication engines cryptographic engines or both as disclosed in the foregoing.

Although the trust engine system is disclosed with reference to its preferred and alternative embodiments a skilled artisan will recognize that the trust engine system may comprise portions of trust engines through . For example the trust engine system may include one or more transaction engines one or more depositories one or more authentication engines or one or more cryptographic engines.

Based on the foregoing the redundancy module determines an authentication result from data received from authentication engines that are preferably geographically remote from the trust engine of that the redundancy module. By providing such redundancy functionality the trust engine system ensures that a compromise of the authentication engine of one of the trust engines through is insufficient to compromise the authentication result of the redundancy module of that particular trust engine. A skilled artisan will recognize that redundancy module functionality of the trust engine system may also be applied to the cryptographic engine of each of the trust engines through . However such cryptographic engine communication was not shown in to avoid complexity. Moreover a skilled artisan will recognize a wide number of alternative authentication result conflict resolution algorithms for the comparator of .

According to yet another embodiment of the invention the trust engine system may advantageously employ the redundancy module during cryptographic comparison steps. For example some or all of the foregoing redundancy module disclosure with reference to may advantageously be implemented during a hash comparison of documents provided by one or more parties during a particular transaction.

Although the foregoing invention has been described in terms of certain preferred and alternative embodiments other embodiments will be apparent to those of ordinary skill in the art from the disclosure herein. For example the trust engine may issue short term certificates where the private cryptographic key is released to the user for a predetermined period of time. For example current certificate standards include a validity field that can be set to expire after a predetermined amount of time. Thus the trust engine may release a private key to a user where the private key would be valid for for example 24 hours. According to such an embodiment the trust engine may advantageously issue a new cryptographic key pair to be associated with a particular user and then release the private key of the new cryptographic key pair. Then once the private cryptographic key is released the trust engine immediately expires any internal valid use of such private key as it is no longer securable by the trust engine .

In addition a skilled artisan will recognize that the cryptographic system or the trust engine may include the ability to recognize types of devices such as a laptop a cell phone a network or the like. According to one embodiment such recognition may come from data supplied in the request for a particular service such as a request for authentication leading to access or use a request for cryptographic functionality or the like. According to one embodiment the foregoing request may include a unique device identifier such as for example a processor ID. Alternatively the request may include data in a particular recognizable data format. For example mobile and satellite phones often do not include the processing power for full X509.v3 heavy encryption certificates and therefore do not request them. According to this embodiment the trust engine may recognize the type of data format presented and respond only in kind

In an additional aspect of the system described above context sensitive authentication can be provided using various techniques as will be described below. Context sensitive authentication for example as shown in provides the possibility of evaluating not only the actual data which is sent by the user when attempting to authenticate himself but also the circumstances surrounding the generation and delivery of that data. Such techniques may also support transaction specific trust arbitrage between the user and trust engine or between the vendor and trust engine as will be described below.

As discussed above authentication is the process of proving that a user is who he says he is. Generally authentication requires demonstrating some fact to an authentication authority. The trust engine of the present invention represents the authority to which a user must authenticate himself. The user must demonstrate to the trust engine that he is who he says he is by either knowing something that only the user should know knowledge based authentication having something that only the user should have token based authentication or by being something that only the user should be biometric based authentication .

Examples of knowledge based authentication include without limitation a password PIN number or lock combination. Examples of token based authentication include without limitation a house key a physical credit card a driver s license or a particular phone number. Examples of biometric based authentication include without limitation a fingerprint a voice analysis or a retinal scan.

Each type of authentication has particular advantages and disadvantages and each provides a different level of security. For example it is generally harder to create a false fingerprint that matches someone else s than it is to overhear someone s password and repeat it. Each type of authentication also requires a different type of data to be known to the authenticating authority in order to verify someone using that form of authentication.

As used herein authentication will refer broadly to the overall process of verifying someone s identity to be who he says he is. An authentication technique will refer to a particular type of authentication based upon a particular piece of knowledge physical token or biometric reading. Authentication data refers to information which is sent to or otherwise demonstrated to an authentication authority in order to establish identity. Enrollment data will refer to the data which is initially submitted to an authentication authority in order to establish a baseline for comparison with authentication data. An authentication instance will refer to the data associated with an attempt to authenticate by an authentication technique.

The internal protocols and communications involved in the process of authenticating a user is described with reference to above. The part of this process within which the context sensitive authentication takes place occurs within the comparison step shown as step of . This step takes place within the authentication engine and involves assembling the enrollment data retrieved from the depository and comparing the authentication data provided by the user to it. One particular embodiment of this process is shown in and described below.

The current authentication data provided by the user and the enrollment data retrieved from the depository are received by the authentication engine in step of . Both of these sets of data may contain data which is related to separate techniques of authentication. The authentication engine separates the authentication data associated with each individual authentication instance in step . This is necessary so that the authentication data is compared with the appropriate subset of the enrollment data for the user e.g. fingerprint authentication data should be compared with fingerprint enrollment data rather than password enrollment data .

Generally authenticating a user involves one or more individual authentication instances depending on which authentication techniques are available to the user. These methods are limited by the enrollment data which were provided by the user during his enrollment process if the user did not provide a retinal scan when enrolling he will not be able to authenticate himself using a retinal scan as well as the means which may be currently available to the user e.g. if the user does not have a fingerprint reader at his current location fingerprint authentication will not be practical . In some cases a single authentication instance may be sufficient to authenticate a user however in certain circumstances a combination of multiple authentication instances may be used in order to more confidently authenticate a user for a particular transaction.

Each authentication instance consists of data related to a particular authentication technique e.g. fingerprint password smart card etc. and the circumstances which surround the capture and delivery of the data for that particular technique. For example a particular instance of attempting to authenticate via password will generate not only the data related to the password itself but also circumstantial data known as metadata related to that password attempt. This circumstantial data includes information such as the time at which the particular authentication instance took place the network address from which the authentication information was delivered as well as any other information as is known to those of skill in the art which may be determined about the origin of the authentication data the type of connection the processor serial number etc. .

In many cases only a small amount of circumstantial metadata will be available. For example if the user is located on a network which uses proxies or network address translation or another technique which masks the address of the originating computer only the address of the proxy or router may be determined. Similarly in many cases information such as the processor serial number will not be available because of either limitations of the hardware or operating system being used disabling of such features by the operator of the system or other limitations of the connection between the user s system and the trust engine .

As shown in once the individual authentication instances represented within the authentication data are extracted and separated in step the authentication engine evaluates each instance for its reliability in indicating that the user is who he claims to be. The reliability for a single authentication instance will generally be determined based on several factors. These may be grouped as factors relating to the reliability associated with the authentication technique which are evaluated in step and factors relating to the reliability of the particular authentication data provided which are evaluated in step . The first group includes without limitation the inherent reliability of the authentication technique being used and the reliability of the enrollment data being used with that method. The second group includes without limitation the degree of match between the enrollment data and the data provided with the authentication instance and the metadata associated with that authentication instance. Each of these factors may vary independently of the others.

The inherent reliability of an authentication technique is based on how hard it is for an imposter to provide someone else s correct data as well as the overall error rates for the authentication technique. For passwords and knowledge based authentication methods this reliability is often fairly low because there is nothing that prevents someone from revealing their password to another person and for that second person to use that password. Even a more complex knowledge based system may have only moderate reliability since knowledge may be transferred from person to person fairly easily. Token based authentication such as having a proper smart card or using a particular terminal to perform the authentication is similarly of low reliability used by itself since there is no guarantee that the right person is in possession of the proper token.

However biometric techniques are more inherently reliable because it is generally difficult to provide someone else with the ability to use your fingerprints in a convenient manner even intentionally. Because subverting biometric authentication techniques is more difficult the inherent reliability of biometric methods is generally higher than that of purely knowledge or token based authentication techniques. However even biometric techniques may have some occasions in which a false acceptance or false rejection is generated. These occurrences may be reflected by differing reliabilities for different implementations of the same biometric technique. For example a fingerprint matching system provided by one company may provide a higher reliability than one provided by a different company because one uses higher quality optics or a better scanning resolution or some other improvement which reduces the occurrence of false acceptances or false rejections.

Note that this reliability may be expressed in different manners. The reliability is desirably expressed in some metric which can be used by the heuristics and algorithms of the authentication engine to calculate the confidence level of each authentication. One preferred mode of expressing these reliabilities is as a percentage or fraction. For instance fingerprints might be assigned an inherent reliability of 97 while passwords might only be assigned an inherent reliability of 50 . Those of skill in the art will recognize that these particular values are merely exemplary and may vary between specific implementations.

The second factor for which reliability must be assessed is the reliability of the enrollment. This is part of the graded enrollment process referred to above. This reliability factor reflects the reliability of the identification provided during the initial enrollment process. For instance if the individual initially enrolls in a manner where they physically produce evidence of their identity to a notary or other public official and enrollment data is recorded at that time and notarized the data will be more reliable than data which is provided over a network during enrollment and only vouched for by a digital signature or other information which is not truly tied to the individual.

Other enrollment techniques with varying levels of reliability include without limitation enrollment at a physical office of the trust engine operator enrollment at a user s place of employment enrollment at a post office or passport office enrollment through an affiliated or trusted party to the trust engine operator anonymous or pseudonymous enrollment in which the enrolled identity is not yet identified with a particular real individual as well as such other means as are known in the art.

These factors reflect the trust between the trust engine and the source of identification provided during the enrollment process. For instance if enrollment is performed in association with an employer during the initial process of providing evidence of identity this information may be considered extremely reliable for purposes within the company but may be trusted to a lesser degree by a government agency or by a competitor. Therefore trust engines operated by each of these other organizations may assign different levels of reliability to this enrollment.

Similarly additional data which is submitted across a network but which is authenticated by other trusted data provided during a previous enrollment with the same trust engine may be considered as reliable as the original enrollment data was even though the latter data were submitted across an open network. In such circumstances a subsequent notarization will effectively increase the level of reliability associated with the original enrollment data. In this way for example an anonymous or pseudonymous enrollment may then be raised to a full enrollment by demonstrating to some enrollment official the identity of the individual matching the enrolled data.

The reliability factors discussed above are generally values which may be determined in advance of any particular authentication instance. This is because they are based upon the enrollment and the technique rather than the actual authentication. In one embodiment the step of generating reliability based upon these factors involves looking up previously determined values for this particular authentication technique and the enrollment data of the user. In a further aspect of an advantageous embodiment of the present invention such reliabilities may be included with the enrollment data itself. In this way these factors are automatically delivered to the authentication engine along with the enrollment data sent from the depository .

While these factors may generally be determined in advance of any individual authentication instance they still have an effect on each authentication instance which uses that particular technique of authentication for that user. Furthermore although the values may change over time e.g. if the user re enrolls in a more reliable fashion they are not dependent on the authentication data itself. By contrast the reliability factors associated with a single specific instance s data may vary on each occasion. These factors as discussed below must be evaluated for each new authentication in order to generate reliability scores in step .

The reliability of the authentication data reflects the match between the data provided by the user in a particular authentication instance and the data provided during the authentication enrollment. This is the fundamental question of whether the authentication data matches the enrollment data for the individual the user is claiming to be. Normally when the data do not match the user is considered to not be successfully authenticated and the authentication fails. The manner in which this is evaluated may change depending on the authentication technique used. The comparison of such data is performed by the comparator function of the authentication engine as shown in .

For instance matches of passwords are generally evaluated in a binary fashion. In other words a password is either a perfect match or a failed match. It is usually not desirable to accept as even a partial match a password which is close to the correct password if it is not exactly correct. Therefore when evaluating a password authentication the reliability of the authentication returned by the comparator is typically either 100 correct or 0 wrong with no possibility of intermediate values.

Similar rules to those for passwords are generally applied to token based authentication methods such as smart cards. This is because having a smart card which has a similar identifier or which is similar to the correct one is still just as wrong as having any other incorrect token. Therefore tokens tend also to be binary authenticators a user either has the right token or he doesn t.

However certain types of authentication data such as questionnaires and biometrics are generally not binary authenticators. For example a fingerprint may match a reference fingerprint to varying degrees. To some extent this may be due to variations in the quality of the data captured either during the initial enrollment or in subsequent authentications. A fingerprint may be smudged or a person may have a still healing scar or burn on a particular finger. In other instances the data may match less than perfectly because the information itself is somewhat variable and based upon pattern matching. A voice analysis may seem close but not quite right because of background noise or the acoustics of the environment in which the voice is recorded or because the person has a cold. Finally in situations where large amounts of data are being compared it may simply be the case that much of the data matches well but some doesn t. A ten question questionnaire may have resulted in eight correct answers to personal questions but two incorrect answers. For any of these reasons the match between the enrollment data and the data for a particular authentication instance may be desirably assigned a partial match value by the comparator . In this way the fingerprint might be said to be a 85 match the voice print a 65 match and the questionnaire an 80 match for example.

This measure degree of match produced by the comparator is the factor representing the basic issue of whether an authentication is correct or not. However as discussed above this is only one of the factors which may be used in determining the reliability of a given authentication instance. Note also that even though a match to some partial degree may be determined that ultimately it may be desirable to provide a binary result based upon a partial match. In an alternate mode of operation it is also possible to treat partial matches as binary i.e. either perfect 100 or failed 0 matches based upon whether or not the degree of match passes a particular threshold level of match. Such a process may be used to provide a simple pass fail level of matching for systems which would otherwise produce partial matches. Another factor to be considered in evaluating the reliability of a given authentication instance concerns the circumstances under which the authentication data for this particular instance are provided. As discussed above the circumstances refer to the metadata associated with a particular authentication instance. This may include without limitation such information as the network address of the authenticator to the extent that it can be determined the time of the authentication the mode of transmission of the authentication data phone line cellular network etc. and the serial number of the system of the authenticator.

These factors can be used to produce a profile of the type of authentication that is normally requested by the user. Then this information can be used to assess reliability in at least two manners. One manner is to consider whether the user is requesting authentication in a manner which is consistent with the normal profile of authentication by this user. If the user normally makes authentication requests from one network address during business days when she is at work and from a different network address during evenings or weekends when she is at home an authentication which occurs from the home address during the business day is less reliable because it is outside the normal authentication profile. Similarly if the user normally authenticates using a fingerprint biometric and in the evenings an authentication which originates during the day using only a password is less reliable.

An additional way in which the circumstantial metadata can be used to evaluate the reliability of an instance of authentication is to determine how much corroboration the circumstance provides that the authenticator is the individual he claims to be. For instance if the authentication comes from a system with a serial number known to be associated with the user this is a good circumstantial indicator that the user is who they claim to be. Conversely if the authentication is coming from a network address which is known to be in Los Angeles when the user is known to reside in London this is an indication that this authentication is less reliable based on its circumstances.

It is also possible that a cookie or other electronic data may be placed upon the system being used by a user when they interact with a vendor system or with the trust engine . This data is written to the storage of the system of the user and may contain an identification which may be read by a Web browser or other software on the user system. If this data is allowed to reside on the user system between sessions a persistent cookie it may be sent with the authentication data as further evidence of the past use of this system during authentication of a particular user. In effect the metadata of a given instance particularly a persistent cookie may form a sort of token based authenticator itself.

Once the appropriate reliability factors based on the technique and data of the authentication instance are generated as described above in steps and respectively they are used to produce an overall reliability for the authentication instance provided in step . One means of doing this is simply to express each reliability as a percentage and then to multiply them together. For example suppose the authentication data is being sent in from a network address known to be the user s home computer completely in accordance with the user s past authentication profile 100 and the technique being used is fingerprint identification 97 and the initial finger print data was registered through the user s employer with the trust engine 90 and the match between the authentication data and the original fingerprint template in the enrollment data is very good 99 . The overall reliability of this authentication instance could then be calculated as the product of these reliabilities 100 97 90 99 86.4 reliability.

This calculated reliability represents the reliability of one single instance of authentication. The overall reliability of a single authentication instance may also be calculated using techniques which treat the different reliability factors differently for example by using formulas where different weights are assigned to each reliability factor. Furthermore those of skill in the art will recognize that the actual values used may represent values other than percentages and may use non arithmetic systems. One embodiment may include a module used by an authentication requestor to set the weights for each factor and the algorithms used in establishing the overall reliability of the authentication instance.

The authentication engine may use the above techniques and variations thereof to determine the reliability of a single authentication instance indicated as step . However it may be useful in many authentication situations for multiple authentication instances to be provided at the same time. For example while attempting to authenticate himself using the system of the present invention a user may provide a user identification fingerprint authentication data a smart card and a password. In such a case three independent authentication instances are being provided to the trust engine for evaluation. Proceeding to step if the authentication engine determines that the data provided by the user includes more than one authentication instance then each instance in turn will be selected as shown in step and evaluated as described above in steps and .

Note that many of the reliability factors discussed may vary from one of these instances to another. For instance the inherent reliability of these techniques is likely to be different as well as the degree of match provided between the authentication data and the enrollment data. Furthermore the user may have provided enrollment data at different times and under different circumstances for each of these techniques providing different enrollment reliabilities for each of these instances as well. Finally even though the circumstances under which the data for each of these instances is being submitted is the same the use of such techniques may each fit the profile of the user differently and so may be assigned different circumstantial reliabilities. For example the user may normally use their password and fingerprint but not their smart card. 

As a result the final reliability for each of these authentication instances may be different from one another. However by using multiple instances together the overall confidence level for the authentication will tend to increase.

Once the authentication engine has performed steps through for all of the authentication instances provided in the authentication data the reliability of each instance is used in step to evaluate the overall authentication confidence level. This process of combining the individual authentication instance reliabilities into the authentication confidence level may be modeled by various methods relating the individual reliabilities produced and may also address the particular interaction between some of these authentication techniques. For example multiple knowledge based systems such as passwords may produce less confidence than a single password and even a fairly weak biometric such as a basic voice analysis. 

One means in which the authentication engine may combine the reliabilities of multiple concurrent authentication instances to generate a final confidence level is to multiply the unreliability of each instance to arrive at a total unreliability. The unreliability is generally the complementary percentage of the reliability. For example a technique which is 84 reliable is 16 unreliable. The three authentication instances described above fingerprint smart card password which produce reliabilities of 86 75 and 72 would have corresponding unreliabilities of 100 86 100 75 and 100.72 or 14 25 and 28 respectively. By multiplying these unreliabilities we get a cumulative unreliability of 14 25 28 0.98 unreliability which corresponds to a reliability of 99.02 .

In an additional mode of operation additional factors and heuristics may be applied within the authentication engine to account for the interdependence of various authentication techniques. For example if someone has unauthorized access to a particular home computer they probably have access to the phone line at that address as well. Therefore authenticating based on an originating phone number as well as upon the serial number of the authenticating system does not add much to the overall confidence in the authentication. However knowledge based authentication is largely independent of token based authentication i.e. if someone steals your cellular phone or keys they are no more likely to know your PIN or password than if they hadn t .

Furthermore different vendors or other authentication requestors may wish to weigh different aspects of the authentication differently. This may include the use of separate weighing factors or algorithms used in calculating the reliability of individual instances as well as the use of different means to evaluate authentication events with multiple instances.

For instance vendors for certain types of transactions for instance corporate email systems may desire to authenticate primarily based upon heuristics and other circumstantial data by default. Therefore they may apply high weights to factors related to the metadata and other profile related information associated with the circumstances surrounding authentication events. This arrangement could be used to ease the burden on users during normal operating hours by not requiring more from the user than that he be logged on to the correct machine during business hours. However another vendor may weigh authentications coming from a particular technique most heavily for instance fingerprint matching because of a policy decision that such a technique is most suited to authentication for the particular vendor s purposes.

Such varying weights may be defined by the authentication requestor in generating the authentication request and sent to the trust engine with the authentication request in one mode of operation. Such options could also be set as preferences during an initial enrollment process for the authentication requestor and stored within the authentication engine in another mode of operation.

Once the authentication engine produces an authentication confidence level for the authentication data provided this confidence level is used to complete the authentication request in step and this information is forwarded from the authentication engine to the transaction engine for inclusion in a message to the authentication requestor.

The process described above is merely exemplary and those of skill in the art will recognize that the steps need not be performed in the order shown. Furthermore certain steps such as the evaluation of the reliability of each authentication instance provided may be carried out in parallel with one another if circumstances permit.

In a further aspect of this invention a method is provided to accommodate conditions when the authentication confidence level produced by the process described above fails to meet the required trust level of the vendor or other party requiring the authentication. In circumstances such as these where a gap exists between the level of confidence provided and the level of trust desired the operator of the trust engine is in a position to provide opportunities for one or both parties to provide alternate data or requirements in order to close this trust gap. This process will be referred to as trust arbitrage herein.

Trust arbitrage may take place within a framework of cryptographic authentication as described above with reference to . As shown therein a vendor or other party will request authentication of a particular user in association with a particular transaction. In one circumstance the vendor simply requests an authentication either positive or negative and after receiving appropriate data from the user the trust engine will provide such a binary authentication. In circumstances such as these the degree of confidence required in order to secure a positive authentication is determined based upon preferences set within the trust engine .

However it is also possible that the vendor may request a particular level of trust in order to complete a particular transaction. This required level may be included with the authentication request e.g. authenticate this user to 96 confidence or may be determined by the trust engine based on other factors associated with the transaction i.e. authenticate this user as appropriate for this transaction . One such factor might be the economic value of the transaction. For transactions which have greater economic value a higher degree of trust may be required. Similarly for transactions with high degrees of risk a high degree of trust may be required. Conversely for transactions which are either of low risk or of low value lower trust levels may be required by the vendor or other authentication requestor.

The process of trust arbitrage occurs between the steps of the trust engine receiving the authentication data in step of and the return of an authentication result to the vendor in step of . Between these steps the process which leads to the evaluation of trust levels and the potential trust arbitrage occurs as shown in . In circumstances where simple binary authentication is performed the process shown in reduces to having the transaction engine directly compare the authentication data provided with the enrollment data for the identified user as discussed above with reference to flagging any difference as a negative authentication.

As shown in the first step after receiving the data in step is for the transaction engine to determine the trust level which is required for a positive authentication for this particular transaction in step . This step may be performed by one of several different methods. The required trust level may be specified to the trust engine by the authentication requestor at the time when the authentication request is made. The authentication requestor may also set a preference in advance which is stored within the depository or other storage which is accessible by the transaction engine . This preference may then be read and used each time an authentication request is made by this authentication requestor. The preference may also be associated with a particular user as a security measure such that a particular level of trust is always required in order to authenticate that user the user preference being stored in the depository or other storage media accessible by the transaction engine . The required level may also be derived by the transaction engine or authentication engine based upon information provided in the authentication request such as the value and risk level of the transaction to be authenticated.

In one mode of operation a policy management module or other software which is used when generating the authentication request is used to specify the required degree of trust for the authentication of the transaction. This may be used to provide a series of rules to follow when assigning the required level of trust based upon the policies which are specified within the policy management module. One advantageous mode of operation is for such a module to be incorporated with the web server of a vendor in order to appropriately determine required level of trust for transactions initiated with the vendor s web server. In this way transaction requests from users may be assigned a required trust level in accordance with the policies of the vendor and such information may be forwarded to the trust engine along with the authentication request.

This required trust level correlates with the degree of certainty that the vendor wants to have that the individual authenticating is in fact who he identifies himself as. For example if the transaction is one where the vendor wants a fair degree of certainty because goods are changing hands the vendor may require a trust level of 85 . For situation where the vendor is merely authenticating the user to allow him to view members only content or exercise privileges on a chat room the downside risk may be small enough that the vendor requires only a 60 trust level. However to enter into a production contract with a value of tens of thousands of dollars the vendor may require a trust level of 99 or more.

This required trust level represents a metric to which the user must authenticate himself in order to complete the transaction. If the required trust level is 85 for example the user must provide authentication to the trust engine sufficient for the trust engine to say with 85 confidence that the user is who they say they are. It is the balance between this required trust level and the authentication confidence level which produces either a positive authentication to the satisfaction of the vendor or a possibility of trust arbitrage.

As shown in after the transaction engine receives the required trust level it compares in step the required trust level to the authentication confidence level which the authentication engine calculated for the current authentication as discussed with reference to . If the authentication confidence level is higher than the required trust level for the transaction in step then the process moves to step where a positive authentication for this transaction is produced by the transaction engine . A message to this effect will then be inserted into the authentication results and returned to the vendor by the transaction engine as shown in step see .

However if the authentication confidence level does not fulfill the required trust level in step then a confidence gap exists for the current authentication and trust arbitrage is conducted in step . Trust arbitrage is described more completely with reference to below. This process as described below takes place within the transaction engine of the trust engine . Because no authentication or other cryptographic operations are needed to execute trust arbitrage other than those required for the SSL communication between the transaction engine and other components the process may be performed outside the authentication engine . However as will be discussed below any reevaluation of authentication data or other cryptographic or authentication events will require the transaction engine to resubmit the appropriate data to the authentication engine . Those of skill in the art will recognize that the trust arbitrage process could alternately be structured to take place partially or entirely within the authentication engine itself.

As mentioned above trust arbitrage is a process where the trust engine mediates a negotiation between the vendor and user in an attempt to secure a positive authentication where appropriate. As shown in step the transaction engine first determines whether or not the current situation is appropriate for trust arbitrage. This may be determined based upon the circumstances of the authentication e.g. whether this authentication has already been through multiple cycles of arbitrage as well as upon the preferences of either the vendor or user as will be discussed further below.

In such circumstances where arbitrage is not possible the process proceeds to step where the transaction engine generates a negative authentication and then inserts it into the authentication results which are sent to the vendor in step see . One limit which may be advantageously used to prevent authentications from pending indefinitely is to set a time out period from the initial authentication request. In this way any transaction which is not positively authenticated within the time limit is denied further arbitrage and negatively authenticated. Those of skill in the art will recognize that such a time limit may vary depending upon the circumstances of the transaction and the desires of the user and vendor Limitations may also be placed upon the number of attempts that may be made at providing a successful authentication. Such limitations may be handled by an attempt limiter as shown in .

If arbitrage is not prohibited in step the transaction engine will then engage in negotiation with one or both of the transacting parties. The transaction engine may send a message to the user requesting some form of additional authentication in order to boost the authentication confidence level produced as shown in step . In the simplest form this may simply indicates that authentication was insufficient. A request to produce one or more additional authentication instances to improve the overall confidence level of the authentication may also be sent.

If the user provides some additional authentication instances in step then the transaction engine 15 adds these authentication instances to the authentication data for the transaction and forwards it to the authentication engine as shown in step see and the authentication is reevaluated based upon both the pre existing authentication instances for this transaction and the newly provided authentication instances.

An additional type of authentication may be a request from the trust engine to make some form of person to person contact between the trust engine operator or a trusted associate and the user for example by phone call. This phone call or other non computer authentication can be used to provide personal contact with the individual and also to conduct some form of questionnaire based authentication. This also may give the opportunity to verify an originating telephone number and potentially a voice analysis of the user when he calls in. Even if no additional authentication data can be provided the additional context associated with the user s phone number may improve the reliability of the authentication context. Any revised data or circumstances based upon this phone call are fed into the trust engine for use in consideration of the authentication request.

Additionally in step the trust engine may provide an opportunity for the user to purchase insurance effectively buying a more confident authentication. The operator of the trust engine may at times only want to make such an option available if the confidence level of the authentication is above a certain threshold to begin with. In effect this user side insurance is a way for the trust engine to vouch for the user when the authentication meets the normal required trust level of the trust engine for authentication but does not meet the required trust level of the vendor for this transaction. In this way the user may still successfully authenticate to a very high level as may be required by the vendor even though he only has authentication instances which produce confidence sufficient for the trust engine .

This function of the trust engine allows the trust engine to vouch for someone who is authenticated to the satisfaction of the trust engine but not of the vendor. This is analogous to the function performed by a notary in adding his signature to a document in order to indicate to someone reading the document at a later time that the person whose signature appears on the document is in fact the person who signed it. The signature of the notary testifies to the act of signing by the user. In the same way the trust engine is providing an indication that the person transacting is who they say they are.

However because the trust engine is artificially boosting the level of confidence provided by the user there is a greater risk to the trust engine operator since the user is not actually meeting the required trust level of the vendor. The cost of the insurance is designed to offset the risk of a false positive authentication to the trust engine who may be effectively notarizing the authentications of the user . The user pays the trust engine operator to take the risk of authenticating to a higher level of confidence than has actually been provided.

Because such an insurance system allows someone to effectively buy a higher confidence rating from the trust engine both vendors and users may wish to prevent the use of user side insurance in certain transactions. Vendors may wish to limit positive authentications to circumstances where they know that actual authentication data supports the degree of confidence which they require and so may indicate to the trust engine that user side insurance is not to be allowed. Similarly to protect his online identity a user may wish to prevent the use of user side insurance on his account or may wish to limit its use to situations where the authentication confidence level without the insurance is higher than a certain limit. This may be used as a security measure to prevent someone from overhearing a password or stealing a smart card and using them to falsely authenticate to a low level of confidence and then purchasing insurance to produce a very high level of false confidence. These factors may be evaluated in determining whether user side insurance is allowed.

If user purchases insurance in step then the authentication confidence level is adjusted based upon the insurance purchased in step and the authentication confidence level and required trust level are again compared in step see . The process continues from there and may lead to either a positive authentication in step see or back into the trust arbitrage process in step for either further arbitrage if allowed or a negative authentication in step if further arbitrage is prohibited.

In addition to sending a message to the user in step the transaction engine may also send a message to the vendor in step which indicates that a pending authentication is currently below the required trust level. The message may also offer various options on how to proceed to the vendor. One of these options is to simply inform the vendor of what the current authentication confidence level is and ask if the vendor wishes to maintain their current unfulfilled required trust level. This may be beneficial because in some cases the vendor may have independent means for authenticating the transaction or may have been using a default set of requirements which generally result in a higher required level being initially specified than is actually needed for the particular transaction at hand

For instance it may be standard practice that all incoming purchase order transactions with the vendor are expected to meet a 98 trust level. However if an order was recently discussed by phone between the vendor and a long standing customer and immediately thereafter the transaction is authenticated but only to a 93 confidence level the vendor may wish to simply lower the acceptance threshold for this transaction because the phone call effectively provides additional authentication to the vendor. In certain circumstances the vendor may be willing to lower their required trust level but not all the way to the level of the current authentication confidence. For instance the vendor in the above example might consider that the phone call prior to the order might merit a 4 reduction in the degree of trust needed however this is still greater than the 93 confidence produced by the user.

If the vendor does adjust their required trust level in step then the authentication confidence level produced by the authentication and the required trust level are compared in step see . If the confidence level now exceeds the required trust level a positive authentication may be generated in the transaction engine in step see . If not further arbitrage may be attempted as discussed above if it is permitted.

In addition to requesting an adjustment to the required trust level the transaction engine may also offer vendor side insurance to the vendor requesting the authentication. This insurance serves a similar purpose to that described above for the user side insurance. Here however rather than the cost corresponding to the risk being taken by the trust engine in authenticating above the actual authentication confidence level produced the cost of the insurance corresponds to the risk being taken by the vendor in accepting a lower trust level in the authentication.

Instead of just lowering their actual required trust level the vendor has the option of purchasing insurance to protect itself from the additional risk associated with a lower level of trust in the authentication of the user. As described above it may be advantageous for the vendor to only consider purchasing such insurance to cover the trust gap in conditions where the existing authentication is already above a certain threshold.

The availability of such vendor side insurance allows the vendor the option to either lower his trust requirement directly at no additional cost to himself bearing the risk of a false authentication himself based on the lower trust level required or buying insurance for the trust gap between the authentication confidence level and his requirement with the trust engine operator bearing the risk of the lower confidence level which has been provided. By purchasing the insurance the vendor effectively keeps his high trust level requirement because the risk of a false authentication is shifted to the trust engine operator.

If the vendor purchases insurance in step the authentication confidence level and required trust levels are compared in step see and the process continues as described above.

Note that it is also possible that both the user and the vendor respond to messages from the trust engine . Those of skill in the art will recognize that there are multiple ways in which such situations can be handled. One advantageous mode of handling the possibility of multiple responses is simply to treat the responses in a first come first served manner. For example if the vendor responds with a lowered required trust level and immediately thereafter the user also purchases insurance to raise his authentication level the authentication is first reevaluated based upon the lowered trust requirement from the vendor. If the authentication is now positive the user s insurance purchase is ignored. In another advantageous mode of operation the user might only be charged for the level of insurance required to meet the new lowered trust requirement of the vendor if a trust gap remained even with the lowered vendor trust requirement .

If no response from either party is received during the trust arbitrage process at step within the time limit set for the authentication the arbitrage is reevaluated in step . This effectively begins the arbitrage process again. If the time limit was final or other circumstances prevent further arbitrage in step a negative authentication is generated by the transaction engine in step and returned to the vendor in step see . If not new messages may be sent to the user and vendor and the process may be repeated as desired.

Note that for certain types of transactions for instance digitally signing documents which are not part of a transaction there may not necessarily be a vendor or other third party therefore the transaction is primarily between the user and the trust engine . In circumstances such as these the trust engine will have its own required trust level which must be satisfied in order to generate a positive authentication. However in such circumstances it will often not be desirable for the trust engine to offer insurance to the user in order for him to raise the confidence of his own signature.

The process described above and shown in may be carried out using various communications modes as described above with reference to the trust engine . For instance the messages may be web based and sent using SSL connections between the trust engine and applets downloaded in real time to browsers running on the user or vendor systems. In an alternate mode of operation certain dedicated applications may be in use by the user and vendor which facilitate such arbitrage and insurance transactions. In another alternate mode of operation secure email operations may be used to mediate the arbitrage described above thereby allowing deferred evaluations and batch processing of authentications. Those of skill in the art will recognize that different communications modes may be used as are appropriate for the circumstances and authentication requirements of the vendor.

The following description with reference to describes a sample transaction which integrates the various aspects of the present invention as described above. This example illustrates the overall process between a user and a vendor as mediates by the trust engine . Although the various steps and components as described in detail above may be used to carry out the following transaction the process illustrated focuses on the interaction between the trust engine user and vendor.

The transaction begins when the user while viewing web pages online fills out an order form on the web site of the vendor in step . The user wishes to submit this order form to the vendor signed with his digital signature. In order to do this the user submits the order form with his request for a signature to the trust engine in step . The user will also provide authentication data which will be used as described above to authenticate his identity.

In step the authentication data is compared to the enrollment data by the trust engine as discussed above and if a positive authentication is produced the hash of the order form signed with the private key of the user is forwarded to the vendor along with the order form itself.

The vendor receives the signed faun in step and then the vendor will generate an invoice or other contract related to the purchase to be made in step . This contract is sent back to the user with a request for a signature in step . The vendor also sends an authentication request for this contract transaction to the trust engine in step including a hash of the contract which will be signed by both parties. To allow the contract to be digitally signed by both parties the vendor also includes authentication data for itself so that the vendor s signature upon the contract can later be verified if necessary.

As discussed above the trust engine then verifies the authentication data provided by the vendor to confirm the vendor s identity and if the data produces a positive authentication in step continues with step when the data is received from the user. If the vendor s authentication data does not match the enrollment data of the vendor to the desired degree a message is returned to the vendor requesting further authentication. Trust arbitrage may be performed here if necessary as described above in order for the vendor to successfully authenticate itself to the trust engine .

When the user receives the contract in step he reviews it generates authentication data to sign it if it is acceptable in step and then sends a hash of the contract and his authentication data to the trust engine in step . The trust engine verifies the authentication data in step and if the authentication is good proceeds to process the contract as described below. As discussed above with reference to trust arbitrage may be performed as appropriate to close any trust gap which exists between the authentication confidence level and the required authentication level for the transaction.

The trust engine signs the hash of the contract with the user s private key and sends this signed hash to the vendor in step signing the complete message on its own behalf i.e. including a hash of the complete message including the user s signature encrypted with the private key of the trust engine . This message is received by the vendor in step . The message represents a signed contract hash of contract encrypted using user s private key and a receipt from the trust engine the hash of the message including the signed contract encrypted using the trust engine s private key .

The trust engine similarly prepares a hash of the contract with the vendor s private key in step and forwards this to the user signed by the trust engine . In this way the user also receives a copy of the contract signed by the vendor as well as a receipt signed by the trust engine for delivery of the signed contract in step .

In addition to the foregoing an additional aspect of the invention provides a cryptographic Service Provider Module SPM which may be available to a client side application as a means to access functions provided by the trust engine described above. One advantageous way to provide such a service is for the cryptographic SPM is to mediate communications between a third party Application Programming Interface API and a trust engine which is accessible via a network or other remote connection. A sample cryptographic SPM is described below with reference to .

For example on a typical system a number of API s are available to programmers. Each API provides a set of function calls which may be made by an application running upon the system. Examples of API s which provide programming interfaces suitable for cryptographic functions authentication functions and other security function include the Cryptographic API CAPI provided by Microsoft with its Windows operating systems and the Common Data Security Architecture CDSA sponsored by 113M Intel and other members of the Open Group. CAPI will be used as an exemplary security API in the discussion that follows. However the cryptographic SPM described could be used with CDSA or other security API s as are known in the art.

This API is used by a user system or vendor system when a call is made for a cryptographic function. Included among these functions may be requests associated with performing various cryptographic operations such as encrypting a document with a particular key signing a document requesting a digital certificate verifying a signature upon a signed document and such other cryptographic functions as are described above or known to those of skill in the art.

Such cryptographic functions are normally performed locally to the system upon which CAPI is located. This is because generally the functions called require the use of either resources of the local user system such as a fingerprint reader or software functions which are programmed using libraries which are executed on the local machine. Access to these local resources is normally provided by one or more Service Provider Modules SPM s as referred to above which provide resources with which the cryptographic functions are carried out. Such SPM s may include software libraries to perform encrypting or decrypting operations or drivers and applications which are capable of accessing specialized hardware such as biometric scanning devices. In much the way that CAPI provides functions which may be used by an application of the system the SPM s provide CAPI with access to the lower level functions and resources associated with the available services upon the system.

In accordance with the invention it is possible to provide a cryptographic SPM which is capable of accessing the cryptographic functions provided by the trust engine and making these functions available to an application through CAPI . Unlike embodiments where CAPI is only able to access resources which are locally available through SPM s a cryptographic SPM as described herein would be able to submit requests for cryptographic operations to a remotely located network accessible trust engine in order to perform the operations desired.

For instance if an application has a need for a cryptographic operation such as signing a document the application makes a function call to the appropriate CAP function. CAPI in turn will execute this function making use of the resources which are made available to it by the SPM s and the cryptographic SPM . In the case of a digital signature function the cryptographic SPM will generate an appropriate request which will be sent to the trust engine across the communication link .

The operations which occur between the cryptographic SPM and the trust engine are the same operations that would be possible between any other system and the trust engine . However these functions are effectively made available to a user system through CAPI such that they appear to be locally available upon the user system itself. However unlike ordinary SPM s the functions are being carried out on the remote trust engine and the results relayed to the cryptographic SPM in response to appropriate requests across the communication link .

This cryptographic SPM makes a number of operations available to the user system or a vendor system which might not otherwise be available. These functions include without limitation encryption and decryption of documents issuance of digital certificates digital signing of documents verification of digital signatures and such other operations as will be apparent to those of skill in the art.

Additionally other combinations admissions substitutions and modifications will be apparent to the skilled artisan in view of the disclosure herein. Accordingly the present invention is not intended to be limited by the reaction of the preferred embodiments but is to be defined by a reference to the appended claims.

