---

title: Anti-tampering server
abstract: A method for preventing tampering with the accessibility of resources specified by Universal Resource Locators (URLs) comprising receiving a primary URL from a web server; creating a unique identifier and associating, in a database, the unique identifier with the received primary URL; creating a secondary URL that includes the unique identifier; and providing the secondary URL to the web server wherein the primary URL is cross referenced to the secondary URL through the unique identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09438610&OS=09438610&RS=09438610
owner: Pagefair Limited
number: 09438610
owner_city: Dublin
owner_country: IE
publication_date: 20140902
---
The present application claims priority benefit to U.S. Provisional Patent Application No. 61 872 869 filed Sep. 3 2013 all of which are hereby incorporated by reference in their entirety for all purposes as if fully set forth herein.

The present application relates in general to the addressing scheme by which resources on the internet are accessed namely Uniform Resource Locators URLs and more particularly to methods to ensure the reliable delivery of internet content to client users by preventing intermediaries from selectively tampering with the accessibility of content by filtering URLs.

The most highly visited websites in the world make money through the display of advertising on behalf of other businesses. The global online display advertising market is expected to grow by 20 to nearly 40 billion US dollars in 2013. This advertising expenditure permits websites to provide their content free of charge to consumers.

In the early years of the World Wide Web it was common for computing experts to modify their computers settings to prevent them from communicating with internet servers that were known to host display advertising thereby marginally decreasing the time it would take to download web pages. In recent years a number of mainstream software tools have emerged that use similar techniques to prevent the display of advertising on all web pages.

Many of these tools are downloadable extensions for popular web browsers which automatically block communication with thousands of internet servers. An exemplar is the AdBlockPlus extension which is used by hundreds of millions of web users and prevents the display of advertising on all websites they visit.

Other tools can be installed and configured at a network level and can achieve the same effect. An exemplar is the Privoxy tool which runs on a computer network and modifies any web traffic that is configured to pass through it.

Due to these blocking tools many advertising supported businesses are closing down due to declining revenues.

These tools and others that employ similar techniques inflict secondary damage on web businesses. Much functionality of modern websites depends on the web browser s ability to execute javascript source code. The blocking tools discussed above frequently attack javascript execution by preventing the associated source code files from being downloaded. They can also prevent javascript code from communicating with specified internet servers. This is typically used to stop websites collecting web analytics data about their visitors upon which they depend in day to day decision making. This form of attack also damages the businesses that provide these web analytics services and can be arbitrary directed at any of the growing number of other businesses that utilise similar software architectures.

By selectively blocking parts of web pages these tools act to tamper with the intended user experience. This is detrimental to the businesses that publish this content who wish to maintain the integrity of the functionality presentation and branding of their website as well as ensuring that any advertising is correctly displayed.

Many of these tools are downloadable extensions for popular web browsers which automatically block communication with thousands of internet servers. An exemplar is the AdBlockPlus extension which is used by hundreds of millions of web users and prevents the display of advertising on all websites they visit.

Other tools can be installed and configured at a network level and can achieve the same effect. An exemplar is the Privoxy tool which runs on a computer network and modifies any web traffic that is configured to pass through it.

Due to these blocking tools many advertising supported businesses are closing down due to declining revenues.

These tools and others that employ similar techniques inflict secondary damage on web businesses. Much functionality of modern websites depends on the web browser s ability to execute javascript source code. The blocking tools discussed above frequently attack javascript execution by preventing the associated source code files from being downloaded. They can also prevent javascript code from communicating with specified internet servers. This is typically used to stop websites collecting web analytics data about their visitors upon which they depend in day to day decision making. This form of attack also damages the businesses that provide these web analytics services and can be arbitrary directed at any of the growing number of other businesses that utilise similar software architectures.

By selectively blocking parts of web pages these tools act to tamper with the intended user experience. This is detrimental to the businesses that publish this content who wish to maintain the integrity of the functionality presentation and branding of their website as well as ensuring that any advertising is correctly displayed.

It would therefore be advantageous to have a system whereby publishers of websites could protect their websites from such tampering. Additional advantages and novel features of this invention shall be set forth in part in the description that follows and in part will become apparent to those skilled in the art upon examination of the following specification or may be learned by the practice of the invention. The advantages of the invention may be realized and attained by means of the instrumentalities combinations compositions and methods particularly pointed out in the appended claims.

The present teachings disclose a system and method to prevent hackers or automated systems tampering with online documents applications or appliances by selectively filtering access to online resources by inspecting their URLs.

Accordingly a first embodiment of the application provides a method for preventing tampering with the accessibility of resources specified by Universal Resource Locators URLs . The application also provides an anti tampering filter. Advantageous embodiments are provided in the dependent claims.

The Figures depict embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

The following description with reference to the accompanying drawings is provided to assist in a comprehensive understanding of exemplary embodiments of the present invention as defined by the claims and their equivalents. It includes various specific details to assist in that understanding but these are to be regarded as merely exemplary. Accordingly those of ordinary skill in the art will recognize that various changes and modifications of the embodiments described herein can be made without departing from the scope and spirit of the invention. Also descriptions of well known functions and constructions are omitted for clarity and conciseness. In order to fully appreciate the present teachings it is necessary to first outline the conventional system and method by which content is delivered to clients.

The conventional system and method is best described with reference to . This system comprises of three components a client a first party server and a third party server . It should be understood that client refers to any software or hardware that downloads data from the internet using URLs. Examples include but are not limited to a web browser a plugin running in a web browser a video game an application running on a mobile device software running on a set top TV box or any other internet enabled appliance. It should also be understood that although only a single 1party server and single 3party server are shown in for ease of understanding in practice the system may contains a plurality of 3party servers that the client is capable of communicating with to obtain additional resources necessary for the correct functioning of the system. It should also be understood that in some embodiments the 1party server may also share the same role as the 3party server .

The server hosts a document called index.html in this example . It should be understood that the term document may refer to a HTML document but may equivalently refer to any other kind of document containing a manifest of additional online resources. In some embodiments clients may download pre configured resources without first downloading a document. For example a client may automatically download configuration files databases and updates. These clients may be considered to have been pre loaded with a document.

A separate 3party server hosts a resource called style.css in this example . As would be evident to a skilled person in the art the term resource refers to an online resource that is available via a URL. Documents normally refer to a plurality of additional resources that clients should download. For example HTML documents may include references to elements including CSS files image files video files applets or javascript files. It should be understood that the term vital resource is used to denote those resources that must be downloaded in order for a document to function correctly on the client.

In the conventional system the client first downloads the document from the server as shown by messaging and of . When this download is complete it downloads any additional resources specified by the document such as the resource which is hosted on a third party server . Messaging and of shows this downloading of additional resources.

The terms and words used in the following description and claims are not limited to the bibliographical meanings but are merely used by the inventor to enable a clear and consistent understanding of the invention. Accordingly it should be apparent to those skilled in the art that the following description of exemplary embodiments of the present invention are provided for illustration purpose only and not for the purpose of limiting the invention as defined by the appended claims and their equivalents.

By the term substantially it is meant that the recited characteristic parameter or value need not be achieved exactly but that deviations or variations including for example tolerances measurement error measurement accuracy limitations and other factors known to those of skill in the art may occur in amounts that do not preclude the effect the characteristic was intended to provide.

Like numbers refer to like elements throughout. In the figures the sizes of certain lines layers components elements or features may be exaggerated for clarity.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. Thus for example reference to a component surface includes reference to one or more of such surfaces.

As used herein any reference to one embodiment or an embodiment means that a particular element feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

As used herein the terms comprises comprising includes including has having or any other variation thereof are intended to cover a non exclusive inclusion. For example a process method article or apparatus that comprises a list of elements is not necessarily limited to only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. Further unless expressly stated to the contrary or refers to an inclusive or and not to an exclusive or. For example a condition A or B is satisfied by any one of the following A is true or present and B is false or not present A is false or not present and B is true or present and both A and B are true or present .

Unless otherwise defined all terms including technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this invention belongs. It will be further understood that terms such as those defined in commonly used dictionaries should be interpreted as having a meaning that is consistent with their meaning in the context of the specification and relevant art and should not be interpreted in an idealized or overly formal sense unless expressly so defined herein. Well known functions or constructions may not be described in detail for brevity and or clarity.

It will be also understood that when an element is referred to as being on attached to connected to coupled with contacting mounted etc. another element it can be directly on attached to connected to coupled with or contacting the other element or intervening elements may also be present. In contrast when an element is referred to as being for example directly on directly attached to directly connected to directly coupled with or directly contacting another element there are no intervening elements present. It will also be appreciated by those of skill in the art that references to a structure or feature that is disposed adjacent another feature may have portions that overlap or underlie the adjacent feature.

Included in the description are flowcharts depicting examples of the methodology which may be used to ensure the reliable delivery of Internet content using the anti tampering system of the present invention. In the following description it will be understood that each block of the flowchart illustrations and combinations of blocks in the flowchart illustrations can be implemented by computer program instructions. These computer program instructions may be loaded onto a computer or other programmable apparatus to produce a machine such that the instructions that executes on the computer or other programmable apparatus create means for implementing the functions specified in the flowchart block or blocks. These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means that implement the function specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable apparatus to cause a series of operational steps to be performed in the computer or on the other programmable apparatus to produce a computer implemented process such that the instructions that execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.

Accordingly blocks of the flowchart illustrations support combinations of means for performing the specified functions and combinations of steps for performing the specified functions. It will also be understood that each block of the flowchart illustrations and combinations of blocks in the flowchart illustrations can be implemented by special purpose hardware based computer systems that perform the specified functions or steps or combinations of special purpose hardware and computer instructions.

In a preferred embodiment the present invention can be implemented in software. Software programming code that embodies the present invention is typically accessed by a microprocessor from long term persistent storage media of some type such as a flash drive or hard drive. The software programming code may be embodied on any of a variety of known media for use with a data processing system such as a diskette hard drive CD ROM or the like. The code may be distributed on such media or may be distributed from the memory or storage of one computer system over a network of some type to other computer systems for use by such other systems. Alternatively the programming code may be embodied in the memory of the device and accessed by a microprocessor using an internal bus. The techniques and methods for embodying software programming code in memory on physical media and or distributing software code via networks are well known and will not be further discussed herein.

The detailed sequence of steps performed in the conventional system is best understood with reference to the flowchart provided in .

In step the client initiates a download by connecting to a 1party server that hosts a desired document . After connecting to the 1party server the client sends it a request specifying the URL of the document that it is seeking step . In step the 1party server returns the requested document to the client. The client may now determine that the document does not specify any additional required resources step in which case the download process ends step . After a client downloads a document it may determine that it specifies additional associated resources step . In this case it proceeds to download each additional resource by connecting to a 3party server specified in the resource URL step requesting the URL step at which point it receives the element data step .

In an embodiment in which the client has been pre loaded with a document steps and are unnecessary as the client already possesses a document identifying any additional required resources. The process proceeds immediately to step and proceeds normally.

Tools that tamper with the display of advertising on websites as described in the Background to the Application above act to disrupt clients as they connect to 3party servers to download additional resources such as advertising images. These tools are usually implemented as web browser extensions which modify the behavior of the client or as network filters which disrupt messaging between the client and the 3party servers . These tools are designed to interfere with specific types of resources such as advertising images. In instances where they inadvertently block vital resources they produce undesirable effects for example a web page may become unreadable.

The inventors have found that such tools depend on their ability to distinguish between the URLs of vital resources and the URLs of resources that they are designed to block. When these URLs are indistinguishable such tools must either permit all resources to download or block both vital and non vital resources thereby impairing the functionality of the client. In particular the inventors have developed a system and method that ensures a vital resource to be indistinguishable from a protected resource . A protected resource should be understood to be a resource that is normally the subject of the tampering techniques or tools described previously but is now defended or protected from those techniques.

This is achieved by providing anti tampering features that make it impossible for hackers or automated tools to distinguish between the URLs of protected resources and vital resources. Therefore the aforementioned tools are forced to permit all resources to download or otherwise be responsible for impairing the functionality of the client. These tools are marketed as improving user experience by preventing display of undesirable content such as advertising and therefore the developers of such tools would seek to avoid any impairment of the user experience.

The teachings of the present application require the introduction of a new component to the conventional system described in . As can be seen from an anti tampering filter is introduced. In the components and steps to correspond respectively to the components and steps to of . The anti tampering filter holds information about additional resources that are referred to in documents such as document that clients may download from the server . Clients request additional resources via the anti tampering filter using URLs of a standard format. It is impossible for tampering tools to distinguish between multiple URLs that the anti tampering filter may process. Therefore resources that are received by the client from the anti tampering filter cannot be identified by the blocking tools at the client or network within which the client is operating as vital resources or resources that should normally be blocked.

When comparing to it should be noted that the client no longer directly connects to the third party server to download the resource called style.css in this example . This connection is instead passed through the anti tampering filter . It should also be noted that a connection is formed between the server and the anti tampering filter to arrange what resources shall be protected. In the embodiment of the publisher that operates the server may gain access to the anti tampering filter by entering into a commercial arrangement with the business that operates the anti tampering filter as a service. In most cases this will be possible without the involvement of the 3party servers . Many publishers may simultaneously use one anti tampering filter in this way.

An example of such a commercial agreement is illustrated as follows. A website X is primarily funded through the sale of advertising space on its webpages. An analysis has been performed by comparing the number of downloads of web pages to that of advertising images demonstrating that a large percentage of the website s audience is using blocking tools. The website X enters into an agreement with an anti tampering filter service provider. The website is then modified so that a vital resource such as its main CSS stylesheet is downloaded by clients through the filter. Finally it is additionally modified so that advertising content is also downloaded through the filter. Many other websites may also be in a similar situation as website X and enter into similar commercial agreements permitting them to also integrate their websites with the anti tampering filter service.

The complete system developed by the inventors is best understood with reference to which depicts the interactions of the components. These interactions are presently discussed in detail.

After the operator of the 1party server enters into an agreement with the provider of the anti tampering filter service the 1party server registers both protected and vital resources with the anti tampering filter . In this example it registers via message a vital resource which is hosted on separate third party server server . The anti tampering filter creates a new unique identifier and stores it in the database along with the original URL of the resource. The anti tampering filter then returns a tamper proof URL with response to the 1party server which contains the unique identifier for the resource.

In one embodiment the database stores the unique identifier and original URL indefinitely. In other embodiments they are stored for a finite amount of time. In the latter case the 1party server must periodically renew the registration of each resource.

In the embodiment of the response contains the tamper proof URL of the registered resource. In other embodiments it may instead contain the unique identifier of the registered resource. In the latter case the 1party server would construct the tamper proof URL itself by combining the address of the anti tampering filter with the received unique identifier.

Upon receiving the response from the anti tampering filter the web server replaces all instances of the original resource URL in the document to produce a new version of the document shown as index.html new in .

The registration steps to are performed for at least one vital resource and are repeated for each additional vital or protected resource that is desired to be protected from tampering. Regardless of whether the resource in question is a vital resource or a protected resource the registration steps to are the same. The client now connects to the 1party server to request the document request . Being unaware of the difference between the document and the corresponding document the client receives the new document from the web server response . This new document contains tamper proof URLs in place of the original URLs contained in original document of protected resources and vital resources.

The client now proceeds to download the protected and vital resources specified in the new document . Each such resource whether vital or protected is identified in the document by means of a tamper proof URL that is hosted on the anti tampering filter . For each such vital and protected resource it connects to the the anti tampering filter to request the resource associated with the resource s tamper proof URL. Each tamper proof URL contains a unique ID corresponding to a specific resource that was previously registered in step . The anti tampering filter uses this unique ID to lookup step the original URL in the database . The anti tampering filter then requests the resource specified by the original URL from the relevant server step . Note that it is possible that for some resources the 3party server and the 1party server may be the same.

The anti tampering filter returns the resource received from the 3party server to the client . In some embodiments the anti tampering filter may optimize this process by returning a cached version of the data which has been recorded from a previous request for the same resource.

Steps and are repeated for each additional tamper proof URL contained in the document received by the client.

At step the client inspects the resource referenced by the received document . If the resource is tamper proof then the anti tampering filter will host its URL. In this case the client proceeds to connect to the anti tampering filter to request the resource by its tamper proof URL. The anti tampering filter uses the unique identifier contained in the tamper proof URL to look up the original resource in the database . The anti tampering filter then connects to the 3party server and requests the resource by its original URL. The 3party server returns the resource to the anti tampering filter which proceeds to send it to the client . The client then returns to step to download the next resource.

As a consequence of the present system the client will request one or more vital resources and the one or more protected resources via tamper proof URLs instead of their original URLs. Because both the vital resources and the protected resources have similar tamper proof URLs it is impossible to reliably disrupt the downloading of one without inadvertently disrupting the other. Therefore attempts to tamper with the downloading of protected resources will cause unintended damage to the functionality of the client.

In an embodiment the invention provides a system to ensure that the downloading of advertising images cannot be tampered with by ad blocking tools without impairing the usability of the website to an unacceptable level. By virtue of this anti tampering system a website can now ensure that its content can only be enjoyed in conjunction with the intended advertising.

In another embodiment the invention provides a method to ensure that javascript source code resources are downloaded. Javascript resources provide a useful and convenient way to extend the functionality of the web page with interactive features to track data for the purposes of business intelligence or to download additional content into the web page such as advertising images. By virtue of the present system it becomes impossible for tampering tools to selectively block a javascript resource without also blocking resources vital to the functionality and performance of the website.

In another embodiment the invention provides a method to ensure that communication between the client and a server is not blocked. For example javascript code included on a web page may be required to report data to a third party analytics system. Such services are made accessible via web Application Programming Interfaces APIs . Clients connect to a web API in the same way they connect to a web server to download a file using a URL. Using the present system a web server may register the URLs of web APIs in the same way that it registers the URL of a resource step . As a consequence it is impossible for a tampering tool to block access to the API without also disrupting the downloading of a vital page element thereby impairing the usability of the web site to an undesirable extent.

The words comprises comprising when used in this specification are to specify the presence of stated features integers steps or components but does not preclude the presence or addition of one or more other features integers steps components or groups thereof.

As will be understood by those familiar with the art the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules managers functions systems engines layers features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the invention or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules managers functions systems engines layers features attributes methodologies and other aspects of the invention can be implemented as software hardware firmware or any combination of the three. Of course wherever a component of the present invention is implemented as software the component can be implemented as a script as a standalone program as part of a larger program as a plurality of separate scripts and or programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of skill in the art of computer programming. Additionally the present invention is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

