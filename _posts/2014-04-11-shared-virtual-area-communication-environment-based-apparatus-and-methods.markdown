---

title: Shared virtual area communication environment based apparatus and methods
abstract: Improved systems and methods for navigating and interacting in virtual communication environments are described. At least some of these systems and methods provide a framework that includes one or more virtual areas and supports realtime communications between the communicants. At least some of these systems and methods provide an interface that includes navigation controls that enable a user to navigate virtual areas and interaction controls that enable the user to interact with other communicants in the one or more virtual areas.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09411490&OS=09411490&RS=09411490
owner: Sococo, Inc.
number: 09411490
owner_city: Eugene
owner_country: US
publication_date: 20140411
---
This application. is a continuation of prior U.S. patent application No 13 422 757 filed Mar. 16 2012 which. is a continuation of prior U.S. patent application Ser. No. 12 418 243 filed Apr. 3 2009 which issued as U.S. Pat. No. 8 191 001 on May 29 2012 and claims the benefit of U.S. Provisional Application No. 61 042714 filed Apr. 5 2008. The entirety of prior U.S patent application Ser. No. 12 418 243 filed Apr. 3 2009 is incorporated herein by reference.

This application also relates to the following co pending patent applications the entirety of each of which is incorporated herein by reference 

When face to face communications are not practical people often rely on one or more technological solutions to meet their communications needs. These solutions typically are designed to simulate one or more aspects of face to face communications. Traditional telephony systems enable voice communications between callers. Instant messaging also referred to as chat communications systems enable users to communicate text messages in real time through instant message computer clients that are interconnected by an instant message server. Some instant messaging systems additionally allow users to be represented in a virtual environment by user controllable graphic objects referred to as avatars . Interactive virtual reality communication systems enable users in remote locations to communicate over multiple real time channels and to interact with each other by manipulating their respective avatars in three dimensional virtual spaces. What are needed are improved systems and methods for interfacing with virtual communication environments.

In one aspect the invention features a method in accordance with which interaction options are determined from results of querying at least one interaction database that includes interaction records describing respective interactions of a user in a virtual communication environment. The virtual communication environment includes virtual areas and supports realtime communications between the user and other communicants. Each of the interaction records includes a respective place attribute value that identifies a respective one of the virtual areas in which a respective one of the interactions occurred and one or more communicant identifier attribute values that identify respective ones of the communicants that participated in the interaction in the respective virtual area. On a display a user interface is presented. The user interface includes graphic representations of the interaction options in association with a respective set of one or more user selectable controls. In response to the user s selection of a respective one of the user selectable controls an interaction of the user in the virtual communication environment is initiated.

In another aspect the invention features a method in accordance with which a representation of a virtual area in a virtual communication environment is displayed on a display. The virtual communication environment supports realtime communications between a user and other communicants. On the display user selectable controls that enable the user to manage interactions with the virtual area and ones of the other communicants are presented. A respective presence of the user is established in the virtual area in response to input received from the user via the user selectable controls. On the display a respective graphical representation of each of the communicants who has presence in the virtual area is depicted. In this process each of the respective graphic representations of the communicants is rendered in a respective position in the virtual area and with a three dimensional spherical body element supporting a directional graphic sight element that has a variable orientation indicating a direction of attentional focus of the user in the virtual area.

In another aspect the invention features a method in accordance with which a representation of a virtual area in a virtual communication environment is displayed on a display. The virtual communication environment supports realtime communications between a user and other communicants. On the display user selectable controls that enable the user to manage interactions with the virtual area and ones of the other communicants are presented. In this process an immersion control interface is displayed. The immersion control interface enables the user to select a level of interaction with the particular virtual area from a set of different interaction levels. A respective presence of the user is established in the virtual area in response to input received from the user via the user selectable controls. On the display a respective graphical representation of each of the communicants who has presence in the virtual area is depicted.

In another aspect the invention features a method in accordance with which place attribute values are associated with realtime interactions of a user and other communicants operating on respective network nodes and sharing a virtual communication environment. The virtual communication environment includes one or more virtual areas and supporting realtime communications between the user and the other communicants. For each interaction involving a respective one of the communicants in a respective one of the one or more virtual areas the process of associating place attribute values involves generating a respective interaction record that includes a respective place attribute value that identifies the virtual area in which the interaction occurred and one or more communicant identifier attribute values that identify respective ones of the communicants that participated in the interaction. The user and the other communicants are interfaced to the virtual communication environment based on the associated place attribute values.

In another aspect the invention features a method in accordance with which at a predetermined time an invitation to join a meeting and a control for accepting the invitation. The meeting is scheduled to occur in a virtual area of a virtual communication environment is presented on a display. The virtual communication environment supports realtime communications between a user and other communicants operating on respective network nodes. In response to the user s selection of the control a respective presence of the user is established in the virtual area. On the display a representation of a virtual area and a respective graphical representation of each of the communicants who has presence in the virtual area are depicted.

In another aspect the invention features a method in accordance with which a representation of a virtual area in a virtual communication environment is displayed on a display. The virtual communication environment supports realtime communications between a user and other communicants operating on respective network nodes. On the display user selectable controls that enable the user to manage interactions with the virtual area and ones of the other communicants are presented. On the display a respective graphical representation of each of the communicants who has a presence in the virtual area is depicted. In this process respective locations of the objects in the virtual area are determined based on respective realtime differential motion streams that describe movement of the objects in the virtual area and are received from the network nodes. At least a particular one of the graphic representations of the communicants automatically is repositioned based on at least one of the determined position of the particular graphic representation in the virtual area and proximity of the particular graphic representation to at least one other graphic representation of the communicants in the virtual area.

In another aspect the invention features a method in accordance with which a representation of a virtual area in a virtual communication environment is displayed on a display. The virtual communication environment supports realtime communications between a user and other communicants. On the display user selectable controls that enable the user to manage interactions with the virtual area and ones of the other communicants are presented. The user selectable controls comprise a modification control that enables the user to initiate a modification of the virtual area on demand. A respective presence of the user is established in the virtual area in response to input received from the user via the user selectable controls. On the display a respective graphical representation of each of the communicants who has presence in the virtual area is depicted.

In another aspect the invention features a method in accordance with which place attribute values are associated with data files received from communicants operating on respective network nodes and sharing a virtual communications environment that includes one or more virtual areas and supports realtime communications between the communicants. For each of the data files shared by a respective one of the communicants in a respective one of the one or more virtual areas the process of associating place attribute values includes generating a respective interaction record comprising a respective one of the place attribute values that identifies the respective virtual area in which the data file was shared and a respective data file identifier that identifies the respective data file. Sharing of the data files between the communicants is managed based on the associated place attribute values.

In another aspect the invention features a method in accordance with which a graphic representation of a virtual area in a virtual communication environment is displayed on a display. The virtual communication environment supports realtime communications between a first communicant operating on a first network node and a second communicant operating on a second network node. A first software application that establishes a first realtime data stream connection between the first and second network nodes is executed on the first network node. The first realtime data stream connection is associated with a reference to the virtual area. Concurrently with the execution of the first software application a second software application that establishes a second realtime data stream connection between the first network node and a third network node on which a third communicant is operating is executed on the first network node. The second realtime data stream connection is free of any reference to the virtual area. One or more integrated realtime data streams are produced from realtime data streams exchanged over the first and second realtime data stream connections.

In another aspect the invention features a method in accordance with which a server network node is operated to perform operations including the following operations. An instance of a client software application is executed in association with a virtual area in a virtual communication environment supporting realtime communications between communicants operating on respective client network nodes. Realtime input data streams are received from respective ones of the client network nodes associated with the communicants interacting in the virtual area. A composite data stream is produced from the realtime input data streams. The composite data stream is inputted to the executing instance of the client software application. Respective instances of an output data stream are generated from output generated by the executing instance of the client software application at least in part in response to the inputting of the composite data stream. The instances of the output data stream are transmitted to respective ones of the client network nodes associated with communicants interacting in the virtual area.

In another aspect the invention features a method in accordance with which a virtual area in a virtual communications environment is established. The virtual communication environment supports realtime communications between communicants operating on respective network nodes. A respective presence is created in the virtual area for each of one or more of the communicants. Information is transmitted between a file store associated with the virtual area and a wiki resource in response to input received from a respective one of the network nodes associated with a respective one of the communicants who has presence in the virtual area.

In another aspect the invention features a method in accordance with which place attribute values are associated with realtime interactions of a user and other communicants operating on respective network nodes and sharing a virtual communication environment comprising at least one virtual area and supporting realtime communications between the user and the other communicants. Each of the user and the other communicants is associated with a respective object in the virtual area. The method additionally includes interfacing the user and the other communicants to the virtual communication environment based on the associated place attribute values.

The invention also features apparatus operable to implement the method described above and computer readable media storing computer readable instructions causing a computer to implement the method described above.

In the following description like reference numbers are used to identify like elements. Furthermore the drawings are intended to illustrate major features of exemplary embodiments in a diagrammatic manner. The drawings are not intended to depict every feature of actual embodiments nor relative dimensions of the depicted elements and are not drawn to scale.

A communicant is a person who communicates or otherwise interacts with other persons over one or more network connections where the communication or interaction may or may not occur in the context of a virtual area. A user is a communicant who is operating a particular network node that defines a particular perspective for descriptive purposes. A realtime contact of a user is a communicant or other person who has communicated with the user via a realtime communications platform.

A communicant interaction is any type of direct or indirect action or influence between a communicant and another network entity which may include for example another communicant a virtual area or a network service. Exemplary types of communicant interactions include communicants communicating with each other in realtime a communicant entering a virtual area and a communicant requesting access to a resource from a network service.

 Presence refers to the ability and willingness of a networked entity e.g. a communicant service or device to communicate where such willingness affects the ability to detect and obtain information about the state of the entity on a network and the ability to connect to the entity. When a communicant has presence in a particular virtual area that communicant is said to be in that virtual area.

A virtual communication environment is a representation of a computer managed space that includes at least one virtual area and supports realtime communications between communicants.

A place attribute value refers to a value that characterizes an aspect of a place within a virtual communication environment where a place may refer to spatial aspects of the virtual communication environment including but not limited to a set of virtual areas a single virtual area one or more rooms within a virtual area a zone or other region within a room of a virtual area or a particular position within a virtual area. A place identifier for example is a place attribute that denotes identifies or locates a place within a virtual environment.

The term interfacing means providing one or more facilities enabling a communicant to physically functionally or logically interact with a virtual communication environment. These facilities may include one or more of computer hardware computer firmware and computer software.

A computer is any machine device or apparatus that processes data according to computer readable instructions that are stored on a computer readable medium either temporarily or permanently. A computer operating system is a software component of a computer system that manages and coordinates the performance of tasks and the sharing of computing and hardware resources. A software application also referred to as software an application computer software a computer application a program and a computer program is a set of instructions that a computer can interpret and execute to perform one or more specific tasks. A data file is a block of information that durably stores data for use by a software application.

A window is a visual area of a display that typically includes a user interface. A window typically displays the output of a software process and typically enables a user to input commands or data for the software process. A window that has a parent is called a child window. A window that has no parent or whose parent is the desktop window is called a top level window. A desktop is a system defined window that paints the background of a graphical user interface GUI and serves as the base for all windows displayed by all software processes.

A network node also referred to simply as a node is a junction or connection point in a communications network. Exemplary network nodes include but are not limited to a terminal a computer and a network switch. A server network node is a host computer on a network that responds to requests for information or service. A client network node is a computer on a network that requests information or service from a server. A network connection is a link between two communicating network nodes. The term local network node refers to a network node that currently is the primary subject of discussion. The term remote network node refers to a network node that is connected to a local network node by a network communications link. A connection handle is a pointer or identifier e.g. a uniform resource identifier URI that can be used to establish a network connection with a communicant resource or service on a network node. A network communication can include any type of information e.g. text voice audio video electronic mail message data file motion data stream and data packet that is transmitted or otherwise conveyed from one network node to another network node over a network connection

A database is an organized collection of records that are presented in a standardized format that can be searched by computers. A database may be stored on a single computer readable data storage medium on a single computer or it may be distributed across multiple computer readable data storage media on one or more computers.

A file store is a data file storage system that allows network access to data files that are stored on one or more nodes of the network.

A multitrack recording is a data file that stores multiple separable tracks or layers of data streams of the same or different data type e.g. audio motion video chat where each of the tracks can be separately accessed and manipulated.

An identifier identifies an entity in a way that is locally unique or globally unique. A resource identifier identifies a resource and provides a handle for interacting with e.g. acting on or obtaining a representation of the resource. A resource refers to any type of information e.g. a web page a file streaming data and presence data or service e.g. a service that establishes a communications link with another user that is accessible over a network. A resource may be identified by a uniform resource identifier URI . A handle is a pointer or identifier e.g. a uniform resource identifier URI that can be used to establish a network connection with a communicant resource or service on a network node.

A data source referred to herein simply as a source is any of a device part of a device e.g. a computer or software that originates data.

A data sink referred to herein simply as a sink is any of a device part of a device e.g. a computer or software that receives data.

A switching rule is an instruction that specifies one or more conditions that must be satisfied in order to connect or disconnect one or more real time data sources and one or more real time data sinks.

A stream mix is a combination of two or more real time data streams of the same or semantically consistent type e.g. audio video chat and motion data . For example a set of voice streams might be mixed into a single voice stream or a voice stream might be mixed into the audio portion of a video stream.

A stream handling topology is the organization of network routes over which real time data streams each of which may be a mixed stream or an unmixed stream are delivered to one or more network nodes.

A wiki is a website or similar online resource that allows users to add and edit content collectively. In the case of a website based wiki users typically collaborate using respective web browser applications.

A real time data stream is data that is structured and processed in a continuous flow and is designed to be received with no delay or only imperceptible delay real time data streams include digital representations of voice video user movements facial expressions and other physical phenomena as well as data within the computing environment that may benefit from rapid transmission rapid execution or both rapid transmission and rapid execution including for example avatar movement instructions text chat real time data feeds e.g. sensor data machine control instructions transaction streams and stock quote information feeds and file transfers.

A virtual area also referred to herein as an area or a place is a representation of a computer managed space or scene. Virtual areas may be two dimensional or three dimensional representations. Oftentimes a virtual area is designed to simulate a physical real world space. For example using a traditional computer monitor a virtual area may be visualized as a two dimensional graphic of a three dimensional computer generated space. However virtual areas do not require an associated visualization to implement switching rules.

A virtual area application also referred to as a virtual area specification is a description of a virtual area that is used in creating a virtual environment. The virtual area application typically includes definitions of geometry physics and realtime switching rules that are associated with one or more zones of the virtual area.

A virtual environment is a representation of a computer managed space that includes at least one virtual area and supports realtime communications between communicants.

A zone is a region of a virtual area that is associated with at least one switching rule or governance rule. A switching rule controls the switching e.g. routing connecting and disconnecting real time data streams between network nodes communicating through a shared virtual area. A governance rule control a communicant s access to a resource e.g. an area a region of an area or the contents of that area or region the scope of that access and follow on consequences of that access e.g. the requirement that audit records relating to that access be recorded .

In the context of a virtual area an object is any type of discrete element in a virtual area that may be usefully treated as separate from the geometry of the virtual area. Exemplary objects include doors portals windows view screens and speakerphone. An object typically has attributes or properties that are separate and distinct from the attributes and properties of the virtual area. An avatar is an object that represents a communicant in a virtual area.

A position in a virtual area refers to a location of a point or an area or a volume in the virtual area. A point typically is represented by a single set of two dimensional or three dimensional coordinates e.g. x y z that define a spot in the virtual area. An area typically is represented by the three dimensional coordinates of three or more coplanar vertices that define a boundary of a closed two dimensional shape in the virtual area. A volume typically is represented by the three dimensional coordinates of four or more non coplanar vertices that define a dosed boundary of a three dimensional shape in the virtual area.

A statistic is a quantity that is calculated in a statistical analysis from data in a sample and characterizes an aspect of the sample. The term statistical analysis refers to a process of analyzing data for the purpose of making generalizations or inferences determining values of variables of a predictive model determining one or more metrics that summarize the data or classifying one or more aspects or subjects of the data.

A third party refers to an entity that is not affiliated with the entity that owns or controls Sococo platform. A third party typically is independent of any contract between a communicant and the owner of the Sococo platform.

As used herein the term includes means includes but not limited to the term including means including but not limited to and based on means based at least in part on.

The embodiments that are described herein provide improved systems and methods for navigating and interacting in virtual communication environments. These embodiments provide an interface that includes navigation controls that enable a user to navigate virtual areas and interaction controls that enable the user to interact with other communicants in the virtual areas.

In some embodiments the network infrastructure service environment manages sessions of the first and second client nodes in a virtual area in accordance with a virtual area application . The virtual area application is hosted by the virtual area and includes a description of the virtual area . The communications applications operating on the first and second client network nodes present respective views of the virtual area in accordance with data received from the network infrastructure service environment and provide respective interfaces for receiving commands from the communicants. The communicants typically are represented in the virtual area by respective avatars which move about the virtual area in response to commands that are input by the communicants at their respective network nodes. Each communicant s view of the virtual area typically is presented from the perspective of the communicant s avatar which increases the level of immersion experienced by the communicant. Each communicant typically is able to view any part of the virtual area around his or her avatar. In some embodiments the communications applications establish realtime data stream connections between the first and second client network nodes and other network nodes sharing the virtual area based on the positions of the communicants avatars in the virtual area .

The network infrastructure service environment also maintains a relationship database that contains records of interactions communicants in virtual areas. Each interaction record describes the context of an interaction between one or more communicants in a virtual area.

The network may include any of a local area network LAN a metropolitan area network MAN and a wide area network WAN e.g. the internet . The network typically includes a number of different computing platforms and transport facilities that support the transmission of a wide variety of different media types e.g. text voice audio and video between network nodes.

The communications application see typically operates on a client network node that includes software and hardware resources which together with administrative policies user preferences including preferences regarding the exportation of the user s presence and the connection of the user to areas and other users and other settings define a local configuration that influences the administration of realtime connections with other network nodes. The network connections between network nodes may be arranged in a variety of different stream handling topologies including a peer to peer architecture a server mediated architecture and hybrid architectures that combine aspects of peer to peer and server mediated architectures. Exemplary topologies of these types are described in U.S. application Ser. Nos. 11 923 629 and 11 923 634 both of which were filed on Oct. 24 2007.

The network infrastructure service environment typically includes one or more network infrastructure services that cooperate with the communications applications in the process of establishing and administering network connections between the client nodes and other network nodes see . The network infrastructure services may run on a single network node or may be distributed across multiple network nodes. The network infrastructure services typically run on one or more dedicated network nodes e.g. a server computer or a network device that performs one or more edge services such as routing and switching . In some embodiments however one or more of the network infrastructure services run on at least one of the communicants network nodes. Among the network infrastructure services that are included in the exemplary embodiment of the network infrastructure service environment are an account service a security service an area service a rendezvous service and an interaction service.

The account service manages communicant accounts for the virtual environment. The account service also manages the creation and issuance of authentication tokens that can be used by client network nodes to authenticate themselves to any of the network infrastructure services.

The security service controls communicants access to the assets and other resources of the virtual environment. The access control method implemented by the security service typically is based on one or more of capabilities where access is granted to entities having proper capabilities or permissions and an access control list where access is granted to entities having identities that are on the list . After a particular communicant has been granted access to a resource that communicant typically uses the functionality provided by the other network infrastructure services to interact in the network communications environment .

The area service administers virtual areas. In some embodiments the area service remotely configures the communications applications operating on the first and second client network nodes in accordance with the virtual area application subject to a set of constraints see . The constraints typically include controls on access to the virtual area. The access controls typically are based on one or more of capabilities where access is granted to communicants or client nodes having proper capabilities or permissions and an access control list where access is granted to communicants or client nodes having identities that are on the list .

The area service also manages network connections that are associated with the virtual area subject to the capabilities of the requesting entities maintains global state information for the virtual area and serves as a data server for the client network nodes participating in a shared communication session in a context defined by the virtual area . The global state information includes a list of all the objects that are in the virtual area and their respective locations in the virtual area. The area service sends instructions that configure the client network nodes. The area service also registers and transmits initialization information to other client network nodes that request to join the communication session. In this process the area service may transmit to each joining client network node a list of components e.g. plugins that are needed to render the virtual area on the client network node in accordance with the virtual area application . The area service also ensures that the client network nodes can synchronize to a global state if a communications fault occurs. The area service typically manages communicant interactions with virtual areas via govemance rules that are associated with the virtual areas.

The rendezvous service manages the collection storage and distribution of presence information and provides mechanisms for network nodes to communicate with one another e.g. by managing the distribution of connection handles subject to the capabilities of the requesting entities. The rendezvous service typically stores the presence information in a presence database. The rendezvous service typically manages communicant interactions with each other via communicant privacy preferences.

The interaction service maintains the relationship database that contains the records of interactions between communicants. For every interaction between communicants one or more services of the network infrastructure service environment e.g. the area service transmit interaction data to the interaction service. In response the interaction service generates one or more respective interaction records and stores them in the relationship database. Each interaction record describes the context of an interaction between a pair of communicants. For example in some embodiments an interaction record contains an identifier for each of the communicants an identifier for the place of interaction e.g. a virtual area instance a description of the hierarchy of the interaction place e.g. a description of how the interaction room relates to a larger area start and end times of the interaction and a list of all files and other data streams that are shared or recorded during the interaction. Thus for each realtime interaction the interaction service tracks when it occurred where it occurred and what happened during the interaction in terms of communicants involved e.g. entering and exiting objects that are activated deactivated and the files that were shared.

The interaction service also supports queries on the relationship database subject to the capabilities of the requesting entities. The interaction service presents the results of queries on the interaction database records in a sorted order e.g. most frequent or most recent based on virtual area. The query results can be used to drive a frequency sort of contacts whom a communicant has met in which virtual areas as well as sorts of who the communicant has met with regardless of virtual area and sorts of the virtual areas the communicant frequents most often. The query results also may be used by application developers as part of a heuristic system that automates certain tasks based on relationships. An example of a heuristic of this type is a heuristic that permits communicants who have visited a particular virtual area more than five times to enter without knocking by default or a heuristic that allows communicants who were present in an area at a particular time to modify and delete files created by another communicant who was present in the same area at the same time. Queries on the relationship database can be combined with other searches. For example queries on the relationship database may be combined with queries on contact history data generated for interactions with contacts using a communication system e.g. Skype Facebook and Flickr that is outside the domain of the network infrastructure service environment .

The communications application and the network infrastructure service environment typically administer the realtime connections with network nodes in a communication context that is defined by an instance of a virtual area. The virtual area instance may correspond to an abstract non geometric virtual space that is defined with respect to abstract coordinates. Alternatively the virtual area instance may correspond to a visual virtual space that is defined with respect to one two or three dimensional geometric coordinates that are associated with a particular visualization. Abstract virtual areas may or may not be associated with respective visualizations whereas visual virtual areas are associated with respective visualizations.

In some embodiments the spatial virtual communication environment is modeled as a spatial hierarchy of virtual areas also referred to herein as places or locations and objects. The spatial hierarchy includes an ordered sequence of levels ranging from a top level to a bottom level. Each of the places in a successive one of the levels of the spatial hierarchy is contained in a respective one of the places in a preceding one of the levels. Each of the objects in the spatial hierarchy is contained in a respective one of the places. The levels of the spatial hierarchy typically are associated with respective visualizations that are consistent with a geographical architectural or urban metaphor and are labeled accordingly. The zones of each virtual area are defined by respective meshes some of which define elements of a physical environment e.g. spaces such as rooms and courtyards that are associated with a building that may contain objects e.g. avatars and props such as view screen objects and conferencing objects .

As explained above communicants typically are represented by respective avatars in a virtual area that has an associated visualization. The avatars move about the virtual area in response to commands that are input by the communicants at their respective network nodes. In some embodiments the communicant s view of a virtual area instance typically is presented from the perspective of the communicant s avatar and each communicant typically is able to view any part of the visual virtual area around his or her avatar increasing the level of immersion that is experienced by the communicant.

As explained in detail below the virtual area includes zones that are associated with respective rules that govern the switching of realtime data streams between the network nodes that are represented by the avatars in the virtual area . During a typical communication session the dashed lines demarcating the zones in are not visible to the communicants although there may be visual cues associated with such zone boundaries. The switching rules dictate how local connection processes executing on each of the network nodes establishes communications with the other network nodes based on the locations of the communicants avatars in the zones of the virtual area .

A virtual area is defined by a specification that includes a description of geometric elements of the virtual area and one or more rules including switching rules and governance rules. The switching rules govern realtime stream connections between the network nodes. The governance rules control a communicant s access to resources such as the virtual area itself regions with the virtual area and objects within the virtual area. In some embodiments the geometric elements of the virtual area are described in accordance with the COLLADA Digital Asset Schema Release 1.4.1 April 2006 specification available from http www.khronos.org collada and the switching rules are described using an extensible markup language XML text format referred to herein as a virtual space description format VSDL in accordance with the COLLADA Streams Reference specification described in U.S. application Ser. Nos. 11 923 629 and 11 923 634.

The geometric elements of the virtual area typically include physical geometry and collision geometry of the virtual area. The physical geometry describes the shape of the virtual area. The physical geometry typically is formed from surfaces of triangles quadrilaterals or polygons. Colors and textures are mapped onto the physical geometry to create a more realistic appearance for the virtual area. Lighting effects may be provided for example by painting lights onto the visual geometry and modifying the texture color or intensity near the lights. The collision geometry describes invisible surfaces that determine the ways in which objects can move in the virtual area. The collision geometry may coincide with the visual geometry correspond to a simpler approximation of the visual geometry or relate to application specific requirements of a virtual area designer.

The switching rules typically include a description of conditions for connecting sources and sinks of realtime data streams in terms of positions in the virtual area. Each rule typically includes attributes that define the realtime data stream type to which the rule applies and the location or locations in the virtual area where the rule applies. In some embodiments each of the rules optionally may include one or more attributes that specify a required role of the source a required role of the sink a priority level of the stream and a requested stream handling topology. In some embodiments if there are no explicit switching rules defined for a particular part of the virtual area one or more implicit or default switching rules may apply to that part of the virtual area. One exemplary default switching rule is a rule that connects every source to every compatible sink within an area subject to policy rules. Policy rules may apply globally to all connections between the client nodes or only to respective connections with individual client nodes. An example of a policy rule is a proximity policy rule that only allows connections of sources with compatible sinks that are associated with respective objects that are within a prescribed distance or radius of each other in the virtual area.

In some embodiments governance rules are associated with a virtual area to control who has access to the virtual area who has access to its contents what is the scope of that access to the contents of the virtual area e.g. what can a user do with the contents and what are the follow on consequences of accessing those contents e.g. record keeping such as audit logs and payment requirements . In some embodiments an entire virtual area or a zone of the virtual area is associated with a governance mesh. In some embodiments a governance mesh is implemented in a way that is analogous to the implementation of the zone mesh described in U.S. application Ser. Nos. 11 923 629 and 11 923 634. A governance mesh enables a software application developer to associate governance rules with a virtual area or a zone of a virtual area. This avoids the need for the creation of individual permissions for every file in a virtual area and avoids the need to deal with the complexity that potentially could arise when there is a need to treat the same document differently depending on the context.

In some embodiments a virtual area is associated with a governance mesh that associates one or more zones of the virtual area with a digital rights management DRM function. The DRM function controls access to one or more of the virtual area or one or more zones within the virtual area or objects within the virtual area. The DRM function is triggered every time a communicant crosses a governance mesh boundary within the virtual area. The DRM function determines whether the triggering action is permitted and if so what is the scope of the permitted action whether payment is needed and whether audit records need to be generated. In an exemplary implementation of a virtual area the associated governance mesh is configured such that if a communicant is able to enter the virtual area he or she is able to perform actions on all the documents that are associated with the virtual area including manipulating the documents viewing the documents downloading the documents deleting the documents modifying the documents and re uploading the documents. In this way the virtual area can become a repository for information that was shared and discussed in the context defined by the virtual area.

Additional details regarding the specification of a virtual area are described in U.S. Application No. 61 042 714 which was filed on Apr. 4 2008 Ser. No. 11 923 629 which was filed on Oct. 24 2007 and Ser. No. 11 923 634 which was filed on Oct. 24 2007 .

A communicant typically connects to the network from a client network node. The client network node typically is implemented by a general purpose computer system or a dedicated communications computer system or console such as a network enabled video game console . The client network node executes communications processes that establish realtime data stream connections with other network nodes and typically executes visualization rendering processes that present a view of each virtual area entered by the communicant.

A communicant may interact e.g. input commands or data with the computer system using one or more input devices e.g. one or more keyboards computer mice microphones cameras joysticks physical motion sensors such Wii input devices and touch pads . Information may be presented through a graphical user interface GUI that is presented to the communicant on a display monitor which is controlled by a display controller . The computer system also may include other input output hardware e.g. peripheral output devices such as speakers and a printer . The computer system connects to other network nodes through a network adapter also referred to as a network interface card or NIC .

A number of program modules may be stored in the system memory including application programming interfaces APIs an operating system OS e.g. the Windows XP operating system available from Microsoft Corporation of Redmond Wash. U.S.A. an embodiment of the communications application drivers e.g. a GUI driver network transport protocols for transmitting and receiving real time data streams and data e.g. input data output data program data a registry and configuration settings .

The operating system includes an executive that provides the base operating system services e.g. memory management process and thread management security input output and interprocess communication for creating a run time execution environment on the computer system. The registry typically contains the following information parameters needed to boot and configure the system system wide software settings that control the operation of operating system a security database and per user profile settings. A native operating system OS application programming interface API exposes the base operating system services of the executive to the communications application and other user applications. As used herein the term service or service module refers to a component of an operating system that provides a set of one or more functions.

In some embodiments the communications application includes processes that control the presentation of a respective view of a virtual area and objects in the virtual area on the display monitor and processes that control the switching of real time data streams between the client network node the client network node and the virtual environment creator . The communications application interfaces with the GUI driver and the user input to present the views of the virtual area and to allow the communicant to control the operation of the communications application .

Embodiments of the communications application may be implemented by one or more discrete modules or data processing components that are not limited to any particular hardware firmware or software configuration. In general these modules may be implemented in any computing or data processing environment including in digital electronic circuitry e.g. an application specific integrated circuit such as a digital signal processor DSP or in computer hardware firmware device driver or software. In some embodiments the functionalities of the modules are combined into a single data processing component. In some embodiments the respective functionalities of each of one or more of the modules are performed by a respective set of multiple data processing components. In some implementations process instructions e.g. machine readable code such as computer software for implementing the methods that are executed by the embodiments of the communications application as well as the data it generates are stored in one or more machine readable media. Storage devices suitable for tangibly embodying these instructions and data include all forms of non volatile computer readable memory including for example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable hard disks magneto optical disks DVD ROM RAM and CD ROM RAM. Embodiments of the communications application may be implemented in any one of a wide variety of electronic devices including personal computing devices e.g. desktop computers mobile computers and communications devices network devices e.g. server computers routers switches and hubs game consoles cable TV and hybrid set top boxes and modems.

In some embodiments communications over the network are conducted in accordance with the Transmission Control Protocol Internet Protocol TCP IP . The TCP portion of the protocol provides the transport function by breaking a message into smaller packets reassembling the packets at the other end of the communication network and re sending any packets that get lost along the way. The IP portion of the protocol provides the routing function by assigning to the data packets addresses for the destination network and the target node at the destination network. Each data packet that is communicated using the TCP IP protocol includes a header portion that contains the TCP and IP information. The IP protocol provides no guarantee of packet delivery to the upper layers of the communications stack. The TCP protocol on the other hand provides a connection oriented end to end transport service with guaranteed in sequence packet delivery. In this way the TCP protocol provides a reliable transport layer connection.

In other embodiments communications over the network may be conducted in accordance with the User Datagram Protocol Internet Protocol UDP IP . UDP may be used in place of TCP in conditions when a reliable delivery is not required. For example UDP IP may be used for real time audio and video traffic where lost data packets are simply ignored because of any of the following reasons there is no time to retransmit or any degradation of overall data quality is acceptable.

Some embodiments may use the Java Media Framework JMF which supports device capture encoding decoding rendering and the Real Time Transport Protocol RTP . A variety of network protocols may be used in transmitting and receiving RTP data between the area client network nodes including peer to peer networking frameworks a centralized server using TCP sockets alone or in combination with UDP or multicast protocols.

The execution environment also includes hardware link level and access protocols which may correspond to the Data link and Physical layers of the Open System Interconnection OSI reference model.

In the illustrated embodiments communications between the client network nodes and the virtual environment creator are conducted in accordance with the TCP IP protocol. In these embodiments the computer system determines an IP address for each of its network interfaces before it communicates using TCP IP. This process may involve contacting a server to dynamically obtain an IP address for one or more of its network interfaces. The computer system may use a Dynamic Host Configuration Protocol DHCP to issue a request for an IP address to a DHCP server. In this regard the computer system broadcasts a DHCP request packet at system start up requesting allocation of an IP address for an indicated network interface. Upon receiving the DHCP request packet the DHCP server allocates an IP address to the computer system for use with the indicated network interface. The computer system then stores the IP address in the response from the server as the IP address to associate with that network interface when communicating using an IP protocol.

In some embodiments the one or more server network nodes of the virtual environment creator are implemented by respective general purpose computer systems of the same type as the client network node except that each server network node typically includes one or more server software applications.

In other embodiments the one or more server network nodes of the virtual environment creator are implemented by respective network devices that perform edge services e.g. routing and switching .

The system database and storage facility stores various kinds of information that is used by the platform. Exemplary information that typically is stored by the storage facility includes the presence database the relationship database an avatar database a real user id RUID database an art cache database and an area application database. This information may be stored on a single network node or it may be distributed across multiple network nodes.

The network infrastructure service environment associates data files with places. A Sococo place may have arbitrary data i.e. files and streams associated with it. If a user shares a document in a Sococo place the file is associated with the room and will persist there until it is deleted by an authorized user.

In some embodiments the network infrastructure service environment associates a file stored on a user s network node with a virtual area in response to receipt of an indication by the user to share the file with ones of the other communicants in the virtual area.

A document can be shared in a variety of ways. In a first exemplary case a document is shared by a user by directing a document to a view screen in a virtual area also referred to herein as a Sococo place that is being shared with another user. In a second exemplary case a document is shared by viewing the document in the shared Sococo place where the document is being presented by a server process running a shared application program e.g. a Microsoft Office application program such as Word Excel PowerPoint on the area server. In a third exemplary case a document is shared by uploading the document to a file store that is associated with the shared Sococo place. In a fourth exemplary case a document is shared by uploading the document to the file store and everybody who is in the shared Sococo place at that time receives a copy of the shared document automatically similar to a direct file share everyone then has their own copy of the document. Multiple ones of these four exemplary cases described can be mixed and matched to produce hybrid document sharing cases.

In the first case described in the preceding paragraph there is not a persistent association of the document with the shared Sococo place unless a separate explicit recording of the interaction was made. In each of the other cases described in the preceding paragraph the Sococo platform automatically stores a persistent copy of the shared document in association with the shared Sococo place. In this process the network infrastructure service environment copies the shared file from the user s network node to another data storage location that is indexed with an attribute value identifying the virtual area. At any future time a user may reenter the Sococo place and browse the repository of files associated with that space assuming the user has appropriate permissions.

In some embodiments governance rules are associated with a shared Sococo place to control who has access to the place who has access to its contents what is the scope of that access to the place s contents e.g. what can a user do with the contents and what are the follow on consequences of accessing the place s contents e.g. record keeping such as audit logs and payment requirements .

In some embodiments an entire Sococo place or a region of the Sococo place is associated with a govemance mesh. In some embodiments a governance mesh is implemented in a way that is analogous to the way in which the zone mesh described in U.S. application Ser. Nos. 11 923 629 and 11 923 634 are implemented. A governance mesh enables a developer to associate governance rules with a Sococo place or a region of a Sococo place. This avoids the need for the creation of individual permissions for every file in a place or deal with the complexity that potentially could arise when there is a need to treat the same document differently depending on the context.

In some embodiments a Sococo place is associated with a governance mesh that associates one or more regions or zones of the place with a digital rights management DRM function. The DRM function controls access to one or more of the place or one or more regions within the place or objects within the place. The DRM function is triggered every time a communicant crosses a govemance mesh boundary within the Sococo place. The DRM function determines whether the triggering action is permitted and if so what is the scope of the permitted action whether payment is needed and whether audit records need to be generated.

In an exemplary implementation of a Sococo place the associated governance mesh is configured such that if a communicant is able to enter the place he or she is able to perform actions on all of the documents associated with the room including manipulating the documents viewing the documents downloading the documents deleting the documents modifying the documents and re uploading the documents.

Thus each Sococo place can become a repository for information that was shared and discussed in that room.

A Sococo realtime communications session may be recorded. In this process the Sococo platform stores a multitrack recording on at least one computer readable medium. The multitrack recording includes realtime data streams of different data types that are transmitted over one or more network connections with one or more of the network nodes in connection with an interaction of one or more of the communicants in a particular one of the virtual areas where the multitrack recording includes a respective track for each of the different data types of the realtime data streams. In some embodiments the Sococo platform stores the multitrack recording in accordance with a recording rule that is described in a specification of the particular virtual area that includes a description of geometric elements of the particular virtual area. In some cases a recording captures all the realtime streams audio streams realtime motion as vector data file sharing etc. and archives it with the Sococo place where the interaction took place. In this process the Sococo platform generates an interaction record that includes a respective one of the place attribute values that identifies the particular Sococo place and a respective data file identifier that identifies the multitrack recording.

The Sococo platform plays back the multi track streams of audio motion chat and so forth in a recreation of what happened in an area. In this process the Sococo platform replays the individual streams which is distinctly different from playing a movie i.e. a single homogenized stream of the recorded interaction from a fixed vantage point. For example the multi track playback allows users to experience what a meeting was like in immersive detail from any position and vantage point camera angle within the place. It also allows user to navigate to other parts of an area e.g. the breakout session at the seminar you didn t attend beyond what a single user could experience simultaneously.

The multi track recording and multi track playback capabilities of the Sococo platform are especially useful for meetings in corporate settings. For example a meeting can be recorded for later viewing by any other user who was unable to participate. These capabilities also can be used to produce recordings for training distance teaming news sports and entertainment. In these cases the recordings are a recorded set of produced or scripted realtime streams e.g. scripted avatar motions and interactions within a Sococo place .

A user with appropriate permissions can enter a Sococo place and browse view any recordings associated with that Place and play them. In some embodiments the Sococo platform transmits the realtime data streams of the multitrack recording to a particular one of the network nodes as separable data streams that are individually manipulable by the particular network node.

The Sococo platform associates files and recordings with an area using interactions records. In some embodiments the Sococo platform manages the sharing of the data files between the communicants based on the results of queries on the interaction records. In some embodiments the Sococo platform stores and organizes the interaction records using a pseudo file system or restated a database system for locating files . The records of this database include references to one or more areas users present when the file was uploaded or created and timestamp information. The Sococo platform can then retrieve files based on location within an area e.g. a room or a virtual table top or based on a user creator uploader communicant present or either or time specific or range . The Sococo platform also can use the traditional file name. The pseudo file system can be queried in ways that show all of the files that are associated with one or more of an area a region of an area a user or time. In this process the interaction records can be queried based on one or more of a time attribute value associated with one or more of the data files a place attribute value associated with one or more of the data files and a communicant identifier associated with one or more of the data files. The pseudo file system enables a database query approach to locating files rather than a traditional folder file model. Details of the pseudo file system are described below.

The pseudo file system allows a user of the Sococo platform to find information stored by the platform e.g. uploaded files or recordings using multiple possible strategies. For example a user may ask to see a list of all the files uploaded to a particular area by a particular user and then select one of those files to download to their own computer. Alternatively a user may ask to see all the files that were uploaded to a portion of an area while that user and another user were together in that portion of the area. Alternatively a user may ask to see all the files that were uploaded to an area today or last week. The user may then want to show only those files uploaded while certain other users were present.

For example Alice may remember that she was with Bob in Charlie s virtual office when a file she is attempting to locate was uploaded to the Sococo platform. Finding many possible files to choose from she begins listening to recordings of voice audio made at the same time various files were uploaded to refresh her memory of the context in which those files were uploaded. The pseudo file system makes it possible to perform this type of query and review followed by further relational queries if needed to refine a search for a particular piece of information. Specific information can be located by several different routes depending on what the user recalls about the context in which the information was stored by the Sococo Platform.

Embodiments of the Sococo platform incorporate a new pseudo file system technique that introduces a relational database in place of the traditional hostname drive path name.ext parser and associated bit field locator. In these embodiments the pseudo file system provides an alternate technique for locating bit fields the content normally associated with a filename in a traditional filesystem . These embodiments use the following identification syntax 

An example of a code implementation of these embodiments uses the C programming language command fopen as follows 

The Sococo platform can retrieve a particular one of the data files based on results of a query on the interaction records requested by a particular client node. In response to the client node request the Sococo platform may transmit a storage location identifier associated with the particular data file to the particular network node or it may transmit information derived from one or more of the interaction records identified in a result of the querying to the particular network node.

Referring back to during a communication session each of the communicant network nodes generates a respective set of real time data streams e.g. motion data streams audio data streams chat data streams file transfer data streams and video data streams . For example each communicant manipulates one or more input devices e.g. the computer mouse and the keyboard that generate motion data streams which control the movement of his or her avatar in the virtual area . In addition the communicant s voice and other sounds that are generated locally in the vicinity of the network node are captured by the microphone . The microphone generates audio signals that are converted into a real time audio stream. Respective copies of the audio stream are transmitted to the other network nodes that are represented by avatars in the virtual area . The sounds generated locally at these other network nodes are converted into real time audio signals and transmitted to the network node . The network node converts the received locally generated audio streams into audio signals that are rendered by the speakers . The motion data streams and audio streams may be transmitted from each of the communicant nodes to the other communicant network nodes either directly or indirectly. In some stream handling topologies each of the communicant network nodes receives copies of the real time data streams that are transmitted by the other communicant network nodes. In other stream handling topologies one or more of the communicant network nodes receives one or more stream mixes that are derived from real time data streams that are sourced or originated from other ones of the network nodes.

In this architecture each of the network nodes transmits state changes such as avatar movements in the virtual area to each of the other network nodes. One of the network nodes typically the network node that initiates a communication session operates as an area server. In the illustrated embodiment the network node has assumed the role of the area server. The area server network node maintains global state information and serves as a data server for the other network nodes . The global state information includes a list of all of the objects that are in the virtual area and their respective locations in the virtual area. The area server network node periodically sends the global state information to the other network nodes . The area server network node also registers and transmits initialization information to other network nodes that request to join the communication session. In this process the area server network node transmits to each joining network node a copy of a virtual area specification which may be stored in a local or remote database. The area server network node also ensures that other network nodes can synchronize to a global state if a communications fault occurs.

As explained in detail above the virtual area specification includes a description of geometric elements of the virtual area and one or more switching rules governing real time stream connections between the network nodes. The description of the geometric elements allows respective communications applications operating on the network nodes to present respective views of the virtual area to the communicants on respective display monitors. The switching rules dictate how connection processes executing on each of the network nodes establish communications with the other network nodes based on the locations of the communicants avatars in the virtual area.

As exemplified by the network node embodiment shown in each of the network nodes potentially has available a wide variety of sources and sinks. By enabling an area designer to control how the connections are established between the sources and sinks the embodiments that are described herein provide the area designer with much control over the sensory experiences of the communicants as they communicate and otherwise interact in the virtual area. In this way the area designer is able to optimize the virtual area for a particular communication purpose or for a particular communication environment e.g. art gallery concert hall auditorium conference room and club house .

Communicants typically access a shared virtual area communication environment from respective network nodes. Each of these network nodes typically is implemented by a general purpose computer system or a dedicated communications computer system or console . Each network node executes communications processes that present a respective view of the virtual area at each network node and establish real time data stream connections with other network nodes.

The area server maintains global state information and serves as a data server for the area client network nodes . Among the global state information that is maintained by the area server are a current specification of the virtual area a current register of the objects that are in the virtual area and a list of any stream mixes that currently are being generated by the area server .

The objects register typically includes for each object in the virtual area a respective object identifier e.g. a label that uniquely identifies the object connection data e.g. an IP address enabling a network connection to be established with a network node that is associated with the object and interface data identifying the real time data sources and sinks that are associated with the object e.g. the sources and sinks of the network node that is associated with the object . The objects register also typically includes for each object one or more optional role identifiers which may be assigned explicitly to the objects by either the communicants or the area server or may be inferred from other attributes of the objects. In some embodiments the objects register also includes the current position of each of the objects in the virtual area as determined by the area server from an analysis of the real time motion data streams received from the area client network nodes . In this regard the area server receives real time motion data streams from the area client nodes tracks the communicants avatars and other objects that enter leave and move around in the virtual area based on the motion data. The area server updates the objects register in accordance with the current locations of the tracked objects.

In the embodiment shown in the area client network node includes an embodiment of the communications application see that includes a communications module a three dimensional visualization engine a chat engine and an audio processing engine . Each of the other network nodes typically includes an embodiment of a communication application that is that the same or similar to the one described in connection with area client network node .

The communications module controls the switching of real time data streams between the area client network node and the other area client network nodes and the area server . The communications module includes a stream switching manager and a bandwidth monitor . The stream switching manager handles the entry and exit of avatars and other objects associated with the area client network node to and from a virtual area. The stream switching manager also automatically determines how to switch e.g. route connect and disconnect real time data streams between the area client network node and the other area client network nodes and the area server . The steam switching manager makes these determinations based on the switching rules contained in the virtual area specification the current locations of the avatars and other objects in the virtual area and the real time data stream types that are associated with the avatars and other objects in the virtual area. In some embodiments the stream switching manager also factors into these determinations upload and download bandwidth constraints of any of the area client network node other network nodes or the area server . In addition the stream switching manager re evaluates the current set of connections either in response to events e.g. upload or download bandwidth faults and requests to enter or exit a virtual area periodically or both in response to events and periodically. As a result of the re evaluation of the current connections the stream switching manager may for example take any of the following actions request stream mixes from the area server drop stream mixes from the area server break one or more direct links with one or more of the other area client network nodes or form one or more direct links with one or more of the other area client network nodes .

In the course of managing the switching of real time data stream connections the stream switching manager maintains a set of configuration data including interface data a zone list and the positions of the objects that currently are in the virtual area. The interface data includes for each object associated with the area client network node a respective list of all the sources and sinks of real time data stream types that are associated with the object. The zone list is a register of all the zones in the virtual area that currently are occupied by the avatar associated with the area client network node . When the communicant first enters a virtual area the stream switching manager typically initializes the current object positions database with position initialization information that is downloaded from the area server . Thereafter the stream switching manager updates the current object positions database with the current positions of the objects in the virtual area as determined from an analysis of the real time motion data streams received from for example one or more of the computer mouse the area client network nodes and the area server . In some embodiments the object positions are incorporated into the objects register . The configuration data that are maintained by the stream switching manager also includes copies of the objects register the stream mix list and the virtual area specification respectively these copies and typically are downloaded from the area server and represent a local cache of these data.

The three dimensional visualization engine presents on the display monitor a view of the virtual area and any objects that are in the virtual area. In this process the three dimensional visualization engine reads the virtual area specification data the objects register and the current object positions database . In some embodiments the three dimensional visualization engine also reads a communicant avatar database that contains images needed for rendering the communicant s avatar in the virtual area. Based on this information the three dimensional visualization engine generates a perspective representation i.e. an image of the virtual area and the objects in the virtual area from the point of view position and orientation of the communicant s avatar in the virtual area. The three dimensional visualization engine then renders the perspective representation of the virtual area on the display monitor . In some embodiments three dimensional visualization engine determines the visibility of the communicant s avatar in order to limit the amount of data that has to be exchanged processed and rendered to the portion of the virtual area that is visible on the display monitor .

In some embodiments the three dimensional visualization engine additionally is operable generate a plan view representation of the virtual area. In these embodiments the communicant may direct the three dimensional visualization engine to render one or both of the perspective representation of the virtual area and the plan view representation of the virtual area on the display monitor .

The communicant can control the presented view of the virtual area or the position of the avatar in the virtual area by transmitting commands to the communications module from an input device e.g. the computer mouse . The three dimensional visualization engine updates the view of the virtual area and the positions of the objects in the virtual area in accordance with updated positions in the current object positions database and re renders an updated version of the graphic representation of the virtual area on the display monitor . The three dimensional visualization engine may update the rendered image periodically or only in response to movement of one or more of the objects in the virtual area.

The chat engine provides an interface for outgoing chat text messages that are received from a local text input device e.g. a keyboard of the area client network node and incoming chat streams that are received from the other area client network nodes . The chat engine converts the chat text messages that are input by the communicant through the text input device into real time chat streams that can be transmitted to the other network nodes . The chat engine also converts the incoming chat streams into text signals that can be rendered on the display monitor .

The audio processing engine generates audio signals which are rendered by the speakers in the communicant s headset and converts the audio signals that are generated by the microphone in the headset into real time audio streams that can be sent to the other area client network nodes .

As explained above a shared virtual area is defined by a specification that includes a description of geometric elements of the virtual area and one or more switching rules governing real time stream connections between the network nodes. The switching rules typically include a description of conditions for connecting sources and sinks of real time data streams in terms of positions in the virtual area. Each rule typically includes attributes that define the real time data stream type to which the rule applies and the location or locations in the virtual area where the rule applies. In some embodiments each of the rules optionally may include one or more attributes that specify a required role of the source a required role of the sink a required priority level of the stream and a required or preferred stream topology.

The switching rules are implicated upon object entry into a virtual area movement of an object within the virtual area and object exit from the virtual area.

Additional details regarding the automated switching of real time data streams are described in U.S. application Ser. Nos. 11 923 629 and 11 923 634 both of which were filed on Oct. 24 2007.

The HUD interfaces a variety of different business and consumer applications to the Sococo platform. Among the wide variety of different applications that are enabled by the system architecture are ad hoc communications applications online sales applications seminar applications training applications realtime group collaboration applications content sharing applications e.g. photo and video sharing applications and group study applications.

The Sococo platform additionally integrates with other systems e.g. ERP systems gaming systems and social networking systems to support a wide variety of other applications including but not limited to enterprise data collaboration applications guild room applications singles space applications picture gallery applications and chat room applications.

In addition to the local Human Interface Device HID and audio playback devices the So3D graphical display avatar and physics engine and the system database and storage facility the communications application also includes a graphical navigation and interaction interface referred to herein as a heads up display or HUD that interfaces the user with the virtual communication environment. The HUD includes navigation controls that enable the user to navigate the virtual environment and interaction controls that enable the user to control his or her interactions with other communicants in the virtual communication environment. The navigation and interaction controls typically are responsive to user selections that are made using any type of input device including a computer mouse a touch pad a touch screen display a keyboard and a video game controller. The HUD is an application that operates on each client network node. The HUD is a small lightweight interface that a user can keep up and running all the time on his or her desktop. The HUD allows the user to launch virtual area applications and provides the user with immediate access to realtime contacts and realtime collaborative places or areas . The HUD is integrated with realtime communications applications and or realtime communications components of the underlying operating system such that the HUD can initiate and receive realtime communications with other network nodes. A virtual area is integrated with the user s desktop through the HUD such that the user can upload files into the virtual environment created by the virtual environment creator use files stored in association with the virtual area using the native client software applications independently of the virtual environment while still present in a virtual area and more generally treat presence and position within a virtual area as an aspect of their operating environment analogous to other operating system functions rather than just one of several applications.

In accordance with the method of the interaction service associates place attribute values with realtime interactions of a user and other communicants operating on respective network nodes and sharing the virtual communication environment which includes one or more virtual areas and supports realtime communications between the user and the other communicants block . As explained above in the illustrated embodiments the interaction service maintains the relationship database which contains the records of interactions between communicants. For each interaction involving a respective one of the communicants in a respective one of the one or more virtual areas the interaction service generates a respective interaction record that includes a respective place attribute value that identifies the virtual area in which the interaction occurred and one or more communicant identifier attribute values that identify respective ones of the communicants that participated in the interaction. The interaction service also typically incorporates one or more of the following additional information into an interaction record of a particular interaction start and end times of the respective interaction an identification of any data streams shared during the respective interaction and any hierarchical information relating the place where the respective interaction occurred to a larger domain.

The network infrastructure service environment interfaces the user and the other communicants to the virtual communication environment based on the associated place attribute values block . As explained above in the illustrated embodiments the interaction service supports queries on the relationship database subject to the capabilities of the requesting entities. In response to requests from the client network nodes the interaction service queries the interaction records and transmits results of the querying to the requesting ones of the network nodes.

In response to some requests to view realtime contacts the interaction service queries the interaction records for one or more of the other communicants with whom the user has interacted in the virtual communication environment and then transmits to the requesting network node a list of identified ones of the other communicants with whom the user has interacted. The interaction service typically ranks the identified other communicants based on an evaluation of the interaction records describing the interactions between the user and the respective ones of the identified other communicants and orders the identified ones of the other communicants in the list by rank. In this process the interaction service typically determines a respective relevance score for each of the other communicants based on at least one statistic that is derived from the interaction records. The interaction service then orders the identified ones of the other communicants in the list in an order reflecting the respective relevance scores. In some cases the relevance scores measure frequency of interaction between the user and ones of the other communicants. In other cases the relevance scores measure recentness of interaction between the user and ones of the other communicants.

In response to some requests to view places the interaction service queries the interaction records for one or more of the virtual areas in which the user has interacted and transmits to the requesting network node a list of identified ones of the virtual areas in which the user has interacted. The interaction service typically ranks the identified virtual areas based on an evaluation of the interaction records describing the interactions between the user and the respective ones of the identified virtual areas and orders the identified ones of the virtual areas in the list by rank. In this process the interaction service typically determines a respective relevance score for each of the virtual areas based on at least one statistic derived from the interaction records. The interaction service then orders the identified ones of the virtual areas in the list in an order reflecting the respective relevance scores. In some cases the relevance scores measure frequency of interaction between the user and ones of the other virtual areas. In other cases the relevance scores measure recentness of interaction between the user and ones of the other virtual areas.

In accordance with the method of the communications application determines interaction options from results of querying at least one interaction database that includes interaction records describing respective interactions of a user in the virtual communication environment block . On a display the communications application presents a user interface that includes graphic representations of the interaction options in association with a respective set of one or more user selectable controls block . In response to the user s selection of a respective one of the user selectable controls the communications application initiates an interaction of the user in the virtual communication environment block . This process may involve for example moving a graphic representation of the user into a particular one of the virtual areas in response to the user s selection of a graphic representation of the particular virtual area or in response to the user s selection one of the graphic representations of the other communicants who has presence in the particular virtual area.

Exemplary interaction options include options for interacting with contacts and options for interaction with places.

In some cases the communications application identifies one or more of the other communicants with whom the user has interacted in the virtual communication environment and displays in the user interface a respective graphic representation of each of the identified other communicants in association with at least one respective user selectable control for interacting with the respective other communicant. In one example the communications application identifies one or more of the other communicants with whom the user has interacted in a particular one of the virtual areas and displays graphic representations of the identified other communicants in association with a graphic representation of the particular virtual area. The respective graphic representations of the identified other communicants may be displayed in an array adjacent the graphic representation of the particular virtual area. The graphic representations of the communicants typically are sorted based on a ranking of the identified other communicants that is derived from an evaluation of the interaction records describing the interactions between the user and the respective ones of the identified other communicants.

The communications application identifies one or more of the virtual areas in which the user has interacted and displays in the user interface a respective graphic representation of each of the ascertained virtual areas in association with at least one user selectable control for interacting with the respective virtual area. The respective graphic representations of the identified virtual areas may be displayed in an array. The graphic representations of the virtual areas typically are sorted based on a ranking of the ascertained virtual areas that is derived from an evaluation of the interaction records describing the interactions between the user and the respective ones of the ascertained virtual areas. In some embodiments for each of one or more of the ascertained virtual areas a respective two dimensional graphic representation the virtual area is displayed and a respective graphic representation of each of the communicants that has presence in the virtual area is depicted in the respective two dimensional graphic representation. In some of these embodiments each of the respective graphic representations of the communicants provides context information from which the user can infer a respective activity currently performed by the respective other communicant in the respective virtual area. The context information may include for example one or more of information describing respective positions of the one or more other communicants in terms of virtual area identifiers information describing respective locations of the one or more other communicants within the virtual area and information describing respective orientations of the one or more other communicants. The communications application typically presents at least one user selectable control in association with each of the graphic representations of the ascertained virtual areas where the control enables the user to establish a presence in the respective virtual area.

In some cases the communications application displays a graphic representation of a particular one of the virtual areas in which the user has presence on the display. The graphic representation of the particular virtual area may be a three dimensional graphic representation or a two dimensional graphic representation. In the embodiments illustrated the drawings discussed below the HUD includes a two dimensional graphic representation of the particular virtual area which is displayed in a lower right corner of the desktop interface window that is rendered on the user s display. The HUD also includes an immersion control interface that enables the user to select a level of interaction with the particular virtual area from a set of different interaction levels e.g. a three dimensional graphic interface mode of interaction with the virtual area a two dimensional graphic interface mode of interaction with the virtual area and a non graphic interface mode of interaction with the virtual area .

The HUD includes an immersion control interface that enables each user to control his or her visualization. The immersion control interface includes a graphical immersion level indicator a user manipulable immersion level controller or slider and a textual immersion level indicator that labels the different immersion levels corresponding to the different positions of the slider along the graphical immersion level indicator . The user can move the slider along the graphical immersion level indicator with an input device e.g. a computer mouse to select a level of interaction with the particular virtual area from a set of different interaction levels. For example in the illustrated embodiments a user can choose voice only corresponding to the off of bottom position of the immersion level indicator a two dimensional 2D overhead view correspond to the 2D or middle position of the immersion level indicator or a three dimensional view of an area e.g. a realistic 3D simulation of a physical area corresponding to the 3D or top position of the immersion level indicator . In particular the immersion control interface enables the user to change the level of interaction by selectively changing between ones of a three dimensional graphic interface mode of interaction with the virtual area 3D mode a two dimensional graphic interface mode of interaction with the virtual area Desktop mode and a non graphic interface mode of interaction with the virtual area Off mode . In the three dimensional graphic interface mode of interaction the respective graphic representations of the communicants are depicted as three dimensional avatars in the two dimensional graphic interface mode of interaction the respective graphic representations of the communicants are depicted as two dimensional presence icons or sprites and in the non graphic interface mode the respective graphic representations of the communicants are omitted i.e. not shown .

In the two dimensional visualization mode each of the communicants who has presence in a virtual area is represented by a respective two dimensional presence icon. In some embodiments the appearance of the presence icons changes in response to receipt of input realtime data streams from the respective communicants. For example in some embodiments the appearance of the presence icons alternates between two different modes e.g. a visual feature such as the brightness level altemrnates between a high level and a low level or the appearance of a presence icon changes from a filled in view to an outline view at a fixed rate. In some embodiments the triggering input realtime data streams correspond to realtime data streams generated by respective input devices e.g. computers keyboards or microphones at the respective network nodes at which the communicants are operating. In this way the HUD provides a visual indication when a particular communicant is interacting e.g. chatting or talking in the virtual area.

The HUD shows an ordered set of place tiles . Clicking on one of the place tiles brings the user to the virtual area represented by the selected place tile. For people the Sococo platform has a basic metaphor of Go to the communicant s area and Get bring them to the user s area . This is refined in the HUD by allowing communicants to queue requests to go or get as well as communicate with people via text or voice without moving. The system notifies the user when each communication request is received from another communicant. The user can accept the request ignore it or add it to a communications queue. In this way users can respond to non priority communications at a later time. For example a user can queue communications received during a time when the user is busy e.g. engaged in a current communications session and after the user is free the user can respond to communication requests in the communications queue.

As explained above the Sococo platform maintains a relationship database that records who the user meets with and where. For every interaction of the user with a realtime contact the system generates one or more respective interaction records in the relationship database. Each interaction record contains a description of the context of the interaction. For example in some embodiments an interaction record contains an identifier for the user an identifier for the contact an identifier for the place of interaction e.g. a room of HomeSpace a description of the hierarchy of the interaction place e.g. a description of how the interaction room relates to the larger area start and end times of the interaction and a list of all files and other streams shared during the interaction. Thus for each realtime interaction the system tracks when it occurred where it occurred and what happens during the interaction in terms of communicants involved e.g. entering and exiting objects that are activated deactivated and the files that were shared. The system then is able to present the results of queries on this information in a sorted order e.g. most frequent or most recent based on place.

In some embodiments the system may be configured to show the user a sorted list of Skype contacts that are associated with a particular place e.g. the Skype place the list can be presented in a variety of different ways e.g. by frequency of interaction on Skype or Sococo or both by total number of minutes interacted on Skype or Sococo or both or most recent interactions on Skype or Sococo or both . For example the information stored in the interaction records can be used to drive a frequency sort of who the user met in which areas as well as sorts of who the user has met with regardless of area and areas the user frequents most often. This data typically is used in the HUD but it also may be used by application developers as part of a heuristic system e.g. a rule that permits people who have visited the user s HomeSpace more than five times to enter without knocking by default or people who were present in an area at a particular time to modify and delete files created by another communicant there at the same time .

Each of the places represented by tiles in the HUD is tied to queries on the relationship database . With respect to each place the interaction service does a query on the relationship database for all of the contacts the user has met with in that area. The interaction service typically presents the identified contacts in a list that is sorted either by frequency or by recentness of interaction e.g. who the user interacted with last . In other embodiments the contacts may be sorted in some other application dependent way.

Queries on the relationship database can be combined with other searches. For example queries on the relationship database may be combined with queries on contact history data generated for interactions with contacts using another communication system e.g. Skype Facebook and Flickr . In one example a Skype place may be associated with a query on a user s relationship data associated with the Skype place and the user s Skype history data to produce a sorted list of realtime contacts of the user that are associated with the Skype place.

Should any user exit a particular place or enter a particular place the presence indicators i.e. the sprites shown by circles with associated names or other identifiers in the place tile representing that particular place will automatically be updated in realtime. This feature demonstrates the ability of an application designer to put application specific realtime data into a place tile. The place tile may appear either associated with a communicant or with the user s places. For example a game developer may export a map of where a communicant is in their game environment such that other people that are connected to that communicant through the relationship database records will receive a realtime data stream feed of that communicant s current activities. They can then use this place tile to navigate to that communicant communicate with them or get them. The HUD is able to manage this interface to people and places for many different applications simultaneously.

The realtime data used in the HUD place tiles is provided by an interface designed for this purpose in the area server hosting the relevant area represented by the place tile. Area servers may provide different HUD place tile data feeds to users based on that user s permission to view the virtual area. For example if a communicant enters a virtual area that the user does not have permission to view the HUD place tile may show limited or no detailed information. In addition the HUD place tile data feed provided by the area server may be customized by the application provider operating that area server to present an application specific view of the area to subscribing HUDs.

For example clicking on the left facing arrow associated with the tile representing the Sococo Main room displays a list of realtime contacts DVW Joe Tom Margaret that represent the people the user communicates with in the Sococo Main room. Clicking on the left facing arrow for the Facebook place tile displays a different set of realtime contacts those that the users communicates with in the Facebook application. In generating this list of contacts the system queries the user s Facebook relationship grid data. In particular the system performs a synthesis or aggregation of a place based Sococo query on the Sococo relationship database and a query on the Facebook relationship grid data to pull out the user s Facebook contacts that are not in the Sococo relationship database . In the f icons indicate that the leftmost three contacts associated with the Facebook place are Facebook contacts that are not yet Sococo contacts and the Invite icons are associated with controls for sending to those Facebook contacts invitations to become members of Sococo.

The view of realtime contacts that is shown by the HUD in reveals how the Sococo platform allows a user to create an inferred Social Network. Traditional Social Network services LinkedIn Facebook MySpace etc require the user to push information into the network service send and invite to a friend and explicitly describe whether that communicant is a work colleague friend or casual acquaintance . The Sococo platform on the other hand infers the relationship between realtime contacts. For example I know that DVW is a work associate because I communicate with him in Sococo Main a work place. The Sococo platform presents this inferred relationship information back to the user in meaningful ways.

The Sococo platform provides an always on continuous communications environment. Unlike traditional transactional forms of communications such as the telephone or Skype where a user has to dial a number and wait for a connection to be established the Sococo platform allows a user with appropriate permissions to simply enter a place and begins talking or interacting to whomever is present.

The Sococo platform and the HUD allow a user to view his or her communication history with any of his or her realtime contacts. In some embodiments the Sococo platform displays all the recent communications history with that communicant e.g. text chat voice conversations files shared etc in response to the positioning of the user s mouse pointer over a particular one of the tiles representing the user s contacts. For example shows an interface that contains a recent text chat with Karen in which the messages between the user and Karen are listed vertically in chronological order with the user s messages displayed in left shifted message blocks and Karen s messages displayed in right shifted message blocks. The interface also displays the basic methods for connecting the with another communicant on the Sococo platform 

The system typically includes smart defaults such that the user can Go or Get people that the user communicates with continuously but might have to ask permission to Go to or Get a communicant that is a more casual contact.

The Sococo platform and the HUD also allow users to connect with the contacts they have through other communication applications e.g. Skype contacts but who are not necessarily Sococo users. For example in Joe is a Skype contact of the user but he is not a Sococo user. By integrating with the programmatic interfaces of Skype the Sococo platform gets and displays a user s Skype contacts directly in the HUD . Clicking on the control labeled Call on Skype in the Skype history interface for example initiates a call to Joe using Skype. The Sococo platform takes that audio stream and multiplexes it into the streams it is mixing with the other users in the current room e.g. My HomeSpace in the example shown in . Hence Joe can participate in a Sococo conversation albeit with only an audio experience as provided by Skype. An exemplary embodiment of communication infrastructure that enables people to communicate with Sococo platform users via different communication applications e.g. Skype is described below in connection with .

The Sococo platform allows developers to extract data e.g. multimedia content data and relationship data such as the user s friends and the user s friends friends from third party web sites via exposed APIs that allow searches on metadata associated with that data. In particular the Sococo platform includes a variety of programmatic interfaces that allow developers to integrate existing data stores which may be operated and managed independently of either Sococo or the area application designer into a Sococo realtime interactive communication environment i.e. a Sococo place .

The user can see that Karen is looking at photos shown by thumbnails and in in the Flickr Italy room along with five other communicants also denoted by sprites in by presenting the place tile that is associated with the area. Clicking on the Flickr Italy room takes the user directly to the location of his her realtime contacts as shown in the HUD interface where the user can instantly initiate a voice or text chat conversation. The user can change the progressive immersion control denoted by the vertically oriented progression immersion control slider on the right hand side of the HUD . For example changing the slider from its current position labeled 2D to the position labeled 3D changes the visual display of the Flickr Italy photo room from the 2D minimap view that is shown in to a 3D representation that is shown in .

In Karen is represented by an avatar in the 3D representation of the Flickr Italy Room viewing a photo by the photographer Claudio X. The room includes controls that allow the user to view previous next photos in a sequence of images shown as an array of thumbnail images below the current photo displayed on the view screen. As shown in the Sococo platform allows users to have realtime interactions in a two or three dimensional immersive experience for navigating browsing photos. The Sococo platform allows developers to configure realtime communication environments i.e. Sococo places to retrieve asynchronous data e.g. Flickr photos amassed by users and their contacts. These places can then be used by users to interact and communicate with their realtime contacts about their photos and other content. In this way the Sococo platform enhances a user s experiences with his or her asynchronous data and other existing data stores. The Sococo platform and the HUD allow users to stay in constant contact with their realtime contacts from a variety of different places.

In the user has joined Karen his realtime contact in the Flickr Italy Photo room. In this embodiment the user is represented by a hand pointer . A second realtime contact e.g. DVW who is represented by the contact tile initiates a voice conversation with the user directly from the HUD DVW happens to be in an MMOG massively multi user online role playing game when he initiated contact with the user. In this example DVW requests that the user join him in the MMOG which is shown in a minimap view . The user views the minimap location view and clicks into the exact location of DVW. In these embodiments the game servers that provide the backbone infrastructure for the MMOG export place information to the HUD . Based on the integration between the Sococo platform and the MMOG the Sococo platform can directly launch the MMOG client software and place the user in exactly the same location of his realtime contact. In these embodiments Sococo libraries are integrated into the MMOG client software so that it can be launched just like any traditional application yet access and use the Sococo Platform.

As described above HomeSpace is a Sococo application built on the Sococo platform. It is provided to all users by default when they first register to get the service. HomeSpace is a user s personal collaboration space. The user can 

OfficeSpace is a Sococo application built on the Sococo platform. OfficeSpace is a realtime communications application for the corporate market it is built on the Sococo realtime platform. OfficeSpace provides a survey of the technologies and user experiences provided by applications on the platform.

The following description is based on the following exemplary scenario. Three colleagues are meeting virtually to prepare for a presentation with their boss in the morning. The three colleagues are in different locations but in front of their PCs they will be meeting in a Sococo virtual place.

In this embodiment the HUD is implemented by a substantially transparent semi translucent user interface overlay that provides a persistent interface and access to controls. In the embodiment shown in the HUD is transparent except for a limited set of one or more of the following semi translucent elements of the interface 

In this way the HUD is designed to serve as a true interface that displays information and provides access to controls with only minimal obscuration of the underlying parts of the user s display screen. The HUD efficiently shows 

The immersion control interface includes an unfilled semi translucent graphical immersion level indicator a semi translucent immersion level controller or slider and a semi translucent textual immersion level indicator that labels the different immersion levels corresponding to the different positions of the slider along the graphical immersion level indicator . The user can move the slider along the graphical immersion level indicator with an input device e.g. a computer mouse to select a desired level of interaction with the associated virtual area from a set of different interaction levels. For example in the illustrated embodiments the immersion control interface enables the user to change the level of interaction by selectively changing between ones of a three dimensional graphic interface mode of interaction with the virtual area 3D mode a two dimensional graphic interface mode of interaction with the virtual area Desktop mode and a non graphic interface mode of interaction with the virtual area Off mode . In the three dimensional graphic interface mode of interaction the respective graphic representations of the communicants are depicted as three dimensional avatars in the two dimensional graphic interface mode of interaction the respective graphic representations of the communicants are depicted as two dimensional sprites and in the non graphic interface mode the respective graphic representations of the communicants and the virtual area are omitted i.e. not shown .

In the illustrated OfficeSpace application embodiment the user has the HUD defaulted to show the Sococo place i.e. the Office where the meeting will take place. The Sococo place is represented by an octagonal conference room that is displayed in the HUD . Initially the conference room is empty since none of the participants have joined the meeting.

As shown in the user is able to work in his or her normal Windows environment while the Sococo platform and HUD are running and ready to initiate realtime communications sessions. For example the user may work with other applications such as Microsoft Excel to create information e.g. the Excel spreadsheet shown in that can later be shared in a realtime communications session on the Sococo platform. A virtual area is integrated with the user s desktop such that the user can i drag and drop files into the environment ii use files stored in the area using their native client applications independently of the area environment while still present in an area and iii more generally treat presence and position within an area as an aspect of their operating environment analogous to other operating system functions rather than one of several applications.

The Sococo platform allows for either ad hoc or pre planned meetings. For a pre planned meeting the Sococo platform issues an alert to the user. For example in the embodiment shown in an alert entitled 8 00 am Prep For Ops Review is displayed in the HUD to notify the user that a meeting is about to begin and an Accept button is presented to the user to enable the user to join the review meeting. Clicking on the alert i.e. Accept connects the user into the Sococo place octagonal virtual conference room . In the Sococo place the user is represented by a small bright circle termed a sprite which indicates to the user that the user is present in the conference room see . From a realtime communications perspective the user is now in that virtual Sococo place and is able converse with anyone else in that same place because the stream switching rules in this embodiment of OfficeSpace specify that all users in a given room are connected in that way.

As shown in two colleagues join the user in the conference room place . Both of these colleagues are similarly denoted by respective sprites in the Sococo place . All the communicants now are able to see each other s presence in the room e.g. see each other s sprites as well as hear each other. In this regard the Sococo platform is multiplexing the microphones and speakers of all the participants together. Anyone in that Sococo place is capable of seeing or hearing anyone else in that place.

While the communicant interacts in the virtual area the HUD provides the user with independent control over his or her desired visualization. For example the user may display a minimized view of the Sococo place minimized to the lower right hand corner of the desktop and participate in an audio conversation while working in different application such as Microsoft Excel. The user then may elect to change his visualization schema and enter into a more immersive three dimensional rendering of the Sococo place. This is accomplished by changing the setting of the progressive immersion slider in the HUD from Desktop as shown in to 3D as shown in . Once in the 3D visualization mode the user s desktop displays a 3D rendition of the shared Sococo place . The communicants sprites in the Desktop mode now take the form of 3D avatars corresponding to a hand pointer as shown in .

Any data that is associated with the Sococo place can be displayed on view screens . A view screen is a generic data rendering component that can be used to render any arbitrary data. Examples of the types of data that can be rendered on a view screen include 

Sococo leverages 3D visualization technologies to enhance the communications experience where appropriate. In the illustrated embodiments the Sococo places are designed as octagons such that information can be displayed on three adjacent walls and easily viewed in a single glance without panning from wall to wall or between tiled windows in a strictly 2D display . In other embodiments Sococo places may be in the form of any type of geometric shape e.g. rectangles circles pentagons and arbitrary shapes . Geometry selection is up to the application designer.

The Sococo platform includes capabilities that enable developers to define social processors and deliver them via plug ins. A social processor is a set of instructions that automatically gets executed when a specific event or occurs or a specific condition is satisfied e.g. automatic motion triggered by at least one of proximity to other avatars position in an area and change in state of the area e.g. by entry or exit of a communicant . Social processors can be any arbitrary programmatic routine to control the motion of users or objects in a Sococo place. For example in some embodiments if an avatar approaches a view screen the social processor automatically will snap the avatar to grid and center the avatar in front of the screen so that the user can easily see the contents of the screen. This feature of the social processor eliminates the need for complex manipulation of movement of the character.

Other examples of Social Processors include the ability for an avatar to automatically pivot and turn to acknowledge the presence of another user. For example shows two avatars that turn from facing each other in to facing the user in response to the user entering the Sococo place. The users associated with these two avatars did not have to manipulate their Avatars manually instead the Social Processor automatically rotated their heads to acknowledge the new user.

In the embodiment shown in a file icon is displayed in the HUD to signify to the user that there are files e.g. documents associated with that space. In the 3D visualization the user can use the hand pointer to pickup one of the documents shown in the table by clicking on the document. The user then can associate the document with one of the view screens by moving the document to the selected view screen and clicking with the hand pointer . The Sococo platform interprets this action as a command to present the document on the selected view screen. In some embodiments the Sococo platform will render the document on the view screen using an application program e.g. Microsoft Excel running on the area server. Control buttons are provided under each view screen to allow anyone in the Sococo place to control the presentation of the document being rendered on the associated view screen e.g. scroll up down page up down next previous slide etc . Thus the Sococo platform associates control buttons with the content rendering surfaces e.g. view screens of the 3D visualization.

The Sococo platform allows for the creation of dynamic spaces i.e. virtual Sococo places that are created on demand by user actions . This process typically involves changing an area definition by adding or removing regions of a virtual space. Application designers can define templates e.g. virtual rooms with a variety of shapes and stream handling characteristics to make it easy to add to an area based on a desired usage pattern. For example in an area designed for virtual conference calling the application developer may define a room type designed for a breakout session with a subset of the attendees and another room type for presenting detailed information from slides spreadsheets and realtime feeds. When the area is first used it comes up with a basic set of one or more rooms and during a realtime session the attendees can add rooms to the space for one or both purposes based on their needs during the session. In some embodiments the added rooms persist for use later. In other embodiments the added rooms are deleted either explicitly by users who are finished with them or automatically by the system as part of garbage collection.

As shown in to create a dynamic place the user clicks on a wall of an existing place . Alternatively the user may create a dynamic space by selecting a dynamic space creation command that is available through a traditional menu structure that is provided in some embodiments of the HUD . The options for geometry size and default configurations of the dynamic spaces are up to the application developer. Typically a user will have a variety of options to choose from when creating a dynamic space. As shown in in response to the user s selection of the wall the system creates a dynamic place that is an exact replica of the Sococo place he originally was in except it has no external data files associated with the view screens as evidenced by the blank View screens. The user can enter the new place and the other communicants can follow the user into the new place .

Realtime stream handling technologies in the Sococo platform allow for independent stream handling zones. The most common example of a stream handling zone is an audible zone. A typical audible zone in this embodiment of OfficeSpace is an area within which a user can hear any other user that is positioned in the same zone i.e. the microphones and speakers of any user positioned in that space is multiplexed together so that all users can hear each other . Additional details regarding the specification of audible zones and other types of zone meshes are described in U.S. application Ser. Nos. 11 923 629 and 11 923 634 both of which were filed on Oct. 24 2007.

In the illustrated embodiment each of the sprites has a spherical at least partially translucent body that interacts with light indicated by the dashed line from a virtual light source in a way that enhances the apparent orientation of the sprite . In particular the rendering of each sprite body involves showing a glint spot on the body surface showing a shadow region on the body that results from the at least partial obstruction of the virtual light directed through the top part of the sprite body and showing a second shadow region that is cast onto the floor of the Sococo Main room as a result of the at least partial obstruction of the virtual light directed through the sprite body . The positions of the glint spot the first shadow region and the second shadow region gives the sprites a three dimensional appearance that allows the communicants to infer the attentional focus of the users within the virtual area in three dimensions i.e. directions in the plane of the displayed interface and directions out of the plane of the interface .

Some embodiments include a social processor that responds to the positioning of a sprite within a threshold distance from a view screen by automatically moving the sprite to a preset position in front of a selected one of the view screens and orienting the sprite so that its eyes are directed toward the view screen.

In accordance with the method of the communications application displays a graphic representation of a virtual area in a virtual communication environment supporting realtime communications between a first communicant operating on a first network node and a second communicant operating on a second network node block . On the first network node the communications application executes a first software application that establishes a first realtime data stream connection between the first and second network nodes where the first realtime data stream connection is associated with a reference to the virtual area block Concurrently with the execution of the first software application the communications application on the first network node executes a second software application that establishes a second realtime data stream connection between the first network node and a third network node on which a third communicant is operating where the second realtime data stream connection is free of any reference to the virtual area block . On the first network node the communications application produces one or more integrated realtime data streams from realtime data streams that are exchanged over the first and second realtime data stream connections block .

At least one of the one or more integrated realtime data streams typically is rendered on the first network node. The communications application typically transmits respective ones of the one or more integrated realtime data streams to the second and third network nodes.

A least two of the realtime data streams that respectively are exchanged over the first and second realtime data stream connections typically are of the same particular data type and the communications application mixes ones of the exchanged realtime data streams of the particular data type on the first network node. For example in some embodiments the communications application generates a first realtime data stream of the particular data type the communications application receives a second realtime data stream of the particular data type from the second network node and the communications application receives a third realtime data stream of the particular data type from the third network node. In these embodiments the process of producing the integrated realtime data streams involves mixing the second and third realtime data streams to produce a first integrated realtime data stream mixing the first and third realtime data streams to produce a second integrated realtime data stream and mixing the first and second realtime data streams to produce a third integrated realtime data stream. The communications application renders the first integrated realtime data stream on the first network node transmits the second integrated realtime data stream from the first network node to the second network node and sends the third integrated realtime data stream from the first network node to the third network node. In some embodiments the communications application passes the third integrated realtime data stream to the second software application. In some embodiments the first and second realtime data streams respectively are generated by first and second instances of the first software application respectively executing on the first and second network nodes and the communications application passes the second integrated realtime data stream from the first instance of the first software application to the second instance of the first software application.

In the example discussed above in connection with Joe is a Skype contact of the user but he is not a Sococo user. By integrating with the programmatic interfaces of Skype the Sococo platform gets and displays a user s Skype contacts directly in the HUD . Clicking on the control labeled Call on Skype in the Skype history interface initiates a call to Joe using Skype. The Sococo platform takes that audio stream and multiplexes it into the streams it is mixing with the other users in the room. Hence Joe can participate in a Sococo conversation albeit with only an audio experience as provided by Skype.

In operation the I O Multiplexer Demultiplexer sends the audio signals and received from Systems and to both System and System . The I O Multiplexer Demultiplexer also sends the audio signals and received from Systems and to the P Route component of system . The P Route component sends the audio signals and to the playback component of System and passes the audio signals and to the P mix component of System . The P Mix component of System mixes the audio signals and passes the mixed signal to the integration component of System . The integration component passes the mixed signal to the audio capture component of an alternative communications application e.g. Skype that is running on System and that corresponds to the communications application e.g. Skype used by System . The alternative audio capture system C passes the captured mixed signal 2 3 4 to the playback component of the alternative communications application running on System .

In some implementations of the system shown in P Mix also could subscribe to I O Multiplexer Demultiplexer directly. Then the system is more symmetric. P Route becomes P Mix and receives from I O and from C Split . Since these are sent as independent channels the output of C Split could be sent directly to the Playback Component but that isn t quite as flexible since P Mix could perform an actual mix instead of a pass through of independent channels see 3 below . In this case P Mix becomes P Mix and receives from I O and from C Split . The output of this mixer is a true mix since we assume that the Alternate Audio System is a single channel communication system even if the channel is stereo we assume that there is no multi track mixer at the other end to combine signals from multiple sources .

In any time two streams are delimited with a comma meaning that it is a multichannel route the system could also be sending mixed streams to conserve internal communication resources e.g. out of the I O Multiplexer Demultiplexer . The stream that must be mixed is indicated with plus signs i.e. the virtualized microphone signal sent by the integration Component to the Alternate Capture Component .

As described above in some embodiments a document may be shared by viewing the document in the shared Sococo place where the document is being presented by a server process running a shared application program e.g. a Microsoft Office document processing application program such as Word Excel PowerPoint on the area server.

In some embodiments the Sococo platform combines realtime streams from multiple users operating at different client nodes into a single stream. The Sococo platform sends the composite stream to a client application program e.g. a Microsoft Office application program running on the area server node. The Sococo platform routes the output data generated by the client software running on the area server into a view screen that is in a shared Sococo area. The Sococo platform multiplexes user input streams e.g. keyboard and or mouse command streams to the client software running on server and vice versa. In this way the Sococo platform processes a document in a client application running on the area server network node in accordance with the composite realtime data stream. The multiplexing client software feature of the Sococo platform enables users to collaborate on the same document. In these embodiments the Sococo platform is taking a single terminal server session and multiplexing between multiple clients to enable collaboration on the same document. It also allows the Sococo platform to provide support for a variety of interactive sessions without having to create custom viewers for the native client software application.

In accordance with the method of the network infrastructure service environment executes an instance of a client software application in association with a virtual area in a virtual communication environment supporting realtime communications between communicants operating on respective client network nodes block . The client software application may be any type of client software application. In some embodiments the client software application is a document processing software application e.g. a Microsoft Office desktop publishing software application . The network infrastructure service environment receives realtime input data streams from respective ones of the client network nodes associated with the communicants interacting in the virtual area block . The realtime input data streams typically are derived from input device events e.g. realtime computer keyboard events and realtime computer mouse events on respective ones of the client network nodes. The network infrastructure service environment produces a composite data stream from the realtime input data streams block . The network infrastructure service environment inputs the composite data stream to the executing instance of the client software application block . The network infrastructure service environment generates respective instances of an output data stream from output generated by the executing instance of the client software application at least in part in response to the inputting of the composite data stream block . The network infrastructure service environment transmits the instances of the output data stream to respective ones of the client network nodes associated with communicants interacting in the virtual area block .

In some embodiments the network infrastructure service environment transmits the instances of the output data stream in association with a viewscreen object in the virtual area such that the communicants can interact with the client software application via a viewscreen in the virtual area. For example in some of these embodiments the Sococo platform runs a browser client on the area server and routes the output of the browser client to a view screen in a Sococo place. In some implementations a remote access interface e.g. terminal server within the Windows operating system environment is used to keyboard input data and mouse input data and have these input data routed to the view screen being rendered in a shared Sococo place by the area server. The area server combines the input commands e.g. mouse and keyboard inputs from all the users into a single stream and sends that single stream to the client software process running on the area server.

In accordance with the method of claim the Sococo platform establishes a virtual area in a virtual communications environment supporting realtime communications between communicants operating on respective network nodes block . The Sococo platform creates a respective presence in the virtual area for each of one or more of the communicants block . The Sococo platform transmits information between a file store associated with the virtual area and a wiki resource in response to input received from a respective one of the network nodes associated with a respective one of the communicants who has presence in the virtual area block .

In some embodiments the process of transmitting information between the file store associated with the virtual area and the wiki resource involves transmitting the information through a web browser application.

In some embodiments the process of transmitting information between the file store associated with the virtual area and the wiki resource involves importing information associated with the wiki resource to the file store. For example in some cases the Sococo platform imports to the file store at least one of a message thread associated with the wiki resource and a link to a data file associated with the wiki resource. In some cases the Sococo platform associates the imported information with a display object in the virtual area. In some of these embodiments the display object corresponds to a web browser window that displays the imported information in its native format. The Sococo platform selects at least a portion of the imported information designated by a respective one of the communicants who has presence in the virtual area and associates the selected information to a viewscreen object in the virtual area. The Sococo platform transmits to each of the communicants who has presence in the virtual area the selected information in association with the viewscreen object. The Sococo platform also allows one or more of the communicants who has presence in the virtual area to have editorial control of the selected information. The editorial control typically allows the particular communicant to control rendering of the selected information in association with the viewscreen object and to modify the selected information using realtime input data streams transmitted from the network node associated with the particular communicant.

The Sococo platform typically generates an interaction record indexing the imported information with respective references to one or more of a place attribute value that identifies the virtual area and a respective identifier of each of the communicants who has presence in the virtual area.

In some embodiments the process of transmitting information between the file store associated with the virtual area and the wiki resource involves exporting information from the file store to the wiki resource. This process typically involves exporting to the wiki resource information associated with the virtual area. The exported information may be associated with a viewscreen object in the virtual area. The exported information may correspond to a data file that transmitted in associated with the viewscreen object to each of the communicants who has presence in the virtual area. In the process of exporting the information to the wiki resource the Sococo platform may export the information to a location in the wiki resource designated by a respective one of the communicants who has presence in the virtual area. In some exemplary embodiments the designated location corresponds to a message thread of the wiki resource. In some cases the exported information corresponds to at least one of a data file associated with the virtual area a reference to a data file associated with the virtual area and a recording of one or more realtime data streams received from one or more of the communicants who has presence in the virtual area.

In a first use scenario the Sococo platform allows users to select content displayed or referenced e.g. via a hyperlink in the wiki board and direct the selected content to one of the view screens in the Sococo Main room . For example in the embodiment shown in the user is represented by the sprite labeled DVW . The user has selected the file EU Sales.ppt which was referenced in the Team Wiki board . The user also has directed the Sococo platform to render the selected file on the viewscreen labeled ViewScreen . In response the Sococo platform imported the selected file into storage associated with the Sococo Main room and rendered the file on ViewScreen . In some embodiments the Sococo platform indexes the imported file with respective references to one or more of the following attributes the Sococo Main room the users currently in the room the current time and other attributes relating to the communicants interactions in the room. The user represented by the sprite i.e. DVW then is able to move the sprite to a location adjacent to ViewScreen which signals to the Sococo platform that the user wishes to have editorial control of the selected file by referencing switching rules in the associated area specification. When in this position in relation to the ViewScreen the Sococo platform allows the user to have editorial control of the file being rendered on ViewScreen using the functionality of the area application. At this point the user represented by the sprite DVW may control the rendering of the contents of the selected file on the ViewScreen e.g. scroll to different areas of a page or change pages and modify the contents of the selected file. In some embodiments the file modifications are made using an interface that is provided by the document processing application e.g. Microsoft PowerPoint that is used to render the selected file on the ViewScreen . The interface is configured to receive realtime input data streams e.g. computer keyboard and computer mouse data streams from the communicants.

In a second use scenario the Sococo platform allows users to export content from the HUD to the wiki. In the example shown in the users associated with the sprites respectively labeled PB and MM are collaborating on a document entitled APAP Sales.ppt which is being rendered on the viewscreen labeled ViewScreen . After these users have completed their modifications of the document they may direct the application to export the document from the Sococo Main room to the Team Wiki. In response the Sococo platform either exports to the wiki the document APAP Sales.ppt itself or exports a reference e.g. a URI or URL to the document. The wiki in turn incorporates the exported information into the designed location e.g. message thread in accordance with the wiki collaborative software controlling the operation of the wiki. In some embodiments the users may generate one or more other files relating to their collaboration on the document and export those files or references to those files to the wiki. For example in some embodiments the users may direct the Sococo platform to create an audio recording of the users discussions during their collaboration on the document APAP Sales.ppt and to upload a reference e.g. a URL to the audio file into the Team Wiki. In addition to documents users also may enter comments directly into the wiki.

The embodiments that are described herein provide improved systems and methods for navigating and interacting in virtual communication environments. These embodiments provide an interface that includes navigation controls that enable a user to navigate virtual areas and interaction controls that enable the user to interact with other communicants in the virtual areas.

