---

title: Spawning new timelines during game session replay
abstract: A game system in which game sessions involving one or more players may be recorded and saved as game records. A previously recorded game session may be selected and replayed. However, in addition to providing a static replay of the game session, the game system may allow one or more players to step into and assume control of respective game characters at any point during the replay of the game session. When a player steps into and takes control of game a character during the playback, a new timeline is spawned from the original timeline with potentially different outcomes, and a new game record corresponding to the new timeline is generated and stored.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09409083&OS=09409083&RS=09409083
owner: Amazon Technologies, Inc.
number: 09409083
owner_city: Reno
owner_country: US
publication_date: 20140627
---
Computer based games have evolved from single player game programs installed and executed on personal computers to include technologies that allow multiplayer gaming in which two or more players may simultaneously participate in a game session. For example game consoles may host console based multiplayer games that allow multiple players to simultaneously participate in a game session via separate controllers connected to the console. As another example network based multiplayer games which may be referred to as online games may allow multiple players to simultaneously participate in a game from consumer devices coupled to a network. Evolution of the Internet Web based computing and mobile computing including the increasingly widespread availability of broadband connections and the availability and capabilities of consumer computing devices including but not limited to mobile computing devices such as pad tablet devices and smartphones has led to continuing evolution and growth of multiplayer online gaming. Multiplayer games may include everything from relatively simple two dimensional 2D casual games to more complex 2D or three dimensional 3D action or strategy games that may involve two or more players in a game session to world building multiplayer games to complex 3D massively multiplayer online games MMOGs such as massively multiplayer online role playing games MMORPGs that may simultaneously support hundreds or thousands of players in a persistent online world .

While embodiments are described herein by way of example for several embodiments and illustrative drawings those skilled in the art will recognize that embodiments are not limited to the embodiments or drawings described. It should be understood that the drawings and detailed description thereto are not intended to limit embodiments to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . Similarly the words include including and includes mean including but not limited to.

Various embodiments of methods and apparatus for replaying game sessions in computer based games including but not limited to multiplayer games are described. Conventional multiplayer computer games may allow players to view static replays of recorded game sessions or to restart a game from a given point e.g. from the beginning of a level in a multi level game . Embodiments of game methods and apparatus are described that allow players to store continuous records of the states of previously played game sessions in a game for example in a multiplayer game. Each stored game session may be viewed as a separate game universe or timeline involving the game characters of the players that participated. A player may then access the stored state information for a previously played game session to watch a replay of the game. However unlike conventional game systems in which the replay is static and can only be viewed a player can step into the player s game character at any point in the game and begin controlling the character. Upon the player taking over the player s game character and interacting with the game a new game universe and timeline is spawned from the original game session. As the game session progresses on the new timeline the new universe diverges from the universe of the original game session. Anywhere from slightly to drastically different outcomes of a game session may be achieved from even minor differences in game play on the new timeline. This new universe timeline can be recorded and saved replayed and new universe timelines may be spawned off of it. Similarly the original universe timeline can be persisted can again be replayed and other different universe timelines can be spawned from it.

In at least some embodiments various actions of a player when controlling the player s character in game sessions may be monitored and used to create and update over time a profile for the player s character that reflects or models the actual game play of the player when participating in the game as the character. In at least some embodiments the game may include logic e.g. an artificial intelligence AI engine that can simulate game play of a given player by controlling the actions of the player s character according to the player s profile. When a player steps into a previously recorded game session the actions of one or more other characters in the game may from that point forward at least initially be controlled by the game logic based on the characters profiles. As the game deviates from the original universe timeline the simulated characters respond to events according to the corresponding players live playing characteristics as recorded in the profiles. However in at least some embodiments another player can step into and take control of their respective character at any point during the game play.

In at least some embodiments when a player replays a previously recorded game session or when a player steps into a previously recorded game session that is being replayed one or more other players that were involved in the original game session may be notified that the game session involving their characters is being replayed and may be invited to participate in the session. An invitation to participate may for example be initiated by the player who initiated the replay using one or more communications channels such as social media text messaging email telephone etc. In some embodiments the game user interface may include a notify other players interface element that allows a player to optionally invite one or more of the other players to participate in the game replay. In some embodiments the game system may automatically generate and send a notification to one or more of the other players via one or more communications channels e.g. text messaging alert messaging email etc. when a replay of a stored game session is initiated by another player and or when another player steps into their character in a previously recorded game session that is being replayed by the other player.

Embodiments may be used to record original game sessions in which multiple players control their game characters the original game sessions may then be replayed with one or more of the players stepping into and taking control of their characters at any point of the game session to generate a new universe timeline for the game session from that point onward. In at least some embodiments the game sessions are recorded according to the viewpoint of each player character in the game so that the different perspectives of the players characters in the game sessions can be viewed when the game sessions are played back. Once a new universe timeline is spawned one or more of the characters that are not being controlled by their corresponding players may instead be controlled by the game logic e.g. via a player simulation or artificial intelligence AI component of the game system according to the corresponding players profiles.

In at least some embodiments when a game session is being replayed from a game record one or more of the players that participated in the game session may choose to watch the replay of the game session via respective client devices without actively participating in or controlling characters in the game session. Watching or viewing a replay without actively participating may be referred to as participating in ghost mode or as ghosting. In at least some embodiments the game system may play back the game session from one two or more viewpoints or perspectives of the characters involved in the game which can be viewed in ghost mode. For example a first player may view the replay from a perspective corresponding to the viewpoint of the first player s character while a second player may view the replay from a different perspective corresponding to the viewpoint of the second player s character. In at least some embodiments a player may be allowed to view the replay in ghost mode from the perspective of characters that are not associated with the player. In at least some embodiments a player may select to view the replay from either a first person viewpoint i.e. through the eyes or third person viewpoint e.g. above or behind the head of a given character. Note that once a player steps into and takes control of a character in the game session the player is no longer viewing the game session in ghost mode. However one or more other players may choose to continue viewing the game in ghost mode without actively participating or one or more other players may join the replay to view the game in ghost mode without actively participating.

In at least some embodiments a player may be allowed to step out of the player s game character that the player is actively controlling during game play. In at least some embodiments the game logic e.g. an AI component of the game system may take over control of a player s game character if the player chooses to step out of the character during a game session.

In some embodiments an original game session may be initiated in which one or more or even all of the characters participating in the game session are at least initially controlled by the game logic e.g. by an AI component of the game system according to the corresponding players profiles. During the game session one or more of the players with a character in the game may step into and take over control of their game characters.

In at least some embodiments a player for example a skilled or known player for a particular online game can record game sessions involving the player s game character and offer the recorded game sessions to others for replay and possible participation as other characters in the game playing against the original player s computer controlled character. If a player steps into a game session so obtained by taking control of a character a new universe timeline may be spawned in which the player participates with the other player s character as controlled by the game logic according to the other player s profile provided with the recorded game session. These recorded game sessions may for example be offered online in exchange for virtual or real currency or for free.

While embodiments are primarily described herein in the context of replaying game sessions in multiplayer game environments in which two or more players participate in a game session to generate game records which can then be replayed it is to be noted that embodiments may also be applied in single player game environments as well as in multiplayer game environments in which a single player plays in and generates a game record for the game session.

A client device may be any of a variety of consumer devices including but not limited to desktop computer systems laptop notebook computer systems pad tablet devices smartphone devices game consoles handheld gaming devices and wearable gaming devices. Wearable gaming devices may include but are not limited to gaming glasses or goggles and gaming watches or the like that are wearable on the wrist arm or elsewhere. Thus client devices may range from powerful desktop computers configured as gaming systems down to thin mobile devices such as smartphones pad tablet devices and wearable devices. Each client device may implement an operating system OS platform that is compatible with the device . A client device may include but is not limited to input and output components and client software game client for the multiplayer game via which respective players can participate in a multiplayer game session currently being executed by the multiplayer game system . The game client on a particular client device may be tailored to support the configuration and capabilities of the particular device type and the OS platform of the device . An example computing device that may be used as a client device is illustrated in .

In at least some embodiments the multiplayer game system may implement an online multiplayer game and the multiplayer game system may be or may include one or more devices on a network of a game provider that implement the online multiplayer game logic and that serve as or provide an execution environment for the online multiplayer game. In these online multiplayer game environments game clients are typically remotely located from the multiplayer game system and access the game system via wired and or wireless connections over an intermediate network or networks such as the Internet. Further client devices may typically each have both input and output capabilities for playing the online multiplayer game. illustrates an example network based multiplayer gaming environment that includes a game system hosted on a provider network that may serve as an execution environment for a multiplayer online game.

However in some embodiments a multiplayer game system may at least in part be implemented as or on one or more devices that locally implement game logic and that thus locally provide at least some execution of the multiplayer game for example a gaming console that serves as an execution environment for a console based multiplayer game installed on the console or executed from media inserted into the console . In these multiplayer game environments game clients are typically local to the system and access the system via local wired or wireless connections. Further in these local multiplayer game environments the device s that hosts the multiplayer game e.g. a gaming console may generally include or couple to a display device such as a television or monitor for displaying game graphics and client devices may typically provide only control input capabilities for playing the multiplayer game hosted by the device e.g. the client devices may be game controllers coupled to a console .

Note however that a multiplayer game system such as a gaming console may connect via wired and or wireless connections to one or more remote network sites services or devices for example to a network based storage service for storing and retrieving game data e.g. game records that each store a previously played game session to a server or servers of the game provider for updates game downloads and other information or to one or more other instances of the multiplayer game system that host the multiplayer game if the multiplayer game environment allows players to participate in a game session from multiple different multiplayer game system instances via a network.

In some embodiments instead of a game system implemented according to a client server model or variation thereof in which one or more devices such as servers host most or all of the functionality of the game system a game system may be implemented according to a distributed or peer to peer architecture for example as shown in . For example in a peer to peer game system architecture at least some of the game functionality and components of a game system as shown in may be distributed among one two or more client devices that collectively participate in a peer to peer relationship to execute record and replay game sessions.

Note that in and elsewhere in this document the term player is generally used to refer to an actual human that participates in a multiplayer game the term client as in client device and game client is generally used to refer to a hardware and or software interface to a multiplayer game system via which a player interacts with the multiplayer game and the term character or game character is generally used to refer to a player s in game presence or avatar that the player may control via a game client on a client device to interact with other game characters other game entities and other objects within the game environment during a game session. Note that in at least some embodiments game characters may also be controlled by the game system for example by an AI component of the game system according to respective player s profiles during an original game session or during replay of a previously recorded game session.

Multiplayer games that may be implemented in a multiplayer game environment as described herein may vary from tightly scripted games to games that introduce varying amounts of randomness to the game play. The multiplayer game may for example be a game in which the players via their characters attempt to achieve some goal or overcome some obstacle and may include multiple levels that the players have to overcome. The multiplayer game may for example be a game in which the players cooperate to achieve goals or overcome obstacles or a game in which one or more of the players compete against one or more other players either as teams or as individuals. Alternatively a multiplayer game may be a game in which the players may more passively explore and make discoveries within a complex game universe without any particular goals in mind or a world building multiplayer game in which the players may actively modify their environments within the game universe . The multiplayer games may include everything from relatively simple two dimensional 2D casual games to more complex 2D or three dimensional 3D action or strategy games to complex 3D massively multiplayer online games MMOGs such as massively multiplayer online role playing games MMORPGs that may simultaneously support hundreds or thousands of players in a persistent online world .

For a particular game session game logic execution of the game system may generate a game universe that includes the game session s context characters and environment. The players manipulate their characters within this universe via the client devices . The game system may generate and display a view of the game universe from the perspective of each player s character to the player via the game client on the player s respective client device and may receive player input to and interactions with the game universe via the player s manipulation of each player s respective character via the game client on the player s respective client device .

The following is a broad description of an example method for game execution and is not intended to be limiting. Typically game logic execution of the game system is implemented according to event driven architecture in which a game event loop monitors for and reacts to players inputs to and interactions with the game universe via their characters as controlled by client devices . Based upon the players inputs and interactions with the universe and on other game factors e.g. scripted events and or a randomness component at iterations of the game event loop the game session progresses along a game session timeline with the game universe being modified and updated accordingly. A graphical representation of an example game session timeline is provided in .

In some embodiments concurrent with the game event loop execution game system renders a 2D or 3D representation of the universe based on the current state of the universe generates video and sound according to a video frame rate based upon the rendering and sends or streams the video and sound output to the client devices for display. Note that video and sound may be generated for and sent or streamed to each client device according to a corresponding character s current perspective or view of the universe . These game clients may be referred to as thin game clients as the game clients may not implement a 2D or 3D rendering component. illustrates an example network based gaming environment in which rendered game video and sound is streamed to thin game clients on client devices. However in some embodiments at least a portion of the actual rendering may be performed by thick game clients on the client devices that do implement a 2D or 3D rendering component. In these implementations instead of the game system performing the full rendering of the game universe into video and sound and sending the video and sound to thin game clients on client devices for display as shown in the game system may instead send universe data to the client devices from which thick game clients can render and display video and sound. illustrates an example network based gaming environment that uses thick game clients on client devices.

The game system may include a game recording component. During a game session game recording may record game information to a game record for the session. shows an example game record according to at least some embodiments. shows game session metadata from an example game record corresponding to the example timeline of . The game information that is recorded as game session metadata may include an initial game state from which the game universe is initialized and from which the game timeline is launched. Game recording may also periodically or aperiodically record entries in game record each indicating a current game state at a specified time as the game session progresses. In at least some embodiments game recording may record metadata corresponding to the perspective of two or more player s characters involved in the game session in the game record . In some embodiments game recording may record game session video in the game record instead of or in addition to game session metadata. In some embodiments game recording may record two or more different video streams each corresponding to the perspective of a different player s character involved in the game session in the game record . In some embodiments game recording may also store snapshots of the players profiles to the game record during or at the end of the game session. In some embodiments game recording may also store game record information that includes information about the respective game session for example game record information as illustrated in to the game record .

Once a game session is complete the completed game record may be stored to a collection of stored game records . In at least some embodiments the players A C may be members of a gaming group for the multiplayer game system or may form or join a gaming group and the record for the game session may be stored to a collection that is specific to that gaming group. In at least some embodiments game clients may provide an interface via which player s may for example choose to store a game record choose a location to store a game record name a game record and otherwise view and manage game records stored in a collection or collections.

In at least some embodiments the frequency of recording the current game state of a game session to a game record may depend on the type of game and the actual game implementation. Further in some implementations entries may only be recorded in response to detecting a change in the game universe . However note that the entries may generally be recorded at a rate that is at least sufficient to recreate the game universe and to replay the game session from the game record. Further the amount and type of information recorded as the current game states in the entries of a game record may also depend on the type of game and the actual game implementation. For example a tightly scripted multiplayer game in which the players follow a scripted path through the universe many not require as much state information to be recorded as would a multiplayer game that includes a significant amount of randomness and or that allows players more freedom to explore the universe . However each entry may generally contain game state information that is sufficient to advance the game session and the game universe during replay from its previous state on the game timeline to the current state on the game timeline.

The game system may also include a player monitoring component that may monitor various actions of the players when controlling their respective characters in the game universe from the client devices . The monitored actions of the players may be used to create and update over time player profiles for the respective players that model the players game play. illustrate examples of player profiles according to at least some embodiments. The examples given in are not intended to be limiting. In at least some embodiments each player profile may store values for one or more game play attributes of the respective player as determined from the actions of the player when participating in the game. In at least some embodiments the values for at least some the attributes that are stored in the profile may be determined according to various statistical techniques. As just one example the player monitoring component may monitor reaction time of a player to particular events in the game and may maintain a value representing a running average of the player s reaction time in the player s profile .

The types of actions that are monitored and the types and numbers of game play attributes that are derived from the monitored actions may depend upon the type of game. For example shows example player attributes for a fighting game or first person shooter game according to some embodiments. In this example a player s attributes that are tracked for a fighting game may include one or more of but are not limited to tendency to fight or flee weapon preference reaction time accuracy and shooting style e.g. selective or spray . Note that the attributes that are tracked may be relatively few and at a relatively high level as shown in or may be more detailed. For example one or more of a player s tendency to fight or flee weapon preference reaction time accuracy and shooting style may be separately tracked for different situations or scenarios in the game. Also note that in games that allow a player to establish multiple characters in a game system a player s game play attributes using two or more characters may be tracked and stored collectively in a player profile or alternatively game play attributes for the player may be tracked and stored separately for each of the player s characters in the game.

In at least some embodiments a player s game play attributes may be tracked across two or more different games or even across different types of games and used to build a common player profile for the player . shows an example player profile that includes game play attributes for two or more different games and or types of games. As shown one or more attributes e.g. reaction time may be global attributes that are common to most if not all games or game types and that are tracked across two or more different games and collectively used to generate and refine the values for the global attributes the player s profile . Other attributes may be game or game type specific. In this example example game play attributes for a fighting game game type A are shown as well as example game play attributes B B . . . for a game game type B. Game game type B may for example be a driving or racing game or game type and the attributes B B . . . may be driving attributes preferences.

The player may view the playback of the game session for example via the player s game client on a client device as if the player is watching a video of the game session. In some embodiments the game system may display the replay of the game session from the perspective of the player s character on the client device. However the game system may allow the player to step into and take control of the player s character at any time during the playback thus spawning a new timeline in the game universe. As indicated at the game system may detect that the player has assumed control of the player s character in the game session being played back. As indicated at in response the game system spawns a new game record and new timeline from the selected game record and original timeline begins game execution for the new game session and begins recording new game states to the new game record. Note that the new game record may be the same as the original game record up until the time of the spawn event . shows an example of spawning a new timeline for a game session from an original timeline and shows game session metadata from an example new game record spawned from an original game record as shown in according to at least some embodiments.

As indicated at in at least some embodiments once a player steps into a game session being replayed the game system may begin simulating actions of one or more other characters involved in the game session according to the player profiles corresponding to the characters. In at least some embodiments upon detecting that the player has assumed control of the character in the game session being played back from the game record as indicated at the actions of one or more other characters in the original game session at the time of the spawn event may from that point forward at least initially be controlled by logic e.g. artificial intelligence AI logic of the game system according to the players attributes as recorded in the player profiles corresponding to the characters.

In at least some embodiments when a game session is being replayed from a game record and either before or after a new timeline and new game session are spawned one or more of the players that originally participated in the game session may choose to watch the replay of the game session via respective client devices in ghost mode without actively participating in or controlling characters in the game session. In at least some embodiments the game system may regenerate different perspectives according to the characters in the game session so that each player may view the replay from the perspective of their respective character. In some embodiments a player may be allowed to view the replay from the perspective of other characters if desired.

The above describes at that the game system regenerates the game universe from the information stored in the selected game record to play back the respective game session. However in some embodiments a game record may include game session video and playing back a game session from a game record may at least initially involve playing back the video as recorded in the game record. In some embodiments the video may include two or more different video streams each corresponding to the perspective of a different player s character involved in the game session so that the different perspectives can be presented to the respective players during playback as necessary. At and once a spawn event is detected and a new timeline and new game session are spawned the game system may stop playback of the video and begin normal game execution for the new game session with the game play of one or more characters simulated by the game system according to respective player profile s if necessary as indicated at .

Once a game record A has been selected for replay a game playback component of game system may facilitate playback of the recorded game session from the game record A via game logic execution of the game system . In at least some embodiments playback of the game session may involve regenerating the initial game universe state and evolving the game universe along the game timeline according to the current game states as recorded in the game record. A graphical representation of an example game session timeline is provided in . shows game session metadata from an example game record corresponding to the example timeline of . In some embodiments as the game session is played back from the game record A game system renders a 2D or 3D representation of the universe based on the current state of the universe generates video and sound according to a video frame rate based upon the rendering and sends the video and sound output to the client device B for display. However note that in some embodiments at least some rendering may instead be performed at the client device B by a thick game client B as previously described and as illustrated in .

In at least some embodiments player B may choose to simply watch the replay of the game session from the selected game record A in ghost mode as if it was a static video. In at least some embodiments the game system may provide a playback control interface via game client B to the player B so that the player B can control playback of the game session for example via video playback controls such as jump back jump forward fast playback slow playback and so on.

However instead of or in addition to allowing static playback of a game session embodiments of game system and game client allow the player B to step into the player s game character B at any point in the replay of the game session from game record and to begin controlling the character B from client device B. illustrates player B stepping into the player s character B during playback of a previously recorded game record A according to at least some embodiments. Game system may provide an interface via game client B that enables the player B to step into and take control of the actions of game character B during the replay of the game session if and when the player B desires to do so.

In at least some embodiments upon the player B taking over the player s game character B and interacting with the universe of the previously played and recorded game session at some point of the game timeline as recorded in game record A a new timeline may be spawned from the original game session and a new game record B may be spawned from the original game record A. From the point of the spawn game recording may begin recording new game state information for the new timeline to new game record B. graphically illustrates spawning a new timeline from an original timeline according to at least some embodiments. shows game session metadata from an example new game record B corresponding to the example new timeline of .

As can be seen by comparing to and comparing to the new timeline and the new game record B may be the same as the original timeline and game record A up until the time of the spawn event after which the new timeline and corresponding game record B diverge from the originals. For example on the original timeline as shown in and as recorded as game session metadata in the game record of events A and B occur on the original timeline prior to a point on the timeline where the player B resumes control of the character B and events C D and E occur on the original timeline subsequent to the point on the timeline where the player B resumes control of the character B. On the new timeline as shown in and as recorded in events A and B still occur event C shown as event C still occurs but is somewhat different events D and E that occurred on the original timeline do not occur and events F G and H that were not on the original timeline do occur.

As shown in a new timeline may be spawned from an original game session being replayed from a game record A in response to a player B assuming control of a character B in the game session and a new game record B corresponding to the new timeline may be created and stored. In turn the original game session may again be replayed from the original game record A and another new timeline and game record may be spawned from it. In addition the game session as recorded in game record B may be replayed and a new timeline and game record may be spawned from it. Thus an original game session as recorded in an original game record may be replayed multiple times with new timelines and new game records spawned off of the original game session. In addition the game sessions as recorded in the new game records may be replayed with new timelines and new game records spawned off of these replays as well. Over time a tree of game sessions may be generated from an original or root game session potentially with one or more game sessions spawned off of the original game record at a first level of the tree one or more game sessions spawned off of the game sessions at the second level and so on.

At least some embodiments of a game system as described herein may provide methods for players to store view manage access and replay previously played game sessions. In at least some embodiments each game session may correspond to a particular game record which may be viewed as a container for data that records the corresponding game session in format s that allow the game session to be replayed as described herein. illustrates an example game record according to at least some embodiments. In at least some embodiments the players may be members of a gaming group for the game system or may form or join a gaming group and the game records corresponding to the gaming group s game sessions may be stored to a collection that is specific to that gaming group. In at least some embodiments the game system may provide methods for organizing viewing and accessing the game sessions according to game session trees as described above.

In at least some embodiments the game system may provide a user interface to the game clients via which the player s in a gaming group can view graphical and or textual lists views or representations of the group s game session trees or of other game session trees e.g. game session trees of other gaming groups to which the player s have appropriate access privileges. For example in some embodiments a graphical representation of a game session tree as illustrated in may be displayed to a client device via a game client interface. illustrate some other example listings of game sessions according to at least some embodiments. Note that the listings of may be associated with a gaming group for example a gaming group that includes players A B and C as illustrated in and may list some or all game sessions that have been played by the members of the gaming group. Further note that each game session shown in the listings may correspond to a particular game record.

Note that the example graphical and or textual lists views and representations as shown in are given by way of example and are not intended to be limiting. Game sessions and game session trees may be listed or displayed in various other formats than those shown and may be sorted or organized according to one or more other properties than just family hierarchy or ownership or by combinations of two or more properties. As examples game sessions may be organized or sorted according to one or more time properties e.g. creation date time play time duration etc. or may be alphanumerically listed.

In some embodiments the game system may list or may provide one or more user interface elements at the game clients via which the player s can view additional information for listed game sessions as shown in . For example in some embodiments a player may right click on a listed game session and select a show more info or similar option from a popup menu. Again note that each game session shown in the listings may correspond to a particular game record. shows an example of additional information for a previously played game session as recorded in a game record according to at least some embodiments and is not intended to be limiting. This additional information about a game session may be stored to or with a corresponding game record and may be referred to as game record information. As shown in game record information may include one or more of but is not limited to the following 

Organizing and displaying game sessions hierarchically and in other forms as illustrated in and displaying additional information for game sessions as illustrated in may for example allow the players to view information on and analyze all game sessions played from an original game session. For example a player may determine which player s have generated the most activity in game play. As another example in games that involve strategy and in which the mechanics are relatively set or fixed a hierarchical representation of game sessions may allow players to determine best strategies for game play by analyzing the branches of the hierarchy.

As shown in in at least some embodiments a game record may include game record information that includes information about the respective game session for example game record information as illustrated in .

In at least some embodiments a game record may include game session metadata for example game session metadata as illustrated in . In at least some embodiments the game session metadata may include an initial game state from which the game universe is initialized and from which the game timeline is launched and entries each indicating a current game state at a specified time as the game session progresses that may be used to regenerate the game session universe for display to the players via their respective game clients. In at least some embodiments the game session metadata may include metadata corresponding to the perspective of two or more player s characters involved in the game session so that the different perspectives can be presented to the respective players during playback as necessary. In some embodiments playing back a game session may involve playing back the game session to the client device s of one or more players according to the game session metadata from the game record until a spawn event generates a new timeline and new game session as illustrated in . Upon the spawn event the game system logic execution component may begin normal game execution for the new game session with the game play of one or more characters simulated by the game system according to respective player profile s if necessary.

In some embodiments a game record may include game session video . In some embodiments playing back a game session from a game record may at least initially involve playing back the video as recorded in the game record. In some embodiments the video may include two or more different video streams each corresponding to the perspective of a different player s character involved in the game session so that the different perspectives can be presented to the respective players during playback as necessary. In some embodiments playing back a game session may involve playing back the video to the client device s of one or more players until a spawn event generates a new timeline and new game session as illustrated in . Upon the spawn event the game system logic execution component may begin normal game execution for the new game session with the game play of one or more characters simulated by the game system according to respective player profile s if necessary.

In some embodiments a game record may include one or more player profile snapshots that may be captured and stored to the game record during or at the end of the game session that is recorded. Each player profile snapshot may record the player profile at the time of the game session of a respective player that is involved in the game session. Example player profiles are illustrated in . The player profile snapshot s may for example be used in simulating the play of one or more respective characters in a game session being played back after a spawn event has generated a new timeline as illustrated in .

In some embodiments when a player steps into and takes control of a character in the game session the player inherits the attributes from the player s profile as recorded in the player profile snapshots at the time that the game session was originally played. As the player interacts with the game the player s attributes in the previously recorded profile may be updated according to the player s game play. Alternatively in some embodiments when a player steps into and takes control of a character in the game session the player assumes the attributes from the player s current profile rather than from the player profile snapshots .

In some embodiments the game system may provide one or more interfaces via which players may view their respective player profiles at the times of past game sessions as recorded in the snapshots in the game records and may compare their game playing attributes as recorded in the snapshots at the times of the past game sessions to their current player profiles if desired.

As indicated at one or more players may be notified that the game session is being replayed from the game record. In at least some embodiments the player s may be notified as soon as the replay has begun. Alternatively as shown in player s may not be notified of the replay of a game session unless or until at least one other player assumes control of character s in the game universe thus spawning a new timeline. In at least some embodiments at least some of the notifications may be initiated by a player that initiated the replay of the game session for example by text messaging the other player s . Alternatively at least some of the notifications may be automatically initiated by the game system upon detecting a particular event e.g. initiation of replay of the game session from a selected game record or alternatively the assumption of a character by a player during a replay . The game system may notify players using one or more communications channels e.g. text messaging alert messaging email etc. In at least some embodiments each of the players that is notified of the replay may choose to view the playback in ghost mode from the perspective of their respective character.

As indicated at the game system may detect that one or more players have assumed control of the players characters in the game session being played back. As indicated at in response to the player s assuming control of their character s the game system spawns a new game record and new timeline from the selected game record and original timeline and begins recording new game states to the new game record. As indicated at in at least some embodiments once the player s steps into a game session being replayed and thus cause a spawn event the game system may begin simulating actions of one or more other characters involved in the game session according to the player profiles corresponding to the characters. Note that in at least some embodiments other players may choose to view the playback in ghost mode from the perspective of their respective characters or alternatively may choose to step into and take control of their characters in the new game session.

As indicated at the game system may detect that one or more players have assumed control of the players characters in the game session being played back. As indicated at in response to the player s assuming control of their character s the game system spawns a new game record and new timeline from the selected game record and original timeline and begins recording new game states to the new game record. As indicated at in at least some embodiments once the player s steps into a game session being replayed and thus cause a spawn event the game system may begin simulating actions of one or more other characters involved in the game session according to the player profiles corresponding to the characters.

As indicated at after detecting the spawn event at element one or more players may be notified that the game session is being replayed from the game record. In at least some embodiments the notifications may be initiated by a player that has assumed control of a character in the game session. Alternatively at least some of the notifications may be automatically initiated by the game system upon detecting that at least one player has assumed control of a character in the game session. In at least some embodiments the notified players may choose to view the new game session in ghost mode from the perspective of their respective characters or alternatively may choose to step into and take control of their characters in the new game session.

Referring to in some embodiments notifications may be generated upon initiation of a playback of a game session and upon spawning of a new game session during the playback of the game system. In some embodiments the game system may allow players to configure notification options for example via an interface presented to the players via a game client on their respective client devices. For example the game system may allow a player to specify whether the player wants to be notified upon initiation of a replay of a game session and or upon spawning of a new game session during a replay. As another example the game system may allow a player to specify and configure preferred notification channels e.g. email or text message.

In at least some embodiments game system may include player simulation logic e.g. an artificial intelligence AI engine that can simulate game play of a given player in a game session by controlling the actions of the player s character according to the player s profile . Thus as shown in when player B steps into character B in the previously recorded game session being played back from game record A spawning a new timeline and new game record B the actions of one or more other characters in the game may from that point forward at least initially be controlled by player simulation logic based on the player profiles corresponding to the players characters . In other words after the spawn event the characters actions in the game are not played back from a previous recording but are instead either controlled by an actual player via a game client or are simulated by player simulation logic according to the respective players profiles. In the example shown in after player B steps into the game session character B is controlled by player B via game client B while the actions of characters A and B are controlled by player simulation logic according to the players attributes as indicated in the profiles of their corresponding players players A and C as shown in . As the game play diverges from the original universe timeline on the new timeline the simulated characters A and B may respond to new events according to the corresponding player s actual live playing characteristics and attributes as recorded in the profiles .

In at least some embodiments once a replay of a game session has been initiated from a game record A by a player A as illustrated in one or more other players e.g. players A and C may also access and watch the replay from their respective client devices . In at least some embodiments the other players may be allowed to take control of their respective characters at some point during the replay if desired. In some embodiments the other players may not be allowed to take control of their characters until or after the player B that initiated the playback steps into and takes control of the player s character B as illustrated in and thus spawns a new timeline. However in some embodiments the other players may be allowed to take control of their characters as soon as replay of the game session begins whether or not the player B that initiated the playback takes control of their character B.

Referring to in at least some embodiments when a player B replays a previously recorded game session from a game record A or alternatively when the player B steps into the previously recorded game session that is being replayed one or more other players e.g. players A and C of that were involved in the original game session may be notified that a game session involving their respective game characters is being replayed and may be invited to participate in the replay session and thus in a new timeline that may be spawned from the original timeline as shown in .

In at least some embodiments an invitation to participate in a game session being replayed may be initiated by the player B who initiated the replay using one or more communications channels such as social media text messaging email telephone etc. In some embodiments the game client may include a notify other players interface element that allows a player to optionally invite one or more of the other players to participate in the game replay if desired.

In some embodiments the game system may include a notification component that detects when a game session is being replayed from a game record A by a player B determines one or more other players that have characters that were involved in the original game session e.g. players A and C of and automatically generates and sends a notification to the one or more other players . The notification may invite the other players to view the replay and or may invite the other players to assume control of their players in the game session being replayed. In some embodiments the notification may include one or more hot links that a player may select to automatically go to or open the game session on the player s client device . In some embodiments the notifications may be automatically generated and sent when the replay of the game session is initiated from the game record A by the player B as illustrated in . Alternatively in some embodiments the notification may be automatically generated and sent only when the player B steps into and takes control of their character B in the game session and thus causes a new timeline to be spawned as illustrated in . In at least some embodiments to map characters in a game session being replayed to particular players and to notify the identified players of the replay the game system may access game data to map characters to players and to locate each player s information such as a preferred notification method e.g. a phone number for text messaging client device information and so on.

While not shown in in at least some embodiments once one or more players step into a game session being replayed from a previously stored game record A and thus spawn a new timeline and game record B a player monitoring component of the game system as shown in may begin monitoring various actions of the players that are actually controlling their respective characters in the game universe from the client devices and may update the respective player profiles for the respective players according to the monitored actions. However note that the monitoring component may not monitor and may not update the profiles of any players that are not currently controlling actions of their characters through game clients since the game play of these players is being simulated by player simulation logic.

While not shown in in at least some embodiments a player may choose to step out of a character during a game session either an initial game session or a game session that is being replayed and thus relinquish control of the character to player simulation logic.

A game system that implements an embodiment of the methods and apparatus for replaying game sessions as described herein in reference to may allow players to offer or market recorded game sessions to other players. In at least some embodiments a player for example a skilled or known player for a particular online game can record game sessions involving the player s game character and offer the recorded game sessions to others for replay. In at least some embodiments a player that obtains a recorded game session from another player may choose to participate in the replay by assuming control of a character in the game and playing against or with in cooperative games the original player s character. In at least some embodiments if a player steps into a game session so obtained by taking control of a character a new universe timeline may be spawned in which the player participates with the other player s character as controlled by the game logic according to the other player s profile. The other player s profile may be provided with the recorded game session or may be otherwise obtained or accessed. In at least some embodiments these recorded game sessions may be offered online or through other channels for example via a website of the game developer. In some embodiments replays of the game sessions may be offered for a fee in exchange for virtual or real currency or in some cases for free. Alternatively in some embodiments instead of or in addition to offering replays of game sessions from game records copies of the game records themselves may be obtained in exchange for virtual or real currency or in some cases for free.

As indicated at one or more of the game records generated at or replays thereof may be offered to provided to shared with or marketed to other players. As a non limiting example the game records may be offered online for downloading or for replay from a remote network site via a website of the game developer a website of the player s that generated the game records or a website of a third party. In at least some embodiments the game records may be offered via a user interface through which potential clients can view graphical and or textual lists of the offering player s game session trees. For example in some embodiments lists of a player or players game sessions and or game session tree s as illustrated in and or C may be displayed to potential clients via a website or other channel the website may include user interface elements that allow the client s to select and purchase replays of desired ones of the game sessions from the corresponding game records or to select and purchase the game records themselves. As another example the game records may be offered for sale on physical media such as CDs or DVDs by brick and mortar or online stores. In at least some embodiments the game records or replays of the game sessions in the game records may be offered in exchange for virtual or real currency or in some cases for free. In at least some embodiments one or more of the game records may be offered as add on game packages for the game or may be bundled with a game upon purchase of the game. In at least some embodiments a player or players may purchase or otherwise obtain rights to a particular game record or records that allow the player s to replay the game record s as often as desired. Alternatively a player or players may purchase or obtain rights to one replay or to a limited number of replays of a given game record or records. As an alternative in some embodiments different gaming groups may be allowed to swap or trade game records so that the players in one gaming group can replay game sessions recorded by the other gaming group.

In at least some embodiments player profile s for the player s that recorded the game record s may be bundled or provided with the game record s that are offered to provided to shared with or marketed to other players at . Alternatively the player profile s may not be provided with the game record s but may instead be accessed from a remote location e.g. a website where the player profile s are stored if necessary when replaying one of the game records. show example player profiles according to at least some embodiments.

As indicated at one or more players may obtain an offered game record or records or alternatively may obtain rights to replay the game record s one or more times. As just one example a player may access a website via a client device select a desired game record that records a game session played by a well known player of the game and purchase or otherwise obtain rights to replay the particular game session stored in the game record one or more times via a game client implementation on the client device or on a different client device . Note that rights to replay a game session may allow two or more players to participate in a replay of the game.

As indicated at the one or more players may then replay the game session s one two or more times from the obtained game record s according to the obtained rights. In at least some embodiments the player s may view the playback of a game session from an obtained game record as if watching a video of the original game session for example as illustrated in . In at least some embodiments the player s may choose to participate in the replay of the game session by assuming control of a character or characters in the game and playing against or with in cooperative games the original player s or players character s for example as illustrated in . In at least some embodiments once a player steps into and interacts with the game universe in the game session being replayed from an obtained game record the game system begins simulating play of the original player s that recorded the game session according to the player profile s . In at least some embodiments if a player or players steps into a game session being replayed from an obtained game record by taking control of a character or characters a new timeline may be spawned in the universe in which the player s participates with the original player s or players character s as controlled by the game logic according to the original player s or players profiles and a new game record may be spawned off of the original game record.

In at least some embodiments the players may be allowed to store replay and share new game records spawned from the obtained game records. However in at least some embodiments storing replaying and or sharing of the new game records spawned from the obtained game records may be limited or restricted by the game system or by other entities to protect rights of the players that generated and offered the original game records.

Embodiments of game systems that implement the methods and apparatus for replaying game sessions as described herein in reference to for example game system as illustrated in may be implemented in the context of a service provider that provides virtualized resources e.g. virtualized computing resources virtualized storage resources virtualized database DB resources etc. on a provider network to clients of the service provider as illustrated in . Virtualized resource instances may be provisioned via one or more provider network services and may be rented or leased to the clients of the service provider for example to a game provider client. At least some of the resource instances on the provider network e.g. computing resources may be implemented according to hardware virtualization technology that enables multiple operating systems to run concurrently on a host computer i.e. as virtual machines VMs on the host.

The provider network via the services may enable the provisioning of logically isolated sections of the provider network to particular clients as client private networks on the provider network . At least some of a client s resources instances on the provider network may be provisioned in the client s private network. For example in game system may be implemented as or in a private network of game provider that is provisioned on provider network via one or more of the services .

The provider network via the services may provide flexible provisioning of resource instances to clients in which virtualized resource instances can be automatically added to or removed from a client s configuration on the provider network in response to changes in demand or usage thus enabling a client s implementation on the provider network to automatically scale to handle computation and or storage needs. For example one or more additional computing resources may be automatically added to game system in response to an increase in game client participation in the game implemented by game system if and when usage drops below a threshold the computing resources can be removed.

In at least some embodiments game provider may access one or more of services of the provider network via application programming interfaces APIs to the services to configure a game system on the provider network the game system including multiple virtualized resource instances e.g. computing resources storage resources DB resources etc. .

Virtualization services may include one or more of but are not limited to one or more hardware virtualization services for provisioning computing resource one or more storage virtualization services for provisioning storage resources and one or more database DB services for provisioning DB resources . In some implementations game provider may access one or more of these virtualization services via respective APIs to provision and manage respective resource instances in game system . However in some implementations game provider may instead access another service e.g. a game system service or streaming service via an API to the service the other service may then interact with one or more of the virtualization services on behalf of the game provider to provision resource instances in the game system .

The service provider may provide game system service s to clients of provider network . Game system service s may include one or more services that game provider may leverage to implement a network based game as a game system on provider network . As noted above game system service s may leverage virtualization services to provision various resources in game system .

In some embodiments game system service s may include a game backend service for creating deploying and managing backend or server side game components on provider network . In at least some embodiments the game backend service may manage for the client the deployment scaling load balancing monitoring version management and fault detection and recovery of the server side game logic. In at least some embodiments the game backend service may provide fully managed backend containers for server side game components.

In some embodiments game system service s may include a game engine service for creating deploying and running network based games including but not limited to game logic execution components and game client components. The game engine service may include but is not limited to 2D and or 3D game engines and an integrated development environment IDE for developing code for the 2D and or 3D game engines. The game engine service may also include or may leverage the game backend service for provisioning and managing the backend server side components. Game provider may leverage one or more of game system services to implement an online game and to provision the game system on provider network for hosting the game. In at least some embodiments the game engine service may also be leveraged by the game provider to develop and build game clients for various operating system OS platforms on various types of client devices e.g. tablets smartphones desktop notebook computers etc. .

The service provider may also provide a streaming service to clients of provider network . Many consumer devices such as personal computers tables and mobile phones have hardware and or software limitations that limit the devices capabilities as game clients to process and render data in real time. In at least some embodiments a streaming service may allow output of a resource intensive game implemented by game system on provider network to be rendered on the provider network and streamed from the provider network to thin game clients implemented on consumer devices such as personal computers tablets and mobile phones. In at least some embodiments each thin game client may implement a streaming service client interface as shown in for receiving and processing data received according to the streaming service on the client device . Using the streaming service the game system can be scaled to handle computational and storage needs regardless of the types of devices that the game clients are implemented on. illustrates an example network based gaming environment in which a streaming service is used to provide rendered game video and sound to thin game clients according to at least some embodiments.

As shown in in some embodiments the service provider may also provide a stream management service to clients of provider network . Game developers may leverage the stream management service in implementing a game system . is a high level illustration of a gaming environment that leverages a stream management service according to at least some embodiments. The stream management service may provide tools and interfaces including an application programming interface API via which a game developer may implement a game system that leverages one or more features of the stream management service via the API . In at least some embodiments the stream management service is a fully managed service for real time processing of streaming data at large scales. The game developer can leverage the stream management service via API to collect and process high volumes of data per hour from multiple data sources in real time thus allowing the game developer to easily build and implement a game system according to the stream management service API that processes information in real time from multiple data sources when executing a game session according to a game logic execution engine. The data sources may include sources on the provider network and or sources external to the provider network. Provider network sources may for example include DB resources storage resources and or other data sources such as computation resources. The stream management service API may also enable sending data e.g. data streams to one or more destinations such as DB resources and or storage resources on the provider network as well as to game client s on client device s .

Referring to game provider may develop and deploy an online game as game system leveraging one or more of services to configure and provision game system . One or more computing resources may be provisioned and configured to implement game logic execution . In some embodiments as shown in two or more computing resources may be configured to implement game logic execution . However in some embodiments an instance of game logic execution e.g. a 2D or 3D game engine may be implemented as or on each of one or more computing resource instances. For example in some implementations each computing resource instance may be a virtual machine instance that is spun up from a machine image of the game provider s game engine stored on storage resource s .

Storage resources and or DB resources may be configured and provisioned for storing accessing and managing game data including but not limited to game records and player profiles as illustrated in . Game system interface s may be configured to provide gaming I O interfaces and protocols to the game clients . In at least some embodiments the game system interface s may include or may leverage a streaming service interface as described above. Game clients may be developed and built for various operating system OS platforms on various types of client devices e.g. tablets smartphones desktop notebook computers etc. . Game clients may include thick game clients as illustrated in and or thin game clients as illustrated in .

Once game system is established players can obtain game clients from game provider via one or more channels e.g. downloading a game client from a game provider website or from a third party website such as an online site for acquiring and downloading various applications including but not limited to games for various types of consumer devices including but not limited to mobile devices. One or more players may then participate in game sessions as illustrated in and in by interacting with game system via game system interface s . Game logic execution builds maintains and updates the game universe for a game session the players interact in the game universe by controlling their characters using game clients on their client devices the game system creates and stores the game record for the game session to game data and the game system updated the players profiles according to the players game play in the session.

One or more players may also replay and participate in the replay of game sessions as illustrated in and in by interacting with game system via game system interface s to select a game session to be replayed view a replay of the game session and step into the game session to assume control of character s is so desired. In at least some embodiments the game system spawns a new timeline and a new game record in response to at least one player assuming control of a character during playback. In at least some embodiments the game system may automatically notify one or more players that a previously played game is being replayed from a stored game record for example as illustrated in or in .

In at least some embodiments game records of game sessions may be generated by one or more players using game system and the game records may then be provided to other players for replay for example as illustrated in . As a non limiting example the game records may be offered online via a website of the game provider a website of the player s that generated the game records or a website of a third party. Players that obtain an offered game record may then replay the game session using game system . The players may view the playback of the game session as if watching a video of the original game session or alternatively may choose to participate in the replay of the game session by assuming control of a character or characters in the game and playing against or with in cooperative games the original player s character. In at least some embodiments once a player steps into and interacts with the game universe in the game session being replayed from an obtained game record the game system begins simulating play of the original player that recorded the game session according to the player s profile.

A client device may implant a thick game client . Thick game client may implement a 2D or 3D rendering component. Rather than game logic execution performing full rendering of the 2D or 3D game universe as the universe progresses along the timeline game universe data may be periodically aperiodically or continuously sent to the thick game client via game system interface s . On the client device the rendering component may render display and update a 2D or 3D representation or view of the game universe according to the received game universe data.

Instead of implementing a thick game client as illustrated in client device may implant a thin game client . Thin game client may implement a streaming service client interface . Rather than performing rendering of the 2D or 3D game universe on the client device rendering component of game system may render a 2D or 3D representation or view of the game universe as the universe progresses along the timeline. Streaming service interface may generate video from the rendering of the game universe and stream the video and accompanying sound to the thin game client according to a streaming service protocol. At the client device the streaming service client interface receives the stream from streaming service interface and the thin game client displays the video to the client device .

Embodiments of a game system as described herein may be implemented according to a client server model in which one or more devices e.g. server devices host most or all of the functionality of the game system and one or more client devices hosting game clients the clients access the game system the server for example via an intermediate network such as the Internet to play game sessions. However embodiments of the game system may be implemented according to other models for example according to a peer to peer model.

In some embodiments different game peers may implement different parts of the game functionality and components of the game system. For example in some embodiments one of the game peers may perform game recording while another game peer performs player monitoring. As shown in in some embodiments one or more of the devices that are participating in the peer to peer model may serve as a store for game data . Game data may include but is not limited to game records and player profiles as described herein. As shown in in some embodiments at least a portion of game data may be stored to one or more remote game data stores for example using a storage virtualization service of a service provider network as illustrated in .

In at least some embodiments a computing device that implements a portion or all of the methods and apparatus for replaying game sessions in computer based games as described herein may include a general purpose computer system that includes or is configured to access one or more computer accessible media such as computer system illustrated in . In the illustrated embodiment computer system includes one or more processors coupled to a system memory via an input output I O interface . Computer system further includes a network interface coupled to I O interface .

In various embodiments computer system may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processors capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

System memory may be configured to store instructions and data accessible by processor s . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment program instructions and data implementing one or more desired functions such as those methods techniques and data described above for replaying game sessions in computer based games are shown stored within system memory as code and data .

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the device including network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computer system and other devices attached to a network or networks such as other computer systems or devices as illustrated in for example. In various embodiments network interface may support communication via any suitable wired or wireless general data networks such as types of Ethernet network for example. Additionally network interface may support communication via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs or via any other suitable type of network and or protocol.

In some embodiments system memory may be one embodiment of a computer accessible medium configured to store program instructions and data as described above for for implementing embodiments of methods and apparatus for replaying game sessions in computer based games. However in other embodiments program instructions and or data may be received sent or stored upon different types of computer accessible media. Generally speaking a computer accessible medium may include non transitory storage media or memory media such as magnetic or optical media e.g. disk or DVD CD coupled to computer system via I O interface . A non transitory computer accessible storage medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM etc that may be included in some embodiments of computer system as system memory or another type of memory. Further a computer accessible medium may include transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link such as may be implemented via network interface .

Various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer accessible medium. Generally speaking a computer accessible medium may include storage media or memory media such as magnetic or optical media e.g. disk or DVD CD ROM volatile or non volatile media such as RAM e.g. SDRAM DDR RDRAM SRAM etc. ROM etc as well as transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as network and or a wireless link.

The various methods as illustrated in the Figures and described herein represent exemplary embodiments of methods. The methods may be implemented in software hardware or a combination thereof. The order of method may be changed and various elements may be added reordered combined omitted modified etc.

Various modifications and changes may be made as would be obvious to a person skilled in the art having the benefit of this disclosure. It is intended to embrace all such modifications and changes and accordingly the above description to be regarded in an illustrative rather than a restrictive sense.

