---

title: Systems and methods for orchestrating external graphics
abstract: Systems and methods that may be implemented to orchestrate external graphics, for example to support and extend switchable graphics capability beyond internal system components of a host information handling system so as to include an external discrete graphics processing unit (xGPU) that is not integrated or embedded within the chassis enclosure of the host information handling system, and that is coupled to the host information handling system from outside the host system chassis enclosure.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09558527&OS=09558527&RS=09558527
owner: Dell Products L.P.
number: 09558527
owner_city: Round Rock
owner_country: US
publication_date: 20141024
---
This application relates to graphics and more particularly to external graphics for information handling systems.

As the value and use of information continues to increase individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system generally processes compiles stores and or communicates information or data for business personal or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications information handling systems may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

Notebook computers have been provided with two internal graphics processing units GPUs a power saving but lower performance internal integrated GPU iGPU and a higher performance but less power efficient internal discrete GPU dGPU . The internal iGPU is integrated within the host CPU inside the notebook computer chassis enclosure and the internal discrete GPU is provided inside the enclosure of a notebook computer chassis and coupled to the host CPU using an internal data bus. The internal discrete GPU consumes more power than the internal iGPU but also provides higher 3D performances as needed for game play. Switchable graphics refers to a technology that allows a user to select between the internal integrated GPU and the internal discrete GPU of a notebook computer based on the graphics processing required by an application that is currently executing on the information handling system. The intent of switchable graphics is to provide users longer battery times when no high performance graphics are needed.

Switchable graphics technology has been implemented using switchable graphics drivers executing on the host CPU within the notebook computer chassis enclosure to provide users the choice of low power graphics internal iGPU for low power draw or high performance graphics internal dGPU for gaming . This allows a notebook computer user to extend notebook computer battery life by allowing the user to select to use the lower power internal integrated GPU for more mundane graphics processing applications and to enable the higher performance and higher power consuming internal discrete GPU only for applications with demanding graphics processing requirements such as gaming applications. Examples of available switchable graphics technology include Nvidia Optimus technology and AMD Power Express technology. While some switchable graphics implementations require a system reboot to switch between the internal discrete GPU and the internal integrated GPU switchable graphics drivers have been developed that allow a user to switch between the internal discrete GPU and the internal integrated GPU without system reboot. Switchable graphics software has also been developed that allows users to configure their system to auto switch from one internal GPU to the other internal GPU in a manner that is transparent to the user. Windows 7 8.1 operating system supports switchable graphics.

An external graphics dock for notebook computers has been developed that includes components external to the notebook computer chassis that connect to internal circuitry inside the notebook computer chassis enclosure via two cables that carry PCI e 3.0 signals. This external graphics dock includes an external full length PCI E Gen 3.0 8 lanes desktop graphics card coupled to the external dock. Another external graphics dock has been proposed that connects to with a notebook computer via an Expresscard socket and supports two independent streams one from the notebook via a pass thru port on the external dock and one from the external GPU that is coupled to the dock.

Systems and methods are disclosed herein that may be implemented in one embodiment to enable switchable graphics capability to be supported and extended beyond internal system components of a host information handling system e.g. such as a notebook computer to include an external discrete graphics processing unit xGPU that is not integrated or embedded within the chassis enclosure of the host information handling system and that is coupled to the host information handling system from outside the host system chassis enclosure. The disclosed systems and methods may be employed in one embodiment to allow graphics performance to be upgraded from the internal GPU components of the information handling system using switchable graphics and external discrete graphics card s e.g. without changing internal hardware configuration within the chassis of the information handling system. In a further exemplary embodiment systems and methods may be implemented by an information handling system that enable automatic orchestration of connection and disconnection procedures e.g. docking and undocking for an external discrete GPU e.g. on auto pilot without requiring user coordination of same.

In one exemplary embodiment an external graphics dock system may be provided that is configured to be operably coupled to one or more external discrete GPUs xGPUs and to be coupled to internal processing components e.g. embedded controller s CPU s etc. within an information handling system chassis enclosure by switchable graphics technology e.g. software and or firmware executing on internal processing device s e.g. CPU controller microcontroller etc. of the information handling system. In one example the switchable graphics features may be implemented by one or more processing devices in a manner that allows an external dGPU xGPU that is coupled to the external dock system to be utilized as a discrete GPU in switchable graphics mode while any internal discrete GPU I dGPU that is installed and coupled within the information handling system is disabled from operation. Such a capability may be advantageously implemented in one embodiment to allow a higher performance desktop computer xGPU card e.g. such as full size desktop GPU card to be coupled to internal processing devices of a notebook computer and to be utilized externally for graphics processing in order to achieve superior graphics performance as compared to performance possible with an internal mobile GPU having a mobile I dGPU and without requiring power from the notebook computer to operate the xGPU e.g. the power consumption of the xGPU may exceed the available power supply capacity of the notebook computer for powering a discrete GPU. In one example a notebook computer enabled with switchable graphics and having an installed internal discrete mobile GPU may be coupled to an external dock system having an installed discrete desktop GPU card that may be operated by the switchable graphics mode in place of the internal mobile GPU while the external dock system is operably coupled to the notebook computer.

In various exemplary embodiments the disclosed systems and methods may be advantageously implemented to achieve one or more features alone or in any combination with each other. These features include but are not limited to enabling switchable graphics technology operating within a host portable information handling system e.g. notebook computer to recognize and utilize a desktop discrete GPU while system is operating in a mobile oriented switchable graphics mode providing a safe and reliable way to disconnect an external dock system having a discrete GPU from a connected host notebook computer or other information handling system without causing a system hang or blue screen of death BSOD allowing surprise connection plug and or surprise disconnection unplug of an external dock system with discrete GPU to or from an operating host information handling system without requiring the information handling system to restart or be shutdown providing software or other logic that executes in a manner that is invisible to the user and that prompts the user with decision tasks i.e. button press options etc. and or status updates i.e. your system is now connected etc. through the undocking and docking processes so as to guide the user through the docking and undocking processes in a manner that reassures and validates to the user that the docking or undocking operation is happening as desired and in a way that ensures the integrity of the desired signature experience etc.

In one embodiment features of the disclosed systems and methods may be implemented using an external graphics system e.g. external graphics docking station to orchestrate host system basic input output system BIOS host system graphics drivers and a host system operating system OS so that these components work cooperatively together to extend host switchable graphics capability to external GPUs of the external graphics system. In a further embodiment such external graphics orchestration may be implemented to allow a user to implement multiple graphics modes for a host information handling system. Examples of such modes include but are not limited to a default graphics mode in which the external graphics system is not configured and all switchable graphics video content for the host system is sourced from internal e.g. factory installed graphics components of the host information handling system such as internal iGPU and internal dGPU. In a mobile graphics mode a user may have coupled and configured an external dGPU of a coupled external graphics system for use with host system switchable graphics but may disconnect the external system as desired in which case switchable graphics video capabilities revert back to the default mode i.e. internal iGPU and internal dGPU are active . In a single source mode a user may have coupled and configured an external graphics system with a dual GPU external dGPU card in which case both the internal iGPU and internal dGPU may be disabled. In this mode components of the external graphics system become the only source of video output capable of driving multiple external displays according to the external dGPU card capabilities. In a dual source mode the user may have coupled and configured an external graphics system with a single GPU external dGPU card in which case the internal dGPU is disabled and both internal iGPU and external dGPU provide video output simultaneously.

In one respect disclosed herein is a method of orchestrating external graphics for an information handling system including operating multiple internal graphics components of a host information handling system in simultaneous on condition to display video on at least one integrated display device or first external display device coupled to a host processing device of the host information handling system the multiple internal graphics components of the information handling system including an integrated graphics processing unit iGPU of the host processing device and an internal discrete graphics processing unit I dGPU coupled to the host processing device. The method may further include using the host processing device of the host information handling system to execute an operating system OS system and system BIOS of the information handling system using the host processing device of the host information handling system to execute the system BIOS to detect the presence of an external graphics card xGPU of an external docking system temporarily coupled in signal communication with the host information handling system the xGPU card including at least one external GPU. The method may further include using the host processing device of the host information handling system to execute the system BIOS to perform the following steps only after detection of the connected xGPU card turning off the I dGPU of the host information handling system leaving on or turning on the iGPU of the host information handling system and turning on the xGPU card of the external docking system. The method may further include using the host processing device to load graphics drivers for the iGPU and the xGPU card only after detecting the presence of the xGPU card connected to the host information handling system and then operating the iGPU and the xGPU card in simultaneous on condition to display video on at least one of the integrated display device first external display device or at least one second external display device coupled to the external docking system.

In another respect disclosed herein is an information handling system including a host processing device configured to execute a host operating system OS and a system BIOS of the information handling system at least one integrated display device or first external display device coupled to the host processing device multiple internal graphics components including an integrated graphics processing unit iGPU of the host processing device and an internal discrete graphics processing unit I dGPU coupled to the host processing device the multiple internal graphics components being coupled to the at least one integrated display device or first external display device and being configured to operate in a simultaneous on condition to display video on the at least one integrated display device or first external display device. The host processing device of the host information handling system may be configured to execute the system BIOS to detect the presence of an external graphics card xGPU of an external docking system temporarily coupled in signal communication with the host information handling system the xGPU card including at least one external GPU. The host processing device of the host information handling system may be further configured to execute the system BIOS to perform the following steps only after detection of the connected xGPU card turning off the I dGPU of the host information handling system leaving on or turning on the iGPU of the host information handling system and turning on the xGPU card of the external docking system. The host processing device may be further configured to load graphics drivers for the iGPU and the xGPU card only after detecting the presence of the xGPU card connected to the host information handling system and the information handling system may be configured to then operate the iGPU and the xGPU card in simultaneous on condition to display video on at least one of the integrated display device first external display device or at least one second external display device coupled to the external docking system.

Still referring to information handling system includes a host processing device which may be a central processing unit CPU such as an Intel Haswell processor an Advanced Micro Devices AMD Kaveri processor or one of many other suitable processing devices currently available. In this embodiment a host processing device in the form of CPU may execute a host operating system OS for system . System memory may include main system memory e.g. volatile random access memory such as DRAM or other suitable form of random access memory coupled e.g. via DDR channel to an integrated memory controller iMC of CPU to facilitate memory functions although it will be understood that a memory controller may be alternatively provided as a separate chip or other circuit in other embodiments. Not shown is optional nonvolatile memory NVM such as Flash EEPROM or other suitable non volatile memory that may also be coupled to CPU .

As shown in CPU itself includes an integrated GPU iGPU and information handling system also includes a separate internal discrete GPU I dGPU that may be powered by a power source of information handling system e.g. such as AC adapter and or internal smart battery pack of a notebook computer using internal integrated power supply circuitry and or internal voltage regulation circuitry of information handling system . In one mode of operation video content from CPU may be sourced at any given time either by iGPU or I dGPU and is switchable on the fly from one to the other using drivers of a switchable graphics software utility e.g. NVidia Optimus available from NVidia of Santa Clara Calif. AMD Power Express available from Advanced Micro Devices Inc. of Sunnyvale Calif. that is illustrated in as executing on CPU and that is typically provided by a supplier of the given I dGPU that is presently installed in information handling system . As shown in at least one first external display e.g. LCD display or other suitable display device may be coupled e.g. via digital HDMI or DVI analog D Sub S VGA etc. by suitable connector and external video cabling to receive and display visual images received from I dGPU of information handling system . I dGPU may be for example a PCI Express PCI e graphics card that is coupled to an internal PCI e bus of information handling system by multi lane PCI e slot and mating connector. In this exemplary embodiment I dGPU is coupled to CPU by optional 2 1 PCI e multiplexer mux that is in turn coupled to single graphics input output I O from iGPU of CPU by an internal PCI e bus as shown. In an alternate embodiment a CPU may be provided having multiple e.g. two graphics I O s in which case PCI e mux may be omitted as illustrated in .

In the embodiment of at least one second external display e.g. LCD display or other suitable display device is directly coupled to at least one external discrete GPU XGPU of an external graphics dock system e.g. via digital HDMI or DVI analog D Sub S VGA etc. by suitable external video cabling such that the docking system is in between the system and the second external display . External graphics dock system is in turn coupled to CPU via suitable data bus cable such as PCI e PCI e connector or other data bus interface connector and mux as shown the latter of which switches video output from CPU between I dGPU and xGPU s of external graphics dock system . It will be understood that PCI e is just one example of a suitable type of data bus interface that may be employed to route graphics data between internal components of information handling system and or external graphics components coupled to information handling system . Moreover other examples of suitable data bus interfaces that may be employed for handling video data to communicate video signals between system and dock system include but are not limited to a Thunderbolt interface and or using encapsulated PCI e data.

External graphics dock system may also be optionally coupled to information handling system by a separate USB bus or other type data bus cable for purposes of allowing for connection of external I O devices e.g. such as keyboards printers etc. via spare external USB 3.0 connectors to an optional USB hub chip provided within external graphics dock system . Other signal conductors or data buses such as SMBus or Inter Integrated Circuit I2C bus may be optionally coupled between components of system and dock as shown e.g. for purpose of providing communication between components of dock and auxiliary EC and system EC communicating commands from system as to what lighting effects should be employed e.g. pulsing morphing static by dock lighting etc. Thus for example a common connector including PCI E SMBus or I2C bus and USB 3.0 bus interconnects may be optionally employed with a custom cable that includes corresponding PCI E SMBus or I2C bus and USB conductors for coupling information handling system to external graphics dock system . In one embodiment external graphics dock system may include power supply and voltage regulation circuitry that is powered directly by AC mains current so that it requires no operating power be supplied from information handling system . In such a case a custom cable may also include conductors for power good and power up signals to enable operation as described further herein.

In another embodiment external graphics dock system may also be optionally coupled as described above to information handling system by a separate SMBus or I2C bus for purposes of communicating external graphics dock chassis lighting colors luminance level and effects e.g. pulsing morphing from Auxiliary Embedded Controller to LED Driver chip e.g. such as Texas Instruments TLC59116F located inside the external graphics dock system in which case a common connector including SMBus or I2C bus PCI E and USB bus interconnects may be optionally employed with a custom cable including SMBus or I2C bus PCI E and USB conductors for coupling information handling system to external graphics dock system . In one such an embodiment an LED Driver chip may be coupled to SMBus conductors provided within dock system and configured to drive RGB LEDs or other lighting elements of dock lighting inside the dock system based on SMBus signals received across a two wire SMBus of cable from auxiliary EC of system .

It will also be understood that persistent storage e.g. non volatile memory may be additionally coupled to PCH system EC and or auxiliary EC . Such persistent storage may store or contain firmware or other programming that may be used by EC and or EC to implement one or more user defined system configurations such as keyboard lighting options dock system lighting options e.g. for controlling dock system lighting mouse lighting options audio output settings power management settings performance monitoring recording settings designated keyboard macros and or variable pressure key settings and or macros for example in a manner such as described in U.S. Pat. No. 7 772 987 U.S. Pat. No. 8 700 829 U.S. Pat. No. 8 411 029 U.S. patent application Ser. No. 14 182 647 filed Feb. 18 2014 and U.S. patent application Ser. No. 14 013 603 filed Aug. 29 2013 each of which is incorporated herein by reference in its entirety. In one example illustrated in dedicated non volatile memory may be directly coupled to auxiliary EC for this purpose as shown.

Examples of lighting control technology and techniques that may be utilized with the features of the disclosed systems and methods may be found for example in U.S. Pat. No. 7 772 987 U.S. Pat. No. 8 411 029 U.S. patent application Ser. No. 14 182 647 filed Feb. 18 2014 and U.S. patent application Ser. No. 14 013 603 filed Aug. 29 2013 each of which is incorporated herein by reference in its entirety.

As further illustrated in CPU may be coupled to embedded platform controller hub PCH which may be present to facilitate input output functions for the CPU with various internal components of information handling system . In this exemplary embodiment PCH is shown coupled to other embedded components on a motherboard remove that include system embedded controller e.g. used for real time detection of events etc. non volatile memory e.g. storing BIOS etc. wireless network card WLAN for Wi Fi or other wireless network communication integrated network interface card LAN for Ethernet or other wired network connection touchpad microcontroller MCU keyboard microcontroller MCU audio codec audio amplifier and auxiliary embedded controller which may be implemented by a microcontroller. The tasks and features of auxiliary embedded controller may include but are not limited to controlling lighting effects e.g. keyboard lighting effects for the chassis of information handling system and or external dock system lighting effects e.g. in response to user configuration and or in response to commands from particular applications executing on CPU . One example of auxiliary EC is an electronic light control ELC controller such as described in U.S. Pat. No. 8 411 029 which is incorporated herein by reference in its entirety. Also shown coupled to PCH are other non embedded internal components of information handling system which include integrated display e.g. LCD display or other suitable integrated portable information handling system display device internal speaker integrated keyboard and touchpad and local system storage or other suitable type of permanent storage media such as solid state drive SSD optical drives NVRAM Flash or any other suitable form of internal storage.

In one embodiment information handling system may be a battery powered information handling system that is coupled to a source of system DC power for example AC mains and an AC adapter. Information handling system may also include an internal DC power source e.g. smart battery pack that is configured to provide system power source for the system load of information handling system e.g. when an external source of system power is not available or not desirable. Further information on battery powered information handling system architecture and components may be found in United States Patent Application Publication Number 20140281618A1 which is incorporated herein by reference in its entirety. It will also be understood that the particular configuration of are exemplary only and that an information handling system may be configured with fewer additional or alternative components than those illustrated in these figures e.g. including a network interface card wired and or wireless .

It will further be understood that the disclosed graphics orchestration systems and methods may be simultaneously implemented using xGPU card connected and operating within dock that is manufactured by a different manufacturer or provided by a different vendor than a I dGPU that is simultaneously operating within an information handling system that is connected by cable to system . For example an I dGPU within system may be made by NVidia while the xGPU card operating within connected dock may be made by AMD.

Examples of suitable graphics bus technologies that may be employed as internal graphics bus connector for docking system include but are not limited to the PCI e bus. In one embodiment when an xGPU is so coupled via cable and activated to carry video signals from information handling system to external dock the internal I dGPU of information handling system may be disabled and the xGPU of dock enabled in its place. In such an embodiment the hardware and logic architecture described herein for information handling system and external dock system may be employed to enable information handling system to implement switchable graphics features while the internal iGPU of system and the external xGPU card of dock are both active i.e. to switch graphics between iGPU and xGPU card . Moreover external graphics system dock and mated xGPU may be powered independently of information handling system e.g. by a separate power source such as AC mains power and using voltage regulation circuitry integrated within dock such that xGPU draws no power from information handling system while xGPU is operating.

As shown in system embedded controller is configured to execute real time detection module e.g. software or other logic that detects when one or more external graphics cards xGPU cards have been mated with external graphics dock system in operable signal connection e.g. plugged or otherwise electrically coupled via PCI slot to external graphics dock system by cable . Real time detection module may also detect presence of a power good signal provided from the dock and may respond to such power good signal by cooperating with EC operating logic to send a signal back to an internal power supply of the dock to enable the dock power supply to turn on power to the dock . Other tasks that may be performed by real time detection module include reporting various status information to system BIOS of information handling system including but are not limited to the presence of a mated external xGPU video card in dock . System BIOS may in turn respond by driving the PCI e or other video data bus signals to the dock and communicating with the external dGPU video card mated with dock . System embedded controller may also be configured to detect when a system reboot is required.

As further shown in modified main system BIOS executed by CPU may be configured to support various modes of operation of external graphics dock e.g. such as modes described elsewhere herein. Modified main system BIOS may also be configured to send external system graphics dock events received from real time detection module of system EC to an external graphics orchestration software application that is also executing on CPU as well as to provide status e.g. when user presses Fn F1 surprise removal etc. to the user via pop up messages prompting the user for decision making choices they must make e.g. whether to shutdown reboot or cancel to continue proper undocking procedure. also illustrates one embodiment of operating relationship between other components of that may be implemented to achieve external graphics orchestration as described herein.

It will be understood that in embodiments where the disclosed systems and methods are implemented with an notebook computer information handling system the two video cables shown in may actually implemented inside the CPU and one connection is made to the Integrated Display . In the case where the disclosed systems and methods are implemented with a desktop personal computer information handling system there may be physically two video connectors and respective cables provided one connector may be located on the motherboard and may connect the video output from the iGPU to an external display and the second video connector may be located on the discrete GPU card and cable over to an external display

Examples of video modes that may be supported by the configuration of include but are not limited to a default graphics mode in which the external graphics dock system is not configured and all switchable graphics video content for the host system is therefore sourced from internal e.g. factory installed graphics components of the host information handling system such as internal iGPU and internal dGPU . In an example mobile graphics mode external graphics dock system may be first operably coupled to information handling system with cable and configured for operation with an external xGPU but then uncoupled from information handling system when the user disconnects the cable from dock to the information handling system in which case switchable graphics video capabilities revert back to the default mode i.e. internal iGPU and internal dGPU are active . In a single source mode a user may have coupled and configured external graphics dock system with a dual GPU external dGPU card and both the internal iGPU and internal dGPU may be disabled. In this single source mode GPU components of the external graphics dock system become the only source of video output capable of driving multiple external displays according to the capabilities of the external dGPU cards e.g. while implementing dual graphics card software such as while implementing dual graphics card technology such as Nvidia SLI ATI Crossfire etc. In a dual source mode the user may have coupled and configured an external graphics dock system with a single GPU external dGPU card in which case the internal dGPU is disabled and both internal iGPU and external dGPU of docking system provide video output simultaneously with internal dGPU disabled.

In an exemplary default or mobile graphics mode of Table 1 i.e. iGPU and I dGPU are active a user may go into a GPU software utility e.g. such as Nvidia Control Panel executing on host CPU to control switchable graphics drivers . In this regard as user may be allowed by the switchable graphics drivers to select e.g. via whitelist entry which applications executing on CPU are automatically run displayed by which of the two GPUs iGPU or I dGPU . If no external monitor is attached to system video is automatically displayed on the integrated display . However if an external monitor is attached the executing software will display on the designated primary display first or and may be moved by the user to the designated secondary display or e.g. if configured as an extended monitor .

In an exemplary docked to external dock system graphics mode of Table 1 the dock is connected and the iGPU and xGPU of dock are active. If no external monitors or are connected to system or dock all video content will be displayed from iGPU on the integrated LCD . If external monitors and or are attached to the information handling system and or dock a user may again assign which applications are run on which GPU via whitelist entry using GPU software utility on CPU to control switchable graphics drivers . Once again a given application e.g. such as game may be designated by a user to automatically open on whichever monitor is set as the primary monitor while other applications e.g. web browser email which were last closed on the designated secondary display will re open in their last position on the secondary display a function provided by display panel software of the operating system .

In single source or external graphics only mode of Table 1 e.g. a dual GPU card is operating in the dock all the internal GPUs and of the system are disabled such that the user must connect separate video cables from the video outputs of the dual GPU based xGPU card to external monitor s to allow display. No video content will be shown on the integrated display since that path has been disabled when both internal GPUs and were disabled inside the system . As above in mode when an application is opened it may be configured by a user to open on the user designated primary display. Applications such as games may be designated by the user to play on the primary display but applications like web browsers and email can be moved over to a secondary monitor a function provided by display panel software of the operating system . Thus in mode iGPU and I dGPU are both disabled. The integrated display is disabled. The video outputs from the dual GPU based xGPU are active. Any and all video ports available on the xGPU card may be cabled to an external monitor s and operated as noted above based on OS monitor functionality.

Still referring to in one embodiment the first and initial time that external graphics dock system is ever coupled to information handling system by data bus auxiliary EC may be configured e.g. using Aux EC operating logic to listen for at least two events. In this regard the auxiliary EC first listens to determine if dock system has been connected i.e. cable present and connected and if so auxiliary EC is configured to then launch an orchestration process from an orchestration application that is executing on CPU . From that moment on the orchestration application may be configured in one embodiment to listen for the following four specific events 

In one embodiment orchestration application may run as a process in the background while listening to system BIOS events or custom system BIOS notifications from system BIOS that pertain to connectivity of status system dock and may be further optionally configured to act on such BIOS events and notifications by providing user messages e.g. such as popup messages and or link to an educational video describing proper external dock operation to guide the user as necessary. In one embodiment when the external dock system is connected and operational one or more standby modes such as S Sleep and S hibernate power states may be disabled for information handling system to help ensure reliable and predictable operation. Further as indicated above in one embodiment a user may be given one or more ways to disconnect the external system dock . Examples of such disconnection methods include but are not limited to allow the user to generate an undocking signal by pressing a disconnect push button on either end of a custom cable allowing a user to generate an undocking signal by pressing a keyboard key or keystroke combination. An optional signal may be provided upon receipt user undocking signal to indicate to the user that undocking is taking place e.g. such as illuminating an integrated dual color LED to flash red at both ends of the custom cable . Upon receipt of user undocking signal any system level action may automatically take place and the system may revert to mobile graphics mode previously described e.g. switchable graphics video capabilities revert back to the default mode i.e. internal iGPU and internal dGPU are active .

Additionally auxiliary EC may be configured e.g. using Aux EC operating logic to listen for an undocking signal e.g. Fn F1 keystroke combination or other selected and pre assigned undocking signal that is input by a user. Upon first time occurrence of such an undocking user input signal the auxiliary EC may be configured to notify the user that this undocking user input signal does not work or is not enabled since the information handling system has never seen a dock connected to it before. Additionally when auxiliary EC launches the Orchestration application it may set up a Windows Registry key so the Orchestration application will launch every time that the OS e.g. Windows starts on CPU .

Still referring to orchestration application may itself be configured in one embodiment to listen for particular events in real time and when any one or more of these events are present orchestration application may present the user with pop up messages e.g. on the monitor set as the primary display instructing the user what to do next for proper docking or undocking of external graphics dock . In one embodiment orchestration application may so listen for occurrence of any one or more of the following four events 

In one exemplary embodiment an orchestration application programming interface API may be provided on CPU that allows orchestration application to communicate directly with main system BIOS executing on CPU . Such an orchestration API may be configured for example to allow orchestration application to obtain a docking report through CPU that may include information such as the status of the dock system e.g. is it connected etc. what mode a connected dock system is currently in the presence of any undocking flags present etc. In a further embodiment orchestration application may be configured to clear all undock request flags and surprise removal flags that are present.

Following is description of external graphics orchestration startup steps that may be implemented in one embodiment using the architecture of . A user begins by configuring external graphics dock system with at least one xGPU and coupling the external graphics dock system to components of information handling system with physical cable bus . Information handling system may be powered on or off during this physical cable connection operation but will transition to the power on state for orchestration process to continue. At this time even though power supply of external dock system may be connected to AC mains power by a power cable processing device and GPU components of dock system will remain powered off by power supply until connection of graphics communication across cable is acknowledged by a power good is made by a valid dock connection signal then sent to the System EC . The System EC sends a Dock ON signal to the dock s Aux EC . When information handling system is turned on and powered up if not already so powered up system EC detects the dock s cable connection and validates the presence of the xGPU card inside the dock system across cable .

Once the presence of xGPU is validated system EC then sends a power up signal e.g. via dedicated signal path within a custom cable to the external graphics dock system to instruct dock power supply to energize the external graphics dock system e.g. including also turning on other optional ancillary components of dock system such as internal cooling fan etc. . Then across communication path system EC informs main system BIOS executing on CPU that xGPU card is available i.e. as a system component and requires enumeration. In response the OS executing on CPU e.g. Windows OS loads the proper device driver for the xGPU card and the xGPU card becomes a valid video source e.g. after a system restart is performed. After this occurs auxiliary EC receives connectivity status from the system EC and provides a status report to control center application executing on CPU .

For example status report from Aux EC to Control Center App may in one embodiment be of the following types In the scenario of a first time dock connection of dock to system the Aux EC status is used by the Control Center App to call up the Orchestration App to get installed and configured after which the Orchestration App gets installed. The next time the system boots up the Orchestration App is now available for communication with the dock . In all subsequent boot ups when docked the Aux EC sends status to the Control Center App to indicate that Power is on in the dock and to light up the dock lighting e.g. chassis RGB LEDs as per a lighting event profile stored in the Control Center App e.g. such as AlienFX Editor application available from Dell Products L.P. of Round Rock Tex. . In such an embodiment once the dock is turned on the lights turn on to the color and lighting effects defined by the user in the Control Center App .

Further in response to status report to control center application from Auxiliary EC the command center application in turn enables the orchestration application to run and detect the connectivity state of the system dock . In this regard orchestration application requests status from the main system BIOS and determines a message e.g. such as a popup message for the user on the primary display that is provided to the user to guide the user to properly enable the system dock . In this regard an application programming interface API may be provided that allows the Orchestrator App to request status from System BIOS . Such status information may include but is not limited to items such as a what mode are you in b are there any undocking requests that may be pending c is a reboot required d listening for user response to whether they wish to perform a shutdown reboot or cancel in their undock procedure. In one embodiment when external dock system is properly enumerated an optional indication may be provided as feedback to the user that the docking connection is now live e.g. such as illumination of a dual color LED integrated to a custom cable that lights steady in a white color at both ends of the custom cable .

Table 1 lists multiple behavioral modes of external graphics orchestration operation that may be implemented in one exemplary embodiment on an exemplary notebook computer system and external graphics hardware configuration of using the exemplary process architecture illustrated in e.g. using logic implemented on CPU e.g. control center orchestration application main system BIOS and switchable graphics drivers together with logic implemented by processing device of auxiliary EC and logic implemented by system EC . Examples of transition between selected behavioral modes of Table 1 are illustrated in . With regard to Table 1 and whitelist applications may be applications e.g. such as video games that are selected by a user for display by a higher performance dGPU or rather than lower performance iGPU and added to a whitelist that is accessed by switchable graphics drivers executing on CPU . It will be understood that a notebook computer is just one example type of information handling system with which one or more modes of Table 1 and other aspects of the disclosed systems and methods may be implemented. For example one or more modes of Table 1 may also be implemented on a desktop PC that incorporates a CPU like the Intel Haswell processor which has an iGPU and IMC in the CPU.

Referring now to docking operation transition between modes and is illustrated. In particular during normal mobile mode e.g. undocked notebook only switchable graphics operation is supported and I dGPU activates as the GPU to run the select whitelist applications. When not in use the I dGPU is disabled with all other applications displayed by iGPU . When external dock system has been docked as shown via cable to information handling system and system has been rebooted into switchable graphics docked mode switchable graphics operation continues to be supported to activate the xGPU only as the selected GPU to run the selected whitelist applications rather than activating I dGPU and when not in use xGPU is disabled with all other applications displayed by iGPU . In one embodiment CPU may be automatically overclocked OC d in mode but is not overclocked in normal mobile mode . In one embodiment transitions between Mode and Mode may be via reboot only. It will be understood that where external monitors and or are attached to the system and or the dock the user may configure in the OS which monitor is the primary and secondary display including the integrated display LCD . If no external monitors or are attached the integrated display automatically is configured as the primary display and all video content goes to it.

Referring to docking operation transition between modes and is illustrated. In particular normal mode is the same as described in Table 1 and with regard to . Once again during normal mode e.g. undocked notebook only switchable graphics operation is supported and I dGPU activates as the GPU for select whitelist applications and when not in use I dGPU is disabled with all other applications displayed by iGPU . When external dock system having a dual GPU based desktop xGPU card has been docked as shown via cable to information handling system and system has been rebooted into docked external graphics only mode all internal GPUs iGPU and I dGPU are disabled and turned off. As shown all graphics are displayed e.g. using dual card technology such as SLI or Crossfire only on external displays and and PC direct attached displays and integrated display are turned off. At this time switchable graphics are not enabled on CPU and a user should connect at least one external display to dock in order to maintain a viewable video display when rebooting from mode to mode . In this regard in one embodiment system BIOS may detect presence of dual GPU based desktop xGPU card at reboot and provide a power on self test POST message to a user on the integrated display that instructs the user to attach an external monitor immediately since integrated display is about to be turned off.

In normal undocking operation transition between modes and is illustrated. In particular modes and are the same as described in Table 1 and with regard to . In this undocking embodiment a user may initiate undocking by generating an undocking signal e.g. by pressing a dedicated disconnect button on custom cable pressing a designated keystroke combination etc. Following system reboot system reverts to mobile graphics mode previously described.

While operating in mode of step if a user then connects an external graphics docking system in via cable in step methodology proceeds to step where system BIOS detects dock connection and notifies auxiliary embedded controller EC that dock is now connected. Methodology then proceeds to step where auxiliary EC may turn on lighting zone s of the dock chassis lighting to a default setting e.g. such as blue color . Methodology also proceeds at this time to step where system BIOS BIOS sends a Docked Notification to the host operating system OS to update current dock status to pre connected meaning cable is connected but xGPU is not yet active or engaged. In step orchestration application executing on host CPU may then optionally display on one or more of the available active displays of mode a user message such as You need to reboot your system in order to Successfully complete connection. Would you like to reboot now . Then auxiliary EC may optionally configure a dock lighting zone if determined to be part of the current lighting theme in step and methodology proceeds to step to wait for user to system reboot. If no reboot occurs then methodology returns to step and system remains operating in normal mode as shown. However if user reboots the system in step then methodology returns to step and proceeds to step where system BIOS will now determine that docking system is connected to system by cable and thus proceed to step .

As shown if an undock request flag is found present by BIOS in step then methodology returns to mode of step . Such an undock request flag may be located in main system BIOS and may be present due to a user previously providing an undocking signal to initiate an undock procedure e.g. such as by entering a designated undocking keystroke combination or by pressing undocking button s on the cable . However if no undock request flag is found present then methodology proceeds to step where BIOS determines if a dual GPU based xGPU card is present configured within external graphics dock system . If not then in step BIOS implements docked mode M by setting MUX switch to connect a single xGPU to CPU for graphics turning on xGPU rails and engaging or turning on iGPU and xGPU and updating dock status to connected meaning cable is connected and xGPU is engaged and active. Further if designated for M then over clocking for CPU may also be activated in step . Methodology then proceeds to step where BIOS may activate any optional lighting of dock system e.g. turning LED to solid on condition and updating current dock status to connected . From step methodology also proceeds to step where switchable graphics drivers e.g. Intel drivers for iGPU and appropriate xGPU drivers are loaded and executed by CPU to implement docked mode in step .

If a dual GPU based xGPU card is found present in step then in step BIOS implements docked mode M by setting MUX switch to connect dual GPU based xGPU card to CPU for graphics turning on xGPU rails for PCI e and updating dock status to Connected. Further if designated for M then over clocking for CPU may also be activated in step . Next in step BIOS determines if at least one external display is connected to xGPU card of dock system . If not then in step BIOS system may display a message on one or more of the available active displays of mode e.g. integrated display and or external display s to instruct a user to connect an external display such as Attach a monitor to your xGPU card immediately. Your notebook s LCD is about to turn off or such as Attach an external monitor to your xGPU card in order to proceed . In one embodiment this BIOS message may remain on the display driven by the iGPU until the user presses any key on the keyboard e.g. the user may do this after the user has connected an external display to the external dock system . When the user presses any key on the keyboard the screen will go blank and the iGPU will be OFF. After step appropriate switchable graphics drivers for xGPU s are loaded in step and executed by CPU to implement docked mode in step as shown. If in step at least one external display is found connected to xGPU card of dock system then methodology proceeds directly to step and loads drivers .

Referring now to step of in which system is operating in either docking mode M or M steps or if a user provides an undocking signal such as by pushing undocking button s then BIOS notifies OS in step that an undocking request has been received. Further BIOS may also optionally provide a visual undocking signal e.g. by setting LED s of lighting in the undocking buttons to a blinking state to indicate that undocking is in progress in step . Orchestration application may then determine in step if a Fast Undock Flag is set to On Default or Off. Such a Fast Undock Flag may be optionally set by a user to configure system to perform an un prompted automatic shutdown or reboot every time the user wants to undock the system from the dock . One purpose of allowing a user to implement such an automatic fast undocking is to provide a faster undock procedure that does not require the user to respond to a pop up message e.g. asking the user if they wish to make a choice of shutdown reboot or cancel every time undocking is initiated by the user that.

If a Fast Undock Flag is set to On then orchestration application may then display on one or more of the available active displays depending on mode or a user message in step such as Shutting down system Rebooting System and then proceed to step where orchestration application notifies BIOS that system is ready for docking system disconnection and instructs auxiliary EC to turn off any optional Dock lighting zone s. Auxiliary EC responds in step by turning off any optional dock lighting zone and BIOS responds in step by setting optional LED lighting of DOCK Cable LED e.g. LEDs may be located inside undocking buttons to blinking state. At this time orchestration application determines whether default Fast undocking setting is set to automatically reboot or shutdown without further user input. As shown if the fast undock default setting is to shutdown then system is next shutdown in step to system off state S . However if the fast undock default setting is set to reboot then in step BIOS sets optional lighting of DOCK cable s LEDs e.g. found inside undock buttons to Off and sets Undock Request Flag to On as shown. The user may then disconnect the dock system in step and the methodology returns to step for system reboot.

Alternatively when in docked mode or either of steps or a user may provide an undocking signal in step by pressing a hot key or keystroke combination to request undocking. When this occurs orchestration application may then display on one or more of the available active displays depending on mode or a user message in step such as Undock Request. System needs to reboot in order to successfully undock device and give the user Shutdown Reboot or Cancel options. The user may then provide a selected undocking option in step e.g. one of Shutdown Reboot or Cancel as shown. If user selects the Cancel option in step then methodology returns to previous mode or mode as applicable. However if user selects Reboot or Shutdown option in step then methodology proceeds to step which operates as previously described above with step proceeding to reboot or shutdown option based on the user selection made in step .

As further shown when in docked mode or either of steps or a surprise undocking SU may occur without user undocking signal as shown in step SU occurs while in M or in step SU occurs while in M . As shown when surprise undocking occurs during M system proceeds to M mode in step e.g. see . In such a case BIOS notifies OS of sudden hardware removal of dock and sets Dock Surprise Undocking SU flag in step and switchable graphics drivers acknowledges xGPU removal in step without unloading. At this time orchestration application may then use iGPU to display a surprise undocking user message on integrated display and or external display in step such as Dock disconnected Improperly. Please reboot your system now. If system becomes unresponsive press power button for 4 seconds . The user may then respond to instructions of step by rebooting the system in step in which case methodology returns to step and reboots.

When SU occurs during M system proceeds to step e.g. see . In such a case BIOS may take one of several actions given that no display is currently active for the user to view. For example in step BIOS may cause an audible beep on internal speaker and then wait a predefined amount of time e.g. such as 10 seconds or other greater or lesser time for the dock to be reconnected. After expiration of the predetermined time without dock reconnection BIOS may force reboot of the system and return to step .

As shown in the user resumes use of information handling system in step as the system transitions to SO ON state from S or S state. In step system BIOS sends docked status notification to operating system and the dock status pre connected flag is set in BIOS . Orchestration application then requests dock state and reads the pre connected status from BIOS in step . Orchestration application may respond in step by displaying a user message on integrated display and or external display e.g. such as You need to reboot your system in order to Successfully complete connection. Would you like to reboot now At this time auxiliary EC may configure a dock lighting zone if it part of the current lighting theme in step and methodology proceeds to step to wait for user to system reboot. If the user chooses not to reboot in step then methodology returns to step of where system remains operating in normal mode . However if the user chooses to reboot the system in step then methodology proceeds to step of and proceeds accordingly.

Returning to S state of step of a user may also provide an undocking signal such as by pressing an undocking button in step in which case BIOS may then automatically resume operation in step and during POST may cause beep on speaker and display an optional user message such as You need to reboot your system in order to successfully complete undocking. Press R to Reboot C to Cancel Y to resume and complete the process at OS level. BIOS may then determine in step whether the user entered keystroke R C or Y or other command to specify reboot cancel or resume operations. If user entered a reboot command in step then methodology proceeds to step previously described. If user enters cancel command in step then methodology returns remains in current mode mode state of step or mode of step as may be appropriate . However if user enters the resume to OS command in step then methodology proceeds to step where BIOS updates the dock status to button UndockRequest and sets the optional lighting in cable undock buttons to a blinking state to indicate that undocking is in progress. Then in step orchestration application requests current dock status and reads the user requested undock status of button UndockRequest. Methodology the goes to step of previously described.

Still referring to at step information handling system enters a S hibernation power state from internal external graphics mode . At this time docked system may be undocked in step by unplugging cable without user undocking signal in which case methodology proceeds to step previously described. Alternatively docked system may be undocked by user undocking signal in step as previously described.

It will be understood that the methodology of is exemplary only and that fewer additional and or alternative steps may be performed in any order suitable for implementing the orchestration of external graphics e.g. with switchable graphics capability. Moreover where particular illustrated steps of refer to switching mux of to enable particular GPU connectivity it will be understood that similar steps may be performed for the system embodiment of B without mux switching e.g. utilizing CPU of to itself establish connectivity to I dGPU or xGPU as appropriate for the given step.

It will also be understood that one or more of the tasks functions or methodologies described herein e.g. including those described herein for components etc. may be implemented by circuitry and or by a computer program of instructions e.g. computer readable code such as firmware code or software code embodied in a non transitory tangible computer readable medium e.g. optical disk magnetic disk non volatile memory device etc. in which the computer program comprising instructions are configured when executed e.g. executed on a processing device of an information handling system such as CPU controller microcontroller processor microprocessor FPGA ASIC or other suitable processing device to perform one or more steps of the methodologies disclosed herein. A computer program of instructions may be stored in or on the non transitory computer readable medium accessible by an information handling system for instructing the information handling system to execute the computer program of instructions. The computer program of instructions may include an ordered listing of executable instructions for implementing logical functions in the information handling system. The executable instructions may comprise a plurality of code segments operable to instruct the information handling system to perform the methodology disclosed herein. It will also be understood that one or more steps of the present methodologies may be employed in one or more code segments of the computer program. For example a code segment executed by the information handling system may include one or more steps of the disclosed methodologies.

For purposes of this disclosure an information handling system may include any instrumentality or aggregate of instrumentalities operable to compute calculate determine classify process transmit receive retrieve originate switch store display communicate manifest detect record reproduce handle or utilize any form of information intelligence or data for business scientific control or other purposes. For example an information handling system may be a personal computer e.g. desktop or laptop tablet computer mobile device e.g. personal digital assistant PDA or smart phone server e.g. blade server or rack server a network storage device or any other suitable device and may vary in size shape performance functionality and price. The information handling system may include random access memory RAM one or more processing resources such as a central processing unit CPU or hardware or software control logic ROM and or other types of nonvolatile memory. Additional components of the information handling system may include one or more disk drives one or more network ports for communicating with external devices as well as various input and output I O devices such as a keyboard a mouse touch screen and or a video display. The information handling system may also include one or more buses operable to transmit communications between the various hardware components.

While the invention may be adaptable to various modifications and alternative forms specific embodiments have been shown by way of example and described herein. However it should be understood that the invention is not intended to be limited to the particular forms disclosed. Rather the invention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims. Moreover the different aspects of the disclosed systems and methods may be utilized in various combinations and or independently. Thus the invention is not limited to only those combinations shown herein but rather may include other combinations.

