---

title: System for communication in a tactical network
abstract: A system is described for communication in a tactical network. A gateway is communicatively couplable to one or more tactical nodes and to one or more other gateways. The gateway is programmed to transmit information to and/or receive information from other gateways. Information exchanged includes gateway attributes, link attributes, service availability, and/or data availability. The gateway optionally provides quality of service, distributed persistence, load balancing, and/or transformation services. Services are provided in a modular, service-oriented architecture (SOA) to accommodate the addition of services and/or applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09178829&OS=09178829&RS=09178829
owner: The Boeing Company
number: 09178829
owner_city: Chicago
owner_country: US
publication_date: 20140513
---
This application is a divisional application of U.S. patent application Ser. No. 12 608 809 filed Oct. 29 2009 which is incorporated herein by reference in its entirety.

The field of the disclosure relates generally to routing data within a global network and more specifically to systems for automatically managing network topology discovering services and improving performance at local gateways in communication with IP based and non IP based whether networked or non networked nodes.

Gateway solutions are needed to seamlessly interconnect the global information grid GIG with current and future purpose built networks consisting of Internet Protocol IP and non IP waveforms. The GIG provides command and control features and information sharing to deliver classified and unclassified IP services to key operating locations worldwide. This global network is designed with redundant routes between points to ensure connectivity is not disrupted by a failure at single point. Communication is protected from interception and forgery through the use of High Assurance Internet Protocol Encryption HAIPE architecture and protocol services. This results in significant network overhead and associated latency but is necessary to make the GIG a robust highly reliable network.

As implied above directly connecting tactical devices to the GIG introduces a risk of communication latency between tactical devices in an operating location. Furthermore directly connecting tactical devices to the GIG is feasible only for IP enabled nodes and requires manual address and or routing configuration each time a node connects to a router disconnects from a router or moves from one router to another. Even in the absence of significant latency network bandwidth may constrain application performance at a local node accessing data from a remote node via the GIG. In addition network nodes often require data processing services but may be poorly suited to perform such services themselves.

In one aspect a system is provided for communicating with a tactical node. The system includes a first gateway that is communicatively coupled to a tactical node. The first gateway is programmed to store data from the tactical node to create stored tactical node data transmit a data availability message describing the stored tactical node data and transmit the stored tactical node data. The system also includes a second gateway that is communicatively coupled to the first gateway. The second gateway is programmed to receive from the first gateway the data availability message. The second gateway is also programmed to in response to a first data request from a remote device transmit to the first gateway a second data request for the stored tactical node data based on the received data availability message. The second gateway is further programmed to receive from the first gateway the tactical node data and transmit the tactical node data to the remote device.

The features functions and advantages that have been discussed can be achieved independently in various embodiments of the invention or may be combined in yet other embodiments further details of which can be seen with reference to the following description and drawings.

In various embodiments a system and a method for communicating in a tactical network via a gateway are described. One embodiment may include a tactical embedded gateway and is described herein with relation to the Global Information Grid GIG as an example for purposes of this disclosure. A tactical embedded gateway may be installed in a fixed location e.g. an operational facility tethered to a fixed location e.g. coupled to a balloon installed in a manned or unmanned vehicle e.g. a wheeled unit tracked unit floating unit submersible unit or flying unit or portable e.g. in a backpack though any configuration consistent with the embodiments described herein is contemplated.

To automatically route data to a tactical node a gateway may detect the presence of the tactical node and a local identifier for the tactical node and then acquire a global network address for the tactical node. The gateway is configured to determine a name for the tactical node and then associate the name with the global network address in an address resolution service. The gateway configures itself to subsequently receive data using the global network address and transmit the data to the tactical node using the local identifier. The gateway may later determine the tactical node is no longer present at which time the gateway removes any configuration corresponding to the tactical node including the gateway s routing configuration e.g. association of the tactical node with the global address name and local identifier and the name address association in the address resolution service. The gateway includes software implementing a service oriented architecture SOA to ease the process of installing and upgrading software services. Furthermore gateways may interact with each other to provide distributed processing distributed storage optimized routing and or redundancy.

This written description refers to communication using Internet Protocol IP Link 16 and serial interfaces. IP includes but is not limited to IP version 4 IPv4 and IP version 6 IPv6 standards. References to Link 16 are exemplary and should be understood to also include Link 11 Link 22 and or other non IP networked standards. Serial interfaces include but are not limited to Recommended Standard RS 232 RS 422 RS 423 RS 432 RS 485 Serial Peripheral Interface SPI Inter Integrated Circuit I2C System Management Bus SMBUS Universal Serial Bus USB and or the Institute of Electrical and Electronics Engineers IEEE 1394 interface. The use of other communication standards and or interfaces is also contemplated.

GIG may include the Internet privately managed hardwired data channels wireless data channels and or satellite based data channels. For example GIG may include a wide area network WAN or a virtual private network VPN created by connecting a plurality of local area networks LANs via the Internet and or other data channels and optionally applying encryption to traffic passed between LANs.

Address resolution server maintains a registry of name to address associations for tactical nodes . For example address resolution server may include a textual name and an IP address corresponding to a tactical node attached to a gateway . Name to address associations may be provided by one or more gateways as described below. In an exemplary embodiment a GIG node or a gateway transmits an address request to address resolution server including a name corresponding to a tactical node . Address resolution server receives the address request identifies an address corresponding to the tactical node based on the name provided and transmits an address response including the identified address. The GIG node or gateway receives the address response and transmits a message to the tactical node through GIG by addressing the message to the identified address. As described in more detail below a gateway that is communicatively coupled to the tactical node receives the message and forwards the message to the tactical node corresponding to the address.

In some embodiments one or more tactical nodes may be coupled to a gateway via a tactical network cloud . Tactical network cloud may include but is not limited to a LAN a wireless LAN WLAN and or a mesh network such as a mobile ad hoc wireless network MANET .

User computing device includes a processor for executing instructions. In some embodiments executable instructions are stored in a memory area . Processor may include one or more processing units e.g. in a multi core configuration . Memory area is any device allowing information such as executable instructions and or other data to be stored and retrieved. Memory area may include one or more computer readable media.

User computing device also includes at least one media output component for presenting information to user . Media output component is any component capable of conveying information to user . In some embodiments media output component includes an output adapter such as a video adapter and or an audio adapter. An output adapter is operatively coupled to processor and operatively couplable to an output device such as a display device e.g. a cathode ray tube CRT liquid crystal display LCD organic light emitting diode OLED display electronic ink display or printer an audio output device e.g. a speaker or headphones or a Braille device.

In some embodiments user computing device includes an input device for receiving input from user . Input device may include for example a keyboard a pointing device a mouse a stylus a touch sensitive panel e.g. a touch pad or a touch screen a gyroscope an accelerometer a position detector an audio input device and or any other sensor device. A single component such as a touch screen may function as both an output device of media output component and input device .

User computing device may also include a communication interface which is communicatively couplable to a remote device such as another GIG node address resolution server and or a gateway . Communication interface may include for example a wired or wireless network adapter or a wireless data transceiver for communicating via a mobile phone network e.g. Global System for Mobile communications GSM or 3G another mobile data network e.g. Worldwide Interoperability for Microwave Access WIMAX radio frequency RF Free Space Optics FSO an acoustic communication means and or any other suitable means for communicating with a remote device.

Stored in memory area are for example computer readable instructions for providing a user interface to user via media output component and optionally receiving and processing input from input device . A user interface may include among other possibilities a web browser and or a client application. Web browsers enable users such as user to display and interact with media and other information typically embedded on a web page or a website provided by a remote device. A client application allows user to interact with a server application provided by a remote device.

Server computing device includes a processor for executing instructions. Instructions may be stored in a memory area for example. Processor may include one or more processing units e.g. in a multi core configuration .

Processor is operatively coupled to a communication interface such that server computing device is capable of communicating with a remote device such as a GIG node address resolution server and or a gateway . For example communication interface may receive requests from a gateway via GIG .

Processor may also be operatively coupled to a storage device . Storage device is any computer operated hardware suitable for storing and or retrieving data. In some embodiments storage device is integrated in server computing device . For example server computing device may include one or more hard disk drives as storage device . In other embodiments storage device is external to server computing device and may be accessed by one or more server computing devices . For example storage device may include multiple storage units such as hard disks or solid state disks in a redundant array of inexpensive disks RAID configuration. Storage device may include a storage area network SAN and or a network attached storage NAS system.

In some embodiments processor is operatively coupled to storage device via a storage interface . Storage interface is any component capable of providing processor with access to storage device . Storage interface may include for example an Advanced Technology Attachment ATA adapter a Serial ATA SATA adapter a Small Computer System Interface SCSI adapter a RAID controller a SAN adapter a network adapter and or any component providing processor with access to storage device .

Gateway also includes a plurality of tactical node communication interfaces. In an exemplary embodiment gateway includes IP communication interfaces for communicating with IP nodes Link 16 communication interface for communicating with Link 16 nodes and serial communication interface for communicating with one or more serial nodes . Communication interfaces and may include any device suitable for wired and or wireless communication.

A single tactical node communication interface or may be communicatively coupled to multiple tactical nodes or . For example an IP communication interface may be connected to a network switch or router not shown in to communicatively couple the IP communication interface to multiple IP nodes . In another example IP communication interface is a wireless network communication interface and IP communication interface is communicatively couplable to multiple IP nodes via one or more wireless network connections e.g. a wireless LAN hosted by IP communication interface or an ad hoc wireless LAN between IP communication interface and IP nodes . In addition or in the alternative multiple IP communication interfaces may be used to connect to multiple local networks and or to provide redundant connections to one local network.

In some embodiments gateway communicates with a tactical node or via an adapter external to gateway . In an exemplary embodiment gateway is communicatively coupled to one or more Link 16 nodes via Link 16 to IP adapter . Link 16 to IP adapter includes an IP communication interface which is communicatively couplable to an IP communication interface of gateway . Link 16 to IP adapter also includes a Link 16 communication interface which is communicatively couplable to one or more Link 16 nodes . Link 16 to IP adapter facilitates IP based communication between gateway and Link 16 nodes regardless of whether gateway includes Link 16 communication interface . Similarly serial communication interface is an IP communication interface communicatively couplable to one or more serial nodes via a serial to IP adapter not shown in . In addition or in the alternative serial communication interface may include a serial to IP adapter internal or external to gateway .

In an exemplary embodiment gateway includes IP communication interfaces Link 16 communication interface and serial communication interface . Other non IP communication interfaces suitable for communicating directly or indirectly with tactical nodes are also contemplated.

Gateway also includes a plurality of GIG communication interfaces for communicatively coupling gateway to GIG . GIG communication interfaces may include but are not limited to wired IP communication interfaces wireless IP communication interfaces and or satellite communication interfaces. In some embodiments a single hardware device such as an Ethernet adapter is configured to provide multiple GIG communication interfaces . For example the Ethernet adapter may be configured to receive messages for and transmit messages from multiple IP addresses.

Gateway also includes one or more inter gateway communication interfaces . In the exemplary embodiment inter gateway communication interface is directly communicatively couplable to one or more other gateways . In addition or in the alternative inter gateway communication interface is communicatively couplable to one or more other gateways via GIG and or tactical network cloud with or without the use of a virtual network such as a VPN. In some embodiments a plurality of gateways communicate with each other via a mesh network such as a mobile ad hoc network MANET .

Gateway includes a middleware component having a publish subscribe pub sub engine which routes messages between the other functional components of gateway . In addition the other functional components may communicate with each other via a communication channel such as a remote procedure call RPC and or inter process communication IPC . In the exemplary embodiment one or more components subscribes to pub sub engine for a certain type of message. A second component publishes produces messages of that type to pub sub engine and pub sub engine transmits the message to all components which have subscribed to the message type. Each subscribed component receives consumes the message. Because message forwarding is managed by pub sub engine a component publishing a message requires no configuration regarding other components which may require receipt of the message.

Gateway may include several functional components in addition to pub sub engine . In the exemplary embodiment gateway includes a device management component a naming component a transformation component a network topology management NTM component a load balancing component a persistence component a quality of service QoS component a data driven message processing DDMP component and optionally one or more application components all of which are described in more detail below. Each of components and may submit a request and or a query as described herein to another component via pub sub engine . Components and may reply to a request and or query by submitting a response via pub sub engine and or by submitting a response directly to the submitter of the request and or query e.g. via RPC and or IPC . Similarly components and may initiate communication with each other directly via RPC IPC and or any other suitable communication means.

Device management component detects and or communicates with other devices shown in via communication interfaces and or . Device management component is programmed to receive a message from a tactical node and determine a local identifier for the tactical node . The local identifier may be a hardware identifier such as a media access control MAC address a local network address such as an IP address a node identifier from a Precise Participant Location and Identification PPLI message or any other device suitable for indicating a particular tactical node . Device management component may also determine a device type e.g. a sensor or a robotic device for a detected tactical node . For example a tactical node may communicate a device type indicator to device management component or device management component may determine a device type based on a header and or content of a message form the tactical node . Device management component publishes a tactical node availability message e.g. via pub sub engine including for example a local identifier and or a device type for the tactical node . Device management component may also transmit a tactical node availability message to one or more other gateways and or GIG nodes .

In one embodiment device management component detects another gateway via IP communication component and inter gateway communication interface . In response device management component publishes a gateway availability message e.g. to pub sub engine .

In the exemplary embodiment gateway includes serial communication interface and serial communication component for communicating with one or more serial nodes . Serial nodes include but are not limited to sensors such as temperature sensors barometers hygrometers anemometers speedometers altimeters inclinometers pressure sensors and electrical switches. Serial nodes may also include for example global positioning system GPS receivers microphones cameras instrumentation and remotely controllable devices e.g. motors . A serial node e.g. a sensor may provide a continuous or periodic signal to serial communication interface and serial communication component may periodically publish messages e.g. to pub sub engine based on the signal s from the serial device. For example serial communication component may sample a continuous signal to produce a message according to a predetermined frequency e.g. once every second or once every five seconds . Other serial nodes may interact with gateway and or an operator. For example a serial node may accept a command or request from serial communication interface and respond to the command or request.

In one embodiment a tactical node periodically transmits a keep alive message which indicates the tactical node is operable. Device management component detects the presence of the tactical node by receiving the keep alive message. The keep alive message includes a local identifier of the tactical node. If the device is not registered with gateway device management component registers the tactical node by publishing a device registration message to pub sub engine . The device registration message includes a local identifier for the node. Device management component monitors transmissions from registered tactical nodes . If device management component determines that it is no longer receiving keep alive messages from a tactical node device management component publishes a device deregistration message for the tactical node to pub sub engine . In some cases a tactical node transmits a departure message prior to becoming inoperable or not present. For example a tactical node may transmit a departure message in response to determining that it is passing out of communication range with gateway or that a planned or unplanned operational outage is approaching. When device management component determines that a registered tactical node is inoperable or not present device management component publishes a device deregistration message to pub sub engine .

In addition or in the alternative device management component periodically transmits a request e.g. a ping request to the tactical node and determines whether the tactical node is operable based on whether it receives a response to the request from the tactical node . Device management component may broadcast or multicast the request such that multiple tactical nodes receive and respond to the request. Device management component detects the presence of a tactical node by receiving a response to the request. If device management component does not receive a response from a tactical node it has previously registered device management component determines that the tactical node is inoperable or no longer present.

In the exemplary embodiment device management component facilitates communication between gateway and external devices such as a tactical node a GIG node another gateway or address resolution server . Device management component is programmed to receive a message from an external device via a communication component or and publish the message to pub sub engine facilitating processing of the incoming message by other components. Device management component also registers with pub sub engine for outgoing messages. When another component publishes an outgoing message for an external device pub sub engine notifies device management component as a result of its registration and device management component transmits the message to the external device via a communication component or .

In some embodiments device management component associates a device descriptor with an external device such as a tactical node . A device descriptor includes but is not limited to a device class or type a device location a device network parameter a device manufacturer a device model a device capability a sensor type a sensor resolution a sensor sampling rate a configuration parameter a remotely configurable parameter descriptor a locally configurable parameter descriptor a processing capacity indicator a memory capacity and or usage indicator a device service descriptor a command descriptor a device command access restriction and or a communications protocol. A service descriptor may include for example a service name indicating a business related or data related function performed by the device. Exemplary functions include the provision of sensor readings data translation execution of proprietary algorithms for data processing routing of data through proprietary network protocol adapters and sensor network interfacing. A command descriptor may include without limitation a command name an access restriction and or a parameter descriptor. A parameter descriptor may include for example a parameter name a parameter type e.g. scalar array Boolean or string and or a range of legal values e.g. positive integers or real numbers between zero and one .

In some embodiments device management component automatically associates a device descriptor with an external device. In one embodiment device management component includes a set of node types each of which is associated with a device descriptor and device management component determines a device descriptor for an external device based on a node type of the device. For example the external device may provide a node type indicator e.g. in a message header or as a USB class code or device management component may determine a node type based on one or more messages from the external device. In addition or in the alternative device management component may include a statically or manually defined node type and or device descriptor for one or more external devices. Device descriptors and or node types may be configured locally at gateway and or uploaded to gateway from an external device.

In one embodiment device management component includes in a device registration message for an external device one or more attributes from a device descriptor associated with the device. For example device management component may include one or more command descriptors for a tactical node .

Device management component may perform command validation. For example before transmitting a command to a tactical node device management component may validate the command based on one or more command descriptors from the device descriptor associated with the tactical node . If the validation fails device management component rejects the command optionally publishing a command validation error to pub sub engine .

In some embodiments prior to publishing an incoming message from a tactical node to pub sub engine device management component preprocesses the message. For example device management component may combine multiple transmissions from a tactical node into a single message. In one embodiment device management component preprocesses a message based on a device descriptor for the tactical node . For example device management component may parse message content based on a communication protocol or message format defined in the device descriptor. In addition or in the alternative device management component may associate one or more metadata tags with the message. For example a tag may indicate the local identifier of the tactical node a location of the tactical node or any other attribute of the tactical node . If the message from the tactical node is a response to a message submitted by a sender e.g. another component in gateway or an external device device management component may associate with the message a recipient tag corresponding to the sender.

In one embodiment device management component facilitates querying for external devices. For example device management component may subscribe to pub sub engine for tactical node queries. Other components may query for tactical nodes at gateway by publishing a tactical node query to pub sub engine . In response device management component identifies a set of tactical nodes meeting the criteria if any in the tactical node query and publishes for each tactical node in the set a tactical node descriptor including one or more attributes from the device descriptor associated with the tactical node . In addition or in the alternative device management component may receive a tactical node query from an external device identify a set of matching tactical nodes and transmit to the external device a tactical node descriptor for each member of the set. Device management component may include one or more tactical node descriptors in a tactical node availability message.

If a tactical node supports remote configuration device management component may include a remote configuration parameter descriptor in a tactical node descriptor. If device management component receives a configuration parameter for the tactical node e.g. included in a configuration command device management component may enforce a security policy prior to transmitting the configuration parameter to the tactical node . In one embodiment device management component is configured to receive a configuration command for a tactical node including sender credentials e.g. a sender identifier a sender role and or a sender location whether geographical or relative to the network . Device management component determines an access restriction for the configuration command from the device descriptor associated with the tactical node and rejects the received configuration command if the sender credentials do not satisfy the access restriction. An access restriction may include for example a set of permitted sender credentials a whitelist and or a set of prohibited sender credentials a blacklist .

Naming component facilitates managing a collection of global addresses assigned to a gateway assigning a global and or local address to a tactical node and querying for a global and or local address of a tactical node based on a name. Naming component interacts with a naming repository in memory area .

In the exemplary embodiment naming component maintains a collection of global network addresses associated with gateway . For example gateway may be allocated a collection of global IP address e.g. by address resolution server and naming component may store the allocated addresses in the naming repository. Naming component registers a subscription for device registration messages device deregistration messages and address query messages with pub sub engine .

Naming component is programmed to receive a device registration message for a tactical node and in response select an allocated global address from the naming repository and associate the address with the tactical node in the naming repository. For example naming component may associate the address with a name and or a local address of the tactical node from the device registration message. The global address is used as the source address for outgoing messages forwarded from the tactical node to GIG by gateway . The global address is also used as the destination address for incoming messages from GIG directed to the tactical node . After associating the tactical node with a global address naming component optionally publishes an address assignment message to pub sub engine . In one embodiment naming component receives a device registration message for a tactical node including a local identifier and not including a name. Naming component determines a name for the tactical node associates the determined name with the selected address in the naming repository and includes the determined name in an address assignment message published to pub sub engine .

When naming component receives a device deregistration message for a tactical node from pub sub engine naming component identifies a global address associated with the tactical node in the naming repository and disassociates the global address from the tactical node making the global address available for another tactical node . After performing the disassociation naming component optionally publishes an address disassociation message to pub sub engine .

Naming component is further programmed to receive an address query message for a tactical node from pub sub engine and identify a tactical node reference in the address query message. A tactical node reference may include for example a name or an address of a tactical node . Naming component identifies a global address a local address and or a name corresponding to the tactical node reference in the naming repository. For example if the tactical node reference is a name naming component may execute a query in the naming repository for a global and or local address associated with the name. Similarly if the tactical node reference is a global address naming component may execute a query for a local address and or a name associated with the global address. Naming component responds to the query request with the global address local address and or name e.g. by publishing an address query result message to pub sub engine .

In one embodiment naming component determines whether the sender of the address query message is a component or another tactical node communicatively coupled to gateway . If so naming component responds to the address query message with a local address corresponding to the tactical node reference. Returning a local address to a local sender facilitates an elimination of unnecessary routing through GIG thereby also facilitating a reduction of latency in communication and a reduction in bandwidth usage between gateway and GIG .

In some embodiments naming component interacts directly or indirectly with address resolution server . For example naming component may transmit an address assignment message to address resolution server or another component such as device management component may forward an address assignment message published by naming component to address resolution server . A similar delivery method may be used to transmit an address disassociation message to address resolution server .

In one embodiment naming component also receives address query messages for GIG nodes and or remote tactical nodes . Such address query messages originate from another gateway another component in gateway and or a tactical node communicatively coupled to gateway . Naming component may function as a simple proxy to address resolution server or may also maintain a local cache of name address associations. The cache may be populated statically or based on results of address lookups for which naming component functions as a proxy.

Transformation component provides services for data translation cryptography encoding decoding and or other data transformations. Transformation component interacts with a format repository in memory area . The format repository includes a plurality of message format descriptors for various message formats supported by gateway . Exemplary message formats include without limitation Cursor on Target CoT Distributed Interactive Simulation DIS Link 16 J Series Link 16 SimpleJ Joint Range Extension Applications Protocol JREAP Joint Effects Based Command and Control JEBC2 and Common Alerting Protocol CAP . Transformation component may be configured to support a new communication standard by adding a corresponding message format descriptor to the format repository of transformation component . Message format descriptors are structured such that any message type can be translated to any other message type by transformation component .

Transformation component is programmed to register with pub sub engine a subscription for message transformation requests. A message transformation request includes an original message. Transformation component is further programmed to receive a transformation request and determine what type of transformation is required based on the request. For example a transformation request may include a transformation indicator. In addition or alternatively transformation component may determine a required transformation based on the original message a source reference and or a destination reference from the transformation request. In one embodiment transformation component determines a required transformation based on a device descriptor associated with the source and or a device descriptor associated with the destination. For example a device descriptor may include a message format descriptor or a reference to a message format descriptor.

In one embodiment transformation component identifies a source message format descriptor associated with the source of the original message and a destination message format descriptor associated with the destination of the original message. If the source message format descriptor is different from the destination message format descriptor transformation component identifies fields within the original message based on the source message data format descriptor and creates a translated message based on the identified fields and the destination message format descriptor. Transformation component publishes the translated message to pub sub engine .

Because message formats may have different payload capacities translation of one message or packet may result in one or more translated messages or packets. Such segmentation of messages does not adversely affect the operation of gateway however. Transformation component simply publishes as many messages as required to pub sub engine and all published messages are provided to the subscribers independently. The subscribers may process each one of the messages as if they were replications of the original message.

In some embodiments transformation component performs multicast to unicast transformation. For example a message transformation request and or an original message may include a destination reference that refers to a plurality of destinations. A destination reference may individually address each destination address a group of destinations and or addressing a network. Transformation component determines the individual destinations corresponding to the destination reference and for each individual destination publishes a message addressed to the destination to pub sub engine . Transformation component may perform one or more other transformations e.g. translation on the original message prior to publishing messages to individual destinations.

Network topology management component facilitates discovery and communication of available gateways services provided by gateways host attributes of gateways and or link attributes of communication connections between gateways and or GIG . Network topology management component interacts with a topology repository in memory area .

When a gateway becomes operational e.g. when it is powered on it searches for existing local networks using inter gateway communication interface . If gateway identifies a local network gateway joins the network and network topology management component transmits a service availability message to one or more other gateways on the network including a gateway identifier of gateway and a service descriptor for one or more services provided by gateway . Services include for example any processing functions provided by the components illustrated in . In an exemplary embodiment network topology management component broadcasts a service availability message to the network.

Network topology management component is programmed to register with pub sub engine a subscription for service availability messages. A service availability message includes a gateway identifier for a gateway and a service descriptor for each of one or more services provided by the gateway . A service descriptor includes for example a service name. When a service availability message is received e.g. via inter gateway communication interface and device management component the message is published to pub sub engine . Network topology management component is programmed to receive the service availability message and associate the gateway identifier with the service descriptors in the topology repository.

Network topology management component is also programmed to register with pub sub engine a subscription for service query messages. A service query message includes one or more service criteria such as but not limited to a service name and or a gateway identifier. Network topology management component is programmed to receive a service query message and identify within the topology repository one or more service descriptors matching the service criteria. Network topology management component publishes to pub sub engine a service query response message including the identified service descriptor s and associated gateway identifier s . Network topology management component thereby facilitates propagation and discovery of services provided by components e.g. application component executing at various gateways .

Network topology management component further registers with pub sub engine a subscription for gateway attribute messages. A gateway attribute message includes for example a gateway identifier and one or more gateway attributes such as a location e.g. geographic or relative to a network a processing capacity indicator a processing usage indicator a memory capacity indicator and or a memory usage indicator. A gateway identifier is associated with one or more gateway attributes in the topology repository.

Other gateways may transmit gateway attribute messages periodically or upon a significant change to one or more gateway attributes previously communicated in a gateway attribute message though other timings are also contemplated. A significant change may be defined as a percentage change over a predetermined threshold such as 10 25 or 50 . In one embodiment each gateway hosts an instance of network topology management component that monitors the host on which it executes. The instance collects the host gateway s resource data including total processing capacity present loading memory capacity usage and services hosted on or available at the gateway. These attributes are scored by rules that are derived from the gateway environment host platforms and edge devices. This scoring system provides normalized resource measurements that represent the gateway or node s capabilities relative to other computing platforms in the network. The normalized resource measurements are communicated to other gateways through one or more gateway attribute messages.

In addition or in the alternative network topology management component or another component in gateway queries another gateway for services provided by the other gateway and associates a gateway identifier and one or more service descriptors for the other gateway in topology repository. Network topology management component may also associate in the topology repository a gateway identifier for the gateway on which it executes with one or more service descriptors for services provided by the gateway on which it executes.

In one embodiment device management component receives a gateway attribute message via inter gateway communication interface and publishes the message to pub sub engine . Network topology management component receives the gateway attribute message from pub sub engine identifies within the message a gateway identifier and one or more gateway attributes and associates the gateway identifier with the one or more gateway attributes in the topology repository.

Network topology management component also registers with pub sub engine a subscription for gateway attribute query messages. A gateway attribute query message includes one or more gateway attribute criteria such as but not limited to a processing capacity criterion a processing usage criterion a memory capacity criterion a memory usage criterion and or a gateway identifier. When network topology management component receives a gateway attribute query message network topology management component identifies within topology repository one or more gateway identifiers matching the gateway attribute criteria. Network topology management component publishes to pub sub engine a gateway attribute query response message including the identified gateway identifier s and optionally one or more gateway attributes associated with each gateway identifier.

Network topology management component further registers with pub sub engine a subscription for link attribute messages. A link attribute message includes for example two link endpoint identifiers e.g. a gateway identifier and or a GIG identifier and one or more link attributes corresponding to communication between the endpoints such as a bandwidth capacity indicator a bandwidth usage indicator a latency indicator a link uptime indicator a link quality indicator a dropped packet metric and or a relative location e.g. geographic or within a network of the endpoints. Network topology management component associates a pair of endpoint identifiers with one or more link attributes in the topology repository.

Other gateways may transmit link attribute messages periodically or upon a significant change to one or more link attributes previously communicated in a link attribute message though other timings are also contemplated. In addition or in the alternative network topology management component or another component in gateway determines one or more link attributes for communication between the gateway on which it executes one endpoint and another gateway or GIG the other endpoint and associates a pair of identifiers for the endpoints with the determined link attribute s .

In one embodiment device management component receives a link attribute message via inter gateway communication interface and publishes the message to pub sub engine . Network topology management component receives the link attribute message from pub sub engine identifies within the message a pair of endpoint identifiers and one or more link attributes and associates the pair of endpoint identifiers with the one or more gateway attributes in the topology repository.

Network topology management component also registers with pub sub engine a subscription for link attribute query messages. A link attribute query message includes one or more link attribute criteria such as but not limited to an endpoint criterion a bandwidth capacity criterion a bandwidth usage criterion a latency criterion a link uptime criterion a link quality criterion and or a dropped packet criterion. When network topology management component receives a link attribute query message network topology management component identifies within topology repository one or more endpoint identifier pairs matching the link attribute criteria. Network topology management component publishes to pub sub engine a link attribute query response message including the identified endpoint identifier pair s and optionally one or more link attributes associated with each endpoint identifier pair.

Load balancing component facilitates effective and efficient use of bandwidth computing and storage resources among multiple gateways . As illustrated in gateways may be communicatively coupled to each other. Furthermore as described above gateways may share information regarding services gateway attributes and link attributes with each other and this information may be managed by network topology management component .

Components within a gateway may require data retrieval and or processing provided by other components. Generally another component executing on the same gateway may be used to perform such data retrieval and or processing. However due to constraints such as processing memory and or communication limitations local execution may be inefficient or impossible. Accordingly load balancing component facilitates distributing execution storage and communication loads from a local host to a remote host.

Load balancing component registers with pub sub engine a subscription for load balancing request messages. A load balancing request message includes for example a service identifier an operation identifier and or request data such as data on which a service or operation is requested to operate. When load balancing component receives a load balancing request message load balancing component determines an optimal execution target. The optimal execution target may be any gateway including the machine on which load balancing component executes. Load balancing component responds by publishing a load balancing decision message including an identifier of the optimal execution target to pub sub engine . A load balancing request message may be published to pub sub engine by any component in gateway . For example a component requiring translation of a message may publish a load balancing request message including a transformation service indicator a translation operation indicator and or the message to be translated. In addition or alternatively transformation component may publish a load balancing request message

A load balancing decision message published by load balancing component may be received by the component that published the corresponding load balancing request message. In addition or alternatively a load balancing decision message may be received by another component such as device management component which transmits an execution request message to the optimal execution target referenced by the load balancing decision message.

In one embodiment a component providing a service publishes e.g. to pub sub engine a load balancing request message including an identifier of a service and or an operation the component provides. Load balancing component receives the request message and responds by publishing a load balancing decision message e.g. to pub sub engine . The requesting component receives the load balancing decision message and identifies within the decision message an optimal execution target. The requesting component receives an execution request for the service it provides and in response publishes a new execution request e.g. to pub sub engine based on the received execution request and referencing the optimal execution target. Device management component receives the new execution request optionally after one or more other components e.g. transformation component have processed the request and transmits the execution request to the optimal execution target e.g. another gateway .

In an alternative embodiment another component such as DDMP component which is described below determines one or more services required for processing a message. DDMP component submits a load balancing request message for at least one of the determined services. DDMP component receives from load balancing component an optimal execution target for the service s and transmits an execution request to the optimal execution target for each service.

In an exemplary embodiment load balancing component determines an optimal execution target by calculating the cost effectiveness of utilizing a service at a particular location such as a remote gateway . Cost effectiveness is calculated based on the cost of transmitting data to the remote location the cost of storage of that data at the remote location and or the cost of processing the data at the remote location. A cost includes without limitation an estimated duration and or an incremental resource usage indicator. An incremental resource usage indicator expresses the additional processing storage and or communication load incurred by transferring execution to a location. An incremental resource usage indicator may be expressed as a percentage of total capacity or a percentage of available capacity total capacity minus current usage for example.

In one embodiment load balancing component retrieves gateway attributes and or link attributes from network topology management component . Load balancing component publishes to pub sub engine a gateway attribute query message and or a link attribute query message optionally including one or more gateway attribute criteria and or link attribute criteria. For example load balancing component may include criteria limiting the query to gateways and or links proximate to the gateway on which load balancing component executes. In addition or alternatively load balancing component may include criteria specifying one or more capacity indicators and or usage indicators. Network topology management component responds by publishing a gateway attribute query response message.

Load balancing component may react to changing network topology. In some embodiments load balancing component registers with pub sub engine a subscription for gateway availability messages and or service availability messages. When load balancing component receives such a message it repeats the determination of an optimal execution target for an earlier received load balancing request. If the newly determined target differs from the originally determined target load balancing component publishes a new load balancing decision including the new optimal execution target.

In one example transformation component performs traffic filtering. Transformation component publishes a load balancing request message including a traffic filtering service identifier and or a traffic filtering operation identifier. Load balancing component determines via a service query message that is processed by network topology management component that no other gateways providing the traffic filtering service are available. Load balancing component indicates to transformation component e.g. by publishing a load balancing decision message that the gateway on which transformation component executes is the optimal execution target. A second gateway becomes available and is detected by network topology management component . Network topology management component publishes a gateway availability message and or a service availability message indicating that the traffic filtering service is available at the second gateway . Load balancing component receives the availability message s from pub sub engine . Load balancing component publishes to pub sub engine a gateway attribute query message specifying an identifier of the second gateway in the gateway attribute criteria. In addition or in the alternative load balancing component publishes to pub sub engine a link attribute query message specifying the second gateway as an endpoint. In response load balancing component receives from pub sub engine a gateway attribute query response message including gateway attributes for the second gateway and or a link attribute query response message including link attributes for connections associated with the second gateway . Load balancing component calculates the cost effectiveness of using the traffic filtering service at each of the gateways based on the received gateway attributes and or link attributes. If utilizing the service at the second gateway is more cost effective load balancing component publishes to pub sub engine a load balancing decision message indicating that the second gateway is the optimal execution target for traffic filtering service requests.

Persistence component facilitates a reduction in bandwidth usage and a reduction in latency for requests accessing data from or via a gateway . Transferring data between any two nodes in a network such as between a GIG node and a gateway or between gateways necessarily incurs some delay related to transmission and reception of a signal conveying the data. This delay is known as latency . Reducing the quantity of requests a first gateway is required to transmit to other gateways in response to a request received at the first gateway reduces the latency incurred for the received request. Accordingly persistence component further facilitates reactive caching and proactive predictive fetching of remotely hosted data for one or more other components in gateway .

Persistence component is programmed to register with pub sub engine subscriptions for data storage messages data availability messages data retrieval messages and data pre fetch messages. In some embodiments components within gateway store data in a repository and or in memory area by publishing a data storage message including data content and one or more metadata elements. A metadata element may include a unique identifier of the data content a time e.g. a timestamp including a date and time at which the data content was produced and or received an aging constraint indicating when the data content is to be considered invalid inaccurate and or stale a data type e.g. still image video sequence audio sequence sensor reading a data creator e.g. a human operator or automated system a geographic location and or orientation corresponding to the data content and or any information that describes the data content.

In response to receiving a data storage message persistence component stores the data content and associates the data content with the metadata elements in a data repository within memory area . In one embodiment persistence component publishes a data availability message to pub sub engine including one or more of the metadata elements. Device management component subscribes for data availability messages and receives the message from persistence component . Device management component transmits the data availability message including an identifier of the local gateway to one or more other gateways .

When device management component receives a data availability message from another gateway device management component publishes the data availability message to pub sub engine . Persistence component as a result of its subscription for such messages receives the data availability message. Persistence component stores the gateway identifier and the metadata elements from the data availability message in the data repository.

Persistence component is also programmed to receive a data retrieval message from pub sub engine . A data retrieval message includes for example one or more metadata criteria.

In one example an operator at a GIG node requests imagery data for a particular location. Device management component receives the request from the GIG node and publishes a data retrieval message to pub sub engine including metadata criteria specifying a data type of still image and a particular geographic location. Persistence component receives the data retrieval message queries the data repository for data matching the metadata criteria and receives a query response from the data repository.

If persistence component determines based on the query response that data content meeting the criteria are available in the data repository persistence component publishes a data retrieval response message to pub sub engine including the data content corresponding to the criteria. Device management component is configured to subscribe for data retrieval response messages and transmit the data content to the GIG node that submitted the request.

If persistence component instead determines that data content meeting the criteria are not available in the data repository but are available at another gateway persistence component requests the corresponding data content from the other gateway . In one embodiment persistence component publishes to pub sub engine a data retrieval message including an identifier of the other gateway and device management component transmits the data retrieval message to the other gateway . Device management component receives the corresponding data content from the other gateway e.g. as a data retrieval response message and publishes a data retrieval response message with the data content to pub sub engine . Persistence component publishes a data retrieval response to pub sub engine and data management component forwards the data content to the GIG node that submitted the request. In some embodiments persistence component stores the data content from the other gateway in the data repository as described in more detail below.

If persistence component determines based on the query response that the data repository has no record of data meeting the criteria persistence component publishes a data retrieval response message to pub sub engine indicating that the data could not be found and data management component transmits the data retrieval response message to the GIG node . In addition or alternatively persistence component publishes a data retrieval message for one or more other gateways and device management component transmits the data retrieval message s to the other gateway s . If another gateway transmits a data retrieval response message indicating the requested data are available persistence component updates the data repository with metadata corresponding to the requested data and an identifier of the other gateway . Persistence component requests the corresponding data content from the other gateway and publishes a data retrieval response message with the data content. Device management component receives the data retrieval response message and transmits the data content to the GIG node that submitted the request.

In some embodiments persistence component caches data content retrieved from another gateway in the data repository. Locally caching data content facilitates reducing bandwidth usage between gateways and reducing latency in responding to a request for data e.g. from a GIG node . Persistence component also purges cached data from the data repository. For example cached data content may be associated with metadata elements in the data repository and persistence component may delete the cached data based on a time at which the data content were retrieved and or stored a time at which the data content were produced and or a time at which the cached data were last accessed. If persistence component receives a data retrieval message for data content that is in the local cache persistence component responds by providing the data content from the local cache rather than requesting the data from another gateway .

In some embodiments persistence management facilitates proactive caching of data. Proactive caching may be performed in a pre fetch pull configuration and or a pre send push configuration.

In one embodiment persistence component provides a pre fetch configuration interface for defining a pre fetch configuration. For example a user at gateway or at a GIG node may interact with the pre fetch configuration interface. A pre fetch configuration includes for example a request schedule and data criteria and or metadata elements associated with data content. A request schedule defines a target time at which data content corresponding to a pre fetch configuration are to be accessed. For example a request schedule may indicate data content are to be accessed at 8 00 am each weekday.

Persistence component retrieves data content matching the data criteria and or metadata elements of a pre fetch configuration according to the pre fetch schedule. For example if the data are to be accessed at 8 00 am persistence component may retrieve the data at any time between the previous retrieval and 8 00 am. A pre fetch schedule may include a data age constraint e.g. four hours in which case persistence component retrieves the data content based on the target access time and the data age constraint. For example with a target access time of 8 00 am and a data age constraint of four hours persistence component would retrieve the data no earlier than 4 00 am. In some embodiments persistence component retrieves data based on gateway attributes and or link attributes provided by network topology management component and or load balancing component . For example persistence component may identify a period of relatively low bandwidth usage between gateways based on link attributes and pre fetch data during the low bandwidth usage period.

Persistence component stores pre fetched data in the data repository and associates it with corresponding metadata elements. Persistence component may purge pre fetched data from the data repository on a subsequent pre fetch according to the pre fetch configuration. In addition or alternatively persistence component may purge pre fetched data according to an age constraint from the pre fetch schedule.

In another embodiment persistence component determines data to pre fetch. For example persistence component may store a data access record in the data repository for each data retrieval message. A data access record includes a time at which a data retrieval message was received and metadata criteria from the data retrieval message. Persistence component then executes a one time retrieval of data or creates one or more pre fetch configurations based on the data access records. For example persistence component may identify an access pattern indicating that one or more data retrieval messages for a given set of identical or similar metadata criteria are received at approximately the same time each day. In response persistence component creates a pre fetch configuration for a common set of metadata criteria from the identical or similar metadata criteria including a pre fetch schedule with a target access time substantially equal to the time at which the data retrieval messages are received.

In another embodiment persistence component determines data to pre send to another gateway . For example as described above persistence component may store data access records. In response to receiving a data retrieval message for data meeting a first set of metadata criteria persistence component retrieves from the data repository a first data content matching the first set of metadata criteria. Persistence component also determines an access pattern based on the first set of metadata criteria. An access pattern indicates whether a request including one set of metadata criteria is likely to be received in temporal proximity to e.g. within one minute of a request including another set of metadata criteria. An occurrence may be considered likely if a historical occurrence rate calculated from data access records exceeds a predetermined threshold e.g. 50 or 80 . For example the two sets of metadata criteria may be substantially similar differing by relatively small values and or a relatively small number of criteria such as geographic location data type and or a time at which the data content was produced. Persistence component determines a second set of metadata criteria based on the access pattern and retrieves from the data repository a second data content matching the second set of metadata criteria. Two sets of data content that are likely to be accessed in temporal proximity may be considered correlated to each other.

Persistence component publishes to pub sub engine a data retrieval response message including the first data content. In one embodiment persistence component also includes the second data content in the data retrieval response message. In an alternative embodiment persistence component publishes to pub sub engine a data pre fetch message addressed to the other gateway including the second data content. Device management component is programmed to subscribe for data pre fetch messages and transmit the data pre fetch message to the other gateway . Persistence component at the other gateway receives the data pre fetch message e.g. via device management component and pub sub engine and stores the data content from the data pre fetch message in its data repository.

Quality of service QoS component facilitates preventing traffic passing between GIG node and gateway or gateway and gateway from interfering with communication between tactical nodes connected to a gateway . Effective operation of mission critical applications is thereby enabled. In some embodiments QoS component interacts with a QoS policy repository in memory area .

QoS component registers with pub sub engine a subscription for QoS processing request messages. A QoS processing request message includes for example a source indicator a destination indicator message content QoS markings and or a priority indicator. When QoS component receives a QoS processing message QoS component determines appropriate QoS treatment for the message content and publishes a QoS processing response message to pub sub engine .

QoS component may determine an appropriate QoS treatment for message content based on the communication interfaces communication protocols and or message formats associated with the devices corresponding to the source indicator and the destination indicator. In some embodiments gateway communicates with at least some remote devices using IPv4 and or IPv6 protocols which enable end to end QoS in the form of Differentiated Services DiffServ such as defined by Internet Engineering Task Force IETF Request for Comments RFC 2474 with Explicit Congestion Notification ECN such as defined by IETF RFC 3168. In such embodiments if the source and destination both support IP communication QoS component may simply copy QoS markings from the incoming message to the outgoing message or QoS component may modify the QoS marking based on a QoS policy in the QoS policy repository.

QoS may be implemented by defining a QoS policy for gateway defining a QoS policy for a GIG node or tactical node defining a QoS policy for a communication standard or communication interface and or detecting a QoS policy based on the data received from the remote node. QoS markings corresponding to the defined or detected QoS policy may be added to data sent to a tactical node .

Based on QoS policies in the QoS repository QoS component may forward IP traffic using a tactical communication format e.g. Link 16 with IP packet markings reflected in a prioritization scheme corresponding to the tactical communication format. The same can be done when forwarding from a non IP tactical communication format to an IP network. Gateway may schedule packets using QoS component but for IP packets additional scheduling may be performed using a kernel mode network traffic controller. The kernel mode network traffic controller scheduling may be handled by the operating system of gateway or in dedicated hardware of gateway .

QoS management for non IP waveforms may be handled as an overlay network service using QoS component . For example QoS component may discard drop packets when a Link 16 traffic rate exceeds limits imposed by a policy of gateway . However this capability is independent of any packet dropping performed at the kernel mode traffic controller which is applicable to IP traffic. Gateway may also provide queue and congestion management at QoS component for Link 16 traffic independent of any queue and congestion management performed at the kernel mode traffic controller for IP traffic. In addition gateway may limit the transmission rate of packets at QoS component for non IP waveforms such as Link 16 while the transmission rate control for IP traffic may be performed at the kernel mode traffic controller. Mapping of QoS mechanisms are specific to the traffic being forwarded from an IP network to a non IP e.g. Link 16 network and vice versa. This mapping may be based on policies configured at gateway .

For higher data bandwidth IP based communication gateway may use a kernel mode network traffic controller. In an exemplary embodiment QoS component provides two main services 1 A QoS application programming interface API through which QoS aware applications may request certain levels of QoS for network connections and 2 A mechanism for the underlying DiffServ implementation to adjust the service rates of its classes based on the available bandwidth as reported by the network device. QoS component is implemented as a user level daemon that listens on a local socket for requests from the QoS API and also listens on a network socket for reported changes to the available bandwidth of the network interfaces. QoS component attempts to map a QoS request to a DiffServ class that will be able to provide the requested level of QoS. If successful QoS component creates a classifier to map the packets of that network connection to the appropriate DiffServ class. It also creates a policer for that classifier that will police that flow to the requested rate.

Some networks are physically secured e.g. by passing network cables through pressurized conduit and are referred to as red networks. Data may be safely transmitted within a red network in unencrypted or plain text form. Other networks known as black networks provide no guarantee of physical security and thus require that data be transmitted in encrypted or cipher text form. Generally data passing between red network and a black network is encrypted through HAIPE. QoS information however may be allowed to bypass HAIPE in the red to black direction the black to red direction or both. The combination of these two end to end QoS network services may be used by a red side SOA based gateway QoS network service to provide end to end QoS provisioning support to IP waveforms. However QoS provisioning for non IP waveforms may require the use of available native mechanisms or the deployment of an overlay QoS provisioning mechanism for the particular non IP waveform.

QoS component manages the DiffServ implementations on multiple IP communication interfaces . QoS component may also support flow control for Link 16. For example QoS component may use a simple token bucket algorithm to control the amount of data that is introduced into a Link 16 network. In addition gateway QoS component may perform traffic prioritization policing and shaping for traffic being forwarded to a non IP edge network waveform to ensure that offered traffic load does not exceed the bandwidth capacity.

In one embodiment QoS component assigns QoS markings to outgoing messages based on for example the QoS markings of incoming messages local policies and or the outgoing communication interface and its current traffic load. Whether or not messages are translated between two different technologies e.g. IP and a tactical communication format such as Link 16 QoS component maps QoS markings based on policies defined at gateway . These policies may include a direct copy of the existing QoS markings when forwarding from an IP network to another IP network may include changes to the QoS markings even in an IP to IP case and may include details on how to extend IP QoS markings to a Link 16 network. The same may hold true for any future technology supported by gateway . For the IP to Link 16 and Link 16 to IP cases IP QoS code points may be mapped to Link 16 Network Participation Groups NPGs and vice versa based on pre defined policies.

DDMP component facilitates sequential and or parallel processing of incoming messages at gateway . In an exemplary embodiment device management component receives a transmission from a remote device and publishes an incoming message to pub sub engine . An incoming message includes for example a source indicator a destination indicator one or more message headers message metadata QoS markings a message format and or message content. Before any other processing such as described above takes place DDMP component determines based on the incoming message a sequence of processing operations that are required for the message content. Necessary processing operations may include for example transformation e.g. translation decryption and encryption persistent storage and or load balancing.

DDMP component executes the operations in the order defined by the sequence. In one embodiment DDMP component defines two or more operations as executable in parallel. For example DDMP component may determine that message content for a given incoming message must be decrypted stored encrypted and forwarded to another device. DDMP component may define a sequence of operations that includes decryption then following decryption persistence and encryption and then following encryption transmission to the other device. The persistence and encryption operations may be performed in parallel to minimize processing time.

In an exemplary embodiment to execute the necessary operations DDMP component publishes requests to other components within gateway . For example to decrypt message content DDMP component may publish a transformation request to pub sub engine which will be received by transformation component .

In one embodiment after it processes a message each functional component and or within gateway indicates e.g. to pub sub engine or to a submitter of a message that its processing is complete by publishing a response message. DDMP component registers with pub sub engine a subscription for the various response messages described above. When all subscribing components have indicated such completion DDMP component creates and publishes to pub sub engine an outgoing message to which device management component subscribes. Device management component transmits the outgoing message using an appropriate communication interface or an upper layer socket if this message is directed to gateway itself and or any other physical virtual or emulated interface.

In an alternative embodiment DDMP component associates an execution path with a message. The execution path includes a sequence of one or more operations required for processing the message. When a component or completes an operation the component submits the message to pub sub engine or directly to the component associated with the subsequent operation in the execution path. The component associated with the subsequent operation receives the message performs a corresponding operation on the message and submits the message to the next component. When all operations defined by the execution path have been the performed the message is transmitted via device management component for example.

In some embodiments DDMP component includes new header information when creating an outgoing message. The header includes the appropriate source and destination addresses and any other information required by the outgoing communication interface such as QoS markings. The outgoing message is again published at pub sub engine and provided via a subscription to device management component for transmission. After translation the incoming message may be segmented into multiple messages in which case DDMP component simply generates multiple outgoing messages and publishes the messages to pub sub engine as before. The messages are received by the device management component which transmits the messages one at a time.

In some embodiments multiple gateways in a single locale and or distributed among multiple locales are communicatively couplable to each other. By connecting to each other the gateways form an inter gateway backbone network IGBN . As a gateway joins the IGBN network it broadcasts a request for IGBN information. IGBN information includes for example a primary gateway identifier a backup shadow gateway identifier a collection of identifiers for gateways available within the IGBN and or a set of service descriptors for each gateway within the IGBN. If no other gateways respond the gateway acts as a primary gateway. Gateway responds to subsequent requests for IGBN information by transmitting a IGBN information response including a primary gateway identifier referencing itself. In addition the second gateway to join the IGBN may be designated by the primary gateway as a shadow gateway for the IGBN. As other gateways join the IGBN network topology management component of the primary gateway initiates a request for gateway attributes from the new members of the IGBN. The primary gateway initiates transmissions of gateway attribute data for other network members to the shadow gateway and or other gateways within the IGBN.

In an exemplary embodiment the gateways within an IGBN elect a primary gateway and or a shadow gateway. For example each gateway may determine a desired primary gateway based on gateway attributes and or link attributes and transmit e.g. by broadcasting a primary gateway election message to the IGBN including an identifier of the desired primary gateway. The gateway designated by the largest quantity of primary gateway election messages may begin acting as the primary gateway. In addition the gateway designated by the second largest quantity of primary gateway election messages may begin acting as the shadow gateway. The election process may be initiated periodically e.g. hourly or upon a new gateway joining the IGBN though other timings are contemplated.

In one embodiment each gateway within the IGBN is programmed to respond to an IGBN information request by transmitting to the sender an IGBN summary message which includes a primary gateway identifier and a shadow gateway identifier. A newly connected gateway receives the IGBN summary message and transmits an IGBN detail request to the primary gateway based on the primary gateway identifier. The primary gateway is programmed to respond with an IGBN detail message including a collection of identifiers for gateways available within the IGBN and or a set of service descriptors for each gateway within the IGBN. If the newly connected gateway does not receive a response from the primary gateway the newly connected gateway transmits an IGBN detail request to the shadow gateway based on the shadow gateway identifier. The shadow gateway is also programmed to respond with an IGBN detail message including a collection of identifiers for gateways available within the IGBN and or a set of service descriptors for each gateway within the IGBN.

A component such as one of the functional components described herein may record information to and or read information from a repository. Such a repository may take the form of in memory objects a text file a data file e.g. containing serialized objects or a database such as a relational hierarchical or object oriented database. A repository may reside on a single physical device such as a data storage device or a memory area or be distributed among multiple physical devices.

Because gateway employs a middleware data dissemination mechanism e.g. a publish subscribe message propagation framework other components such as application component may be included in gateway to provide additional features. For example application component may provide device interfaces platform interfaces voice services such as voice to text conversion and or voice over IP VOIP video transmission video conferencing applications application services network backbone infrastructure services security services and or management services such as gateway management tactical node management and or network management though other services are also contemplated.

Components may be installed or updated on the gateway by a user at the gateway or remotely. For example a new or updated component may be distributed through a global network such as GIG by a remote node such as a GIG node . A component may also be distributed to a gateway by a tactical node . For example a tactical node which is designed to communicate using a new communication standard may use an existing supported communication standard to install on the gateway a component supporting the new standard.

In some embodiments data is received from a remote node such as a GIG node using a first communication standard and transmitted to a tactical node using a second communication standard. For example the first communication standard may be IP version 4 IPv4 IP version 6 IPv6 or any standard suitable for communicating with devices such as the remote node. The second communication standard may be a version of IP different from the first communication standard Link 11 Link 16 Link 22 Single Channel Ground Air Radio System SINCGARS Enhanced Position Locating Reporting System EPLRS Near Term Digital Radio NTDR Have Quick HQ Land Mobile Radio LMR Multifunction Advanced Data Link MADL Situation Awareness Data Link SADL or any standard including IP and non IP waveforms suitable for communicating with the tactical node .

In some embodiments a request for the tactical node data is received from the second gateway and the first tactical node data is transmitted from the memory area to the second gateway. Furthermore in some embodiments access pattern is created based on a plurality of requests for the first tactical node data and a plurality of requests for the second tactical node data. For example an access pattern may be created by comparing a time of receipt and metadata criteria from each of the plurality of requests for the first tactical node data with a time of receipt and metadata criteria from each of the plurality of requests for the second tactical node data. If the access pattern indicates the second tactical node data is correlated with e.g. likely to be requested with the first tactical node data the second tactical node data is transmitted to the second gateway based on the received request without receiving a request for the second tactical node data from the second gateway.

A gateway such as described herein may act an intermediary or proxy between a local network of tactical nodes and a global network such as GIG . Such a gateway may therefore enhance security of both the local network and the global network. For example the gateway may allow into the local network only data directed to a tactical node communicatively attached to the gateway. Conversely the gateway may block some or all traffic originating in the local network. For data transmitted in either direction the gateway may maintain and apply a collection of nodes from which data should be refused a blacklist and or a collection of nodes from which data should be accepted a whitelist . Other security rules are contemplated as well.

A group of gateways may be deployed to a locale. Deploying a group of gateways increases the capacity for tactical nodes. The gateways may also be programmed to achieve load balancing and redundancy as described above. For example each gateway in a group may communicate messages records and or repositories to the other gateways in the group. If a first gateway in a tactical network fails a second gateway in the tactical network may establish communicative attachment to a tactical node that was attached to the gateway that failed. Because the second gateway received information about the tactical node and or any communication sessions related to the tactical node before the first gateway failed the second gateway can resume those communication sessions with little or no interruption in service.

In some embodiments a gateway is embedded or installed in a mobile unit such as a wheeled vehicle or an aircraft. A group of such gateways may collectively form a mobile ad hoc network MANET a k a mobile mesh network .

The subject matter of the present disclosure is described with specificity herein to meet statutory requirements. However the description itself is not intended to limit the scope of this patent. Rather it has been contemplated that the claimed subject matter might also be embodied in other ways to include different steps or combinations of steps similar to the ones described in this document in conjunction with other present or future technologies. Moreover although the terms step block and or operation may be used herein to connote different elements of methods employed the terms should not be interpreted as implying any particular order among or between various steps herein disclosed unless and except when the order of individual steps is explicitly described.

Processes methods and or functional components described herein may be implemented in whole or in part as computer executable instructions embodied in a computer readable medium. When executed by a processor the instructions cause the processor to perform the operations described herein. A computer readable medium includes but is not limited to a hard disk an optical disk a magneto optical disk a solid state memory device and or any device operable by a computing device to store data and subsequently retrieve the data.

This written description uses examples to disclose the described embodiments including the best mode and also to enable any person skilled in the art to practice the described embodiments including making and using any devices or systems and performing any incorporated methods. The patentable scope is defined by the claims and may include other examples that occur to those skilled in the art. Such other examples are intended to be within the scope of the claims if they have structural elements that do not differ from the literal language of the claims or if they include equivalent structural elements with insubstantial differences from the literal languages of the claims.

