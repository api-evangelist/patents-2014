---

title: Methods and policies to support a quality-of-storage network
abstract: A method for managing data in a Quality-of-Storage (QoSt) network comprising a plurality of nodes includes receiving current QoSt network topology information. A plurality of data streams is received at a data storage interface of the QoSt network. Differentiated treatment is performed upon received data streams in the data storage interface. Such differentiated treatment is contingent upon at least different types of data in the received data streams based on a plurality of QoSt attributes. A plurality of data management operations is performed on the data obtained by the plurality of data streams based on the data storage interface and based on received current QoSt network topology information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479413&OS=09479413&RS=09479413
owner: Netscout Systems Texas, LLC
number: 09479413
owner_city: Westford
owner_country: US
publication_date: 20140428
---
Embodiments of the present invention relate to network storage and particularly to methods and policies to support a Quality of Storage QoSt based network.

Reliable and efficient storage of data and in particular data used by enterprises is becoming increasingly important. Various data duplication backup and or data mirroring techniques are used by enterprise data storage systems. Typically the data is distributed over several data servers so that a crash of one server or loss of the connection to that server does not affect the data integrity.

Various approaches exist that enable resources such as data centers and Internet Protocol IP based networks to scale as the needs of the various users and applications increase. In some cases this requires the purchase of large expensive hardware that typically provides more capacity than is immediately necessary. For a large number of resources to be used this can provide a significant expenditure and overhead which can be undesirable in many instances and likely requires manual calibration tuning based on hardcoded QoSt concepts.

It is desired to have the level or redundancy the level of reliability and the level of data availability as a single service so a user can have choices and can select certain guarantees of data availability and of quality of data storage.

The purpose and advantages of the illustrated embodiments will be set forth in and apparent from the description that follows. Additional advantages of the illustrated embodiments will be realized and attained by the devices systems and methods particularly pointed out in the written description and claims hereof as well as from the appended drawings.

In accordance with a purpose of the illustrated embodiments in one aspect a method for managing data in a QoSt network is provided. Current QoSt network topology information is received. A plurality of data streams is received at a data storage interface of the QoSt network. Differentiated treatment is performed upon received data streams in the data storage interface. Such differentiated treatment is contingent upon at least different types of data in the received data streams based on a plurality of QoSt attributes. A plurality of data management operations is performed on the data obtained by the plurality of data streams based on the data storage interface and based on received current QoSt network topology information.

In another aspect a computer program product for managing data in a QoSt network is provided. The computer program product comprises one or more computer readable storage devices and a plurality of program instructions stored on at least one of the one or more computer readable storage devices. The plurality of program instructions includes program instructions to receive current QoSt network topology information. The plurality of program instructions further includes program instructions to receive a plurality of data streams at a data storage interface of the QoSt network. The plurality of program instructions further includes program instructions to perform differentiated treatment upon received data streams in the data storage interface contingent upon at least different types of data in the received data streams based on one or more QoSt attributes. The plurality of program instructions further includes program instructions to perform a plurality of data management operations on the data obtained by the plurality of data streams based on the data storage interface and based on the current QoSt network topology information.

The present invention is now described more fully with reference to the accompanying drawings in which illustrated embodiments of the present invention are shown wherein like reference numerals identify like elements. The present invention is not limited in any way to the illustrated embodiments as the illustrated embodiments described below are merely exemplary of the invention which can be embodied in various forms as appreciated by one skilled in the art. Therefore it is to be understood that any structural and functional details disclosed herein are not to be interpreted as limiting but merely as a basis for the claims and as a representative for teaching one skilled in the art to variously employ the present invention. Furthermore the terms and phrases used herein are not intended to be limiting but rather to provide an understandable description of the invention.

Unless defined otherwise all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this invention belongs. Although any methods and materials similar or equivalent to those described herein can also be used in the practice or testing of the present invention exemplary methods and materials are now described. All publications mentioned herein are incorporated herein by reference to disclose and describe the methods and or materials in connection with which the publications are cited. The publications discussed herein are provided solely for their disclosure prior to the filing date of the present application. Nothing herein is to be construed as an admission that the present invention is not entitled to antedate such publication by virtue of prior invention. Further the dates of publication provided may differ from the actual publication dates which may need to be independently confirmed.

It must be noted that as used herein and in the appended claims the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example reference to a stimulus includes a plurality of such stimuli and reference to the signal includes reference to one or more signals and equivalents thereof known to those skilled in the art and so forth.

It is to be appreciated the embodiments of this invention as discussed below are preferably a software algorithm program or code residing on computer useable medium having control logic for enabling execution on a machine having a computer processor. The machine typically includes memory storage configured to provide output from execution of the computer algorithm or program.

As used herein the term software is meant to be synonymous with any code or program that can be in a processor of a host computer regardless of whether the implementation is in hardware firmware or as a software computer product available on a disc a memory storage device or for download from a remote machine. The embodiments described herein include such software to implement the equations relationships and algorithms described below. One skilled in the art will appreciate further features and advantages of the invention based on the below described embodiments. Accordingly the invention is not to be limited by what has been particularly shown and described except as indicated by the appended claims.

In exemplary embodiments a computer system component may constitute a module that is configured and operates to perform certain operations as described herein below. Accordingly the term module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner and to perform certain operations described herein.

Described embodiments of the present invention concern a comprehensive QoSt data management platform that includes a variety of mission critical applications large number of application servers running different operating systems storage units with differing capabilities and many network elements that interconnect application servers with storage units. QoSt storage management deals with many storage aspects such as for example but not limited to storage network topology performance recoverability capacity planning and security and handles transient as well as persistent aspects e.g. I O requests transient and data persistent . The described embodiments of the present invention allow the integration of business objectives specifying resource usage availability recoverability priorities system model specifying what changes should be noticed and how metrics specifying what and how to measure in the storage network and when to raise alarms and service contract specifying the monitorable interactions with other components e.g. applications of the described storage infrastructure.

Generally there is a number of quality related parameters p p. . . pthat can characterize the storage traffic. These parameters include but not limited to throughput retention time priority i.e. relative importance robustness i.e. redundancy or replication requirements and retrieval speed. It is noted that the ranges p p of quality related parameters may vary unpredictably over time and may be extremely large at least in some cases. For example stream bandwidth can very unpredictably from very low to very large. As another non limiting example the retention period for some stream items may vary from very short to very long. Thus the overall set of parameter values that QoSt system should support can be represented by a hypercube p p p p . . . p p . In order to fully support this set of parameter values the QoSt data management platform should include the entire hypercube. In other words this type of infrastructure would require having enough hardware resources to ensure contemporaneously enormous capacity enormous speed multiple levels of replication and the like. In most cases the cost of such hardware infrastructure quickly becomes prohibitive by orders of magnitude.

The storage systems known in the art do not address the data QoSt aspect or they address it with insufficient granularity. Additionally such systems typically handle QoSt attributes within a limited range of values which may be too low to support massive scaling capability. For example if the storage system is engineered to contain only a fixed fraction of the above referenced hypercube typically quite small then it will be substantially inflexible upon reaching its engineered limitations. Such a system would then abruptly drop truncate or degrade at least a fraction of the storage traffic merely based on a single parameter value being out of bounds even though various compromises between the value of this particular parameter the values of the remaining parameters and the amount of available resources may have been reached.

Other drawbacks of known storage systems include associating differentiated treatment of data to fixed hardware or software configuration thus making it difficult to adapt to ever changing traffic patterns and lack of built in policies and mechanisms to fully enable differentiated treatment of data. In many known storage systems various QoSt related aspects of the data are visible to various mission critical applications thus requiring such applications to make storage related decisions based on the known QoSt related aspects of data. This type of decision making process further requires the applications to be aware of the storage network topology as well as many other deployment specific and configuration specific details in order to achieve specified availability retention and recovery goals under various disaster scenarios. In some cases the applications may be unable to make suitable storage decisions if the storage behavior can only be controlled by a specific set of common attributes. In other cases if the storage management is based solely on decisions that are made by the individual applications then there is a possibility that inefficient or inappropriate storage decisions may be taken as each of the applications does not have any information regarding the end to end QoSt for the data flow or other application data flows over a large storage network. In other cases when an individual application makes valid storage decisions its decision methods may become invalid over time when the traffic patterns change.

Various embodiments are disclosed herein to address the above mentioned shortcomings in supporting a highly flexible and highly scalable storage system. A QoSt enabled network avoids the shortcomings of the known storage solutions by taking into the account all the available resources and all the storage traffic parameters combined at any time. Upon reaching resource limitation QoSt storage management framework then applies a number of user configured policies to determine the best compromise that can be made on the totality of traffic to be stored. This effectively amounts to giving the application users the best possible value in accordance to the defined policies. Flexibility is also achieved by allowing the policies themselves to vary in time or according to additional meta rules.

A preferred embodiment of the present invention introduces a new type of interface which has a built in functionality enabling an application to specify different treatment for different types of stored data. In one aspect an interface definition preferably provides a comprehensive set of QoSt attributes described below which may have very granular ranges. Advantageously the disclosed data management platform employs an elaborate QoSt supporting framework which is based primarily on processing rules that are consistent with the full set of data attributes defined by the interface. In another aspect a high flexibility and robustness of data storage system is provided to users through highly flexible operations administration and management OAM module that functions in an efficient way that is transparent to an application using the disclosed storage network. Various embodiments of the present invention introduce a new approach aimed at shifting substantially all QoSt responsibilities from the application to the storage network framework which is enabled to provide optimal and consistent QoSt support. Advantageously the QoSt based network supports an adaptive segment of the hypercube. Adaptation is relative to the storage traffic characteristics at any given moment in time.

Turning to is intended to provide a brief general description of an illustrative and or suitable exemplary network computing environment in which embodiments of the below described present invention may be implemented. A particular embodiment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in an exemplary operating environment. For example in certain instances one or more elements of an environment may be deemed not necessary and omitted. In other instances one or more other elements may be deemed necessary and added.

As illustrated in a plurality of application servers may transmit data to the storage network which in turn distributes it over storage resources referred to herein as data repository units referred to herein individually as data repository unit and collectively as data repository units or as data repository units . Storage nodes referred to herein individually as storage node and collectively as storage nodes or as storage nodes include various QoSt based storage management related modules e.g. storage manager modules referred to herein individually as storage manager and collectively as storage manager modules or as storage managers stream controller modules referred to herein individually as stream controller and collectively as stream controller modules or as stream controllers and stream processor modules referred to herein individually as stream processor and collectively as stream processor modules or as stream processors configured to route data created by application server applications such as database applications or any other data processing application known in the art to data repository units based on the QoSt characteristics of the received data. shows that in one exemplary embodiment a first plurality of data repository units such as may be directly attached to one storage node while a second plurality of data repository units such as may be directly attached to another storage node . The application servers may comprise any computational device known in the art e.g. a workstation personal computer mainframe server laptop hand held computer tablet telephony device network appliance etc. .

The data repository units may comprise any storage device storage system or storage subsystem known in the art that directly connects to the storage network or is attached to one or more storage nodes such as the data repository units directly attached to storage nodes . The data repository units may comprise a Just a Bunch of Disks JBOD Redundant Array of Independent Disk RAID Network Attached Storage NAS a virtualization device tape library optical disk library etc.

The storage network may comprise any high speed low latency network system known in the art such as a Local Area Network LAN Storage Area Network SAN Intranet Wide Area Network WAN the Internet etc. LANs typically connect the nodes over dedicated private communications links located in the same general physical location such as a building or campus. WANs on the other hand typically connect geographically dispersed nodes over long distance communications links such as common carrier telephone lines optical lightpaths synchronous optical networks SONET synchronous digital hierarchy SDH links or Powerline Communications PLC and others.

The storage nodes may comprise any device capable of managing application access to a storage resource such as any server class machine a storage controller enterprise server and the like. It is noted that depict a simplified two tiered model of the QoSt based storage network . In various embodiments the storage nodes may comprise a hierarchy of sub nodes. The various functions supported by these sub nodes may be distributed among several storage nodes . Furthermore at least some of the storage nodes may not support all the functions. According to embodiments of the present invention the data repository units are viewed by the storage network as the lowest level entities in this hierarchy. One of the challenges by the QoSt based storage network s framework is that data repository units have highly uneven parameters capacities throughputs etc. that need to be managed.

According to one embodiment of the present invention connectivity to the storage network may be defined in terms of generic pipes of raw data. Data piping between distributed applications and storage network e.g. a writer application on the application server and a storage management application i.e. storage manager on the storage node includes the writer application writing data to a pipe i.e. pipe and the storage management application reading data from the pipe . The pipe is a conduit of one or more streams of data. It is noted that each pipe can carry data items from any number of streams and from any number of initiators i.e. applications . For example any application running on the application server can connect to the storage network through pipe at any point without requiring any configuration. In other words an application does not need to know which pipe is connected to which of the plurality of storage nodes etc.

In addition according to an embodiment of the present invention the storage network considers and evaluates all data as global. In other words any data from any pipe may be available for any application running on any application server under any filtering aggregation conditions. As described below the storage network has built in capabilities to segment the received data and to distribute it to various storage resources i.e. data repository units according to various factors such as but not limited to the storage network topology instant capacity and throughput of data repository units and the like. Advantageously the storage network is enabled to adapt dynamically to the current data traffic conditions thus substantially preventing applications from observing any data storage restrictions.

In order to provide the above described capabilities of the QoSt based storage network each storage node within the storage network may utilize a number of software components modules . In one embodiment of the present invention each storage node may include a storage manager a stream processor and a stream controller . The storage manager may generally be a software module or application that coordinates and controls storage operations performed by the storage node . The storage manager may communicate with all elements of the storage node regarding storage operations. The storage manager receives data via one or more data pipes and sends it to a corresponding stream processor . The stream processor may generally be a software module or application that monitors streams usage in real time and performs a plurality of data management operations using a differentiated treatment of received data based on a plurality of QoSt attributes. The stream controller may generally be a software module or application that monitors and predicts resource utilization. In addition the stream controller may be configured to perform corrective actions in response to predicting and or detecting any degradation of service.

As shown in at least in some embodiments one or more OAM modules may be connected to the storage network for example via a dedicated pipe . OAM module may include a user interface and may be used to configure and or control the above described components of storage nodes distribute software or firmware upgrades etc. User interface not shown in of the OAM module may be configured to present current state of QoSt network and to provide degradation of service notifications and other relevant information to the end users. In one embodiment the OAM module may include two different components storage OAM component which interfaces directly with the storage network via pipe and application OAM component which interfaces directly with application servers via pipes and . It should be noted that the application OAM component need not be aware of storage network s configuration in order to make use of QoSt capabilities.

According to an embodiment of the present invention storage nodes illustrated in can be flexibly distributed on various hardware platforms and then directly interconnected as needed. Storage nodes can also be grouped into node groups which are collocated depending on the total capacity performance requirements requested by various applications. Furthermore all software components may be entirely implemented on each storage node or the software components may be implemented in a distributed computing environment on multiple types of storage nodes running the same or different operating systems and that communicate and interact with each other over the storage network . If a function provided by a specific software module is not available on a given storage node then data traffic can be transparently re routed to storage nodes having that capability.

Resources of storage network may generally be susceptible to being adapted to serve a given demand or need for example by providing additional processing or storage resources. However because the demand placed on the storage network can vary with time it is necessary to manage the resources that are available. If the available resources are insufficient for a given demand performance of the storage network may be compromised. Conversely if the available storage network resources greatly exceed the demand the resources may be wasted resulting in unnecessary costs or lost opportunity in which the resources could have been applied to other needs. Burst activity in which the demand placed on resources may increase very rapidly for example increasing many multiples or orders of magnitude over the course of minutes or a few hours can create many challenges to storage network management. In order to meet the changing needs in the storage network illustrated in various scaling strategies may be implemented. The scaling strategy may include vertical scaling and horizontal scaling. Advantageously by allowing storage nodes with the same logical function level in the hierarchy to collaborate in order to perform a global distributed service the horizontal scaling can be achieved fairly easily.

As shown in the storage node may be configured to provide data storage and retrieval service to one or more applications configured for execution on one or more application servers . Each application may include an API Application Programming Interface which may support communication between applications and storage nodes such as storage node . API may support requests typically write and read requests from applications running on the application servers . From an application point of view reading or writing information from to the storage network may be transparent. For example since according to various embodiments of the present invention applications read or write information from to data pipes preferably these applications are not particularly concerned with a type of storage system connected to the other end of the pipe. In fact from their point of view the storage system does not necessarily comprise a distributed data storage network but may include any other type of storage solution for instance a file server or a hard drive.

In order to achieve the above mentioned objectives such as satisfying performance requirements achieving transparency and dynamic adaptation of changing demand of storage resources according to an embodiment of the present invention the QoSt based storage network may utilize a storage policy concept. Storage policies may be used to control the manner in which a particular task application accesses or consumes storage resources as data repository units or to prioritize that task application relative to others. As used herein storage policies concern an application s requirements on the data that it generates or uses and based at least on such policies various software components of storage nodes make a decision related to a choice of data repository units on which the application provided data should reside. For instance an application may have specific requirements for the speed and format of data access or for recoverability of the data in the event of an outage. The speed of access may be a consequence of needing to achieve a certain transaction rate and may potentially vary during application execution. Hence different applications may require different access rates when accessing the same data or may require different types of I O e.g. read vs. write sequential vs. random . Thus one of the objectives of the QoSt based storage network is to achieve differentiated treatment of data.

To implement the differentiated treatment of data each of the storage policies may comprise a plurality of orthogonal QoSt attributes. According to an embodiment of the present invention the QoSt attributes may include but not limited to data priority value data retention time value data robustness value I O performance requirement values client priority value storage category value data security class and the like. However more generally QoSt attributes could be a defined set of attributes that consider other properties of various data contents types and or other properties that may be relevant to various applications . According to an embodiment of the present invention this set of QoSt attributes may be dynamically configurable by an end user for example via the OAM node and having substantially immediate effect on the storage network and storage policies 

The client priority represents a relative importance of the client application that issues a data storage retrieval request to the QoSt based storage network with respect to a set of all applications that are currently communicating with the QoSt based storage network . Additionally the different types of data may be prioritized. For example a data priority value may be assigned for each type of data indicative of the priority for that type of data. The priorities may be predetermined. Those skilled in the art will understand that any range of priority values may be used in accordance with embodiments of the present invention but for illustrative purposes as used herein priorities range from 7 lowest to 0 highest .

According to an embodiment of the present invention retention management capabilities may be controlled within the disclosed storage network wherein applications have the ability to set a given dataset e.g. a data stream for retention for a particular retention period by assigning corresponding retention date s in a data retention time attribute of the given data stream. In one embodiment the data retention time value may represent the minimum and maximum amount of time that the user requires the particular data stream to be retained in storage. As used herein the data robustness value indicates the amount of redundancy robustness required for a particular data stream such as but not limited to storing data in volumes of different RAID types a number of replications required geographic redundancy etc. The I O performance requirement values associated with a particular data stream represent the relative speed at which this particular data stream needs to be accessible to the requesting application. Accordingly storage manager component shown in may assign I O performance sensitive data types to higher bandwidth and lower latency paths within the storage network such that the I O performance related QoSt requirements for the data type are satisfied.

According to an embodiment of the present invention the storage category value represents the type of physical storage requested for the data. This attribute controls which data repository unit will be selected from a heterogeneous pool of physical storage devices . As discussed above different types of physical storage devices may include but are not limited to flash memory solid state drives SSDs hard disk drives HDDs etc. In addition this attribute may indicate whether the data stream should be stored in directly attached or remotely located storage devices. According to an embodiment of the present invention the data security class attribute may be used to control security mechanism within the QoSt storage network . The data security class indicates the required security level for a given data stream. This attribute may affect for example the level of provided data encryption and or the selected type location of the physical storage for the given data stream.

Referring back to it should be understood that many applications may be able to define how critical each data type is for them thus making the conventional storage contract more flexible on a case by case basis. In other words the QoSt attributes described above represent a novel refinement of the conventional fixed SLA. As previously indicated one or more relevant QoSt attribute values may be contained within the storage policies that may be provided to storage interface of storage nodes by each application being served by the storage network . According to an embodiment of the present invention in addition to storage policies the disclosed storage interface may employ a variety of internal policies including but not limited to traffic management policy congestion control policy OAM policy and the like. These policies may be controlled by various storage interface components such as traffic policy manager congestion policy manger OAM policy manager and the like. It is noted that the storage interface may be configured to dynamically create modify the aforementioned policies based at least in part on the aggregated information provided by the plurality of received storage policies and based on the dynamically observed traffic storage conditions within the QoSt storage network . According to various embodiments of the present invention a traffic management policy may be directed to for example dynamic splitting re routing and or aggregation of traffic according to the time dependent observed traffic patterns. A congestion control policy may be directed to for example priority based handling of traffic during periods of resource shortages such as storage capacity exhaustion processing power exhaustion link bandwidth overflow and the like. An OAM policy may be related to for example to QoSt specific OAM functionality such as specific configuration maintenance alarming statistical reporting and other functionality enabling differentiated handling of storage data.

Starting with is a flowchart of operational steps of the storage manager module of . The storage manager may generally be a software module or application that coordinates and controls storage operations performed by one or more storage nodes . At the storage manager preferably receives current storage network topology information. Obtaining current network topology from any node within the storage network can be achieved in a number of ways. For example the storage network can be configured such that every storage node within the network has information about the current network topology. Alternatively in another example only a select number of storage nodes e.g. first storage node within the storage network may have information about the current storage network topology where such storage nodes can share this information with other storage nodes such that every storage node within the storage network is capable of providing current storage network topology information based upon a need request for such information. A domain on the network topology can also be set e.g. to limit the information obtained from the query to a specified number of data repository units or a limited range e.g. a limited number of hops in relation to the requesting storage node . Current topology information can be provided based upon constraints or limits established by the requesting storage node . For example the storage manager running on the requesting storage node may be interested in a particular data repository unit or set of repository units e.g. repository units within the storage network instead of an entire storage network domain.

At the storage manager preferably receives one or more storage policies from one or more applications . As previously indicated each storage policy may comprise a plurality of orthogonal QoSt attributes. As used herein storage policies concern an application s per stream requirements on the data that it generates or uses. These QoSt attributes facilitate the differentiated treatment of data streams contingent upon at least different types of data. Thus storage policies may be used by the storage manager to control the manner in which a particular application accesses or consumes storage resources at data repository units or to prioritize that data stream relative to others.

Once the storage manager processes and aggregates information related to storage network topology at the storage manager may start receiving a plurality of data stream requests from one or more applications running on one or more application servers . According to an embodiment of the present invention each stream request may comprise one or more streams of raw data. In addition the storage manager may be configured to examine classify and filter the received data at step . The storage manager may classify the data streams based on for example data types detected within the received streams of data. In one embodiment exemplary classifications may be somewhat broad such as but not limited to a stream of user plane data and a stream of control plane data. In another embodiment data may be classified using more specific categories such as but not limited to streams of video data audio data and plain text data etc. Generally classification of data streams depends on types of applications being serviced by the QoSt based storage network . It should be appreciated that the storage manager can detect the categories of traffic based on a very large number of classification criteria. The storage manager may create a data structure for each classification. This step may further involve identifying a storage policy associated with each data stream from which the received data is collected. At upon classifying data stream requests the storage manager may send stream requests to stream processor for further processing. According to an embodiment of the present invention at the storage manager may send information related to received data streams to the stream controller which may be configured to monitor storage network status and to detect trends related to the received data or data types. Upon transmitting relevant data the storage manager preferably continues to perform steps in an iterative manner.

It is noted that data repository units shown in may comprise any number of different forms of storage. Still further each of the data repository units need not be limited to a single memory structure. Rather the data repository unit may include a number of separate storage devices of the same type e.g. all flash memory and or separate storage devices of different types e.g. one or more flash memory units and one or more hard disk drives . In an embodiment of the present invention one or more data repository units may have variable logical storage block sizes. Variable logical storage block sizes allow optimization of each data repository unit for reading and writing different types of data items since applications tend to access different data types in different manners. For example data associated with a video stream may be accessed in large sections at a time. As such it may be more efficient for the stream processor to use a large logical storage block size to organize such video media data for subsequent access by for example a video player application. Likewise data associated with an audio stream may be accessed in large sections at a time although such audio media sections may be smaller than the corresponding video media data sections. Accordingly it may be efficient for the stream processor to use a medium sized logical storage block structure to organize audio data. Data associated with other data types may be efficiently handled by the stream processor using cluster sized logical storage blocks. Accordingly the stream processor may substantially constantly keep track of free storage available in the storage network .

Referring back to at the stream processor may determine if any of the incoming streams are too large to fit in one of the available data repository units . If so step yes branch at the stream processor may segment such incoming stream into two or more sub streams. It is noted that these two or more sub streams could be distributed among multiple data repository units such as to fit within the throughput and storage capacity limitations of the available data repository units . Otherwise step no branch at the stream processor may start receiving stream requests pre processed by the storage manager as described above.

At the stream processor may perform various data management operations to satisfy received stream requests. These data management operations may include but not limited to data traffic monitoring data traffic management and data traffic congestion control. The stream processor preferably performs data management operations contingent on a plurality of QoSt attributes. Thus advantageously the stream processor facilitates different treatment for different types of data stream in accordance with the user specified criteria QoSt attributes . At the stream processor may send various historical data related at least to data management operations to the stream controller . Such information preferably indicates the quantity of free space remaining in the storage network . Upon transmitting historical data the stream processor preferably continues to perform steps in an iterative manner.

At the stream controller may aggregate data received from other software components such as but not limited to the storage manager and the stream processor . By aggregating information about various storage related operations the stream controller may perform real time analysis of incoming data traffic. Accordingly at the stream controller determines current state of the storage network based on said real time analysis. Current state of the storage network includes at least information related to current states of individual data repository units . Next at the stream controller may forecast resource utilization over a predetermined forecast period. For example the stream controller may forecast resource utilization based at least in part on associated historical storage and computing resource load patterns. The historical resource load patterns may be with respect to the distributed storage service as a whole particular data repository units particular data streams and or a particular user of the data storage service i.e. particular application . The stream controller may further take into account the incoming data traffic as analyzed by the storage manager .

At the stream controller may determine whether the degradation of service is predicted. Degradation of service may include an indication of one or more degraded service level parameters such as but not limited to increasing storage network congestion exhaustion of available storage capacity among many others. In response to detecting no degradation of service step no branch the stream controller may return back to step to continue periodically collecting latest storage related information and monitoring current state of the storage network .

According to an embodiment of the present invention at in response to detecting or predicting any degradation of service the stream controller may cooperate with other software components such as storage manager and stream processor to perform one or more corrective actions. For example in response to detecting increasing storage network congestion the stream controller may re allocate the incoming data streams between processing storage nodes and or may re allocate the incoming data streams between physical data repository units . According to an embodiment of the present invention a plurality of stream controllers running on one or more storage nodes may be configured to perform a distributed decision making procedure related to reassignment of incoming data streams. It is noted that if the stream controller determines that considering the current state of the storage network it is not physically possible to resolve the congestion by re allocating data streams such that all storage parameters specified by QoSt attributes are satisfied the stream controller may decide to store information contained in the incoming data streams in order of precedence indicated by the QoSt data priority value described above. In other words the stream controller is configured to dynamically adapt to the current storage network conditions and to make intelligent decision to save the most important data first and possibly discard the least important data. As another non limiting example in the situation where the stream controller decides that it is not possible to resolve the storage capacity exhaustion problem by reallocating data streams between the available data repository units and satisfying all storage parameters the stream controller may make a decision to reduce the retention time for the received and or already stored data in accordance with the precedence indicated by the QoSt data priority value associated with each data stream. As yet another example the stream controller may discard or re locate data having lower priority from a particular data repository unit in order to accommodate incoming data from data streams having higher priority.

According to an embodiment of the present invention at the stream controller may provide notifications to various applications being served by the storage network wherein each notification may provide information related to current state of the storage network and or information indicative of taken corrective action. In one embodiment the stream controller may communicate directly with the applications via the pre configured API . In other embodiments the stream controller may employ alarm events interrupts and other mechanisms well known in the art to communicate relevant information to a plurality of applications . In response rather than adjusting their performance the plurality of applications may present information related to system capacity performance i.e. alarms and statistics to end users such as system administrators network technicians and the like who may take one or more corrective actions if necessary as described below. In yet another embodiment the stream controller may provide various storage service related notifications to the OAM node . It should be noted that values of the various QoSt attributes are not necessarily remain fixed in time. Their values can be modified after deployment because the storage network is capable of adapting to them in a dynamic manner. By providing early warnings via the disclosed notification techniques based on user defined criteria the stream controller allows system administrators and or technicians supporting the storage network take effective measures before service degradation occurs. Such measures may include but are not limited to fine tuning individual applications reconfiguration of individual storage policies and or internal policies such as traffic management policy congestion control policy OAM policy performing storage scaling either horizontal or vertical among other measures.

In summary various embodiments of the present invention describe a novel storage management approach that offers a cost effective network storage solution capable of receiving processing and storing large amounts of data without adding a significant overhead. Advantageously the disclosed data management platform employs an elaborate QoSt supporting framework which is based primarily on processing rules that are consistent with the full set of data attributes defined by the interface. In another aspect a high flexibility and robustness of data storage system is provided to users through highly flexible software modules that function in an efficient way that is transparent to an application using the disclosed storage network. Various embodiments of the present invention introduce a new approach aimed at shifting substantially all QoSt responsibilities to the storage network framework which is enabled to provide optimal and consistent QoSt support.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described above with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

Embodiments of QoSt based storage management framework may be implemented or executed by storage nodes comprising one or more computer systems. One such storage node is illustrated in . In various embodiments storage node may be a server a mainframe computer system a workstation a network computer a desktop computer a laptop or the like.

Storage node is only one example of a suitable system and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless storage node is capable of being implemented and or performing any of the functionality set forth hereinabove.

Storage node may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Storage node may be practiced in distributed data processing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed data processing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

Storage node is shown in in the form of a general purpose computing device. The components of storage node may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processor .

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus.

Storage node typically includes a variety of computer system readable media. Such media may be any available media that is accessible by storage node and it includes both volatile and non volatile media removable and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . Storage node may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of embodiments of the invention.

Program utility having a set at least one of program modules such as storage manager stream controller and stream processor may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the invention as described herein.

Storage node may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with storage node and or any devices e.g. network card modem etc. that enable storage node to communicate with one or more other computing devices. Such communication can occur via Input Output I O interfaces . Still yet storage node can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of storage node via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with storage node . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

