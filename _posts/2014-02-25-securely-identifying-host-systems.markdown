---

title: Securely identifying host systems
abstract: Embodiments of the present invention allow for “end-user” provisioned instances to securely identify themselves beyond a simple user ID and password. Specifically, embodiments of the present invention use a multi-part security approach that includes (among other things): an identifying key (e.g., a shared private key) known by the cloud security system and the instance; and at least one additional security factor such as an identifier found in TCP/IP packets (e.g., an internet protocol address). In a typical embodiment, a request for an instance (e.g., a virtual machine) is received, and a template (e.g., an image) corresponding to the requested instance is identified. From this template, the instance is provisioned. Under the embodiments of the present invention, the instance will be provisioned to include a security key. When a request is thereafter received from the instance, the request is validated using the security key and the additional security factor(s).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09148426&OS=09148426&RS=09148426
owner: International Business Machines Corporation
number: 09148426
owner_city: Armonk
owner_country: US
publication_date: 20140225
---
The present patent document is a continuation of U.S. patent application Ser. No. 12 856 045 filed Aug. 13 2010 entitled SECURELY IDENTIFYING HOST SYSTEMS the disclosure of which is incorporated herein by reference.

The present invention generally relates to system security. Specifically the present invention relates to securely identifying host systems such as virtual machines e.g. in a cloud computing environment .

The cloud computing environment is an enhancement to the predecessor grid environment whereby multiple grids and other computation resources may be further abstracted by a cloud layer thus making disparate devices appear to an end user as a single pool of seamless resources. These resources may include such things as physical or logical compute engines servers and devices device memory storage devices.

Cloud computing environments create virtual machines also called instances on behalf of users people or machines . These virtual machines are often delivered with root level access allowing users to manage them as they see fit. To enable instances to act autonomically the instance needs to be able to call management APIs to create additional resources change their current resources etc. One challenge is being able to do this securely without compromising credentials or presuming a specific implementation. Previous attempts have failed to accomplished this.

Embodiments of the present invention allow for end user provisioned instances to securely identify themselves beyond a simple user ID and password. Specifically embodiments of the present invention use a multi part security approach that includes among other things an identifying key e.g. a shared private key known by a cloud security system and the instance and at least one additional security factor such as an identifier found in TCP IP packets e.g. an internet protocol IP address . In a typical embodiment a request for an instance e.g. a virtual machine is received and a template e.g. an image corresponding to the requested instance is identified. From this template the instance is provisioned. Under the embodiments of the present invention the instance will be provisioned to include a security key. When a request is thereafter received from the instance the request is validated using the security key and the additional security factor s .

A first aspect of the present invention provides a method for securely identifying host systems comprising receiving a request for an instance identifying a template corresponding to the request and provisioning the instance from the template the instance being provisioned to include a security key.

A second aspect of the present invention provides a system for securely identifying host systems comprising a bus a processor coupled to the bus and a memory medium coupled to the bus the memory medium comprising instructions to receive a request for an instance identify a template corresponding to the request provision the instance from the template the instance being provisioned to include a security key receive a request from the instance and validate the request from the instance using the security key and at least one additional security validation factor.

A third aspect of the present invention provides a computer program product for securely identifying host systems the computer program product comprising a computer readable storage media and program instructions stored on the computer readable storage media to receive a request for an instance identify a template corresponding to the request and provision the instance from the template the instance being provisioned to include a security key 

A fourth aspect of the present invention provides a method for deploying a system for securely identifying host systems comprising providing a computer infrastructure being operable to receive a request for an instance identify a template corresponding to the request and provision the instance from the template the instance being provisioned to include a security key.

The drawings are not necessarily to scale. The drawings are merely schematic representations not intended to portray specific parameters of the invention. The drawings are intended to depict only typical embodiments of the invention and therefore should not be considered as limiting the scope of the invention. In the drawings like numbering represents like elements.

Embodiments of the present invention allow for end user provisioned instances to securely identify themselves beyond a simple user ID and password. Specifically embodiments of the present invention use a multi part security approach that includes among other things an identifying key e.g. a shared private key known by the cloud security system and the instance and at least one additional security factor such as an identifier found in TCP IP packets e.g. an internet protocol address . In a typical embodiment a request for an instance e.g. a virtual machine is received and a template e.g. an image corresponding to the requested instance is identified. From this template the instance is provisioned. Under the embodiments of the present invention the instance will be provisioned to include a security key. When a request is thereafter received from the instance the request is validated using the security key and the additional security factor s .

The combination of multiple security factors enables unique identification of the instance. Moreover the generation of the key can be as complex and secure as deemed necessary e.g. to the point that the key is not available in the typical manner to make compromising security extremely challenging. This capability could be delivered as a service external to a cloud. It could also leverage a private node model such as an application web service AWS where the service is delivered locally to the guests to make it more complex.

It is understood in advance that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather embodiments of the present invention are capable of being implemented in conjunction with any other type of computing environment now known or later developed.

Cloud computing is a model of service delivery for enabling convenient on demand network access to a shared pool of configurable computing resources e.g. networks network bandwidth servers processing memory storage applications virtual machines and services that can be rapidly provisioned and released with minimal management effort or interaction with a provider of the service. This cloud model may include at least five characteristics at least three service models and at least four deployment models.

On demand self service a cloud consumer can unilaterally provision computing capabilities such as server time and network storage as needed automatically without requiring human interaction with the service s provider.

Broad network access capabilities are available over a network and accessed through standard mechanisms that promote use by heterogeneous thin or thick client platforms e.g. mobile phones laptops and PDAs .

Resource pooling the provider s computing resources are pooled to serve multiple consumers using a multi tenant model with different physical and virtual resources dynamically assigned and reassigned according to demand. There is a sense of location independence in that the consumer generally has no control or knowledge over the exact location of the provided resources but may be able to specify location at a higher level of abstraction e.g. country state or datacenter .

Rapid elasticity capabilities can be rapidly and elastically provisioned in some cases automatically to quickly scale out and rapidly released to quickly scale in. To the consumer the capabilities available for provisioning often appear to be unlimited and can be purchased in any quantity at any time.

Measured service cloud systems automatically control and optimize resource use by leveraging a metering capability at some level of abstraction appropriate to the type of service e.g. storage processing bandwidth and active user accounts . Resource usage can be monitored controlled and reported providing transparency for both the provider and consumer of the utilized service.

Software as a Service SaaS the capability provided to the consumer is to use the provider s applications running on a cloud infrastructure. The applications are accessible from various client devices through a thin client interface such as a web browser e.g. web based email . The consumer does not manage or control the underlying cloud infrastructure including network servers operating systems storage or even individual application capabilities with the possible exception of limited user specific application configuration settings.

Platform as a Service PaaS the capability provided to the consumer is to deploy onto the cloud infrastructure consumer created or acquired applications created using programming languages and tools supported by the provider. The consumer does not manage or control the underlying cloud infrastructure including networks servers operating systems or storage but has control over the deployed applications and possibly application hosting environment configurations.

Infrastructure as a Service IaaS the capability provided to the consumer is to provision processing storage networks and other fundamental computing resources where the consumer is able to deploy and run arbitrary software which can include operating systems and applications. The consumer does not manage or control the underlying cloud infrastructure but has control over operating systems storage deployed applications and possibly limited control of select networking components e.g. host firewalls .

Private cloud the cloud infrastructure is operated solely for an organization. It may be managed by the organization or a third party and may exist on premises or off premises.

Community cloud the cloud infrastructure is shared by several organizations and supports a specific community that has shared concerns e.g. mission security requirements policy and compliance considerations . It may be managed by the organizations or a third party and may exist on premises or off premises.

Public cloud the cloud infrastructure is made available to the general public or a large industry group and is owned by an organization selling cloud services.

Hybrid cloud the cloud infrastructure is a composition of two or more clouds private community or public that remain unique entities but are bound together by standardized or proprietary technology that enables data and application portability e.g. cloud bursting for load balancing between clouds .

A cloud computing environment is service oriented with a focus on statelessness low coupling modularity and semantic interoperability. At the heart of cloud computing is an infrastructure comprising a network of interconnected nodes.

Referring now to a schematic of an example of a cloud computing node is shown. Cloud computing node is only one example of a suitable cloud computing node and is not intended to suggest any limitation as to the scope of use or functionality of embodiments of the invention described herein. Regardless cloud computing node is capable of being implemented and or performing any of the functionality set forth hereinabove.

In cloud computing node there is a computer system server which is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with computer system server include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputer systems mainframe computer systems and distributed cloud computing environments that include any of the above systems or devices and the like.

Computer system server may be described in the general context of computer system executable instructions such as program modules being executed by a computer system. Generally program modules may include routines programs objects components logic data structures and so on that perform particular tasks or implement particular abstract data types. Computer system server may be practiced in distributed cloud computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed cloud computing environment program modules may be located in both local and remote computer system storage media including memory storage devices.

As shown in computer system server in cloud computing node is shown in the form of a general purpose computing device. The components of computer system server may include but are not limited to one or more processors or processing units a system memory and a bus that couples various system components including system memory to processor .

Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnects PCI bus.

Computer system server typically includes a variety of computer system readable media. Such media may be any available media that is accessible by computer system server and it includes both volatile and non volatile media removable and non removable media.

System memory can include computer system readable media in the form of volatile memory such as random access memory RAM and or cache memory . Computer system server may further include other removable non removable volatile non volatile computer system storage media. By way of example only storage system can be provided for reading from and writing to a non removable non volatile magnetic media not shown and typically called a hard drive . Although not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media can be provided. In such instances each can be connected to bus by one or more data media interfaces. As will be further depicted and described below memory may include at least one program product having a set e.g. at least one of program modules that are configured to carry out the functions of embodiments of the invention.

The embodiments of the invention may be implemented as a computer readable signal medium which may include a propagated data signal with computer readable program code embodied therein e.g. in baseband or as part of a carrier wave . Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable radio frequency RF etc. or any suitable combination of the foregoing.

Program utility having a set at least one of program modules may be stored in memory by way of example and not limitation as well as an operating system one or more application programs other program modules and program data. Each of the operating system one or more application programs other program modules and program data or some combination thereof may include an implementation of a networking environment. Program modules generally carry out the functions and or methodologies of embodiments of the invention as described herein.

Computer system server may also communicate with one or more external devices such as a keyboard a pointing device a display etc. one or more devices that enable a user to interact with computer system server and or any devices e.g. network card modem etc. that enable computer system server to communicate with one or more other computing devices. Such communication can occur via I O interfaces . Still yet computer system server can communicate with one or more networks such as a local area network LAN a general wide area network WAN and or a public network e.g. the Internet via network adapter . As depicted network adapter communicates with the other components of computer system server via bus . It should be understood that although not shown other hardware and or software components could be used in conjunction with computer system server . Examples include but are not limited to microcode device drivers redundant processing units external disk drive arrays RAID systems tape drives and data archival storage systems etc.

Referring now to illustrative cloud computing environment is depicted. As shown cloud computing environment comprises one or more cloud computing nodes with which local computing devices used by cloud consumers such as for example personal digital assistant PDA or cellular telephone A desktop computer B laptop computer C and or automobile computer system N may communicate. Nodes may communicate with one another. They may be grouped not shown physically or virtually in one or more networks such as private community public or hybrid clouds as described hereinabove or a combination thereof. This allows cloud computing environment to offer infrastructure platforms and or software as services for which a cloud consumer does not need to maintain resources on a local computing device. It is understood that the types of computing devices A N shown in are intended to be illustrative only and that computing nodes and cloud computing environment can communicate with any type of computerized device over any type of network and or network addressable connection e.g. using a web browser .

Referring now to a set of functional abstraction layers provided by cloud computing environment is shown. It should be understood in advance that the components layers and functions shown in are intended to be illustrative only and embodiments of the invention are not limited thereto. As depicted the following layers and corresponding functions are provided 

Hardware and software layer includes hardware and software components. Examples of hardware components include mainframes. In one example IBM zSeries systems and RISC Reduced Instruction Set Computer architecture based servers. In one example IBM pSeries systems IBM xSeries systems IBM BladeCenter systems storage devices networks and networking components. Examples of software components include network application server software. In one example IBM WebSphere application server software and database software. In one example IBM DB2 database software. IBM zSeries pSeries xSeries BladeCenter WebSphere and DB2 are trademarks of International Business Machines Corporation registered in many jurisdictions worldwide. 

Virtualization layer provides an abstraction layer from which the following examples of virtual entities may be provided virtual servers virtual storage virtual networks including virtual private networks virtual applications and operating systems and virtual clients.

In one example management layer may provide the functions described below. Resource provisioning provides dynamic procurement of computing resources and other resources that are utilized to perform tasks within the cloud computing environment. Metering and pricing provide cost tracking as resources are utilized within the cloud computing environment and billing or invoicing for consumption of these resources. In one example these resources may comprise application software licenses. Security provides identity verification for cloud consumers and tasks as well as protection for data and other resources. User portal provides access to the cloud computing environment for consumers and system administrators. Service level management provides cloud computing resource allocation and management such that required service levels are met. Service Level Agreement SLA planning and fulfillment provides pre arrangement for and procurement of cloud computing resources for which a future requirement is anticipated in accordance with an SLA.

Workloads layer provides examples of functionality for which the cloud computing environment may be utilized. Examples of workloads and functions which may be provided from this layer include mapping and navigation software development and lifecycle management virtual classroom education delivery data analytics processing transaction processing and system security. As mentioned above all of the foregoing examples described with respect to are illustrative only and the invention is not limited to these examples.

It is understood that all functions of the present invention as described herein are typically performed by the system security function which can be tangibly embodied as modules of program code of program utility . However this need not be the case. Rather the functionality recited herein could be carried out implemented and or enabled by any of the layers shown in .

It is reiterated that although this disclosure includes a detailed description on cloud computing implementation of the teachings recited herein are not limited to a cloud computing environment. Rather the embodiments of the present invention are intended to be implemented with any type of clustered computing environment now known or later developed.

Referring now to collectively the embodiments of the present invention will be discussed in greater detail. Specifically depicts a flow diagram of the functions recited herein e.g. depicted in steps P while depicts an architectural diagram showing the components that perform the functions of . It is understood in advance that while shows two separate systems namely provisioning system and security system that work in conjunction with one another these systems could be realized within a single system e.g. program having modules of FIG. . They are shown as two separate systems in for illustrative purposes only.

Regardless in step P a provisioning system having one or more program modules which perform the underlying functions thereof receives a request to provision an instance e.g. a virtual machine from a requester which could be a user a group of users a machine or third party service working on behalf of either. In step P provisioning system identifies a template e.g. an image from which the instance can be generated and performs any other steps related to preparing to provision. The template can be accessed from any type of resource such as an image library etc. Moreover this step could also include the accessing of a user profile e.g. corporate profile social networking profile etc. . This information can provide information on the requester e.g. demographics position access level previous requests etc. . Using this information a template may be more readily identified. Regardless provisioning system request a security key from security system which also includes one or more program modules that perform the underlying functions thereof will a unique key can be generated that is private but known to the system. Upon receiving the request security system will generate a security key.

Several options are possible when generating the security key. For example the key could be generated from and or using a globally unique string a secure hash an application programming interface API to yield the security key a hashed set of files pointers to a hashed set of files and or an executed binary. It is understood that the security key could be generated externally to the system or by the system itself. Once the security key is generated it will be stored in a table in a database or the like. In a typical embodiment the table associates instances with their corresponding security keys. The security key will then be returned to provisioning system . In step P provisioning system will provision instance while inserting the security key into instance . As stated above there are multiple options for handling the security key. For example the key could be inserted into a read only partition. Alternatively executable binary code that is configured to generate the key could be inserted. Still yet other content allowing the generation of the key could be inserted. Moreover the key could be provided as a linked asset or protected partition.

Regardless in step P instance is now able to make calls requests to the system using this key. In one embodiment a unique key could be generated using any of the approaches discussed above for each access to the key. In such an embodiment the security key is typically understood by the system. In any event in step P security system receives and validates a request from instance . Based on the security key embedded within instance and at least one additional security factor security system will attempt to validate the request. The additional security factor s can comprise any other method of validation now known or later developed. For example the additional security factor can comprise at least one of the following an internet protocol IP address associated with the instance header information associated with the request received from the instance etc. If the request is validated it will be fulfilled by the system. To validate the security key security system will access the entry in table corresponding instance that was previously created when the security key was generated. As mentioned this entry typically correlates instance with its security key and optionally the additional security factor. A validation result can then be provided.

Referring now to a method flow diagram is shown. In step S of a request for an instance such as a virtual machine is received. In step S a template such as an image corresponding to the request is identified. In step S the instance is provisioned from the template the instance being provisioned to include a security key. As mentioned above the security key can be yielded in any type of fashion. For example the key can be yielded from a globally unique string a secure hash an application programming interface API a hashed set of files and or an executed binary to yield the security key. At this point the process flows to step S of in which a request is received from the instance. In step S the request is validated from the instance using the security key and at least one additional security validation factor such as an IP address.

While shown and described herein as a system security solution it is understood that the invention further provides various alternative embodiments. For example in one embodiment the invention provides a computer readable useable medium that includes computer program code to enable a computer infrastructure to provide system security functionality as discussed herein. To this extent the computer readable useable medium includes program code that implements each of the various processes of the invention. It is understood that the terms computer readable medium or computer useable medium comprise one or more of any type of physical embodiment of the program code. In particular the computer readable useable medium can comprise program code embodied on one or more portable storage articles of manufacture e.g. a compact disc a magnetic disk a tape etc. on one or more data storage portions of a computing device such as memory and or storage system e.g. a fixed disk a read only memory a random access memory a cache memory etc. .

In another embodiment the invention provides a method that performs the process of the invention on a subscription advertising and or fee basis. That is a service provider such as a Solution Integrator could offer to provide system security functionality. In this case the service provider can create maintain support etc. a computer infrastructure such as computer system that performs the processes of the invention for one or more consumers. In return the service provider can receive payment from the consumer s under a subscription and or fee agreement and or the service provider can receive payment from the sale of advertising content to one or more third parties.

In still another embodiment the invention provides a computer implemented method for system security. In this case a computer infrastructure such as computer system can be provided and one or more systems for performing the processes of the invention can be obtained e.g. created purchased used modified etc. and deployed to the computer infrastructure. To this extent the deployment of a system can comprise one or more of 1 installing program code on a computing device such as computer system from a computer readable medium 2 adding one or more computing devices to the computer infrastructure and 3 incorporating and or modifying one or more existing systems of the computer infrastructure to enable the computer infrastructure to perform the processes of the invention.

As used herein it is understood that the terms program code and computer program code are synonymous and mean any expression in any language code or notation of a set of instructions intended to cause a computing device having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation and or b reproduction in a different material form. To this extent program code can be embodied as one or more of an application software program component software a library of functions an operating system a basic device system driver for a particular computing device and the like.

A data processing system suitable for storing and or executing program code can be provided hereunder and can include at least one processor communicatively coupled directly or indirectly to memory elements through a system bus. The memory elements can include but are not limited to local memory employed during actual execution of the program code bulk storage and cache memories that provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Input output and or other external devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening device controllers.

Network adapters also may be coupled to the system to enable the data processing system to become coupled to other data processing systems remote printers storage devices and or the like through any combination of intervening private or public networks. Illustrative network adapters include but are not limited to modems cable modems and Ethernet cards.

The foregoing description of various aspects of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and obviously many modifications and variations are possible. Such modifications and variations that may be apparent to a person skilled in the art are intended to be included within the scope of the invention as defined by the accompanying claims.

