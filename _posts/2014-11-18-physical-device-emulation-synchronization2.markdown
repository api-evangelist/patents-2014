---

title: Physical device emulation synchronization
abstract: In one or more embodiments, a system can configure a physical mobile device via configuring a configuration for an emulator of the physical mobile device. For example, a user (e.g., a customer) can request a physical mobile device, and a system can provide the user with an emulation of the physical mobile device, where the user can configure the emulation of the physical mobile device. In one or more embodiments, the user can be provided with the configuration via at least one of a network and a physical delivery of the physical mobile device, configured with the configuration. In one example, the user can execute an emulation of the physical mobile device configured with the configuration, received via the network. In another example, the physical mobile device can be configured with the configuration, and subsequently, the physical mobile device can be physically delivered to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09639380&OS=09639380&RS=09639380
owner: WEBAD CAMPAIGN ANALYTICS, LP
number: 09639380
owner_city: Austin
owner_country: US
publication_date: 20141118
---
This application claims priority to U.S. Provisional Application Ser. No. 61 905 608 filed 18 Nov. 2013 titled METHODS AND SYSTEMS OF OPERATING COMPUTING DEVICE . Each of U.S. Provisional Application Ser. No. 61 905 608 filed 18 Nov. 2013 titled METHODS AND SYSTEMS OF OPERATING COMPUTING DEVICE U.S. application Ser. No. 13 601 537 filed 31 Aug. 2013 titled Methods and Systems of Providing Items to a Customer Via a Network U.S. application Ser. No. 13 428 128 filed 23 Mar. 2012 titled Methods And Systems Of Providing Items To Customers Via a Network and U.S. Provisional Application Ser. No. 61 627 349 filed 11 Oct. 2011 titled Methods and Systems of Providing Items to Customers via a Network is hereby incorporated by reference in its entirety as though fully and completely set forth herein.

The present application is related to the following commonly assigned co pending U.S. patent application s filed on even date herewith with all content incorporated herein by reference 

U.S. patent application Ser. No. 14 546 931 titled Methods and Systems of Operating Computing Device. 

In the past users of computing devices read manuals watched instructional videos and or received help from customer service representatives to learn how to configure their computing devices. In one example these manuals and videos are often difficult for some if not most users to utilize in configuring their computing devices. In another example help from customer service representatives often cannot be referred to at a later time e.g. after receiving help from customer service representatives . This can pose issues of customer satisfaction and or additional cost in providing customer service representatives.

Moreover in the past a user customer could order a mobile device such as a wireless telephone and would have to wait until the mobile device was physically delivered to the user customer before the user customer could configure the mobile device. For example the user customer would have to wait until physical delivery of the mobile device before purchasing applications APPs arranging application APP icons to be displayed via the mobile device configuring an address book APP configuring a weather APP and or configuring an electronic mail APP among others.

While one or more embodiments may be susceptible to various modifications and alternative forms specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood however that the drawings and detailed description thereto are not intended to limit the disclosure to the particular form disclosed but on the contrary the disclosure is to cover all modifications equivalents and alternatives falling within the spirit and scope of this disclosure.

In one or more embodiments a system can configure a physical mobile device via configuring a configuration for an emulator of the physical mobile device. For example a user e.g. a customer can request a physical mobile device and a system can provide the user with an emulation of the physical mobile device where the user can configure the emulation of the physical mobile device. In one or more embodiments the user can be provided with the configuration via at least one of a network and a physical delivery of the physical mobile device configured with the configuration. In one example the user can execute an emulation of the physical mobile device configured with the configuration received via the network. In another example the physical mobile device can be configured with the configuration and subsequently the physical mobile device can be physically delivered to the user.

In one or more embodiments a user customer can utilize a first mobile device and shop for a second mobile device that will be utilized with the first mobile device. For example the first mobile device can be or include one or more of a wireless telephone a personal digital assistant and a digital music player among others and the second mobile device can be or include a watch e.g. a smart watch among others. In one or more embodiments the first and second physical mobile devices can be emulated. For example the first and second physical mobile devices can be emulated to configure the second mobile device. In one instance an emulated coupling of the first mobile device with the second mobile device can include a wireless emulated coupling. In another instance an emulated coupling of the first mobile device with the second mobile device can include a wired emulated coupling. After the second mobile device is configured a configuration of the second mobile device can be provided to the user via a network and or the second mobile device configured with the configuration can be provided to the user via a physical delivery service according to one or more embodiments.

In one or more embodiments a user can be provided with a walk through and or tutorial that can be utilized to configure a mobile device. For example a first application can provide a walk through and or tutorial of a second application. In one or more embodiments the first application can implement a conceptual transparent layer of a display of the mobile device where the first application can provide messages and or can indicate actions that could and or should be taken by a user. In one example the first application can provide messages to configure a mail application. In another example the first application can provide an indication that a swipe can be performed with a second application. For instance the swipe can reveal additional information provided by the second application and or change displayed information.

Turning now to a block diagram of a network communication system is illustrated according to one or more embodiments. As illustrated one or more customer computing devices CCDs can be coupled to a network . In one or more embodiments network can include one or more of a wireless network and a wired network. Network can be coupled to one or more types of communications networks such as one or more of a public switched telephone network PSTN a public wide area network e.g. an Internet a private wide area network and a local area network among others. In one example network can be or include an Internet. In another example network can form part of an Internet. In one or more embodiments one or more of CCDs can be coupled to network via a wired communication coupling and or a wireless communication coupling. In one example a customer computer device CCD can be coupled to network via wired Ethernet a DSL digital subscriber loop modem or a cable television modem among others. In another example a CCD can be coupled to network via wireless Ethernet e.g. WiFi a satellite communication coupling a cellular telephone coupling or WiMax among others.

As shown one or more media servers can be coupled to network and media servers can include media server interfaces respectively. As illustrated media servers and can be coupled to databases and and media server can include a database DB . In one example DB can be or include an Oracle database. In a second example DB can be or include a Microsoft SQL Server database. In another example DB can be or include a MySQL database or a PostgreSQL database.

In one or more embodiments one or more of media server interfaces can provide one or more computer system interfaces to one or more of CCDs . In one example media server interface can include a web server. In another example media server interface can include a server that interacts with a client application of a CCD. In one instance the client application can include a smart phone application. In a second instance the client application can include a tablet computing device application. In another instance the client application can include a computing device application e.g. an application for a desktop or laptop computing device .

As illustrated one or more customer service devices CSDs can be coupled to network . In one or more embodiments a service representative e.g. a customer service representative of a retail establishment a service representative of a service provider etc. can utilize a customer service device CSD to interact with a customer utilizing a CCD. For example the service representative can utilize the CSD to provide information to the customer via the CCD. In one instance the service representative can utilize the CSD to conduct one or more of a video chat a text chat and an audio chat. In a second instance the service representative can utilize the CSD to illustrate and or demonstrate one or more features and or operations of an object for sale or of an object for which service is desired by the customer.

Turning now to an exemplary block diagram of a hardware and software stack of a computing device is illustrated according to one or more embodiments. As shown hardware can interface with a kernel that can interface with an application APP manager . As illustrated applications APPs can interface with APP manager . In one or more embodiments APP manager can include a window manager that can provide and or implement an application programming interface API of and or for a graphical user interface GUI framework.

As shown hardware can include one or more of a processor a memory medium a display a touch screen a button a button a button a transceiver e.g. a wireless Ethernet transceiver a WiFi transceiver etc. a transceiver e.g. a wireless telephone transceiver a cellular telephone network transceiver a satellite telephone network transceiver etc. and a serial interface e.g. a universal serial bus USB interface a FireWire interface a wired Ethernet interface a RS 232 interface a Thunderbolt interface etc. among others. As illustrated kernel can include one or more of a display driver DRV a touch screen DRV a button DRV a transceiver DRV a transceiver DRV a serial interface DRV a scheduler and a queue among others.

In one or more embodiments a driver of kernel can include instructions executable by processor to interface with a hardware unit of hardware . For example drivers can respectively include instructions executable by processor to interface with respective hardware units . In one or more embodiments one or more of drivers can provide data to queue . In one example touch screen DRV can provide data associated with one or more of coordinates a hold and a swipe among others of touch screen to queue . In another example button DRV can provide data associated with an actuation of one or more of buttons to queue . In one or more embodiments queue can include one or more queues. For example queue can include one or more of an event queue and a work queue among others.

In one or more embodiments scheduler can schedule time that processes and or threads can utilize a processor unit. For example scheduler can schedule time that one or more of kernel APP manager and APPs can utilize processor .

In one or more embodiments scheduler can dequeue data from queue and provide the dequeued data to APP manager . For example the data dequeued from queue can be queued in queue . In one instance data associated with one or more of coordinates a hold and a swipe among others of touch screen can be queued in queue . In another instance data associated with an actuation of one or more of buttons can be queued in queue .

In one or more embodiments scheduler can process work of a work queue of queue . For example a driver of kernel can queue work in queue and scheduler can process work queued in queue . For instance work in queue can include first data and a corresponding first function e.g. a subroutine that processes the first data.

In one or more embodiments APP manager can provide data to one or more of APPs . For example APP manager can provide event data to one or more of APPs . In one or more embodiments APP manager can retrieve data from kernel via a file system of kernel . For example APP manager can access one or more pseudo files e.g. device files files in dev files in dev input files in proc etc. to retrieve and or obtain data that can be provided to one or more of APPs .

In one or more embodiments APP manager can implement and or maintain identifications IDs associated with respective APPs. In one example APP manager can implement and or maintain first data associated with a first APP via a first APP identification ID . In another example APP manager can implement and or maintain second data associated with a second APP via a second APP ID.

In one or more embodiments APP manager can implement and or maintain callbacks associated with respective APPs. In one example a first APP can register a first callback e.g. instructions executable by processor with APP manager and APP manager can execute the first callback with first data associated with the first APP as parameter passed to the first callback. In a second example a second APP can register a second callback e.g. instructions executable by processor with APP manager and APP manager can execute the second callback with second data associated with the second APP as parameter passed to the second callback. In another example data queued in queue can be provided to one or more APPs via one or more respective callbacks. In one instance one or more of coordinates a hold and a swipe among others of touch screen can be provided to an APP via its callback s . In another instance data associated with an actuation of one or more of buttons can be provided to an APP via its callback s .

Turning now to an exemplary computing device is illustrated according to one or more embodiments. As shown a computing device CD can include one or more of processor and one or more of memory medium display touch screen button button button transceiver transceiver and serial interface among others coupled to processor . As illustrated memory medium can include and or store one or more of kernel APP manager APP APP APP and APP among others which can be executed by processor . In one or more embodiments computing device can be or include a computer a computer system a workstation a mobile device a mobile computing device a hand held computing device a personal digital assistant PDA a cellular telephone a tablet computing device a digital music player device a wireless telephone a satellite telephone a virtual computing device e.g. a virtual machine an in vehicle computing device e.g. an in vehicle entertainment system an in vehicle navigation system an in vehicle configuration and or status system and an automotive computing device among others. In one or more embodiments CD illustrated in can be utilized to implement a CCD and or a CSD.

Turning now to a computing device is illustrated according to one or more embodiments. As shown CD can include processor coupled to a memory medium . In one or more embodiments memory medium can store data and or instructions that can be executed by processor . For example memory medium can store one or more APPs and or an operation system OS . For instance one or more APPs and or an OS can include instructions of an instruction set architecture ISA associated with processor . In one or more embodiments CD can be coupled to and or include one or more of a display a keyboard and a pointing device e.g. a mouse a track ball a track pad a stylus etc. . In one or more embodiments a touch screen can function as a pointing device. In one example the touch screen can determine a position via one or more pressure sensors. In another example the touch screen can determine a position via one or more capacitive sensors.

As illustrated CD can include one or more network interfaces and . In one example network interface can interface with a wired network coupling such as a wired Ethernet a T 1 a DSL modem a PSTN or a cable modem among others. In another example network interface can interface with a wireless network coupling such as a satellite telephone system a cellular telephone system WiMax WiFi or wireless Ethernet among others.

In one or more embodiments CD can be any of various types of devices including a computer system a server computer system a laptop computer system a notebook computing device a portable computer a PDA a handheld mobile computing device a mobile wireless telephone e.g. a satellite telephone a cellular telephone etc. an Internet appliance a television device a DVD digital video disc player device a Blu Ray disc player device a DVR digital video recorder device a wearable computing device or other wireless or wired device that includes a processor that executes instructions from a memory medium. In one or more embodiments processor can include one or more cores. For example each core of processor can implement an ISA. In one instance two or more cores of processor can implement a same ISA. In another instance two or more cores of processor can implement different instruction set architectures ISAs . In one or more embodiments one or more of CCDs media servers databases and and CSDs can include one or more same or similar structures and or functionalities described with reference to CD .

Turning now to a computing device is illustrated according to one or more embodiments. As shown CD can include a field programmable gate array FPGA coupled to memory medium . In one or more embodiments memory medium can store data and or configuration information that can be utilized by FPGA in implementing one or more systems methods and or processes described herein. For example memory medium can store a configuration CFG and CFG can include configuration information and or one or more instructions that can be utilized by FPGA to implement one or more systems methods and or processes described herein. For instance the configuration information and or the one or more instructions of CFG can include a hardware description language and or a schematic design that can be utilized by FPGA to implement one or more systems methods and or processes described herein. In one or more embodiments FPGA can include multiple programmable logic components that can be configured and coupled to one another in implementing one or more systems methods and or processes described herein.

In one or more embodiments memory medium can store data and or instructions that can be executed by FPGA . For example memory medium can store one or more APPs and or an OS . For instance one or more APPs and or an OS can include instructions of an ISA associated with FPGA . In one or more embodiments CD can be coupled to and or include one or more of a display a keyboard and a pointing device e.g. a mouse a track ball a track pad a stylus etc. . In one or more embodiments a touch screen can function as a pointing device. In one example the touch screen can determine a position via one or more pressure sensors. In another example the touch screen can determine a position via one or more capacitive sensors.

As illustrated CD can include one or more network interfaces and . In one example network interface can interface with a wired network coupling such as a wired Ethernet a T 1 a DSL modem a PSTN or a cable modem among others. In another example network interface can interface with a wireless network coupling such as a satellite telephone system a cellular telephone system WiMax WiFi or wireless Ethernet among others.

In one or more embodiments CD can be any of various types of devices including a computer system a server computer system a laptop computer system a notebook computing device a portable computer a PDA a handheld mobile computing device a mobile wireless telephone e.g. a satellite telephone a cellular telephone etc. an Internet appliance a television device a DVD device a Blu Ray disc player device a DVR device a wearable computing device or other wireless or wired device that includes a FPGA that processes data according to one or more methods and or processes described herein. In one or more embodiments one or more of CCDs media servers databases and and CSDs can include one or more same or similar structures and or functionalities described with reference to CD .

Turning now to a computing device is illustrated according to one or more embodiments. As shown CD can include an application specific processor ASIC coupled to memory medium . In one or more embodiments memory medium can store data and or configuration information that can be utilized by ASIC in implementing one or more systems methods and or processes described herein. For example memory medium can store a CFG and CFG can include configuration information and or one or more instructions that can be utilized by ASIC to implement one or more systems methods and or processes described herein.

In one or more embodiments memory medium can store data and or instructions that can be executed by ASIC . For example memory medium can store one or more APPs and or an OS . For instance one or more APPs and or an OS can include instructions of an ISA associated with ASIC . In one or more embodiments CD can be coupled to and or include one or more of a display a keyboard and a pointing device e.g. a mouse a track ball a track pad a stylus etc. . In one or more embodiments a touch screen can function as a pointing device. In one example the touch screen can determine a position via one or more pressure sensors. In another example the touch screen can determine a position via one or more capacitive sensors.

As illustrated CD can include one or more network interfaces and . In one example network interface can interface with a wired network coupling such as a wired Ethernet a T 1 a DSL modem a PSTN or a cable modem among others. In another example network interface can interface with a wireless network coupling such as a satellite telephone system a cellular telephone system WiMax WiFi or wireless Ethernet among others.

In one or more embodiments CD can be any of various types of devices including a computer system a server computer system a laptop computer system a notebook computing device a portable computer a PDA a handheld mobile computing device a mobile wireless telephone e.g. a satellite telephone a cellular telephone etc. an Internet appliance a television device a DVD device a Blu Ray disc player device a DVR device a wearable computing device or other wireless or wired device that includes ASIC that processes data according to one or more methods and or processes described herein. In one or more embodiments one or more of CCDs media servers databases and and CSDs can include one or more same or similar structures and or functionalities described with reference to CD .

Turning now to a computing device is illustrated according to one or more embodiments. As shown CD can include graphics processing unit GPU coupled to memory medium . For example GPU can be or include a general purpose graphics processing unit GPGPU . In one or more embodiments memory medium can store data and or configuration information that can be utilized by GPU in implementing one or more systems methods and or processes described herein. For example memory medium can store a CFG and CFG can include configuration information and or one or more instructions that can be utilized by GPU to implement one or more systems methods and or processes described herein.

In one or more embodiments memory medium can store data and or instructions that can be executed by GPU . For example memory medium can store one or more APPs and or an OS . For instance one or more APPs and or an OS can include instructions of an ISA associated with GPU . In one or more embodiments CD can be coupled to and or include one or more of a display a keyboard and a pointing device e.g. a mouse a track ball a track pad a stylus etc. . In one or more embodiments a touch screen can function as a pointing device. In one example the touch screen can determine a position via one or more pressure sensors. In another example the touch screen can determine a position via one or more capacitive sensors.

As illustrated CD can include one or more network interfaces and . In one example network interface can interface with a wired network coupling such as a wired Ethernet a T 1 a DSL modem a PSTN or a cable modem among others. In another example network interface can interface with a wireless network coupling such as a satellite telephone system a cellular telephone system WiMax WiFi or wireless Ethernet among others.

In one or more embodiments CD can be any of various types of devices including a computer system a server computer system a laptop computer system a notebook computing device a portable computer a PDA a handheld mobile computing device a mobile wireless telephone e.g. a satellite telephone a cellular telephone etc. an Internet appliance a television device a DVD device a Blu Ray disc player device a DVR device a wearable computing device or other wireless or wired device that includes a GPU that processes data according to one or more methods and or processes described herein. In one or more embodiments one or more of CCDs media servers databases and and CSDs can include one or more same or similar structures and or functionalities described with reference to CD .

Turning now to an exemplary client interface is illustrated according to one or more embodiments. As shown a display can display a client interface . In one or more embodiments display can be coupled to or included in a computing device. In one example display can be coupled to CCD . In another example display can be included in CCD . In one or more embodiments client interface can be or include a web browser e.g. Microsoft Internet Explorer Safari Firefox Chrome Opera etc. a window of an application a full screen display area of display or a partial screen display area of display . For example client interface can be utilized by APP to provide information to and or receive user input from a user. In one or more embodiments an APP e.g. an APP of APPs can receive information from a media server e.g. a media server of media servers via a network e.g. network and can provide the information to a user via client interface .

In one or more embodiments the APP e.g. the APP of APPs can be or include a plug in to another application e.g. a web browser and or can receive configuration information from a media server. In one example the plug in can include a Flash Player available from Adobe Systems and the plug in can interface with the customer via client interface . In another example the plug in can include a Java virtual machine and the plug in can interface with the customer via client interface . In one or more embodiments client interface can be implemented via one or more of JavaScript EMCAScript Java an extensible markup language XML and a hypertext markup language HTML e.g. HTML version four 4 HTML version five 5 etc. . For example the APP e.g. the APP of APPs can be or include a web browser and the web browser can receive information from a media server that includes one or more of JavaScript EMCAScript Java e.g. Java byte code XML and HTML version 5 and the web browser can implement client interface based on the received information that includes one or more of JavaScript EMCAScript Java XML and HTML version 5.

As illustrated client interface can include an interactive media interface that can provide information to a customer e.g. a user of a CCD and or receive information from a customer. In one example interactive media interface can include a media interface that can display one or more pictures one or more videos e.g. motion pictures one or more graphics and or text associated with an object . In one instance object can represent and or include a simulation of an object for sale by a retail establishment. In a second instance object can provide and or implement an emulation of an object e.g. an emulation of a physical mobile device a physical computing device etc. . In another instance object can represent and or include a simulation of an object that can be serviced and or for which service can be provided. In a second example interactive media interface can include an interactive communication interface that can be utilized by one or more of the customer and another user e.g. a sales representative a service representing a representative of a retail establishment a representative of a service provider an artificial intelligence system a neural network system etc. .

In another example interactive media interface can include one or more icons or button that can be provided to receive user input. In one or more embodiments object can include a representation of and or a simulation of a device a computer a cellular telephone a tablet computing device a digital music player device a satellite telephone a dress a pair of jeans a bathing suit a shoe lingerie underwear a helmet a sock stockings a watch a necklace a bracelet a television software e.g. a drawing program a word processing program a music player program a compiler a computer operating system a video editing program etc. a printer device a tire a rim an automobile part an automobile a piece of furniture or a stapler among others.

In one or more embodiments one or more of icons can be selected by the customer to change a viewing angle of object . In one example icon can be selected to rotate object about a first axis by a number of degrees in a first direction of rotation with respect to the first axis. In a second example icon can be selected to rotate object about the first axis by a number of degrees in a second direction of rotation with respect to the first axis. For instance the second direction of rotation can be opposite to the first direction of rotation. In a third example icon can be selected to rotate object about a second axis by a number of degrees in a third direction of rotation with respect to the second axis. In another example icon can be selected to rotate object about the second axis by a number of degrees in a fourth direction of rotation with respect to the second axis. For instance the fourth direction of rotation can be opposite to the third direction of rotation. In one or more embodiments a pointer can be dragged across media interface to rotate object in a direction about an axis.

In one or more embodiments icon can be selected to display a video that includes and or is associated with object . For example icon can be selected to display an interactive video that includes and or is associated with object . For instance media interface can display a simulation that includes and or is associated with object . In one or more embodiments icon can be selected to receive information about and or associated with object . In one example interactive communication interface can provide the customer with information when icon is actuated or selected. In one instance an avatar e.g. a graphical approximation and or rendering of an actual person or a simulated person can be displayed via interactive communication interface that can provide the customer with information. In another instance interactive communication interface can provide the customer with a video of a service representative. For example a customer service representative can interact with the customer directly via text chat and or video chat via interactive communication interface .

In one or more embodiments a customer service representative can interact with a customer directly by controlling media interface via a media server e.g. a media server of media servers . For example the customer service representative can via a media server rotate object about an axis zoom in on at least a portion of object zoom out from object start a simulation of or associated with object or start a video of or associated with object among others. For instance media server can receive control information from the customer service representative via a CSD and can provide the control information to APP via network and APP can perform via interactive media interface and or media interface one or more functions associated with the control information.

In one or more embodiments audio information e.g. speech music etc. can be provided to the customer via a sound output device included in or coupled to a computing device utilized by the customer. In one example CCD can include a speaker and speech from a customer service representative can be provided to the customer via the speaker. In a second example CCD can include a speaker and speech associated with object can be provided to the customer via the speaker. In another example CCD can include a speaker and music associated with object can be provided to the customer via the speaker.

In one or more embodiments icons and can be selected to adjust a size of object . In one example icon can be selected to increase a size of object . For instance increasing a size of object can include zooming in on object and or magnifying at least a portion of object . In another example icon can be selected to decrease a size of object . For instance decreasing a size of object can include zooming out from object .

In one or more embodiments a first APP can provide an application based tutorial that can walk a user through steps to use a second APP of a computing device e.g. CD . For example the first APP can utilize one or more beacons as a transparent layer APP to highlight intended action and or motion of the user interaction with the computing device and when the user interacts with the computing device either a physical implementation or a virtual implementation such as a virtual machine implementation the user action e.g. user input is provided to the first APP via a transparent layer and then to an interface manager e.g. a window manager an APP manager etc. and or the second APP. In one instance the user action e.g. user input can be provided to the first APP via a transparent layer illustrated in and the first APP can provide the user action a window manager and or the second APP. In another instance the first APP can utilize a visual beacon illustrated in within transparent layer to highlight and or signal an intended action and or a motion of the user interaction with the computing device.

In one or more embodiments if the user moves a location of an APP icon such that a beacon would be in an incorrect location the first APP can be configured to attain and or procure coordinates of APP icons such that one or more beacons can be provided at respective appropriate one or more areas within a transparent layer. For example the first APP can attain and or procure coordinates of APP icons illustrated in such that one or more beacons e.g. one or more visual signals can be provided at respective appropriate one or more areas within transparent layer . For instance the first APP can attain and or procure coordinates of APP icons during an initialization phase and or a start up sequence of its execution.

Turning now to an exemplary method of an application walk through is illustrated according to one or more embodiments. At a first APP can start. In starting the first APP the first APP can attain and or procure coordinates of APP icons during an initialization phase and or a start up sequence of its execution according to one or more embodiments. At the first APP can indicate a user action. In one example the first APP can indicate a user action via a beacon e.g. a visual signal such as a beacon illustrated in . For instance beacon can indicate that the user action should include selecting APP icon . In another example the first APP can indicate via a swipe indicator illustrated in that the user should and or could swipe the display.

In one or more embodiments an APP icon can be moved during use of a computing device. For example APP icon could have been moved from a first location to a second location during use of the computing device illustrated in and the first APP can indicate a user action via beacon illustrated in . In one instance the first APP can attain and or procure via a data structure stored in the computing device coordinates of APP icon during an initialization phase and or a start up sequence of its execution. In another instance the first APP can attain and or procure via a data structure stored in the computing device coordinates of APP icon prior to indicating the user action via beacon .

At the first APP can receive user input. For example the first APP can receive the user input via transparent layer as illustrated in . For instance transparent layer can be a conceptual transparent layer its purposes and or functionality described herein. In one or more embodiments the first APP can receive the user input via a portion of the user and or a pointing device. In one example the first APP can receive the user input via a portion of the user such as a digit. For instance the first APP can receive the user input via a finger as illustrated in . In another example the first APP can receive the user input via one or more of a mouse a stylus a trackball and a touchpad among others. For instance CD can be or include a virtual machine and the user can interface with CD via a media interface e.g. a web browser illustrated in where the user can utilize one or more of a mouse a stylus a trackball and a touchpad among others to position a pointer to select APP icon indicated via beacon . In one or more embodiments media interface can include one or more functionalities and or structures as media interface .

In one or more embodiments the first APP can filter user input. For example the first APP can receive user input via a portion of transparent layer that includes a beacon and or b an area that includes beacon and an area around beacon and the first APP can exclude and or redact user input outside and or not included in those areas. At the first APP can determine if the user input is within an area that includes a beacon and or b an area that includes beacon and an area around beacon .

If the user input is not within the area that includes a beacon and or b the area that includes beacon and the area around beacon the user input can be excluded and or redacted at . In one or more embodiments excluding and or redacting the user input can include discarding the user input.

If the user input is within the area that includes a beacon and or b the area that includes beacon and the area around beacon the first APP can provide the user input to one or more of a second APP and an interface manager among others at . In one example the first APP can provide the user input to an interface manager e.g. a window manager an APP manager etc. . For instance the user input provided to the interface manager can select APP icon . In another example the first APP can provide the user input to a second APP. For instance after an APP icon is selected a second APP can execute and the first APP can provide the user input to the second APP.

Turning now to another exemplary method of an application walk through is illustrated according to one or more embodiments. At a first APP can be started. For example the first APP can be APP and APP can be started. At a second APP can be started. For example the second APP can be an APP of APPs and the APP of APPs can be started. In one or more embodiments the first APP can start the second APP.

At the first APP can indicate an action to be performed via the second APP. In one example the first APP can indicate an action to be performed via the second APP via a message as illustrated in . For instance the second APP can be or include an electronic mail email client and the first APP can indicate to enter an email login via input area of email APP interface as illustrated in . In another example the first APP can indicate an action to be performed via the second APP via indicator as illustrated in . For instance indicator can indicate that the user should and or could swipe the display. For example additional forecast days can be displayed via a weather application interface when the user swipes in the direction indicated via indicator . In one or more embodiments indicator can be animated. For example indicator can be animated to indicate that the user should and or could swipe the display.

As illustrated in display can display email APP interface and a scroll bar among others. As shown email APP interface can display text input areas and check boxes and and buttons and or icons and . As illustrated the first APP can display message via display .

With reference again to the method of the first APP can receive user input at . For example the first APP can receive user input via touch screen illustrated in . In one instance the user input can include one or more alpha numeric characters. In another instance the user input can a swipe.

In one or more embodiments the first APP can receive the user input via touch screen . As illustrated in the first APP can receive the user input via shaded area of touch screen for example. Shaded area is for illustrative purposes and the first APP can receive the user input via an area corresponding to shaded area that can be transparent.

With reference again to the method of the first APP can determine if the user input indicates an exit and or conclusion of the first APP at . For example the first APP can determine if the user input indicates an exit and or conclusion of the first APP e.g. an exit and or conclusion of the walk through if the user input indicates a selection of an exit and or conclusion icon. For instance the user input can indicate a selection of an exit and or conclusion icon illustrated in .

If the user input indicates an exit and or conclusion of the first APP the first APP can exit and or conclude at . If the user input does not indicate an exit and or conclusion of the first APP the first APP can provide the user input to the second APP at . In one example the first APP can provide the user input to the second APP via APP manager . For instance the first APP can provide the user input to queue and APP manager can provide the user input to the second APP. In another example the first APP can provide the user input to the second APP via kernel . For instance the first APP can provide the user input to queue and the user input stored in queue can be provided to the second APP via at least one method system and process described herein.

At the first APP can determine if addition user input is applicable. For example the first APP can be configured for a number of scenarios of the second APP. For instance the first APP can be configured to additionally aid a user with configuring one or more of text input areas and and selecting between check boxes and . If the first APP determines that addition user input is applicable the method can proceed to where the first APP can indicate an action to be performed via the second APP. For example the first APP can indicate an action to be performed via the second APP via message as illustrated in . For instance the first APP can indicate to enter a name via input area of email APP interface as illustrated in . If the first APP determines that addition user input is not applicable the first APP can exit at . For example the first APP can determine that addition user input is not applicable via a conclusion of a set up and or walk through process.

Turning now to a method of operating an APP manager is illustrated according to one or more embodiments. At APP manager can receive data from a first APP. For example the first APP can be APP and APP can provide the data to APP manager . At APP manager can store the data from the first APP. For example APP manager can store the data from the first APP via queue .

At APP manager can remove focus from the first APP. In one or more embodiments focus indicates a component of a GUI that is selected to receive input. For example text pasted from a clipboard and or entered via a keyboard can be sent to the component that has the focus. In one or more embodiments APP manager withdraws and or removes the focus an APP by giving another APP the focus.

At APP manager can provide focus to a second APP. For example the second APP can be an APP of APPs . At APP manager can provide to the second APP the data received from the first APP. In one or more embodiments APP manager can provide to the second APP the data received from the first APP via a callback e.g. a subroutine a function a procedure a subprogram a method a callable unit etc. of the second APP. For example APP manager can provide to the second APP the data received from the first APP via an instantiation of the callback of the second APP with the data received from the first APP as a parameter of the callback of the second APP.

In one or more embodiments APP manager can utilize multiple callbacks of the second APP. In one example APP manager can utilize a first callback of the second APP to handle text e.g. user input text . In a second example APP manager can utilize a second callback of the second APP to handle a check or uncheck of a checkbox. In third example APP manager can utilize a third callback of the second APP to handle movement of a scrollbar. In another example APP manager can utilize a fourth callback of the second APP to handle a swipe of a user interface.

At APP manager can remove focus from the second APP. At APP manager can provide focus to the first APP. In one or more embodiments the first APP can control a second APP via APP manager and the method of .

As described above CD can be or include a virtual machine and the user can interface with CD via media interface e.g. a web browser illustrated in . In one or more embodiments the first APP described with reference to the walk throughs can be or include media interface . For example media interface can execute instructions that can implement and or function as the first APP. For instance media interface can execute a script e.g. JavaScript EMCAScript etc. and or byte code e.g. Java byte code that can function as the first APP described with reference to the walk throughs. In this fashion a user can utilize configure and or set up a mobile device according to one or more embodiments as described further below.

Turning now to exemplary diagrams of ordering and configuring a computing device are illustrated according to one or more embodiments. In one or more embodiments a user customer can utilize a CCD to interface with a merchant CD e.g. an online retailer and order a computing device via the merchant CD and a network. For example as illustrated in a user customer can utilize CCD to interface with a merchant CD e.g. an online retailer and order a computing device e.g. CD via merchant CD and network . In one or more embodiments CD can be any of various types of devices including a computer system a server computer system a laptop computer system a notebook computing device a portable computer a PDA a handheld mobile computing device a mobile wireless telephone e.g. a satellite telephone a cellular telephone etc. an Internet appliance a television device a DVD digital video disc player device a Blu Ray disc player device a DVR digital video recorder device an in vehicle computing device a wearable computing device e.g. illustrated in a watch a smart watch or other wireless or wired device that includes a processor that executes instructions from a memory medium.

In one or more embodiments the user customer can utilize the CCD to interface with a computer system CS and configure a virtual CD e.g. a virtual machine via the network. For example user customer can utilize CCD to interface with a CS and configure a virtual CD e.g. a virtual machine via network . In one or more embodiments one or more configurations of one or more respective virtual computing devices CDs can be stored. In one example CS can include storage and the one or more configurations of the one or more respective virtual CDs can be stored via the storage included in CS . In a second example storage can be coupled to a network and the one or more configurations of the one or more respective virtual CDs can be stored via the storage coupled to the network. In another example as illustrated in a storage can be coupled to CS and the one or more configurations of the one or more respective virtual CDs can be stored via storage .

As shown in a CFG can be stored via storage . In one or more embodiments CFG can include one or more sound recordings e.g. MP3 songs musical pieces voice memos conversations lectures etc. one or more contacts e.g. contact information associated with people places companies etc. login information online account information one or more bookmarks e.g. web browser book marks one or more ebooks one or more social networking sites respective information e.g. Facebook information Twitter information MySpace information Foursquare information Last.fm information Google information etc. associated with a user of a MD and or one or more mobile device apps e.g. smart phone apps tablet computer apps music player apps in vehicle apps etc. among others.

In one or more embodiments a retailer a seller etc. can provide a physical CD to a physical deliver service e.g. a postal service a parcel service a courier service a courier an in store pick up an automobile dealership etc. . For example as illustrated in a retailer a seller etc. can provide CD e.g. in a physical embodiment to a physical deliver service e.g. a postal service a parcel service a courier service a courier an in store pick up etc. . As shown in CD can be stored via warehouse e.g. a physical warehouse a physical stockroom etc. and CD can be provided to physical delivery service .

In one or more embodiments providing a physical CD to a physical delivery service can include marking packaging of the physical CD. In one example packaging of the physical CD can be marked with information that can identify one or more of the user and the physical CD. In another example packaging of the physical CD can be marked with address information. For instance the address information can include a physical address associated with user that is utilizable by physical deliver service to deliver the physical CD to user .

In one or more embodiments the user customer can receive the physical CD via a physical deliver service e.g. a postal service a parcel service a courier service a courier an in store pick up etc. . For example as illustrated in user customer can receive CD via a physical deliver service e.g. a postal service a parcel service a courier service a courier an in store pick up an automobile dealership etc. .

In one or more embodiments a CD received via a physical delivery service can be coupled to a network and the CD can receive and or retrieve a configuration that was configured prior to receiving the CD via the physical delivery service. For example as illustrated in CD can be coupled to network and CD can receive and or retrieve CFG . For instance CS can retrieve CFG from storage and can provide CFG to CD via network .

In one or more embodiments a CD can be configured at a place associated with a retailer a seller etc. For example as illustrated in CD can be configured at warehouse and CD can be provided to physical delivery service after CD is configured with CFG . In one instance CD can be configured with CFG at warehouse in a wireless fashion. In another instance CD can be configured with CFG at warehouse in a wired fashion. As shown in physical delivery can provide CD configured with CFG to customer user .

In one or more embodiments a configuration can be provided to one or more computing devices. For example as illustrated in CFG can be provided to one or more of CCD and a mobile device MD . In one or more embodiments one or more computing devices can emulate a MD based on a provided configuration. For example user customer can begin to utilize an emulation of a configured MD via one or more of CCD and MD . In one instance user customer can begin to utilize an emulation of CD configured with CFG via CCD and or MD before a physical delivery of CD . In another instance user customer can begin to utilize an emulation of CD configured with CFG via CCD and or MD without any physical delivery of CD .

Turning now to a method of creating a configuration of a computing device and delivering the configuration is illustrated according to one or more embodiments. At a request for a computing device can be received. For example merchant CD can receive the request for the computing device. In one instance the request for the computing device can be or include an order for the computing device. In another instance as illustrated in a user customer can utilize CCD to interface with a merchant CD e.g. an online retailer and order the computing device e.g. CD via merchant CD and network . In one or more embodiments the requested and or ordered computing device can be a physical mobile device.

At an emulator corresponding to the requested and or ordered computing device can be requested. For example merchant CD can request the emulator of CS . At CS can receive the emulator allocation request. At the emulator can be allocated. For example an emulator of emulators illustrated in can be allocated. For instance the emulator can correspond to a physical mobile device that includes a physical processor a physical memory and a physical integrated circuit.

At the emulator can emulate the computing device. For example the emulator can be or include a data processing emulator such as QEMU SPIM VMware VirtualBox or Bochs among others. At data can be received via a network. For example CS can receive data from user via network .

At the received data can be provided to the emulator. At a configuration can be created. For example the received data can be utilized to configure the emulated computing device and or create a configuration e.g. CFG . For instance CFG can include one or more sound recordings e.g. MP3 songs musical pieces voice memos conversations lectures etc. one or more contacts e.g. contact information associated with people places companies etc. one or more bookmarks e.g. web browser book marks one or more ebooks one or more social networking sites respective information e.g. Facebook information Twitter information MySpace information Foursquare information Last.fm information Google information etc. associated with user and or one or more mobile device apps e.g. smart phone apps tablet computer apps music player apps in vehicle apps etc. among others based on and or created via the received data.

At the configuration can be stored. In one example the configuration can be stored via storage . In another example the configuration can be stored via one or more of storages illustrated in . At user input indicating a delivery method can be received. In one example CS can receive the user input indicating the delivery method. In another example merchant CD can receive the user input indicating the delivery method.

At a delivery method can be determined. In one example CS can determine the delivery method. In another example merchant CD can determine the delivery method. In one or more embodiments delivery of the configuration can include one or more of delivering the configuration via the network e.g. network and delivering a physical computing device configured with the configuration.

If the delivery of the configuration e.g. CFG includes delivering the configuration via the network e.g. network the configuration can be provided to the user via the network at . For example CFG can be delivered to CCD and or to MD via network as illustrated in . If the delivery of the configuration e.g. CFG includes delivering the physical computing device configured with the configuration the physical computing device can be configured with the configuration at and the physical computing device e.g. CD can be provided to a physical delivery service at . For instance the physical delivery service can provide the physical computing device e.g. CD as described herein.

Turning now to exemplary diagrams of a simulated object are illustrated according to one or more embodiments. As shown in simulated object can include one or more of a wireless telephone e.g. a cellular telephone a satellite telephone a wireless Ethernet telephone etc. a digital music player a tablet computing device and a PDA among others. As illustrated object can include one or more of a simulated sound output device a simulated display and simulated buttons .

As shown simulated display can display one or more of a picture or graphic and one or more buttons or icons . In one or more embodiments a customer e.g. a user of a CCD can select and or actuate one or more of icons and buttons and simulated object can perform one or more simulated functions associated with a selection or simulation of a selected icon or button of object . In one example the customer can select button and a numeric keypad can be displayed via simulated display . For instance keys of the numeric keypad can simulate a keypad of a telephone. In a second example the customer can select button and an interface to a digital music player can be displayed via simulated display . In another example an icon of icons can be selected to simulate a respective application of a calculator application a clock application a calendar application a web browser application a video chat application a video player e.g. a motion picture player application and a setting or configuration application.

In one or more embodiments a simulation of object and or one or more simulated features and or functions can be performed via a CCD. In one example a client side script e.g. JavaScript EMCAScript etc. can be executed by a web browser of the CCD. In a second example a compiled client side program e.g. Java byte code can be executed by a web browser of the CCD. In one or more embodiments a simulation of object and or one or more simulated features and or functions can be performed via a media server. In one example the media server can receive information from a CCD that indicates a simulated button or icon has been selected and can utilize simulated display via media interface to display functionality associated with the selected button or icon.

As shown in simulated display can display a simulation of a video chat application. In one example a simulated picture or graphic of a person with whom the customer is chatting can be displayed via simulated display . In another example a simulated picture or graphic of the customer can be displayed via simulated display . For instance picture or graphic of the customer can demonstrate a front facing camera of simulated object . In one or more embodiments the simulation of the video chat application can be started and or executed in response to a selection and or actuation of button or icon of . For example the simulation of the video chat application can be a video e.g. a motion picture that can be played via simulated display .

In one or more embodiments simulated display can be utilized to play one or more videos e.g. motion pictures . In one example simulated display can be utilized to play a clip from Youtube. In a second example simulated display can be utilized to play a trailer to a movie. In another example simulated display can be utilized to play videos that demonstrate one or more features of simulated object . In one or more embodiments user input can be received to pause play rewind and or fast forward the video played via simulated display .

In one or more embodiments the customer can select button to return to a home state or location of simulated object . For example the home state or location of simulated object is illustrated in . As illustrated in a picture or graphic can be displayed via simulated display . For example picture or graphic can be included in a graphical advertisement for a physical device associated with its simulated object .

Turning now to an exemplary diagram of a simulated object with operational aids is illustrated according to one or more embodiments. As shown in media interface can display where a headphone or headset connector can be plugged into a device associated with simulated object and or can display where a USB universal serial bus connector can be plugged into a device associated with simulated object . In one or more embodiments a demonstration and or simulation of coupling connectors to a device can be automated.

In one example the customer can select How to use headphones with your device from a help menu. For instance a media server can provide to a media interface data and or information that includes a demonstration and or simulation that demonstrates and or simulates a process of coupling headphones with simulated object . In another example the customer can select How to charge your device or connect your device to a PC or a Mac from a help menu. For instance a media server can provide to a media interface data and or information that includes a demonstration and or simulation that demonstrates and or simulates a process of coupling simulated object with a computing device. For example the demonstration and or simulation can simulate a process of coupling simulated object with at least one of a PC a Mac and a charging device e.g. a wall charger a solar charger etc. .

In one or more embodiments a demonstration and or simulation of connecting connectors to a device can instantiated and or coordinated by a service representative via a CSD and or a media server. For example a service representative can be communicating with a customer via telephone or via interactive communication interface and can provide control information via one or more of CSD network and media server to interactive communication interface and or an application associated with interactive communication interface . For instance the service representative can provide control information via one or more of CSD network and media server to client interface and or an application associated with client interface and media interface can display a demonstration of connecting headphone or headset connector and or USB connector to a device associated with simulated object .

In one or more embodiments a simulated object can be an emulated object. For example simulated object can be an emulation of a physical device. In one instance simulated object can be an emulation of CD . In another instance simulated object can be an emulation of CD and CS can emulate CD .

Turning now to an exemplary system that supports physical device emulation is illustrated according to one or more embodiments. As shown one or more of CCDs can be coupled to CS via network . In one or more embodiments CS can include and or execute one or more of a server app a server APP a server APP and an API application programming interface server APP . As illustrated API server APP can be coupled to server APP server APP can be coupled to server APP and server APP can be coupled to server APP . In one or more embodiments a first server APP can be coupled to a second server APP via one or more of a named pipe an anonymous pipe a pipe a Unix domain socket a network connection e.g. a network socket connection such as at least one of TCP UDP and IP among others a D Bus Desktop Bus an IPC interprocess communication e.g. inter thread communication inter application communication etc. a shared memory interface message passing a file and a file system among others.

As illustrated server APP can include one or more of an emulator proxy and one or more of emulators and one or more of emulators can be coupled to emulator proxy . As shown server APP can include one or more of one or more emulator proxies and one or more of emulators and one or more of emulators can be coupled to respective one or more emulator proxies . In one or more embodiments one or more of emulators can include one or more of the same similar or different functionalities and or structures described with reference to one or more emulators and one or more of emulator proxies can include one or more of the same similar or different functionalities and or structures described with reference to emulator proxy .

In one or more embodiments one or more of emulator proxy and one or more of emulators can include or be one or more of a process a task an application and a thread among others and an emulator of emulators can be coupled to emulator proxy via one or more of a named pipe an anonymous pipe a pipe an Unix domain socket a network connection a D Bus an IPC a shared memory interface message passing a file and a file system among others.

As shown one or more of CCDs can include and or execute respective one or more client interfaces respective one or more interactive media interfaces and or respective one or more media interfaces . In one or more embodiments one or more client interfaces can include same or similar one or more functionalities described with reference to client interface one or more interactive media interfaces can include same or similar one or more functionalities described with reference to interactive media interface and or one or more media interfaces can include same or similar one or more functionalities described with reference to media interface .

As illustrated one or more of mobile devices MDs can be coupled to CS via network . As shown CS can include a storage can be coupled to a storage and or can be coupled to a storage via network . In one or more embodiments one or more of storages can include non volatile storage and or memory that can store configurations and or data of one or more of MDs .

In one or more embodiments CS and or storages can provide and or implement one or more system for synchronizing and or storing preferences configuration s installed applications of a physical MD in a system independent format e.g. the system can be used for multiple OS types and or multiple platform types . In one example one or more granular levels e.g. storing and or retrieving data for recovery may not require that a recovered system synchronize its data information and or configuration with CS and or storages of data e.g. data such as applications contact list s photos videos ring tone s sound preference s etc. can be stored and or retrieved. For instance an API can be provided and or made available that can be utilized in storing and retrieving associated information and or data of and or associated with one or more physical mobile devices. In another example multiple devices can be configured and or recovered from CS and or storages . In one instance each of the multiple devices can be configured and or recovered with respective associated data and or configuration s .

In another instance multiple devices can be configured and or recovered from CS and or storages . For example each of the multiple devices can be configured and or recovered with same data and or configuration s . For instance a company can issue multiple wireless telephones to a sales group and each of the multiple wireless telephones can be configured with one or more of a contact list sales presentations and smart phone applications among others for the sales group.

Turning now to an exemplary method of operating an API server APP is illustrated according to one or more embodiments. At a first request from a CCD e.g. a CCD of CCDs can be received. For example API server APP included in and or executed by media server can receive via network the first request from the CCD. In one instance API server APP can receive via network the first request from media interface included in and or executed by CCD . In a second instance API server APP can receive via network the first request from media interface included in and or executed by CCD . In another instance API server APP can receive via network the first request from an interactive media interface e.g. an interactive media interface of interactive media interfaces or a client interface e.g. a client interface of client interfaces .

In one or more embodiments the first request can include a request for connection information. For example the first request can include a XMLHttpRequest XHR that includes the request for the connection information. At a second request can be provided to another server APP. For example API server APP can provide the second request to server APP .

In one or more embodiments providing the second request to server APP can include initiating a remote procedure call RPC with server APP . For example providing the second request to server APP can include utilizing a RPC framework and or a RPC functional library. For instance providing the second request to server APP can include initiating a Thrift request with server APP . In one or more embodiments Thrift can include one or more a library e.g. a software library and one or more code generation tools that can be utilized to define data types and service interfaces in a language neutral file and generate instructions e.g. software executable by a processing system that can be utilized in RPC clients and servers that are executable on respective computing devices.

At address information can be received. For example API server APP can receive the address information from the other server APP e.g. server APP . In one or more embodiments the address information from the other server can include one or more of an IP address a port number e.g. a TCP port number a UDP port number etc. and audio proxy information among others. In one example one or more of the IP address and the port number can be utilized with a virtual network console VNC and or a remote network console. In a second example one or more of the IP address and the port number can be utilized with one or more of a remote desktop connection an Apple remote desktop connection and a remote X11 session or connection among others. In another example the audio proxy information can include information associated with a websocket proxy.

In one or more embodiments a first computing device and a second computing device can communicate via a websocket API and or protocol. In one example the first computing device can provide via a network a first set of one or more TCP packets to a second computing device via the websocket API and or protocol. For instance providing the first set of one or more TCP packets to the second computing device can include providing via HTTP or HTTPS the first set of one or more TCP packets to the second computing device. In another example the second computing device can provide via the network a second set of one or more TCP packets to the first computing device via the websocket API and or protocol. For instance providing the second set of one or more TCP packets to the second computing device can include providing via HTTP or HTTPS the second set of one or more TCP packets to the first computing device.

At the address information received at can be provided to the CCD. For example API server APP can provide the address information to the CCD. For instance API server APP can provide a XHR object that includes the address information to the CCD. In one or more embodiments the CCD can utilize the address information to communicate with emulator proxy .

Turning now to an exemplary method of operating a server APP is illustrated according to one or more embodiments. In one or more embodiments the method illustrated in can be utilized in operating server APP or other server APPs that include same or similar one or more functionalities of server APP . At the second request e.g. provided at can be received. For example server APP included in and or executed by media server can receive the second request from API server APP .

At an emulator allocation request can be provided to an emulator server APP. For example server APP can provide an emulator allocation request to an emulation server APP . At a response from the emulator server APP can be received. For example server APP can receive from emulator server APP a response to the emulator allocation request.

At it can be determined if the response from the emulator server APP indicates that an emulator has been allocated. For example server APP can determine if the response from the emulator server APP indicates that an emulator has been allocated. If the response from the emulator server APP indicates that an emulator has not been allocated another emulator server APP can be determined at . For example server APP can determine another emulator server APP e.g. different from emulator server APP such as server APP . At an emulator allocation request can be provided to the other emulator server APP and the method can proceed to . For example server APP can provide an emulator allocation request to the other emulation server APP.

If the response from the emulator server APP indicates that an emulator has been allocated address information associated with one or more of an emulator and an emulator proxy can be determined at . In one example server APP can determine the information associated with one or more of the emulator and the emulator proxy from the response from the emulator server APP and or based on the response from the emulator server APP.

In another example server APP can receive additional information from the emulator server APP and can determine the information associated with one or more of the emulator and the emulator proxy from the additional information from the emulator server APP and or based on the additional information from the emulator server APP. At the address information can be provided to the API server APP. For example server APP can provide the address information associated with one or more of the emulator and the emulator proxy to API server APP .

Turning now to an exemplary method of operating an emulator server APP is illustrated according to one or more embodiments. At an emulator allocation request can be received. For example server APP can receive an emulator allocation request from server APP . At it can be determined if an emulator can be allocated. For example server APP can determine if an emulator can be allocated. In one or more embodiments determining if an emulator can be allocated can include determining one or more of an amount of memory is available a thread can be allocated a process can be allocated a task can be allocated a processing load is below a threshold and an amount of bandwidth is below a threshold among others. If an emulator is not allocated a response that indicates that an emulator has not been allocated can be provided at . For example server APP can provide to server APP a response that indicates that an emulator has not been allocated.

If an emulator can be allocated an emulator can be allocated at . For example server APP can allocate an emulator. For instance server APP can allocate an emulator such as an emulator of emulators . In one or more embodiments allocating an emulator can include marking an emulator from a pool of available emulators as no longer available to be allocated by an allocation request and providing the marked emulator as available to a requestor.

In one or more embodiments an emulator can emulate a data processing system. In one example the emulated data processing system can include an emulated memory coupled to an emulated processor that executes instructions from an ISA instruction set architecture that can be stored in the emulated memory. In one instance the emulated processor can execute instructions from at least one of an ARM ISA a MIPS ISA an x86 ISA a PowerPC ISA and a DSP digital signal processing ISA among others.

In a second instance the emulated memory can include at least one of emulated DRAM dynamic random access memory SRAM static random access memory FRAM ferroelectric random access memory FLASH memory e.g. NAND FLASH memory EEPROM electrically erasable read only memory EPROM erasable programmable read only memory PROM programmable read only memory and ROM read only memory among others. In a third instance the emulated data processing system can include at least one emulated bus coupled to the emulated processor such as at least one emulated bus of an IC inter integrated circuit bus an universal serial bus USB a serial peripheral interconnect SPI bus a peripheral component interconnect PCI bus a peripheral component interconnect express PCIe and an advanced high performance bus AHB among others.

In another instance one or more emulated devices and or interfaces can be coupled to the emulated processor such as one or more of an emulated wireless Ethernet interface e.g. a WiFi interface an Ethernet interface a global positioning system GPS receiver device a GSM global system for mobile communications interface a CDMA code division multiple access interface a WiMAX interface a proximity sensing device a Bluetooth interface a ZigBEE interface a magnetometer an accelerometer a pressure transducer a humidity sensing device a capacitive sensing touch device a resistive sensing touch device an electronic gyroscope a gas sensing device an image sensing device e.g. a digital camera a sound sensing device e.g. a microphone a sound output device e.g. a speaker a digital compass device a temperature sensing device a FM radio receiving device e.g. tunable to one or more frequencies of 87.5 MHz 108 MHz 76 MHz 90 MHz 162.4 MHz 162.55 MHz etc. a FM radio transmitting device e.g. tunable to one or more frequencies of 87.5 MHz 108 MHz 76 MHz 90 MHz etc. a light sensing device a proximity sensing device a radio frequency identification RFID sensing device a RFID transmitting device a near field communication NFC device and a range determining device among others.

In another example the emulated data processing system can include a data processing emulator such as QEMU SPIM VMware VirtualBox or Bochs among others. In one instance SPIM can emulate a processor that can execute instructions from a MIPS ISA. In a second instance QEMU can emulate a processor that can execute instructions from an IA 32 e.g. x86 ISA a MIPS ISA a SPARC ISA an ARM ISA and a PowerPC ISA among others. In another instance QEMU SPIM VMware VirtualBox or Bochs can emulate one or more a memory system a bus a device and an interface among others coupled to an emulated processor. In one or more embodiments an emulator e.g. an emulator of emulators can be or include a virtual machine.

In one or more embodiments an emulator e.g. an emulator of emulators can emulate and or simulate one or more of a physical wireless telephone a physical personal audio device a physical tablet computing device and a physical MP3 player among others and the emulator can execute an operating system and or platform. In one example the emulator can execute a Linux operating system and or platform. In a second example the emulator can execute an Android operating system and or platform. In a third example the emulator can execute an iOS operating system and or platform. In a fourth example the emulator can execute a BSD Berkeley Software Distribution operating system and or platform. In a fifth example the emulator can execute a Windows CE operating system and or platform. In sixth example the emulator can execute a Windows Mobile operating system and or platform. In another example the emulator can execute a VxWorks operating system and or platform.

In one or more embodiments the emulator can execute a data generating thread task and or process that can emulate simulate and or provide an operating system and or platform with data associated with one or more functionalities of an emulated device e.g. a physical wireless telephone a physical personal audio device a physical tablet computing device a physical MP3 player etc. . In one example the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates an incoming telephone call.

In one instance the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates GSM data. In a second instance the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates CDMA data. In a third instance the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates GPS data. In fourth instance the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates frequency modulation FM data e.g. sounds and or text data carried via a FM carrier wave . In another instance the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates amplitude modulation AM data e.g. sounds and or text data carried via a AM carrier wave .

In a second example the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates short messaging system SMS data. For instance the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates a SMS text message. In a third example the data generating thread and or process can provide the operating system and or platform with data that emulates and or simulates user input data. In one instance the data that emulates and or simulates user input data can be generated in response to user input data from a service representative. In another instance the data that emulates and or simulates user input data can be generated in response to user input data from a customer via a CCD utilized by the customer.

At a response that indicates that an emulator has been allocated can be provided. For example server APP can provide to server APP a response that indicates that an emulator has been allocated. At input output I O of the allocated emulator can be coupled to an emulator proxy. For example server APP can couple I O of the allocated emulator to emulator proxy . For instance server APP can couple I O of an emulator of emulators to emulator proxy .

In one or more embodiments utilizing emulator proxy can prohibit direct access of one or more clients e.g. one or more of CCDs to one or more emulators e.g. one or more of emulators . For example prohibiting direct access of one or more clients to one or more emulators can include providing and or implementing access control. In one instance providing and or implementing access control can include limiting a number of ports e.g. TCP ports UDP ports etc. of one or more emulators that one or more clients can access. In another instance providing and or implementing access control can include limiting an amount of time that one or more clients can access one or more emulators and or can include timing out one or more communication couplings after an amount of time transpires without communication activity and or data.

In one or more embodiments utilizing emulator proxy can bridge access of one or more clients e.g. one or more of CCDs utilizing a first communication protocol to one or more emulators e.g. one or more of emulators utilizing a second communication protocol. For example the first communication protocol e.g. a websocket protocol can be different from the second communication protocol e.g. a transmission control protocol . For instance bridging access of one or more clients utilizing the first communication protocol to one or more emulators utilizing the second communication protocol can include translating and or transforming data of the first communication protocol into data of the second communication protocol and or can include translating and or transforming data of the second communication protocol into data of the first communication protocol.

In one or more embodiments I O of an emulator can include video output. For example the video output can include output that would be displayed on a screen of a device e.g. a wireless telephone a personal audio device a tablet computing device a MP3 player etc. and the video output can be provided to a client e.g. a CCD of CCDs . For instance providing the video output to the client can include providing the video output to the client via emulator proxy and or network . In an example the I O of an emulator can be implemented via a VNC protocol and or interface. In one instance the emulator can provide video output to the client via the VNC protocol and or interface. In another instance an operating system and or kernel executing on the emulator can provide video output to the client via the VNC protocol and or interface.

In one or more embodiments I O of an emulator can include audio output. For example the audio output can include sounds that would be produced and or reproduced via a device e.g. a wireless telephone a personal audio device a tablet computing device a MP3 player etc. and the audio output can be provided to a client e.g. a CCD of CCDs . For instance providing the audio output to the client can include providing the audio output to the client via emulator proxy and or network . In an example the I O of an emulator can be implemented via a websocket protocol and or interface.

In one or more embodiments the audio output can include one or more of pulse width modulation data pulse code modulation data raw audio data WAV audio data AIFF audio data AAC audio data MPEG audio data OGG audio data Real Audio audio data and WMA audio data among others. In one example the emulator can provide audio output to the client via the websocket protocol and or interface. In another example an operating system and or kernel executing on the emulator can provide audio output to the client via the websocket protocol and or interface.

In one or more embodiments the method illustrated in can be utilized by multiple emulators. In one example two or more different emulators can emulate a same physical mobile device. In another example two or more different emulators can emulate different respective physical mobile devices and the two or more emulators emulating different respective physical mobile devices can perform differently in accordance with functionalities devices and or structures associated with the different respective physical mobile devices.

In one or more embodiments a first emulator can emulate a first physical device and a second different emulator can emulate a second different physical device. For example a first emulated mobile device emulated via the first emulator that corresponds to a first physical mobile device that can include a first physical processor a first physical memory and a first physical integrated circuit can be different from a second emulated mobile device emulated via the second emulator that corresponds to a second physical mobile device that can include a second physical processor a second physical memory and a second physical integrated circuit where at least one of the first physical processor the first physical memory and the first physical integrated circuit is different from a corresponding one of the second physical processor the second physical memory and the second physical integrated circuit.

In one instance the first physical integrated circuit can include one or more of a WiFi device e.g. a WiFi interface WiMAX device e.g. a WiMAX interface a GPS device a GSM device e.g. a GSM interface a CDMA device e.g. a CDMA interface a satellite telephone network interface a Bluetooth device e.g. a Bluetooth interface a ZigBEE device e.g. a ZigBEE interface a GPS device an Ethernet device e.g. an Ethernet interface a proximity sensing device a magnetometer an accelerometer a pressure transducer a humidity sensing device a capacitive sensing touch device a resistive sensing touch device an electronic gyroscope a gas sensing device an image sensing device e.g. a digital camera a sound output device a sound sensing device e.g. a microphone a digital compass device a temperature sensing device a FM radio receiving device a FM radio transmitting device a light sensing device a RFID sensing device a RFID transmitting device a NFC device and a range determining device among others. In a second instance the first emulator can emulate an iPhone 4 that includes an Apple A4 processor and the second emulator can emulate an iPhone 4S that includes an Apple A5 processor.

In third instance the first emulator can emulate a first wireless telephone that includes a CDMA wireless telephone network interface and the second emulator can emulate a wireless telephone that includes a GSM wireless telephone network interface. In fourth instance the first emulator can emulate a first wireless telephone that includes a cellular wireless telephone network interface and the second emulator can emulate a second wireless telephone that includes a satellite wireless telephone network interface. In a fifth instance the first emulator can emulate a first wireless telephone that includes a first integrated circuit and the second emulator can emulate a second wireless telephone that includes a second integrated circuit that is different from the first integrated circuit. In a sixth instance the first emulator can emulate a first wireless telephone that includes a Trimble GPS device and the second emulator can emulate a wireless telephone that includes a ublox GPS device. In another instance the first emulator can emulate a first physical device that includes an integrated circuit e.g. an audio integrated circuit a graphics processing unit a GPS integrated circuit etc. and the second emulator can emulate a second physical device that does not includes the integrated circuit.

Turning now to an exemplary method of operating a client that can interact with an emulator is illustrated according to one or more embodiments. At functionality can be determined. For example functionality of a client device for providing the GUI can be determined. For instance functionality of a client interface can be determined via a scripting functionality. In one or more embodiments the client interface can implement a media interface e.g. a media interface of media interfaces . For example the client interface can include a web browser and functionality of the web browser can be determined. For instance functionality of the web browser can include one or more of a scripting functionality a plug in functionality a virtual machine functionality and a markup language functionality among others. In one or more embodiments determining functionality can include determining a version of a functionality.

At emulation interface instructions and data can be received. For example the client interface and or a media interface can receive the emulation interface instructions and the emulation interface data from a media server via network . For example the client interface can include a web browser and the web browser can receive the emulation interface instructions and the emulation interface data.

In one or more embodiments the emulation interface instructions can include one or more of a script executable byte code and executable code for a plugin among others. In one example the emulation interface instructions can include the script that can be in accordance with a scripting language such as JavaScript EMCAScript Ruby Python or Lua among others. In a second example the executable byte code can be in accordance with one or more of Ruby byte code Python byte code Lua byte code Ruby byte code and Java byte code among others. For instance the byte code can be executed by a virtual machine. In another example the executable code for a plugin can include Adobe Flash executable code Java executable code Ruby executable code and Lua executable code among others. In one or more embodiments the emulation interface data can include one or more of a graphic and data of a markup language. For example the markup language can include one or more of HTML and XML among others.

At a user interface can be configured. For example a media interface e.g. a media interface of media interfaces can be configured based on the emulation interface instructions e.g. instructions associated with a scripting language such as JavaScript EMCAScript Ruby Python Lua etc. and or instructions associated with Ruby byte code Python byte code Lua byte code Java byte code etc. and or the emulation interface data e.g. HTML data XML data etc. .

At information can be displayed to the customer via the user interface. For example a media interface e.g. a media interface of media interfaces can display the information to the customer based on the emulation interface instructions and or the emulation interface data. At the user interface e.g. a media interface can couple with an emulator e.g. an emulator of emulators . For example a media interface can couple with an emulator via network and or emulator proxy .

At input data can be received. In one example a media interface can receive the input data from an emulator. For instance the media interface can receive the input data from the emulator via network and or emulator proxy . In another example the media interface can receive the input data from a customer e.g. user input data . In one or more embodiments input from the customer can include one or more of a selection of a graphic a selection of an icon a selection of a key e.g. a key from a keypad a key from a keyboard etc. visual input e.g. one or more images from a camera coupled to a CCD and sound input e.g. one or more sounds from a microphone coupled to a CCD among others.

At a source of the input data can be determined. If the source of the data is determined to be from the emulator information can be displayed and or sounds can be produced for the user e.g. customer via the media interface and or a sound output device of a CCD at . In one or more embodiments the method can proceed to where further information can be received. If the source of the data is determined to be from the user the user input data can be provided to the emulator at . For example the user input data can be provided to the emulator via network and or emulator proxy . In one or more embodiments the method can proceed to where further information can be received.

Turning now to an exemplary method of providing multiple simulated objects to multiple CCDs is illustrated according to one or more embodiments. At first information associated with a first network address can be received via a network. For example the first information can be received from a first CCD e.g. CCD . At second information associated with a second network address can be received via the network. For example the second information can be received from a second CCD e.g. CCD . In one or more embodiments at least one of the first information and the second information can include a request for a simulated object and or a request to interact with a simulated object.

At third information associated with the first network address can be provided to the network. For example the third information can be addressed to the first network address e.g. associated with the first CCD . In one or more embodiments the third information can include first data utilizable by a first client interface associated with the first CCD to display a three dimensional simulation of a first simulated object and or to change a viewing angle of the first simulated object.

At fourth information associated with the second network address can be provided to the network. For example the fourth information can be addressed to the second network address e.g. associated with the second CCD . In one or more embodiments the fourth information can include second data utilizable by a second client interface associated with the second CCD to display a three dimensional simulation of a first simulated object and or to change a viewing angle of the first simulated object.

Turning now to a mobile device that emulates a physical device is illustrated according to one or more embodiments. As shown mobile device can include a display a touch screen a sound output device e.g. a speaker and one or more buttons . Mobile device can also include a sound input device e.g. a microphone which is not shown. In one or more embodiments MD can include one or more structures and or one or more functionalities described with reference to one or more mobile devices one or more computer systems and or one or more computing devices described herein.

As illustrated display can display a client interface that can include an interactive media interface that can include a media interface . In one or more embodiments client interface media interface and media interface can include one or more structures and or functionalities of client interface media interface and media interface respectively. As shown media interface can display one or more icons buttons one or more of icons buttons emulated display and or emulated touch screen among others. In one or more embodiments MD can include one or more structures and or functionalities as those described with reference to a CD illustrated in .

In one or more embodiments client interface can provide interactivity between a user and an emulated mobile device. For example client interface can provide interactivity between user and an emulated mobile device emulated via emulator . For instance emulator can be configured with CFG that can produce and or implement an emulated device ED illustrated in emulated via physical MD . In one or more embodiments CFG can include one or more of emulator and MDD . In one example receiving CFG as illustrated in can include receiving emulator and or ED . In another example receiving CFG as illustrated in can include receiving MDD and or ED .

With reference again to MD can host an emulated device in a seamless fashion according to one or more embodiments. For example one or more of virtual display virtual touch screen and virtual buttons can be mapped to respective physical one or more of display touch screen and buttons .

In one or more embodiments user input can halt the emulated device and or return control to physical MD . For example the user can select a button a combination of buttons and or an icon to halt the emulated device and or return control to physical MD . In one instance the user can concurrently actuate buttons and to halt the emulated device and or return control to physical MD . In a second instance the user can concurrently actuate button and select icon to halt the emulated device and or return control to physical MD . In another instance the user can select icon to halt the emulated device and or return control to physical MD .

In one or more embodiments returning control to a physical MD can include returning control and or focus to an OS and or APP of the physical MD. In one example returning control to physical MD can include returning control and or focus to OS illustrated in . In another example returning control to physical MD can include returning control and or focus to APP illustrated in .

Turning now to an exemplary illustration of a walk through of an emulated device is provided according to one or more embodiments. As shown a beacon can be utilized to highlight and or signal an intended action and or a motion of the user interaction with the emulated device. For instance beacon can be utilized within a transparent layer to highlight and or signal an intended action and or a motion of the user interaction with the emulated device. In one or more embodiments beacon can be utilized with an application based tutorial set up and or walk through described herein that can walk step a user through steps to use an APP of an emulated device e.g. ED . For example ED can emulate CD .

Turning now to an exemplary computing device is illustrated according to one or more embodiments. As shown CD can include a processor coupled to a memory medium . In one or more embodiments memory medium can store data and or instructions that can be executed by processor . For example memory medium can store one or more APPs an OS mobile device data MDD MDD client app emulator CFG SIP VoIP proxy and or SMS proxy . For instance one or more of APPs OS client app emulator SIP VoIP proxy and SMS proxy can include instructions of an ISA associated with processor . In one or more embodiments one or more of the processes and or methods described here can be implemented when processor executes one or more of APPs OS client app emulator SIP VoIP proxy and SMS proxy . In one or more embodiments one or more of SIP VoIP proxy and SMS proxy can include one or more structures and or functionalities as those described with reference to respective one or more of SIP VoIP proxy and SMS proxy illustrated in .

In one or more embodiments a client app coupled to emulator . For example client app and emulator can communicate via one or more processes and or methods described herein. In one or more embodiments client app can be or include client interface illustrated in . For example a user of local MD implementing and or including one or more structures and or functionalities of CD can control and or utilize emulator as a telephone via one or more of client interface interactive media interface and media interface . In one or more embodiments one or more interactions with emulator can be conducted via a web browser interfacing with a web server of emulator .

In one or more embodiments MDD can include data and or configuration data associated with a MD. In one example the MDD can include one or more sound recordings e.g. MP3 songs musical pieces voice memos conversations lectures etc. one or more contacts e.g. contact information associated with people places companies etc. one or more bookmarks e.g. web browser book marks one or more ebooks one or more social networking sites respective information e.g. Facebook information Twitter information MySpace information Foursquare information Last.fm information Google information etc. associated with a user of the MD one or more mobile device apps e.g. smart phone apps tablet computer apps music player apps etc. and or one or more configurations of the MD associated with the MDD among others.

As illustrated CD can include a display coupled to processor . In one or more embodiments display can be utilized to display one or more of graphics and or videos to a user. As shown CD can include a network interface . In one example network interface can interface with a wired network coupling such as a wired Ethernet a T 1 a DSL modem a PSTN or a cable modem among others. In another example network interface can interface with a wireless network coupling such as a satellite telephone system a cellular telephone system WiMax WiFi or wireless Ethernet among others.

As shown CD can include a speaker coupled to processor . In one or more embodiments speaker can output one or more sounds that can be received aurally by a user of CD . In one or more embodiments speaker can be coupled to processor via a digital to analog converter DAC . For example the DAC can receive digital signals from processor and transform the digital signals to analog signals.

As illustrated CD can include a microphone coupled to processor . In one or more embodiments microphone can receive audio signals and can transform the audio signals into one or more voltage signals one or more current signal and or one or more digital signals that can be utilized by processor . For example an analog to digital converter ADC can be utilized to transform the one or more voltage signals and or the one or more current signal into the one or more digital signals that can be utilized by processor . In one or more embodiments the ADC can interpose processor and microphone such that microphone is coupled to processor via the ADC.

As shown CD can include a camera coupled to processor . In one or more embodiments camera can include one or more image and or light sensors that can transform received light signals into one or more digital signals that can be utilized by processor . In one or more embodiments CD can be coupled to and or include one or more of a keyboard and a pointing device e.g. a mouse a track ball a track pad a stylus etc. . In one or more embodiments a touch screen can function as a pointing device. In one example the touch screen can determine a position via one or more pressure sensors. In another example the touch screen can determine a position via one or more capacitive sensors.

In one or more embodiments one or more elements of CD can be external to CD . For example as illustrated in one or more of display speaker microphone and camera can be external to CD . In one instance one or more of display speaker microphone and camera can be coupled to CD in a wired fashion. In another instance one or more of display speaker microphone and camera can be coupled to CD in a wireless fashion.

Turning now to exemplary network systems that supports storage of data and configurations of physical mobile devices are illustrated according to one or more embodiments. As shown in MDD associated with MD can be stored via storage that can be included in CS . In one or more embodiments MDD can include data and or configuration data associated with a MD. In one example the MDD can include one or more sound recordings e.g. MP3 songs musical pieces voice memos conversations lectures etc. one or more contacts e.g. contact information associated with people places companies etc. one or more bookmarks e.g. web browser book marks one or more ebooks one or more social networking sites respective information e.g. Facebook information Twitter information MySpace information Foursquare information Last.fm information Google information etc. associated with a user of the MD one or more mobile device apps e.g. smart phone apps tablet computer apps music player apps etc. and or one or more configurations of the MD associated with the MDD among others. As illustrated in MDD associated with MD can be stored via storage that can be coupled to CS . As shown in MDD associated with MD can be stored via storage that can be coupled to network .

In one or more embodiments a MD can include executable instructions e.g. an application a utility an operating system a portion of an operating system etc. that when the executable instructions are executed by a processor of the MD the MD can synchronize backup restore and or initialize MDD associated with the MD. In one example the MD can synchronize and or backup MDD associated with the MD via a wired or wireless coupling to a local system e.g. a local computer system a personal computer a laptop computer system a local office computer system etc. and or via network to a remote system such as CS and or storages a distributed computer system and or a cloud based system. In one example the MD can incrementally synchronize changes in the MDD. For instance one or more synchronization updates can utilize one or more portions of the MDD and or may not require a full and or complete duplication of the MDD.

In one or more embodiments the MDD can include information associated with one or more states of the MD associated with the MD. In one example the MD can receive the MDD from CS and restore the MD to one or more states based on the MDD. In another example the MD can receive the MDD from CS and can perform a fresh install even if the MDD indicates a particular state or if the MD is in a particular state. In one or more embodiments the MD can receive user input that indicates one or more selected items to restore which can be in addition to what is present and or to overwrite existing properties data.

Turning now to exemplary network systems that support recovery and or restoration of data and configurations of physical mobile devices are illustrated according to one or more embodiments. As shown in MDD can be restored to MD . As illustrated in MDD can be restored to MD . As shown in MDD can be restored to MD .

In one or more embodiments recovery and or restoration of MDD associated with a first MD or recovery and or restoration of one or more portions of the MDD associated with the first MD can be utilized with the first MD or can be utilized with a second MD different from the first MD. In one example the first MD can be physically different from the second MD. For instance the first MD can include a first processor a first memory and a first integrated circuit the second MD a second processor a second memory and a second integrated circuit and at least one of the first processor the first memory and the first integrated circuit can be different from a respective one of the second processor the second memory and the second integrated circuit.

In another example the first MD can execute an operating system and or platform different from the second MD. For instance the first MD can execute a first operating system and or a first platform and the second MD can execute a second operating system and or a second platform where at least one of the first operating system and the first platform can be different from a respective one of the second operating system and the second platform. In one or more embodiments this can allow recovery and or restoration of MDD onto the second MD that did not perform backup and or synchronization methods and or processes.

In one or more embodiments one or more portions of the MDD may not be applicable to the second MD. For example the first MD can execute an Android operating system and or platform the second MD can execute Windows Mobile operating system and or platform and one or more applications e.g. smart phone apps may not be applicable to the second MD.

In one or more embodiments one or more portions of the MDD synchronized and or backed up via the first MD can be transformed altered converted translated adapted adjusted changed modified and or adapted among others such that the one or more portions of the MDD can be utilized by the second MD. For example a contact list can be included in the MDD the contact list can be stored and or indexed in a format that is associated with an Android operating system and or platform and the contact list can be transformed altered converted translated adapted adjusted changed modified and or adapted among others such that the Windows Mobile operating system and or platform of the second MD can utilize information from the contact list.

Turning now to an exemplary system that supports installation of data and configurations of one or more physical mobile devices to one or more respective emulators is illustrated according to one or more embodiments. In one or more embodiments one or more emulators can emulate one or more physical mobile devices. In one example emulator can emulate MD emulator can emulate MD and or emulator can emulate MD . As shown MDD can be copied and or transferred to emulator . In another example emulator can emulate MD emulator can emulate MD and or emulator can emulate MD . As shown MDD or one or more portions of MD can be copied and or transferred to emulator MDD or one or more portions of MD can be copied and or transferred to emulator and MDD or one or more portions of MD can be copied and or transferred to emulator .

In one or more embodiments one or more portions of MDD can be copied and or transferred to an emulator when a method and or process of and or associated with the emulator requests the one or more portions of the MDD. In one example one or more portions of MDD can be copied and or transferred to emulator when a method and or process of and or associated with emulator requests the one or more portions of MDD . In a second example one or more portions of MDD can be copied and or transferred to emulator when a method and or process of and or associated with emulator requests the one or more portions of MDD . In another example one or more portions of MDD can be copied and or transferred to emulator when a method and or process of and or associated with emulator requests the one or more portions of MDD .

In one or more embodiments the MDD or one or more portions of MDD can be transformed altered converted translated adapted adjusted changed modified and or adapted among others and transferred to an emulator when a method and or process of and or associated with the emulator requests the MDD or the one or more portions of the MDD. In one example MDD or one or more portions of MDD can be transformed altered converted translated adapted adjusted changed modified and or adapted among others and transferred to emulator when a method and or process of and or associated with emulator requests the one or more portions of MDD . In a second example MDD or one or more portions of MDD can be transformed altered converted translated adapted adjusted changed modified and or adapted among others and transferred to emulator when a method and or process of and or associated with emulator requests the one or more portions of MDD . In another example MDD or one or more portions of MDD can be transformed altered converted translated adapted adjusted changed modified and or adapted among others and transferred to emulator when a method and or process of and or associated with emulator requests the one or more portions of MDD . In one or more embodiments transferring data to an emulator e.g. an emulator of emulators can include providing availability of and or access to the data by the emulator.

In one or more embodiments an emulator can include executable instructions e.g. an application a utility an operating system a portion of an operating system etc. that when the executable instructions are executed by an emulated processor of the emulator the emulator can synchronize backup restore and or initialize MDD associated with an associated MD. In one example the emulator can initiate synchronization of one or more settings one or more configurations and or information from the MDD. In a second example the emulator can initiate synchronization of one or more settings one or more configurations and or information from the MDD where the MDD is associated with a MD that includes and or executes a first operating and or a first platform than a second different operating system and or a second different platform. For instance one or more portions of the MDD can be transformed altered converted translated adapted adjusted changed modified and or adapted among others and transferred to the emulator when a method and or process of and or associated with the emulator requests the one or more portions of the MDD associated with the MD. In one or more embodiments one or more modifications to the MDD and or a base image of the emulator can be stored. For example the one or more modifications can be stored temporarily and erased and or discarded after the emulator is terminated and or concludes operations.

In one or more embodiments a determination of what information associated with the MDD to restore and or to initialize the emulator can be made. In one example the determination can include a full restoration of the MDD to the emulator. In another example the determination can include a restoration of one or more portions of the MDD to the emulator. In one or more embodiments the determination can be based on user input and or one or more user preferences and or configurations.

In one or more embodiments the determination can be based on one or more attributes associated with the emulator and or one or more attributes associated with the MD. In one example the determination can be based on one or more similarities between or among the one or more attributes associated with the emulator and the one or more attributes associated with the MD. In another example the determination can be based on one or more differences between or among the one or more attributes associated with the emulator and the one or more attributes associated with the MD.

In one or more embodiments the one or attributes associated with the emulator can include one or more of an operating system a platform an emulated processor an emulated memory an emulated integrated circuit an emulated GPU an emulated WiFi device e.g. an emulated WiFi interface an emulated WiMAX device e.g. an emulated WiMAX interface an emulated GPS device an emulated GSM device e.g. an emulated GSM interface an emulated CDMA device e.g. an emulated CDMA interface an emulated satellite telephone network interface an emulated Bluetooth device e.g. an emulated Bluetooth interface an emulated ZigBEE device e.g. an emulated ZigBEE interface an emulated GPS device an emulated Ethernet device e.g. an emulated Ethernet interface an emulated proximity sensing device an emulated magnetometer an emulated accelerometer an emulated pressure transducer an emulated humidity sensing device an emulated capacitive sensing touch device an emulated resistive sensing touch device an emulated electronic gyroscope an emulated gas sensing device an emulated image sensing device e.g. an emulated digital camera an emulated sound output device an emulated sound sensing device e.g. an emulated microphone an emulated digital compass device an emulated temperature sensing device an emulated FM radio receiving device an emulated FM radio transmitting device an emulated light sensing device an emulated RFID sensing device an emulated RFID transmitting device an emulated NFC device and an emulated range determining device among others.

In one or more embodiments the one or attributes associated with the MD can include one or more of an operating system a platform a processor a memory an integrated circuit a GPU a WiFi device e.g. a WiFi interface WiMAX device e.g. a WiMAX interface a GPS device a GSM device e.g. a GSM interface a CDMA device e.g. a CDMA interface a satellite telephone network interface a Bluetooth device e.g. a Bluetooth interface a ZigBEE device e.g. a ZigBEE interface a GPS device an Ethernet device e.g. an Ethernet interface a proximity sensing device a magnetometer an accelerometer a pressure transducer a humidity sensing device a capacitive sensing touch device a resistive sensing touch device an electronic gyroscope a gas sensing device an image sensing device e.g. a digital camera a sound output device a sound sensing device e.g. a microphone a digital compass device a temperature sensing device a FM radio receiving device a FM radio transmitting device a light sensing device a RFID sensing device a RFID transmitting device a NFC device and a range determining device among others.

Turning now to exemplary local area network systems that support storage of data and configurations of physical mobile devices are illustrated according to one or more embodiments. As shown in MDD associated with MD can be stored via storage that can be included in a local CS . As illustrated MD and local CS can be coupled to a local area network LAN . In one or more embodiments local CS can include one or more of a computer system a server computer system a laptop computer system a notebook computing device a portable computer a network appliance a television device a DVD digital video disc player device a Blu Ray disc player device a DVR digital video recorder device or other wireless or wired device that includes a processor that executes instructions from a memory medium.

In one or more embodiments LAN can include a wired network. In one example LAN can include a wired network based on wired Ethernet. In another example LAN can include a wired network based on wired Ethernet over one or more power lines. For instance LAN can include a wired network based on one or more of IEEE 1901 IEEE 1675 HomePNA and HomePlug among others. In one or more embodiments LAN can include a wireless network. In one example LAN can include a wireless network based on wireless Ethernet e.g. based on IEEE 802.11 . In a second example LAN can include a wireless network based on Bluetooth e.g. based on IEEE 802.15 . In a third example LAN can include a wireless network based on wireless USB. In another example LAN can include a wireless network based on one or more of IEEE 802.15.4 and ZigBEE among others.

As shown in MDD associated with MD can be stored via storage that can be coupled to local CS . As illustrated MDD associated with MD can be stored via storage that can be coupled to LAN .

Turning now to exemplary local network systems that support recovery and or restoration of data and configurations of physical mobile devices are illustrated according to one or more embodiments. As shown in MDD can be restored to MD . As illustrated in MDD can be restored to MD . As shown in MDD can be restored to MD .

Turning now to an exemplary system that supports storage of data and configurations of physical mobile devices is illustrated according to one or more embodiments. In one or more embodiments MDD can be transferred via a network from a first computer system to a second computer system. As shown local CS can be coupled to network . As illustrated MDD can be transferred via network from CS to local CS . As shown MDD can be transferred via network from CS to local CS .

Turning now to a network system that supports network storage of data and configurations of physical mobile devices is illustrated according to one or more embodiments. As shown LAN can be coupled to network . In one or more embodiments MDD can be transferred via a first network from a first computer system to storage coupled to a second network. As illustrated MDD can be transferred via network and LAN from CS to storage .

Turning now to an exemplary local network system that supports installation of data and configurations and utilization of an emulator is illustrated according to one or more embodiments. As illustrated a session initiation protocol SIP gateway can be coupled to network . In one or more embodiments SIP can be utilized in controlling one or more communications sessions. For example SIP can be utilized in controlling voice and or video calls via a network protocol e.g. an Internet protocol . For instance SIP can be utilized in creating modifying two or more party communication sessions. In one or more embodiments the communications sessions can include one or more media streams.

As shown a SMS gateway can be coupled to network . In one or more embodiments SMS gateway can include a telecommunications device and or facility for sending and or receiving SMS transmissions to and or from a telecommunications network. As illustrated local CS can include a SIP VoIP proxy coupled to emulator . In one or more embodiments SIP VoIP proxy and emulator can communicate via one or more processes and or methods described herein. In one or more embodiments VoIP and or IP encapsulated SMS and or multimedia messaging service MMS termination can be implemented and or provided within emulator . As shown local CS can include a SMS proxy coupled to emulator . In one or more embodiments SIP VoIP proxy and emulator can communicate via one or more processes and or methods described herein.

In one or more embodiments SIP gateway and SIP VoIP proxy can communicate via network . For example SIP gateway can route telephone calls and or video calls to and or from SIP VoIP proxy . In one instance SIP VoIP proxy can receive can emulate one or more GSM and or CDMA signals that can carry the telephone calls and or video calls and can provide the signals that can carry the telephone calls and or video calls to emulator . In another instance SIP VoIP proxy can receive one or more GSM and or CDMA emulated signals that can carry the telephone calls and or video calls from emulator and can provide the telephone calls and or video calls to SIP gateway .

As illustrated local CS can include a client app coupled to emulator . For example client app and emulator can communicate via one or more processes and or methods described herein. In one or more embodiments local CS can be or include CCD and client app can be or include client interface . For example a user of local CS can control and or utilize emulator as a telephone via one or more of client interface interactive media interface and media interface . In one or more embodiments one or more interactions with emulator can be conducted via a web browser interfacing with a web server of emulator .

In one or more embodiments if an incoming call or an incoming message occurs when the web browser that would interface with the web server of emulator is not executing or is not directed to the web server of emulator an alert can be provided to the user of local CS . In one example the alert can include a display notification that can open a window displayed via a display associated with local CS . In another example the alert can include one or more sounds. In one instance the one or more sounds can include one or more sounds of a telephone ringing. In another instance the one or more sounds can include one or more sounds of a message arriving.

In one or more embodiments when emulator is not running or not executing a telephone system associated with emulator and or a physical MD associated with emulator can function as if the physical MD is turned off is not functioning and or is not in communication with a Node B a base transceiver station or a satellite. For example a VoIP a SMS and or a MMS termination point for emulator can be terminated.

In one or more embodiments local CS can include or be coupled to one or more of a camera a display a microphone and a speaker. In one example the microphone and the speaker associated with local CS can be utilized in one or more telephonic communications. In another example the camera and the display associated with local CS can be utilized in one or more video communications. In one or more embodiments local CS can include one or more structures and or functionalities described with reference to CD CD and or MD .

Turning now to an exemplary system that supports installation of data and configurations and utilization of multiple emulators is illustrated according to one or more embodiments. As illustrated a SIP gateway can be coupled to network . In one or more embodiments SIP gateway can include one or more same or similar structures and or functionalities as described with reference to SIP gateway . As shown a SMS gateway can be coupled to network . In one or more embodiments SMS gateway can include one or more same or similar structures and or functionalities as described with reference to SMS gateway .

As illustrated CS can include a SIP VoIP proxy coupled to emulators . In one or more embodiments SIP VoIP proxy and emulators can communicate via one or more processes and or methods described herein. As shown CS can include a SMS proxy coupled to emulators . In one or more embodiments SMS proxy and emulators can communicate via one or more processes and or methods described herein. In one or more embodiments VoIP and or IP encapsulated SMS and or MMS termination can be implemented and or provided within one or more emulators .

In one or more embodiments SIP gateway and SIP VoIP proxy can communicate via network . For example SIP gateway can route telephone calls and or video calls to and or from SIP VoIP proxy . In one instance SIP VoIP proxy can receive can emulate one or more signals e.g. GSM signals CDMA signals etc. that can carry the telephone calls and or video calls and can provide signals that can carry the telephone calls and or video calls to one or more of emulators . In another instance SIP VoIP proxy can receive one or more emulated signals e.g. emulated GSM signals emulated CDMA signals etc. that can carry the telephone calls and or video calls from one or more emulators and can provide the telephone calls and or video calls to SIP gateway .

In one or more embodiments emulators can be operated and or controlled by respective CCDs . For example emulators can be operated and or controlled by respective client interfaces . For instance each of client interfaces can include a web browser that operates and or controls a respective emulator.

In one or more embodiments each emulator of emulators can provide and or implement authentication authorization and or access control to determine that a user can interact with utilize and or operate the emulator. For example an emulator of emulators can receive identification information associated with a user and or a user account and or can receive a password associated with the user and or the user account to determine that the user can interact with utilize and or operate the emulator. In one instance the emulator can authenticate and or authorize the identification information and or the password with a database. In a second instance the emulator can authenticate and or authorize the identification information and or the password with at least one of a home location register HLR and a visiting location register VLR among others. In another instance the emulator can authenticate and or authorize the identification information and or the password with an authentication authorization and accounting AAA server and or service.

In one or more embodiments if an incoming call or an incoming message occurs when a web browser that would interface with a web server of an emulator of emulators is not executing or is not directed to the web server of the emulator an alert can be provided to a user via a CCD e.g. a CCD of CCDs utilized by the user. In one example the alert can include a display notification that can open a window displayed via a display associated with the CCD. In another example the alert can include one or more sounds. In one instance the one or more sounds can include one or more sounds of a telephone ringing. In another instance the one or more sounds can include one or more sounds of a message arriving.

In one or more embodiments if the emulator is not running or not executing a telephone system associated with the emulator and or a physical MD associated with the emulator can function as if the physical MD is turned off is not functioning and or is not in communication with a Node B a base transceiver station or a satellite. For example a VoIP a SMS and or a MMS termination point for the emulator can be terminated. In one or more embodiments an alternate notification process method and or path can be utilized if the emulator is not running or not executing. In one example a push notification can be provided to the CDD of the user. In another example a text message e.g. a SMS message an email message etc. indicating that an incoming telephone call voice message and or other message e.g. a text message can be provided to another device associated with the user. For instance a SMS message can be provided to the other device e.g. a wireless telephone a pager etc. associated with the user and or the identification information associated with the user.

In one or more embodiments providing the text message e.g. a SMS message an email message etc. that indicates an incoming telephone call voice message and or other message e.g. a text message can be based on a profile and or a configuration associated with the user. For example the profile and or a configuration associated with the user can include a policy that can direct providing the text message e.g. a SMS message an email message etc. that indicates an incoming telephone call voice message and or other message e.g. a text message to the other device associated with the user and or the identification information associated with the user.

Turning now to an exemplary computing system is illustrated according to one or more embodiments. As shown CS can include a processor coupled to a memory medium . In one or more embodiments memory medium can store data and or instructions that can be executed by processor . For example memory medium can store one or more APPs an OS MDDs emulators SIP VoIP proxy and or SMS proxy . For instance one or more of APPs OS emulators SIP VoIP proxy and SMS proxy can include instructions of an ISA associated with processor . In one or more embodiments one or more of the processes and or methods described here can be implemented when processor executes one or more of APPs OS emulators SIP VoIP proxy and SMS proxy .

As illustrated CS can include a network interface . In one example network interface can interface with a wired network coupling such as a wired Ethernet a T 1 a T 3 an OC 12 a DSL modem a PSTN or a cable modem among others. In another example network interface can interface with a wireless network coupling such as a satellite telephone system a cellular telephone system WiMax or wireless Ethernet among others.

Turning now to an exemplary method of a computer system receiving and storing mobile device data is illustrated according to one or more embodiments. At a computer system can receive one or more portions of MDD associated with a MD. In one example CS can receive via network the one or more portions of MDD associated with the MD. In a second example local CS can receive via LAN the one or more portions of MDD associated with the MD. In another example local CS can receive via LAN the one or more portions of MDD associated with the MD.

In one or more embodiments the MDD can be associated with one of MDs . In one example the one or more portions of MDD associated with the MD can be or include an incremental backup and or synchronization. In another example the one or more portions of MDD associated with the MD can be or include all portions of the MDD. For instance all portions of the MDD can be or include a full backup of the MD.

At the computer system can store the one or more portions of the MDD. In one example the one or more portions of the MDD can be stored in non volatile storage. In another example the one or more portions of the MDD can be stored in a random access memory that can provide an emulator access to the one or more portions of the MDD in a fashion that can be faster than access to the one or more portions of the MDD via non volatile storage.

Turning now to an exemplary method of a mobile device receiving and storing mobile device data is illustrated according to one or more embodiments. In one or more embodiments a MD can receive can receive one or more portions of MDD associated with the MD at . In one example the MD can receive via network the one or more portions of MDD associated with the MD. In a second example the MD can receive via LAN the one or more portions of MDD associated with the MD.

In one or more embodiments the one or more portions of MDD associated with the MD can be or include one or more incremental synchronizations and or backups. In one or more embodiments the one or more portions of MDD associated with the MD can be or include one or more changes of the MDD after the MDD has been utilized by an emulator. In one example a user can utilize the MDD via the MD utilize the MDD via an emulator associated with the MD and receive the one or more changes of the MDD after the MDD has been utilized by an emulator.

In another example a user can utilize the MDD via the MD an emulator associated with the MD can utilize the MDD via the user and or another user e.g. a sales representative a service representing a representative of a retail establishment a representative of a service provider an artificial intelligence system a neural network system etc. and receive the one or more changes of the MDD after the MDD has been utilized by the emulator via the user and or the other user. For instance the other user e.g. a service representative can assist the user to configure his or her MD via providing the MDD to an emulator and can change one or more portions of the MDD e.g. one or more configurations of the MD associated with the MDD and the one or more portions of the MDD can be received by the MD after the other user assists the user to configure his or her MD via the emulator.

In one or more embodiments the MD can store the one or more portions of the MDD at . In one example the MD can store the one or more portions of MDD that include the one or more incremental synchronizations and or backups. In a second example the MD can store the one or more portions of MDD that include the one or more changes of the MDD after the MDD has been utilized by an emulator. In another example the MD can store the one or more portions of MDD that include the one or more changes of the MDD after the MDD has been utilized by an emulator that was utilized by another user e.g. a sales representative a service representing a representative of a retail establishment a representative of a service provider etc. or an assistance system e.g. an artificial intelligence system a neural network system etc. .

In one or more embodiments the one or more portions of MDD can be associated with a first MD and a second MD different from the first MD can receive the one or more portions of MDD associated with the first MD at . In one example the MDD can be a base or a template for multiple MDs. For instance MDD that can be a base or a template can be a base or a template for multiple MDs of a sales group of a company. In a second example the second MD can be a replacement for the first MD. In another example the second MD can augment and or be an addition to the first MD. In one instance the first MD can be or include a mobile wireless telephone and the second MD can be or include a tablet computing device. In a second instance the first MD can be or include a first mobile wireless telephone associated with a first MIN and the second MD can be or include a second wireless telephone associated with a second MIN different from the first MIN. In another instance the first MD can be or include a first mobile wireless telephone and the second MD can be or include an emulation of the first mobile wireless telephone.

In one or more embodiments the second MD can store the one or more portions of the MDD at . For example the second MD can store the one or more portions of MDD associated with the first MD.

Turning now to an exemplary method of transforming telecommunications signals is illustrated according to one or more embodiments. At a first telecommunications signal can be received. In one example the first telecommunications signal can be received from SIP gateway . In a second example the first telecommunications signal can be received from SMS gateway .

In a third example the first telecommunications signal can include a SIP telecommunications signal. For instance SIP VoIP proxy can receive the SIP telecommunications signal. In a fourth example the first telecommunication signal can include a VoIP telecommunications signal. For instance SIP VoIP proxy can receive the VoIP telecommunications signal. In another example the first telecommunication signal can include a SMS or MMS telecommunications signal. For instance SMS proxy can receive the SMS or MMS telecommunications signal.

At the first telecommunication signal can be transformed into a second telecommunications signal. In one example the first telecommunications signal can be transformed into a CDMA telecommunications signal. In one instance SIP VoIP proxy can transform the first telecommunications signal into the CDMA telecommunications signal. In another instance SMS proxy can transform the first telecommunications signal into the CDMA telecommunications signal. In another example the first telecommunications signal can be transformed into a GSM telecommunications signal. In one instance SIP VoIP proxy can transform the first telecommunications signal into the GSM telecommunications signal. In another instance SMS proxy can transform the first telecommunications signal into the GSM telecommunications signal.

At the second communications signal can be provided to an emulator. In one example SIP VoIP proxy can provide the second telecommunications to the emulator e.g. an emulator of emulators . In another example SMS proxy can provide the second telecommunications to the emulator e.g. an emulator of emulators .

In one or more embodiments the method illustrated in can be repeated to transform additional telecommunications signals and provide the transformed telecommunications signals to one or more emulators. In one or more embodiments the second telecommunications signals can be routed to different emulators based on different network identifications associated with the first telecommunications signals. For example the different network identifications associated with the first telecommunications signals can include different IP Internet protocol addresses e.g. different IP version 4 addresses different IP version 6 addresses etc. different MAC media access control addresses different electronic serial numbers ESNs different mobile information numbers MINs and different mobile directory numbers MDNs among others.

Turning now to an exemplary method of transforming telecommunications signals is illustrated according to one or more embodiments. At a first telecommunication signal can be received. In one or more embodiments the telecommunication signal can be received from an emulator e.g. an emulator of emulators . In one example the first telecommunications signal can include a CDMA telecommunications signal. In one instance SIP VoIP proxy can receive the CDMA telecommunications signal. In another instance SIP VoIP proxy can receive the CDMA telecommunications signal. In another example the first telecommunication signal can include a GSM telecommunications signal. In one instance SIP VoIP proxy can receive the GSM telecommunications signal. In another instance SMS proxy can receive the GSM telecommunications signal.

At the first telecommunications signal can be transformed into a second telecommunications signal. In one example the first telecommunications signal can be transformed into a SIP telecommunications signal. For instance SIP VoIP proxy can transform the first telecommunications signal into the SIP telecommunications signal. In a second example the first telecommunications signal can be transformed into a VoIP telecommunications signal. For instance SIP VoIP proxy can transform the first telecommunications signal into the VoIP telecommunications signal. In a third example the first telecommunications signal can be transformed into a SMS telecommunications signal. For instance SMS proxy can transform the first telecommunications signal into the SMS telecommunications signal. In another example the first telecommunications signal can be transformed into a MMS telecommunications signal. For instance SMS proxy can transform the first telecommunications signal into the MMS telecommunications signal.

At the second telecommunications signal can be provided to a telecommunications gateway. In one example SIP VoIP proxy can provide the second telecommunications signal to SIP gateway . In another example SMS proxy can provide the second telecommunications signal to SMS gateway .

In one or more embodiments the method illustrated in can be repeated to transform additional telecommunications signals and provide the transformed telecommunications signals to one or more telecommunications gateways. In one or more embodiments the second telecommunications signals can be routed to different telecommunications gateways and or endpoints based on different network identifications associated with the first telecommunications signals. For example the different network identifications associated with the first telecommunications signals can include different IP addresses e.g. different IP version 4 addresses different IP version 6 addresses etc. different MAC addresses different ESNs different MINs and different MDNs among others.

In one or more embodiments the methods illustrated in can be utilized with local CS as well as CS . For example SIP VoIP proxy of local CS can be utilized in place of SIP VoIP proxy of CS and SMS proxy of local CS can be utilized in place of SIP VoIP proxy of CS .

Turning now to an exemplary method of utilizing an emulator is illustrated according to one or more embodiments. At an emulator can receive an invite from a telecommunications network. In one or more embodiments the invite can indicate that a telephone is calling the emulator.

In one or more embodiments receiving the invite can include receiving the signal that indicates the invite. For example receiving via SIP the signal that indicates the invite can include receiving the invite via one or more of a SIP gateway and a SIP proxy. In one instance emulator can receive the signal that indicates the invite via SIP gateway and via SIP VoIP proxy illustrated in . In another instance emulator can receive the signal that indicates the invite via SIP gateway and via SIP VoIP proxy illustrated in .

At the emulator can provide a signal to the telecommunications network that indicates it is trying to summon a user e.g. a called party . At the emulator can provide an indication of an incoming telephone call to the user. In one example emulator can provide the indication of the incoming telephone call to the user via client app . In another example emulator can provide the indication of the incoming telephone call to the user via client interface . In one or more embodiments client interface can be or include a web browser.

At the emulator can provide to the telecommunications network a signal that indicates that it is providing the indication of the incoming telephone call to the user. For example the signal that indicates that the emulator is providing the indication of the incoming telephone call to the user can be provided to the telecommunications network via SIP. In one instance emulator can provide the signal that indicates that emulator is providing the indication of the incoming telephone call to the user can be provided to the telecommunications network via SIP gateway and via SIP VoIP proxy illustrated in . In another instance emulator can provide the signal that indicates that emulator is providing the indication of the incoming telephone call to the user can be provided to the telecommunications network via SIP gateway and via SIP VoIP proxy illustrated in .

At the emulator can receive user input that indicates that the telephone call is to be answered. In one example emulator can receive the user input that indicates that the telephone call is to be answered via client app illustrated in . In another example emulator can receive the user input that indicates that the telephone call is to be answered via client interface illustrated in .

At the emulator can provide to the telecommunications network a signal that indicates the user has answered the call. For example the signal that indicates the user has answered the call can be provided to the telecommunications network via SIP. In one instance emulator can provide the signal that indicates the user has answered the call can be provided to the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can provide the signal that indicates the user has answered the call can be provided to the telecommunications network via SIP gateway and via SIP VoIP proxy .

At the emulator can receive an acknowledgement from the telecommunications network. For example a signal that indicates the acknowledgement can be received from the telecommunications network via SIP. In one instance emulator can receive the signal that indicates the acknowledgement from the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can receive the signal that indicates the acknowledgement from the telecommunications network via SIP gateway and via SIP VoIP proxy .

At the emulator can exchange data e.g. RTP real time protocol data with the telecommunications network. In one example emulator can exchange the data with the telecommunications network via SIP gateway and via SIP VoIP proxy . In another example emulator can exchange the data with the telecommunications network via SIP gateway and via SIP VoIP proxy . In one or more embodiments the RTP can include a packet format for delivering audio and or video via an IP network.

At the emulator can receive user input that indicates that the telephone call is to be ended. In one example emulator can receive the user input that indicates that the telephone call is to be ended via client app . In another example emulator can receive the user input that indicates that the telephone call is to be ended via client interface .

At the emulator can provide a BYE request to the telecommunications network. For example a signal that indicates the BYE request can be provided to the telecommunications network via SIP. In one instance emulator can provide the signal that indicates the BYE request to the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can provide the signal that indicates the BYE request to the telecommunications network via SIP gateway and via SIP VoIP proxy .

At the emulator can receive an OK acknowledgement from the telecommunications network. For example a signal that indicates the OK acknowledgement can be received from the telecommunications network via SIP. In one instance emulator can receive the signal that indicates the OK acknowledgement from the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can receive the signal that indicates the OK acknowledgement from the telecommunications network via SIP gateway and via SIP VoIP proxy .

Turning now to an exemplary method of utilizing an emulator is illustrated according to one or more embodiments. At an emulator can receive from a first user user input associated with a network identification associated with an endpoint e.g. a telephony device configured to be operated by a user another emulator a wireless telephone a wired telephone an auto attendant a conferencing system etc. of a telecommunications network. In one example the user input from the first user can include a selection from a contacts list and or database. For instance each selectable element of the contacts list and or database can be associated with at least one network identification associated with an endpoint of the telecommunications network. In another example the user input from the first user can include a telephone number. In one or more embodiments the network identification associated with the endpoint can include one or more of an IP addresses e.g. an IP version 4 address an IP version 6 address etc. a MAC address an ESN a MIN and a MDN among others.

At an emulator can provide to a telecommunications network a signal that indicates the network identification associated with the endpoint. In one or more embodiments providing the signal that indicates the network identification associated with the endpoint can include providing the signal that indicates the network identification associated with the endpoint via SIP. In one example emulator can provide the signal that indicates the network identification associated with the endpoint via SIP gateway and via SIP VoIP proxy illustrated in . In another example emulator can provide the signal that indicates the network identification associated with the endpoint via SIP gateway and via SIP VoIP proxy illustrated in .

At the emulator can provide an invite to a telecommunications network. In one or more embodiments providing the invite to the telecommunications network can include providing to the telecommunications network a signal that indicates the invite via SIP. In one example emulator can provide the signal that indicates the invite via SIP gateway and via SIP VoIP proxy . In another example emulator can receive the signal that indicates the invite via SIP gateway and via SIP VoIP proxy .

At the emulator can receive a signal from the telecommunications network that indicates the endpoint is trying to summon a second user e.g. a called party . In one or more embodiments receiving the signal from the telecommunications network that indicates the endpoint is trying to summon the second user can include receiving via SIP the signal from the telecommunications network that indicates the endpoint is trying to summon the second user. In one example emulator can receive the signal that indicates the endpoint is trying to summon the second user via SIP gateway and via SIP VoIP proxy . In another example emulator can receive the signal that indicates the endpoint is trying to summon the second user via SIP gateway and via SIP VoIP proxy .

At the emulator can receive from the telecommunications network a signal that indicates that the endpoint is providing an indication of an incoming telephone call to the second user. In one or more embodiments receiving the signal that indicates that the endpoint is providing the indication of the incoming telephone call to the second user can include receiving the signal that indicates that the endpoint is providing the indication of the incoming telephone call to the second user via SIP. In one example emulator can receive the signal that indicates that the endpoint is providing the indication of the incoming telephone call to the second user via SIP gateway and via SIP VoIP proxy . In another example emulator can receive the signal that indicates that the endpoint is providing the indication of the incoming telephone call to the second user via SIP gateway and via SIP VoIP proxy .

In one or more embodiments the emulator can indicate to the first user that the endpoint is providing the indication of the incoming telephone call to the second user. In one example the emulator can indicate to the first user that the endpoint is providing the indication of the incoming telephone call to the second user via a message and or a graphic. In one instance emulator can display to the first user a message and or a graphic that the endpoint is providing the indication of the incoming telephone call to the second user via client app . In another instance emulator can display to the first user a message and or a graphic that the endpoint is providing the indication of the incoming telephone call to the second user via client interface .

In another example the emulator can indicate to the first user that the endpoint is providing the indication of the incoming telephone call to the second user via one or more sounds. In one instance emulator can indicate to the first user via a speaker associated with local CS . In another instance emulator can indicate to the first user via a speaker associated with CCD . In one or more embodiments one or more sounds that indicate to the first user that the endpoint is providing the indication of the incoming telephone call to the second user can include a ring back.

At the emulator can receive from the telecommunications network a signal that indicates the second user has answered. For example the signal that indicates the second user has answered the telephone call can be received from the telecommunications network via SIP. In one instance emulator can receive the signal that indicates the second user has answered the telephone call can be received from the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can receive the signal that indicates the second user has answered the telephone call can be received from the telecommunications network via SIP gateway and via SIP VoIP proxy .

At the emulator can provide an acknowledgement to the telecommunications network. For example a signal that indicates the acknowledgement can be provided to the telecommunications network via SIP. In one instance emulator can provide the signal that indicates the acknowledgement to the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can provide the signal that indicates the acknowledgement to the telecommunications network via SIP gateway and via SIP VoIP proxy .

At the emulator can exchange data e.g. RTP real time protocol data with the telecommunications network. In one example emulator can exchange the data with the telecommunications network via SIP gateway and via SIP VoIP proxy . In another example emulator can exchange the data with the telecommunications network via SIP gateway and via SIP VoIP proxy . In one or more embodiments the RTP can include a packet format for delivering audio and or video via an IP network.

At the emulator can receive user input from the first user that indicates that the telephone call is to be ended. In one example emulator can receive the user input from the first user that indicates that the telephone call is to be ended via client app . In another example emulator can receive the user input from the first user that indicates that the telephone call is to be ended via client interface .

At the emulator can provide a BYE request to the telecommunications network. For example a signal that indicates the BYE request can be provided to the telecommunications network via SIP. In one instance emulator can provide the signal that indicates the BYE request to the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can provide the signal that indicates the BYE request to the telecommunications network via SIP gateway and via SIP VoIP proxy .

At the emulator can receive an OK acknowledgement from the telecommunications network. For example a signal that indicates the OK acknowledgement can be received from the telecommunications network via SIP. In one instance emulator can receive the signal that indicates the OK acknowledgement from the telecommunications network via SIP gateway and via SIP VoIP proxy . In another instance emulator can receive the signal that indicates the OK acknowledgement from the telecommunications network via SIP gateway and via SIP VoIP proxy .

Turning now to exemplary block diagrams of emulators coupled together is illustrated according to one or more embodiments. As shown emulator e.g. a first emulator can be coupled to emulator e.g. a second emulator and emulator e.g. the first emulator can be coupled to emulator e.g. a third emulator .

In one or more embodiments two or more devices can work and or function together. For example the two or more devices can communicate via a personal area network PAN . For instance the PAN can include one or more of a wired network and a wireless network. In one or more embodiments devices of the PAN can communicate via one or more of Bluetooth e.g. via one or more of Bluetooth basic rate Bluetooth enhanced data rate Bluetooth low energy etc. ZigBEE NFC wireless USB wireless Ethernet WiFi Z Wave IEEE 802.11 IEEE 802.15 IEEE 802.15.4 and a proprietary wireless protocol among others. For example devices of the PAN can communicate via one or more ISM industrial scientific and medical bands. For instance an ISM band can include a frequency range of 6.765 6.795 Mhz 433.05 434.79 Mhz 902 928 Mhz 2.4 2.5 Ghz 5.725 5.875 Ghz or 24.0 24.25 Ghz among others. In one or more embodiments devices of the PAN can communicate via one or more of a CAN controller area network protocol Flexray SPI serial peripheral interconnect USB Ethernet IEEE 802.3 Firewire IEEE 1394 IC inter integrated circuit Thunderbolt and a proprietary wired protocol among others.

In one or more embodiments CS can emulate a PAN that couples two or more of emulators . For example one or more of emulators can be configured such that a first physical device emulated by a first emulator can work and or function with a second physical device emulated by a second emulator.

In one instance illustrated in a CFG of a MD can be provided to emulator emulator can be configured with CFG and coupled to emulator with CFG and one or more of CFG and CD can be configured and or can be provided to user in accordance with one or more systems methods and or processes described herein e.g. with reference to . In another instance illustrated in CFG stored via one or more of storages can be provided to emulator emulator can be configured with CFG and coupled to emulator with CFG and one or more of CFG and CD can be configured and or can be provided to user in accordance with one or more systems methods and or processes described herein e.g. with reference to .

Turning now to an exemplary method of emulating two or more coupled mobile devices is illustrated according to one or more embodiments. At two or more physical mobile devices can be emulated. For example two or more of emulators can emulate two or more physical mobile devices. For instance at least two of the emulated physical devices can be different physical devices.

At a first configuration can be received. For example CS can receive the first configuration. In one instance the first configuration can be CFG and CS can receive CFG via network from MD as illustrated in . In another instance CS can receive CFG from at least one of storages as illustrated in .

At a first emulator of the two or more emulators can be configured with the first configuration. For example the first emulator can be emulator and emulator can be configured with CFG as illustrated in . At a coupling of the first emulator and a second emulator can be emulated. For example the second emulator can be emulator and CD can emulate a coupling of emulator with emulator . In one instance the coupling of emulator with emulator can be an emulated wired coupling. In another instance the coupling of emulator with emulator can be an emulated wireless coupling.

At data can be received via a network. For example CS can receive data from user via network . At the received data can be provided to the second emulator. For example the received data can be provided to emulator .

At a second configuration can be created. For example the received data can be utilized to configure the second emulated computing device and or create a second configuration e.g. CFG . For instance CFG can include one or more sound recordings e.g. MP3 songs musical pieces voice memos conversations lectures etc. one or more contacts e.g. contact information associated with people places companies etc. one or more bookmarks e.g. web browser book marks one or more ebooks one or more social networking sites respective information e.g. Facebook information Twitter information MySpace information Foursquare information Last.fm information Google information etc. associated with user and or one or more mobile device apps e.g. smart phone apps tablet computer apps music player apps in vehicle apps etc. among others based on and or created via the received data.

At the second configuration can be stored. In one example the second configuration can be stored via storage . In another example the second configuration can be stored via one or more of storages illustrated in . At user input indicating a delivery method can be received. In one example CS can receive the user input indicating the delivery method. In another example merchant CD can receive the user input indicating the delivery method.

At a delivery method can be determined. In one example CS can determine the delivery method. In another example merchant CD can determine the delivery method. In one or more embodiments delivery of the second configuration can include one or more of delivering the configuration via the network e.g. network and delivering a physical computing device configured with the second configuration.

If the delivery of the second configuration e.g. CFG includes delivering the configuration via the network e.g. network the second configuration can be provided to the user via the network at . For example CFG can be delivered to CCD and or to MD via network as illustrated in . If the delivery of the second configuration e.g. CFG includes delivering the physical computing device configured with the second configuration the physical computing device can be configured with the second configuration at and the physical computing device e.g. CD can be provided to a physical delivery service at . For instance the physical delivery service can provide the physical computing device e.g. CD as described herein.

In one or more embodiments the term memory medium can mean a memory a memory device and or tangible computer readable storage medium . In one example one or more of a memory a memory device and tangible computer readable storage medium can include volatile storage such as SRAM DRAM Rambus RAM EDO RAM random access memory etc. In another example one or more of a memory a memory device and tangible computer readable storage medium can include nonvolatile storage such as a CD ROM a DVD ROM a floppy disk a magnetic tape EEPROM EPROM flash memory NVRAM FRAM a magnetic media e.g. a hard drive optical storage etc. In one or more embodiments a memory medium can include one or more volatile storages and or one or more nonvolatile storages. In one or more embodiments one or more of a memory medium a memory a memory device and a tangible computer readable storage medium can be or include non transient memory and or storage.

In one or more embodiments a computer system a computing device and or a computer can be broadly characterized to include any device that includes a processor that executes instructions from a memory medium. For example a processor e.g. a central processing unit or CPU can execute instructions from a memory medium that stores the instructions which can include one or more software programs in accordance with one or more of methods processes and or flowcharts described herein. For instance the processor and the memory medium that stores the instructions which can include one or more software programs in accordance with one or more of methods processes and or flowcharts described herein can form one or more means for one or more functionalities described with references to methods processes and or flowcharts described herein. In one or more embodiments a memory medium can be and or can include an article of manufacture a program product and or a software product. For example the memory medium can be coded and or encoded with instructions in accordance with one or more of methods processes and or flowcharts described herein to produce an article of manufacture a program product and or a software product.

One or more of the method elements described herein and or one or more portions of an implementation of a method element can be repeated can be performed in varying orders can be performed concurrently with one or more of the other method elements and or one or more portions of an implementation of a method element or can be omitted according to one or more embodiments. In one or more embodiments concurrently can mean simultaneously. In one or more embodiments concurrently can mean apparently simultaneously according to some metric. For example two tasks can be context switched such that such that they appear to be simultaneous to a human. In one instance a first task of the two tasks can include a first method element and or a first portion of a first method element. In a second instance a second task of the two tasks can include a second method element and or a first portion of a second method element. In another instance a second task of the two tasks can include the first method element and or a second portion of the first method element. Further one or more of the system elements described herein can be omitted and additional system elements can be added as desired according to one or more embodiments. Moreover supplementary additional and or duplicated method elements can be instantiated and or performed as desired according to one or more embodiments.

One or more modifications and or alternatives of the embodiments described herein may be apparent to those skilled in the art in view of this description. Hence descriptions of the embodiments described herein are to be taken and or construed as illustrative and or exemplary only and are for the purpose of teaching those skilled in the art the general manner of carrying out an invention described in the appended claims. In one or more embodiments one or more materials and or elements can be swapped or substituted for those illustrated and described herein. In one or more embodiments one or more parts and or processes can be reversed and or certain one or more features of the described one or more embodiments can be utilized independently as would be apparent to one skilled in the art after having the benefit of this description.

