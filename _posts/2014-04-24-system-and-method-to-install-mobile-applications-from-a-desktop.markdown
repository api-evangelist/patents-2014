---

title: System and method to install mobile applications from a desktop
abstract: Systems and methods for Desktop-To-Mobile (D2M) application installation that allows a publisher to extend their relationship with a consumer from the Desktop PC (PC) to a mobile device. In accordance with some implementations, a mobile application store may be used to offer apps on a user's mobile device as a result of a user acceptance of an offer(s) for the apps. The user may install a personal computer (PC)-based application that runs in the background. The PC-based application receives offers to install mobile applications and may use the mobile app store or a PC to install the mobile applications to the user's mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09159086&OS=09159086&RS=09159086
owner: Adknowledge, Inc.
number: 09159086
owner_city: Kansas City
owner_country: US
publication_date: 20140424
---
This application claims priority to U.S. Provisional Patent Application No. 61 816 538 filed Apr. 26 2013 entitled SYSTEM AND METHOD TO INSTALL MOBILE APPLICATIONS FROM A DESKTOP which is incorporated herein by reference in its entirety.

Application publishers create relationships with users to inform and educate users about features of desktop and mobile applications. The relationships may take many forms such as targeted advertising and offers based knowledge of user s behaviors. However while advertising and offers may successfully engage a user the user may be engaged while using a platform that is not the intended platform of the application being offered. For example the user may be using a personal computer but the offered application is intended for use on a mobile device. As such the user may pass on an offer as the application cannot be installed on the mobile device because the user is presently operating his her personal computer.

Disclosed herein are systems and methods for Desktop To Mobile D2M application installation that allows a publisher to extend their relationship with a consumer from the Desktop PC PC to a mobile device. In accordance with some implementations a mobile application store may be used to offer apps on a user s mobile device as a result of a user s advance acceptance of an offer s for the apps. The user may install a personal computer PC based application that runs in the background. The PC based application receives offers to install mobile applications and may use the mobile app store or a PC to install the mobile applications to the user s mobile device.

Other systems methods features and or advantages will be or may become apparent to one with skill in the art upon examination of the following drawings and detailed description. It is intended that all such additional systems methods features and or advantages be included within this description and be protected by the accompanying claims.

Unless defined otherwise all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art. Methods and materials similar or equivalent to those described herein can be used in the practice or testing of the present disclosure. While implementations will be described for remotely accessing applications it will become evident to those skilled in the art that the implementations are not limited thereto but are applicable for remotely accessing any type of data or service via a remote device.

In accordance with the present disclosure there is provided a method and system for Desktop To Mobile application installation Appcaster that allows a publisher to extend their relationship with a consumer from the Desktop PC to a mobile device. In accordance with some implementations the Google Play Store may be used to offer apps either free or paid on a user s mobile device as part of the service of the present disclosure. Generally an example process begins with a user being provided with a description of a service for example a service that will push apps to the user s mobile device from a desktop application. Upon acceptance of the terms of service and the user s consent a personal computer PC based application D2M Client application is downloaded and installed on the user s personal computer PC . When executed the PC application runs in the background and places an icon in e.g. the system tray to inform the user that the application is running. In accordance with some aspects the user provides his her Google Play login credentials to the PC application which receives offers to install mobile applications and uses the Google Play store to push the mobile applications to the user s mobile device. If the user wishes to delete the PC application the user may do so through e.g. the add remove software option in the control panel of Windows based machines. Thus the present disclosure provides a capability to drive installations of mobile application from a PC on either a one time or an automated regular basis e.g. a mobile application a day . As will be apparent to one of ordinary skill in the art based on the above any number of mobile applications may be offered to the user in a given period of time. Further the present disclosure is not limited to mobile applications installed through the Google Play store and may be applicable to applications installed through other app repositories such as the Apple App Store Blackberry App World the Windows Store an app repository hosted by the D2M and or any other suitable app store.

Referring to there is illustrated an example environment in which aspects of the present disclosure may be implemented. A D2M Installer is a server that may be accessed by the user to download the D2M Client application described above. A user is a computer user who has a PC and a mobile device with a unique account with e.g. a Mobile App Store . A user PC is a personal computer that is controlled by the user with e.g. an internet connection and a web browser . The Web Browser is software for browsing the web such as Internet Explorer Chrome or Firefox . The D2M Client Application is a desktop PC application that communicates to the Mobile App Store using the user s credentials or other user identifier.

The mobile device may be any mobile device such as but not limited to a cell phone tablet or other mobile device capable of running apps from the Mobile App Store . A D2M Service is a server that processes requests for offers user credentials client application settings and user mobile app offer history . For example the D2M Service may be a service by Adknowledge Inc. of Kansas City Mo. The user credentials may be stored in an encrypted format and may include login and device information for the user s account in Mobile App Store . The client settings may be operational settings that are passed to D2M Client including the frequency of offers to mobile device . The user Mobile App Offer History is a list of apps previously pushed to mobile device including but not limited to the respective date and time of offer. This information can be used with the Client Settings to determine whether the mobile device is available to receive an offer.

The Mobile App Store can be a mobile application discovery and distribution service such as Google Play. A User Mobile App Account is an account in the Mobile App Store associated with the User that is connected to one or more mobile devices. Mobile Apps are applications made available by the Mobile App Store by e.g. Mobile App Developers that may be installed on the mobile device . The Mobile App Developer can be a developer or other agent that controls distribution of mobile applications through the Mobile App Store .

The mobile device User PC D2M Installer and D2M Service may be implemented on a computing device such as that shown in .

At if the User accepts the offer the D2M Client is downloaded and installed at from the D2M server . Otherwise the process ends at . Once installed at the D2M Client will load upon startup. In some implementations the D2M Client does not require an active browser session as long as proper credentials for authentication of User have been collected for the Mobile App Store .

At the D2M Client checks the authentication state and authenticates with the Mobile App Store at if necessary. At the D2M Client downloads a list of active Device IDs from the Mobile App Store . Alternatively the D2M client can collect the list of active Device IDs from the Device e.g. from the Device operatively connected to PC for example by a direct cable or a local area network. At the D2M Client requests updated settings which can include offer frequency caps and mobile app offer history e.g. date and time of offer s from the D2M Service . At the D2M Client compares the date and time of the last offer with the current offer frequency cap. At if the duration since the last offer exceeds the minimum period required by the frequency cap the D2M Client requests a new mobile app offer. If not the process returns to an authentication check at until sufficient time has elapsed.

At the D2M Service sends Device and Offer IDs that can be interpreted by the Mobile App Store to the D2M Client . At the D2M Client passes request to the Mobile App Store to have installed the selected mobile app on User s mobile device . At the selected mobile application is installed on the mobile device when it is available at and the D2M Service is credited with the app sale at . The D2M Client then returns to to the startup state. The selected mobile application can be installed for example by the Mobile App Store or by the PC Client

Numerous other general purpose or special purpose computing system environments or configurations may be used. Examples of well known computing systems environments and or configurations that may be suitable for use include but are not limited to personal computers server computers handheld or laptop devices multiprocessor systems microprocessor based systems network personal computers PCs minicomputers mainframe computers embedded systems distributed computing environments that include any of the above systems or devices and the like.

Computer executable instructions such as program modules being executed by a computer may be used. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. Distributed computing environments may be used where tasks are performed by remote processing devices that are linked through a communications network or other data transmission medium. In a distributed computing environment program modules and other data may be located in both local and remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing aspects described herein includes a computing device such as computing device . In its most basic configuration computing device typically includes at least one processing unit and memory . Depending on the exact configuration and type of computing device memory may be volatile such as random access memory RAM non volatile such as read only memory ROM flash memory etc. or some combination of the two. This most basic configuration is illustrated in by dashed line .

Computing device may have additional features functionality. For example computing device may include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage .

Computing device typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by device and includes both volatile and non volatile media removable and non removable media.

Computer storage media include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Memory removable storage and non removable storage are all examples of computer storage media. Computer storage media include but are not limited to RAM ROM electrically erasable program read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of computing device .

Computing device may contain communications connection s that allow the device to communicate with other devices. Computing device may also have input device s such as a keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. All these devices are well known in the art and need not be discussed at length here.

It should be understood that the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatus of the presently disclosed subject matter or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the presently disclosed subject matter. In the case of program code execution on programmable computers the computing device generally includes a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs may implement or utilize the processes described in connection with the presently disclosed subject matter e.g. through the use of an application programming interface API reusable controls or the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and it may be combined with hardware implementations.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

