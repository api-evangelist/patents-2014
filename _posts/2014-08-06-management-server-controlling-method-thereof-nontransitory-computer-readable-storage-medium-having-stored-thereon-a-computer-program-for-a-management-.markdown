---

title: Management server, controlling method thereof, non-transitory computer readable storage medium having stored thereon a computer program for a management server and terminal device
abstract: If a management server receives an invitation request, the management server acquires a requester's reference identification information corresponding to a requester's user identification information, a receiver's reference identification information corresponding to a receiver's user identification information, and an identification information, by referring to a user information table. The management server generates a record in which a status information is set to “pending”, and records the record in an invitation table. Assuming that the game to which a user A wants to invite another user B is a game b, the other user B who builds a friendship with the user A in a game c, the user A manages one terminal device, and the other user B manages another terminal device. In this case, the management server sends an invitation mail indicating that there is an invitation from the user A in the game b to the other terminal device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09597597&OS=09597597&RS=09597597
owner: KONAMI DIGITAL ENTERTAINMENT CO., LTD.
number: 09597597
owner_city: Minato-ku, Tokyo
owner_country: JP
publication_date: 20140806
---
This application is a Continuation Application of PCT Application No. PCT JP2013 51715 filed Jan. 28 2013 and based upon and claiming the benefit of priority from prior Japanese Patent Application Serial No. 2012 023158 filed Feb. 6 2012 the entire content of all of which is incorporated herein by reference.

The present invention relates to techniques of inviting a user with whom a friendship is built on a service to another service.

In recent years services providing applications on the Internet have been spreading rapidly. As one of these kinds of services there is a game provided on a site such as an SNS Social Networking Service . In this case a game system often provides tools including an email a chat a bulletin board for communication. A user gets acquainted with other users by using the tools for communication to establish friendships with them. A user who becomes a friend may participate in a game that another user plays to battle a strong enemy jointly.

A conventional game system extracts users who can be candidate friends and presents the extracted users to a user who requests the presentation of the candidate friends. see Patent Document 1 

In the game system plural games are usually provided so that a game server is installed for each game. In the conventional game system a friendship is managed in each game server so the friendship exists independently for each game. A user who can be a friend in each game is restricted to one who has become friends on the SNS real friend or one who is arbitrarily chosen by the game system virtual friend . It sometimes happens that a trusting relationship with the user who is arbitrarily chosen by the game system is built through progress of the game. If one user is the virtual friend with whom another user s trusting relationship is built the other user wants to be friends with the one user even in the other games. If the one user is the real friend there is an opportunity to communicate with the one user by using a mail function on the SNS.

However if the one user is the virtual friend it is possible to communicate with the one user only in the game in which the other user s friendship with the one user is built. Therefore there is a problem that the other user cannot invite the one user with whom the other user s good friendship is built in another game to a certain game the one user plays. There is another problem that it is unclear whether or not the one user whom the other wants to invite plays the certain game to which the other user wants to invite the one user.

In view of the above situation the present invention aims to provide a management server in which it is possible to invite the one user with whom the other user s friendship is built in the other game to the certain game.

A management server according to the present invention is capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The management server is provided with an accepting unit adapted for accepting identification information identifying an application designated through an operation of a terminal device performed by a request user requesting a presentation of a candidate user who is a candidate for invitation a specifying unit adapted for specifying a part or all of candidate users satisfying a condition that the part or all of the candidate users do not utilize the application indicated by the identification information accepted by the accepting unit a display controlling unit adapted for displaying the part or all of the candidate users specified by the specifying unit in the terminal device of the request user in order to select the candidate user from the part or all of the candidate users and a notifying unit adapted for notifying the candidate user selected from the candidate users displayed in the terminal device of an invitation request.

In this invention another condition that a friendship is built in the utilized application the request user has utilized may be added to the above described condition. The notifying unit may notify the selected candidate user of the invitation request in any manner. For instance the notifying unit may send an email of the invitation request to a registered email address. The notifying unit may display the fact that there is the invitation request on a page the selected candidate user manages. The notifying unit may post an article about the invitation on another SNS or a bulletin board.

In the above described management server it is preferable that the specifying unit specifies the candidate user satisfying the above described condition by referring to a first friendship table storing user information of users utilizing the application identified by the identification information the first user information table in which the user information is associated with the identification information.

In the above described management server it is preferable that the specifying unit may specify a user as the candidate user with whom a friendship is built in the utilized application the request user has utilized by referring to the friendship table storing a of the user information of users sending the friend request and the user information of the user accepting the friend request in which the pairs are associated with the identification information in addition to the above described condition.

In this invention it is preferable that the specifying unit may extract the user information of the other user accepting the friend request in the pairs of the user information of the other user accepting the friend request and the user information of the one user sending the friend request which coincides with the user information of the request user out of the pairs of the user information of the one user and the user information of the other user associated with the identification information corresponding to the application the request user has utilized by referring to the friendship table. It is also preferable that the specifying unit may extract the user information of the one user sending the friend request in the pairs of the user information of the one user sending the friend request and the user information of the other user accepting the friend request which coincides with the user information of the request user. Then it is preferable that the other user in the extracted user information of the other user and the one user in the extracted user information of the one user are treated as the user with whom the friendship is built in the application the request user has utilized.

In the above described management server it is preferable that the display controlling unit displays the utilized application the request user has utilized in the terminal device of the request user in a selectable way and the specifying unit specifies the part or all of the candidate users satisfying the above mentioned condition in the utilized application selected by the request user in the terminal device.

In the above described management server it is preferable that the specifying unit specifies the number of users who can be invited to utilized application the request user has utilized and the display controlling unit displays the number of the users who can be invited specified by the specifying unit in the terminal device of the request user.

In this invention the number of the users who can be invited may be specified for each utilized application and may be displayed for each utilized application in the terminal device of the request user. The total number of the users who can be invited in the plural utilized applications may be specified and may be displayed in the terminal device of the request user.

In the above described management server it is preferable that the specifying the user information of an invited user in a record in which the user information of the invited user is associated with the identification information accepted by the accepting unit in which the user information of the request user coincides with the user information of an inviting user in which the status information indicates the refusal at least by referring to the invitation table storing at least a pair of the user information of the inviting user and the user information of the invited user and the status information and in which the pair is associated with the identification information and the specifying unit excludes the invited user in the specified user information from the candidate users.

In the above described management server it is preferable that the status indicated by the status information includes a first status indicating that the invitation is refused or accepted and when the status information indicates the refusal of the invitation at least the status information is in the first status.

In the above described management server it is preferable that the status indicated by the status information includes a second status indicating that the invitation is pending. It is also preferable that the specifying unit extracts the user information of another invited user in the record in which the user information is associated with the identification information accepted by the accepting unit in which the user information of the request user coincides with the user information of the inviting user and in which the status information indicates the second status by referring to the invitation table. It is further preferable the specifying unit excludes the other invited user and the invited user from the candidate users.

In the above described management server it is preferable that the server is provided with a managing unit for managing the inviting user and the invited user. It is also preferable that the specifying unit specifies the user refusing the invitation if the user is managed as the user whom the request user invites by the managing unit to exclude the specified user from the candidate users.

In the above described management server it is preferable that the specifying unit specifies a user information of an invited user in one record and another record the one record in which the user information of the invited user is associated with the identification information accepted by the accepting unit the user information of the request user coincides with the user information of the inviting user and status information indicating the status of the invitation indicates a refusal at least and the other record in which the status information indicates that the invitation is pending in which a predetermined time elapses since the date indicated by referring to the invitation table storing at least a pair of the user information of the inviting user and the user information of the invited user the status information and an invitation date information indicating the date of invitation and in which the pair the status information and the invitation date information are associated with the identification information. It is further preferable that the specifying unit excludes the invited user from the candidate users.

More specifically it is preferable that the status indicated by the status information includes the first status indicating the refusal or acceptance of the invitation and the second status indicating that the invitation is pending. It is also preferable that the status indicated by the status information is the first status when the status information indicates the refusal of the invitation at least. It is further preferable that the status indicated by the status information is the second status when the status information indicates that the invitation is pending.

In the above described management server it is preferable that the specifying unit specifies the user information of the invited user in the record in which the user information of the invited user is associated with the identification information accepted by the accepting unit in which the user information of the request user coincides with the user information of the inviting user in which the status information indicates the refusal at least by referring to the invitation table storing the pairs of the user information of the inviting user and the user information of the invited user the status information indicating the status of the invitation and the invitation date information indicating the date of invitation and in which the pairs the status information and the invitation date information are associated with the identification information. It is further preferable that the specifying unit excludes the invited user from the candidate users and the server is provided with a rewriting unit rewrites the status indicated by the status information from the pending status of the invitation to the refusal of the invitation if there is no response from the invited user even if the predetermined period elapses since the date of sending of the invitation request.

More specifically it is preferable that the status indicated by the status information includes the first status indicating the refusal or acceptance of the invitation and the second status indicating the pending status of the invitation. It is also preferable that the status indicated by the status information is the first status when the status information indicates the refusal of the invitation at least. It is further preferable that the rewriting unit rewrites the status indicated by the status information from the second status to the first status if there is no response from the invited user even if a predetermined period elapses since the date of notification of the invitation request.

The present invention is comprehended as a non transitory computer readable recording medium with a program stored thereon the program is used for a computer of the management server. The non transitory computer readable recording medium is one with the program stored thereon the program is used for the computer of the management server capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The program causes the computer as the accepting unit adapted for accepting identification information identifying the application designated through the operation of the terminal device performed by the request user requesting the presentation of the candidate user who is the candidate for the friend the specifying unit adapted for specifying the part or all of the candidate users satisfying a condition that the part or all of the candidate users do not utilize the application indicated by the identification information accepted by the accepting unit the display controlling unit adapted for displaying the part or all of the candidate users specified by the specifying unit in the terminal device of the request user in a selectable way and the notifying unit adapted for notifying the candidate user selected from the candidate users displayed in the terminal device of an invitation request.

The present invention is comprehended as a controlling method for the management server. The controlling method is one for controlling the management server capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The controlling method is provided with accepting identification information identifying the application designated through the operation of the terminal device performed by the request user requesting the presentation of the candidate user who is the candidate for the friend specifying the part or all of the candidate users satisfying a condition that the part or all of the candidate users do not utilize the application indicated by the accepted identification information displaying the part or all of specified candidate users specified in the terminal device of the request user in a selectable way and notifying the candidate user selected from the candidate users displayed in the terminal device of an invitation request.

With reference to the accompanying drawings various embodiments of an application system by using a management server according to the present invention will be described.

If one user as a requester sends a friend request to another user as a receiver and the receiver accepts the friend request a friendship is built between the requester and the receiver. In addition one user who plays a certain game can invite another user who does not play the game to the game in the application system .

The management server A provides the SNS site in which users can communicate with each other to each of the users and functions as an Internet portal. The management server A centrally manages friendships built in the application servers B C D.

The user s terminal device can perform communication through the communication network . For example a personal computer or a cellular phone is used as the terminal device . The application system can provide the users a communication function between the users and shopping function for games services and products.

The hard disc stores tables including a user information table TBL a friend upper limit table TBL a relation table TBL an invitation table TBL an application information table TBL an ID management table TBL.

The reference identification information RefID is not open to users but used inside the system. The reference identification information RefID is associated with a login identification information UserID that is known to the users and managed in the ID management table TBL. A unique reference identification information RefID is assigned to a unique user even if the unique user utilizes a different application. However the user identification information UID is different in every application. The function of the user identification information UID corresponds to the pair of the function of the identification information AppID and the function of the reference identification information RefID. It is unnecessary to be able to identify the application only based on the user identification information UID.

For example in each of records in which the record identification information ID is 1 2 and 3 00000011 is stored as the reference identification information RefID which is assigned to a unique user. However the identification information AppID and the user identification information UID are different in each of the records in which the record identification information ID is 1 2 and 3 .

The correspondence of the login identification information UserID and the reference identification information RefID is managed in the ID management table TBL. If the login identification information UserID is stolen by a third party for example it is possible to issue a new login identification information UserID and associate the new login identification information UserID with the reference identification information RefID. This restoration is achieved only by updating the ID management table TBL but does not affect the other tables.

The details of friendships between users are stored separately in a requester side and in a receiver side so that there is a merit in that memory capacity is reduced. If the user identification information UID of a certain user and the user identification information UID of all users who have friendships with the certain user are stored by associating them with each other twice the amount of the memory capacity is necessary. For example assuming that a user A is the requester and a user B is the receiver if the user identification information of one user having a friendship with another user is stored for each of users it is necessary to store information that the user B has a friendship with the user A and information that the user A has a friendship with the user B. Contrary in this embodiment the requester s user identification information and the receiver s user identification information are stored in one record by associating them with each other so that the memory capacity can be reduced by half Processing steps can be reduced by half even if the status information Stat is updated.

A relationship between a certain user and another user includes a friendship a relationship as rivals and a relationship of blocking. The friendship is established when a friend request of the certain user is sent to another user and another user approves the friend request. The relationship as rivals is established when the certain user reports the other user to be a rival. The other user s approval for the report is unnecessary to establish the relationship as rivals. For example if the certain user is nervous about the other user who plays the same game and registers the other user as a rival the relationship as rivals is used. The relationship of blocking is established when the certain reports the other users who the certain users wants to block in the same way as establishing relationship as rivals. The other user s approval for the report is unnecessary to establish the relationship of blocking. If a friend request is often sent from the other user even though the certain user refuses to accept the request or the certain user is annoyed by the other user s comments on a bulletin board the certain users registers the other user as a blocking user. The relationship of blocking is used for this registration.

If the relationship between users in the record is the friendship Friends is recorded as the group information Group. If the relationship between users in the record is the relationship as rivals Rival is recorded as the group information Group. If the relationship between users in the record is the relationship of blocking Block is recorded as the group information Group. If the friend request is pending 0 is recorded as the status information Stat. If the friend request has been accepted 1 is recorded as the status information Stat. If the friend request has been refused 2 is recorded as the status information Stat. The relationship as rivals and the relationship of blocking are established only by reporting so that it is unnecessary to record the status information Stat. Therefore null is recorded as the status information Stat in this case. In the relationship as rivals and the relationship of blocking 0 may be recorded as the status information Stat in this case.

The record in which the record identification information ID is 1 indicates that the friend request from the user indicated with 00000011 as the reference identification information RefID to the user indicated with 00003120 as the reference identification information RefID has been accepted. At the timing that the user indicated with 00000011 as the reference identification information RefID conducts the friend request the record in which the record identification information ID is 1 is generated so that the status information Stat is set to 0 . After the user indicated with 00003120 as the reference identification information RefID receives the friend request at the timing that the user accepts or refuses the friend request the status information Stat is updated to 1 indicating the acceptance or updated to 2 indicating the refusal.

If the identification information AppID is limited to that of a specific game by referring to the relation table TBL it is possible to comprehend the friendships between the users in the game. It is possible to comprehend the user who has a friendship with a certain user or the user having a friend request pending.

If the friendship is cancelled after the friendship is built the record is deleted. If a field indicating that the record is valid or invalid is newly added the record may be invalid after the friendship is cancelled without deleting the record. If the friendship is built again between one user and the other user with whom the friendship is cancelled a new record may be generated.

It is possible to know who invites who is invited and at which game the invitation is sent by referring the invitation table TBL. For example the record in which the record identification information ID is 1 indicates that the invitation from the user indicated with 00000011 as the reference identification information RefID to the user indicated with 00003120 as the reference identification information RefID has been sent and been approved or refused. At the timing that the user indicated with 00000011 as the reference identification information RefID sends the invitation the record in which the record identification information ID is 1 is generated so that the status information Stat is set to 0 . After the user indicated with 00003120 as the reference identification information RefID receives the invitation at the timing that the user accepts or refused the invitation the status information Stat is updated to 1 .

If the status information Stat is 1 the invitation is approved or refused. In this case the management server A controls the system so that the invitation cannot be sent again to the user who approves or refuses once. If the CPU judges that the pending status of the invitation is continued beyond a predetermined period from the beginning of the invitation on the basis of the date information Data indicating the date of the invitation the CPU forcibly updates the status information Stat to 1 indicating the refusal. If a field indicating that the record is valid or invalid is newly added the record may be invalid after the lapse of the predetermined period.

In one record of the application information table TBL shown in the record identification information ID the identification information AppID an application name information indicating the name of the application the name of the game an explanation information indicating the details of the application the game and an icon information indicating an icon corresponding to the application are associated with each other and are stored.

The CPU of the management server A functions as an accepting unit a specifying unit an instructing unit a display controlling unit an information acquiring unit and a notifying unit by executing a predetermined control program.

The accepting unit accepts the identification information AppID identifying the application designated through an operation the terminal device performed by the request user requesting a presentation of a candidate user who is a candidate for a friend. The identification information AppID may presented from the terminal device or from the application servers B C D.

In the friend request the specifying unit specifies a part or all of the candidate users satisfying all of conditions among the users with whom the friendship is built in the application other than one in which the friend request is sent out of utilized applications the request user has utilized. The first condition is that the candidate user utilizes the application indicated with the identification information AppID accepted by the accepting unit . The second condition is that the request user s friendship with the candidate has not been built in the designated application. The third condition is that the friend upper limit is not encountered. The friend request is conducted for the game in which the request user wants to become the friend with another user on the premise that the request user s friendship is built with the other user in the game other than one in which the request user wants to become the friend with the other user. Therefore the other user needs to utilize the designated application the first condition . The request user wants to become the friend with the other user. Consequently it is natural that the request user s friendship is not built with the other user the second condition . It is necessary to consider the friend upper limit the third condition .

In the invitation the specifying unit specifies a part or all of the candidate users satisfying the condition that the part or all of the candidate users do not utilize the application designated with the identification information AppID accepted by the accepting unit .

The display controlling unit displays a part or all of the candidate users specified by the specifying unit in the terminal device of the request user in a selectable way. Specifically the display controlling unit generates a page on which it is possible to select one or more the candidate users refer to .

The selectable way includes an aspect that the candidate users are displayed to the request user to be selected in a sequence by switching pages per a predetermined unit out of all of the candidate users. The selectable way also includes another aspect that one or more the candidate users are displayed to the request user to be selected by extracting one or more the candidate users out of all of the candidate users randomly or according to a predetermined rule. The display controlling unit displays usage information relating to the application acquired by an information acquiring unit in the terminal device of the request user.

The instructing unit instructs the application servers B C D corresponding to the application indicated with the identification information AppID accepted by the accepting unit to send the friend request to the users selected out of one or more the candidate users by the request user. Accordingly a requested user notices that the friend request is conducted when accessing the application servers B C D. The requested user can know that the friend request reaches on a page such as the user s own page.

The information acquiring unit acquires the usage information relating to a predetermined application which is popular among predetermined friends and is accepted by the accepting unit in an inquiring processing described later. The details of the inquiring processing will be described later.

The notifying unit notifies the candidate user selected out of one or more the candidate users displayed in the terminal unit of an invitation request. The details of this processing will be described later.

In the application system it is possible for a certain user to invite another user who does not play the game to the game that the certain user plays. It is possible to send the friend request to the other user playing the game including a friend in the other game. It is possible for the user to inquire games which is popular among the friends in plural games the user plays or the number of friends who play each game. Common processing that is common to the invitation and the friend request the friend request processing relating to the friend request the invitation processing relating to the invitation and the inquiring processing relating to various inquiries will be described below.

When the CPU of the management server A receives the login request the CPU of the management server A executes authentication processing S . Specifically the CPU judges whether or not a pair of the login identification information UserID and the password is stored. If judgment condition is satisfied the CPU allows a login. If the judgment condition is not satisfied the CPU refuses the login. The CPU sends a login response indicating a result of the judgment to the terminal device . The pair of the login identification information UserID and the password once inputted in the terminal device has been being stored for a predetermined period in the terminal device . Therefore the login can be omitted only for the predetermined period.

After that it is assumed that one user selects the game by selecting a selection item S . In this case the CPU of the terminal device sends a user s own page browsing request to the management server A.

If the CPU of the management apparatus A receives the user s own page browsing request the CPU acquires the reference identification information RefID corresponding to the login identification information UserID by referring the ID management table TBL. The CPU acquires the user identification information UID corresponding to the reference identification information RefID and the identification information AppID of the game b by referring the user information table TBL S .

If the CPU of the management server A sends the user s own page browsing request including the user identification information UID to the application server B providing the game b the application server B generates the user s own page for the game b corresponding to the user identification information UID to send this information as a user s own page browsing response to the terminal device through the management server A.

The user identification information UID acquired in step S may be notified to the terminal device so that the communication between the terminal device and the application server B may be conducted without using the management server A.

If the CPU of the terminal device receives the user s own page browsing response the CPU displays the user s own page for the game b on the display S . If the user selects INVITE FRIEND from the selection item of the user s own page the screen shown in is displayed for instance. In this screen if the user clicks a button indicating RECOMMENDATION REQUEST the application server B extracts the other users with whom the one user s friendships are not built so that the application server B generates a page of a list of the extracted users and notifies the page to the terminal device . The one user selects some users with whom the one user wants to become friends out of the list. The CPU of the management server A notifies the some users selected by the one user that friend requests have been sent to the selected some users by displaying that on the selected users own page for example. If a current number of the one user s friend reaches the friend upper limit in the game b the button indicating RECOMMENDATION REQUEST is set to be invalid not to be clicked or not to be displayed.

In this screen if the one user selects SEARCH FROM OTHER GAMES by clicking a button this page is switched to a friend page. The data to link to the friend page of the SNS site is assigned to the button . The data also includes the identification information AppID indicating the game b and the user identification information UID indicating the one user. If the CPU of the management server A receives an access request to the friend page the CPU of the management server A executes the friend processing S and sends an access response back.

With reference to and the details of the friend processing will be described. In the following explanation the one user who selects SEARCH FROM OTHER GAMES is called user A . The subscript a is added to information relating to the user A. The subscript is added to information relating to the other users. The identification information AppID is common information to the user A and the other users which is uniquely defined for each game. Therefore the subscript x is added to the identification information AppID. The reference identification information UID is information that is given for each game so that different user identification information UID is assigned to a unique user if the unique user plays a different game. Therefore the subscript ax is added to the user identification information UID of the user A. The subscript x is added to the user identification information UID of the other users.

The CPU acquires the user identification information UIDax and the identification information AppIDx of the game to which the user A wants to invite the other users which are included in the received access request S . In this embodiment the acquired identification information AppIDx is 00000001 which indicates game b that is subject to the friend request and the invitation. The acquired user identification information UIDax is XCV56714 .

The CPU executes processing of judging whether or not the number of friends of the user A reaches the friend upper limit S S . The CPU extracts the user identification information UID x of the other users in records in each of which the status information Stat associated with the user identification information UIDax of the user A indicates a friendship status Stat 1 or a pending status Stat 0 by referring to the relation table TBL. The CPU accumulates the number of the extracted information S . The CPU acquires the friend upper limit corresponding to the user identification information UIDax of the user A by referring to the friend upper limit table TBL S .

The CPU judges whether or not the acquired friend upper limit exceeds the accumulated number of the user identification information UID x of the other users S . If this judgment condition is negated the accumulated number of the user identification information UID x of the other users that is the number of the friends and the users in the pending status for the user A has reached the friend upper limit in the game in which the user A wants to send the friend request to the other users. Therefore the friend request is unavailable. In this case the CPU sets a flag indicating that the friend request is unavailable S .

The CPU acquires the reference identification information RefID of the user A out of the use identification information UIDax by referring to the user information table TBL S . The CPU specifies one or plural pairs of the identification information AppID and the user identification information UIDax corresponding to the reference identification information RefIDa of the user A by referring to the user information table TBL S . For example assuming that the details stored in the user information table TBL is ones show in and the reference identification information RefIDa of the user A is 00000011 in this case the pairs of the identification information AppIDx and the user identification information UIDax are AppID 00000001 UID XCV56714 AppID 00000002 UID YUJ85224 AppID 00000003 UID 23150QWE . The pairs of all of the extracted identification information AppID and the user identification information UIDax include the pair AppID 00000001 UID XCV56714 in a subject game that is subject to the friend request or the invitation. Therefore the pairs except for the pair in the subject game are described as all of the extracted pairs of the identification information AppIDx and user identification information UIDax in the following processing. This is because the other user with whom the user A s friendship has been built in the subject game cannot be subject to the friend request or the invitation.

The CPU judges whether or not the processing in step S S is terminated with respect to all of the extracted pairs of the identification information AppIDx and user identification information UIDax S . The CPU terminates the friendship processing if the processing in step S S is terminated. If the processing in step S S is not terminated one of the pairs of the identification information AppIDx and user identification information UIDax for which the processing is not terminated is focused on.

The CPU acquires the name of the application and the icon information corresponding to the focused identification information AppIDx by referring the application information table TBL S . The acquired names of the applications names of the games are displayed on an area of a friend search page mentioned below refer to . Icons indicated by the icon information are displayed on an area .

The CPU conducts the processing of counting the number of the friends in the focused applications S S . The CPU extracts the user identification information UID x of the friends corresponding to the focused user identification information UIDax S . The user identification information UID x of the friends with whom the user A s friendships are built in the games other than the subject game are extracted. Specifically the receiver s reference identification information RefID To is extracted out of the record in which the user identification information UIDax of the use A in a certain game coincides with the requester s user identification information UID From. The requester s identification information RefID From is extracted out of the record in which the user identification information UIDax coincides with the receiver s user identification information UID To. The user identification information UID corresponding to the extracted receiver s user identification information RefID To and the extracted requester s reference identification information RefID From become the user identification information UID x of the friends with whom the user A s friendships are built.

The CPU accumulates the number of the extracted user identification information UID x of the friends S . The accumulated numbers of the friends are displayed on the friend search page as the friend number for each game refer to an area in described below .

The CPU conducts the processing of specifying the other users who can be invited to the focused application S S . The CPU extracts the user identification information UID x of one or more the candidate users who are the users do not play the subject game that is subject to invitation out of the user identification information UID x of the friends extracted in step S by referring the user information table TBL S . Specifically the CPU acquires the reference identification information RefID of the friends corresponding to the user identification information UID x of the friends extracted in step S by referring the user information table TBL and acquires one or plural identification information AppIDx corresponding to the acquired reference identification information RefID . If the identification information AppIDx of the subject game is not included in the acquired one or plural identification information AppIDx the CPU extracts the user identification information UID x and the reference identification information RefID of one or more the candidate users who do not play the subject game. According to the embodiment the user information table TBL associating the identification information of various games with the user identification information UID of all of the users is provided so that it is possible to centrally manage the users of plural games.

If the CPU confirms that the reference identification information RefIDa indicating the use A is recorded as the requester and the reference identification information RefID corresponding to the user identification information UID x of the candidate user is recorded as the receiver in the invitation table TBL the CPU excludes the user identification information UID x of the candidate user and extracts the user identification information UID x of remaining candidate users to accumulate them S . The pairs of the user as the requester whose invitation is pending or has been accepted and the user as the receiver are recorded in the invitation table TBL. The invitation is not conducted again for the user in the pair including the user who has been invited even once. Therefore it is possible to specify the users whom the user A can invite and the number of the users. The accumulated numbers of the friends whom the user A can invite are displayed on the friend search page for each game refer to an area of described below .

The CPU conducts the processing of specifying the user to whom the friend request can be sent in the focused application S S . If the flag indicating that the friend request is unavailable is set in the processing of step S the CPU proceeds the processing to step S without conducting the above processing S S . The CPU extracts the user identification information UID x of the users non friends with whom the user A s friendships have not been built S . The CPU extracts the users with whom the user A s friendships is built in the game other than the subject game in which the user A wants to conduct the friend request and who have utilized the subject game the first condition and extracts the users with whom the user A s friendships is not built in the subject game the second condition . According to the embodiment the pairs of the requesters and the receivers in the friend request are stored in the relation table TBL so that it is unnecessary to memorize all of the other user information in records in which the status information associated with one user information indicates the friendship status using the one user information as a key it is possible to reduce the memory capacity.

In the above described step S the identification information AppIDx indicating the utilized games the user A utilizes and the user identification information UIDax of the user A in the utilized games are specified. In step S and thereafter one of the pairs of the extracted identification information AppIDx and the user identification information UIDax of the other users utilize the utilized games corresponding to the extracted identification information AppIDx is focused. The CPU extracts the other users playing the utilized game the user A utilizes by referring the user information table TBL the first condition .

The CPU may specify the other users satisfying the first condition by using the result of the extraction in step S. The CPU may specify the user identification information UID x of the other users with whom the user A s friendships are built in the subject game in which the user A wants to conduct the friend request by referring to the relation table TBL and by using the result of the extraction in step S. The CPU excludes the other users specified by the result of the extraction in step S out of the other users satisfying the first condition and extracts the user identification information UID x of the users non friends with whom the user A s friendships have not been built.

The CPU judges whether or not the processing of steps S S is terminated for the user identification information UID x of all of the users extracted in step S with whom the use A s friendship is not built S . If the judgment condition is satisfied the CPU proceeds the processing to step S. If the judgment processing is not satisfied the CPU proceeds the processing to step S and accumulates the number of friends of a focused non friend indicated with the user identification information UID x of the focused non friend by referring the relation table TBL. In this case as in step S the CPU extracts the receiver s reference identification information RefID To out to the record in which the requester s user identification information UID From coincides with the user identification information UID x of the focused non friend and extracts the requester s reference identification information RefID From out of the record in which the receiver s user identification information UID To coincides with the user identification information UID x of the focused non friend. The number of the user identification information UID corresponding to the extracted receiver s reference identification information RefID To and the extracted requester s reference identification information RefID From becomes the number of the friends of the focused non friend indicated with the user identification information UID x of the focused non friend. The CPU accumulates the number of the friends of the focused non friend.

The CPU acquires the friend upper limit of the focused non friend indicated with the user identification information UID x of the focused non friend by referring to the friend upper limit table TBL S . The CPU compares the acquired friend upper limit with the accumulated the number of the friends and judges that the friend request is available for the focused non friend if the accumulated number of the friends does not reach the friend upper limit the third condition . If the accumulated number reaches the friend upper limit the CPU judges that the friend request is unavailable for the focused non friend S . The CPU returns the processing to step S and repeats the processing of the steps S S until the judgment condition of the step S is satisfied. If the judgment condition of the step S is satisfied the CPU proceeds the processing to step S.

In step S the CPU specifies the user identification information UID x of the non friends to whom the friend request can be sent and accumulates the number the non friends. The accumulated number of the non friends is the number of the users with whom the user A s friendships is not built in the subject game and with whom the user A s friendships is built in the other games other than the subject game. The accumulated number of the non friends is displayed on the friend search page for each game refer to an area in described below .

The CPU stores the game information of focused game corresponding to the focused identification information AppIDx acquired in the processing in step S the number of the friends playing the focused game accumulated in the processing in step S the number of the users who can be invite to the focused game accumulated in the processing in step S and the number of the users to whom the friend request can be sent in the focused game accumulated in the processing in step S on a variable area or a working area temporally S .

The CPU returns the processing to step S illustrated in . If the processing of steps S S for all of the identification information AppIDx extracted in step S is terminated the CPU generates the friend search page on which games are arranged in descending order of the number of the friends S and terminates the processing.

In the processing of step S if the flag indicating that the friend request is unavailable is set the CPU does not display the number of the friends playing the focused gamed accumulated in step S or displays the message You have hit your friend request limit. You can t send a friend request. 

The explanation will be back to . If the friend processing is terminated in the management server A S and the friend search page is generated the CPU of the management server A sends the friend response including the friend search page to the terminal device . If the CPU of the terminal device receives the friend response the CPU displays the friend search page on the display . illustrates an example of the friend search page. In this example game display areas are arranged. The games are displayed on the game display area the game display area and the game display area in the descending order of the number of the friends utilizing the games.

In the area an icon is displayed using the icon information read from the application information table TBL. In the area the name of the application the name of the game is displayed. These pieces of information are acquired in the processing of step S. In the area the number of the friends with whom the user A s friendships are built is displayed. This information is acquired in the processing of step S. In the area the number of the friends who can be invited by the user A. This information is acquired in the processing of step S. In the area the number of the friends to which the friend request can be sent by the user A. This information is acquired in the processing of step S.

In this example the CPU displays the number of the friends who can be invited together with the number of the friends to whom the friend request can be sent on the terminal device for each of the utilized applications. However the CPU may be provided with only a part of the functions so that only either of the numbers is displayed. The names of the users who become candidates for the friend request or the invitation may be displayed without displaying the number of the users. The number of the friends and the names of users who become candidates may be displayed.

In this example the CPU specifies the number of the users to whom the friend request can be sent for each of utilized games to display the number on the terminal device for each of utilized games. The CPU may specify the total number of the users to whom the friend request can be sent for plural utilized applications to display the total number on the terminal device of the request user. The total number of the users who can be invited may be specified for plural utilized applications as in the friend request to display the total number on the terminal device of the request user.

If the user A selects either of the games displayed on the area area and area S illustrated in the CPU of the terminal device sends the detail page request to the management server A. If the CPU of the management server A receives the detail page request the CPU generates the detail page corresponding to the selected game S to return the detail page response including the detail page to the terminal device . If the CPU of the terminal device receives the detail page response the CPU displays the detail page on the display .

In the detail page for the friend request illustrated in it is displayed in the area how many more users having the friendship with the user A in the other games the user A can send the friend request to for the game b. The number of the users to whom the friend request can be sent is the same as that displayed in the area illustrated in . The number is acquired by the processing of step S. If the friend upper limit for the user A is less than the number of the users to whom the friend request can be sent the number that is the difference between the current number of friends and the friend upper limit is displayed. In the areas the names of the users who are candidates for the friend request and checkboxes are displayed. It is possible to conduct the friend request by checking the checkboxes and clicking the button . The friend request can be sent to plural users simultaneously.

According to the embodiment a screen on which the utilized games can be selected is displayed on the terminal device of the request user. Further having the friendship for the selected utilized game becomes a condition for being the candidate user. Therefore it is possible for the request user to select the game to suit the request user s preference. For example it is possible to select the utilized game similar to the game in which the request user wants to conduct the invitation.

If the CPU of the management server A receives the request of the friend request the CPU updates the stored contents of the relation table TBL S . Specifically the CPU acquires the requester s reference identification information RefID From corresponding to the requester s user identification information UID From and the receiver s reference identification information RefID To corresponding to the receiver s user identification information UID To and generates the record in which the status information Stat is set to pending Stat 0 to store the record in the relation table TBL . If the identification information AppID is included in the request for the friend request the identification information AppID may be used. The identification information AppID corresponding to the requester s user identification information UID From and the receiver s user identification information UID To may be acquired by referring to the user information table TBL.

It is assumed that the game in which the user A wants to conduct the friend request is the game b and the user A sends the friend request to the other users with whom the user A has the friendship in the game c but not have the friendship in the game b. In this case the CPU of the management server A sends friend request notification together with the user identification information UID of the other users as receivers of the friend request to the management server B that manages the game b for which the friend request is sent. The CPU functions as the instruction unit instructing the application server B providing the game b to indicate the friend request for the other users as receivers who the user A selects from one or more the candidate users. If the application server B receives the friend request notification the application server B updates the management table so that the friend request from the user A can be displayed on the other users own page S .

The management server A returns the friend request response to the terminal device . If the CPU of the terminal device receives the friend request response the CPU indicates that the friend request is pending on a page such as the user A s own page.

According to the embodiment the management server A displays one or more the candidate users satisfying the first second and third conditions on the terminal device of the user A so that the user A can select one or more the candidate users. The first second and third conditions will be explained below.

The first condition the user has a friendship with the user A in the utilized application the user has utilized and utilizes subject application in which the user A wants to conduct the friend request.

Accordingly it is possible to exploit trust relationships that are built in different applications even in a new application. If one user plays a certain game the one user can send the friend request to familiar users with whom the friendships are built in the other games without sending the friend request to strange users. There is a merit that it is easy to build the friendship with the other users when starting a new game.

According to the embodiment the pairs of the user information of the users having the friendships with each other are stored in the relation table TBL in the management server A. Therefore it is possible to centrally manage the friendships that are built in various applications. The user information table TBL in which the identification information and the user information are associated with each other to be stored is provided. Therefore it is possible to satisfy the first condition by referring to the user information table TBL.

According to the embodiment the pairs of request sides and recipient sides are stored in the relation table TBL. Therefore it is unnecessary to store all of the other user information in records in which the status information associated with one user information indicates the friendship status using the one user information as a key. This allows the memory capacity for data to be reduced.

According to the embodiment the friend upper limit set for each of applications is centrally managed in the management server A by using the first friend upper limit table TBL. Therefore it is possible to select the played application.

According to the embodiment the utilized applications are displayed in the terminal device of the user A so that the utilized applications can be selected. Having the friendship for the selected utilized game becomes a condition for being the candidate user. Therefore it is possible for the user sending the friend request to select utilized application similar to the application in which the user wants to build a friendship. It is easy to select the application and the friend if the application and the friend for the invitation have been decided.

According to the embodiment it is possible to know the number of the users to whom the friend request can be sent the convenience for the user sending the friend request is significantly improved.

According to the embodiment it is possible to know the number of the users to whom the friend request can be sent the convenience for the user sending the friend request is significantly improved.

The number of the friends who can be invited displayed in the area is acquired by the processing of steps S and S. The CPU extracts one or more the candidate users satisfying the condition that one or more the candidate users do not play the subject game that is subject to the invitation. The CPU extracts the user identification information UID x of one or more the candidate users who do not play the game that is subject to invitation out of the user identification information UID x of the friends having the friendships with the user A in a certain game other than the subject game by referring the user information table TBL S . Specifically the CPU acquires the reference identification information RefID of the friends corresponding to the user identification information UID x of the friends extracted in step S by referring the user information table TBL and further acquires the pair of the extracted user identification information UID x of the friends the acquired reference identification information RefID and one or plural identification information AppIDx corresponding to the acquired reference identification information RefID . The CPU extracts the user identification information UID x of one or more the candidate users and the reference identification information RefID x in the pairs not including the identification information AppIDx of the subject game in which the invitation is conducted. That is the CPU extracts the user identification information UID x and the reference identification information RefID x of one or more the candidate users not playing the subject game that is subject to the invitation.

The CPU extracts pairs other than ones in which the reference identification information RefIDa indicating the user A as a requester and the reference identification information RefID x corresponding to the user identification information UID x of the candidate user as a receiver are recorded in the invitation table TBL and accumulates them S . The CPU excludes the users who has the invitation pending or has accepted the invitation recorded in the invitation table TBL so that the CPU specifies one or more the candidate users who the user A can invite and the number of one or more the candidate users.

In if the CPU of the management server A receives the invitation request the CPU updates the memory contents of the invitation table TBL S . Specifically the CPU acquires the requester s reference identification information RefID From corresponding to the requester s user identification information UID From the receiver s reference identification information RefID To corresponding to the receiver s user identification information UID To and the identification information AppID by referring to the invitation table TBL. The CPU generates the record in which the status information Stat is set to Pending Stat 0 and stores the record in the invitation table TBL. As illustrated in in one record of the invitation table TBL the record identification information ID the identification information AppID the requester s reference identification information RefID From that is the reference identification information RefID of the user as the requester the receiver s reference identification information RefID To that is the reference identification information RefID of the user as the receiver a date information Date indicating the date of the invitation and a status information Stat indicating the status of the invitation are associated with each other to be stored. If the status information Stat is 0 it indicates that the invitation is pending. If the status information Stat is 1 it indicates that the invitation has been approved or refused. The CPU rewrites the contents of the status information Stat depending on the status. In the example show in the CPU generates the record in which ID is 1 in the invitation table TBL at the timing that the user whose reference identification information RefID is 00000011 conducts the invitation and rewrites the status information Stat to 0 . The rewriting unit rewrites the status information Stat to 1 at the timing that the user whose reference identification information RefID is 00003120 receives the invitation and accepts or refuse the invitation.

In the embodiment the first status includes a refusal and an acceptance. Therefore the user is excluded from the candidate user in not only the case that the invitation is refused in but also the case that the invitation is accepted. It is unnecessary to invite the user accepting the invitation because the user has played the subject game that is subject to the invitation. It is possible to exclude the refusing user and the invited user simultaneously and to reduce the processing load by using the above described data structure.

It is assumed that the game to which the user A wants to invite is the game b and the user A invites the other user B having the friendship with the user A in the game C. The user A manages the terminal device . The user B manages the terminal device . In this case the CPU of the management server A sends the invitation mail notifying that the invitation is conducted. The CPU may display the message notifying that the user A invites the user B to the game b on the user B s own page of the SNS site in the management server A for the user B. The CPU of the management server A may send an invitation article to the other social medium or the bulletin board to post that. As illustrated in the CPU functions as the notifying unit notifying the user A s invitation request to one or more the candidate users selected out of one or more the candidate users displayed in the terminal device .

The CPU of the management server A sends the invitation response back to the terminal device . If the CPU of the terminal device receives the invitation response the CPU displays that the invitation is pending.

According to the embodiment if the user plays a certain game the user can send the friend request to the familiar friends with whom the friendships are built in the other games without sending the friend request to strange users. Therefore there is a merit that it is possible to spread a new game to the friends in the other games. Further there is a merit that it is easy to build a friendship in a new game if the friends in the other games participate in the new game.

The CPU as the specifying unit excludes the record in which the status information Stat is 1 from records that are subject to extraction when extracting the user identification information UID x of one or more the candidate users who can be invited by referring to the invitation table TBL. It is the case that the invitation is accepted or refused if the status information Stat is 1 . Therefore the specifying unit does not send the invitation again to such a user. According to the embodiment the invitation table TBL is managed by associating the status information indicating the status of the invitation with the user information. It is possible to know the status of the invitation by referring to the invitation table TBL. It is possible to prevent a nuisance that the invitation is sent again even if the invitation is refused since the user is excluded from one or more the candidate users if the status information indicates refusal.

According to the embodiment it is possible to cut waste that the invitation is sent again even if the invitation is pending since the user to whom the invitation is pending is excluded from one or more the candidate users and to reduce the processing load of the management server A.

The inquiring processing is processing of inquiring of the management server A the usage information relating to the applications the friends of the user A utilize. The usage information includes the ranking of popular games among the friends the number of the friends who utilize a certain game the number of the user to whom the friend request can be sent and the number of the user who can be invited.

The inquiring processing includes ranking processing of indicating popular games among the friends friend number processing of specifying a certain game and inquiring the number of the friends who play the certain game.

The ranking processing will be explained. The ranking processing includes the first ranking processing and the second ranking processing. The first ranking processing is processing of deciding the ranking of the popular among the users with whom the friendships are built in specified games. The second ranking processing is processing of deciding the ranking of the popular games among the users with whom the friendships are built in unspecified games.

The screen illustrated in is displayed on the display of the terminal device of the user A. In this screen the button corresponds to the first ranking processing. The button corresponds to the second ranking processing.

Specifically the CPU extracts the record satisfying that Group Friends AND UID To UIDax OR UID From UIDax AND Stat 1 and specifies one or plural of the user identification information UID x included in them.

The CPU accumulates the number of the extracted user identification information UID x for each of the identification information AppIDx S . The CPU specifies the order of the popularity of the games specified by the identification information AppIDx. The CPU acquires the names of the games corresponding to the extracted identification information AppIDx the explanation information and the icon information by referring to the application information table TBL . The CPU generates the first ranking page. The CPU arranges the explanation of the games in the descending order of the number of the friends playing the games and generates the first ranking page.

If the terminal device receives an access response including the first ranking page from the management server A the terminal device displays the first ranking page on the display S .

The CPU in step S specifies the user identification information UIDax of the user A in the game illustrated in out of the plural games and specifies the users having the friendships with the user A in the illustrated game by referring to the user identification information UID x. The CPU functions as the information acquiring unit for acquiring the usage information indicating the ranking of each game that the specified users that is the friends play and the number of the friends playing each game.

According to the embodiment the information acquiring unit acquires the usage information relating to the application the friends of the user A who are the request users utilize in the application associated with the access request to the page of the popular application that is popular among the friends. The display controlling unit displays the acquired usage information in the terminal device . This allows the request user to obtain various information relating to the friends through the specific application.

If SEE POPULAR GAME AMONG THE OTHER FRIENDS is selected S by clicking the button the screen is switched to the popular application page of the management server A. The link to the popular application page in the SNS site is defined to the button . In the definition of the link the link information of the user identification information UID indicating the users is included. If the CPU of the management server A receives an access request to the popular application page which is popular among the friends in the plural games the users play the CPU executes the second ranking processing of generating the second ranking page S . If the CPU of the terminal device receives the access response including the second ranking page from the management server A the CPU displays the second ranking page on the display S .

The ranking of the popular application by using the button is the ranking of the application that is popular among the friends in the specific game. However the ranking of the popular application by using the button is the ranking of the application that is popular among the friends in any of the plural games the users play. If the user plays only one game the details of the ranking of the popular applications by using the button becomes the same as that by using the button .

Specifically the CPU extracts the record satisfying that Group Friends AND RefID To RefIDa OR RefID From RefDa AND Stat 1 and extracts one or plural of the pairs of the identification information AppIDx and the user identification information UID x included in them.

The CPU accumulates the number of the extracted user identification information UID x for each of the identification information AppIDx S . The CPU specifies the order of the popularity of the games specified by the identification information AppIDx on the basis of the accumulated number of the user identification information UID x of the friends S . The CPU acquires the names of the games corresponding to the extracted identification information AppIDx the explanation information and the icon information by referring to the application information table TBL . The CPU generates the second ranking page S . The CPU arranges information including the explanation of the games in the descending order of the number of the friends playing the games to generate the second ranking page. If the terminal device receives the access response including the second ranking page from the management server A the terminal device displays the second ranking page on the display .

The CPU in step S specifies the identification information AppIDx of the game the user A has utilized out of the plural games and further specifies the users having the friendships with the user A by using the user identification information UID x. The CPU functions as the information acquiring unit for acquiring the usage information indicating the ranking of each game that the specified users that is the friends play and the number of the friends playing each game.

According to the embodiment the applications games are displayed in the descending order of the number of the users utilizing the games among the friends. Therefore the user can know the popular ranking of the applications games at a glance.

In the area the icon is displayed using the icon information read from the application information table TBL. In the area the name of the application the name of the game is displayed. These pieces of information are acquired by the processing in step S. In the area the number of the other users who have the friendships with the user A in any of the games the user A plays and who have played the game b. This information is acquired by the processing in step S. In the area the explanation of the game b is displayed. This information is acquired by the processing in step S. The games displayed in the page also includes the game the user A has not played.

According to the embodiment it is possible to know the number of the friends playing the game for each game. This allows the user to know the game that is popular among the friends. Therefore it is possible for the user to obtain the criterion in the case of selecting a new game.

According to the embodiment the information acquiring unit acquires the usage information relating to the applications the friends utilize the friends with whom the friendships are built in the utilized applications the user A who is the request user has utilized. The display controlling unit displays the acquired usage information in the terminal device . Therefore the user A who is the request user can obtain various information relating to the applications the friends utilize.

The friend number processing will be explained. illustrates an operation sequence of the application system relating to the friend number processing. In the user s own page of the SNS site that the management server A provides for each user the friend number button is provided. It is possible to specify the game and inquire the number of the friends by using the friend number button.

If the user A selects the number of the friends by clicking the friend number button relating to a certain game in the terminal device of the user A S the CPU of the terminal device sends friend number request to the management server A. If the CPU of the management server A receives the friend number request the CPU executes the friend number processing for generating the friend number page S .

Specifically the CPU extracts the record satisfying Group Friends AND AppID AppIDx OR RefID To RefIDa AND RefID From RefIDa and extracts one or plural of the user identification information UID x included in them.

The CPU accumulates the number of the extracted user identification information UID x S . The CPU acquires the names of the games corresponding to the identification information AppIDx the explanation information and the icon information by referring to the application information table TBL . The CPU generates the friend number page S .

According to the embodiment it is possible to designate the game and know the number of the friends playing the designated game. Therefore it is possible to know the popularity of an interested game among the friends.

According to the embodiment the number of the users who play the application game is displayed in the terminal device . Therefore it is possible for the users to obtain more detailed information than a relative ranking.

The present invention is not limited to the above described embodiment. For example variations described below are possible. Each variation can be combined suitably.

 1 In the above described embodiment a game is picked up for the explanation of an example of the application. The present invention is not limited to the example. Any kind of application can be applied for the invitation or the ranking of the popular applications. For example the application for fortune telling or diagnosis the application for a convenient tool and the application for photographic image processing can be applied. The application for a chat or a bulletin board used after building a friendship is suitable for the friend request.

 2 In the above described embodiment in the case of specifying one or more the candidate users for the friends in the ranking processing or in the friend number processing for a specific game there is no mention about the last login date. The present invention is not limited to the example. For instance by using the user information table TBL as an example of an access table and using the last login information LastLogin associated with the user identification information UID to be stored in the user information table TBL in the case of specifying one or more the candidate users using the application that is subject to the friend request in the case of specifying the number of the friends using the application for each application or in the case of specifying the number of the friends in a certain game using the application in a predetermined period may be added to the condition.

For instance as an alternative of the friend processing illustrated in the friend processing illustrated in may be conducted. is a flowchart of the friend processing corresponding to . In the processing in step S and step S is added after the processing in step S. The CPU of the management server A conducts the processing from step S to step as in the processing illustrated in . By referring to the user information table TBL the CPU acquires the last login date of the pair coinciding with the pair of the user identification information UID x of the friends extracted in the step S and the focused identification information AppIDx S . The last login date is stored in the field of the last login information LastLogin of the user information table TBL. The CPU extracts the pair of the user identification information UID x of the friends and the focused identification information AppIDx in which the last login date is within a predetermined period on the basis of the acquired last login date and current date when the processing is being conducted and further extracts the user identification information UID x of the friends in the extracted pair S . According to the above described processing it is possible to specify only one or more the candidate users for the friends using the application in a predetermined period.

As an alternative of the ranking processing illustrated in the ranking processing illustrated in may be conducted. is a flowchart of the ranking processing corresponding to the second ranking processing illustrated in . In the processing of step S and step S is added between step S and step S. The CPU of the management server A acquires user identification information UIDax included in the received access request as in the ranking processing illustrated in S . The CPU acquires the reference identification information RefIDa of the user A using the user identification information UIDax by referring to the user information table TBL S . The CPU extracts the pairs of the identification information AppIDx corresponding to the reference identification information RefIDa of the user A and the user identification information UID x of the friends in which the group information Group indicates Friends by referring to the relation table TBL S . The CPU acquires the last login dates in the pairs coinciding with the pairs of the user identification information UID x of the friends and the identification information AppIDx extracted in step S by referring to the last login information LastLogin of the user information table TBL S . The last login dates are stored in the field of the last login information LastLogin of the user information table TBL. The CPU extracts the pairs of the user identification information UID x of the friends and the identification information AppIDx in which the last login dates are within a predetermined period on the basis of the acquired last login dates and current date when the processing is being conducted and further extracts the user identification information UID x of the friends in the extracted pairs S .

The CPU accumulates the number of the extracted user identification information UID x for each of the identification information AppIDx S . The CPU specifies the order of the popularity of the games specified by the identification information AppIDx on the basis of the accumulated number of the user identification information UID x of the friends S . The CPU acquires the names of the games corresponding to the extracted identification information AppIDx the explanation information and the icon information by referring to the application information table TBL . The CPU generates the second ranking page S . The CPU arranges information including the explanation of the games in the descending order of the number of the friends playing the games to generate the second ranking page. If the terminal device receives the access response including the second ranking page from the management server A the terminal device displays the second ranking page on the display . As a result of the above described processing it is possible to display the ranking for each application with respect to only one or more the candidate users who are the friends using the application in a predetermined period.

As an alternative of the ranking processing illustrated in the friend number processing illustrated in may be conducted. is a flowchart of the friend number processing corresponding to . In the processing of step S and step S are added between the step S and the step S. The CPU of the management server A conducts the processing from step S to step as in the friend number processing illustrated in . The CPU acquires the last login dates of the pairs coinciding with the pairs of the user identification information UID x of the friends and the focused identification information AppIDx extracted in step S by referring to the user information table TBL S . The last login dates are stored in the field of the last login information LastLogin of the user information table TBL. The CPU extracts the pairs of the user identification information UID x of the friends and the focused identification information AppIDx in which the last login dates are within a predetermined period on the basis of the acquired last login dates and the current date when the processing is being conducted and further extracts the user identification information UID x of the friends in the extracted pairs S . As a result of the above described processing it is possible to display the number of the friends with respect to only one or more the candidate users who are the friends using the application in a predetermined period.

It sometimes happens that the user ceases to play the game if the user finds that the user does not like the game after playing the game on a trial basis. However it is possible to send the friend request to the user playing the game by making it a condition that the user plays the application within a predetermined period. In another example the user may select a period of time such as one month and one week as the predetermined period when sending the friend request. A different period of time may be set as the predetermined period depending on the application. If the user identification information UID is associated with the last login information LastLogin to be stored any table may be used in the present invention. The table may be arranged separately from the user information table TBL.

According to the variations candidate users are limited to the users who play the application within the predetermined period. Therefore the users who cease to play the application after playing the application on a trial basis are excluded from one or more the candidate users. As a result there is a merit to be able to select the users who actually play the focused application as one or more the candidate users.

According to the variations the applications are displayed in descending order of the number of the friends playing the application within the predetermined period by referring to the date information. This allows the users to know the popularity ranking of the applications utilized by the friends in a certain period at a glance. It sometimes happens that the users cease to utilize the application after utilizing the application on a trial basis. Therefore it may be desirable to exclude the utilization of a trial basis from the coverage of the ranking. According to the variations the ranking is made with respect to the applications utilized within the predetermined period of time. It is possible to rank the applications after excluding the utilization of a trial basis.

According to the variations the number of the users utilizing a certain application within the predetermined period among the friends is specified by referring to the date information. It is possible to know the number of the users utilizing a certain application over the certain period among the friends at a glance.

In the variations it is explained that utilizing the game within the predetermined period is added to the condition in the case of specifying the number of the friends for each game in the second ranking processing. This variation can be applied to the first ranking processing. If this variation is applied to the first ranking processing the processing corresponding to step S illustrated in may be conducted between step S and step S illustrated in .

 3 Although the invitation can be conducted for plural users in the above described embodiment a limitation may be added to this embodiment. Specifically a limitation may be set on the number of the users who can be invited for a predetermined period for instance one day one week . A upper limit of the number of the invitation mails may be set in order to prevent many invitation mails coming. In this case the invitation may be sent only to the users such that the number of the records in which the status information Stat of the user as a receiver is 0 pending is less than ten in the invitation table TBL. Reception of the invitation may be limited at the side of the user as a receiver. For instance if the number of the records in which the status information is 0 pending is more than ten the invitation may be refused without sending the invitation mail to the receiver.

The invitation may be limited so that the number of the records in which the status information Stat of the user as a requester is 0 pending does not exceed ten. In addition if the invited user starts the game incentive such as a point may be provided to the invited user.

 4 In above described embodiment it is explained that the processing of Friend request Invite and Ranking is selected on the user s own page in the application servers B C D. However the present invention is not limited to this embodiment. The processing of Friend request Invite and Ranking may be selected on the user s own page of the SNS site of the management server A.

If the processing of Friend request Invite and Ranking is selected on the user s own page in the application servers B C D information such that the selected game is game b and the requester is Mr. X is notified by the application servers B C D. If the processing of Friend request Invite and Ranking is selected on the user s own page of the SNS site of the management server A similar information may be provided. If the user logins to Mr. X s own page in the SNS site it is possible to understand that the friend request or the invitation request is sent from Mr. X . Therefore a selecting unit for selecting the game to which the request is sent may be provided. This allows the user to select the game to which Friend request is sent to the game to which Invite is sent to or the game in which the user has become friends with the other users surveyed for Ranking of popular applications. Ranking of popular applications without selecting the game may be selected. These selections may be achieved by proving buttons for the selections. Ranking after selecting the game is the first ranking processing in the above described embodiment. Ranking without selecting the game is the second ranking processing in the above described embodiment.

 5 In the above described embodiment the friend upper limit for each of the users with respect to each of the games is centrally managed by the management server A. The present invention is not limited to this embodiment. The friend upper limit may be managed by each of the application servers B C D so that the management server A may inquire of each of the servers B C D as necessary. In this case the CPU of the management server A functions as the acquiring unit that acquires the friend upper limit for the users set in the application servers B C D corresponding to the identification information accepted by the accepting unit refer to . The CPU of the management server A may function as the acquiring unit that sends an inquiry request inquiring the friend upper limit for the users to the application servers B C D corresponding to the identification information AppID accepted by the accepting unit and acquires the friend upper limit as a response to the inquiry request from the application servers B C D refer to .

Each of the application servers B C D may manage data other than the friend upper limit if the application servers can manage the data. The management server A may inquire of each of the application servers B C D as necessary.

The friend upper limit may be fixed in each of the applications. In this case the fixed friend upper limit may be associated with the identification information AppID to be recorded in the application information table TBL. In the case that the friend upper limit is fixed or variable depending on the application the upper limit may be treated as the fixed one if the friend upper limit is associated with the identification information AppID to be stored in the application information table TBL . The friend upper limit table TBL may be referred if the upper limit is not stored null in the application information table TBL .

According to this variation the acquiring unit for acquiring the friend upper limit from the application server is provided so that it is possible to acquire the friend upper limit.

 6 In the above described embodiment the selection of the ranking processing and the friend number processing can be executed on the user s own page of the SNS site in the management server A. However the present invention is not limited to this embodiment. The request based on the user s operation the request for the ranking processing the request for the friend number processing may be accepted on a screen page provided by the application servers B C D. The application servers B C D may send the request to the management server A. In the case of the request for the friend number processing the user can select the game in which the user wants to obtain the number of the friends.

 7 In the above described embodiment if the friend upper limit varies the notification is sent to each of the application servers B C D. However the present invention is not limited to this embodiment. For instance if any event such as a raising of a level in a game affecting the variation of the friend upper limit occurs in the application game the friend upper limit may be notified irrespective of whether or not there is the variation of the friend upper limit. The terminal device may notify the management server A of the friend upper limit. In this case as illustrated in the CPU of the terminal device functions as a detecting unit for detecting that the friend upper limit for the user of the terminal device varies and a notifying unit for notifying the management server A of the varied friend upper limit.

As illustrated in a managing unit and a notifying unit may be provided in the application servers B C D that can communicate with the management server associating the user identification information UID of the users with whom the friendship is built in each of the plural applications games with the identification information identifying the application game to centrally manage the user identification information UID. The managing unit associates the friend upper limit Limit indicating the friend upper limit of the users with whom the friendship can be built with the degree of the predetermined usage performance of the users players and manages the user identification information UID. The notifying unit associates the friend upper limit Limit depending on the degree of the usage performance managed by the managing unit with the identification information and the user identification information UID and notifies the terminal device of the friend upper limit Limit associated with the identification information and the user identification information UID if the degree of the usage performance is updated during the utilization of the application the progress of the game so that the friend upper limit Limit varies. The notifying unit may notify the terminal device of the friend upper limit Limit if the degree of the usage performance is updated during the utilization of the application.

In this variation as illustrated in the managing unit of the application servers B C D associates the friend upper limit Limit indicating the friend upper limit of the users with whom the friendship can be built with the degree of the predetermined usage performance of the users and manages the friend upper limit Limit S . The notifying unit associates the friend upper limit Limit depending on the degree of the usage performance managed by the managing unit with the identification information and the user identification information UID and notifies the terminal device of the friend upper limit Limit associated with the identification information and the user identification information UID if the degree of the usage performance is updated during the utilization of the application the progress of the game so that the friend upper limit Limit varies.

The terminal device which is notified of the friend upper limit associated with the identification information and the user identification information UID from the application servers B C D detects that the friend upper limit of the user of the terminal device varies by the detecting unit S . The notifying unit notifies the management server A of the varied friend upper limit.

The CPU of the management server A which is notified of the varied friend upper limit from the terminal device stores the varied friend upper limit in the friend upper limit table TBL S .

In this variation the notifying unit may associate the friend upper limit Limit depending on the degree of the usage performance managed by the managing unit with the identification information and the user identification information UID and notify the management server A of the friend upper limit Limit associated with the identification information and the user identification information UID.

The application servers may be provided with a requesting unit for requesting the management server to present the users who become candidates for the friends among the users with whom the friendships are built in the other applications games out of plural applications games and an accepting unit for accepting the request for the friend request for the users selected by the request user the request associated with the user information of the users who are subject to the friend request from the management server as a result of the processing of the management server conducted in response to the request of the requesting unit. The notifying unit may notify the management server of the notification in response to the approval or refusal of the user accepting the friend request.

 8 In the above described embodiment the CPU specifies the users as the receivers of the invitation in which the user A is the requester by referring to the invitation table TBL and excludes the specified users from one or more the candidate users S . In the invitation table TBL a pending status Stat 0 and a refusal status or an acceptance status Stat 1 are recorded. The users corresponding to these statuses are excluded. The users such that the status information Stat is the first status Stat 1 indicating the refusal status or the acceptance status and the users such that the status information Stat is the second status Stat 0 indicating the pending status are excluded from one or more the candidate users of the invitation.

The present invention is not limited to this example and can be modified in a manner explained below. The CPU may exclude the users from one or more the candidate users if the status information Stat is the first status. In the second status in which the status information Stat indicates the pending status the CPU may accept the invitation again.

In the status information Stat the refusal status may be managed in distinction from the acceptance status so that Stat 1 is the refusal status and Stat 2 is the acceptance status. In this case the CPU may exclude the users from one or more the candidate users of the invitation if the status information Stat is 0 which indicates the refusal status.

In summary the CPU excludes the users form one or more the candidate users if the status of the invitation indicated by the status information Stat is the refusal status at least.

The management server A may be provided with a managing unit for managing the invited users and the users refusing the invitation instead of the invitation table TBL as illustrated in . The specifying unit may specify the user who refuses the invitation out of the users invited by the request user by using the managing unit to exclude the specified user from one or more the candidate users.

Specifically the processing illustrated in is conducted. is a flowchart corresponding to . In this variation for instance the specifying unit requests the list of the users who refuse the invitation of the managing unit after the processing in step S is conducted. The specifying unit specifies the user as one of the users who refuse the invitation if there is any user in the list coinciding with the users extracted in step S S .

If the CPU judges that the reference identification information RefIDa indicating the user A is recorded as that of the requester in the invitation table TBL and the reference identification information RefID corresponding to the user identification information UID x of the candidate user is recorded as that of the receiver in the invitation table TBL by referring to the invitation table TBL the CPU excludes the user identification information UID x from the user identification information UID x of one or more the candidate users and extracts the user identification information UID x of the remaining candidate users. The CPU excludes the user identification information UID x of the users specified in step S from the user identification information UID x of the extracted candidate users to accumulate the remaining user identification information UID x S .

According to this variation the invited users and the users who refuse the invitation are associated with each other to be managed. This allows the user to prevent the user invited once from being invited again in advance.

 9 In the above described embodiment the CPU forcibly rewrites the status information Stat as 1 indicating the refusal or the acceptance the first status if it is determined that the pending status of the invitation continues over the predetermined period from the date of the invitation on the basis of the date information Date indicating the date of the invitation recorded in the invitation table TBL.

However the present invention is not limited to this embodiment. The CPU may treat the status of the invitation as the refusal if a predetermined period elapses since the date information Date indicating the date of the invitation in the case that the status information Stat indicates the pending status without rewriting the status information Stat using the date information Date. For instance in this variation the processing illustrated in is conducted. is a flowchart corresponding to . As illustrated in the CPU specifies the user who refuses the invitation and the user who is in a status such that the predetermined period elapses since the date of the invitation in the case that the status information Stat is the pending status the second status S . The elapse of the predetermined period may be judged on the basis of the date information Date indicating the date of the invitation.

If the CPU judges that the reference identification information RefIDa indicating the user A is recorded as that of the requester in the invitation table TBL and the reference identification information RefID corresponding to the user identification information UID x of the candidate user is recorded as that of the receiver in the invitation table TBL by referring to the invitation table TBL the CPU excludes the user identification information UID x from the user identification information UID x of one or more the candidate users and extracts the user identification information UID x of the remaining candidate users. The CPU excludes the record including the user identification information UID x of the users specified in the step S from the extracted user identification information UID x to accumulate the remaining user identification information UID x S .

According to this variation the second request of the invitation can be sent to the user in the pending status for the invitation. Therefore it is possible to encourage the user who cannot decide whether the user accepts the invitation or refuses the invitation to participate in the game by inviting the user again. However inviting the same user many times becomes an annoyance. Therefore in this variation even if the status information indicating the pending status the user is excluded from one or more the candidate users if the predetermined period elapses since the date of the invitation. Accordingly it is possible to prevent a nuisance while encouraging the user to participate in the game. It is possible to manage the refusal and the acceptance as one status. Therefore it is possible to simplify the data structure.

The CPU may forcibly rewrite the status information Stat of the invitation table TBL as 1 the first status indicating the refusal if it is determined that the pending status of the invitation the second status continues over the predetermined period from the invitation on the basis of the date information Date indicating the date of the invitation. In this case the CPU functions as a rewriting unit as illustrated in . Specifically the processing illustrated in is conducted. is a flowchart of the processing executed periodically after the management server A sends the invitation mail to the terminal device as illustrated in . As illustrated in the CPU reads the date information Date of the invitation table TBL after sending the invitation mail to the terminal device S . The CPU judges whether or not the predetermined period elapses since the invitation on the basis of the date information Date S . If the CPU judges that the predetermined period does not elapse S NO the CPU terminates the processing. If the CPU judges that the predetermined period elapses S YES the CPU rewrites the status information Stat of the invitation table TBL as 1 which indicates the refusal S .

A field indicating whether the record is valid or invalid may be added to the invitation table TBL. The record may be invalid if the predetermined period elapses.

According to this variation the status information is rewritten from the pending status of the invitation to the refusal of the invitation if there is no response from the invited user in the case that the predetermined period elapses since the date when the invitation request is notified. Therefore it is possible to simplify the judgment of whether or not the user corresponds to the candidate user.

The user is excluded from one or more the candidate users not only in the case that the invitation is refused but also in the case that the invitation is accepted. The user who accepts the invitation has played the game that is subject to the invitation so that it is unnecessary to invite the user. By using this kind of data structure it is possible to exclude the user refusing the invitation and the invited user simultaneously so that the load of the processing is reduced.

 10 In the above described inquiring processing the CPU may conduct the processing explained by referring to and to display the number of users to whom the friend request can be sent and who can be invited in the terminal device .

The CPU may generate a page on which the number of the users to whom the friend request can be sent and the number of the users who can be invited are displayed side by side to selectively display the user to whom the friend request can be sent and the users who can be invited in the terminal device .

Specifically the processing illustrated in and is conducted. is a flowchart of the ranking processing of this variation corresponding to the second ranking processing of . is a flowchart of the processing of this variation corresponding to the processing of calculating the number of the users to whom the friend request can be sent and who can be invited illustrated in and .

The CPU acquires the user identification information UIDax included in the received access request illustrated in S . The CPU acquires the reference identification information RefIDa of the user A using the user identification information UIDax by referring to the user information table TBL S . The CPU specifies the pairs of the identification information AppIDx corresponding to the reference identification information RefIDa of the user A and the user identification information UID x in which Friends is indicated in the group information Group by referring to the relation table TBL S .

Specifically the CPU extracts the record satisfying Group Friends AND RefID To RefIDa OR RefID From RefIDa AND Stat 1 and specifies one or plural pairs of the identification information AppID and the user identification information UID x included in them.

The CPU excludes redundant user identification information UID x from all of the user identification information UID x included in the specified pairs to extract all of unique user identification information UID x S . By conducting this processing the user identification information UID x of all friends of the user A is extracted. The extracted user identification information UID x of all friends of the user A is used for the processing of calculating the number of the users who can be invited which is described below.

After extracting the user identification information UID x of all friends of the user A the CPU accumulates the number of the user identification information UID x in the pairs extracted in step S for each identification information AppIDx S . The CPU specifies the order of the popularity of the games specified by the identification information AppIDx on the basis of the total number of the user identification information UID x of the friends S .

The CPU judges whether or not the processing in steps S S for all of the extracted pairs of the identification information AppIDx and the user identification information UID x is terminated S . If the processing in the steps S is not terminated for all of the pairs S NO the CPU focuses on one identification information AppIDx and conducts the processing of calculating the number of the users who can be invited to the game corresponding to the focused identification information AppIDx and the processing of calculating the number of the users to whom the friend request can be sent in the game corresponding to the focused identification information AppIDx.

The CPU acquires the user identification information UIDax corresponding to the reference identification information RefDa of the user A in the focused AppIDx by referring to the user information table TBL S . For instance if the focused identification information AppIDx is 00000001 and the reference identification information RefIDa of the user A is 00000011 the user identification information UIDax is XCV56714 .

The CPU conducts the processing of judging whether or not the number of the friends of the user A reaches the friend upper limit S S . The CPU acquires the friend upper limit corresponding to the user identification information UIDax of the user A by referring to the friend upper limit table TBL S .

The CPU judges whether or not the acquired friend upper limit exceeds the number of the user identification information UID x of the friends for the focused identification information AppIDx out of the user identification information UID x for each identification information AppIDx accumulated in step S of S . If the judgment condition is negative S NO it is impossible to conduct the friend request in the game corresponding to the focused identification information AppIDx since the total number of the user identification information UID x of the friends of the user A has reached the friend upper limit. Therefore the CPU sets a flag indicating that the friend request is unavailable S . However if the judgment condition is affirmative S YES the CPU conducts the next processing without setting the flag since the total number of the user identification information UID x of the friends of the user A has not reached the friend upper limit.

The CPU conducts the processing of specifying the users who can be invited to the game corresponding to the focused identification information AppIDx S S . The CPU extracts the user identification information UID x of one or more the candidate users who do not play the game corresponding to the focused identification information AppIDx out of the user identification information UID x of all of the friends extracted in step S of in the case that one or more the users who do not play the games that are subject to the invitation are one or more the candidate users S . Specifically the CPU focuses one user identification information UID x out of the user identification information UID x of all of the friends and acquires the reference identification information RefID corresponding to the focused user identification information UID x. The CPU acquires one or plural of the identification information AppIDx corresponding to the acquired reference identification information RefID . The CPU judges whether or not the focused identification information AppIDx is included in the acquired one or plural identification information AppIDx. If the focused identification information AppIDx is not included the friends corresponding to the reference identification information RefID do not play the game corresponding to the focused identification information AppIDx. Therefore the CPU extracts the user identification information UID x corresponding to the reference identification information RefID x as the user identification information UID x of one or more the candidate users. The above described processing is conducted for the user identification information UID x of all of the friends extracted in step S in .

The CPU extracts the record in which the reference identification information RefIDa indicating the user A is recorded as that of the requester and the reference identification information RefID corresponding to the user identification information UID x of one or more the candidate users is recorded as that of the receiver out of the records including the focused identification information AppIDx by referring to the invitation table TBL. The CPU excludes the user identification information UID x corresponding to the reference identification information RefID of one or more the candidate users included in the extracted records from the user identification information UID x of one or more the candidate users extracted in step S and extracts the user identification information UID x of one or more the candidate users that is not recorded in the invitation table TBL to accumulate them S .

In the invitation table TBL the records including the pairs of the users as the requesters and the users as the receivers such that the invitation is pending or accepted are recorded. The users recorded in the records are ones who have been invited ever once. Therefore the invitation is not conducted again for the users who have been invited ever once. Accordingly it is possible to specify the other users whom the user A can invite and the number of the other users. The accumulated number of the other users who can be invited is displayed on the second ranking page of this variation for each game refer to an area in explained below .

The CPU conducts the processing of specifying the users to whom the friend request can be sent in the application corresponding to the focused identification information AppIDx S S . If the flag indicating that the friend request is unavailable is set in step S the CPU resets the flag to proceed to step S without conducing the processing in steps S S.

The CPU extracts the user identification information UID x of the non friends for the focused identification information AppIDx by referring to the relation table TBL S . The CPU extracts the other users who have the friendships with the user A in a certain game other than the focused game corresponding to the focused identification information AppIDx and have played the focused game the first condition . The CPU extracts the users who do not have the friendships with the user A in the focused game the second condition .

The CPU judges whether or not the processing in steps S S is completed for the user identification information UID x of all of the non friends extracted in step S S . If the judgment condition is satisfied S YES the CPU proceeds to the processing in step S. If the judgment condition is not satisfied S NO the CPU proceeds to step S to accumulate the number of the friends of the focused non friends using the user identification information UID x of the focused non friends by referring to the relation table TBL. In this case the CPU extracts the receiver s reference identification information RefID To from the record in which the user identification information UID x of the non friends coincides with the requester s user identification information UID From by referring to the relation table TBL. The CPU extracts the request s reference identification information RefID From from the record in which the user identification information UID x of the non friends coincides with the receiver s user identification information UID To. The number of the user identification information UID x corresponding to the extracted receiver s reference identification information RefID To and the extracted requester s reference identification information RefID From becomes the number of the friends of the non friends indicated by the user identification information UID x of the non friends. The CPU accumulates the number of the friends of the non friends indicated by the user identification information UID x of the non friends.

The CPU acquires the friend upper limit of the user identification information UID x of the focused non friend by referring to the friend upper limit table TBL S . The CPU compares the acquired friend upper limit with the accumulated number of the friends of the focused non friend. If the accumulated number does not reach the friend upper limit the CPU judges that the friend request can be sent to the focused non friend the third condition is satisfied . If the accumulated number reaches the friend upper limit the CPU judges that the friend request cannot be sent to the focused non friend S . The CPU returns the processing to step S and repeats the processing from step S to step S until the judgment condition in step S is satisfied. If the judgment condition in step S is satisfied the CPU proceeds to the processing in step S.

In step S the CPU specifies the user identification information UID x of the focused non friend to whom the friend request can be sent and accumulates the number of the non friends to whom the friend request can be sent. The accumulated number of the non friends is the number of the users who have the friendships in any game other than the focused game and do not have the friendships in the focused game. The accumulated number of the non friends are displayed in the second ranking page in this variation for each game refer to an area in explained below .

The CPU temporally stores the number of the users who can be invited to the focused game corresponding the focused identification information AppIDx which is accumulated in the processing in step S and the number of the user to whom the friend request can be sent in focused game which is accumulated in the processing in step S in a variable area or the working area S .

The CPU returns the processing to step S illustrated in . If the processing from step S to step S is terminated for all of the identification information AppIDx extracted in step S S YES the CPU acquires the name of the game corresponding to the extracted identification information AppIDx the explanation information and the icon information by referring to the application information table TBL. The CPU generates the ranking page using the number of the users who play the game corresponding to each of the identification information AppIDx accumulated in step S the number of the users who can be invited to and to whom the friend request can be sent for the game corresponding to each of the identification information AppIDx stored in step S the name of the game corresponding to each of the identification information AppIDx acquired in step S the explanation information and the icon information S . The CPU arranges information including the explanation of the games in descending order of the number of the friends who play the games to generate the second ranking page. If the terminal device receives the access response including the second ranking page from the management server A the terminal device displays the second ranking page on the display .

If the flag indicating that the friend request is unavailable in the processing in step S the number of the users to whom the friend request can be sent is not displayed instead of displaying of the number of the users to whom the friend request can be sent. Alternatively Request Unavailable. You hit upper limit of the request is displayed instead of displaying of the number of the users to whom the friend request can be sent.

In the area the icon is displayed using the icon information read from the application information table TBL. In the area the name of the application game is displayed. These pieces of information are acquired by the processing in step S. In the area the number of the other users who have the friendships with the user A in any of the games the user A plays and have played the game b. This information is acquired by the processing in step S. In the area the explanation of the game b is displayed. This information is acquired by the processing in step S. The games displayed in the page also includes the game the user A has not played.

In the area it is displayed how many more users having the friendship with the user A in the other games the user A can invite for the game b. The number of the users who can be invited is accumulated in the processing in step S. In the area the number of the users to whom the user A can newly send the friend request in the game b. The number of the user to whom the friend request can be sent is accumulated in the processing in step S.

As described above according to this variation in the case that a specific application to which the request user wants to invite a specific user and the specific user whom the request user wants to invite to the specific application are determined in advance if it turns out that the specific user has not utilized the specific application the screen is switched to the display of the users who can be invited. Therefore it is possible to invite the specific user without sending the friend request to the specific user. The user to whom the request user wants to send the friend request in a certain application might not utilize the certain application. Presenting the pair of the function of the friend request and the function of the invitation to the user in the terminal device improves the user s convenience.

According to this variation it is possible to display the number of the non friends with whom the friendships are built in any application other than the ranking displayed applications utilize the ranking displayed applications the first condition and who do not have the friendships with the request user in the ranking displayed application the second condition and the number of whose friends does not reach the friend upper limit of the non friends the third condition . This allows the request user to know the number of the non friends to whom the friend request can be sent in the ranking displayed application which improves the request user s convenience.

This variation also allows the request user to know the number of the non friends who can be invited to the ranking displayed application which improves the request user s convenience.

In this variation it is described that the number of the users who can be invited to each of the ranking displayed games and the number of the users to whom the friend request can be newly sent in each of the ranking displayed games when conducting the second ranking processing. However this variation can be applied to the first ranking processing in a manner similar to that in the second ranking processing. When applying this variation to the first ranking processing the processing from step S to step S may be conducted for the identification information AppIDx corresponding to the game displayed on the screen illustrated in the game b in the example of .

 11 In the above described embodiment and variations by providing the user information table TBL the friend upper limit table TBL and the relation table TBL various pieces of information are intensively managed. When conducting a unified management by providing a discrete user information table TBL a discrete friend upper limit table TBL and a discrete relation table TBLin a part or all of the application servers B C C synchronization may be performed between the user information TBL and the discrete user information table TBL between the friend upper limit table TBL and the discrete friend upper limit table TBL and between the relation table TBL and the discrete relation table TBL

In the following explanation in order to distinguish the tables of the management server A from those of the application server B the user information table TBL the friend upper limit table TBL and the relation table TBL provided in the management server A are called the first user information table TBL the first friend upper limit table TBL and the first relation table TBL. The user information table TBL the friend upper limit table TBL and the relation table TBLprovided in the application server B are called the second user information table TBL the second friend upper limit table TBL and the second relation table TBL

The explanation will be back to . The application server B is further provided with the synchronizing unit . The synchronizing unit performs in connection with a user information synchronizing unit a friend upper limit synchronizing unit and a friendship synchronizing unit of the management server A so as to synchronize the memory contents in each of the second user information table TBL the second friend upper limit table TBL and the second relation table TBLwith those in each of the first user information table TBL the first friend upper limit table TBL and the first relation table TBL. Specifically the CPU of the application server B executes a predetermined API Application Programming Interface to achieve the synchronization.

The user information synchronizing unit synchronize the memory contents in the first user information table TBL with those in the second user information table TBL. Specifically if the memory contents of the second user information table TBLvaries in the application server B the synchronizing unit sends a user information varying notification indicating the contents of the variation to the management server A. If the user information synchronizing unit of the management server A receives the user information varying notification the user information synchronizing unit updates the memory contents of the first user information table TBL. For instance the addition of a new user identification information UID the deletion of the user identification information UID and the variation of the last login information LastLogin causes the above described operation of the synchronizing unit .

The synchronizing unit may send the user information varying notification to the management server A at a predetermined timing. For instance if the user identification information UID and the last login information LastLogin vary the synchronizing unit may immediately send the user information varying notification or may send the contents of the variation altogether at a predetermined time. If the user information synchronizing unit inquires of the application server B the variation of the user information at a predetermined timing the synchronizing unit may send the user information varying notification including the contents varied after the time of the last inquiry. In this case if the user information synchronizing unit of the management server A receives the user information varying notification the user information synchronizing unit updates the memory contents in the first user information table TBL.

The friend upper limit synchronizing unit functions as an acquiring unit for acquiring the friend upper limit Limit of the users set in the application server corresponding to the identification information AppID accepted by the accepting unit . The friend upper limit synchronizing unit synchronizes the memory contents in the first friend upper limit table TBL with those in the second friend upper limit table TBL. Specifically if the memory contents in the second friend upper limit table TBLvaries in the application server B the synchronizing unit sends the friend upper limit varying notification indicating the contents of the variation to the management server A. If the friend upper limit synchronizing unit of the management server A receives the friend upper limit varying notification the friend upper limit synchronizing unit updates the memory contents in the first friend upper limit table TBL.

The friendship synchronizing unit synchronizes the memory contents in the first relation table TBL with those in the second relation table TBL. Specifically if the memory contents in the second relation table TBLvaries in the application server B the synchronizing unit sends the friendship varying notification indicating the contents of the variation to the management server A. If the friendship synchronizing unit receives the friendship varying notification the friendship synchronizing unit updates the memory contents in the first relation table TBL.

The synchronizing unit sends the friendship varying notification to the management server A if the friendship is established with the approval of the friend request. If the friendship is not established with the refusal of the friend request the synchronizing unit may send the friendship varying notification to the management server A to synchronize the memory contents in the first relation table TBL with the second relation table TBL. However this is optional. It is unnecessary to send the friendship varying notification and to perform the synchronization. If the synchronization of the memory contents is performed for the status information Stat it is possible to know that the friend request is pending in the management server A.

If the friendship is cancelled in the application server B the cancellation of the friendship is reflected in the second relation table TBL. The synchronizing unit detects this to send the friendship varying notification to the management server A. If the friendship synchronizing unit receives the friendship varying notification the friendship synchronizing unit reflects the cancellation of the friendship to the memory contents in the first relation table TBL.

An application server that is not in connection with the management server A provides stand alone services by using the second information table TBL the second friend upper limit table TBL and the second relation table TBL. By applying this variation if the synchronizing unit is added by using functions including an API this kind of application server can be easily incorporated into the application system .

According to this variation the synchronization is performed between the second user information table TBLin the application server and the first user information table TBL in the management server A and between the second relation table TBLin the application server and the first relation table TBL in the management server A. As a result it is possible to easily reflect the management of the discrete application in the application server to the management server A.

According to this variation the synchronization is performed between the second friend upper limit table TBLin the application server and the first friend upper limit table TBL in the management server A. As a result it is possible to easily reflect the management of the friend upper limit in the discrete application of the application server to the management server A.

It is possible to conduct the above described inquiring processing as a result of the management of the reflected discrete application.

 12 In the above described embodiment and each of the variations it is described that the user information table access table TBL the friend upper limit table TBL the relation table TBL and the invitation table TBL are stored in the hard disc in the management server A. However the present invention is not limited to this example. As illustrated in the user information table access table TBL the friend upper limit table TBL the relation table TBL and the invitation table TBL may be stored in a storage server that can communicate with the management server A through the communication network . In this case the management server A may access the storage server as necessary to read information from each of the tables.

As illustrated in the user information table access table TBL the friend upper limit table TBL and the relation table TBL may be stored in a storage server that can communicate with the management server A through the communication network . The user information table TBL the friend upper limit table TBL and the relation table TBLmay be stored in a storage server that can communicate with the application servers B C D through the communication network .

In this case the management server A may access the storage server as necessary to read information from each of the tables. The application servers B C D may access the storage server as necessary to read information from each of the tables.

 13 In the above described application and each of the variations a program executed in the management server A or the terminal device may be stored in a recording medium readably by a computer. By using the recording medium the program can be installed in the computer for instance.

The above described computer includes an OS and hardwares including peripherals. The computer may include plural computer devices that are connected with each other through a network including a communication line such the Internet WAN LAN a leased line. The recording medium readably by a computer may be a non transitory recording medium such as a flexible disc a magneto optical disc a ROM a CD ROM and a hard disc built in a computer.

The recording medium readably by a computer includes one storing a program for a prescribed time such a volatile memory RAM installed inside a server to which the program is transmitted through a network or a computer system that becomes a client. The above described program may be one for implementing a part of the above described functions. The above described program may be one that can implement the above described functions in combination with a program that has been recorded in a computer system that is so called difference file difference program . A distributing server that distributes a program for implementing a part or all of the functions of the present invention a storage medium provided in the distributing server and a storage medium storing the program in order to distribute the program with the distributing server which exists in an external of the distributing server are included in the scope of the present invention.

A part or all of the above described functions may be implemented as an integrated circuit such as a LSI Large Scale Integration . Each of the above described functions may be implemented as a discrete processor. A processor may be achieved by integrating a part or all of the functions. An integrated circuit may be achieved by not only the LSI but also a leased circuit or a general purpose processor. If an alternative technology of the integrated circuit as a substitution of the LSI is appeared as a result of the improvement of a semiconductor technology an integrated circuit by the alternative technology may be used.

The invention relating to the friend request processing and the invention relating to the inquiring processing are introduced from the above described embodiment and variations in addition to the invitation processing.

To be able to build friendships with the users with whom friendships are built in the other applications in a certain application the management server according to the present invention which is capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users which includes an accepting unit adapted for accepting identification information identifying an application designated through an operation of a terminal device performed by a request user requesting a presentation of a candidate user who is a candidate for a friend a specifying unit adapted for specifying a part or all of candidate users satisfying all of conditions out of one or more users with whom the request user s friendship is built in one or more utilized applications that the request user has utilized the first condition in which the candidate user utilizes the designated application identified by the identification information accepted by the accepting unit the second condition in which the request user s friendship with the candidate user has not been built in the designated application the third condition in which a friend upper limit is not encountered a display controlling unit adapted for displaying the part or all of the candidate users specified by the specifying unit in the terminal device of the request user in a selectable way and an instructing unit adapted for instructing the application server corresponding to the application indicated by the identification information accepted by the accepting unit to send a friend request for one or more users selected out of the one or more candidate users by the request user.

According to this invention the management server displays the candidate users satisfying the first the second and the third conditions in the terminal device of the request user in a selectable way. Therefore it is possible to display the user as the candidate for the friends the user who utilizes the identified application out of the users with whom the request user s friendships are built in the utilized applications the request user has utilized the first condition and with whom the request user s friendship is not build in the identified application the second condition and for whom the friend upper limit is not encountered in the identified application the third condition .

As a result it is possible to utilize trust relationships built in a different application even in a new application. The application includes a game application as an example. However the present invention is not limited to this example. The application may include any kind of application.

In the above described management server it is preferable that the server is provided with a friendship table storing at least a pair of user information of one user and user information of another user having a friendship with the one user the friendship table in which the pair of the user information of the one user and the user information of the other user is associated with the identification information and a user information table storing user information of users utilizing the application identified by the identification information the first user information table in which the user information is associated with the identification information. It is also preferable that the specifying unit specifies the candidate user satisfying the first condition by referring to the user information table and specifies the candidate user satisfying the second condition by referring to the friendship table.

According to this invention the pairs of the user information user information of the one user and the user information of the other user having a friendship with the one user are stored in the friendship table in the management server. Therefore it is possible to centrally manage the friendships built in various applications. The server is provided with the user information table in which the identification information is associated with the user information. The identification information and the user information are stored in the user information table therefore it is possible to satisfy the first information by referring to the user information table.

The above described invention is provided with a user information synchronizing unit adapted for synchronizing contents of the first user information table with contents of a second user information table storing user information of users utilizing the application provided by the application server and a friendship synchronizing unit adapted for synchronizing contents of the first friendship table with contents of a second friendship table storing at least a pair of the user information of one user and the user information of another user having friendship with the one user in the application provided by the application server.

In this invention a timing of synchronization is optional. For instance when the user information is updated in the application server or the friendship is built as the result of approval the synchronization may be conducted immediately. The synchronization may be conducted all together at a predetermined time. The second user information table and the second friendship table may be included in a part or all of the plural application servers or may be included an external storing device which can communicate with a part or all of the plural application servers.

In the above described management server it is preferable that the pairs of the user information of the one user and the user information of the other user are provided with the user information of the one user sending a friend request to the other user and the user information of the other user accepting the friend request.

According to this invention the pairs including a requester side and a receiver side are stored. Therefore it is unnecessary to store all of the other user information in records in which the status information associated with one user information indicates the friendship status using the one user information as a key. This allows the memory capacity of data to be reduced.

It is preferable that the specifying unit extracts the user information of the other user accepting the friend request in the pairs of the user information of the other user accepting the friend request and the user information of the one user sending the friend request which coincides with the user information of the request user out of the pairs of the user information of the one user and the user information of the other user associated with the identification information corresponding to the application the request user has utilized by referring to the friendship table. It is also preferable that the specifying unit extracts the user information of the one user sending the friend request in the pairs of the user information of the one user sending the friend request and the user information of the other user accepting the friend request which coincides with the user information of the request user. Then it is preferable that the other user in the extracted user information of the other user and the one user in the extracted user information of the one user are treated as the user with whom the friendship is built in the application the request user has utilized.

In the above described management server it is preferable that the server includes an acquiring unit adapted for acquiring the friend upper limit of any of the users which is set in the application server corresponding to the identification information accepted by the accepting unit and the specifying unit specifies the candidate user satisfying the third condition by referring to the friend upper limit table storing the friend upper limit acquired by the acquiring unit the first friend upper limit table in which the acquired friend upper limit is associated with the user information of users. According to this invention the friend upper limit set for each of the applications is centrally managed by the management server using the friend upper limit table. Therefore it is possible to satisfy the third condition.

More specifically it is preferable that the acquiring unit includes a friend upper limit synchronizing unit adapted for synchronizing contents of the first friend upper limit table with contents of a second friend upper limit table storing the friend upper limit managed by the application server the second friend upper limit table in which the managed friend upper limit is associated with the user information of users. In this invention a timing of synchronization is optional. For instance when the friend upper limit is varied in the application server it is preferable that the synchronization may be conducted immediately. If some delays are allowable the synchronization may be conducted all together at a predetermined time. The second friend upper limit table may be included in the part or all of the plural application servers or may be included in the external storing device which can communicate with the part or all of the plural application servers.

In the above described management server it is preferable that the server include an acquiring unit adapted for sending an inquiry request for the friend upper limit of any of the users to the application server corresponding the identification information accepted by the accepting unit and acquiring the friend upper limit from the application server as a response to the inquiry request and the specifying unit specifies the candidate user satisfying the third condition on the basis of the friend upper limit acquired by the acquiring unit. According to this invention the acquiring unit for acquiring the friend upper limit from the application server is provided. Therefore it is possible to acquire the friend upper limit.

In the above described management server it is preferable that the server is provided with an access table storing date information indicating a date of utilizing the application the access table in which the date information is associated with the user information of users. It is also preferable that the condition that the candidate user utilizes the application within a predetermined period is added to the first condition the specifying unit specifies the candidate user satisfying the first condition by referring to the access table.

According to this invention the candidate user is limited to the user who utilizes the application within the predetermined period after the start of utilizing of the application. The user who utilizes the application on a trial basis and ceases to utilize the application is excluded from the candidate users. It is possible to select the users who actually utilized the focused application as the candidate user.

The present invention does not limit the structures of various tables. For instance the user information table and the access table may be configured as one table.

In the above described management server it is preferable that the display controlling unit displays the utilized application the request user has utilized in the terminal device of the request user in a selectable way and the specifying unit specifies the part or all of the candidate users satisfying all of the conditions out of the users with whom the request user s friendship is built in the utilized application selected by the request user in the terminal device.

According to this invention the utilized applications are displayed in the terminal device of the request user in a selectable manner. The fact that the user has a friendship with the request user in the utilized application becomes a condition for the candidate user. Therefore it is possible for the request user to select the utilized application similar to the application in which the request user wants to make a friendship. It is easy to find the application and the user if the application in which the request user wants to make the friendship has been determined in advance and the user whom the request user wants to invite the user to the application has been determined in advance.

In the above described management server it is preferable that the specifying unit specifies the number of users who can be invited to utilized application the request user has utilized and the display controlling unit displays the number of the users who can be invited specified by the specifying unit in the terminal device of the request user.

According to this invention it is possible to know the number of the users to whom the friend request can be sent. Therefore the convenience for the request user is greatly improved. In this invention the number of the users who can be invited may be specified for each of the utilized applications and the specified number of users may be displayed for each of the utilized applications in the terminal of the request user. The total number of the users who can be invited in the plural applications may be specified and the specified total number of the users may be displayed in the terminal device of the request user.

The present invention can be comprehended as a non transitory computer readable recording medium with a program stored thereon the program is used for a computer of the management server. In this case the non transitory computer readable recording medium with the program according to the present invention stored thereon the program is used for the computer of the management server capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The program causes the computer to function as an accepting unit adapted for accepting identification information identifying an application designated the basis of an operation of a terminal device by a request user requesting a presentation of a candidate user who is a candidate for a friend a specifying unit adapted for specifying a part or all of candidate users satisfying all of conditions out of one or more users with whom the request user s friendship is built in one or more utilized applications that the request user has utilized the first condition in which the candidate user utilizes the designated application identified by the identification information accepted by the accepting unit the second condition in which the request user s friendship with the candidate user has not been built in the designated application the third condition in which a friend upper limit is not encountered a display controlling unit adapted for displaying the part or all of the candidate users specified by the specifying unit in the terminal device of the request user in a selectable way and an instructing unit adapted for instructing the application server corresponding to the application indicated by the identification information accepted by the accepting unit to send a friend request for one or more users selected out of the one or more candidate users by the request user.

The present invention can be comprehended as a controlling method for controlling a management server. In this case the controlling method for controlling a management server according to the present invention is a method for controlling the management server capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The method is provided with accepting identification information identifying an application designated through an operation of a terminal device performed by a request user requesting a presentation of a candidate user who is a candidate for a friend specifying a part or all of candidate users satisfying all of conditions out of one or more users with whom the request user s friendship is built in one or more utilized applications that the request user has utilized the first condition in which the candidate user utilizes the designated application identified by the accepted identification information the second condition in which the request user s friendship with the candidate user has not been built in the designated application the third condition in which a friend upper limit is not encountered displaying the part or all of specified candidate users in the terminal device of the request user in a selectable way and instructing the application server corresponding to the application indicated by the accepted identification information to send a friend request for one or more users selected out of the one or more candidate users by the request user.

The present invention can be comprehended as a non transitory computer readable recording medium with a program stored thereon the program is used for a computer of the terminal device of the user. In this case the non transitory computer readable recording medium with the program according to the present invention stored thereon the program is used for a computer of the terminal device of the user which is capable of communicating with the management server connected to plural application servers corresponding to plural applications respectively the management server being capable of communicating with plural terminal devices of plural users. Each of the plural application servers manages the friend upper limit indicating an upper limit of the number of friends for each of the users. The management server is provided with an accepting unit adapted for accepting identification information identifying an application designated through an operation of a terminal device performed by the request user requesting a presentation of a candidate user who is a candidate for the friend the specifying unit adapted for specifying a part or all of candidate users satisfying all of conditions out of one or more users with whom the request user s friendship is built in one or more utilized applications that the request user has utilized the first condition in which the candidate user utilizes the designated application identified by the identification information accepted by the accepting unit the second condition in which the request user s friendship with the candidate user has not been built in the designated application the third condition in which a friend upper limit is not encountered the display controlling unit adapted for displaying the part or all of the candidate users specified by the specifying unit in the terminal device of the request user in a selectable way and the instructing unit adapted for instructing the application server corresponding to the application indicated by the identification information accepted by the accepting unit to send a friend request for one or more users selected out of the one or more candidate users by the request user. The program causes the computer to function as a detecting unit adapted for detecting a variation of the friend upper limit of the user of the terminal device and a notifying unit adapted for notifying the management server of a varied friend upper limit if the variation of the friend upper limit is detected by the detecting unit.

To provide the management server notifying the users of the situations of the whole of friends in various applications the management server according to the present invention is capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The management server is provided with an accepting unit adapted for accepting a request through an operation of the terminal device performed by the user an information acquiring unit adapted for acquiring usage information relating to a certain application a certain user utilizes the certain user with whom a friendship is built with a request user sending the request accepted by the accepting unit in utilized application the request user has utilized out of the plural applications and a display controlling unit adapted for displaying the acquired usage information acquired by the information acquiring unit.

According to this invention the information acquiring unit acquires the usage information relating to the application the friend utilizes the friend with whom the request user s friendship is built in the utilized application the request user has utilized. The display controlling unit displays the acquired usage information in the terminal device. This allows the request user to obtain various information relating to the application the friend utilizes.

The utilization information includes the ranking of the popular games the number of the users playing games the number of the user to whom the friend request can be sent and the number of the users who can be invited for example.

The request based on the operation of the terminal device of the user includes one directly sent from the terminal device to the management server through the operation of the terminal device performed by the request user browsing a page provided by the management server and one sent from the application server to the management server through the operation of the terminal device performed by the request user browsing a page provided by any of the plural application servers.

More specifically it is preferable that the above described management server is provided with a friendship table storing pairs of user information of the users between whom the friendship is built associated with the identification information identifying the application. It is also preferable that the request includes the identification information identifying the application and the information acquiring unit extracts the pairs of the user information of the request user and the user information of the user with whom the request user s friendship is built along with the identification information by referring to the friendship table to obtain the usage information using the extracted pairs of the user information and the identification information.

The management server according to the present invention is capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The management server is provided with an accepting unit adapted for accepting a request based on an operation of the terminal device performed by the user an information acquiring unit adapted for acquiring usage information relating to a certain application the user utilizes the user with whom a friendship is built with a request user sending the request accepted by the accepting unit in the application corresponding to the request out of the plural applications and a display controlling unit adapted for displaying the acquired usage information acquired by the information acquiring unit.

According to this invention the information acquiring unit acquires the usage information relating to the application the friend of the request user utilizes in the application corresponding to the request. The display controlling unit displays the acquired usage information in the terminal device. This allows the request user to obtain various information relating to the friends via a specific application.

The request based on the operation of the terminal device performed by the user includes one directly sent from the terminal device to the management server through the operation of the terminal device performed by the request user browsing a page provided by the management server and one sent from the application server to the management server through the operation of the terminal device performed by the request user browsing a page provide by any of the plural application servers.

If the request is sent from the terminal device to the management server the request may include the identification information identifying the application the request user selects out of the plural applications. The information acquiring unit may specify the application corresponding to the request using the identification information included in the request. If the request is sent from the application server the information acquiring unit may specify the application provided by the application server sending the request as the application corresponding to the request.

More specifically the above described management server may be provided with the friendship table storing pairs of the user information of users with whom a friendship is built associated with the identification information identifying the application an application information table storing the identification information and application information indicating the contents of the application in which the identification information and the application information are associated with each other the request including the identification information indicating the application the information acquiring unit extracting the pairs of the user information of the request user the user information of the user with whom the request user s friendship is built and the identification information by referring to the friendship table to obtain the application information corresponding to the extracted identification information by referring to the application information table.

In the above described management server it is preferable that the display controlling unit displays a part or all of the applications in descending order of the number of the users with whom the request user s friendship is built utilizing each of the applications any of the users with whom the request user s friendship is built utilizes.

According to this invention the applications are displayed in descending order of the number of the users utilizing the applications among the friends. This allows the users to know the ranking of the popular applications at a glance.

In this case the display controlling unit displays the applications in descending order of the number of the users utilizing the applications the users with whom the request user s friendship is built. Specifically the information acquiring unit accumulates the number of the users for each of the applications and generates the accumulated number for each of the applications as the usage information. The display controlling unit displays the applications in descending order of the accumulated number of the users.

In the above described management server it is preferable that the server is provided with an access table storing the identification information identifying the application the date information indicating the date of utilizing the application and the user information identifying the user in which the identification information the date information and the user information are associated with each other. It is also preferable that the display controlling unit displays by using the access table a part or all of the applications in descending order of the number of the users utilizing the applications in the predetermined period the users with whom the request user s friendship is built with respect to the applications any of the users with whom the request user s friendship is built utilizes.

According to this invention the applications are displayed in descending order of the number of the users utilizing the application among the friends in the predetermined period by referring to the date information. This allows the users to know the ranking of the popular applications utilized among the friends in the predetermined period. It sometimes happens that the users cease to play the application after playing the application on a trial basis so that it may be desirable that a trial usage is excluded from the coverage of the ranking. According to this invention the ranking is made for the applications used within the predetermined period so that it is possible to rank the applications after excluding the trial usage.

The display controlling unit displays the applications in descending order of the number of the users utilizing the applications in the predetermined period. Specifically the information acquiring unit may accumulate the number of the users utilizing the applications in the predetermined period for each of the applications the users with whom the request user s friendship is built by using the access table with respect to the applications any of the users with whom the request user s friendship is built utilize. The information acquiring unit may generate the accumulated number of the users for each of applications as the usage information. The display controlling unit may display the applications in descending order of the accumulated number of the users.

In the above described management server it is preferable that the information acquiring unit may specify the number of the users with whom the request user s friendship is built for each of the applications with respect to the applications any of the users with whom the request user s friendship is built utilizes to generate the usage information. It is also preferable that the display controlling unit displays the number of the users for each of the applications.

According to this invention the number of the users utilizing the application is displayed in the terminal device. This allows the users to obtain information which is more detailed than a relative ranking.

In the above described management server it is preferable that the server is provided with the access table storing the identification information identifying the application the date information indicating the date of utilizing the application and the user information identifying the user in which the identification information the date information and the user information are associated with each other. It is also preferable that the information acquiring unit specifies the number of the users utilizing the applications in the predetermined period for each of the applications the users with whom the request user s friendship is built by using the access table with respect to the applications any of the users with whom the request user s friendship is built utilizes to generate the usage information. It is also preferable that the display controlling unit displays the number of the users for each of the applications.

According to this invention the number of the users utilizing a certain application among the friends in the predetermined period is specified by referring to the date information. This allows the users to know the number of the user utilizing the certain application in a certain period among the friends at a glance.

In the above described management server the accepting unit accepts the request including the identification information identifying the application. The information acquiring unit specifies the number of the users to whom the friend request can be sent and who satisfies all of conditions out of the users with whom the request user s friendship is built in the utilized applications the request user has utilized the first condition in which the user utilizes the application identified by the identification information accepted by the accepting unit the second condition in which the request user s friendship with the user has not been built in the identified application the third condition in which friend upper limit is not encountered in the identified application.

According to this invention it is possible to display the number of the users with whom the friendship is built in the utilized application and who utilize the identified application the first condition with whom the request user s friendship is not built in the identified application the second condition and whose friend upper limit is not encountered the third condition . This allows the user to know the number of the user to whom the friend request can be sent in the identified application and allows the user s convenience to be improved. Displaying a part or all of the candidate users to whom the friend request can be sent in a selectable way may enable the users to select the user out of the candidate users to send the friend request.

In the above described management server it is preferable that the accepting unit accepts the request including the identification information identifying the application. It is also preferable that the information acquiring unit acquires the number of the users as the usage information the users who can be invited and satisfies the condition that the user does not utilize the application identified by the identification information accepted by the accepting unit.

According to this invention it is possible to know the number of the users who can be invited to the identified application. This allows convenience to be improved. Displaying a part or all of the candidate users who can be invited in a selectable way may enable the user to select the user out of the candidate users to invite the selected user.

The number of the users to whom the friend request can be sent and the number of the users who can be invited may be displayed in parallel. The candidate user to whom the friend request can be sent and the user who can be invited may be displayed in the terminal device in a selectable way. In this case by switching the screen to the display of the users who can be invited the invitation can be conducted without sending the friend request if the application the user wants to invite to and the friend the user wants to invite to the application have been decided and it becomes clear that the friend has not utilized the application. It sometime happens that a certain user to whom another user wants to send the friend request in a certain application does not utilize the certain application. Presenting the pairs of the function of the friend request and the function of the invitation to the user in the terminal device allows the user s convenience to be improved.

The present invention can be comprehended as a non transitory computer readable recording medium with a program stored thereon the program is used for a computer of the management server. The non transitory computer readable recording medium is one with the program stored thereon the program is used for the computer of the management server capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The program causes the computer as the accepting unit adapted for accepting a request through on an operation of the terminal device performed by the user an information acquiring unit adapted for acquiring usage information relating to a certain application a certain user utilizes the certain user with whom a friendship is built with a request user sending the request accepted by the accepting unit in utilized application the request user has utilized out of the plural application and a display controlling unit adapted for displaying the acquired usage information acquired by the information acquiring unit.

The present invention can be comprehended as a controlling method for the management server. The controlling method for the management server according to the present invention is one for controlling the management server capable of communicating with plural application servers corresponding to plural applications respectively and terminal devices of users. The method is provide with accepting a request through an operation of the terminal device performed by the user acquiring utilization information relating to a certain application a certain user utilizes the certain user with whom the request user s friendship is built with a request user sending the accepted request in utilized application the request user has utilized out of the plural applications and displaying the acquired usage information.

