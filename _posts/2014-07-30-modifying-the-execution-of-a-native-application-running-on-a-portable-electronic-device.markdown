---

title: Modifying the execution of a native application running on a portable electronic device
abstract: Methods, systems, and apparatus, including computer programs encoded on computer storage media, for sharing enterprise data. One of the methods includes receiving data that specifies one or more updated conditions under which a first server-based enterprise application and a second server-based enterprise application may share certain enterprise data from a portable computing device that includes (i) a first native enterprise application that corresponds to the first server-based enterprise application, (ii) a second native enterprise application that corresponds to the second server-based enterprise application, and (iii) data that specifies one or more conditions under which the first server-based enterprise application and the second server-based enterprise application may share the certain enterprise data, and modifying execution of the first native enterprise application or the second native enterprise application to reflect the updated conditions under which the first server-based enterprise application and the second server-based enterprise application may share the certain enterprise data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09104442&OS=09104442&RS=09104442
owner: Accenture Global Services Limited
number: 09104442
owner_city: Dublin
owner_country: IE
publication_date: 20140730
---
This application is a continuation of U.S. application Ser. No. 12 557 861 filed Sep. 11 2009 now abandon published as U.S. 2010 0153866 which claims the benefit of U.S. Provisional Application No. 61 121 857 filed Dec. 11 2008. Both of these applications are incorporated herein by reference in their entirety and for all purposes.

This application is related to U.S. application Ser. No. 12 436 341 filed May 6 2009. That application is incorporated herein by reference in its entirety and for all purposes.

Information related to a business its customers its competitors and the like is commonly referred to as enterprise data and can be used by the business for a variety of purposes. For example enterprise resource planning ERP utilizes enterprise data to implement business functions such as manufacturing supply chain management financials projects human resources and customer relationship management CRM . Enterprise data may also be used for product lifecycle management PLM to help manufacturers with product related information. As a further example enterprise data may be used for supply chain management SCM and supplier relationship management SRM functions.

Conventional software packages for providing access to enterprise data generally require significant storage and processing resources and thus are generally run on desktop computer systems server computer systems or the like. The computer system running the conventional software package may generate a query for specific enterprise data and send the query to a system able to access the enterprise data. Once data is received from the system it may be processed by the computer system running the conventional software package and presented to the user of the computer system.

Although enterprise data may be accessed using conventional software packages the ability to access the enterprise data from remote locations or on the go is limited since the computer systems able to run the conventional software packages cannot be easily transported. Additionally conventional software packages generally cannot be run on portable electronic devices such as smartphones or personal digital assistants PDAs . Further conventional portable electronic devices typically lack the storage and processing resources to adequately store and process the enterprise data. Thus access to enterprise data is limited using conventional solutions.

Some portable devices allow limited access to resident enterprise applications that run on the portable device. However these portable devices limit communication between multiple enterprise applications. Unfortunately enterprise solutions often require multiple enterprise applications to talk to one another to obtain information etc. As such portable devices that restrict or prevent communication between enterprise applications offer a poor platform choice for enterprise applications.

Embodiments of the present invention are directed to a method and system for modifying the execution of a native application running on a portable electronic device. More specifically a module or program module may be downloaded and executed by a portable electronic device to modify the execution of a native application running on the portable electronic device where the native application accesses enterprise data generated by a remote system and displays content associated with the enterprise data on the portable electronic device. The module may enable modification or enhancement of the appearance and or behavior of a graphical user interface generated by the native application e.g. by replacing some or all of the program instructions of the native application used to implement the graphical user interface . The module may enable alteration of the data sharing between enterprise applications running on the remote system which generate the enterprise data accessed by the native application and displayed using the graphical user interface. The module may also modify at least one program portion of the native application which would modify the functionality of the native application in general.

In one embodiment a method of modifying execution of an application on a portable electronic device includes downloading a program module to the portable electronic device in response to a request for a program module. A graphical user interface is displayed on a display device of the portable electronic device responsive to execution of a first application on the portable electronic device wherein the displaying further includes rendering content on the portable electronic device that is associated with execution of a second application on a remote system and wherein the first application controls the manner in which the content is accessed and displayed on the display device. At least one feature of the graphical user interface is modified responsive to execution of the program module on the portable electronic device.

In another embodiment a portable electronic device includes a processor a memory coupled to the processor a display device coupled to the processor and a user input device coupled to the processor. The portable electronic device also includes a first application operable to display a graphical user interface on the display device and wherein the first application is further operable to render on the display device content associated with execution of a second application on a remote system. The portable electronic device further includes a program module operable to modify at least one feature of the graphical user interface wherein the program module is downloaded to the memory responsive to a request for the program module.

And in yet another embodiment a portable electronic device includes a processor a memory coupled to the processor a display device coupled to the processor and a user input device coupled to the processor. The portable electronic device also includes a first application operable to display a graphical user interface on the display device wherein the first application is further operable to render on the display device content associated with execution of a second application on a remote system wherein the first application is further operable to track user navigation through the content rendered on the display device and wherein the first application is further operable to re render on the display device a previously displayed portion of the content responsive to a user input to a user input device of the portable electronic device. The portable electronic device further includes a program module operable to modify at least one feature of the graphical user interface wherein the program module is downloaded to the memory responsive to a request for the program module.

Reference will now be made in detail to embodiments of the present invention examples of which are illustrated in the accompanying drawings. While the present invention will be discussed in conjunction with the following embodiments it will be understood that they are not intended to limit the present invention to these embodiments alone. On the contrary the present invention is intended to cover alternatives modifications and equivalents which may be included with the spirit and scope of the present invention as defined by the appended claims. Furthermore in the following detailed description of the present invention numerous specific details are set forth in order to provide a thorough understanding of the present invention. However embodiments of the present invention may be practiced without these specific details. In other instances well known methods procedures components and circuits have not been described in detail so as not to unnecessarily obscure aspects of the present invention.

Some regions of the detailed descriptions which follow are presented in terms of procedures logic blocks processing and other symbolic representations of operations on data bits within a computer memory. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. In the present application a procedure logic block process or the like is conceived to be a self consistent sequence of steps or instructions leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually although not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated in a computer system.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions it is appreciated that throughout the present invention discussions utilizing the terms such as aborting accepting accessing adding adjusting analyzing applying assembling assigning balancing blocking calculating capturing combining comparing collecting. configuring creating debugging defining delivering depicting detecting determining displaying downloading establishing executing forwarding flipping generating grouping hiding identifying initiating instantiating interacting modifying monitoring moving outputting parsing performing placing presenting processing programming querying removing rendering repeating resuming sampling simulating sorting storing subtracting suspending tracking transcoding transforming unblocking using or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the present invention enable a user to access enterprise data and interact with enterprise applications generating the enterprise data using a portable electronic device. More specifically a native application e.g. native enterprise application of for a portable electronic device e.g. of enables a user of the portable electronic device to interact with one or more enterprise applications e.g. enterprise applications of . Each of the enterprise applications is executed remotely on a system e.g. in communication with the portable electronic device where the portable electronic device may communicate data to the remote system e.g. via interface and display data received from the remote system e.g. via interface . For example user inputs e.g. input using user interface component of related to the enterprise applications may be communicated to the remote system from the portable electronic device while enterprise web content associated with initiation or execution of the enterprise application may be communicated to the portable electronic device for display thereon e.g. using display device of . In this manner embodiments utilize processing resources and storage resources of the remote system e.g. to execute the enterprise application e.g. etc. thereby enabling a user to initiate or interact with a computationally intensive enterprise application e.g. etc. using a portable electronic device e.g. .

The native enterprise application e.g. may generate a graphical user interface e.g. as shown in for enabling a user to initiate remote execution of an enterprise application and or interact with one or more enterprise applications being executed on a remote system. For example enterprise web content associated with a list of enterprise applications for execution may be communicated to the portable electronic device from the remote system. The enterprise web content may be rendered by the portable electronic device e.g. using a web browser engine of the portable electronic device to display a list of enterprise applications for selection by a user. The graphical user interface displaying the enterprise applications may have a look and feel similar to that of other native applications executable by the portable electronic device. In response to a user selecting an enterprise application from the list of enterprise applications displayed on the portable electronic device data may be sent from the portable electronic device to a remote system for initiating execution of the enterprise application on the remote system.

During execution of the one or more enterprise applications e.g. etc. on the remote system e.g. enterprise data may be accessed from a component of an enterprise backend e.g. enterprise information database legacy system database server email server etc. . The enterprise applications e.g. etc. may share data with one another where the shared data may be stored on a memory of the portable electronic device e.g. a memory of the remote system e.g. on a memory of another system e.g. communicatively coupled to the device and or the system etc. The remote system e.g. may process the enterprise data and generate enterprise content e.g. output from the enterprise applications . The enterprise content may be transformed e.g. by transformation component into enterprise web content e.g. having a format such as XML JAVA CSS http https etc. for rendering by and or display on a portable electronic device e.g. using a web browser engine of the portable electronic device . In this manner user inputs to the portable electronic device e.g. from a user viewing the displayed enterprise web content may be communicated to the remote system e.g. for enabling a user to interact with the one or more enterprise applications executed by the remote system e.g. .

As shown in enterprise backend may provide access to a variety of enterprise data. Enterprise data may be any information related to a business. For example enterprise information database may store public information about a business e.g. name location name of officers information about competitors of a given business etc. and or private information about a business e.g. information about internal operations of the business information collected from employees or contractors of the business information related to client interactions information related to interaction with suppliers or other business partners etc. . In one embodiment database may be a SAP database ORACLE database ERP database CRM database PLM database SCM database SRM database or another database storing enterprise data. Enterprise backend may also provide access to enterprise systems e.g. legacy system database server email server which may in turn provide access to other enterprise data. As such a user of device may access a variety of enterprise data.

System may execute one or more of enterprise applications using enterprise application processing component where the one or more enterprise applications may be executed sequentially and or contemporaneously. The one or more enterprise applications being executed on system may access and or process enterprise data e.g. communicated from enterprise backend . For example raw enterprise data e.g. in the form of numbers words etc. may be accessed and processed using one or more enterprise applications to generate enterprise content e.g. processed enterprise data including charts graphs or other information derived from the raw enterprise data .

The enterprise content e.g. output from one or more of enterprise applications may be used to generate enterprise web content using enterprise data transformation component . For example enterprise content may be accessed in a first format directly from processing component from memory etc. Enterprise web content may be generated by component based upon the enterprise data where the enterprise web content is in a second format for rendering by and or display on device . For example the enterprise web content may be associated with a format such as XML JAVA CSS http https or another format which may be accessed and or parsed by device .

System also includes intra enterprise application integration component for enabling a plurality of enterprise applications to share data or otherwise function together. For example a first enterprise application e.g. may access enterprise data e.g. raw enterprise data accessed from backend and or enterprise content generated or accessed by a second enterprise application e.g. using component . The enterprise content or enterprise data may be accessed from a memory of system e.g. memory a memory of device e.g. memory of or another memory accessible by one or more components of system . In this manner component may coordinate operation of a plurality of enterprise applications e.g. etc. to enable a user of device to access additional richer more complex or otherwise different enterprise data. Additionally it should be appreciated that the data sharing between multiple enterprise applications may be implemented even where the device may restrict and or prohibit data sharing between native applications executed on the portable electronic device and thus a user of device may initiate and or interact with one or more enterprise applications which share data with one another.

Memory may be used to store enterprise data enterprise content enterprise web content or some combination thereof. For example enterprise data may be stored in memory and accessed in portions for processing by processing component . Memory may store enterprise content for access and processing by component . As a further example the enterprise content and or enterprise web content may be formatted or partitioned to fit the display screen of portable electronic device and thus memory may store portions of the enterprise content or enterprise web content to be subsequently communicated to device for display thereon e.g. in response to a user scrolling through information presented on device in response to another user input to device etc. .

System may be implemented by a web server in one embodiment. Alternatively system may be an ERP server CRM server etc. And in other embodiments system may be another type of computer system and or server.

As shown in interface and or interface may be a wired interface and or a wireless interface. For example data may be communicated over interface and or interface in accordance with a wireless standard such as WIMAX WLAN WPAN WMAN etc. Interface and or interface may comprise a GSM network GPRS network UMTS network or the like. And in one embodiment interface and or interface may comprise a wired network such as a local area network LAN wide area network WAN etc.

In one embodiment interface and or interface may include at least one insecure portion or reduced security portion. For example interface and or interface may include the Internet one or more demilitarized zones DMZs one or more proxy servers etc. Accordingly one or more trusted connections may be established between components of system e.g. device system enterprise backend etc. to more securely transfer data e.g. enterprise data enterprise content enterprise web content etc. . In one embodiment a trusted connection between device and system e.g. utilizing interface may be established in accordance with security policies stored in device management database of system where the security policies are specific to device a group of devices including device etc. The security policies may be established by an enterprise information technology IT department and or chief information officer CIO in one embodiment.

In another embodiment a virtual private network VPN may be created for more securely transferring data between device and system using public networks where the VPN is established using a portion of the native enterprise application running on device . The native enterprise application may also implement authentication procedures e.g. to authenticate device and or system before communicating sensitive data and or encryption procedures e.g. encryption decryption etc. with system to further increase the security of data communicated between device and system . Further in one embodiment the native enterprise application running on device may utilize soft tokens or other security mechanisms to increase the security of data communicated between device and system .

As shown in system also includes provisioning database . Database may store information used to determine which enterprise applications e.g. etc. a user of device may initiate and or interact with. For example information stored in database may be used to determine that a user of device may initiate and or interact with enterprise applications and e.g. and not enterprise application while information stored in database may be used to determine that a user of another portable electronic device e.g. communicatively coupled to system may initiate and or interact with enterprise applications and e.g. and not enterprise application . In this manner embodiments enable a privilege level to be assigned to one device e.g. thereby creating a one to one relationship between a user and the device e.g. to enable only that user to authenticate and access enterprise data using the device e.g. . Alternatively embodiments enable a privilege level to be assigned to a group of devices e.g. including device and other devices .

In one embodiment the privilege level assigned to device may be determined during an authentication procedure implemented by the native enterprise application running on device . For example a user may input login information e.g. username password etc. where the login information may be used to determine information about the user used to determine the privilege level assigned to device . For example if it is determined that the user is an owner of a business as opposed to a lower level employee of the business device may enable the user to interact with a larger number of enterprise applications. In one embodiment the listing of enterprise applications displayed on device for selection by the owner may be more extensive than a similar listing of enterprise applications displayed on another portable electronic device of the lower level employee thereby enabling a user to initiate and or interact with only those enterprise applications associated with the privilege level of the device. Additionally the privilege level assigned to device may be stored in provisioning database of system a memory of device e.g. memory of etc. Further the login information and or information about a user may be communicated over the Internet e.g. as part of interface and therefore the authentication procedure may be web based in one embodiment.

Provisioning database may also be used to implement one or more security measures to protect data on device and or to protect data accessed by device using the native enterprise application e.g. of . For example if it is determined that device is lost stolen or otherwise in the hands of an unauthorized user the data in provisioning database may be updated to adjust the privilege level of the device such that device has reduced or no access to enterprise data or other data from system . In this manner memory e.g. or other components of the device may be remotely locked or deleted e.g. wiped to make data e.g. enterprise data stored on device inaccessible to an unauthorized user of the device e.g. . And in one embodiment if it is determined that device is lost stolen or otherwise in the hands of an unauthorized user the native enterprise application e.g. of or other components of device may cause data stored on device e.g. associated with enterprise data or other data from system to be deleted e.g. wiped or otherwise rendered inaccessible e.g. locked in response to commands from system . It should be appreciated that the data e.g. enterprise data may be made inaccessible e.g. by deleting wiping locking etc. to an unauthorized user of the device e.g. without affecting the execution of other applications e.g. native applications etc. on the device e.g. in one embodiment.

As shown in device application server is coupled to device . Device application server stores applications e.g. native applications for download and execution by device . In one embodiment the native enterprise application run on device e.g. for enabling device to provide access to enterprise data and or enable user interaction with one or more enterprise applications may be downloaded from server via interface .

System may also include computer system coupled to device via interface . Computer system may be a personal computer system of the user of device where system is used to communicate data with device . For example a user may synchronize data on device with data stored on or accessed by system .

In one embodiment interface and or may be a wired interface and or a wireless interface. For example data may be communicated over interface and or interface in accordance with a wireless standard such as WIMAX WLAN WPAN WMAN etc. Interface and or interface may comprise a GSM network GPRS network UMTS network or the like. In one embodiment data may be communicated over interface and or interface in accordance with a wired standard such as USB1.1 USB 2.0 FIREWIRE PCI EXPRESS SATA etc. And in one embodiment interface and or interface may comprise a wired network such as a local area network LAN wide area network WAN etc.

Although shows system with a specific number and arrangement of components e.g. and it should be appreciated that system may include a different number and or arrangement of components in other embodiments. For example it should be appreciated that a plurality of portable electronic devices e.g. similar to and or including device may be communicatively coupled to system in other embodiments. Additionally although shows each component of system with a specific number and arrangement of sub components e.g. of enterprise backend of system etc. it should be appreciated that one or more of the components of system may include a different number or arrangement of sub components in other embodiments.

As shown in device includes a plurality of native applications which are stored locally in a memory of device e.g. memory and executed by a processor e.g. of device . Native applications may include native enterprise application native application native application and native application . Native applications may be calendar applications email applications games or other applications associated with non enterprise data. In one embodiment native enterprise application may enable a user to interact with enterprise applications e.g. etc. and provide access to enterprise data. Additionally in one embodiment device may restrict e.g. limit prohibit etc. communications and or data sharing between applications e.g. native enterprise application native application native application native application some combination thereof etc. .

Each of native applications may cause user inputs from user interface components to be accessed and each of native applications may cause data to be displayed on display device . Additionally device includes operating system which communicates with native applications via application programming interface API . In one embodiment API may be provided as part of a software development kit SDK for enabling software developers to create native applications and or enable the native applications to run on device .

Device also includes communication component . In one embodiment component may include a web browser engine operable to access parse or otherwise process web content. The web browser engine may be provided or otherwise implemented using an SDK e.g. from the manufacturer of device . Accordingly native enterprise application may cause enterprise web content e.g. generated by component and communicated to device to be displayed e.g. on display device using component to read or prepare the enterprise web content for display. As such in one embodiment native enterprise application may implement a container or mechanism for displaying the enterprise web content on device .

As shown in user interface components may include one or more mechanically actuated user interface components e.g. one or more physical keys of a keyboard in one embodiment. In one embodiment user interface components may include a touchscreen e.g. disposed over display device where the touchscreen may enable selection of or interaction with regions of display screen . For example a user may select a graphical button displayed on display screen by interaction with a region of the touchscreen implemented by user interface components which overlaps or otherwise corresponds to the graphical button. As a further example a user may make gestures in proximity to or in contact with the touchscreen implemented by user interface components to enable navigation through menus to alter the display of the information on display screen e.g. to zoom pan etc. or the like.

In one embodiment user interface components may include an audio input device such as a microphone. Alternatively user interface components may include a visual input device such as an optical sensor.

Display device may be any type of display for displaying information to a user. For example display may be a liquid crystal display LCD field effect transistor FET display light emitting diode LED display organic light emitting diode OLED display cathode ray tube CRT display etc.

As discussed herein with respect to native enterprise application may increase the security of data e.g. enterprise data enterprise content enterprise web content etc. by implementing a VPN between device and system authentication procedures for device and or system encryption decryption procedures for the data or the like. Native enterprise application may also increase the security of data e.g. enterprise data enterprise content enterprise web content etc. by using soft tokens or other security mechanism for increasing the security of data.

Native enterprise application may also enable data to be synchronized between device and system . For example if a user enters data e.g. text into device the data entered by the user may be communicated to system for synchronization thereof. As another example if a user alters the display of data on device data representing the alteration may be communicated to system for synchronizing the data stored by system . And as a further example if data is updated or otherwise changed by system then the change may be communicated to device for updating the enterprise web content displayed thereon and synchronizing it with the data stored in system .

Additionally native enterprise application may enable data sharing between enterprise applications e.g. etc. executed on system . In one embodiment native enterprise application may operate in conjunction with an intra enterprise application integration component e.g. of system to implement the data sharing. The shared data may include enterprise data enterprise content enterprise web content or some combination thereof. The shared data may be stored in a memory of device e.g. memory a memory of system e.g. memory etc. Accordingly in one embodiment data may be shared between enterprise applications even where device does not permit data sharing between native applications and or does not permit contemporaneous execution of two or more of native applications .

In one embodiment native enterprise application may enable data sharing between applications of device . For example native enterprise application may store data in a memory e.g. of device a memory of system etc. for access by at least one native application e.g. etc. during execution. Alternatively during execution of native enterprise application native enterprise application may access data stored in a memory e.g. of device a memory of system etc. by at least one native application e.g. etc. . In this manner embodiments enable the sharing of data between applications even in cases where the applications sharing data are not executed simultaneously.

Additionally the user experience e.g. the look and feel of the GUI for presenting enterprise web content associated with native enterprise application may be consistent with that of other native applications e.g. of device . For example a GUI associated with the native enterprise application e.g. a GUI as shown in and or may be displayed on display device where display device is also used during execution of other native applications e.g. to display content. Additionally the user interface elements e.g. buttons icons images text menu elements etc. displayed during execution of native enterprise application e.g. one or more of enterprise user interface elements of one or more of native user interface elements or of etc. may be similar in appearance to the user interface elements generated by other native applications e.g. . Further the effect of certain commands or user inputs e.g. specific finger movements or gestures etc. on the GUI associated with native enterprise application may be similar to the effect that the same commands or user inputs have on a GUI associated with one or more of the other native applications e.g. .

In one embodiment enterprise user interface elements may form a menu and correspond to enterprise applications e.g. some combination thereof etc. for selection by a user of device . In one embodiment elements may be icons corresponding to respective enterprise applications e.g. etc. while elements may be text descriptions corresponding to the respective enterprise applications e.g. some combination thereof etc. . For example interaction with element and or element may initiate execution of enterprise application on system interaction with element and or element may initiate execution of enterprise application on system and so on. Alternatively interaction with elements may cause a new menu e.g. with different enterprise graphical user elements to be displayed in region where the new menu may be a sub menu associated with a selected enterprise user interface element e.g. .

As shown in elements may be arranged in a ring which may rotate to change the displayed user interface elements. For example a first user interaction e.g. a downward swipe of a finger another gesture another user interaction etc. with display screen and or a touch screen disposed thereon e.g. as part of user interface components may cause the ring to move downward. In this manner elements and elements would shift downward to make room for the display of new user interface elements e.g. displayed in the position occupied by elements and as depicted in associated with a different enterprise application e.g. executable by system . As a further example a second user interaction e.g. an upward swipe of a finger another gesture another user interaction etc. with display screen and or a touch screen disposed thereon e.g. as part of user interface components may cause the ring to move upward. In this manner elements and elements would shift upward to make room for the display of new user interface elements e.g. displayed in the position occupied by elements and as depicted in associated with a different enterprise application e.g. executable by system . Accordingly embodiments provide convenient mechanisms for using a portable electronic device e.g. to enable selection of one or more enterprise applications for execution on a system e.g. disposed remotely from the portable electronic device e.g. .

In one embodiment enterprise user interface elements may be associated with enterprise content generated during execution of an enterprise application e.g. etc. and or enterprise data e.g. accessed from enterprise backend during execution of the enterprise application . For example elements may be displayed on display after initiating execution of an enterprise application on system . Enterprise content may be generated by system during execution of an enterprise application e.g. etc. where the enterprise content is associated with enterprise data e.g. is a chart graph etc. generated based upon the enterprise data is a reformatted version of text numbers or other enterprise data etc. accessed from enterprise backend during execution of the enterprise application. Enterprise web content may be generated based upon the enterprise content e.g. by processing component transformation component etc. where the enterprise web content may be communicated to device for displaying elements . The enterprise web content may be displayed on device by a native enterprise application e.g. in conjunction with a communication component of device e.g. used to parse or otherwise process the enterprise web content for display. In this manner embodiments provide convenient mechanisms for using a portable electronic device e.g. to enable selection of one or more enterprise applications for execution on a system e.g. disposed remotely from the portable electronic device e.g. .

As shown in native user interface elements and may be used to interact with enterprise web content displayed in region by the native enterprise application e.g. . For example element may be a home button for returning a user to return to a home screen associated with the native enterprise application e.g. . In one embodiment a home screen associated with execution of a native enterprise application e.g. may be a menu for selecting enterprise applications for execution where the menu is displayed in region in response to an interaction with element . Additionally the home screen associated with execution of a native enterprise application e.g. may be displayed in response to an interaction with element without leaving and or interrupting execution of the native enterprise application e.g. in one embodiment.

As another example element may be a back button for recalling the display of previously displayed data associated with the native enterprise application e.g. . In one embodiment interaction with element may initiate display of previously displayed enterprise web content e.g. enterprise web content associated with enterprise content generated during execution of a enterprise application enterprise web content associated with a menu for selecting enterprise applications for execution etc. in region . In one embodiment a program portion of the native enterprise application e.g. may include code and or logic for tracking navigation through a menu hierarchy or other data of the enterprise web content thereby enabling the native enterprise application e.g. to recall the previously displayed enterprise web content e.g. in response to a user interaction with element .

The native user interface elements e.g. etc. may be generated by the native enterprise application e.g. . Additionally in one embodiment the native user interface elements e.g. etc. may be specific to e.g. exclusively used by exclusively accessed by etc. the native enterprise application e.g. and therefore not used or accessed by other native applications e.g. one or more of native applications .

Although shows a specific number and arrangement of graphical user interface elements e.g. etc. it should be appreciated that a different number and or arrangement of graphical user interface elements may be used in other embodiments. Additionally it should be appreciated that a different functionality may be attributed to one or more of the graphical user interface elements e.g. etc. and or a set of graphical user interface elements with different functionalities may be used in other embodiments. For example native user interface elements and or may be assigned different functionalities. Alternatively additional and or different native user interface elements may be displayed e.g. in region where the additional and or different native user interface elements may be associated with different functionality than elements and .

In one embodiment elements may form a list based menu which may be scrolled by a user to display different user interface elements. For example a first user interaction e.g. a downward swipe of a finger another gesture another user interaction etc. with display screen and or a touch screen disposed thereon e.g. as part of user interface components may cause the list based menu to scroll downward. In this manner elements would shift downward to make room for the display or new user interface elements e.g. displayed in the position occupied by element as depicted in . As a further example a second user interaction e.g. an upward swipe of a finger another gesture another user interaction etc. with display screen and or a touch screen disposed thereon e.g. as part of user interface components may cause the list based menu to scroll upward. In this manner elements would shift upward to make room for the display of new user interface elements e.g. displayed in the position occupied by element as depicted in . Additionally the newly displayed user interface elements may correspond to a different enterprise application executed on the remote system e.g. .

In one embodiment enterprise user interface elements may correspond to enterprise applications e.g. etc. for selection by a user of device . For example interaction with element may initiate execution of enterprise application on system interaction with element may initiate execution of enterprise application on system and so on. Alternatively interaction with elements may cause a new menu e.g. with different enterprise graphical user elements to be displayed in region where the new menu may be a sub menu associated with a selected enterprise user interface element e.g. .

In one embodiment enterprise user interface elements may be associated with enterprise content generated during execution of an enterprise application e.g. etc. and or enterprise data e.g. accessed from enterprise backend during execution of the enterprise application . For example elements may be displayed on display after initiating execution of an enterprise application on system . Enterprise content may be generated by system during execution of an enterprise application e.g. etc. where the enterprise content is associated with enterprise data e.g. is a chart graph etc. generated based upon the enterprise data is a reformatted version of text numbers or other enterprise data etc. accessed from enterprise backend during execution of the enterprise application. Enterprise web content may be generated based upon the enterprise content e.g. by processing component transformation component etc. where the enterprise web content may be communicated to device for displaying elements . The enterprise web content may be displayed on device by a native enterprise application e.g. in conjunction with a communication component of device e.g. used to parse or otherwise process the enterprise web content for display. In this manner embodiments provide convenient mechanisms for using a portable electronic device e.g. to enable selection of one or more enterprise applications for execution on a system e.g. disposed remotely from the portable electronic device e.g. .

Although shows a specific number and arrangement of graphical user interface elements e.g. etc. it should be appreciated that a different number and or arrangement of graphical user interface elements may be used in other embodiments. Additionally it should be appreciated that a different functionality may be attributed to one or more of the graphical user interface elements e.g. etc. and or a set of graphical user interface elements with different functionalities may be used in other embodiments. For example native user interface elements and or may be assigned different functionalities. Alternatively additional and or different native user interface elements may be displayed e.g. in region where the additional and or different native user interface elements may be associated with different functionality than elements and .

Additionally native user interface elements and may be user customizable in one embodiment. For example a user of native enterprise application may define the number and or functionality of native user interface elements e.g. similar to elements and or used during execution of native enterprise application .

Further enterprise user interface elements e.g. elements of elements of etc. may be user customizable in one embodiment. For example a user of native enterprise application may define the number and or functionality of enterprise user interface elements e.g. similar to elements of elements of etc. used during execution of native enterprise application .

In one embodiment program portions may be used to perform operations associated with an enterprise application or otherwise process data output during execution of the enterprise application. For example program portions may communicate data between interface components of device e.g. user interface components display device etc. and communication component during execution of a respective enterprise application on system . As a further example data e.g. enterprise data enterprise content enterprise web content etc. received over interface from system may be further processed by one or more of program portions associated with the one or more enterprise applications being executed e.g. by system during generation of the data. In this manner processing of the enterprise data and or execution of the enterprise applications may be shared between the portable electronic device e.g. and the remote system e.g. . In one embodiment the amount of processing performed by each of device and system may be dynamically varied.

Although shows native enterprise application with only four program portions e.g. it should be appreciated that native enterprise application may include a smaller or larger number of program portions in other embodiments. Additionally it should be appreciated that one or more of the program portions of native enterprise application may be assigned responsibilities or functions different than those of program portions in other embodiments. For example one program portion of native enterprise application may implement a dedicated interface layer for communicating with peripherals such as user interface components display device etc. while other program portions e.g. etc. may be responsible for processing data associated with initiation and or execution of enterprise applications e.g. etc. .

Step involves beginning execution of the native enterprise application on the portable electronic device. The native enterprise application e.g. may be executed by a processor e.g. of the portable electronic device.

As shown in step involves establishing a trusted connection between the portable electronic device e.g. and the remote system e.g. . In one embodiment the trusted connection may be established in accordance with security policies established by the native enterprise application e.g. . Additionally the trusted connection may enable sensitive data to be communicated over one or more public networks between the portable electronic device e.g. and the remote system e.g. with increased security.

Step involves determining a privilege level associated with the portable electronic device. In one embodiment the privilege level of the device e.g. may be determined by or otherwise associated with information about the user where the user may be identified by login credentials submitted from the portable electronic device e.g. to the remote system e.g. .

As shown in step involves determining a list of enterprise applications accessible to the portable electronic device e.g. based upon the determined privilege level e.g. determined in step . In one embodiment a database e.g. provisioning database may be indexed e.g. with a device identifier associated with device a user identifier privilege level data determined in step some combination thereof etc. to determine a list of enterprise applications accessible to the portable electronic device e.g. .

As shown in step involves sending data e.g. enterprise web content from the remote system e.g. to the portable electronic device e.g. for displaying a list of enterprise applications e.g. corresponding to the list determined in step on the portable electronic device e.g. . In one embodiment enterprise web content may be generated based upon the list of enterprise applications determined in step where the enterprise web content may be communicated in step to the portable electronic device for rendering by and or display thereon.

Step involves displaying the list of enterprise applications on the portable electronic device e.g. . In one embodiment the list of enterprise applications may be displayed as a plurality of user interface elements arranged in a ring e.g. as shown in where each of the user interface elements may be selected by a user to initiate execution e.g. on system of an enterprise application associated with the selected user interface element. Alternatively the list of enterprise applications may be displayed as a plurality of user interface elements arranged as a list based menu e.g. as shown in where each of the user interface elements may be selected by a user to initiate execution e.g. on system of an enterprise application associated with the selected user interface element.

As shown in step involves accessing a user input to the portable electronic device associated with the native enterprise application e.g. . The user input may involve an interaction with at least one user interface component e.g. of the portable electronic device e.g. . In one embodiment the user input may be associated with updating the list of displayed enterprise applications e.g. in response to a request to rotate the ring shown in in response to a request to scroll the list based menu shown in etc. . Alternatively the user input may be associated with a selection of an enterprise application to be executed on a remote system e.g. . And in one embodiment the user input may be associated with performing processing associated with the user input to generate other enterprise content e.g. during execution of an enterprise application by system .

Step involves communicating the user input to the remote system e.g. . The user input may be communicated over an interface e.g. coupling the portable electronic device e.g. to the remote system e.g. .

As shown in step involves determining whether the user input is associated with updating the list of enterprise applications displayed on the portable electronic device. If it is determined in step that the user input is associated with updating the list of enterprise applications displayed on the portable electronic device e.g. in response to a request to rotate the ring shown in in response to a request to scroll the list based menu shown in etc. then enterprise web content for updating the displayed list of enterprise applications may be generated in step before performing step of . The enterprise web content generated in step may have a format different from that of the enterprise content where the format of the enterprise web content may be XML CSS JAVA http https etc. In one embodiment if it is determined in step that the user input is associated with updating the list of enterprise applications displayed on the portable electronic device and enterprise web content for displaying the updated list of enterprise applications is already stored on the portable electronic device then the stored enterprise web content may be displayed on the portable electronic device e.g. thereby skipping one or more of steps . Alternatively if it is determined in step that the user input is not associated with updating the list of enterprise applications displayed on the portable electronic device then step may be performed.

Step involves determining whether the user input is associated with initiation of an enterprise application. If it is determined that the user input is associated with initiation of an enterprise application then the enterprise application may begin executing on the remote system e.g. in step . Enterprise content associated with execution of the enterprise application may be generated in step . In step enterprise web content may be generated e.g. by transformation component based upon the enterprise content for rendering by and or display on the portable electronic device. The enterprise web content generated in step may have a format different from that of the enterprise content where the format of the enterprise web content may be XML CSS JAVA http https etc. Alternatively if it is determined in step that the user input is not associated with initiation of an enterprise application then step may be performed.

As shown in step involves performing processing associated with the user input to generate other enterprise content. For example where the user input is associated with altering the display of enterprise data during execution of the enterprise application then processing may be performed in step to generate the other enterprise content using the enterprise application to enable the portable electronic device to correctly display the data associated with the user input. As a more specific example if the user input is a request to display a certain portion of enterprise data on the portable electronic device then processing may be performed in step to generate enterprise content to enable the portable electronic device to display the portion of enterprise data. After performing step enterprise web content may be generated e.g. by transformation component in step based upon the other enterprise content e.g. generated in step for rendering by and or display on the portable electronic device.

As shown in step involves communicating the enterprise web content e.g. generated in step and or step to the portable electronic device. The enterprise web content may be communicated in step over interface in one embodiment.

Step involves processing the enterprise web content on the portable electronic device. For example the enterprise web content may be parsed by a communication component e.g. of the portable electronic device. Alternatively additional processing may be performed on the data by a program portion e.g. etc. of the native enterprise application e.g. thereby sharing the processing of the enterprise data and or sharing execution of the enterprise application with the remote system e.g. .

As shown in step involves displaying the enterprise web content on the portable electronic device. The enterprise web content may be displayed on a display device e.g. of the portable electronic device by the native enterprise application using a web browser engine of the portable electronic device in one embodiment. Additionally in one embodiment the enterprise web content may be displayed to form a graphical user interface as shown in or the like.

As shown in portions of the present invention are comprised of computer readable and computer executable instructions that reside for example in computer system platform and which may be used as a part of a general purpose computer network not shown . It is appreciated that computer system platform of is merely exemplary. As such the present invention can operate within a number of different systems including but not limited to general purpose computer systems embedded computer systems laptop computer systems hand held computer systems portable computer systems and stand alone computer systems for instance.

In one embodiment depicted by dashed lines computer system platform may comprise at least one processor and at least one memory . Processor may comprise a central processing unit CPU or other type of processor. Depending on the configuration and or type of computer system environment memory may comprise volatile memory e.g. RAM non volatile memory e.g. ROM flash memory etc. or some combination of the two. Additionally memory may be removable non removable etc.

In other embodiments computer system platform may comprise additional storage e.g. removable storage non removable storage etc. . Removable storage and or non removable storage may comprise volatile memory non volatile memory or any combination thereof. Additionally removable storage and or non removable storage may comprise CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store information for access by computer system platform .

As shown in computer system platform may communicate with other systems components or devices via communication interface . Communication interface may embody computer readable instructions data structures program modules or other data in a modulated data signal e.g. a carrier wave or other transport mechanism. By way of example and not limitation communication interface may couple to wired media e.g. a wired network direct wired connection etc. and or wireless media e.g. a wireless network a wireless connection utilizing acoustic RF infrared or other wireless signaling etc. .

Input component may include any component for enabling a user system etc. to provide an input to system . For example input component may include a keyboard mouse pen voice input device e.g. microphone touch input device e.g. touchscreen visual input device e.g. optical sensor camera etc. accelerometer proximity sensor some combination thereof etc.

As shown in output component may include any component for enabling system to provide an output to a user system etc. For example output component may include a display device e.g. LCD LED OLED plasma CRT etc. speaker printer some combination thereof etc.

Graphics processor may perform graphics processing operations on graphical data stored in frame buffer or another memory e.g. etc. of computer system platform . Graphical data stored in frame buffer may be accessed processed and or modified by components e.g. graphics processor processor etc. of computer system platform and or components of other systems devices. Additionally the graphical data may be accessed e.g. by graphics processor and displayed on an output device coupled to computer system platform . Accordingly memory removable storage non removable storage frame buffer or a combination thereof may comprise instructions that when executed on a processor e.g. etc. implement a method of enabling a user to interact with an enterprise application and access enterprise data e.g. in accordance with process of a method of modifying execution of an application on a portable electronic device e.g. in accordance with process of some combination thereof etc.

Native enterprise applications e.g. in one embodiment may be difficult to configure once downloaded to the portable electronic device e.g. . A user may therefore be required to download a new version of the native enterprise application to modify a graphical user interface GUI or another feature of the native enterprise application which can be tedious time consuming and expensive. Also a developer who creates a new version of the native enterprise application or a patch for the native application may be unable to automate a software update of the native enterprise application since a user may be required to manually download the new version of the native enterprise application. As such it may be difficult to provide a consistent look and feel e.g. with similar user interface elements colors backgrounds logos etc. using the native application across multiple enterprise applications e.g. each associated with the same corporation or entity . Additionally one or more enterprise applications may benefit from an updated graphical user interface e.g. with additional user interface elements different user interface elements different user interface behavior etc. and thus difficulty in updating the native application may inhibit a user s ability to interact with remotely executed enterprise applications using the portable electronic device.

Accordingly a need exists to modify the execution of a native enterprise application running on a portable electronic device without requiring a user to download a new version of the native enterprise application. More specifically a need exists to modify the appearance and or behavior of a graphical user interface generated by a native enterprise application running on a portable electronic device. Additionally a need exists to alter the data sharing between enterprise applications running on a remote system. Embodiments of the present invention provide novel solutions to these needs and others as described below.

Embodiments of the present invention are directed to a method and system for modifying the execution of a native application e.g. native enterprise application running on a portable electronic device e.g. . More specifically a module e.g. a program module may be downloaded and executed by a portable electronic device to modify the execution of a native enterprise application running on the portable electronic device where the native enterprise application enables user interaction with remotely executed enterprise applications which are used to generate data e.g. enterprise data enterprise content enterprise web content etc. for display on the portable electronic device. The module may enable modification of the appearance and or behavior of a graphical user interface generated by the native enterprise application e.g. by replacing some or all of the program instructions of the native application used to implement the graphical user interface . And in one embodiment the module may enable alteration of the data sharing e.g. changing a location for storing the shared data changing or creating rules related to how the enterprise applications share data etc. between the enterprise applications running on the remote system.

As such the execution of a native enterprise application e.g. may be modified by executing a module on the portable electronic device without requiring a user to download a new version of the native enterprise application. Additionally by causing a module to be downloaded to and executed by the portable electronic device a developer or another third party may automatically update the native enterprise application or otherwise modify the execution of a native enterprise application running on the portable electronic device. In this manner embodiments provide a convenient mechanism for configuring or modifying the execution of a native enterprise application running on a portable electronic device.

Modules may be application specific e.g. specific to one or more of enterprise applications in one embodiment. For example execution of module may make modifications to native enterprise application which relate to enterprise application while execution of module may make modifications to native enterprise application which relate to enterprise application . In this manner native enterprise application may be easily configured or customized for one or more enterprise applications by executing a corresponding module e.g. etc. .

In one embodiment execution of an application specific module e.g. etc. may enable application specific customization of the appearance and or behavior of GUI . For example native enterprise application may display user interface elements buttons images etc. on GUI which are specific to one or more enterprise applications in response to an execution of a module which corresponds to the one or more enterprise applications. As another example native enterprise application may implement graphical user interface behavior e.g. how the GUI responds to user inputs the function or functions assigned to each user interface element etc. which is specific to one or more enterprise applications in response to an execution of a module which corresponds to the one or more enterprise applications.

Execution of one or more modules e.g. etc. may implement or provide a consistent look and feel across multiple enterprise applications e.g. etc. . For example execution of one or more modules may provide multiple enterprise applications with similar user interface elements similar colors similar backgrounds similar logos etc. As such the modules may be used in one embodiment to provide a consistent look and feel across multiple enterprise applications associated with a corporation entity person etc. The look and feel of the graphical user interface e.g. may indicate or otherwise identify the associated corporation entity person etc.

Module may be any portion of code capable of altering the execution of native enterprise application . Module may be coded in objective C JAVA C C C another language some combination thereof etc. In one embodiment module may be an executable file capable of execution by portable electronic device .

Additionally module may be communicated to portable electronic device from system over interface . In one embodiment module may be communicated simultaneously with enterprise content. Alternatively module may be communicated separately from enterprise content.

In one embodiment module may be stored locally on portable electronic device and thus may not be downloaded to portable electronic device before execution in another embodiment module may be downloaded from system e.g. a server or other system separate from portable electronic device other than system . Additionally although depicts only three modules e.g. and it should be appreciated that a larger or smaller number of modules may be stored on system and or accessed by portable electronic device in other embodiments.

Modification management component may manage the execution of module and or the modification of native enterprise application . For example component may perform scheduling operations to cause fifth program portion to be executed in lieu of fourth program portion thereby modifying the execution of native enterprise application by replacing fourth program portion . Alternatively component may perform scheduling operations to cause fifth program portion to be executed in combination with fourth program portion thereby modifying the execution of native enterprise application by supplementing fourth program portion .

Fifth program portion may include instructions or data used to generate GUI and thus execution of fifth program portion may change the appearance or behavior of GUI in one embodiment. Alternatively fifth program portion may include instructions or data used to implement data sharing between enterprise applications e.g. etc. executed by remote system and thus execution of fifth program portion may alter the data sharing between enterprise applications in one embodiment.

Although depicts only one program portion e.g. generated in response to execution of module it should be appreciated that execution of module may generate more than one program portion in other embodiments. Additionally it should be appreciated that component may be included within native enterprise application in one embodiment.

It should be appreciated that GUI may be updated to reflect the modification e.g. the addition of native user interface element white native enterprise application is running e.g. as a dynamic update to GUI . In this case the module e.g. may be executed contemporaneously with execution of native enterprise application and or display of GUI . Alternatively in one embodiment the module e.g. may be executed when native enterprise application is not running e.g. when GUI is not displayed and thus GUI may be updated upon the subsequent execution of native enterprise application in one embodiment. In this case the module may act as a patch to modify native enterprise application while native enterprise application is not running.

Although shows a modification to GUI within region it should be appreciated that execution of the module e.g. may cause a modification to the appearance of any other region e.g. etc. of GUI in other embodiments. Additionally although depicts modification of the appearance of GUI by adding a native user interface element e.g. it should be appreciated that any other type of appearance modification e.g. removal of a user interface element addition of a different type of user interface element such as an enterprise user interface element addition or alteration of an image which is not capable of interaction with a user etc. may be performed in response to execution of the module e.g. in other embodiments.

It should be appreciated that GUI may be updated to reflect the modification e.g. the removal of enterprise user interface element while native enterprise application is running e.g. as a dynamic update to GUI . In this case the module e.g. may be executed contemporaneously with execution of native enterprise application and or display of GUI . Alternatively in one embodiment the module e.g. may be executed when native enterprise application is not running e.g. when GUI is not displayed and thus GUI may be updated upon the subsequent execution of native enterprise application in one embodiment. In this case the module may act as a patch to modify native enterprise application while native enterprise application is not running.

Although shows a modification to GUI within region it should be appreciated that execution of the module e.g. may cause a modification to the appearance of any other region e.g. etc. of GUI in other embodiments. Additionally although depicts modification of the appearance of GUI by removing an enterprise user interface element e.g. it should be appreciated that any other type of appearance modification e.g. addition of a user interface element removal of a different type of user interface element such as a native user interface element addition or alteration of an image which is not capable of interaction with a user etc. may be performed in response to execution of the module e.g. in other embodiments.

Alternatively after execution of a module e.g. on the portable electronic device e.g. a user interaction e.g. a mouse click a touch screen press etc. with element may initiate the display of user interface elements and as shown in . A subsequent user interaction e.g. a mouse click a touch screen press etc. with user interface element for example may then initiate the display of the display of pie chart in one embodiment. Accordingly execution of a module e.g. may change the function of element e.g. from initiating the display of pie chart as shown in to initiating the display of elements as shown in thereby modifying the behavior of GUI .

User interface elements and or pie chart may be generated based upon data e.g. enterprise data enterprise content etc. communicated from a remote system e.g. to the portable electronic device e.g. in one embodiment. Additionally one or more of user interface elements may be enterprise user interface elements similar to enterprise user interface elements of and or enterprise user interface elements of .

Although depict one example of a modification to the behavior of a GUI it should be appreciated that other behavior modifications may be performed responsive to an execution of a module e.g. in other embodiments. For example different or additional data may be communicated to a remote system e.g. in response to a user interaction with a user interface element e.g. etc. of GUI in one embodiment. In this manner changes to a GUI which are not apparent to a user e.g. communicating different data in response to a user interaction with GUI may be performed in response to execution of a module e.g. in one embodiment.

Step involves downloading the module to the portable electronic device. For example module may be downloaded to portable electronic device responsive to the request accessed in step . The module e.g. may be downloaded from a remote system e.g. another system or server etc. which is not portable electronic device in one embodiment.

As shown in step involves beginning execution of the module e.g. on the portable electronic device e.g. . Step may be performed during execution of a native application e.g. native enterprise application modified in step . Alternatively step may be performed while the native application e.g. native enterprise application modified in step is not running.

Step involves modifying at least one feature of a native enterprise application e.g. using the module e.g. . For example execution of the module may generate program instructions e.g. fifth program portion of which replace and or supplement the existing program instructions of the native enterprise application e.g. and therefore execution of the new program instructions e.g. during execution of native enterprise application may alter at least one feature of the native enterprise application e.g. . The feature or features modified by execution of the module may include an appearance and or behavior of a GUI e.g. in one embodiment. Alternatively execution of the module may alter the data sharing e.g. changing a location for storing the shared data changing or creating rules related to how the enterprise applications share data etc. between enterprise applications e.g. etc. running on a remote system e.g. . And in one embodiment another feature of the native enterprise application e.g. may be modified in response to execution of the module e.g. in step .

As shown in step involves executing the native enterprise application e.g. and implementing the modification to the at least one feature of the native enterprise application. For example data downloaded from a remote system e.g. may be displayed differently using the graphical user interface e.g. during execution of native enterprise application e.g. in step . Alternatively the manner in which enterprise applications e.g. etc. share data may be altered during execution of native enterprise application e.g. in step . And in one embodiment another change to the functionality of the native enterprise application e.g. may be implemented during execution of the native enterprise application e.g. in step .

In the foregoing specification embodiments of the invention have been described with reference to numerous specific details that may vary from implementation to implementation. Thus the sole and exclusive indicator of what is and is intended by the applicant to be the invention is the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction. Hence no limitation element property feature advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

