---

title: Color maps
abstract: A computer-implemented method for generating a color map using a color space, the generating including selecting lightness points representing lightness values, generating a lightness plot based on the lightness points, the lightness plot non-linearly increasing from a minimum lightness value to a maximum lightness value, and selecting chromaticity points, where the chromaticity points are represented using a plurality of dimensions, and the chromaticity points representing chromaticity values. The method includes generating a chromaticity plot based on the chromaticity points, and associating chromaticity values along the chromaticity plot with respective lightness values along the lightness plot, the associating specifying a plurality of colors. The method also includes identifying an in-gamut range for an RGB representation of the plurality of colors, the RGB representation provided in an RGB color space, and converting the color map from the color space to the RGB color space.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09613435&OS=09613435&RS=09613435
owner: The MathWorks, Inc.
number: 09613435
owner_city: Natick
owner_country: US
publication_date: 20140718
---
Data can be presented in various ways. In some presentations of data color is used to help represent data values. For example a bar graph may use different colors to represent different values. A color map may be used to select colors to represent the data. The color map may include a range of colors placed in an order to represent the range of the data. For example a monochromatic color map may range from a dark blue to a light blue. The dark blue may be used to represent a minimum value of the data and the light blue may be used to represent a maximum value of the data. Data values that fall in between the minimum and maximum values may be assigned shades of blue interpolated between the dark blue and the light blue. The resulting data presentation may allow a viewer of the presentation to more easily understand relative values of the data.

The following detailed description of example implementations refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.

Color may be used to represent data e.g. on a graph chart map etc. . A color map may provide a context to the colors used in representing the data. A user may generate the color map to use in representing the data. For example the user may select a set of colors and place the selected colors in an order to generate a color map.

The color map may have characteristics that allow an effective representation of data. For example shows an example color map . The colors of the color map may increase or decrease monotonically in lightness e.g. luminance a measure based on luminance etc. . A color map that increases or decreases in lightness from one end of the color map to the other may allow a viewer of the data to more easily perceive relative values of the data represented using one or more colors. Further the increasing or decreasing lightness may allow the data to be more easily perceived in monochromatic displays of the data e.g. a black and white printout of a color display .

Another example characteristic of the color map may include a perceptually uniform spacing of the colors of the color map. For example a perceived distance between each of the colors on color map may be substantially similar. A perceptually uniformly spaced color map may allow the viewer of the data to more easily perceive distances between data values based on the color of the represented data. A perceptually uniformly spaced color map may also imply or result in a color map with an ordering of colors that transitions gradually from one end of the map to the other.

Another example characteristic of the color map may include a minimum saturation of the colors of the color map. For example colors with a higher saturation may be perceived as colorful as opposed to dull or grayish shade of the color as may occur when saturation is lower. The higher saturation of the colors may allow for a clearer distinction between colors of the color map.

In some embodiments a color map may include a set of colors with a perceptually uniform spacing and that span at least a minimum section of a color space. For example the color map may start in a blue or purple section of a color space and span across a set of colors traditionally considered cool colors and into one or more of a set of colors traditionally considered warm colors. Conversely the color map may start with a warm color and span the set of warm colors and into one or more of the set of cool colors. Other such minimum color spans in the color space can be used.

A color map generator may assist the user in generating the color map. Generating a color map that includes characteristics such as perceptually uniform spacing and or an increasing lightness of the colors may be non trivial. For example a color map may be generated by selecting colors in a first color space such as the L a b color space developed by the International Commission on Illumination Commission Internationale de l Eclairage CIE . In some embodiments this color space may be a design color space in that a user or designer creates a desired color map using for example the L a b color space.

A different second color space such as red green blue RGB may be used to display data colored using the color map. In some embodiments this color space may be referred to as a deployment color space since this color space may be used to display a color map on an output device such as a computer display. Selecting the colors in the design color space to include characteristics that allow for an effective color map while ensuring the color map remains in gamut for display in the deployment color space may be non trivial. For example the design and deployment color spaces may be non linearly related to each other such that a slight change in the design color space produces a significant change in the deployment color space. The color map generator may allow the user to select colors in the design color space and interactively determine whether the resulting color map is in gamut in the deployment color space.

In some embodiments color map includes a set of selected colors. For example the selected colors may start from a dark blue or a purple color at one end of color map and end with a yellow color at another end of color map . The selected colors may include a lighter blue color a green color and an orange color located between the blue purple and the yellow colors. In some embodiments color map may include gradations between the selected colors for example by interpolating between the selected colors. For example color map may include a number e.g. 10 20 30 etc. of selected colors spaced along the range of color map with colors located between the number of selected colors generated by interpolating between the selected colors.

The selected colors of color map may be increasing in lightness as the map is traversed in a direction e.g. left to right in . In some embodiments the increase in lightness may be a monotonic increase in lightness. Additionally or alternatively the increase in lightness may be a strictly monotonic increase in lightness. For example color map starts at purple and ends at yellow which is considered to be relatively lighter than purple. The selected colors in between the purple and the yellow are each lighter than the previous selected color going from the purple to the yellow. In a similar manner in alternative embodiments color map may decrease in lightness. In some embodiments the monotonic increase in lightness may be configured to be not strictly monotonic. Alternatively or additionally allowing the increase in lightness to be non linear may allow the color map to remain in gamut while maintaining other characteristics of the color map.

The selected colors of color map may be perceptually uniformly spaced. For example the perceived distance between each of the selected colors of color map may be substantially similar. For example the color map may be used to represent data. If the data includes values from 0 to 50 the perceptual difference in the colors representing and may be substantially similar to the perceptual difference between the colors representing and .

Further the selected colors may be perceptually uniformly ordered so that adjacent selected colors may appear perceptually close. For example the selected color adjacent to the yellow at the right side of color map may be orange as orange may be perceptually close to yellow. In some embodiments the selected colors of color map may include colors with a minimum saturation value.

While shows one example color map the color map may start and end with different colors than those shown in color map . In some embodiments the starting and ending colors may span a minimum range of colors in a color space.

Client device may include one or more devices capable of receiving generating storing evaluating and or providing program code and or information associated with program code e.g. non code a link between code and non code a document that includes code and non code etc. . For example client device may include a computing device such as a desktop computer a laptop computer a tablet computer a mobile phone e.g. a smart phone a radiotelephone etc. or a similar device. Client device may compile and or execute program code and may ignore non code portions when compiling and or executing the program code. In some implementations client device may receive information from and or transmit information to server device e.g. program code and or information associated with program code .

Client device may host TCE . TCE may include any hardware based component or a combination of hardware and software based components that provides a computing environment that allows tasks to be performed e.g. by users related to disciplines such as but not limited to mathematics science engineering medicine and business. In some implementations TCE may include a programming environment capable of executing program code. For example TCE may include a text based environment e.g. MATLAB software by The MathWorks Inc. a graphically based environment e.g. Simulink software Stateflow software SimEvents software etc. by The MathWorks Inc. VisSim by Visual Solutions LabView by National Instruments Agilent VEE by Agilent Technologies Advanced Design System ADS by Agilent Technologies Agilent Ptolemy by Agilent Technologies etc. or another type of environment such as a hybrid environment that may include for example a text based environment and a graphically based environment.

TCE may include for example a user interface that provides a code editor portion that permits a user to input program code e.g. textual program code graphical program code etc. . TCE may include a programming environment capable of executing the input program code. In some implementations TCE may permit the user to input non code e.g. a comment plain text rich text an image a video a simulation etc. via the code editor. Additionally or alternatively TCE may include a non code editor portion that permits the user to input non code.

Server device may include one or more devices capable of receiving generating storing evaluating and or providing program code and or information associated with program code. For example server device may include a computing device such as a server a desktop computer a laptop computer a tablet computer or a similar device. In some implementations server device may host TCE . In some implementations client device may access one or more TCEs running on one or more server devices . For example multiple server devices may be used to execute program code e.g. serially or in parallel and may provide respective results of executing the program code to client device .

In some implementations client device and server device may be owned by different entities. For example an end user may own client device and a third party may own server device . In some implementations server device may include a device operating in a cloud computing environment. In this way front end applications e.g. a user interface may be separated from back end applications e.g. program code execution .

Network may include one or more wired and or wireless networks. For example network may include a cellular network a public land mobile network PLMN a local area network LAN a wide area network WAN a metropolitan area network MAN a telephone network e.g. the Public Switched Telephone Network PSTN an ad hoc network an intranet the Internet a fiber optic based network and or a combination of these or other types of networks. Network may include hardware e.g. routers switches optical fibers etc. and software to allow communication among two or more devices such as client device and server .

The number of devices and networks shown in is provided as an example. In practice there may be additional devices and or networks fewer devices and or networks different devices and or networks or differently arranged devices and or networks than those shown in . Furthermore two or more devices shown in may be implemented within a single device or a single device shown in may be implemented as multiple distributed devices. Additionally one or more of the devices of environment may perform one or more functions described as being performed by another one or more devices of environment . Also while client device and server device are shown including TCE some embodiments may include devices without TCE . For example color maps may be generated and or data may be represented using color maps on any appropriate computing device.

Bus may include a component that permits communication among the components of device . Processor may include a processor e.g. a central processing unit CPU a graphics processing unit GPU an accelerated processing unit etc. a microprocessor a microcontroller and or any processing component e.g. a field programmable gate array FPGA an application specific integrated circuit ASIC an Arduino microcontroller etc. that interprets and or executes instructions e.g. according to an instruction set architecture and or that is designed to perform one or more computing tasks. In some implementations processor may include multiple processor cores that can allow for example parallel computing. Memory may include a random access memory RAM a read only memory ROM and or another type of dynamic or static storage component e.g. a flash magnetic or optical memory that stores information and or instructions for use by processor .

Storage component may store information and or software related to the operation and use of device . For example storage component may include a hard disk e.g. a magnetic disk an optical disk a magneto optic disk a solid state disk etc. a compact disc CD a digital versatile disc DVD a floppy disk a cartridge a magnetic tape and or another type of computer readable medium along with a corresponding drive. In some implementations storage component may store TCE .

Input component may include a component that permits device to receive inputs. Inputs can be received on behalf of a user or from devices such as sensors interfaces etc. Examples of input components can include but is not limited to a touch screen display a keyboard a keypad a mouse a button a switch an accelerometer a microphone etc. Output component may include a component that outputs information from device e.g. a display a speaker one or more light emitting diodes LEDs etc. .

Communication interface may include a transceiver like component such as a transceiver and or a separate receiver and transmitter that enables device to communicate with other devices such as via a wired connection a wireless connection or a combination of wired and wireless connections. For example communication interface may include an Ethernet interface an optical interface a coaxial interface an infrared interface a radio frequency RF interface a universal serial bus USB interface a high definition multimedia interface HDMI etc.

Device may perform one or more processes described herein. Device may perform these processes in response to processor executing software instructions included in a computer readable medium such as memory and or storage component . A computer readable medium is defined herein as a non transitory memory device. A memory device includes memory space within a single physical storage device or memory space spread across multiple physical storage devices.

Software instructions may be read into memory and or storage component from another computer readable medium or from another device via communication interface . When executed software instructions stored in memory and or storage component may cause processor to perform one or more processes described herein. Additionally or alternatively hardwired circuitry may be used in place of or in combination with software instructions to perform one or more processes described herein. Thus implementations described herein are not limited to any specific combination of hardware circuitry and software.

The number of components shown in is provided as an example. In practice device may include additional components fewer components different components or differently arranged components than those shown in . Additionally or alternatively one or more components of device may perform one or more functions described as being performed by another one or more components of device .

An example color may be specified as a point in color chart . The position of point on L axis may determine the lightness of the color. For example a color e.g. specified by point that is closer to top of L axis may be perceived as lighter than a color e.g. specified by a point that is closer to the bottom of L axis . L axis may have a range from 0 at the bottom of L axis to at the top of L axis .

Point specifying the example color may also be positioned along a axis . For example a color e.g. specified by point that is closer to the right end of a axis a more positive a value may be perceived as more red while a color e.g. specified by point closer to the left end of a axis a more negative a value may be perceived as more green. Point specifying the example color may also be positioned along b axis . For example a color e.g. specified by point that is closer to the top of b axis a more positive b value may be perceived as more yellow while a color e.g. specified by point closer to the bottom of b axis a more negative b value may be perceive as more blue. Colors may be a mix of the colors represented by the axes.

Chromaticity plane may express chroma of a specific color as a distance from an origin of chromaticity plane i.e. the intersection of the a and b axes . For example point closer to the origin may specify a color that is more grayish while point further from the origin of chromaticity plane may specify a color that is more vivid and colorful. If a point closer to the origin and a point further from the origin lie on a same angular degree the two specified colors may be a same hue while differing in saturation of the color.

While the L a b color space has been described here other color spaces may be used. In some embodiments a first color space such as L a b other CIE color spaces etc. may provide a design color space that is more perceptually uniform than a second deployment color space. For example a deployment color space such as RGB cyan magenta yellow key CMYK etc. may be used to specify colors for display e.g. on a computer display printer etc. . Selecting a color map that is perceptually uniform may be easier in the design color space than the deployment color space. However the design and deployment color spaces may have different gamuts which may result in colors that can be selected in the design color space but cannot be displayed in the deployment color space.

A first panel on interface may correspond to a component of color in a design color space such as the chromaticity plane of the L a b space described above. In some embodiments first panel includes a ring representing the chromaticity plane which may show the hues of the chromaticity plane. Interface may display using an interior region of ring a chromaticity plot described by chromaticity points . Chromaticity plot may be used to define the hues of the colors selected for the color map as well as the ordering of the hues for selected colors. For example chromaticity points of chromaticity plot may correspond to coordinates on the chromaticity plane . The hues of the selected colors may be those defined by the coordinates of some or all of chromaticity points .

Chromaticity plot may be modified by the user to adjust the resulting color map. For example the user may move a chromaticity point e.g. by selecting and dragging chromaticity point using a mouse or a touch screen to a different position to alter chromaticity plot . The user may also lengthen or shorten chromaticity plot for example by dragging an end chromaticity point to a different position. The resulting color map may be displayed in example outputs to show the changes produced by adjusting chromaticity plot .

In some embodiments chromaticity points may refer to points that the user may manipulate with chromaticity plot interpolated between chromaticity points . The user may add more chromaticity points to chromaticity plot to add more inflection points of chromaticity plot . Inflection points may include points on a chromaticity or other plot at which a slope and or an angle of curvature of the plot changes. In other embodiments chromaticity points may refer to all the points of chromaticity plot . The user may manipulate a subset or all of the points of chromaticity plot based on a desired design goal.

A second panel on interface may correspond to another component of color in the design color space such as lightness of the color e.g. the L axis of the L a b space described above . In some embodiments second panel includes a lightness plot described by lightness points . Similar to chromaticity plot lightness plot may be adjusted by the user by repositioning one or more lightness points . Adjusting lightness plot may result in changes to the output color map which may be displayed on one or more example outputs .

Second panel may also include plots reflecting a deployment color space. For example second panel may include a red plot a green plot and a blue plot to reflect an RGB color space. RGB plots may reflect the components of the colors in the color map resulting from the inputs of chromaticity plot and lightness plot . In some embodiments as the user adjusts chromaticity plot and or lightness plot RGB plots may adjust to reflect the changes in the resulting color map. The changes in the resulting color map may also be reflected in example outputs . In an embodiment changes to chromaticity plot and or lightness plot may be transformed and shown in window in substantially real time thus allowing a user to perform interactive color map design. Embodiments further allow the user to determine in substantially real time whether the resulting color map will be in gamut on an output device. In some embodiments the user may conversely make adjustments in red plot green plot and or blue plot to change the resulting color map. The adjustments to one or more of RGB plots may produce changes to chromaticity plot and or lightness plot which may be incorporated and reflected in first panel and or second panel .

A third panel on interface may correspond to a characteristic of the color map such as perceived difference between the colors. Third panel may include a difference plot that shows the perceived difference between the colors in the color map. A flat line represents a uniform perceived difference between the colors of the color map. A sloped line would represent changing perceived differences as the value of the line increases the perceived difference between adjacent colors would become greater. The user may adjust difference plot to change the perceived difference between the colors. Adjusting difference plot may result in changes to chromaticity plot and or lightness plot which may be reflected in first panel and or second panel . Conversely adjustments to chromaticity plot and or lightness plot may result in changes in difference plot which may be reflected in third panel . While difference plot is shown as flat color maps with non uniform perceived differences may also be generated.

While interface of shows three panels more or fewer panels may be used. For example respective ones of RGB plots may be shown in separate panels. Alternatively or additionally more color spaces may be depicted such as a set of CMYK plots either in one of panels or in one or more separate panels. Further different components and characteristics of the colors in the color map may be used in the panels as inputs for the resulting color map. For example different color spaces may have different components that correspond to the colors e.g. hue saturation brightness etc. . As another example a panel may allow the user to configure other characteristics of the color map such as a minimum saturation of the colors in the color map.

As the color map no longer remains in gamut across the entirety of the color map third panel shows a difference plot that reflects a point at which the perceived difference is not constant. As a color that is out of gamut is modified before it can be displayed the perceived difference between the modified color and a neighboring color is no longer uniform as shown in difference plot by a break . The resulting modified color map may be displayed in example outputs

In some embodiments chromaticity plot may include a minimum range of colors between a starting color and an ending color of the color map. For example a threshold of a minimum total angle of the arc of chromaticity plot may be applied. In some embodiments chromaticity plot may include a minimum saturation of the colors. For example a threshold of a minimum distance from an origin of the chromaticity plane may be applied to chromaticity plot .

In some embodiments lightness plot is non linearly increasing which may allow the color map to remain in gamut. For example other characteristics of the color map such as perceptual uniformity and minimum saturation may be more easily maintained with a non linearly increasing lightness. In alternative embodiments lightness plot may increase linearly while other components are adjusted to maintain characteristics of the color map.

Selecting colors may also include selecting chromaticity points to generate a chromaticity plot. The chromaticity plot may be represented for example by an a b plot in the L a b space. In some embodiments the chromaticity plot may be a component based on hue and saturation in a different color space.

Selecting colors may also include associating chromaticity values along the chromaticity plot with respective lightness values along the lightness plot. For example a specific number of colors may be specified by sampling values along the chromaticity plot a specific number of times. Values on the lightness plot may be sampled the specific number of times and corresponding lightness values may be associated with the chromaticity values to specify each color. Generating the color map may include interpolating colors between the selected colors.

For example a chromaticity plot may collectively have a starting point an ending point and a number of intermediate points between the starting and ending points. A number of colors for example thirty colors may be selected by starting at the starting point of the chromaticity plot and dividing the plot into equal segments to result in thirty substantially equidistant values including the starting point ending point and a number of intermediate points. Values from the lightness plot may be similarly sampled to generate a perceptually uniformly spaced and ordered color map.

In act an in gamut range for RGB representation of the colors of the color map may be identified. The in gamut range may be specified by a definition for a particular color space. For example the RGB color space may be one of various color spaces based on the RGB color model such as sRGB scRGB Adobe RGB etc. The various RGB color spaces may include varying in gamut ranges.

The color map generated in the color space here L a b using the selected and interpolated colors may be checked to ensure the color map is in gamut in the RGB space. If any of the colors of the color map are determined to be out of gamut the color map may be adjusted to bring the color map in gamut.

In act the color map is converted from the color space to the RGB color space. As the color map has been determined to be within the in gamut range of the RGB color space the color map may be converted and displayed in the RGB color space. In some embodiments converting the color map may include converting each set of numbers specifying the selected colors into a corresponding set of RGB numbers. The remainder of the colors of the color map may be interpolated in the RGB space.

In act a second plot in the design color space is provided. For example as described above the second plot may be an a b plot in the L a b color space. Again in other embodiments other color spaces may be used. As another example the second plot may be an XZ plot in the CIE XYZ color space. Similar to the first plot the second plot may be described using points representing values of the second component e.g. chromaticity . One or more of the second component points may be displaceable with respect to the second plot. For example a designer may manipulate a point of the second plot to produce a modified plot.

In act a second color space region e.g. a deployment color space region is provided. The deployment color space region may include component plots. For example as described above the deployment color space may be an RGB color space including component red green and blue plots. In some embodiments the deployment color space may be a different color space e.g. a CMYK based color space HSV hue saturation value color spaces etc. The component plots may represent in the deployment color space the plots of the design color space. For example the red green and blue plots may represent the colors specified by the L and a b plots of the L a b color space.

In act one or more points may be displaced with respect to one or more plots in the design color space. A displaced point may be from either of the first or second plots of the design color space L or a b plots . As the point is displaced the plot may be updated to reflect a change in the plot. Alternatively the plot may be updated when the point has been displaced. In act the deployment color space region is updated to reflect the displaced point in the design color space. For example the red green and or blue plots may be updated to reflect the change in the colors represented by the updated design color space plots. In some embodiments an indicator e.g. an icon may be provided to indicate whether the deployment color space component plots are in gamut.

In some embodiments the one or more displaced points may be in one or more of the plots of the deployment color space with the design color space updating to represent the changes to the deployment color space. For example if a displacement in the design color space results in an out of gamut color map in the deployment color space the one or more plots that are out of gamut in the deployment color space may be adjusted directly to bring the color map back in gamut. The direct adjustments to the deployment color space may be reflected by changes in the design color space.

Embodiments described herein have generally referred to the CIE L a b color space as the design color space and the RGB color space as the deployment color space however other color spaces may be used consistent with disclosures made herein. Further while specific colors have been mentioned other colors may be used. For example while colors may be specified by a set of numbers in a color space a small change in one or more of the numbers may result in a color that is technically but nearly imperceptibly different. For example colors that are within a perceptual tolerance may be considered substantially the same. shows an example color chart with an example perceptual tolerance. Colors within each of tolerance ellipsoids may be difficult for a person to perceive as representing different colors and as such may be considered to substantially represent a same color. In other embodiments other appropriate tolerance measures may be used such as CIE76 CIE94 CIEDE2000 etc.

TCE may provide a computing environment that may allow for example a user to perform tasks related to disciplines such as but not limited to mathematics science engineering medicine business biology finance etc. TCE may use an array as a basic element where the array may not require dimensioning. These arrays may be used to support array based programming where an operation may apply to an entire set of values included in the arrays. Array based programming may allow array based operations to be treated as high level programming that may allow for example operations to be performed on entire aggregations of data without having to resort to explicit loops of individual non array operations.

TCE may include a programming language e.g. the MATLAB language that may be used to express problems and or solutions in mathematical notations. The programming language may be dynamically typed and or array based. In a dynamically typed array based computing language data may be contained in arrays and data types of the data may be determined e.g. assigned at program execution time.

For example suppose a program written in a dynamically typed array based computing language includes the following statements 

Now suppose the program is executed for example in a TCE such as TCE . During run time when the statement A hello is executed the data type of variable A may be a string data type. Later when the statement A int32 1 2 is executed the data type of variable A may be a 1 by 2 array containing elements whose data type are 32 bit integers. Later when the statement A 1.1 2.2 3.3 is executed since the language is dynamically typed the data type of variable A may be changed from the above 1 by 2 array to a 1 by 3 array containing elements whose data types are floating point. As can be seen by this example data in a program written in a dynamically typed array based computing language may be contained in an array. Moreover the data type of the data may be determined during execution of the program. Thus in a dynamically type array based computing language data may be represented by arrays and data types of data may be determined at run time.

TCE performs matrix and or vector computations that may be used for data analysis data visualization application development simulation modeling and or algorithm development. These matrix and or vector formulations may be used in many areas such as but not limited to statistics image processing signal processing control design life sciences modeling financial modeling discrete event analysis and or design and state based analysis and or design.

TCE provides mathematical routines and a high level programming language suitable for non professional programmers and may provide graphical tools that may be used for creating plots surfaces images volumetric representations or other representations. TCE may provide these routines and or tools using toolboxes e.g. toolboxes for signal processing image processing data plotting parallel processing etc. . TCE may also provide these routines in other ways such as for example via a library local or remote database e.g. a database operating in a computing cloud remote procedure calls RPCs and or an application programming interface API . Embodiments of TCE may be configured to improve runtime performance when performing computing operations. For example TCE may include a just in time JIT compiler in an exemplary embodiment.

Examples of TCEs and or TCE like applications that may be adapted to implement one or more embodiments of the invention may include but are not limited to applications that implement languages such as the MATLAB environment available from The MathWorks Inc. GNU Octave from the GNU Project Mathematica from Wolfram Research Inc. Mathcad from Mathsoft Engineering Education Inc. Maple from Maplesoft Scilab from The French Institution for Research in Computer Science and Control INRIA .

The foregoing description of implementations provides illustration and description but is not intended to be exhaustive or to limit the invention to the precise form disclosed. Modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention.

It will be apparent that embodiments as described herein may be implemented in many different forms of software firmware and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement embodiments described herein is not limiting of the invention. Thus the operation and behavior of the embodiments were described without reference to the specific software code it being understood that one would be able to design software and control hardware to implement the embodiments based on the description herein.

Further certain portions of the invention may be implemented as logic that performs one or more operations. This logic may include hardware such as an application specific integrated circuit or a field programmable gate array software or a combination of hardware and software.

Even though particular combinations of features are recited in the claims and or disclosed in the specification these combinations are not intended to limit the disclosure of the invention. In fact many of these features may be combined in ways not specifically recited in the claims and or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim the disclosure of the invention includes each dependent claim in combination with every other claim in the claim set.

No element act or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also as used herein the article a is intended to include one or more items. Where only one item is intended the term one or similar language is used. Further the phrase based on is intended to mean based at least in part on unless explicitly stated otherwise.

