---

title: Methods and apparatus to automatically configure monitoring of a virtual machine
abstract: Methods and apparatus to automatically configure monitoring of a virtual machine are disclosed. An example method includes identifying a virtual machine in an application definition, automatically installing an agent on the virtual machine when the virtual machine is identified as having a designated configuration, automatically identifying, via the agent, a resource associated with the virtual machine and, based on the resource, applying a monitoring policy to the virtual machine to be executed by the agent.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09519513&OS=09519513&RS=09519513
owner: VMware, Inc.
number: 09519513
owner_city: Palo Alto
owner_country: US
publication_date: 20140331
---
This patent claims priority to U.S. Provisional Patent Application Ser. No. 61 911 375 filed Dec. 3 2013. The entirety of U.S. Provisional Patent Application Ser. No. 61 911 375 is incorporated herein by reference.

This disclosure relates generally to cloud computing and more particularly to methods and apparatus to automatically configure monitoring of a virtual machine.

 Infrastructure as a Service also commonly referred to as IaaS generally describes a suite of technologies provided by a service provider as an integrated solution to allow for elastic creation of a virtualized networked and pooled computing platform sometimes referred to as a cloud computing platform . Enterprises may use IaaS as a business internal organizational cloud computing platform sometimes referred to as a private cloud that gives an application developer access to infrastructure resources such as virtualized servers storage and networking resources. By providing ready access to the hardware resources required to run an application the cloud computing platform enables developers to build deploy and manage the lifecycle of a web application or any other type of networked application at a great scale and fast pace.

Wherever appropriate the same reference numbers will be used throughout the drawing s and accompanying written description to refer to the same or like parts.

Organizations have a need to monitor performance of their information technology resources. Monitoring may be accomplished using agents on the monitored machines. As used herein the term agent refers to software installed on a machine virtual or physical that provides an interface to enable remote control of the machine for execution of commands scripts and or other code. The agents monitor designated aspects of the machine e.g. hardware software and or firmware aspects and report data related to the monitored aspects to a monitoring server. In some disclosed examples the monitoring server processes and or formats the monitored aspects and presents the results to an administrator or other user e.g. person associated with the machines.

Cloud environments are dynamic by nature. Resources such as virtual machines e.g. Windows and or Linux servers and or application services may be created used moved and or destroyed with relatively high frequency. In such dynamic environments monitoring the resources e.g. virtual machines applications services etc. can be challenging because among other things new resources are often created resources change their location and or the configurations of the resources change. Such changes result in changes to monitoring requirements for the resources.

Example methods and apparatus disclosed herein automate monitoring of resources in cloud environments. In some examples an infrastructure navigator examines or scans virtual machines VMs for configuration information. Example methods and apparatus disclosed herein compare the determined configurations of the VMs to rules e.g. management rules monitoring rules etc. defined in management policies. If the configurations match designated rules a monitoring agent e.g. a performance monitoring agent is installed on the VM to monitor the VM.

Example methods and apparatus disclosed herein automate the registration of resources of a VM with a monitoring server. In some examples a monitoring agent that is installed e.g. automatically installed on a VM automatically discovers resources associated with the VM. Example resources may include a platform executing on the VM servers executing on the VM and or services executing on the VM. In examples disclosed herein the identified resources are reported to a monitoring server which registers the resources and or applies monitoring policies to the resources based on defined management policies. In some examples the monitoring server automatically adds the resources to an inventory of resources monitored by the monitoring server. In some examples the monitoring policies are applied to the VMs via the monitoring agents. By automatically analyzing the VMs installing the monitoring agents on designated VMs and or automatically configuring the monitoring agents and or the VMs example methods and apparatus disclosed herein improve the efficiency of monitoring of deployment environments applications and or services. Additionally example methods and apparatus disclosed herein automatically update the monitoring configurations of a deployment environment in response to changes to the VMs in the deployment environment.

As used herein the term cluster refers to a collection of hosts that can be managed as a single entity. The resources from the hosts in a cluster may be aggregated into a single pool. A cluster appears as a stand alone host but typically has more resources available.

As used herein the term deployment environment refers to an environment in a cloud. A deployment environment may be used for example for development testing staging and or production. A cloud can have multiple deployment environments.

As used herein the term service refers to scripted software that can be installed on a VM and reused in multiple applications.

As used herein the term properties refers to configuration variables used by scripts to set parameters on a script and run various configurations. For example setting an installation path property value causes installation scripts to use the property to specify the path to use to install a service during an application deployment process.

As used herein the term inventory refers to a list of resources. In some examples each monitoring server maintains a separate inventory associated with agents and or VMs being monitored.

The example application of is deployed in the deployment environment provided by a cloud computing platform provider also referred to herein simply as a cloud provider . The example cloud computing platform provider of may include any number of deployment environments .

The example application of includes multiple VMs . The example VMs of provide different functions within the application e.g. services portions of the application etc. . One or more of the VMs of the illustrated example are configured by an administrator and or a developer of the application to include one or more resources. Resources may include any computing storage or communication asset such as for example an agent software a platform e.g. an operating system a server a service memory and or storage. A computing unit such as a virtual machine may have multiple resources and or multiple types of resources.

Additionally the services executing on the example VMs may have dependencies on one or more other ones of the VMs .

In the example of the example cloud computing platform provider provides multiple deployment environments for example for development testing staging and or production of applications. The administrator and or the developer may access services from the cloud computing platform provider for example via REST Representational State Transfer APIs Application Programming Interface and or via any other client server communication protocol. One particular implementation of a REST API for cloud computing services is vCloud Director API available from VMware Inc. The example cloud computing platform provider provisions virtual computing resources e.g. the VMs and or physical resources e.g. servers storage gateways etc. to provide the deployment environments in which the administrator and or developer can deploy multi tier application s . One particular example of a deployment environment that may be used to implement the deployment environments of is vCloud DataCenter cloud computing services available from VMware Inc.

The example virtual infrastructure navigator of analyzes the application including the VMs to identify the configurations of the VMs . As VMs are deployed modified and or destroyed in the application the example virtual infrastructure navigator continues to analyze the configurations to identify changes in real time or near real time. To analyze the application and or the VMs the example virtual infrastructure navigator of includes a service analyzer a VM analyzer an application configuration database and an agent installer . The example virtual infrastructure navigator of is in communication with a discovery script repository .

The example service analyzer of identifies the VMs that are within an application definition. The application definition may be constructed by the administrator and or developer and describes the application e.g. services and or dependencies between aspects of the application . In some examples the service analyzer analyzes an application service package to identify the VMs e.g. VM name VM IP address VM host resource s etc. . In some other examples the example service analyzer receives a VM identifier e.g. the VIN ID IP address and or the application identifier of from an application director or coordinator e.g. a vSphere virtualization platform associated with deployment of the application .

The example service analyzer of receives e.g. from the administrator a VM identifier e.g. a VIN ID and or an IP address of a currently running VM . The service analyzer iteratively determines VMs belonging to the application based on the VM identifier and or the IP address. The example service analyzer of the illustrated example analyzes the VM identifier to determine for example IP addresses and or credentials for the VM s . Additionally or alternatively the example service analyzer may receive an application identifier for the application such as a unique application name and an identifier of the deployment environment in which the application is deployed e.g. from the administrator . The example service analyzer of may be required to translate the discovered properties into logical locations e.g. IP addresses URLs URIs etc. at which the VM analyzer may access the VMs to perform analysis. The example service analyzer of identifies the VMs based on the VM identifier by for example querying the cloud computing platform provider . The service analyzer of the illustrated example stores identifiers of the VMs included in the application in the application configuration database .

As mentioned above the example service analyzer of analyzes the VMs to facilitate monitoring of the application and or the VMs . For example the service analyzer of the illustrated example accesses and or executes the discovery script s in the discovery script repository to discover properties such as dependencies e.g. between the VMs node cluster definitions and or interfaces to other unidentified ones of the VMs in the application . The example service analyzer of adds the discovered ones of the VMs to a list of VMs to be analyzed by the VM analyzer .

The example VM analyzer of identifies customized configurations e.g. configuration items for the identified VMs in the application . For example the VM analyzer selects for analysis the VMs that were identified by the service analyzer defined in the application definition and or identified in the application configuration database . To analyze the example VMs the example VM analyzer of selects and or accesses discovery script s stored in the discovery script repository .

In the illustrated example discovery scripts execute on the VM analyzer and or on one or more of the VMs e.g. using administrator credentials for the VMs to discover configuration items of the VMs . For example the VM analyzer of may execute the discovery script s to access the VM via an interface e.g. a command and or text based interface through which the VM analyzer may request and receive access to data elements e.g. configurable items of the VM . In some other examples the VM analyzer may transfer the discovery script s to the VM for execution. The VM analyzer of the illustrated example receives the configurations from the VM e.g. from communications by the executing discovery script s . The example VM analyzer of stores discovered configuration items in the application configuration database . In some examples the VM analyzer requests and or executes a first discovery script in the discovery script repository which results in calling additional discovery scripts based on the discovered configurations of the VMs . In the example of the VM analyzer stores the discovered properties and configurations in association with data for respective ones of the VMs .

In some examples the discovery script s used by the service analyzer to analyze and determine the application definition are different than discovery script s used by the VM analyzer to determine configurations of the VMs . For instance the example service analyzer of calls a first discovery script to determine the application definition based on an identification of a seed VM and the example VM analyzer calls a second discovery script to obtain the configurations of the VMs .

In the example of the example VM analyzer identifies configuration elements of the VMs . Example configuration elements that may be discovered by the VM analyzer e.g. via the discovery scripts include a primary workload of the VM dependencies between the VMs services and or other application components in the application node cluster definitions load balancing port configurations ciphers custom drivers and or limits on simultaneous executing threads. Additionally or alternatively the example VM analyzer may execute the discovery scripts to discover any other customized application configuration elements. For example the VM analyzer of may execute the discovery scripts to discover configurations stored on the VM in files operating system registry keys and or in any other source for implementing customized application configurations. The example VM analyzer stores the configuration information e.g. identified configuration items such as the primary workload in the application configuration database .

The example service analyzer and or the example VM analyzer of iteratively e.g. repeatedly continuously etc. perform the VM discovery and or configuration identification processes.

The example agent installer of determines whether an agent e.g. a performance monitoring agent such as a VMware Hyperic HQ agent is to be installed on the VMs . For example the agent installer determines whether any configuration information obtained from a VM matches a policy or rule e.g. a monitoring policy a management policy etc. stored in the application configuration database that requires an agent to be installed. For example the agent installer of may determine a primary workload of each VM . If the primary workload is present in a list of workloads stored in the application rule database the example agent installer of initiates installation of an agent on the VM .

In some examples the policy or rule determines an initial configuration of the agent installed on the VM . Example policies include configuring the agent to communicate with one of multiple performance monitoring servers . illustrates an example interface that may be presented by the example virtual infrastructure navigator e.g. to the administrator and or the developer of to enable an initial configuration of agents for installation on VMs based on a management policy. Example configuration information includes a monitoring server IP address an agent user name an agent user password an installation package location a Linux platform installation directory a Windows platform installation directory an agent version configuration of the agent as a service a secure connection configuration to the performance monitoring server a performance agent server port a performance agent secure server port a performance agent port a unidirectional configuration e.g. configuring either the agent or the server to initiate all communications or configuring the agent and the server to initiate respective communications and or a checksum hash value . The example configuration information may be configured by the example administrator and or the example developer of .

When the virtual infrastructure navigator of has determined the configurations of the VMs and or installed the agents on the appropriate ones of the VMs the example performance monitoring server of automatically registers the agents on the VMs e.g. based on whether the agents are configured to communicate with the performance monitoring server configures the VMs to be monitored according to a management or monitoring policy and or performs any other monitoring tasks associated with the application .

The example performance monitoring server of includes an application rule database and an agent monitor . The example system of may include multiple performance monitoring servers to monitor agents that are configured differently based on for example the resource s being monitored by the respective agents . Multiple performance monitoring servers may additionally or alternatively be used to monitor different deployment environments different applications and or different VMs . The example agents may be initially configured by the agent installer to communicate with a designated one of the performance monitoring servers .

Upon installation and execution of the example agent on a VM of the agent of the illustrated example identifies the resources in the VM . Examples of such resources include the platform e.g. operating system server s executing on the VM and or services executing on the VM . The example agent returns a report of identified resources to the example agent monitor of . The example agent monitor of determines the configuration for an agent by comparing the resources identified by the agent to rules stored in the application rule database . Based on the rule s associated with the identified resources the example agent monitor of effects and or enforces the applicable configurations on the agent for the VM . For example the administrator and or the developer of may desire to have different monitoring performed on an email server than on an email database or on a web server.

To configure the monitoring the example administrator and or the developer may set rules in the application rule database specifying the configuration of agents associated with identified email server resources and specifying another configuration of agents associated with identified web server resources. In some other examples the administrator and or the developer may set rules specifying that the agents associated with identified email server resources have the same respective configurations as the agents associated with identified web server resources but that the agents associated with identified email server resources are grouped in different groups which apply different monitoring policies than the agents associated with identified web server resources e.g. enforce different configurations on the respective VMs .

If an agent detects a VM having a configuration different from a configuration to be applied based on the application rule database the example agent of changes the configuration of the VM to comply with the applicable rule s for the VM .

The example agent monitor of additionally or alternatively automatically organizes the monitoring of the resources and or the VMs . For example the agent monitor may apply grouping rules stored in the application rule database to enable ease of access by the administrator and or the developer . For example the agent monitor may group the resources in the VMs of for access by the administrator in association with the application . As another example the agent monitor may group agents and or resources on the VMs that are associated with email server resources. The example administrator may then access or view performance information monitored by the agents for email servers by selecting an email server group.

In examples in which there are conflicting configuration rules the example agent monitor selects between the conflicting rules. For example the configuration rules may have priorities to enable the agent monitor to select between the rules based on the resources. Additionally or alternatively the configuration rules may affect different sets of configuration information. In such cases the example agent monitor may send less than a complete set of configuration information to the agent such as configuration information that affects designated configuration items in the agent without affecting other items.

In illustrates an example interface that may be presented by the example performance monitoring server of . The example interface of displays available resources associated with a resource in a deployment environment e.g. the deployment environment following discovery of the resources by an agent installed on the VM e.g. the VMs of the VM of . In the illustrated example the example resources are automatically discovered by the example agent and the performance monitoring server .

The example services of may include one or more dependencies e.g. dependencies on other services dependencies on services executing on other VMs in the application etc. . The dependencies may include for example input data and or confirmation of performance of another task prior to execution of a task by the services .

The example guest OS of includes a file system a registry and a kernel . The example file system includes configuration files ciphers application files definitions and custom drivers . The example registry of includes communication port configurations thread limits node cluster definitions and load balancing settings . However the example configuration items may be included in and or divided among any of the virtual components .

To identify properties of the example VM the example VM analyzer of accesses a virtual machine manager VMM that manages the execution of the VM and other VMs on physical resources . In some examples the VM analyzer is provided with credentials e.g. a user name and password of a user or administrator authorized to access the relevant portions of the VM to access the components and or properties via a communications interface of the VMM and or a communications interface of the VM e.g. when the VM is executing on the physical resources . For example the VM analyzer of the illustrated example issues text based commands to the VM to access data from the file system the registry and or the kernel .

In addition to the services and or the guest OS the example VM of executes one or more servers . The server s of the illustrated example may receive requests perform functions and or return responses to requesting entities.

The example file system the example registry the example kernel the example configuration files the example ciphers the example application files definitions the example custom drivers the example communication port configurations the example thread limits the example node cluster definitions and the example load balancing settings of the example illustrated in are virtualized components. In some examples the VM analyzer e.g. via executing discovery scripts accesses data representative of the VM e.g. a stored VM file a VM suspended state or snapshot state file a virtual memory file etc. to identify the properties from the VM components . The example VM may access the data representative of the VM via the VMM e.g. via the interface and or via the physical resources e.g. in a physical storage device or memory .

While an example manner of implementing the system is illustrated in one or more of the elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. Further the example application the example deployment environment the example application director the example performance monitoring server the example virtual infrastructure navigator the example cloud provider the example deployment environment the example VMs the example service analyzer the example VM analyzer the example application configuration database the example agent installer the example application rule database the example agent monitor the example agents the example discovery script repository and or more generally the example system of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Thus for example any of the example application the example deployment environment the example application director the example performance monitoring server the example virtual infrastructure navigator the example cloud provider the example deployment environment the example VMs the example service analyzer the example VM analyzer the example application configuration database the example agent installer the example application rule database the example agent monitor the example agents the example discovery script repository and or more generally the example system could be implemented by one or more analog or digital circuit s logic circuits programmable processor s application specific integrated circuit s ASIC s programmable logic device s PLD s and or field programmable logic device s FPLD s . When reading any of the apparatus or system claims of this patent to cover a purely software and or firmware implementation at least one of the example application the example deployment environment the example application director the example performance monitoring server the example virtual infrastructure navigator the example cloud provider the example deployment environment the example VMs the example service analyzer the example VM analyzer the example application configuration database the example agent installer the example application rule database the example agent monitor the example agents and or the example discovery script repository is are hereby expressly defined to include a tangible computer readable storage device or storage disk such as a memory a digital versatile disk DVD a compact disk CD a Blu ray disk etc. storing the software and or firmware. Further still the example system of may include one or more elements processes and or devices in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated elements processes and devices.

Flowcharts representative of example machine readable instructions for implementing the system of is shown in and or . In this example the machine readable instructions comprise programs for execution by a processor such as the processor shown in the example processor platform discussed below in connection with . The programs may be embodied in software stored on a tangible computer readable storage medium such as a CD ROM a floppy disk a hard drive a digital versatile disk DVD a Blu ray disk or a memory associated with the processor but the entire programs and or parts thereof could alternatively be executed by a device other than the processor and or embodied in firmware or dedicated hardware. Further although the example programs are described with reference to the flowchart illustrated in many other methods of implementing the example system may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

As mentioned above the example processes of may be implemented using coded instructions e.g. computer and or machine readable instructions stored on a tangible computer readable storage medium such as a hard disk drive a flash memory a read only memory ROM a compact disk CD a digital versatile disk DVD a cache a random access memory RAM and or any other storage device or storage disk in which information is stored for any duration e.g. for extended time periods permanently for brief instances for temporarily buffering and or for caching of the information . As used herein the term tangible computer readable storage medium is expressly defined to include any type of computer readable storage device and or storage disk and to exclude propagating signals. As used herein tangible computer readable storage medium and tangible machine readable storage medium are used interchangeably. Additionally or alternatively the example processes of may be implemented using coded instructions e.g. computer and or machine readable instructions stored on a non transitory computer and or machine readable medium such as a hard disk drive a flash memory a read only memory a compact disk a digital versatile disk a cache a random access memory and or any other storage device or storage disk in which information is stored for any duration e.g. for extended time periods permanently for brief instances for temporarily buffering and or for caching of the information . As used herein the term non transitory computer readable medium is expressly defined to include any type of computer readable device or disk and to exclude propagating signals. As used herein when the phrase at least is used as the transition term in a preamble of a claim it is open ended in the same manner as the term comprising is open ended.

The example performance monitoring server of defines monitoring policies for an application e.g. the application of block . For example the performance monitoring server of stores policies and or rules to be implemented based on configurations of the VMs and or resources executing on the VMs . In some examples the rules are defined by the administrator and or the developer of based on a desired monitoring configuration of the application .

The example virtual infrastructure navigator of determines VMs within an application definition block . For example the service analyzer of may determine whether any VMs have been added removed and or modified from a previous application definition for the application . Following performance e.g. execution of instructions of block the example performance monitoring server may present an interface such as the interface of illustrating statuses of VMs included in an application. In the example of any of the example VMs e.g. VM s not having an agent and or VM s for which an agent status is unknown may be newly discovered VMs for the application. Example instructions to implement block are disclosed below with reference to .

The example VM analyzer of determines whether any new VMs have been identified in the application definition block . For example the VM analyzer may compare a prior application definition to an updated application definition to determine the added removed and or modified VMs in the application .

When there are new VMs identified in the application definition block the example VM analyzer identifies configuration s e.g. configuration items for the new VMs block . Example configuration items include a primary workload of the VM dependencies between the VMs services and or other application components in the application node cluster definitions load balancing port configurations ciphers custom drivers and or limits on simultaneous executing threads. However the example VM analyzer may execute the discovery scripts to discover any other customized application configuration elements. The example VM analyzer may execute the discovery scripts to discover configurations stored on the VM in files operating system registry keys and or any other source for implementing customized application configurations.

The example agent installer of deploys agent s to the new VM s based on the configuration s and based on a management policy block . For example the agent installer may determine whether any of the configuration items identified by the VM analyzer and or stored in the application configuration database matches a rule stored in the application rule database . Example rules stored in the application rule database may be specified by the administrator and or the developer to implement a management and or monitoring policy. Example instructions to implement block of are disclosed below with reference to .

The example agent monitor of receives resource report s for the new VM s from the installed agents block . The resource reports may be generated by the agents of periodically aperiodically and or in response to an event e.g. on initial installation and or execution of the agents . The resource reports list the resources and or provide information about the resources e.g. platform servers services etc. executing on the VMs . Based on the resource report s from the agents the example agent monitor registers the identified resources of the VMs block . For example the agent monitor may add the resources to an inventory and or include the resources in a listing or catalog of resources available for monitoring.

The example agent monitor applies monitoring policies to the resources block . For example the agent monitor may determine whether resources and or configurations of the VMs match monitoring and or management policy rules for the application stored in the application rule database . When resources and or configurations match an applicable rule the example agent monitor provides configuration information to the associated agent to configure the agent for monitoring. illustrates example configurable information associated with an agent. As illustrated in the performance monitoring server or agent monitor may be specified by for example an IP address to configure the agent to report monitoring information to a designated performance monitoring server or agent monitor. Example instructions to implement block of are disclosed below with reference to .

The example service analyzer of selects an identified VM block . For example the service analyzer may be provided with an identification e.g. the VIN ID IP address of of a first VM in the application as a seed VM.

The example service analyzer analyzes the selected VM to determine dependencies for the application block . For example the service analyzer may determine other service s and or VMs on which services operating on the selected VM depend.

The example service analyzer analyzes the selected VM to identify node clusters for the application block . For example the selected VM may be configured in a cluster of VMs that are part of the application .

The example service analyzer of analyzes the selected VM to determine port configuration s for the application block . For example the VMs in the application may be configured to communicate with other ones of the VMs at different IP addresses via designated ports. By identifying the port configuration s the example service analyzer may obtain the IP addresses and or identifiers of other VMs in the application .

The example service analyzer of analyzes the selected VM to determine other VM identifiers for the application block . For example the service analyzer may analyze any other configuration items of the VMs in the application from which additional VMs in the application may be identified.

The example service analyzer of determines whether additional VMs have been identified from analysis of the selected VM block . If VMs have been identified block the example service analyzer adds any identified e.g. newly identified VMs to a list of VMs to be analyzed block . The list of VMs to be analyzed may be used by the example service analyzer to identify further VMs in the application and or by the VM analyzer of to identify the configurations of the VMs .

After adding identified VMs to the list block or if no additional VMs have been identified by analyzing the selected VM block the example service analyzer determines whether additional VMs in the list of VMs are to be analyzed block . If there are no additional VMs to be analyzed by the service analyzer block the example service analyzer determines whether another VM identifier e.g. another VM seed has been received for the application block . For example if there are additional VMs in the application that were not identified by the service analyzer by analyzing a first seed VM the example administrator or another user may seed an additional VM identifier to the service analyzer to continue identifying the VMs in the application . If there are additional VMs in the list block or if another VM identifier has been received block control returns to block to select another VM e.g. from the list or based on a received VM seed .

When there are no additional VMs in the list block and another VM identifier has not been received block the example service analyzer stores an application definition in the application configuration database block . The example instructions then end and control returns to block of .

The example agent installer of loads a management policy e.g. from the application rules database block . An example management policy may specify that an agent is to be installed on VMs executed a particular type of primary workload. The agent installer selects a VM e.g. from an application definition in the deployment environment and or in the application block and accesses a configuration of the selected VM block .

The agent installer determines whether the configuration of the selected VM matches a policy rule in the management policy requiring an installation of an agent on the VM block . If the selected VM has a primary workload designated in the policy the agent installer initiates installation of an agent on the selected VM block . For example the agent installer may instruct the VM to install the agent and provide the agent to be installed or provide a pointer e.g. a URL or other location to the agent and or an installation package for the agent .

During deployment of the agent s to the VM s in block the example performance monitoring server of may present the example interface of to display statuses of the VM s during installation. In the example of the example VM is in the process of installing an agent. After the agent s are installed at the VM s the example performance monitoring server may present the example interface in which the example VM has a status of an agent running e.g. installed and running .

After initiating the installation of the agent on the selected VM block or if the configuration of the selected VM does not match a policy rule requiring installation of the agent block the example agent installer determines whether there are additional VMs block . If there are additional VMs block control returns to block to select another VM . When there are no more VMs block the example instructions end and the agent installer passes control to the agent monitor at block of .

The example agent monitor of selects a VM that has an installed agent block . For example the agent monitor may select the VM based on receiving a resource report from the agent installed on the VM . The agent monitor selects a resource executing on the selected VM block . The example agent monitor may select the resource from one or more resources listed in the resource report. The example agent monitor of determines whether the selected resource and or VM are associated with a defined agent configuration block . Example information or settings that may be configured in the agent are illustrated in . The selected resource and or VM may be associated with a defined agent configuration in for example a rule defined in the application rules database . The example agent monitor can therefore tailor agents e.g. via installation of particular agents and or configuration of agents to perform monitoring of different types of VMs and or resources. In some examples the agent monitor may determine whether a configuration e.g. the presence of a service or other configuration item of the selected VM matches one or more conditions specified in a policy rule e.g. in the application rules database .

If the selected resource and or VM are associated with a defined agent configuration block the example agent monitor sends configuration information to the installed agent block . The agent configures itself using the configuration information. In some examples the agent monitor confirms that the agent was correctly configured via a checksum or other method.

After sending the configuration information block or if the selected resource and or VM are not associated with a defined agent configuration block the example agent monitor determines whether there are additional resources on the selected VM block . If there are additional resources on the selected VM block control returns to block to select another resource. When there are no more resources on the selected VM block the example agent monitor determines whether there are additional VMs block . If there are additional VMs block control returns to block to select another VM . When there are no more VMs to process block the example instructions end and control returns to block of to continue monitoring and or automatically configuring VMs in the application .

In some examples after sending the configuration information to the agent block the agent monitor may omit processing of further resources for the selected VM and pass control to block .

The example VM installs a designated agent e.g. a performance monitoring agent the agent block . The example agent executes a discovery script to identify resources executing on the VM block . For example the agent may identify any platform s server s and or service s executing on the VM . In some examples the agent identifies resources having particular characteristics e.g. resources having particular dependencies resources associated with a particular application etc. . Based on the discovered resources the example agent generates and sends a resource report e.g. to the agent monitor block . The resource report includes information about the resources executing on the example VM . The resource report enables the example performance monitoring server to present an interface such as the interface of including the identified resources on a VM . The example performance monitoring server generates and presents the interface of for one or more VMs based on resource report s received from the agent s executing on the corresponding VMs .

The example agent determines whether a policy configuration is to be applied to the VM block . For example the agent may monitor for communications and or commands from the agent monitor including agent configuration information resource configuration information and or other configuration commands or data. If a policy configuration is to be applied block the agent configures the VM the resources executing on the VM e.g. the services the guest OS the servers etc. and or the agent according to the policy configuration block . In some examples configuring the agent includes adding the VM and or the agent to a designated monitoring group e.g. a group of VMs and or agents to be organized monitored and or modified together based on one or more shared aspects . The example interface of may be presented by the performance monitoring server after adding the example resource to a monitoring group e.g. based on a configuration applied to the VM the resource and or the agent .

After configuring the VM the agent and or the resources block or if there is no policy configuration to be applied block the example agent determines whether it is to continue monitoring the VM block . For example the agent may provide updates to the agent monitor regarding the status of the VM and or resources executing on the VM . Additionally or alternatively management policies may change which can affect the VM and or the resources.

The processor platform of the illustrated example includes a processor . The processor of the illustrated example is hardware. For example the processor can be implemented by one or more integrated circuits logic circuits microprocessors or controllers from any desired family or manufacturer.

The processor of the illustrated example includes a local memory e.g. a cache . The processor of the illustrated example is in communication with a main memory including a volatile memory and a non volatile memory via a bus . The volatile memory may be implemented by Synchronous Dynamic Random Access Memory SDRAM Dynamic Random Access Memory DRAM RAMBUS Dynamic Random Access Memory RDRAM and or any other type of random access memory device. The non volatile memory may be implemented by flash memory and or any other desired type of memory device. Access to the main memory is controlled by a memory controller.

The processor platform of the illustrated example also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an Ethernet interface a universal serial bus USB and or a PCI express interface.

In the illustrated example one or more input devices are connected to the interface circuit . The input device s permit s a user to enter data and commands into the processor . The input device s can be implemented by for example an audio sensor a microphone a camera still or video a keyboard a button a mouse a touchscreen a track pad a trackball isopoint and or a voice recognition system.

One or more output devices are also connected to the interface circuit of the illustrated example. The output devices can be implemented for example by display devices e.g. a light emitting diode LED an organic light emitting diode OLED a liquid crystal display a cathode ray tube display CRT a touchscreen a tactile output device a light emitting diode LED a printer and or speakers . The interface circuit of the illustrated example thus typically includes a graphics driver card a graphics driver chip or a graphics driver processor.

The interface circuit of the illustrated example also includes a communication device such as a transmitter a receiver a transceiver a modem and or network interface card to facilitate exchange of data with external machines e.g. computing devices of any kind via a network e.g. an Ethernet connection a digital subscriber line DSL a telephone line coaxial cable a cellular telephone system etc. .

The processor platform of the illustrated example also includes one or more mass storage devices for storing software and or data. Examples of such mass storage devices include floppy disk drives hard drive disks compact disk drives Blu ray disk drives RAID systems and digital versatile disk DVD drives.

The coded instructions of may be stored in the mass storage device in the volatile memory in the non volatile memory and or on a removable tangible computer readable storage medium such as a CD or DVD.

As mentioned above example methods and apparatus disclosed herein facilitate the automatic monitoring of resources in cloud environments and or the automatic updating of monitoring configurations. Example methods and apparatus enable accurate and efficient monitoring and or analysis by automatically updating monitoring to reflect any changes to virtual machines applications and or deployments.

Although certain example methods apparatus and articles of manufacture have been disclosed herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the claims of this patent.

