---

title: Connection following during network reconfiguration
abstract: An allocated IP address is remapped from a first virtual machine to a second virtual machine while maintaining existing client connections on the first virtual machine. A communication channel is established between the first and second virtual machines, and existing connections associated with the IP address are tracked. Packets addressed to the IP address are forwarded to the second virtual machine instead of the first machine. If the second virtual machine receives a packet that contains a new connection request, the new connection is established with the second virtual machine. However, if the second virtual machine receives a packet that is associated with an existing connection to the first virtual machine, then the packet is forwarded to the first virtual machine via the communication channel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09300731&OS=09300731&RS=09300731
owner: Amazon Technologies, Inc.
number: 09300731
owner_city: Seattle
owner_country: US
publication_date: 20141205
---
This application is a continuation of U.S. patent application Ser. No. 13 480 006 filed May 24 2012 now U.S. Pat. No. 8 909 780 issued Dec. 9 2014 the entire contents of which are incorporated herein by reference.

A data center is a facility that houses computer systems and various networking storage and other related components. Many organizations and businesses operate and maintain data centers to provide computing and information services to support their day to day operations. Data centers may also provide computing services to businesses and individuals as a remote computing service or to provide software as a service e.g. cloud computing .

To facilitate increased utilization of data center resources virtualization technologies may allow a single physical computing machine to host one or more instances of virtual machines that appear and operate as independent computer machines to a connected computer user. With virtualization the single physical computing device can create maintain or delete virtual machines in a dynamic manner Data centers may also allow customers to allocate resources from one virtual machine instance to another.

Embodiments of systems and methods are described for allowing a data center customer to remap an allocated network address e.g. an IP address from a first virtual machine instance to a second virtual machine instance while maintaining existing connections to the first virtual machine instance. is a diagram illustrating system including a mechanism for providing reconfigurable access to computing resources in accordance with the present disclosure. illustrates a first virtual machine instance that is configured to provide computing resources to users via a network address. For example first virtual machine instance may have an existing connection to user using computer . The administrator of first virtual machine instance may request and launch a second virtual machine instance that is configured to provide computing resources. The administrator may further request that requests to access the network address be remapped from first virtual machine to second virtual machine . In one embodiment a communication channel e.g. a tunnel is established between first virtual machine instance and second virtual machine instance . System may track existing connections to the first virtual machine instance and second virtual machine instance .

Data packets addressed to the network address are then re addressed e.g. NAT ed to the new virtual machine instance . If new virtual machine instance receives a data packet that contains a new connection request a new connection is established with the second virtual machine instance. For example in a new connection is established between new virtual machine instance and computer operated by user . However if new virtual machine instance receives a data packet that is associated with connection to the first virtual machine instance then the data packet is forwarded to the second virtual machine instance via communication channel .

A data center may allocate an external IP address to a customer to allow networks external to the data center communicate a virtual machine assigned to the customer within the data center. The customer may be provided with the capability to re map the external IP address from one computing device e.g. a virtual machine instance to another. Such a capability may be useful for example for customers to migrate away from an older virtual machine instance to a newer virtual machine instance or to provide a mechanism to upgrade from a virtual machine instance with older software applications to a virtual machine instance with newer software applications. Virtual machine instances may be remapped for various other reasons. For example the data center may move virtual machine instances between servers for maintenance purposes.

Such a remapping capability may be implemented at the point of address translation at the edge of the data center s network between an IP address on a first network and an IP address on a second network corresponding to the virtual machine instance. However when the IP address on the first network is re mapped from the old virtual machine instance to the new virtual machine instance active connections to the old virtual machine instance may be broken resulting in a disrupted session and a poor customer experience.

Various aspects of the disclosure are described with regard to certain examples and embodiments which are intended to illustrate but not to limit the disclosure. The present disclosure is generally directed to a mechanism to allow active connections to an old virtual machine instance to continue to function while new connections are handled by a new virtual machine instance that is intended to replace the old virtual machine instance.

The availability of virtualization technologies for computing hardware has provided benefits for providing large scale computing resources for customers and allowing computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies such as those provided by VMWare or other virtualization systems may allow a physical computing device to be shared among multiple users by providing each user with one or more virtual machine instances hosted by the physical computing device. A virtual machine instance may be a software emulation of a particular physical computing system that acts as a distinct logical computing system. Such a virtual machine instance provides isolation among multiple operating systems sharing a given physical computing resource. Furthermore some virtualization technologies may provide virtual resources that span one or more physical resources such as a single virtual machine instance with multiple virtual processors that spans multiple distinct physical computing systems.

Referring to communications network may for example be a publicly accessible network of linked networks and possibly operated by various distinct parties such as the Internet. In other embodiments communications network may be a private network such as for example a corporate or university network that is wholly or partially inaccessible to non privileged users. In still other embodiments communications network may include one or more private networks with access to and or from the Internet.

Communication network may provide access to computers . User computers may be computers utilized by customers or other customers of data center . For instance user computer or may be a server a desktop or laptop personal computer a tablet computer a wireless telephone a personal digital assistant PDA an e book reader a game console a set top box or any other computing device capable of accessing data center . User computer or may connect directly to the Internet e.g. via a cable modem or a Digital Subscriber Line DSL . Although only two user computers and are depicted it should be appreciated that there may be multiple user computers.

User computers may also be utilized to configure aspects of the computing resources provided by data center . In this regard data center might provide a Web interface through which aspects of its operation may be configured through the use of a Web browser application program executing on user computer . Alternatively a stand alone application program executing on user computer might access an application programming interface API exposed by data center for performing the configuration operations. Other mechanisms for configuring the operation of the data center including deploying updates to an application might also be utilized.

Servers shown in may be standard servers configured appropriately for providing the computing resources described above and may provide computing resources for executing one or more applications. In one embodiment the computing resources may be virtual machine instances . In the example of virtual machine instances each of the servers may be configured to execute an instance manager or capable of executing the virtual machine instances. The instance managers may be a virtual machine monitor VMM or another type of program configured to enable the execution of virtual machine instances on server for example. As discussed above each of the virtual machine instances may be configured to execute all or a portion of an application.

It should be appreciated that although the embodiments disclosed above discuss the context of virtual machine instances other types of implementations can be utilized with the concepts and technologies disclosed herein. For example the embodiments disclosed herein might also be utilized with computing systems that do not utilize virtual machine instances.

In the example data center shown in a router may be utilized to interconnect the servers and . Router may also be connected to gateway which is connected to communications network . Router may manage communications within networks in data center for example by forwarding packets or other data communications as appropriate based on characteristics of such communications e.g. header information including source and or destination addresses protocol identifiers etc. and or the characteristics of the private network e.g. routes based on network topology etc. . It will be appreciated that for the sake of simplicity various aspects of the computing systems and other devices of this example are illustrated without showing certain conventional details. Additional computing systems and other devices may be interconnected in other embodiments and may be interconnected in different ways.

In some embodiments one or more of the virtual machine instances of data center may form part of one or more networks. In some embodiments gateway may be used to provide network address translation NAT functionality to a group of virtual machine instances and allow the virtual machine instances of the group to use a first group of internal network addresses to communicate over a shared internal network and to use a second group of one or more other external network addresses for communications between virtual machine instances of the group and other computing systems or virtual machine instances that are external to the group. An IP address is one example of a network address that is particularly applicable to the TCP IP context in which some embodiments of the present disclosure can be implemented. The use of IP addresses herein is intended to be illustrative of network addresses and not limiting as to the scope of the described concepts.

Virtual machine instances may be assigned a private network address not shown . For example the private network addresses may be unique with respect to their respective private networks but not guaranteed to be unique with respect to other computing systems that are not part of the private network. IP addresses are used to illustrate some example embodiments in the present disclosure. However it should be understood that other network addressing schemes may be applicable and are not excluded from the scope of the present disclosure.

Gateway may operate to manage both incoming communications to data center from communication network and outgoing communications from data center to communication network . For example if virtual machine instance sends a message not shown to computer virtual machine instance may create an outgoing communication that includes network address on a first network e.g. an external public IP address for computer as the destination address and include a network address on a second network e.g. a private IP address for virtual machine instance as the source network address. Router may then use the destination address of the outgoing message to direct the message to gateway for handling. In particular in order to allow computer to reply to the outgoing message gateway may temporarily map one of the public network addresses for data center to virtual machine instance and modify the outgoing message to replace the private network address for the source network address with the mapped public network address. Gateway may then update its mapping information with the new mapping and forward the modified outgoing message to computer over the Internet.

If computer responds to the modified outgoing message by sending a response incoming message not shown that uses the mapped public network address for virtual machine instance as the destination network address the response incoming message may be directed over the Internet to gateway . Gateway may then perform similar processing in reverse to that described above for the outgoing message. In particular gateway may use its mapping information to translate the mapped public network address into the private network address of virtual machine instance modify the destination network address of the response incoming message from the mapped public network address to the private network address of virtual machine instance and forward the modified incoming message to virtual machine instance . In this manner at least some of the internal computers of data center may communicate with external computing systems via temporary use of the public network addresses. Furthermore in some situations one or more of the internal computing systems of data center may be mapped to use one of the public network addresses e.g. to a unique combination of a public network address and a port number such that external computing systems may initiate new incoming messages to the internal computing system by directing the new incoming messages to the mapped representative public network address port as the destination network address of the new incoming messages.

It should be appreciated that the network topology illustrated in has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. These network topologies and devices should be apparent to those skilled in the art.

It should also be appreciated that data center described in is merely illustrative and that other implementations might be utilized. Additionally it should be appreciated that the functionality disclosed herein might be implemented in software hardware or a combination of software and hardware. Other implementations should be apparent to those skilled in the art. It should also be appreciated that a server gateway or other computing device may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs tablets cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated modules may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

In some cases the enterprise customer providing remote access enterprise applications to users on virtual machine instance may wish to remap its allocated public IP address from virtual machine instance to virtual machine instance . In one embodiment system may provide the ability to request and obtain multiple virtual machine instances that may be mapped to one or more public IP addresses. A customer may further be provided the capability to remap an allocated public IP address from a first virtual machine instance to a second virtual machine instance. Such a feature may be useful for example to allow a user to scale its computer resource capacity as computing requirements change. In other embodiments an administrator of system may remap IP virtual machines to reallocate resources upgrade services upgrade hardware and or software and other reasons.

In one example a user may desire to obtain a new virtual machine instance with increased memory capacity and run an updated set of applications. The user may start the virtual machine instance and then remap its allocated public IP address to a new private IP address corresponding to the new virtual machine instance. As explained previously a device such as gateway of may be configured to translate the allocated public IP address to a corresponding private IP address of a virtual machine instance. When the user remaps the user s allocated public IP address to the private IP address of the new virtual machine instance gateway may update its mapping information so that messages addressed to the user s public IP address will now have the destination address translated to point to the private IP address of the new virtual machine instance.

Referring back to one drawback of remapping from the private IP address of virtual machine instance to the private IP address of virtual machine instance is that any existing user connections that are active at the time of the remapping may be broken. For example if a connection to virtual machine instance is active a remapping from private IP address of virtual machine instance to private IP address of virtual machine instance may result in a loss of mapping of packets between public IP address and virtual machine instance . Although a new connection can be established between public IP address and virtual machine instance the loss and reestablishment of the connection can be disruptive to the user and result in a poor customer experience.

According to an embodiment a data center customer can request a remapping of an allocated public IP address from a first virtual machine instance to a second virtual machine instance while maintaining existing connections on the first virtual machine instance. Since each virtual machine instance is associated with a unique private IP address the mapping of the public IP address to the corresponding private IP address is updated.

In address table is shown as having first network address remapped to second network address E which corresponds to virtual machine instance . Accordingly messages addressed to first network address will now be routed to virtual machine instance .

Referring back to a user may request the services of virtual machine instance in data center . Furthermore a user computer connected to public network may establish a connection to resources associated with public IP address that is mapped to virtual machine instance via its translated private IP address . In an embodiment before remapping virtual machine instance to virtual machine instance a communications channel may be established between virtual machine instances and . In some embodiments communications channel may be a dedicated communications channel using a tunneling protocol such as IP in IP secure shell SSH etc. Such a dedicated communication channel may be configured to encapsulate data packets without changing the content of the data packet. In other embodiments the destination address of the data packet may be changed to private IP address associated with virtual machine instance .

In an embodiment connection tracking software and database may be used to keep track of active connections between user computers and virtual machine instances and . In some embodiments connection tracking software and database may receive information from virtual machine instances and when connections are established and when connections are closed. Connection tracking software and database may track this information and allow the information to be accessed by virtual machine instances and as well as any other virtual machine instances that request the information. Connection tracking software and database may reside on a server or other computing resource in data center . Connection tracking software and database may in some embodiments be managed by a VMM or other management software executing in data center . Connection tracking software and database may also execute on one or more virtual machines.

In an embodiment when virtual machine instance receives a message from gateway via its connection virtual machine instance may communicate with connection tracking software and database and determine if the received message is associated with a connection being tracked by the connection tracking software and database . If the received message is associated with an existing connection which is not a new connection request virtual machine instance may translate the received message s destination address e.g. perform NAT of the destination address to private IP address of virtual machine instance . Virtual machine instance may then forward the message to virtual machine instance via communications channel . Virtual machine instance may also provide information to connection tracking software and database so that the forwarding decision can be tracked. Virtual machine instance may forward other messages to virtual machine instance that are not new connection requests and are associated with existing connections.

If virtual machine instance receives a message that is a new connection request then virtual machine instance may accept it locally and process the new connection request. In some embodiments new connection requests can be a TCP SYN message or a TCP ACK message. In this manner new connections can be associated with virtual machine instance and only older active connections associated with virtual machine instance need to be forwarded to virtual machine instance . Additionally as the older active connections are dropped and new connections are established by virtual machine instance at some point no active connections will exist for virtual machine instance . At this point connection tracking software and database may update the database to indicate that public IP address is only applicable to virtual machine instance . Since no connections to virtual machine instance need to be supported communications channel may be deleted. Additionally virtual machine instance may be brought offline as needed.

When virtual machine instance receives forwarded messages from virtual machine instance via channel any reply messages pertaining to that connection may be sent back to virtual machine instance via channel . Virtual machine instance may then transmit the reply message to gateway for address translation and forwarding to the appropriate user computer in public network . In this way since public IP address is now associated with virtual machine instance messages associated with virtual machine instance that were forwarded from virtual machine instance via the method described above will be returned to the appropriate user computer from virtual machine instance .

Referring to operation begins the operational procedure. Operation may be followed by operation . Operation illustrates receiving a request to remap virtual machine instances. In an embodiment an IP address on a first network e.g. public IP address in may be remapped from a first one of a plurality of IP addresses on a second network e.g. private IP address in to a second one of the plurality of private IP addresses on the second network e.g. private IP address in . Each of the plurality of IP addresses on the second network may correspond to respective virtual machine instances e.g. virtual machine instances and in . Furthermore a first connection to the IP address on the first network may have been established using the first IP address on the second network corresponding to the first virtual machine instance.

Operation may be followed by operation . Operation illustrates establishing a communication channel between the first and second virtual machine instances corresponding to the first one of the plurality of IP addresses on the second network and the second one of the plurality of private IP addresses on the second network. As discussed above in an embodiment the communication channel may be implemented using a tunneling protocol such as IP in IP or SSH. In other embodiments the communication channel may be any dedicated channel via which the first and second virtual machine instances may forward messages.

Operation may be followed by operation . Operation illustrates determining if the first connection was dropped or otherwise is no longer active. If the first connection was dropped then operation may be followed by operation in which the communication channel established in operation may be dismantled and the operational procedure may terminate. Additionally and optionally the first virtual machine instance may be placed offline.

If the first connection was not dropped then operation may be followed by operation . Operation illustrates receiving a packet. The packet may be received from a first network such as public network of . Operation may be followed by operation . Operation illustrates determining if the packet contains a request to initiate a second connection to the IP address on the first network. If the packet contains a request to initiate the second connection to the IP address on the first network operation may be followed by operation . Operation illustrates establishing the second connection using the second virtual machine instance. If the packet does not contain a request to initiate the second connection to the IP address on the first network then operation may be followed by operation . Operation illustrates determining if the received packet is associated with the first connection. If the received packet is associated with the first connection then operation may be followed by operation . Operation illustrates forwarding via the tunnel the packet to the first virtual machine instance. If the packet is not associated with the first connection then operation may be followed by operation .

Operation may be followed by operation . Operation illustrates establishing a communication mechanism between the first and second computing resources. In some embodiments the communication mechanism may comprise a communication tunnel In other embodiments the communication mechanism may comprise translating a destination address and forwarding the message using the translated destination address. Operation may be followed by operation . Operation illustrates receiving a message. The message may be received from a first network such as public network of .

Operation may be followed by operation . Operation illustrates determining if the received message includes a request to initiate a connection to the network address on the first network.

If the received message contains a request to initiate a connection to the network address on the first network then operation may be followed by operation . Operation illustrates establishing the requested connection using the second computing resource. If the message does not contains a request to initiate a connection to the IP address on the first network then operation may be followed by operation . Operation illustrates forwarding via the communication mechanism messages associated with previously established connections to the first computing resource.

In some embodiments the destination addresses of the received messages may be translated using a stateless network edge device such as gateway of . Additionally a tracking function may be used to track connections associated with the first and second computing resources. In some embodiments the tracking software may be implemented in software. Additionally and optionally the tracking software may execute on the first or second computing resource. One of the first or second computing resources may be selected to run the tracking software based on characteristics of the first or second computing resources. Alternatively the tracking software may execute on a virtual machine manager VMM hypervisor or other component such as a network routing device or other device accessible by the first or second computing resources.

In an embodiment messages associated with the requested connection and addressed to the network address on the first network may be sent to the second computing resource via the communication mechanism. Furthermore messages associated with the previously established connections and addressed to the IP address on the first network may be sent from the second computing resource. In other embodiments messages associated with the requested connection and addressed to the external network address may be sent from the first computing resource.

Each of the processes methods and algorithms described in the preceding sections may be embodied in and fully or partially automated by code modules executed by one or more computers or computer processors. The code modules may be stored on any type of non transitory computer readable medium or computer storage device such as hard drives solid state memory optical disc and or the like. The processes and algorithms may be implemented partially or wholly in application specific circuitry. The results of the disclosed processes and process steps may be stored persistently or otherwise in any type of non transitory computer storage such as e.g. volatile or non volatile storage.

The various features and processes described above may be used independently of one another or may be combined in various ways. All possible combinations and subcombinations are intended to fall within the scope of this disclosure. In addition certain method or process blocks may be omitted in some implementations. The methods and processes described herein are also not limited to any particular sequence and the blocks or states relating thereto can be performed in other sequences that are appropriate. For example described blocks or states may be performed in an order other than that specifically disclosed or multiple blocks or states may be combined in a single block or state. The example blocks or states may be performed in serial in parallel or in some other manner. Blocks or states may be added to or removed from the disclosed example embodiments. The example systems and components described herein may be configured differently than described. For example elements may be added to removed from or rearranged compared to the disclosed example embodiments.

It will also be appreciated that various items are illustrated as being stored in memory or on storage while being used and that these items or portions of thereof may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing systems via inter computer communication. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other ways such as at least partially in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems modules and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without author input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

While certain example embodiments have been described these embodiments have been presented by way of example only and are not intended to limit the scope of the inventions disclosed herein. Thus nothing in the foregoing description is intended to imply that any particular feature characteristic step module or block is necessary or indispensable. Indeed the novel methods and systems described herein may be embodied in a variety of other forms furthermore various omissions substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the inventions disclosed herein. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of certain of the inventions disclosed herein.

