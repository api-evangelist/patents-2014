---

title: Symbol transition clocking clock and data recovery to suppress excess clock caused by symbol glitch during stable symbol period
abstract: A method and an apparatus are provided. The apparatus may includes a clock recovery circuit having a comparator that provides a comparison signal indicating whether an input signal matches a level-latched instance of the input signal, a first set-reset latch that provides a filtered version of the comparison signal, where the first set-reset latch is set by a first-occurring active transition of the comparison signal and is unaffected by further transitions of the comparison signal that occur during a predefined period of time, delay circuitry that receives the filtered version of the comparison signal and outputs a first pulse on a first clock signal, and a second set-reset latch configured to provide a second pulse on an output clock signal when the first pulse is present on the first clock signal and the comparison signal indicates that the level-latched instance of the input signal does not match the input signal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09490964&OS=09490964&RS=09490964
owner: QUALCOMM Incorporated
number: 09490964
owner_city: San Diego
owner_country: US
publication_date: 20141126
---
The present disclosure relates generally to communication systems and more particularly to clock and data recovery from a multi wire interface that is subject to transients affecting signaling state of one or more wires.

Manufacturers of mobile devices such as cellular phones may obtain components of the mobile devices from various sources including different manufacturers. For example an application processor in a cellular phone may be obtained from a first manufacturer while the display for the cellular phone may be obtained from a second manufacturer. The application processor and a display or other device may be interconnected using a standards based or proprietary physical interface. For example a display may provide an interface that conforms to the Display System Interface DSI standard specified by the Mobile Industry Processor Interface Alliance MIPI .

In one example a multi signal data transfer system may employ multi wire differential signaling such as three phase or N factorial N low voltage differential signaling LVDS transcoding e.g. the digital to digital data conversion of one encoding type to another may be performed to embed symbol clock information by causing a symbol transition at every symbol cycle instead of sending clock information in separate data lanes differential transmission paths . Embedding clock information by transcoding is an effective way to minimize skew between clock and data signals as well as to eliminate the necessity of a phase locked loop PLL to recover the clock information from the data signals.

In another example MIPI standards define a camera control interface CCI that uses a two wire bi directional half duplex serial interface configured as a bus connecting a master and one or more slaves. Conventional CCI is compatible with a protocol used in a variant of the Inter Integrated Circuit I2C bus and is capable of handling multiple slaves on the bus with a single master. The CCI bus may include Serial Clock SCL and Serial Data SDA lines. CCI devices and I2C devices can be deployed on the same bus such that two or more CCI devices may communicate using CCI protocols while any communication involving an I2C bus uses I2C protocols. Later versions of CCI can provide higher throughputs using modified protocols to support faster signaling rates. A CCI extension CCIe bus may be used to provide higher data rates for devices that are compatible with CCIe bus operations. Such devices may be referred to as CCIe devices and the CCIe devices can attain higher data rates when communicating with each other by encoding data as symbols transmitted on both the SCL line and the SDA line of a conventional CCI bus. CCIe devices and I2C devices may coexist on the same CCIe bus such that in a first time interval data may be transmitted using CCIe encoding and other data may be transmitted in a different time interval according to I2C signaling conventions.

The capabilities and functionality of mobile devices continues to grow and there is a resultant demand for ever increasing bandwidth between components within mobile devices and the like. Accordingly there exists an ongoing need for optimized communications in general and improved reliability of data transfer on multi signal wire communication links.

In an aspect of the disclosure a method a computer program product and an apparatus are provided that can filter or suppress the effects of glitches in signals received from a multi wire interface.

In various aspects an apparatus includes a clock recovery circuit. The clock recovery circuit may include a comparator configured to provide a comparison signal indicating whether an input signal matches a level latched instance of the input signal a first set reset latch that provides a filtered version of the comparison signal delay circuitry that receives the filtered version of the comparison signal and outputs a first pulse on a first clock signal and a second set reset latch configured to provide a second pulse on an output clock signal when the first pulse is present on the first clock signal and the comparison signal indicates that the level latched instance of the input signal does not match the input signal. The first set reset latch may be set by a first occurring active transition of the comparison signal and may be unaffected by further transitions of the comparison signal that occur during a predefined period of time. The second set reset latch may be reset when no pulse is present on the first clock signal. The second set reset latch may be configured to ignore pulses on the first clock signal that occur when the comparison signal indicates that the level latched instance of the input signal matches the input signal. The input signal may represent signaling state on a plurality of signal wires. A level latch receives the input signal and outputs the level latched instance of the input signal. The level latch may be triggered by the first pulse or a derivative of the first pulse.

In one aspect data may be encoded in a sequence of symbols transmitted on the plurality of signal wires. Clock information may be embedded in transitions between symbols in the sequence of symbols. The plurality of signal wires may include at least three signal wires. Each combination of two wires in the at least three signal wires may be driven by a differential driver that is different from differential drivers that drive other available combinations of two wires in the at least three signal wires.

In one aspect a third set reset latch is configured to produce an extendable pulse on a third clock signal. The extendable pulse may be derived from the first pulse and may be extended when the first pulse occurs while the comparison signal indicates that the input signal does not match the level latched instance of the input signal. The extendable pulse may be extended until the comparison signal indicates that the input signal matches the level latched instance of the input signal. A level latch may receive the input signal and output the level latched instance of the input signal. The level latch is triggered by the extendable pulse.

In one aspect the delay circuitry includes one shot logic that generates a third pulse in response to a transition on the filtered version of the comparison signal and a delay element that delays the third pulse to obtain the first pulse.

In various aspects a method for recovering a clock signal includes generating a comparison signal indicating whether an input signal matches a level latched instance of the input signal filtering the comparison signal to obtain a filtered version of the comparison signal providing a first pulse on a first clock signal in response to a transition on the filtered version of the comparison signal providing a second pulse on an output clock signal when the first pulse is present on the first clock signal and the comparison signal indicates that the level latched instance of the input signal does not match the input signal and ignoring the first pulse when the comparison signal indicates that the level latched instance of the input signal matches the input signal. The input signal may represent signaling state on a plurality of signal wires. Filtering the comparison signal may include setting a first set reset latch using a first occurring active transition of the comparison signal and ignoring further transitions of the comparison signal that occur during a predefined period of time. The first pulse or a derivative thereof may reset the first set reset latch.

In one aspect data words may be encoded in sequences of symbols transmitted on the plurality of signal wires. Clock information may be embedded in transitions between symbols in the sequences of symbols. The plurality of signal wires may include at least three signal wires. Each combination of two wires in the at least three signal wires may be driven by a differential driver that is different from differential drivers that drive other available combinations of two wires in the at least three signal wires.

In one aspect providing a second pulse on an output clock signal includes setting a second set reset latch when the first pulse is present on the first clock signal and the comparison signal indicates that the level latched instance of the input signal does not match the input signal and resetting the second set reset latch when no pulse is present on the first clock signal.

In one aspect an extended instance of the first pulse may be generated when the first pulse occurs while the comparison signal indicates that the input signal does not match the level latched instance of the input signal and the level latched instance of the input signal may be updated to match the input signal by capturing the input signal using the extended instance of the first pulse. The extended instance of the first pulse may be extended until the comparison signal indicates that the input signal matches the level latched instance of the input signal. Updating the level latched instance of the input signal may include using the extended instance of the first pulse to trigger a level latch that receives the input signal and outputs the level latched instance of the input signal.

In one aspect the first pulse may be used to trigger a level latch that receives the input signal and outputs the level latched instance of the input signal. The first pulse may be provided on the first clock signal by generating a third pulse having a predetermined duration in response to a transition on the filtered version of the comparison signal and delaying the third pulse to obtain the first pulse.

The detailed description set forth below in connection with the appended drawings is intended as a description of various configurations and is not intended to represent the only configurations in which the concepts described herein may be practiced. The detailed description includes specific details for the purpose of providing a thorough understanding of various concepts. However it will be apparent to those skilled in the art that these concepts may be practiced without these specific details. In some instances well known structures and components are shown in block diagram form in order to avoid obscuring such concepts.

Several aspects of telecommunication systems will now be presented with reference to various apparatus and methods. These apparatus and methods will be described in the following detailed description and illustrated in the accompanying drawings by various blocks modules components circuits steps processes algorithms etc. collectively referred to as elements . These elements may be implemented using electronic hardware computer software or any combination thereof. Whether such elements are implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system.

By way of example an element or any portion of an element or any combination of elements may be implemented with a processing system that includes one or more processors. Examples of processors include microprocessors microcontrollers digital signal processors DSPs field programmable gate arrays FPGAs programmable logic devices PLDs state machines gated logic discrete hardware circuits and other suitable hardware configured to perform the various functionality described throughout this disclosure. One or more processors in the processing system may execute software. Software shall be construed broadly to mean instructions instruction sets code code segments program code programs subprograms software modules applications software applications software packages routines subroutines objects executables threads of execution procedures functions etc. whether referred to as software firmware middleware microcode hardware description language or otherwise.

Accordingly in one or more exemplary embodiments the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or encoded as one or more instructions or code on a computer readable medium. Computer readable media includes computer storage media. Storage media may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can include RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD and floppy disk where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer readable media.

The communication link may provide multiple channels and . One or more channels may be bidirectional and may operate in half duplex and or full duplex modes. One or more channels and may be unidirectional. The communication link may be asymmetrical providing higher bandwidth in one direction. In one example described herein a first communications channel may be referred to as a forward link while a second communications channel may be referred to as a reverse link . The first IC device may be designated as a host system or transmitter while the second IC device may be designated as a client system or receiver even if both IC devices and are configured to transmit and receive on the communications link . In one example the forward link may operate at a higher data rate when communicating data from a first IC device to a second IC device while the reverse link may operate at a lower data rate when communicating data from the second IC device to the first IC device .

The IC devices and may each have a processor or other processing and or computing circuit or device . In one example the first IC device may perform core functions of the apparatus including maintaining wireless communications through a wireless transceiver and an antenna while the second IC device may support a user interface that manages or operates a display controller . In the example the second IC device may be adapted to control operations of a camera or video input device using a camera controller . Other features supported by one or more of the IC devices and may include a keyboard a voice recognition component and other input or output devices. The display controller may include circuits and software drivers that support displays such as a liquid crystal display LCD panel touch screen display indicators and so on. The storage media and may include transitory and or non transitory storage devices adapted to maintain instructions and data used by respective processors and and or other components of the IC devices and . Communication between each processor and its corresponding storage media and and other modules and circuits may be facilitated by one or more bus and respectively.

The reverse link may be operated in the same manner as the forward link and the forward link and reverse link may be capable of transmitting at comparable speeds or at different speeds where speed may be expressed as data transfer rate and or clocking rates. The forward and reverse data rates may be substantially the same or differ by orders of magnitude depending on the application. In some applications a single bidirectional link may support communications between the first IC device and the second IC device . The forward link and or reverse link may be configurable to operate in a bidirectional mode when for example the forward and reverse links and share the same physical connections and operate in a half duplex manner. In one example the communication link may be operated to communicate control command and other information between the first IC device and the second IC device in accordance with an industry or other standard.

In one example forward and reverse links and may be configured or adapted to support a wide video graphics array WVGA 80 frames per second LCD driver IC without a frame buffer delivering pixel data at 810 Mbps for display refresh. In another example forward and reverse links and may be configured or adapted to enable communications between with dynamic random access memory DRAM such as double data rate synchronous dynamic random access memory SDRAM . Encoding devices and or can encode multiple bits per clock transition and multiple sets of wires can be used to transmit and receive data from the SDRAM control signals address signals and so on.

The forward and reverse links and may comply with or be compatible with application specific industry standards. In one example the MIPI standard defines physical layer interfaces between an application processor IC device and an IC device that supports the camera or display in a mobile device. The MIPI standard includes specifications that govern the operational characteristics of products that comply with MIPI specifications for mobile devices. In some instances the MIPI standard may define interfaces that employ complimentary metal oxide semiconductor CMOS parallel busses.

The communication link of may be implemented as a wired bus that includes a plurality of signal wires denoted as N wires . The N wires may be configured to carry data encoded in symbols where clock information is embedded in a sequence of the symbols transmitted over the plurality of wires. Examples of encoding techniques used with N wire interfaces include N factorial N encoding and N phase encoding.

A termination impedance typically resistive couples each of the N wires to a common center point in a termination network . It will be appreciated that the signaling state of the N wires reflects a combination of the currents in the termination network attributed to the differential drivers coupled to each wire. It will be further appreciated that the center point is a null point whereby the currents in the termination network cancel each other at the center point . In one example each of the 4 wires in a 4 interface is connected to a terminal of a termination network . Each terminal is coupled by a termination resistor to a center point of the termination network .

An N encoding scheme need not use a separate clock channel and or non return to zero decoding because at least one of the Csignals in the link transitions between consecutive symbols. Effectively the transcoder ensures that a transition occurs between each pair of symbols transmitted on the N wires by producing a sequence of symbols in which signaling states of the N wires changes between consecutively transmitted symbols. In the example depicted in four wires are provided N 4 and the 4 wires can carry C 6 differential signals. The transcoder may employ a mapping scheme to generate raw symbols for transmission on the N wires . The transcoder may map data bits to a set of transition numbers. The transition numbers may be used to select raw symbols for transmission based on the value of the immediately preceding symbol such that the selected raw symbol is different from the preceding raw symbol. The raw symbols may be serialized by the serializers to obtain a sequence of symbols for transmission over the N wires . In one example a transition number may be used to lookup a data value corresponding to the second of the consecutive raw symbols with reference to the first of the consecutive raw symbols. At the receiver a transcoder may employ a mapping to determine a transition number that characterizes a difference between a pair of consecutive raw symbols using a lookup table for example. The transcoders operate on the basis that every consecutive pair of raw symbols includes two different symbols.

The transcoder at the transmitter may select between N 1 available signaling states at every symbol transition. In one example a 4 system provides 4 1 23 signaling states for the next symbol to be transmitted at each symbol transition. The bit rate may be calculated as log available states per transmit clock cycle.

According to certain aspects disclosed herein dual data rate DDR signaling may be employed to increase the interface bandwidth by transmitting two symbols in each period of the transmit clock . Symbol transitions occur at both the rising edge and falling edge of the transmit clock in a system using double data rate DDR clocking. The total available states in the transmit clock cycle is C 1 2 23 2 529 and the number of data bits that can transmitted per symbol may be calculated as log 529 9.047 bits.

A receiving device receives the sequence of symbols using a set of line receivers where each receiver in the set of line receivers determines differences in signaling states on one pair of the N wires . Accordingly Creceivers are used where N represents the number of wires. The Creceivers produce a corresponding number of raw symbols as outputs. In the 4 wire example the signals received on the 4 wires are processed by 6 receivers C 6 to produce a raw symbol signal that is provided to a clock and data recovery CDR circuit and deserializers . The raw symbol signal is representative of the signaling state of the N wires and the CDR circuit may process the raw symbol signal to generate a receive clock signal that can be used by the deserializer .

The receive clock signal may be a DDR clock signal that can be used by external circuitry to process received data provided by the transcoder . The transcoder decodes a block of received symbols from the deserializer by comparing each symbol to its immediate predecessor. The transcoder produces output data corresponding to the data provided to the transmitter .

As shown in isolation in the schematic drawings and each receiving circuit receives a voltage input from two terminals and or where each voltage input reflects a voltage level that may be measured with respect to the center point of the termination network. Each voltage level can be 2IR Volts or 0 Volts for example. The receiving circuits may generate a logic 1 output state or a logic 0 output state based on the polarity of the voltage differences across a corresponding pair of the terminals and or

The signaling states measureable at the 3 terminals and are illustrated in the graph . The output of a receiver or represents the polarity difference between the two terminals and or coupled to the receiver or .

In operation the 3 interface can use a total of six 6 states 001 z 010 y 100 x 110 z 101 y 011 x which are transferred over the 3 wires. Accordingly log 6 2.58 bits of information can be encoded per cycle.

Certain other multi wire interfaces use N phase encoding to transmit data over a plurality of wires. is a diagram illustrating an example of a three wire N phase polarity encoding transmitter configured for N 3. The principles and techniques disclosed for three wire three phase encoders can be applied to other N phase polarity encoders that support other configurations and numbers of wires.

When three phase polarity encoding is used connectors such as signal wires and on a three wire bus may be undriven driven positive or driven negative. An undriven signal wire or may be in a high impedance state. An undriven signal wire or may be at least partially pulled or driven towards a voltage level that lies substantially halfway between the positive and negative voltage levels provided on driven signal wires. An undriven signal wire or may have substantially no current flowing through it. In the example illustrated in a set of drivers may control the state of each signal wire and for each symbol transmission interval such that each signal wire and may be in one of three states denoted as 1 1 and 0 for a transmitted symbol. In one example drivers may include unit level current mode drivers. In another example drivers may drive opposite polarity voltages on two signals and while the third signal is at high impedance and or pulled to ground. For each symbol transmission interval at least one signal is in the undriven 0 state while the number of signals driven positive 1 state is equal to the number of signals driven negative 1 state such that the sum of current flowing to the receiver is always zero. For each pair of consecutive symbol transmission intervals at least one signal wire or has a different state in the two symbol transmission intervals.

In the example depicted in 16 bit data is input to a mapper which maps the input data to 7 symbols for transmitting sequentially over the signal wires and . The 7 symbols may be serialized using parallel to serial converters for example. A three wire three phase encoder receives 7 symbols produced by the mapper one symbol at a time and computes the state of each signal wire and for each symbol interval. The encoder selects the states of the signal wires and based on the input symbol and the previous states of signal wires and

The use of N phase encoding permits a number of bits to be encoded in a plurality of symbols where the bits per symbol is not an integer. In the simple example of a three wire system there are 3 available combinations of 2 wires that may be driven simultaneously and 2 possible combinations of polarity on the pair of simultaneously driven wires yielding 6 possible states. Since each transition occurs from a current state 5 of the 6 states are available at every transition. The state of at least one wire is required to change at each transition. With 5 states log 5 2.32 bits may be encoded per symbol. Accordingly a mapper may accept a 16 bit word and convert it to 7 symbols because 7 symbols carrying 2.32 bits per symbol can encode 16.24 bits. In other words a combination of seven symbols that encodes five states has 57 78 125 permutations. Accordingly the 7 symbols may be used to encode the 216 65 536 permutations of 16 bits.

At any phase state in the illustrated three wire example exactly two of the conductors carry a signal which is effectively a differential signal for that phase state while the third conductor or is undriven. The phase state for each conductor may be determined by voltage difference between the conductor or and at least one other conductor and or or by the direction of current flow or lack of current flow in the conductor or . As shown in the state transition diagram three phase states S Sand S are defined. A signal may flow clockwise from phase state Sto phase state S phase state Sto phase state S and or phase state Sto phase state Sand the signal may flow counter clockwise from phase state Sto phase state S phase state Sto phase state S and or phase state Sto phase state S. For other values of N transitions between the N states may optionally be defined according to a corresponding state diagram to obtain circular rotation between state transitions.

In the example of a three wire three phase communications link clockwise rotations Sto S Sto S and or Sto S at a state transition may be used to encode a logic 1 while counter clockwise rotations Sto S Sto S and or Sto S at the state transition may be used to encode a logic 0. Accordingly a bit may be encoded at each transition by controlling whether the signal is rotating clockwise or counter clockwise. For example a logic 1 may be encoded when the three wires transition from phase state Sto phase state Sand a logic 0 may be encoded when the three wires transition from phase state St to phase state S. In the simple three wire example depicted direction of rotation may be easily determined based on which of the three wires is undriven before and after the transition.

Information may also be encoded in the polarity of the driven conductors or direction of current flow between two conductors . Signals and illustrate voltage levels applied to conductors respectively at each phase state in a three wire three phase link. At any time a first conductor is coupled to a positive voltage V for example a second conductor is coupled to a negative voltage V for example while the third conductor may be open circuited or otherwise undriven. As such one polarity encoding state may be determined by the current flow between the first and second conductors or the voltage polarities of the first and second conductors . In some embodiments two bits of data may be encoded at each phase transition. A decoder may determine the direction of signal phase rotation to obtain the first bit and the second bit may be determined based on the polarity difference between two of the signals and . The decoder having determined direction of rotation can determine the current phase state and the polarity of the voltage applied between the two active connectors and or or the direction of current flow through the two active conductors and or

In the example of the three wire three phase link described herein one bit of data may be encoded in the rotation or phase change in the three wire three phase link and an additional bit may be encoded in the polarity of two driven wires. Certain embodiments encode more than two bits in each transition of a three wire three phase encoding system by allowing transition to any of the possible states from a current state. Given three rotational phases and two polarities for each phase 6 states are defined such that 5 states are available from any current state. Accordingly there may be log 5 2.32 bits per symbol transition and the mapper may accept a 16 bit word and convert it to 7 symbols.

Table 1 illustrates the operation of the differential receivers . In the example the wire states may be encoded in the voltage amplitude on the three wires and such that the 1 state of a wire is represented as a voltage V volts the 1 state of the wire is represented as 0 volts and the undriven state is represented or approximated as V 2 volts. In particular Table 1 illustrates the outputs of the differential receivers for each wire state in the three wire three phase Polarity encoding system. A receiver decoder may be configured to output a code at the digital output of the receiver for each symbol decoded.

Certain N wire interfaces may be adapted to provide increased bandwidth through the use of DDR clocking whereby a new symbol is transmitted at both the rising and falling edges of a transmit clock. However conventional CDR circuits may be unable to respond to DDR clocking and or conventional CDR circuits may limit the maximum possible operation speed of an N wire or N phase interface.

In the example illustrated in an imaging device is configured to operate as a slave device on the CCIe bus . The imaging device may be adapted to provide a sensor control function that manages an image sensor for example. In addition the imaging device may include configuration registers or other storage control logic a transceiver and line drivers receivers and . The control logic may include a processing circuit such as a state machine sequencer signal processor or general purpose processor. The transceiver may include a receiver a transmitter and common circuits including timing logic and storage circuits and or devices. In one example the transmitter encodes and transmits data based on timing provided by a clock generation circuit .

In a CCIe system the receiver may include or cooperate with a clock and data recovery circuit CDR . The receiver may include line interface circuits that provide a stream of raw 2 bit symbols to the CDR . The CDR extracts a receive clock from the raw symbols and provides a stream of 2 bit symbols and the receive clock to other circuits and of the receiver . In some examples the CDR may produce multiple clocks . A decoder may use the receive clock to decode the stream of symbols into sequences of 12 ternary numbers . The ternary numbers may be encoded using two bits. A transcoder may then convert each sequence of 12 ternary numbers into 19 bit or 20 bit output data elements .

According to certain aspects disclosed herein the three available transitions are assigned a transition number T for each Ps symbol . The value of T can be represented by a ternary number. In one example the value of transition number is determined by assigning a symbol ordering circle for the encoding scheme. The symbol ordering circle allocates locations on the circle for the four possible symbols and a direction of rotation between the locations . In the depicted example the direction of rotation is clockwise. The transition number may represent the separation between the valid current symbols and the immediately preceding symbol . Separation may be defined as the number of steps along the direction of rotation on the symbol ordering circle required to reach the current symbol Cs from the previous symbol . The number of steps can be expressed as a single digit base 3 number. It will be appreciated that a three step difference between symbols can be represented as a 0. The table in summarizes an encoding scheme employing this approach.

At the transmitter the table may be used to lookup a current symbol to be transmitted given knowledge of the previously generated symbol and an input ternary number which is used as a transition number . At the receiver the table may be used as a lookup to determine a transition number that represents the transition between the previously received symbol and the currently received symbol . The transition number may be output as a ternary number.

The timing between consecutive sequences of symbols and may be dominated by time periods required to satisfy the protocols governing the operation of I2C devices. In one example a start condition precedes each transmission and has a duration t of at least 260 ns. The start condition may be defined by a symbol value of 1 such that the SDA signal is held low while the SCL signal remains high. The start condition may follow a minimum setup period t when both signals and are in a high state as defined by a symbol value of 3. The minimum setup period t may commence after a transmission or terminates and the minimum setup period t may be maintained for at least 260 ns. Accordingly the minimum elapsed time between the start of a first transmission and the start of a second transmission may be calculated as 12 260 260 12 50 ns 1120 ns.

An additional nominal 20 ns may be included for signal fall time tf between setup and start time. The signal fall time may be calculated as 

Accordingly 19 bits of data may be transmitted in a minimum of 1140 ns with a corresponding raw bit rate of approximately 16.7 Mbps and a useful bit rate of approximately 14.04 Mbps since 16 bits are transmitted in the 12 symbols.

The minimum required time between the transmissions and is significantly greater when I2C devices are accommodated on the bus than when only CCIe devices are involved in the communication. includes a timing diagram that illustrates the increased time of adding I2C setup and start periods in order to provide backwards compatibility for I2C devices.

When CCIe devices with push pull drivers are used 19 bits of data may be transmitted in 700 ns providing a raw bit rate of approximately 27.1 Mbps with a useful bit rate of approximately 22.86 Mbps since 16 data bits are transmitted in each 12 symbol word .

In operation the comparator compares the SI signal with the S signal and outputs a binary comparison signal NE signal . The set reset latch may receive the NE signal from the comparator and output a signal NEFLT signal which is a filtered version of the NE signal . The operation of the set reset latch can be configured to remove any transient instability in the NE signal where the transient instability is exhibited as spikes in the NE signal . The Reset input of the set reset latch may be prioritized such that the NEFLT signal is reset when the IRXCLK signal is high regardless of the state of the NE signal .

The one shot circuit receives the NEFLT signal and produces a fixed width pulse which may then be delayed by the delay element to produce an internal receive clock IRXCLK signal . In some instances the IRXCLK signal may be used by external circuitry to sample the data output of the CDR . In one example the IRXCLK signal or a derivative signal of the IRXCLK signal may be provided to decoder or deserializer circuits. In some instances other signals may be used to generate a clock signal for external circuitry. The level latches receive the SI signal and output the S signal where the level latches are triggered or otherwise controlled by the IRXCLK signal . In one example the output of the level latches may serve as the symbols output of the CDR circuit . In other examples additional circuitry may be included in the CDR circuit to delay latch and or otherwise condition the output of the level latches for use as the symbols output of the CDR circuit .

In operation the comparator compares the SI signal with the S signal which is output from the level latches . The comparator drives the NE signal to a first state e.g. logic low when the SI signal and the S signal are equal and to a second state e.g. logic high when the SI signal and the S signal are not equal. The NE signal is in the second state when the SI signal and the S signal are representative of different symbols. Thus the second state indicates that a transition is occurring.

As can be appreciated from the timing diagram the S signal is essentially a delayed and filtered version of SI signal in which transients or glitches have been removed because of the delay between the SI signal and the S signal . Multiple transitions in the SI signal may be reflected as spikes in the NE signal but these spikes are masked from the NEFLT signal through the operation of the set reset circuit. Moreover the IRXCLK SIGNAL is resistant to line skew and glitches in the symbol transitions based on the use of the delays provided in the feedback path to the level latch and set reset circuit whereby the IRXCLK signal controls the reset function of the set reset circuit .

At the commencement of a transition between a first symbol value S and a next symbol value S the SI signal begins to change state. The state of the SI signal may be different from St due to the possibility that intermediate or indeterminate states during the transition between S and S. These intermediate or indeterminate states may be caused for example by inter wire skew over under shoot cross talk etc.

The NE signal becomes high as soon as the comparator detects a difference in values between the SI signal and the S signal and the transition high of the NE signal asynchronously sets the set reset latch output driving the NEFLT signal high. The NEFLT signal is maintained in its high state until the set reset latch is reset by a high state of the IRXCLK signal . The IRXCLK signal is a delayed version of the NE1SHOT signal which is a limited pulse width version of the NEFLT signal . The IRXCLK signal may be delayed with respect to the NE1SHOT signal through the use of the analog delay circuit for example.

The intermediate or indeterminate states on SI may represent invalid data. These intermediate or indeterminate states may contain a short period of the previous symbol value S and may cause the NE signal to return low for short periods of time. Transitions of the SI signal may generate spikes on the NE signal . The spikes are effectively filtered out and do not appear in the NEFLT signal .

The high state of the NEFLT signal causes the IRXCLK signal to transition high after a delay period caused by the delay circuit . The high state of IRXCLK signal resets the set reset latch output causing the NEFLT signal to transition to a low state. The high state of the IRXCLK signal also enables the level latches and the SI signal value may be output on the S signal .

The comparator detects that the S signal for symbol S matches the symbol S value present on the SI signal and switches its output the NE signal low. The low state of the NEFLT signal causes the IRXCLK signal to go low after a delay period caused by the analog delay . This cycle repeats for each transition in the SI signal . At a time after the falling edge of the IRXCLK signal a new symbol S may be received and may cause the SI signal to switch its value in accordance with the next symbol S.

Certain aspects disclosed herein relate to a CDR circuit that is adapted to prevent extra receive clock pulses when symbol glitches occur during periods of time when the state of the signal wires are expected to be stable. Glitches may change the signaling state of the signal wires as detected by a receiver. Glitches may occur due to transients related to electromagnetic interference electrostatic discharges power rail noise and or through the effect of noise on transmitting and or receiving circuits.

The glitches in occur at a point in time when S is expected to be stable and after the level latches have captured S from the SI signal . The glitches occur when the output NE of the comparator is low indicating no difference between the captured S signal and the current signaling state SI of the signal wires . The NE signal transitions to a high level when it detects a difference between the S signal and the SI signal caused by the glitches which may affect the signal wires or receivers for example. The set reset latch receives the NE signal from the comparator and causes the NEFLT signal to transition high which results in the generation of an extra pulse in the IRXCK signal as described in relation to the generation of clock pulses in relation to .

The CDR circuit of may remain susceptible to glitches that occur on the signal wires or in the receiver circuits when a sampling edge occurs. provide timing diagrams that illustrate two scenarios that may cause the generation of additional clock pulses in the RXCLK signal .

In glitches occur on the SI signal near the closing edge of a clock pulse on the IRXCK signal where the IRXCK signal controls the sampling operation of the level latches . The glitches may cause the SI signal to return to a value representative of the immediately preceding symbol S from the current symbol S at or before the point of sampling i.e. closing the level latches such that the level latches capture the same symbol value for two symbol intervals . In operation an external circuit may sample the latched symbol value at a point in time defined by a delayed clock based on the RXCLK signal . The occurrence of two identical symbols in consecutive symbol intervals may be detected by decoding circuitry such as a symbols to transition number circuit. In addition to a valid pulse provided on the RXCLK signal the appearance of the of the Ssymbol value in the second symbol interval causes the comparator to drive the NE signal active after the glitch is removed from the SI signal and the SI signal returns to the Ssymbol value . The transition to an active level on the NE signal results in the generation of an extra pulse on the IRXCK signal and an extra pulse on the RXCLK signal .

In glitches occur on the SI signal near the closing edge of a clock pulse on the IRXCK signal that controls the level latches .

The glitches may cause the SI signal to adopt a value corresponding to a symbol S that is different from the value of the immediately preceding symbol S and from the current symbol St at the point of sampling i.e. when the level latches close such that the output of the level latches assumes the Ssymbol value based on the edge of the valid pulse on the RXCLK signal . The presence of the Ssymbol value on the S signal may cause the comparator to drive the NE signal active after the glitch is removed from the SI signal and the SI signal returns to the Ssymbol value . The transition to the active level on the NE signal may result in the generation of an extra pulse on the IRXCK signal and an extra pulse on the RXCLK signal . This type of error may not be detected by symbol to transition circuitry in the decoder because a symbol transition apparently occurs although the value detected is incorrect. The decoder may employ other error detection circuits and methods that can detect the error when the data word that contains the error symbol is fully decoded.

The extended pulse is obtained by preventing a falling edge from occurring while the NE signal is in a high state. The NE signal and the IRXCK signal are input to a NOR gate that drives the reset input of a set reset latch . The set reset latch is set when the IRXCK signal transitions high. The Reset input of the set reset latch may be prioritized such that the ERXCLK signal is reset when the output of the NOR gate is high regardless of the state of the IRXCLK signal . The output of the set reset latch controls the level latches and the pulse is extended until the NE signal is low the SI signal is sampled after any transient conditions on the SI signal have ended. For example transient conditions may be observed as an erroneous symbol value S that is different from the value of the S signal here the Ssymbol . This difference between the SI signal and the S signal causes the NE signal to be asserted high which prevents the ERXCLK signal from falling to the low state.

In the timing example depicted in a transient condition causes the SI signal to transition to an erroneous symbol value for a short period of time i.e. the Spulse . At a time the NE signal is asserted to indicate a difference between the state of the SI signal and the state of the S signal caused by the presence of the Spulse on the SI signal . Since the ERXCLK signal is high the output S of the level latches transitions to reflect the value of the Spulse . In the example the duration of the Spulse is short enough that overlap of the value of the Spulse on the SI signal and on the S signal is insufficient to cause the NE signal to return to a low state. Additionally in some instances the NOR gate may be configured to be less responsive to transitions to logic low on the NE signal . The NEFLT signal is not set by the high level on the NE signal because the ERXCLK signal remains at logic 1 and is provided to the prioritized Reset function of the S R latch thereby causing the NEFLT signal to remain low.

When both the SI signal and the S signal return to the Svalue the NE signal transitions back to a low logic level. After the low transition on the NE signal the S R latch is reset providing a falling edge on the ERXCLK signal that may be used to latch the current output value S signal of the level latches . In some instances the ERXCLK signal may be provided to external circuitry for use in sampling symbols from the S signal .

In the illustrated example the processing circuit may be implemented with a bus architecture represented generally by the bus . The bus may include any number of interconnecting buses and bridges depending on the specific application of the processing circuit and the overall design constraints. The bus links together various circuits including the one or more processors and storage . Storage may include memory devices and mass storage devices and may be referred to herein as computer readable media and or processor readable media. The bus may also link various other circuits such as timing sources timers peripherals voltage regulators and power management circuits. A bus interface may provide an interface between the bus and one or more transceivers . A transceiver may be provided for each networking technology supported by the processing circuit. In some instances multiple networking technologies may share some or all of the circuitry or processing modules found in a transceiver . Each transceiver provides a means for communicating with various other apparatus over a transmission medium. Depending upon the nature of the apparatus a user interface e.g. keypad display speaker microphone joystick may also be provided and may be communicatively coupled to the bus directly or through the bus interface .

A processor may be responsible for managing the bus and for general processing that may include the execution of software stored in a computer readable medium that may include the storage . In this respect the processing circuit including the processor may be used to implement any of the methods functions and techniques disclosed herein. The storage may be used for storing data that is manipulated by the processor when executing software and the software may be configured to implement any one of the methods disclosed herein.

One or more processors in the processing circuit may execute software. Software shall be construed broadly to mean instructions instruction sets code code segments program code programs subprograms software modules applications software applications software packages routines subroutines objects executables threads of execution procedures functions algorithms etc. whether referred to as software firmware middleware microcode hardware description language or otherwise. The software may reside in computer readable form in the storage or in an external computer readable medium. The external computer readable medium and or storage may include a non transitory computer readable medium. A non transitory computer readable medium includes by way of example a magnetic storage device e.g. hard disk floppy disk magnetic strip an optical disk e.g. a compact disc CD or a digital versatile disc DVD a smart card a flash memory device e.g. a flash drive a card a stick or a key drive a random access memory RAM a read only memory ROM a programmable ROM PROM an erasable PROM EPROM an electrically erasable PROM EEPROM a register a removable disk and any other suitable medium for storing software and or instructions that may be accessed and read by a computer. The computer readable medium and or storage may also include by way of example a carrier wave a transmission line and any other suitable medium for transmitting software and or instructions that may be accessed and read by a computer. Computer readable medium and or the storage may reside in the processing circuit in the processor external to the processing circuit or be distributed across multiple entities including the processing circuit . The computer readable medium and or storage may be embodied in a computer program product. By way of example a computer program product may include a computer readable medium in packaging materials. Those skilled in the art will recognize how best to implement the described functionality presented throughout this disclosure depending on the particular application and the overall design constraints imposed on the overall system.

The storage may maintain software maintained and or organized in loadable code segments modules applications programs etc. which may be referred to herein as software modules . Each of the software modules may include instructions and data that when installed or loaded on the processing circuit and executed by the one or more processors contribute to a run time image that controls the operation of the one or more processors . When executed certain instructions may cause the processing circuit to perform functions in accordance with certain methods algorithms and processes described herein.

Some of the software modules may be loaded during initialization of the processing circuit and these software modules may configure the processing circuit to enable performance of the various functions disclosed herein. For example some software modules may configure internal devices and or logic circuits of the processor and may manage access to external devices such as the transceiver the bus interface the user interface timers mathematical coprocessors and so on. The software modules may include a control program and or an operating system that interacts with interrupt handlers and device drivers and that controls access to various resources provided by the processing circuit . The resources may include memory processing time access to the transceiver the user interface and so on.

One or more processors of the processing circuit may be multifunctional whereby some of the software modules are loaded and configured to perform different functions or different instances of the same function. The one or more processors may additionally be adapted to manage background tasks initiated in response to inputs from the user interface the transceiver and device drivers for example. To support the performance of multiple functions the one or more processors may be configured to provide a multitasking environment whereby each of a plurality of functions is implemented as a set of tasks serviced by the one or more processors as needed or desired. In one example the multitasking environment may be implemented using a timesharing program that passes control of a processor between different tasks whereby each task returns control of the one or more processors to the timesharing program upon completion of any outstanding operations and or in response to an input such as an interrupt. When a task has control of the one or more processors the processing circuit is effectively specialized for the purposes addressed by the function associated with the controlling task. The timesharing program may include an operating system a main loop that transfers control on a round robin basis a function that allocates control of the one or more processors in accordance with a prioritization of the functions and or an interrupt driven main loop that responds to external events by providing control of the one or more processors to a handling function.

At block a comparison signal may be generated. The comparison signal may indicate whether an input signal matches a level latched instance of the input signal. The input signal may represent signaling state on a plurality of signal wires.

At block the comparison signal may be filtered to obtain a filtered version of the comparison signal.

In one example the filtering of block may include setting a first set reset latch using a first occurring active transition of the comparison signal and ignoring further transitions of the comparison signal that occur during a predefined period of time.

At block a first pulse may be provided on a first clock signal in response to a transition on the filtered version of the comparison signal. The first pulse may be provided on the first clock signal by generating a third pulse having a predetermined duration in response to a transition on the filtered version of the comparison signal and delaying the third pulse to obtain the first pulse. The first pulse may reset the first set reset latch. The first pulse may be used to trigger a level latch that receives the input signal and outputs the level latched instance of the input signal.

At block it may be determined whether a level latched instance S of the input signal does not match the input signal SI . If a match exists then the method proceeds at block and the method proceeds at block if the level latched instance of the input signal does not match the input signal.

At block a second pulse may be provided on an output clock signal when the first pulse is present on the first clock signal and the comparison signal indicates that the level latched instance of the input signal does not match the input signal.

At block the first pulse may be ignored when the comparison signal indicates that the level latched instance of the input signal matches the input signal.

In some examples data words may be encoded in sequences of symbols transmitted on the plurality of signal wires. Clock information may be embedded in transitions between symbols in the sequences of symbols.

In one example the plurality of signal wires includes at least three signal wires. Each combination of two wires in the at least three signal wires may be driven by a differential driver that is different from differential drivers that drive other available combinations of two wires in the at least three signal wires.

In some instances providing a second pulse on an output clock signal includes setting a second set reset latch when the first pulse is present on the first clock signal and the comparison signal indicates that the level latched instance of the input signal does not match the input signal and resetting the second set reset latch when no pulse is present on the first clock signal.

In some instances an extended instance of the first pulse may be generated when the first pulse occurs while the comparison signal indicates that the input signal does not match the level latched instance of the input signal. The level latched instance of the input signal may be updated to match the input signal by capturing the input signal using the extended instance of the first pulse. The extended instance of the first pulse may be extended until the comparison signal indicates that the input signal matches the level latched instance of the input signal. The level latched instance of the input signal may be updated by using the extended instance of the first pulse to trigger a level latch that receives the input signal and outputs the level latched instance of the input signal.

The processor is responsible for general processing including the execution of software stored on the computer readable storage medium . The software when executed by the processor causes the processing circuit to perform the various functions described supra for any particular apparatus. The computer readable storage medium may also be used for storing data that is manipulated by the processor when executing software including data decoded from symbols transmitted over the connectors . The processing circuit further includes at least one of the modules and . The modules and may be software modules running in the processor resident stored in the computer readable storage medium one or more hardware modules coupled to the processor or some combination thereof. The modules and or may include microcontroller instructions state machine configuration parameters or some combination thereof.

In one configuration the apparatus for wireless communication includes modules and or circuits for generating a comparison signal indicating whether an input signal matches a level latched instance of the input signal that represents signaling state on a plurality of signal wires modules and or circuits for providing a first pulse on a first clock signal in response to a transition on a filtered version of the comparison signal modules and or circuits for providing a second pulse on an output clock signal that filters extra clocks caused by glitches in the input signal. In some instances the apparatus includes modules and or circuits for extending the first pulse and for filtering extra clocks caused by glitches in the input signal that coincide with a sampling edge used to capture a current input symbol.

It is understood that the specific order or hierarchy of steps in the processes disclosed is an illustration of exemplary approaches. Based upon design preferences it is understood that the specific order or hierarchy of steps in the processes may be rearranged. Further some steps may be combined or omitted. The accompanying method claims present elements of the various steps in a sample order and are not meant to be limited to the specific order or hierarchy presented.

The previous description is provided to enable any person skilled in the art to practice the various aspects described herein. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects. Thus the claims are not intended to be limited to the aspects shown herein but is to be accorded the full scope consistent with the language claims wherein reference to an element in the singular is not intended to mean one and only one unless specifically so stated but rather one or more. Unless specifically stated otherwise the term some refers to one or more. All structural and functional equivalents to the elements of the various aspects described throughout this disclosure that are known or later come to be known to those of ordinary skill in the art are expressly incorporated herein by reference and are intended to be encompassed by the claims. Moreover nothing disclosed herein is intended to be dedicated to the public regardless of whether such disclosure is explicitly recited in the claims. No claim element is to be construed as a means plus function unless the element is expressly recited using the phrase means for. 

