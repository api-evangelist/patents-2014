---

title: Web form protection
abstract: A request for a web page is received and the requested web page is retrieved. The web page is modified to obfuscate a set of form attribute values into a corresponding set of obfuscated form attribute values. The modified web page is transmitted to the requesting device. The modified web page does not include the set of form attribute values in their original form. Form data for the set of obfuscated form attribute values is received from the requesting device. The set of obfuscated form attribute values is deobfuscated thereby revealing the original set of form attribute values. The form data for the set of original form attribute values is further processed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09401919&OS=09401919&RS=09401919
owner: CLOUDFLARE, INC.
number: 09401919
owner_city: San Francisco
owner_country: US
publication_date: 20141219
---
Embodiments of the invention relate to the field of network communications and more specifically to web form protection.

Many webpages include one or more web forms that commonly have fields to collect information from users to transmit to a server for processing. Common examples of web forms include payment forms registration forms shipping forms etc. These web forms are commonly the target of bots and other malicious software. For example a malicious webpage crawler may load a website and programmatically find form fields and using that information construct malicious requests directed to the server delivering the web page e.g. the origin server . In addition keyloggers hardware or software that captures keystrokes local network sniffing malware and or browser based malware may intercept sniff requests in an attempt to understand the Application Programming Interfaces APIs used by the website for directed attacks.

The HTML of the web form may include one or more HTML attributes sometimes referred herein as form attributes . An attribute typically takes the format of a name value pair such as name value where the name portion identifies the name of the attribute and the value portion sets the attribute to the provided value.

In the following description numerous specific details are set forth. However it is understood that embodiments of the invention may be practiced without these specific details. In other instances well known circuits structures and techniques have not been shown in detail in order not to obscure the understanding of this description. Those of ordinary skill in the art with the included descriptions will be able to implement appropriate functionality without undue experimentation.

References in the specification to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

In the following description and claims the terms coupled and connected along with their derivatives may be used. It should be understood that these terms are not intended as synonyms for each other. Coupled is used to indicate that two or more elements which may or may not be in direct physical or electrical contact with each other co operate or interact with each other. Connected is used to indicate the establishment of communication between two or more elements that are coupled with each other.

A method and apparatus for protecting web forms is described herein. In one embodiment a web page is modified by at least obfuscating one or more attributes of a web form e.g. the name part of the attribute and or the value part of the attribute and the modified web page is transmitted to a requesting device. Form data is received for the obfuscated one or more attributes from the requesting device. The obfuscated attributes are deobfuscated and the form data is processed.

In a specific embodiment a proxy server that is situated between the requesting device and an origin server obfuscates the attribute s of one or more web forms of the web page prior to sending the web page to the requesting device and deobfuscates the attribute s prior to sending the form data to the origin server. For example a proxy server receives a request for a web page from a client device. The proxy server retrieves the requested web page e.g. from cache available to the proxy server or by transmitting a request to the origin server of the web page and receiving the web page from the origin server . Upon determining that the web page includes a web form the proxy server modifies the web page by obfuscating one or more form attributes of the web form of the web page and transmits the modified web page to the requesting device. By way of a specific example the form attributes that are obfuscated may include the name and or value for any name attributes in the form element the name and or value for any id attributes in the form element and or the name and or value for any CSS or other styling class name attributes in the form element. Upon receiving form data from the requesting device for the one or more obfuscated attributes the proxy server deobfuscates the set of one or more obfuscated attributes and transmits the form data with the deobfuscated attributes to the origin server for further processing. For example the proxy server may receive the form data in an HTTP GET request or an HTTP POST request or through other ways.

The obfuscation of the attribute s may be done differently in different embodiments. In one embodiment known form attributes are replaced with pseudorandom or random values. The pseudorandom or random values may be generated in a number of ways. By way of example a pseudorandom number generator PRNG a cryptographically secure pseudorandom number generator CSPRNG or a hardware random number generator may be used. The random or pseudorandom value may be received from a random number server or may be generated on the device performing the obfuscation and deobfuscation.

In some embodiments a mapping is stored between the original attributes prior to obfuscation and the obfuscated attributes. This mapping is accessed when deobfuscating the obfuscated form attributes. For example the proxy server may store a hash map that associates the original attribute prior to the obfuscation with the obfuscated attribute. When form data is received for an obfuscated attribute the proxy server may use the hash map to look up the corresponding real attribute.

In other embodiments the one or more obfuscated attributes are generated in a manner such that the original attributes can be determined without storing a mapping on the device performing the deobfuscation. For example in some embodiments the proxy server generates a symmetric key based on a set of one or more values of a set of one or more characteristics respectively of the requesting client network application modifies the web page by obfuscating one or more attributes of the web form by encrypting each of those attribute s with the symmetric key and transmits the modified web page to the requesting client network application. The proxy server may also prepend or append a magic value prior to encrypting each value to be obfuscated. Upon receiving form data from the requesting client device for one or more obfuscated attributes the proxy server generates a symmetric key based on the set of values of the set of characteristics of the requesting client network application deobfuscates the attributes by decrypting each obfuscated attribute using the symmetric key and checking the magic value for confirmation if used and transmits the form data with the deobfuscated attributes to the origin server for further processing. By way of example the set of characteristics may include the IP address of the requesting client network application. As another example the set of characteristics may be used to generate a fingerprint of the requesting client network application e.g. generated by the proxy server that is generated based on one or more of the following whether the client network application loads images whether the client network application executes JavaScript the type of client network application e.g. browser name and version the operating system running the client network application the fonts installed on the client network application the languages supported by the client network application whether the client network application supports plugins whether the client network application stores cookies whether the client network application responds from the same IP address for various protocol requests the IP address of the client network application etc.

In another embodiment the one or more obfuscated values are generated in manner such that the original attribute values can be determined without storing the mapping between the original values and the obfuscated values on the proxy server and is based at least on a time period. For example in some embodiments to obfuscate the attribute values the proxy server generates a symmetric key based on the set of values of the set of characteristics of the requesting client network application and the current time rounded to a given unit e.g. day hour etc. modifies the web page by obfuscating one or more attribute values of the web form by encrypting each of those attribute value s with the symmetric key and transmits the modified web page to the requesting client network application. The proxy server may also prepend or append a magic value prior to encrypting each value to be obfuscated. Upon receiving form data from the requesting client device for one or more obfuscated attribute values the proxy server generates a symmetric key based on the set of values of the set of characteristics of the requesting client network application and the current time period and attempts to deobfuscate the attribute value s by decrypting each obfuscated attribute value using the symmetric key and checking the magic value for confirmation if used . If decrypting fails which potentially could happen if the key used for encryption was generated in a different time period the proxy server generates another symmetric key based on the set of values of the set of characteristics of the requesting client network application and the most immediately previous time period and attempts to decrypt the attribute value s using that key. This procedure may be done a threshold number of times in an attempt to decrypt the attribute value s . If decryption is successful the proxy server transmits the form data with the deobfuscated attribute values to the origin server for further processing. To determine whether the decryption was successful a Keyed Hashing Message Authentication Code HMAC may be used or an authenticated encryption mode such as Advanced Encryption Standard Galois Counter Mode AES GCM may be used.

Some web pages or web applications include references or lookups to the form attribute values. By way of example some web pages or web applications construct requests from form elements dynamically using client side scripting libraries such as jQuery. This client side scripting code can use a DOM selector to extract the form attribute values when submitting the form data. In one embodiment for a web page that includes a reference or lookup to the form attribute values the proxy server modifies the web page by inserting a client side script that overrides the original references or lookups e.g. overrides the client side scripting code that extracts the form attribute values with a lookup structure such as a lookup table. For each attribute value that is obfuscated the lookup structure maps the original attribute value with the obfuscated attribute value such that the lookup or reference performed by the code e.g. the client side script results in the obfuscated attribute value being returned. For any attribute value that is not obfuscated the lookup structure maps the original attribute value with itself.

In one embodiment the web page is modified to include the mapping between the original attribute value s prior to obfuscation and the obfuscated attribute value s . This mapping may be encrypted by a key that is known only to the device performing the obfuscation and deobfuscation. The web page may further be modified to include code e.g. a client side script that is configured to transmit the mapping upon the form submission.

In some embodiments the one or more obfuscated attribute values are generated in a manner such that the original attribute value s can be determined without storing a mapping on the proxy server performing the deobfuscation such as by encrypting the attribute values with a key known only to the device performing the obfuscation and deobfuscation. A random value may be prepended or appended to each value prior to encryption to provide for randomness. Upon receiving form data from the requesting client device for one or more obfuscated attribute values the proxy server attempts to deobfuscate the attribute value s by decrypting each attribute value using the key and removing the random value if used. If decrypting fails the proxy server would not process the received form data. If decryption succeeds the proxy server transmits the form data with the deobfuscated attribute values to the origin server for further processing. To determine whether the decryption was successful a Keyed Hashing Message Authentication Code HMAC may be used or an authenticated encryption mode such as Advanced Encryption Standard Galois Counter Mode AES GCM may be used. For example a MAC may be generated in conjunction with encrypting the attribute value and stored in a predefined portion of the obfuscated attribute value. When decrypting a MAC is generated and compared with the MAC stored in the predefined portion of the obfuscated attribute value to determine if they are the same which is an indication that decryption was successful.

In some other embodiments the mapping between the original attribute value s prior to obfuscation and the obfuscated attribute value s is encrypted with a key and included in a cookie set by the proxy server and transmitted to the requesting client device. The key may be generated based on a set of one or more values of a set of one or more characteristics of the requesting client device or may be a key known only to the proxy server. The requesting client device transmits the cookie when submitting the form data. Upon receiving form data from the requesting client device for one or more obfuscated attribute values the proxy server reads the mapping from the cookie and decrypts the mapping using the key which it may need to generate if a key based on the set of characteristics of the requesting client device is used . This mapping is then used to look up the corresponding real attribute values thereby deobfuscating the attribute values. The proxy server may send the form data with the deobfuscated attribute values to the origin server for further processing.

While embodiments have been described with respect to a proxy server obfuscating and deobfuscating the form attribute values in other embodiments similar techniques may be used at an origin server or other network architecture. For example an origin server may obfuscate the form attribute value s prior to transmitting the web page to the requesting device and deobfuscate the form attribute value s when receiving form data.

The proxy server is a computing device that is situated between the requesting device and the origin server . The proxy server receives and processes certain traffic between the requesting device and the origin server . In one embodiment the proxy server is a reverse proxy server. Web traffic e.g. HTTP requests responses HTTPS requests responses SPDY requests responses etc. for domain s serviced by the origin server may be received and processed at the proxy server . As will be described in greater detail later herein the proxy server retrieves a requested web page either from the origin server or from cache that includes a web form with one or more form attributes obfuscates one or more form attributes prior to transmitting the web page to the requesting device receives form data for the obfuscated form attributes from the requesting device deobfuscates the form attributes and transmits the form data with the deobfuscated form attribute values to the origin server .

The origin server maintains web page s for one or more domains. Although illustrates the proxy server communicating with a single origin server in some embodiments the proxy server communicates and provides services for additional origin servers and different domains that may be owned by different entities. In one embodiment the proxy server and the services it provides is part of a cloud based proxy service that provides services for domain owners. By way of example the cloud based proxy service may provide a service to protect online form submission as described herein. The cloud based proxy service may also provide security services e.g. detecting and or mitigating denial of service attacks proactively stopping botnets cleaning viruses trojans and or worms etc. and or other performance services e.g. acting as a node in a content delivery network CDN and dynamically caching customer s files closer to visitors TCP stack optimizations etc. .

The proxy server receives a request from the network application of the requesting device for a web page that resides or is created at the origin server at operation . The request may be an HTTP GET request for example. The proxy server may receive the request for the web page in a number of different ways. In one embodiment the request is received at the proxy server as a result of a Domain Name System DNS request for the domain of the requested web page returning an IP address of the proxy server instead of the origin server . In such an embodiment the domain of the web page resolves to an IP address of the proxy server instead of an IP address of the origin server . In some embodiments multiple domains that may be owned by different domain owners may resolve to the proxy server e.g. resolve to the same IP address or a different IP address of the proxy server . In one embodiment the proxy server is one of multiple proxy servers that are geographically distributed and are anycasted to the same IP address or the same set of IP addresses. The proxy server may receive the request because it is the closest proxy server to the requesting device in terms of routing protocol metrics e.g. Border Gateway Protocol BGP metrics according to an Anycast implementation as determined by the network infrastructure e.g. the routers switches or other network equipment between the requesting device and the proxy server that is not illustrated in for simplicity purposes.

After receiving the request for the web page the proxy server retrieves the requested web page either from the origin server or from the cache if available and not expired. For example the proxy server determines whether the requested web page is available in the cache e.g. the web page is in the cache and is not expired . The proxy server retrieves the web page from the cache if it is available otherwise the proxy server transmits a request for the web page to the origin server . For example at operation A the web page is not available in cache the proxy server transmits a request for the web page to the origin server . The request in operation A is similar to the request in operation . Assuming that the origin server has access to the requested web page then at operation A the origin server transmits a response that includes the web page to the proxy server . At operation B the web page is available in cache the proxy server requests the web page from the cache and receives the requested web page from the cache in operation B. The retrieved web page includes one or more forms each of which includes one or more form attributes and corresponding form attribute values.

Referring back to the proxy server includes the web form protection module that is configured to obfuscate form attributes in web forms sent to requesting devices and deobfuscate form data corresponding to the obfuscated form attributes received from the requesting devices prior to transmission to the origin server . At operation the web form protection module of the proxy server modifies the web page including obfuscating one or more form attributes in the one or more web forms included in the requested web page. The name part of the form attribute s and or the value part of the form attribute s may be obfuscated. By way of a specific example the form attribute values that are obfuscated may include the value for any name attributes in the form element the value for any id attributes in the form element and or any value for any CSS or other styling class name attributes in the form element. It should be understood that these are specific examples and different less or more attribute values and or attribute names may be obfuscated in accordance with the invention described herein. By way of example with reference to the web form protection module of the proxy server may obfuscate the id attribute value the name attribute value the name attribute value the name attribute value and or the class attribute value . In one embodiment the publisher of the webpage configures which form attribute values are to be obfuscated. In some embodiments the web form protection module of the proxy server is configured with a default set of form attribute values for which it automatically obfuscates.

The obfuscation of the attribute value s may be done differently in different embodiments. In one embodiment the web form protection module replaces the form attribute component s name and or value to be obfuscated with random or pseudorandom value s . The pseudorandom or random values may be generated in a number of ways. By way of example a pseudorandom number generator PRNG a cryptographically secure pseudorandom number generator CSPRNG or a hardware random number generator may be used. The random or pseudorandom value may be received from a random number server or may be generated on the device performing the obfuscation and deobfuscation.

In one embodiment the proxy server may store an obfuscated values mapping between the original attributes prior to obfuscation and the obfuscated attributes that is accessed when deobfuscating the obfuscated attributes. For example the proxy server may store a hash map that associates the original attribute value prior to the obfuscation with the obfuscated value. When form data is received for an obfuscated value the proxy server may use the hash map to look up the corresponding real attribute value.

In another embodiment the web page is modified to include a mapping between the original attribute value s prior to obfuscation and the obfuscated attribute value s . This mapping may be encrypted by a key that is known only to the device performing the obfuscation and deobfuscation e.g. the proxy server . In such an embodiment the web page may further be modified to include code e.g. a client side script that is configured to transmit the mapping which may be encrypted upon form submission. Upon receiving form data for an obfuscated value and an encrypted mapping the device performing the obfuscation and deobfuscation e.g. the proxy server may decrypt the mapping and then use the mapping to look up the corresponding real attribute value.

In another embodiment the web form protection module obfuscates form attribute value s by encrypting those attribute value s with a symmetric key e.g. an Advanced Encryption Standard AES key a Rivest Cipher 4 RC4 key etc. derived from a set of one or more values of a set of one or more characteristics of the requesting client network application. By way of example the set of characteristics used when generating the symmetric key may include one or more of the following the IP address used by the requesting client network application when transmitting the request for the web page whether the client network application loads images whether the client network application executes JavaScript the type of client network application e.g. browser name and version the operating system running the client network application the fonts installed on the client network application the languages supported by the client network application whether the client network application supports plugins whether the client network application stores cookies whether the client network application responds from the same IP address for various protocol requests the IP address of the client network application etc. The web form protection module may also prepend or append a magic value prior to encrypting each value to be obfuscated that is used for confirmation when deobfuscating the values. Upon receiving form data from the requesting client network application for one or more obfuscated attribute values the web form protection module generates a symmetric key based on a set of values of the same set of characteristics of the requesting client network application and deobfuscates the attribute values by decrypting each obfuscated attribute value using the symmetric key and checking the magic value for confirmation if used . Instead of using a magic value for confirmation an authenticated encryption method may be used.

In another embodiment the web form protection module obfuscates the form attribute value s to be obfuscated by encrypting those attribute value s with a symmetric key e.g. an AES key an RC4 key etc. derived from a set of one or more values of a set of one or more respective characteristics of the requesting client network application and the current time rounded to a given unit e.g. day hour etc. . The web form protection module may also prepend or append a magic value prior to encrypting each value to be obfuscated that is used for confirmation when deobfuscating the values. Upon receiving form data from the requesting network application for one or more obfuscated attribute values the web form protection module generates a symmetric key based on the set of values of the set of characteristics of the requesting client network application and the current time period and attempts to deobfuscate the attribute value s by decrypting each obfuscated attribute value using the symmetric key and checking the magic value for confirmation if used . If decrypting fails which potentially could happen if the key used for encryption was generated in a different time period the web form protection module generates another symmetric key based on the set of values of the set of characteristics of the requesting client network application and the most immediately previous time period and attempts to decrypt the attribute value s using that key. This procedure may be done a threshold number of times in an attempt to decrypt the attribute value s .

In another embodiment the web form protection module obfuscates form attribute value s with a symmetric key e.g. an Advanced Encryption Standard AES key a Rivest Cipher 4 RC4 key etc. known only to the device performing the obfuscation and deobfuscation that is not derived from the characteristics of the requesting client. A random value may be prepended or appended to each value prior to encryption to provide for randomness. Upon receiving form data from the requesting client device for one or more obfuscated attribute values the device performing the deobfuscation attempts to deobfuscate the attribute value s by decrypting each attribute value using the key and removing the random value if used. If decryption fails the received form data is not processed. If decryption succeeds the form data is further processed e.g. the proxy server transmits the form data with the deobfuscated attribute values to the origin server for further processing . To determine whether the decryption was successful a Keyed Hashing Message Authentication Code HMAC may be used or an authenticated encryption mode such as Advanced Encryption Standard Galois Counter Mode AES GCM may be used.

In another embodiment a mapping between the original attribute value s prior to obfuscation and the obfuscated attribute value s is encrypted with a key and included in a cookie set by the device performing the obfuscation and deobfuscation and transmitted to the requesting client device. The key may be generated based on a set of one or more values of a set of one or more characteristics of the requesting client device or may be a key known only to the device performing the obfuscation and deobfuscation. The requesting client device transmits the cookie when submitting the form data. Upon receiving form data from the requesting client device for one or more obfuscated attribute values the device performing the deobfuscation reads the encrypted mapping from the cookie and decrypts the mapping using the key which it may need to generate if a key based on the set of characteristics of the requesting client device is used . This mapping is then used to look up the corresponding real attribute values thereby deobfuscating the attribute values and the form data is further processed.

In some embodiments the web form protection module determines whether the web page includes any references or lookups to the original attribute values that are obfuscated and if it does the web form protection module modifies the web page to override the references to the original attribute values and replace those references with references to the corresponding obfuscated attribute values. For example some web pages or web applications construct requests from form elements dynamically using client side scripting libraries such as jQuery that uses DOM selectors to extract the form attribute values when submitting the form data. If one of these form attribute values to be extracted by a DOM selector is obfuscated the original DOM selector code may not be able to extract the form attribute value e.g. it may be looking for a specific value that is no longer present after obfuscation . In one embodiment the web form protection module inserts a client side script into the page that when executed by the network application overrides any such DOM selector with a lookup table such that any lookup for an original attribute value that has been obfuscated will return the corresponding obfuscated value and any lookup for an original attribute value that has not been obfuscated will return the original attribute value.

After the web page has been modified at operation the proxy server transmits the modified web page that includes the obfuscated form attribute value s to the requesting device to be processed by the network application . In the embodiment where a mapping between the original attribute values and the obfuscated attribute values is set in a cookie where such mapping may be encrypted the proxy server also sets such a cookie and transmits the cookie to the requesting device.

The network application receives and processes the modified web page. Assuming that the web form s included in the web page are used e.g. a user fills the field s of the web form and submits the values at operation the network application of the requesting device transmits form data for the obfuscated form attribute value s that is received by the proxy server . The form data may be transmitted in an HTTP GET request or an HTTP POST request for example. The network application may also transmit form data for other form attribute value s that are not obfuscated which may also be received by the proxy server . In embodiments where a mapping between the original attribute value s and the obfuscated attribute value s was included in the modified web page or in a cookie the network application also transmits such mapping to the proxy server .

After receiving the form data for the obfuscated form attribute values the web form protection module deobfuscates the obfuscated form attribute values at operation to reveal the original form attribute values. The way of deobfuscating depends on the way the form attribute values were obfuscated.

For example if the form attribute values were obfuscated by replacing the original attribute values with random or pseudorandom values and the proxy server includes a mapping between the original attribute values and the obfuscated values e.g. the obfuscated values mapping the web form protection module accesses the mapping to determine the corresponding original attribute value for each respective one of the obfuscated form attribute values. Since the obfuscated values are random or pseudorandom values the web form protection module may cause each mapping to be removed after deobfuscation.

As another example if the form attribute values were obfuscated by replacing the original attribute values with random or pseudorandom values and a mapping between the original attribute values and the obfuscated values encrypted was stored in the modified web page and returned by the network application when submitting the form data the web form protection module decrypts the mapping and then accesses the mapping to determine the corresponding original attribute value for each respective one of the obfuscated form attribute values.

As another example if the form attribute values were obfuscated by replacing the original attribute values with random or pseudorandom values and a mapping between the original attribute values and the obfuscated values encrypted was stored in a cookie set and transmitted to the network application and the network application returns the cookie when submitting the form data the web form protection module decrypts the mapping from the cookie and then accesses the mapping to determine the corresponding original attribute value for each respective one of the obfuscated form attribute values.

As another example if the set of form attribute values were obfuscated by encrypting the values with a symmetric key derived from a set of one or more values of a set of one or more characteristics respectively of the network application the web form protection module again generates a symmetric key derived from a set of values for the same set of characteristics of the network application and uses that key to decrypt the encrypted values to reveal the original attribute values and may check a magic value for confirmation if used in the encryption.

As another example if the set of form attribute values were obfuscated by encrypting the values with a symmetric key derived from a set of one or more values of a set of one or more characteristics respectively of the network application and the current time rounded to a given unit e.g. day hour etc. the web form protection module again generates a symmetric key based on a set of values of the same set of characteristics of the network application and the current time period and attempts to deobfuscate the attribute value s by decrypting each obfuscated attribute value using the symmetric key and checking the magic value for confirmation if used . If decrypting fails which potentially could happen if the key used for encryption was generated in a different time period the web form protection module generates another symmetric key based on the values of the same set of characteristics of the requesting network application and the most immediately previous time period and attempts to decrypt the attribute value s using that key. This procedure may be done a threshold number of times in an attempt to decrypt the attribute value s .

As another example if the set of form attribute values were obfuscated by encrypted the values with a key known only to the proxy server the web form protection module uses that key when deobfuscating the set of attribute values and removing the random value if used.

Assuming that the obfuscated form attribute value s were successful deobfuscated at operation the proxy server transmits the form data for the deobfuscated form attribute value s which will be the original form attribute value s to the origin server for further processing. For example the origin server receives the form data and processes it according to the functionality of the web page and web form.

At operation the proxy server receives a request for a web page from the requesting device where the web page resides or is created by the origin server . As previously described herein the proxy server may receive the request as a result of a DNS request for the domain of the requested web page returning an IP address of the proxy server instead of the origin server .

Flow then moves to operation where the proxy server retrieves the requested web page. In some embodiments the proxy server maintains or operates a cache of resources such as the cache . In such embodiments the proxy server retrieves the requested web page from the cache if available and if not expired. If the requested web page is not in cache or is expired or if there is not a cache available to the proxy server the proxy server retrieves the requested web page from the origin server . For example the proxy server transmits a request for the requested web page to the origin server and receives a response from the origin server that includes the requested web page. Flow moves from operation to operation .

At operation the proxy server determines that the web page has a web form that includes one or more attribute values for obfuscation. For example the attribute values for obfuscation may include any name attribute values any id attribute values and or any class attribute values included in the form element s of the web page. In embodiments where the publisher of the web page configured which form attribute values are to be obfuscated the proxy server accesses the configuration to determine which form attribute values are to be obfuscated. Flow moves from operation to operation .

At operation the proxy server modifies the web page including obfuscating the determined one or more attribute values of the web form. As previously described there are a number of ways the proxy server may obfuscate attribute values of the web form such as replacing the original attribute values with random or pseudorandom values encrypting the original attribute values with a symmetric key derived from a set of characteristics of the requesting device encrypting the original attribute values with a symmetric key derived from a set of characteristics of the requesting device and the current time rounded to a given unit e.g. day hour etc. or encrypting the original attribute values with a key known only to the proxy server . In one embodiment the obfuscated attribute values do not change the functionality of the web page. In other words the modified web page that includes the obfuscated attribute values visually looks the same to the user as the unmodified web page and operates the same to the user as the unmodified web page.

Control moves from operation operation which is not performed in some embodiments where a mapping between the original attribute value prior to obfuscation and the obfuscated attribute value is stored. A mapping is stored in those embodiments where the original form attribute values cannot otherwise be determined. For example in embodiments where the form attribute value s are obfuscated by encrypting the attribute values with a key either derived from a set of characteristics of the requesting device or otherwise available to the device performing the deobfuscation a mapping may not be stored. In embodiments where the form attribute value s are replaced by random or pseudorandom values the mapping may be stored.

In one embodiment the obfuscation and deobfuscation module causes the mapping to be stored in the proxy server e.g. in the obfuscated values mapping . In another embodiment the web page may be modified to include the mapping and that mapping may be encrypted. For example the obfuscation and deobfuscation module may encrypt the mapping with a key that is not shared with the requesting client e.g. the key may be known only by the proxy server and modify the code of the web page to include the encrypted mapping. The web page may further be modified to include code e.g. a client side script that is configured to transmit the mapping which may be encrypted upon form submission. In another embodiment the mapping may be stored in a cookie set by the proxy server and transmitted to the requesting client device the mapping may be encrypted with a key . Flow moves from operation to operation where the obfuscation and deobfuscation module determines whether there is another predefined attribute to obfuscate. If there is then flow moves back to operation if there is not then flow moves to operation .

At operation the proxy server derives a symmetric key from the set of values of the set of characteristics. The proxy server may use any number of algorithms to derive the symmetric key. By way of example the proxy server may use an AES algorithm to derive an AES key from the set of values of the set of characteristics or use an RC4 algorithm to derive an RC4 key from the set of values of the set of characteristics. Flow then moves to operation where the proxy server encrypts the attribute value to be obfuscated using at least the symmetric key. The proxy server may also prepend or append a magic value to the attribute value to be obfuscate prior to encrypting. Flow then moves to operation .

With reference back to at operation which is optional in some embodiments the proxy server determines whether the web page includes any reference or lookup to the form attribute value s to be obfuscated. For example some web pages dynamically construct requests from form elements using client side scripting libraries that use DOM selectors to extract the form attribute values when submitting the form data. If one of these form attribute values to be extracted by a DOM selector or otherwise referenced by a different part of the web page is obfuscated the original extraction or reference code may not be able to extract or refer to the form attribute value e.g. it may be looking for a specific value that is no longer present after obfuscation . If the web page includes any reference or lookup to the form attribute value s to be obfuscated then flow moves to operation otherwise flow moves to operation .

At operation the proxy server further modifies the web page including changing the reference s or lookup s to the original attribute value s to instead refer to the obfuscated attribute value s . In one embodiment the proxy server inserts a client side script into the web page that when executed by the network application of the requesting device overrides any lookup or reference with a lookup table such that any lookup for an original form attribute value that has been obfuscated will return the corresponding obfuscated value and any lookup for an original attribute value that has not been obfuscated will return the original attribute value. Flow moves from operation to operation .

In another embodiment as an alternative to operation after determining that the web page includes a reference or lookup to an attribute value that is to be obfuscated instead of modifying the web page including changing the reference or lookup to the original attribute value s to instead refer to the obfuscated attribute value s as described in operation the proxy server does not obfuscate those form attribute value s that are referenced or used in a lookup by other parts of the web page.

At operation the proxy server transmits the modified web page that includes the obfuscated form attribute value s to the requesting device . For example the proxy server transmits an HTTP response message to the requesting device that includes the modified web page. The modified web page does not include the original form attribute value s that were obfuscated. The network application of the requesting device will typically process the modified web page including rendering the content of the web page e.g. displaying a form to the user for submission . Flow moves from operation to operation .

At operation the proxy server receives form data for the obfuscated attribute values from the network application of the requesting device . For example the form data may be received from a submission through an HTTP POST request an HTTP GET request or other way of transmitting the form data. Flow moves from operation to operation .

With reference back to at operation the proxy server deobfuscates the obfuscated attribute values. The method in which the proxy server deobfuscates the obfuscated attribute values depends on the method in which those attribute values were obfuscated.

Flow then moves to operation which is optional in some embodiments where the proxy server removes the mapping between the obfuscated attribute value and the original attribute value. This mapping may be removed for example if being stored on the proxy server . Flow then moves to operation . The operations and optionally are performed for each obfuscated attribute value for which form data is received from the requesting device .

Flow then moves to operation where the proxy server determines whether the decryption was successful. To determine whether the decryption was successful a Keyed Hashing Message Authentication Code HMAC may be used or an authenticated encryption mode such as Advanced Encryption Standard Galois Counter Mode AES GCM may be used. For example in one embodiment the proxy server generated a MAC in conjunction with encrypting the attribute value e.g. a MAC created on the original attribute value and stored it in a predefined portion of the obfuscated attribute value. The predefined portion containing the MAC value is removed by the proxy server prior to decrypting the attribute value. The proxy server generates a MAC over the decrypted attribute value and compares that MAC with the MAC value removed from the form data to determine whether the MACs are the same which is an indication that decryption was successful. If decryption is successful then flow moves to operation . If decryption is unsuccessful then flow moves to operation where the proxy server determines whether a threshold number of tries has been reached. If the threshold number of tries has been reached then flow moves to operation where alternative action is taken e.g. a message is sent to the requesting device that indicates that form data could not be read a message is sent to the requesting device that causes the requesting device to issue a new request for the web page that will start the process over etc. . If the threshold number of tries has not been reached then flow moves to operation where the proxy server derives a symmetric key from the set of values of the set of characteristics and the most immediately previous time period. For example if the time period is rounded by day the proxy server uses the previous day when deriving the symmetric key. Flow then moves back to operation .

With reference back to flow moves from operation to operation after the obfuscated attribute value s have been deobfuscated where the proxy server transmits the form data for the deobfuscated form attribute value s which will be the original form attribute value s to the origin server for further processing. For example the origin server receives the form data and processes it according to the functionality of the web page and web form.

While embodiments have been described with respect to a proxy server obfuscating and deobfuscating the form attribute values in other embodiments similar techniques may be used at the origin server or in a different network architecture. For example an origin server may obfuscate the form attribute value s prior to transmitting the web page to the requesting device and deobfuscate the form attribute value s when receiving form data.

While embodiments have been described with respect to obfuscating and deobfuscating form attribute values in other embodiments the name part of the form attribute may be obfuscated and deobfuscated in a similar manner either in addition to or in lieu of obfuscating and deobfuscating the value part of the form attribute . In such embodiments a client side script may be added to the web page that is configured to when executed by the client device deobfuscate at least the obfuscated name part of the form attribute in order to process that form value. For example the client side script may access a mapping e.g. stored on the web page between the obfuscated name part of the form attribute and the original name part of the form attribute value which may be encrypted to determine the original name part of the form attribute value. In other embodiments the web page is modified such that the client side script processes the form and transmits the form data for the obfuscated form attributes including those in which the name part of the form attribute is obfuscated upon submission.

The techniques shown in the figures can be implemented using code and data stored and executed on one or more electronic devices e.g. a requesting device a proxy server an origin server . Such electronic devices store and communicate internally and or with other electronic devices over a network code and data using computer readable media such as non transitory computer readable storage media e.g. magnetic disks optical disks random access memory read only memory flash memory devices phase change memory and transitory computer readable communication media e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals digital signals . In addition such electronic devices typically include a set of one or more processors coupled to one or more other components such as one or more storage devices non transitory machine readable storage media user input output devices e.g. a keyboard a touchscreen and or a display and network connections. The coupling of the set of processors and other components is typically through one or more busses and bridges also termed as bus controllers . Thus the storage device of a given electronic device typically stores code and or data for execution on the set of one or more processors of that electronic device. Of course one or more parts of an embodiment of the invention may be implemented using different combinations of software firmware and or hardware.

While the flow diagrams in the figures show a particular order of operations performed by certain embodiments of the invention it should be understood that such order is exemplary e.g. alternative embodiments may perform the operations in a different order combine certain operations overlap certain operations etc. .

While the invention has been described in terms of several embodiments those skilled in the art will recognize that the invention is not limited to the embodiments described can be practiced with modification and alteration within the spirit and scope of the appended claims. The description is thus to be regarded as illustrative instead of limiting.

