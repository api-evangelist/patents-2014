---

title: Systems and methods for smart request processing
abstract: This disclosure relates generally to compensating for the impact of fluctuations in network communications and, more particularly, to systems and methods for optimizing transmission of web content. In one embodiment, a web content transmission optimization method is disclosed that includes receiving a request to transmit web content. The method may also include identifying, based on the request, a response that includes one or more response objects corresponding to the web content. The method may further include restructuring, by one or more processors, the response based on one or more configuration parameters. The method also comprises scheduling the restructured response and transmitting the requested web content according to the scheduled restructured response.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09450824&OS=09450824&RS=09450824
owner: WIPRO LIMITED
number: 09450824
owner_city: Bangalore
owner_country: IN
publication_date: 20140328
---
This U.S. patent application claims priority under 35 U.S.C. 119 to India Patent Application No. 525 CHE 2014 filed on Feb. 4 2014. The aforementioned application is incorporated herein by reference in its entirety.

This disclosure relates generally to compensating for the impact of fluctuations in network communications and more particularly to systems and methods for optimizing transmission of web content.

Internet has become an essential requirement for operating organizations and businesses. Internet users consume a variety of services online including accessing websites and Universal Resource Locators URLs . A user may use a variety of devices including wired or wireless devices to access websites. Moreover the network connectivity may vary depending on whether the user access the Internet through an Local Area Network LAN a Wide Area Network WAN or Wireless connections such as a WiFi network or a cellular mobile network. The network connectivity sometimes may also depend on the particular service providers the dynamic conditions of the network such as e.g. traffic congestion and other factors that may affect the efficiency of the network such as e.g. weather physical location etc. . Moreover a user may request different contents which have different importance to the user. For example a user may request an online banking transaction and a bank statement. And understanding the status progress of completion of the online banking transaction may be more important to the user than obtaining the regular bank statement. As another example processing transactions requested by a high worth customer or involving a high value item for sale may be more important from the perspective of business than those low worth or low value transactions.

When a user requests access to websites and URLs webservers facilitate the interactions with the users by providing the requested content. A typical webserver provides limited and static choices for switching between a variety of responses based on the type of user devices and the network connectivity. For example a typical webserver provides responses in the sequence of receiving the requests. In providing the response the webserver may not have knowledge of the user s connectivity and any changing conditions of the available communication channel the importance of the content or the preferences of the user if any . For example the webserver may not be able to provide an optimized response due to various dynamic conditions including delays caused by the network systems within a data center delays caused by the network connectivity outside of the data center the volume of the requested content and the nature of content based on the user s request. Therefore due to these various dynamic conditions a typical webserver may not provide the response in a desired manner. The user s experience may thus be degraded.

In one embodiment a web content transmission optimization method is disclosed comprising receiving a request to transmit web content. The method may also include identifying based on the request a response that includes one or more response objects corresponding to the web content. The method may further include restructuring by one or more processors the response based on one or more configuration parameters. The method may also comprise scheduling the restructured response and transmitting the requested web content according to the scheduled restructured response.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Exemplary embodiments are described with reference to the accompanying drawings. In the figures the left most digit s of a reference number identifies the figure in which the reference number first appears. Wherever convenient the same reference numbers are used throughout the drawings to refer to the same or like parts. While examples and features of disclosed principles are described herein modifications adaptations and other implementations are possible without departing from the spirit and scope of the disclosed embodiments. It is intended that the following detailed description be considered as exemplary only with the true scope and spirit being indicated by the following claims.

Processor may be disposed in communication with one or more input output I O devices via I O interface . I O interface may employ communication protocols methods such as without limitation audio analog digital monoaural RCA stereo IEEE 1394 serial bus universal serial bus USB infrared PS 2 BNC coaxial component composite digital visual interface DVI high definition multimedia interface HDMI RF antennas S Video VGA IEEE 802.11 a b g n x Bluetooth cellular e.g. code division multiple access CDMA high speed packet access HSPA global system for mobile communications GSM long term evolution LTE WiMax or the like etc.

Using I O interface computer system may communicate with one or more I O devices. For example input device may be an antenna keyboard mouse joystick infrared remote control camera card reader fax machine dongle biometric reader microphone touch screen touchpad trackball sensor e.g. accelerometer light sensor GPS gyroscope proximity sensor or the like stylus scanner storage device transceiver video device source visors etc. Output device may be a printer fax machine video display e.g. cathode ray tube CRT liquid crystal display LCD light emitting diode LED plasma or the like audio speaker etc. In some embodiments a transceiver may be disposed in connection with the processor . The transceiver may facilitate various types of wireless transmission or reception. For example the transceiver may include an antenna operatively connected to a transceiver chip e.g. Texas Instruments WiLink WL1283 Broadcom BCM4750IUB8 Infineon Technologies X Gold 618 PMB9800 or the like providing IEEE 802.11a b g n Bluetooth FM global positioning system GPS 2G 3G HSDPA HSUPA communications etc.

In some embodiments processor may be disposed in communication with a communication network via a network interface . Network interface may communicate with communication network . Network interface may employ connection protocols including without limitation direct connect Ethernet e.g. twisted pair 10 100 1000 Base T transmission control protocol internet protocol TCP IP token ring IEEE 802.11a b g n x etc. Communication network may include without limitation a direct interconnection local area network LAN wide area network WAN wireless network e.g. using Wireless Application Protocol the Internet etc. Using network interface and communication network computer system may communicate with devices A C collectively user devices . These devices may include without limitation personal computer s server s fax machines printers scanners various mobile devices such as cellular telephones smartphones e.g. Apple iPhone Blackberry Android based phones etc. tablet computers eBook readers Amazon Kindle Nook etc. laptop computers notebooks gaming consoles Microsoft Xbox Nintendo DS Sony PlayStation etc. or the like. In some embodiments computer system may itself embody one or more of these devices.

In some embodiments processor may be disposed in communication with one or more memory devices e.g. RAM ROM etc. via a storage interface . The storage interface may connect to memory devices including without limitation memory drives removable disc drives etc. employing connection protocols such as serial advanced technology attachment SATA integrated drive electronics IDE IEEE 1394 universal serial bus USB fiber channel small computer systems interface SCSI etc. The memory drives may further include a drum magnetic disc drive magneto optical drive optical drive redundant array of independent discs RAID solid state memory devices solid state drives etc. Variations of memory devices may be used for implementing for example one or more modules such as record transaction module and configuration module as shown in .

The memory devices may store a collection of program or database components including without limitation an operating system user interface application web browser mail server mail client user application data e.g. any data variables or data records discussed in this disclosure etc. Operating system may facilitate resource management and operation of computer system . Examples of operating systems include without limitation Apple Macintosh OS X Unix Unix like system distributions e.g. Berkeley Software Distribution BSD FreeBSD NetBSD OpenBSD etc. Linux distributions e.g. Red Hat Ubuntu Kubuntu etc. IBM OS 2 Microsoft Windows XP Vista 7 8 etc. Apple iOS Google Android Blackberry OS or the like. User interface may facilitate display execution interaction manipulation or operation of program components through textual or graphical facilities. For example user interfaces may provide computer interaction interface elements on a display system operatively connected to computer system such as cursors icons check boxes menus scrollers windows widgets etc. Graphical user interfaces GUIs may be employed including without limitation Apple Macintosh operating systems Aqua IBM OS 2 Microsoft Windows e.g. Aero Metro etc. Unix X Windows web interface libraries e.g. ActiveX Java Javascript AJAX HTML Adobe Flash etc. or the like.

In some embodiments computer system may implement a web browser stored program component. The web browser may be a hypertext viewing application such as Microsoft Internet Explorer Google Chrome Mozilla Firefox Apple Safari etc. Secure web browsing may be provided using HTTPS secure hypertext transport protocol secure sockets layer SSL Transport Layer Security TLS etc. Web browsers may utilize facilities such as AJAX DHTML Adobe Flash JavaScript Java application programming interfaces APIs etc. In some embodiments computer system may implement a mail server stored program component. Mail server may be an Internet mail server such as Microsoft Exchange or the like. Mail server may utilize facilities such as ASP ActiveX ANSI C C Microsoft .NET CGI scripts Java JavaScript PERL PHP Python WebObjects etc. Mail server may utilize communication protocols such as internet message access protocol IMAP messaging application programming interface MAPI Microsoft Exchange post office protocol POP simple mail transfer protocol SMTP or the like. In some embodiments computer system may implement a mail client stored program component. Mail client may be a mail viewing application such as Apple Mail Microsoft Entourage Microsoft Outlook Mozilla Thunderbird etc.

In some embodiments computer system may store user application data such as the data variables records etc. e.g. record of transactions response objects response chunks as described in this disclosure. Such databases may be implemented as fault tolerant relational scalable secure databases such as Oracle or Sybase. Alternatively such databases may be implemented using standardized data structures such as an array hash linked list struct structured text file e.g. XML table or as object oriented databases e.g. using ObjectStore Poet Zope etc. . Such databases may be consolidated or distributed sometimes among the various computer systems discussed above in this disclosure. It is to be understood that the structure and operation of any computer or database component may be combined consolidated or distributed in any working combination.

The specification has described systems and methods for smart request processing. The illustrated components and steps are set out to explain the exemplary embodiments shown and it should be anticipated that ongoing technological development will change the manner in which particular functions are performed. These examples are presented herein for purposes of illustration and not limitation. Further the boundaries of the functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternative boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed. Alternatives including equivalents extensions variations deviations etc. of those described herein will be apparent to persons skilled in the relevant art s based on the teachings contained herein. Such alternatives fall within the scope and spirit of the disclosed embodiments. Also the words comprising having containing and including and other similar forms are intended to be equivalent in meaning and be open ended in that an item or items following any one of these words is not meant to be an exhaustive listing of such item or items or meant to be limited to only the listed item or items. It must also be noted that as used herein and in the appended claims the singular forms a an and the include plural references unless the context clearly dictates otherwise.

In transmitting webpage contents a typical server such as a content server or a web server may divide webpage contents into elements in a standard manner and transmit the elements as they are prepared and ready for transmission. For example in one scenario a typical content and or web server treats content elements and with the same priority and transmits them once they are ready e.g. effectively all content elements of webpage contents have the same priority and timestamp P t at which time the elements are required to be delivered . In another scenario for transmitting webpage contents the typical content and or web server divides webpage contents into elements in a standard manner and simply transmits the elements sequentially. For example a typical content and or web server transmits content elements and sequentially. In other words the typical content and or web server effectively sets the priorities of the content elements and schedules the delivery in a serial or linear manner e.g. the content elements of webpage contents have linear priorities and timestamps such as P t P t P t P t P t etc. .

Because the typical content and or web server either does not set any priority and or schedule the delivery or sets the priority and schedules the delivery in a serial or linear manner the typical content and or web server transmits webpages contents in the same manner regardless of the user s preferences business requirements or network conditions. Thus under many circumstances a typical content and or web server may not respond to user s request in a well structured way as desired by the user and or the business.

As described above server may be implemented by for example computer system . Server can communicate with one or more client devices e.g. client devices either directly or indirectly. For example server can communicate with client devices directly or via HTTP client interface . HTTP client interface can be a software program and or a hardware device.

With reference to in some embodiments communication module may receive an HTTP request from client device via HTTP client interface . An HTTP request may include a request for accessing one or more particular resources such as a webpage. Communication module may also obtain information associated with a referral URL using the request. A referral URL is a URL of the previous webpage that client device requested. For example when a user clicks on a link in a webpage the browser of client device can move to the specified link that the user clicked. When client device sends the request of the new webpage it may also send the URL of the previous webpage that contains the link of the new webpage. This URL of the previous webpage is sometimes referred to as a referral URL.

In some embodiments using this information associated with a referral URL communication module may determine if any of the previous requests correspond to the current request. If communication module determines that one or more previous requests correspond to the current request one or more response objects corresponding to the previous request may not be required for transmission because they may be no longer relevant to the browser of client device . Response objects may be a server s internal representations of a response and is further described below.

After communication module determines that one or more previous requests correspond to the current request communication module may mark the one or more response objects for cancellation of transmission. In some embodiments by marking the one or more response objects for cancellation communication module may not provide the part of the HTTP request e.g. one or more request objects that corresponds to the one or more previous requests to analysis module for further processing. For example communication module may process or otherwise transform an HTTP request to a plurality of request objects. If some of the request objects correspond to the one or more previous requests communication module may not provide those request objects to analysis module .

In some embodiments in responding to an HTTP request communication module may transmit one or more responses to client device directly or indirectly. The responses may be restructured responses. Communication module may schedule the transmission of the one or more restructured responses based on a plurality of parameters such as parameters related to the nature of request the availability of communication channel the priorities of response sets the priorities of response objects within a response set the priorities of response chunks within a response object etc. Restructuring of the response is further described in detail below.

After scheduling the transmission communication module may transmit the restructured responses to client devices based on the schedule. In some embodiments communication module may also facilitate independent transmission of synthetic responses for the purpose of assessing communication channels i.e. synthetic active monitoring . Communication module may also analyze the current request and terminate transmission of one or more responses to the previous requests corresponding to the current request. For example if a response that corresponds to a current request also corresponds to a previous request and the response to the previous request has not yet been transmitted communication module may terminate the transmission of the response to the previous request. Instead communication module may transmit the response according to the current request. Communication module can be a software program and or a hardware device.

With reference to in some embodiments after communication module provides an HTTP request to analysis module analysis module may analyze the HTTP request to extract a uniform resource identifier URI and or other useful parameters associated with the HTTP request. Analysis module may map the URI to a resource. For example analysis module may correspond the URI to a resource such as a filename a script for executing an alias to actual resource and a re direction target. Analysis module may also map a logical source of the resource to an actual location or path for obtaining that resource. Analysis module can be a software program and or a hardware device.

With reference to in some embodiments after analysis module analyzes the HTTP request access control module may determine authorization of the HTTP request based on credentials associated with the one or more request objects of the HTTP request. For example access control module may obtain user credentials or device credentials from the request objects and invoke relevant authentication schemes such as like Lightweight Directory Access Protocol LDAP or windows authentication to authenticate the user and or the client device that sends the HTTP request. Based on the credentials access control module may determine whether permission should be granted to access the requested resources. Access control module can be a software program and or a hardware device.

With reference to in some embodiments after access control module determines authorization of the HTTP request resource handling module may retrieve the requested web content based on the one or more request objects and or resource map information. As described above analysis module may provide resource map information by mapping the URI to a resource such as a filename a script for executing an alias to actual resource and a re direction target. Resource handling module may use the one or more request objects and or such resource map information to obtain the requested web content such as a file an output of a script and information from a process from appropriate sources. As an example resource handling module may read a file execute a script execute a process or make an application programming interface API call.

Moreover based on the obtained web content and or the one or more request objects resource handling module may also generate one or more response objects which are internal representation of a response such as an HTTP response. Using the response objects resource handling module may provide the corresponding HTTP response to user experience management module for restructuring the response. Resource handling module can be a software program and or a hardware device.

With reference to in some embodiments after user experience management module receives the response from resource handling module it may restructure the response using one or more configuration parameters. In restructuring the response for example user experience management module may determine the nature of the HTTP request information using the one or more parameters identified through the HTTP request such as parameters extracted by analysis module . As an example the nature of the request may indicate that the HTTP request pertains to a highly important transaction such as an online banking request for balance transfer. As another example the nature of the request may indicate that the HTTP request pertains to a less important operation such as requesting a regular bank statement document.

Moreover in restructuring the response user experience management module may also estimate a response delivery time based on the one or more response objects and or one or more sample contents. Sample contents are contents that have a per configured size such as 50 bytes 10 Kilobytes 250 Kilobytes 400 Kilobytes etc. User experience management module can use the sample contents to estimate the availability of the communication channel. For example user experience management module can prepare a synthetic response e.g. a response using the sample contents to an HTTP request and measure a time e.g. a round trip time for transmitting the sample contents to client device . Using the time for transmitting the sample contents user experience management module can estimate the availability of the communication channel associated with for example client device or a particular user. After estimating the availability of the communication channel user experience management module may further estimate the response delivery time of the response objects that are to be transmitted in response to the HTTP request.

Furthermore after estimating the response delivery time of the response objects user experience management module may also determine a level of restructuring based on the estimated response delivery time and one or more response delivery time thresholds. For example user experience management module may obtain one or more response delivery time thresholds from configuration module . User experience management module may compare the estimated response delivery time of the response objects with the one or more response delivery time thresholds to determine the level of restructuring required. In some embodiments a high level of restructuring e.g. a restructuring level of in some embodiments may be require if the estimated response delivery time of the response objects significantly exceeds the one or more response delivery time thresholds. A moderate level of restructuring e.g. a restructuring level of in some embodiments may be require if the estimated response delivery time of the response objects moderately exceeds the one or more response delivery time thresholds. And a low level of restructuring e.g. a restructuring level of in some embodiments may be require if the estimated response delivery time of the response objects slightly exceeds or about the same as the one or more response delivery time thresholds. It is appreciated that the level of restructuring may be accomplished according to any level structure desired.

In some embodiments for example a restructuring level may correspond to a desired level of communication channel availability a restructuring level may correspond to a moderately desired level of communication channel availability and a restructuring level may corresponds to an undesired level of communication channel availability. In other words a higher level of restructuring may be required if the communication channel availability and or other transmission conditions are less desirable. A higher level of restructuring may also be required according to any other criteria such as user preferences or the nature of the request. After determining the level of restructuring user experience management module may restructure the response according to the nature of request information and or the level of restructuring. After restructuring the response user experience management module may provide the restructured response to communication module for scheduling and transmitting the restructured response to client device . Exemplary methods of response restructuring are further described in detail below.

Furthermore in some embodiments user experience management module may also perform a performance tuning method based on a cumulative restructuring status and a restructuring threshold. A cumulative restructuring status may correspond to for example a cumulative count of the restructured responses and or a cumulative level of the restructured response. In some embodiments user experience management module can keep track of the cumulative restructuring status. For example when a response restructuring occurs user experience management module may increase the cumulative restructuring status. User experience management module may also identify the level e.g. level level and level of the restructuring and update the cumulative level of the restructured response as well.

Additionally user experience management module may also obtain a restructuring threshold from configuration module . If the cumulative restructuring status exceeds the restructuring threshold user experience management module may also perform a performance tuning method to update one or more configuration parameters such as the response delivery time threshold. An exemplary method of performance turning is further described in detail below. User experience management module can be a software program and or a hardware device.

With reference to in some embodiments after communication module transmits the restructured response that is provided by user experience management module record transaction module may obtain information about the completed transmission from communication module and records information i.e. generates logs regarding the completed transmission. Such information may include for example the receipt of a request and the transmission of the response. Record transaction module may also record one or more of the performance parameters such as the response delivery time. Record transaction module can be a software program and or a hardware device.

With reference to in some embodiments configuration module may provide the one or more configuration parameters to user experience management module . For example in addition to standard configuration parameters for generating responses configuration module may also store and provide configuration parameters such as sample contents of different sizes and types response delivery time thresholds mapping between user request parameters and the nature of request and or priority information that relates to the entire restructured response and or portions of the restructured response. In some embodiments configuration module may also provide configuration parameters to other modules. Moreover configuration module may also provide an authorized user e.g. an administrator of server with an interface to perform administration of server . Exemplary methods of providing configuration parameters are further described in detail below. Configuration module can be a software program and or a hardware device.

In some embodiments using this information associated with a referral URL the server may determine if any of the previous requests correspond to the current request. If the server determines that one or more previous requests correspond to the current request the server may determine that one or more response objects corresponding to the current request is not required to be transmitted because they may have already been transmitted in response to the one or more previous requests. Thus the server may mark the one or more response objects for cancellation of transmission. In some embodiments by marking the one or more response object for cancellation the server may not further process the part of the HTTP request that corresponds to the one or more previous requests. For example the server may process or otherwise transform an HTTP request into a plurality of request objects. If some of the request objects correspond to the one or more previous requests the server may not further process those request objects.

With reference to in some embodiments after receiving the request to transmit web content the server may identify step based on the request a response that includes one or more response objects corresponding to the web content. In identifying the response the server may analyze the request to extract a URI and or other useful parameters associated with the request. The server may also map the URI to a resource. For example the server may associate the URI to a resource such as a filename a script for executing an alias to actual resource and or a re direction target. The server may also map a logical source of the resource to an actual location or path for obtaining that resource.

In some embodiments in identifying the response the server may determine authorization of the HTTP request based on credentials associated with the one or more request objects. For example the server may obtain user credentials or device credentials from the request objects and invoke relevant authentication schemes such as like Lightweight Directory Access Protocol LDAP or windows authentication to authenticate the user and or the client device sending the HTTP request. Based on the credentials the server may determine whether permission should be granted to access the requested resources.

In some embodiments after determining the authorization of the HTTP request the server may retrieve the requested web content based on the one or more request objects and or resource map information. As described above the server may provide resource map information by mapping the URI to a resource such as a filename a script for executing an alias to actual resource and or a re direction target. The server may use the one or more request objects and or such resource map information to obtain the requested web content such as a file an output of a script and information from a process from appropriate sources. As an example the server may read a file execute a script execute a process and or make an API call.

Moreover based on the obtained web content and or the one or more request objects the server may also generate one or more response objects which can be an internal representation of a response. Using the response objects the server may provide the corresponding response for further restructuring.

With reference to in some embodiments the server may restructure step the response using one or more configuration parameters. is a flow diagram illustrating an exemplary method for restructuring the response using the response objects and or the configuration parameters. With reference to in restructuring the response for example the server may determine step the nature of the request information using the one or more response objects. In some embodiments for determining the nature of the request information the server may extract a URI and or one or more request parameters using the one or more response objects. To obtain the nature of request information the server may map the extracted URI and or the one or more request parameters to a database e.g. a table of the nature of request provided by for example a configuration module e.g. configuration module . The database may be maintained and updated based on the design of website deployed on the server. As an example based on the mapping the server may determine that the nature of the request corresponds to a highly important transaction such as a banking request for balance transfer or a less important transaction such as a request for a regular bank statement document.

With reference to in restructuring the response the server may estimate step a response delivery time based on the one or more response objects and or one or more sample contents. In some embodiments for estimating the response delivery time the server may determine one or more representative content types and one or more representative content sizes based on the one or more response objects. For example using the response objects the server may analyze the content types and sizes of various elements within the response objects and obtain the representative types and sizes that are suitable for the current response.

Moreover for estimating the response delivery time the server may also obtain the one or more sample contents based on the one or more representative content types and the one or more representative content sizes. Sample contents can have different types and different sizes. For example a typical joint photographic expert group jpeg or jpg file can have a size of 50 bytes 10 kilobytes or 250 kilobytes. And a typical cascading style sheets css file can have a size of 100 bytes 50 kilobytes or 400 kilobytes. Using webserver log files or any other available resources the server can extract a list of webpages and or contents that are frequently requested by client devices and the frequency distribution with respect to the content elements delivered the types and quantities of the content elements and the sizes of the content elements. For example the server may determine that the type of content elements that is most often requested includes jpg files css files and hypertext markup language html files. The server may also determine for example that the most often requested content elements have sizes of 10 kilobytes and 100 kilobytes.

Furthermore after extracting a list of webpages and or contents that are frequently requested by the client devices and the corresponding frequency distribution the server may select a list of representative contents that have representative content types and representative content sizes. The server may select such list corresponding to a plurality of milestone sizes. For example using the frequency distribution the server may use a first quartile e.g. 25th percentile of data a second quartile e.g. a 50th percentile of data and a third quartile e.g. a 75th percentile of data as a guideline to select the representative content types and representative content sizes. In some embodiments the representative content types and the representative content size may be updated based on changes in the deployment on the server or a periodic review of the frequency distribution.

With reference to for estimating the response delivery time the server may also transmit one or more synthetic responses that include the one or more sample contents and estimate the response delivery time based on time for transmitting the one or more synthetic responses. For example the server can prepare one or more synthetic responses for transmitting to the client device. The synthetic responses may include one or more of the sample contents that have representative content types and representative content sizes. The server may then transmit the synthetic responses to the client device directly or indirectly over any available communication channel. The server may then estimate the time for transmitting the sample contents to a particular client device based on for example the acknowledgement of transmission received.

In some embodiments based on the time for transmitting the sample contents the server may estimate the response delivery time for transmitting the actual content requested by the client device. For example the server may compare the content types and sizes of the one or more response objects to be transmitted to the client device with the sample contents. Based on the comparison and the estimated time for transmitting the sample contents the server may estimate how much time it would take to transmit the one or more response objects.

With reference to in some embodiments the server may determine step a level of restructuring based on the estimated response delivery time and one or more response delivery time thresholds. For example the server may compare the estimated response delivery time of the response objects with the one or more response delivery time thresholds to determine the level of restructuring required. In some embodiments a high level of restructuring e.g. a restructuring of level may be required if the estimated response delivery time of the response objects significantly exceeds the one or more response delivery time thresholds. A moderate level of restructuring e.g. a restructuring level of may be required if the estimated response delivery time of the response objects moderately exceeds the one or more response delivery time thresholds. And a low level of restructuring e.g. a restructuring level of may be required if the estimated response delivery time of the response objects slightly exceeds or about the same as the one or more response delivery time thresholds. It is appreciated that the level of restructuring may be any level that is desired. In some embodiments for example a restructuring level may correspond to a desired level of communication channel availability a restructuring level may correspond to a moderately desired level of communication channel availability and a restructuring level may correspond to an undesired level of communication channel availability.

In some embodiments the server may obtain the one or more response delivery time thresholds from a configuration module e.g. configuration module . For example the configuration module may provide that a response delivery time threshold of 3 seconds or lower corresponds to the restructuring level a response delivery time threshold between 3 seconds and 8 seconds corresponds to the restructuring level and a response delivery time thresholds of 8 seconds or higher corresponds to the restructuring level . It is appreciated that any response delivery time thresholds can be provided.

In some embodiments for configuring the response delivery time thresholds the server can estimate the response delivery times corresponding to a list of webpages and or contents that are often requested by client devices and obtain the frequency distribution of the response delivery time and the number of the responses corresponding to the response delivery time. For example the server can estimate that the numbers of responses that correspond to response delivery times of 1 2 seconds 2 3 second etc. and above for example 10 seconds. The server can estimate the response delivery times and the corresponding number of responses using the webserver log files or any other available resources.

Furthermore after estimating the response delivery times and obtaining the frequency distribution the server may select a list of response delivery time thresholds corresponding to a plurality of milestone response delivery times. For example using the frequency distribution the server may select a first response delivery time threshold corresponding to 40th percentile of data a second response delivery time threshold corresponding to a 70th percentile of data etc. In some embodiments for example the first response delivery time threshold 40th percentile of data may correspond to a fast response delivery time and the second response delivery time threshold 70th percentile of data may correspond to a moderate response delivery time.

In some embodiments the response delivery time thresholds may also be selected based on business requirements user preferences and or any other criteria. The response delivery time threshold may also be updated based on changes in the deployment on the server or a periodic review of the frequency distribution. In some embodiments the server may update the response delivery time thresholds when the server performs a performance tuning. The performance tuning is described further in detail below.

With reference to after determining the level of restructuring the server may restructure step the response based on the nature of request information and or the level of restructuring. is a flow diagram illustrating an exemplary method for restructuring the response based on the nature of request information and or the level of restructuring. With reference to in some embodiments the server may identify step response chunk information and response chunk priority information based on the nature of request information. As described above the server may provide one or more response objects as the internal representation of a response. A response object may include one or more response chunks. A response chunk may correspond to a specific content type such a pdf file that contains a bank statement.

In some embodiments the server may obtain the response chunk information and the associated priority information provided by a configuration module e.g. configuration module . The response chunk information and associated priority information may be pre configured by the server. Depending on the nature of the request the server may thus obtain the pre configured response chunk information corresponding to the nature of the request. For example the nature of the request may indicate that it requires one or more response chunks corresponding to an online banking transaction document a regular banking statement an image file etc. to satisfy the request. Moreover the server may also obtain the priority information associated with the response chunk information. For example if the response chunk information indicates a banking transaction document is required the associated priority may be 2 and if a regular bank statement is required the associated priority may be 5.It is appreciated that any desired priority can be included in the associated response chunk information.

As described above after receiving the request the server may provide one or more response objects as the internal representation of the response. With reference to in some embodiments the server may determine step the one or more sizes and or the one or more priorities associated with the one or more response chunks based on the response chunk information and the associated priority information. In such determination the server may identify the one or more response chunks in the one or more response objects using the response chunk information. For example the server may identify that one response chunk corresponds to a requested banking transaction document another response chunk corresponds to a requested bank statement another response chunk corresponds to a requested image file etc. The server may also assign based on the response chunk priority information one or more priorities to the one or more response chunks. For example using the response chunk priority information the server may assign the response chunk corresponding to a banking transaction document to have a priority of 2 and assign the response chunk corresponding to a pdf file containing a regular bank statement a priority of 5. In some embodiments a priority may be higher if its assigned number is smaller. Thus a priority of 2 may indicate a higher priority than a priority of 5.

Moreover in some embodiments the server may also determine one or more sizes associated with the one or more response chunks based on the one or more sample contents. As described above the server may obtain sample contents for estimating a response delivery time. The server can also use the sample contents which include representative content sizes of a plurality of representative content types to determine sizes of the response chunks. For example the server may compare a particular response chunk with a same type sample content that has a known size and determine what the size of the response chunk is.

With reference to in some embodiments after determining the one or more sizes and the one or more priorities associated with the one or more response chunks the server may provide step at least one response set that includes the one or more response objects. The server may also associate step one or more priorities to the one or more response objects based on the one or more sizes and or the one or more priorities associated with the one or more response chunks. As described above the server may assign priorities to the one or more response chunks. In some embodiments the server may combine one or more of the response chunks to generate a response object. A response object may thus include response chunks having the same or different priorities. As an example a response object may include two response chunks that both are assigned a priority of 2 and thus the response object may also be assigned a priority of 2. As another example a response object may include two response chunks with one response chunk assigned priority of 2 and the other assigned priority of 5. The server may assign a higher priority e.g. a priority of 2 to the response object that includes the two response chunks of differing priorities. It is appreciated however that the server can assign priority to response objects that combine two or more response chunks in any manner that is desired.

With reference to in some embodiments after restructuring the response which includes the one or more prioritized response objects the server may schedule step the restructured response and transmit step the requested web content according to the scheduled restructured response. is a flow diagram illustrating an exemplary method for scheduling the restructured response and transmitting the requested web content according to the scheduled restructured response. With reference to for scheduling the restructured response the server may assign step one or more indexes to the one or more response objects based on the one or more priorities associated with the one or more response objects. As described above the one or more response objects are assigned their priorities by the server. Moreover the server may combine one or more response objects to generate a response set. In some embodiments the response objects in any response set may be sorted in the order of their assigned priorities and sizes. For example the server may sort the response objects in a particular response set first according to their priorities and then according their sizes if any two or more response objects have the same priority.

In some embodiments after sorting the response objects in a response set the server may assign an index to each of the sorted response objects. The indexes may serve as modified priorities for the sorted response objects. Moreover in some embodiments the server may also associate a timestamp to each of the one or more response sets. For example the timestamp can be a timestamp of the time when the server associates it to the response set.

With reference to in some embodiments the server may obtain step priority information associated with the nature of request and or request parameter information. In some embodiments the priority information may be pre configured and provided by a configuration module. For example depending on business requirement or user preferences a high priority may be associated with a particular nature of request information such as information regarding request for an online banking transaction.

In some embodiments after obtaining the priority information associated with the nature of request and or request parameter information the server may associate step one or more priorities to the at least one response set using the priority information associated with the nature of request information. Therefore in some embodiments a response set may be associated with a priority. A response set may also be associated with a timestamp. As an example is a block diagram illustrating response sets of a restructured response . Response may be structured in any number of manners. For example illustrates that response may have two different structures and . For illustration purposes the two structures and may have the same aggregated web content in response to an HTTP request. The aggregated web content of structures and may be transmitted to the same user at different times or to different users at the same time.

As shown in in structure aggregated web content in response to the corresponding HTTP request may include one or more response sets such as and . In structure aggregated web content in response to the corresponding HTTP request may include one or more response sets such as and . The one or more response sets may be assigned different priorities and timestamps. For example as shown in response sets and are both assigned priority and timestamp i.e. P t . Similarly response sets and are both assigned P t response set is assigned P t response set is assigned P t response set is assigned P t response set is assigned P t response set is assigned P t response set is assigned P t and response set is assigned P t.

In addition to being assigned different priorities and or different timestamps the response sets may have different sizes indicated in by total area of the response set . Thus the restructured response may enable transmitting the response objects contained in the response sets according to the priorities timestamps and sizes of their associated response sets. The transmitting of the response can therefore be customized across users webpage requests and time points. In other words a same webpage content may be transmitted in different manner across users and time points. Further the same user may also receive a different transmitting sequence of the response sets at different time points. Accordingly the transmission of the web contents can be customized to enhance user experience and to satisfy business requirements. Details of the transmission of the response objects are further described below.

With reference to in some embodiments in transmitting the requested web content according to the scheduled restructured response the server may delete step one or more response objects that are marked for cancellation of transmission. As described above the server may mark one or more response objects for cancellation if it determines that one or more previous requests were received corresponding to the current request.

With reference to in some embodiments in transmitting the requested web content according to the scheduled restructured response the server may determine step the sequence of transmission of the remaining one or more response objects based on the one or more priorities associated with the at least one response set the one or more indexes associated with the one or more response objects and or the timestamps associated with the at least one response set. As an example the server may sort the response objects across response sets in the order of priority associated with the response sets the index associated with the one or more response objects and or the timestamps of the response sets. For example with reference to after sorting all response objects contained in response sets and may be scheduled for delivery before the other response sets because response sets and have the first priority and first timestamp e.g. P t . Furthermore within response sets and the response objects are further assigned indexes according to the priorities associated with the response objects.

With reference to after determining the sequence of transmission of the response objects the server may transmit step the requested web content to the client devices according to the sequence e.g. the assigned indexes of the response objects. The server may transmit the web content directly or indirectly to the client devices.

With reference to in some embodiments after transmitting the restructured response the server may update step a cumulative restructuring status. The cumulative restructuring status may be based on a number of restructured responses and or a cumulative level of restructuring corresponding to the restructuring of the response. For example after transmitting each restructured response the server may increase the number of restructured response by 1. In some embodiments the server may also track the level of the restructured response. For example the server may increase the number of level restructured response by 1 after transmitting such a response. Accordingly the server may keep track of number and or percentage of restructured responses corresponding to each level of restructuring.

With reference to in some embodiments the server may obtain step a restructuring threshold from a configuration module and perform step a performance tuning if the cumulative restructuring status satisfies the restructuring threshold. For example when the number of requests served by the server exceeds a preconfigured threshold e.g. 1 million and the number and or percentage of restructured responses falls below a preconfigured value e.g. level restructuring falls below 30 the performance of server may be tuned. It is appreciated that the performance tuning may also be triggered in any other manner that is desired.

The restructuring threshold may be configured by the server to increase or reduce the number of restructuring responses to satisfy business requirements or user preferences. For example the restructuring threshold may be configured such that the server may transmit a required percentage of responses within a target response delivery time. In some embodiments the webserver log files and or other available sources may be used to estimate the distribution of the response delivery times for the requests served by the server in a certain period of time such as a day week month etc. The restructuring threshold may thus be configured or reconfigured based on the distribution of the response delivery times and the target response delivery time.

With reference to in some embodiments the server may also update step a cumulative count of responses after updating the response delivery time threshold. For example after updating the response delivery time threshold the cumulative count of responses may be reset to 0 so that a new cumulative count can be obtained.

The specification has described systems and methods for optimizing web content transmission. The illustrated steps are set out to explain the exemplary embodiments shown and it should be anticipated that ongoing technological development will change the manner in which particular functions are performed. These examples are presented herein for purposes of illustration and not limitation. For example steps or processes disclosed herein are not limited to being performed in the order described but may be performed in any order and some steps may be omitted consistent with disclosed embodiments. Further the boundaries of the functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternative boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed. Alternatives including equivalents extensions variations deviations etc. of those described herein will be apparent to persons skilled in the relevant art s based on the teachings contained herein. Such alternatives fall within the scope and spirit of the disclosed embodiments.

Furthermore one or more computer readable storage media may be utilized in implementing embodiments consistent with the present disclosure. A computer readable storage medium refers to any type of physical memory on which information or data readable by a processor may be stored. Thus a computer readable storage medium may store instructions for execution by one or more processors including instructions for causing the processor s to perform steps or stages consistent with the embodiments described herein. The term computer readable medium should be understood to include tangible items and exclude carrier waves and transient signals i.e. be non transitory. Examples include random access memory RAM read only memory ROM volatile memory nonvolatile memory hard drives CD ROMs DVDs flash drives disks and any other known physical storage media.

It is intended that the disclosure and examples be considered as exemplary only with a true scope and spirit of disclosed embodiments being indicated by the following claims.

