---

title: Summarizing portlet usage in a portal page
abstract: A portal summary controller stores detected usage of at least one instance of at least one portlet application within at least one portal page at each of a plurality of different times. Responsive to a trigger to generate a summary portal page, the portal summary controller dynamically creates a summary portal page displaying a separate instance of the at least one portlet application for at least one of each of the plurality of different times specified according to the separate usage stored at each of the plurality of different times, such that the summary portal page provides a summary of at least a selection of previous usage of the at least one portal page. The trigger to generate a summary portal page includes a user selecting which previous stored portal usage, including usage of individual portlet applications, to summarize in the summary portal page, such that the summary portal page renders a summary of only that content selected by the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09537929&OS=09537929&RS=09537929
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09537929
owner_city: Armonk
owner_country: US
publication_date: 20140709
---
The present invention relates generally to an improved data processing system and in particular to an improved computer implemented method system and computer program product for monitoring and saving portlet usage and subsequently generating a portal page displaying one or more portlets as used at a particular point in time or over a period of time.

As networks such as the Internet become more and more pervasive for content delivery and communication better methods for displaying web contents and accessing web applications are being developed. One example of a technology that efficiently displays web content and accesses web applications is a portal. Portal programs or portal applications whether run on a server delivering content or on a client system receiving content provide an entry point for websites and back end applications through a portal page viewable at a client system.

In one example a portal application generates a portal page that includes instances of portlets. In general a portlet is a web based application that processes requests and generates dynamic content. End users see an instance of a portlet as a specialized content area within a portal page. Depending on the content nature of the portlet the user may select to view different types of content within the portlet instance or content area. For example some portlets are database driven applications that access data from remote data sources based on the currently selected option from a list of data options available for the portlet instance and present the accessed data to the user through dynamically generated content or markup fragments.

A portal page including instances of multiple database driven portlets may access live data for currently selected data options from different sources bring all the data into a common portal page and display dynamically generated graphical representations of the accessed live data by each of the portlet instances. Thus through a portal page the data that a user previously had to access through many separate windows each displaying one type of data the user can now view accumulated on one page but still separately graphically represented. For example instead of a user having to separately access web pages for each of news sports scores and stock prices and separately access productivity applications such as calendars for project progress calendaring changes and other productivity data the user accesses one portal page which includes instances of multiple database driven portlets for separately displaying within a single page data from news sports scores and stock prices to project progress calendaring changes and other productivity data.

While the portal page with multiple portlet instances provides the user with a quick single page in which to view multiple types of data from multiple sources as the data changes users may need to rely on the data accessed in a portlet instance. Currently portal pages that include portlets are limited however because once a portlet updates displayed data within the portlet instance the previously displayed data is no longer available to the user. In addition portals are limited because as a user adjusts which portlets are displayed within a portal page or the user adjusts the selected data option within a database driven portlet instance the previous configuration of portlet instances and the previously selected data options are no longer available.

Therefore the present invention provides a method system and program for monitoring and saving portal usage including current portal data current content dynamically generated for and displayed within portlet instances placed within a portal page and the current data option selections for portlet instances within the portal page. In addition in view of the foregoing there is a need for a method system and program subsequent to monitoring and saving portal usage for creating an additional portal page and displaying a configurable summary of portlet instances specified according to the saved portal usage.

In one embodiment a system for creating a portal page summarizing previous portal page usage comprises a portal status recorder comprising a processor connected to a memory and operative to store detected usage of at least one instance of at least one portlet application within at least one portal page separately at each of a plurality of different times wherein the detected usage comprises a separate data option from a plurality of data options selected at each of the plurality of different times for specifying access to a particular data source of a plurality of data sources from at least one data storage s stem via a network connection at each of the plurality of different times. The system comprises a summary portal generator operative to dynamically create a summary portal page displaying a separate instance of the at least one portlet application for at least one of each of the plurality of different times specified with dynamically generated contented that is generated at a current time of access according to each separate data access at the current time to the particular data source specified in each separate data option via the network connection to the at least one data storage system in the detected usage separately stored at each of the plurality of different times wherein the summary portal page provides a summary of at least a selection of a previous usage of the at least one portal page comprising each separate instance of the at least one portlet application that functions as if placed on the at least one portal page at the current time with each separate data option previously selected at each of the plurality of different times.

In one embodiment a portal summary controller stores detected usage of at least one instance of at least one portlet application within at least one portal page at each of a plurality of different times. Responsive to a trigger to generate a summary portal page the portal summary controller dynamically creates a summary portal page displaying a separate instance of the at least one portlet application for at least one of each of the plurality of different times specified according to the separate usage stored at each of the plurality of different times such that the summary portal page provides a summary of at least a selection of previous usage of the at least one portal page. The trigger to generate a summary portal page may include a user selecting which previous portal usage including usage of individual portlet applications to summarize in the summary portal page such that the summary portal page renders a summary of only that content selected by the user.

A portal application dynamically generates content for each of the at least one instance of the at least one portlet application from separate data accesses to at least one data storage system delivering data for each at least one portlet application. The portal summary controller detects the usage and stores the detected usage of the at least one instance of the at least one portlet application by storing the dynamically generated content for each of the at least one instance of the at least one portlet application. The dynamically generated content includes dynamically generated HTML fragments. In storing content which includes dynamically generated HTML fragments the portal summary controller performs at least one of capturing data points from the dynamically generated HTML fragments and storing the data points storing the dynamically generated HTML fragments and capturing a snapshot of the displayed HTML fragments and storing the captured snapshot.

Summary portal controller also detects portal usage including the data options selected within portlet instances where each portlet instance includes multiple data options which each direct requests to a back end server for different types of data. The summary portal controller stores the data option selections and in creating the summary portal page specifies the portlet instance to access the data option previously stored. Based on the data option specified in the summary portal page for an instance the summary portal controller triggers the portal application to access current data for the data option and dynamically generate content for display within the portlet instance.

The portal summary controller supports multiple interfaces. One interface supports a selectable option within particular instances within a at least one portal page or within at least one portal page in general which when selected triggers recording of and storage of the usage of a particular portlet or the portal page. Another interface supports user specification of which records of portal usage to include in the summary portal page such that the user specifies which previous portal usage to summarize in a portal page.

In another embodiment a method for creating a portal page summarizing previous portal page usage includes storing detected usage of at least one instance of at least one portlet application within at least one portal page separately at each of a plurality of different times. In addition the method includes dynamically creating a summary portal page displaying a separate instance of the at least one portlet application for at least one of each of the plurality of different times specified according to the detected usage separately stored at each of the plurality of different times such that the summary portal page provides a summary of at least a selection of a previous usage of the at least one portal page.

In yet another embodiment a program product comprising a storage type computer usable medium including a computer readable program for creating a portal page summarizing previous portal page usage wherein the computer readable program when executed on a computer causes the computer to store detected usage of at least one instance of at least one portlet application within at least one portal page separately at each of a plurality of different times. In addition the computer readable program when executed on a computer causes the computer to dynamically create a summary portal page displaying a separate instance of the at least one portlet application for at least one of each of the plurality of different times specified according to the detected usage separately stored at each of the plurality of different times.

Referring now to a block diagram illustrates one example of layers of a portal for supporting portlets and a portal summary controller for monitoring portal usage and creating a portal page including a configurable summary of the monitored portal usage. It will be understood that the layers displayed may include additional or alternate layers for implementing the functions described or for implementing additional or alternate functions. In addition it will be understood that the layers displayed may be distributed across a single computing system or multiple computer systems communicatively connected temporarily or permanently across a network or other connection medium.

In the example portal layers include a portal application layer . Portal application layer includes at least one web application or represents at least one web service for aggregating different applications and controlling a presentation layer for the aggregated applications in the form of a portal page. In particular in the example each of portlets and within a portlet layer represent applications which portal application layer may aggregate and control the presentation of instances of the aggregated portlets in a single portal page. In one example portlets and generate dynamic content called fragments which are pieces of markup language such as Hypertext Markup Language HTML extensible markup language XML or voice XML. The fragments may include data for display or other types of output including but not limited to text graphics audio and video. Portal application layer controls presentation of the fragments according to the positioning of the associated portlet instances within the portal page.

In addition portal application layer facilitates personalization of portal pages. For example portal application layer facilitates user selection of which portlet instances such as instances of portlets and to place within a portal page and facilitates user placement of the portlet instances at specific positions within the portal page. In addition portal application may control a customized appearance of the portal page and the portlet instances displayed within the portal page.

Further portal application layer may provide for authentication of a user to access the aggregated applications in a portal page through a single authentication process. Once a user is authenticated by portal application layer portal application may handle authentication of the user as required by other systems and other layers.

In addition portal application layer interfaces with a network layer which enables communication with and accesses data from one or more data sources such as data sources and in a data sources layer . In addition it is important to note that a container layer or portlet layer may interface directly with network layer to access data sources layer .

Portlets and are individual web applications or components instances of which are made accessible to users via a portal page supported by portal application layer . In one example a single portlet such as any one of portlets and dynamically generates a fragment of the markup that a user views in a portal page which includes one or more instances of the portlet.

Container layer may provide the runtime environment to portlets and . For example users make requests from portlet instances displayed in a portal page and portal application layer forwards the requests to container layer . Container layer then distributes the request to the appropriate portlet. In addition for example once the portlet dynamically generates the content fragment for the portlet container layer sends the fragment to portal application layer for display within a portal page. Further container layer may store portlet preferences for a user and provide additional functions for supporting customized portlet access by a user. It is important to note that while container layer and portlet layer are illustrated as separate layers the layers may only be virtually represented as separate layers and physically may be part of a same component. In addition it is important to note that container layer may provide a runtime environment and support for components other than portlets such as servlets.

In one example portal layers may include one or more layers written to or implemented under standards which facilitate reusability across multiple types of enterprise systems and other computer systems provided by one or more vendors or developers. In one example portal application layer may implement a Java 2 Enterprise Edition J2EE Java is a registered trademark of Sun Microsystems Inc. complaint portal application that is able to run atop one or more different operating systems and process requests from multiple client systems in an enterprise network of computer systems. Portal application layer may call container layer through a container application programming interface API to which container layer is specified where the container API may be reusable across multiple J2EE compliant portal applications or portal applications compliant with other standards. Container layer may call portlets in portlet layer through a portlet API such as the portlet API standardized according to the Java Portlet Specification. One or more portlets within portlet layer may be created according to the Java Portlet API or other specifications designed for reusability across platforms. In addition it is important to note that portal application layer may support portal applications written to additional alternate or different specifications which run atop an operating system container layer may support multiple containers written to additional alternate or different specifications which portal application layer calls through different container APIs and portlet layer may support portlets written to additional alternate or different portlet standards which container calls through different portlet APIs.

In the example portal application layer interfaces with a network layer which may include one or more network architecture layers for supporting network requests from and responses to portal application layer container layer and portlet layer . In particular in the example network layer interfaces with a data source layer that includes one or more data sources illustrated as data sources and . Data sources and may represent server systems which store data databases and other data storage mediums which are accessible via network layer .

In one example portlets and are database driven portlets and the database data that drives portlets and is accessed from data sources layer . As database driven portlets portlets and support at least one data option available for access from at least one of data sources and . Container layer may receive changes to the data option selected within the portal page from portal application layer store the current data option preference and pass the currently selected data option to the appropriate one of portlets and . Portlets and request data from data source layer such as from one of data sources and via network layer . Portlets and receive the data accessed from at least one of data sources and and generate dynamic content called fragments which are pieces of markup language such as Hypertext Markup Language HTML extensible markup language XML or voice XML from the transferred data. In addition or alternatively data sources and may generate and pass dynamic content to requesting portlets and . Portal application layer controls generation of a portal page displaying the fragments dynamically generated or received by portlets and .

It is important to note that multiple portlets such as portlets and may represent a same database driven application where each of portlets and is set to access a different data option and represents a different instance of the database driven application specified for a portal page. A same data source within data source layer may maintain the data associated with multiple data options of a portlet or different data sources may separately maintain the data associated with each of the multiple data options.

According to an advantage of the present invention layers may include a portal summary controller . In the example portal application layer includes portal summary controller . Functions of portal application layer may also be implemented within container layer and portlet layer or may access data from container layer and portlet layer . In other embodiments additional alternate or multiple layers may implement portal summary controller .

Portal summary controller monitors usage of one or more portal pages created by portal application layer and stores the usage with a timestamp and other available information. Portal page usage may include but is not limited to which portlets are currently placed within a the portal page which data options are selected in the database driven portlets and what content is dynamically generated by each portlet and displayed within the instance of the portlet within the portal page. Portal summary controller may capture current portal usage each time a change in portal usage is detected periodically or responsive to a user direction to cache the current portal usage. Subsequent to monitoring and storing portal usage portal summary controller provides a configurable summary of the stored portal usage in a summary portal page displaying portlet instances specified according to the stored portal usage.

With reference now to a block diagram illustrates one example a network environment for supporting network based portals in which the present invention may be implemented. It is important to note that network environment is illustrative of one type of network environment which may support one or more layers of portal layers however the method system and program described with reference to portal layers may be implemented in other network environments. In addition it is important to note that the distribution of systems within network environment is illustrative of a distribution of systems however other distributions of systems within a network environment may be implemented.

As illustrated multiple systems within network environment may be communicatively connected via network which is the medium used to provide communications links between various devices and computer systems communicatively connected. Network may include permanent connections such as wire or fiber optics cables and temporary connections made through telephone connections and wireless transmission connections for example. Network may represent one or more of packet switching based networks and telephony based networks local area and wide area networks public and private networks.

When represented within network layer network may represent one or more layers of a network protocol stack which includes one or more of a physical layer a link layer a network layer a transport layer a presentation layer and an application layer. Network layer may implement for communications between systems across network multiple types of network protocol stacks. For example network layer may implement one or more of the Transmission Control Protocol Internet Protocol TCP IP protocol stack or an Open Systems Interconnection OSI protocol stack. In addition for example network may represent the worldwide collection of networks and gateways that use the TCP IP suite of protocols to communicate with one another.

Network environment may implement multiple types of network architectures. In one example network environment may be implemented using a client server architecture where computing systems requesting data or processes are referred to as clients and computing systems processing data requests and processes are referred to as servers. In another example network environment may be implemented in a peer to peer network architecture. In yet another example network environment may be implemented in a grid architecture. It will be understood that other types of network architectures and combinations of network architectures may be implemented.

In the embodiment as illustrated client systems and are communicatively connected via network to one or more of a portal server system and data server systems and . Client systems and are representative of one or more client systems at which portal pages are accessed and displayed through output interfaces and data server systems and are representative of servers which serve as data sources for providing data to portlets. In additional or alternate embodiments additional or alternate client systems and data server systems may be implemented.

In one example client systems and may implement portal application layer container layer and portlet layer and access data for portlets from one of data server systems and . Portal summary controller may store the current contents of portlets locally at client system or and generate a summary portal page from locally stored portal usage.

In another example a portal server system may implement portal application layer container layer and portlet layer and a local browser on client system or controls display of a portal page created by portal server system and passes user interaction within the portal page to portal server system . Portal summary controller may store portal usage at portal server system and generate a summary portal page for display at one of client systems or with portlets specified from the portal usage stored by portal server system .

In yet another example each of client system client system and portal server system may implement one or more of portal application layer container layer and portlet layer . In addition as previously noted client system and client system may run additional application software such as a browser or other application in which portal pages may be viewed and which returns user interactions with portal pages to portal application layer .

In addition in other examples portal server system may represent an enterprise server system for providing client systems such as client systems and access to network . Portal server system may implement Websphere Websphere is a registered trademark of International Business Machines Corporation applications or other enterprise server applications for controlling portal page delivery portal summary page delivery and network access for multiple client systems.

Referring now to a block diagram depicts one embodiment of a computer system in which the present invention may be implemented. The controllers and systems of the present invention may be executed in a variety of systems including a variety of computing systems such as computer system communicatively connected to a network such as network .

Computer system includes a bus or other communication device for communicating information within computer system and at least one processing device such as processor coupled to bus for processing information. Bus includes low latency and higher latency paths that are connected by bridges and adapters and controlled within computer system by multiple bus controllers. When implemented as a server computer system may include multiple processors designed to improve network servicing power. Where multiple processors share bus an additional controller not depicted for managing bus access and locks may be implemented.

Processor may be a general purpose processor such as IBM s PowerPC processor that during normal operation processes data under the control of an operating system application software middleware not depicted and other code accessible from a dynamic storage device such as random access memory RAM a static storage device such as Read Only Memory ROM a data storage device such as mass storage device or other data storage medium. Application software may include software for one or more of portal application layer container layer and portlet layer described in . In addition application software may include software for controlling a data source such as a database implementing data source layer . Further application software or middleware may implement one or more types of enterprise software such as Websphere Websphere is a registered trademark of International Business Machines Corporation software such as for running a Websphere application server.

In one embodiment the operations performed by processor may control monitoring portal usage recording and storing the monitored portal usage and subsequently creating a summary portal page configurable to display all or a portion of the stored portal usage as described in the operations of the flowcharts of and other operations described herein. Operations performed by processor may be requested by operating system application software middleware or other code or the steps of the present invention might be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

The present invention may be provided as a computer program product included on a computer or machine readable medium having stored thereon the executable instructions of a computer readable program that when executed on computer system cause computer system to perform a process according to the present invention. The terms computer readable medium or machine readable medium as used herein includes any medium that participates in providing instructions to processor or other components of computer system for execution. Such a medium may take many forms including but not limited to storage type media such as non volatile media and volatile media and transmission media. Common forms of non volatile media include for example a floppy disk a flexible disk a hard disk magnetic tape or any other magnetic medium a compact disc ROM CD ROM or any other optical medium punch cards or any other physical medium with patterns of holes a programmable ROM PROM an erasable PROM EPROM electrically EPROM EEPROM a flash memory any other memory chip or cartridge or any other medium from which computer system can read and which is suitable for storing instructions. In the present embodiment an example of a non volatile medium is mass storage device which as depicted is an internal component of computer system but will be understood to also be provided by an external device. Volatile media include dynamic memory such as RAM . Transmission media include coaxial cables copper wire or fiber optics including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio frequency or infrared data communications.

Moreover the present invention may be downloaded or distributed as a computer program product wherein the computer readable program instructions may be transmitted from a remote computer such as a server to requesting computer system by way of data signals embodied in a carrier wave or other propagation medium via network to a network link e.g. a modem or network connection to a communications interface coupled to bus . In one example where processor includes multiple processor elements then a processing task distributed among the processor elements whether locally or via a network may represent a computer program product where the processing task includes program instructions for performing a process or program instructions for accessing Java Java is a registered trademark of Sun Microsystems Inc. objects or other executables for performing a process. Communications interface provides a two way data communications coupling to network link that may be connected for example to a local area network LAN wide area network WAN or directly to an Internet Service Provider ISP . In particular network link may provide wired and or wireless network communications to one or more networks such as network . Further although not depicted communication interface may include software such as device drivers hardware such as adapters and other controllers that enable communication. When implemented as a server computer system may include multiple communication interfaces accessible via multiple peripheral component interconnect PCI bus bridges connected to an input output controller for example. In this manner computer system allows connections to multiple clients via multiple separate ports and each port may also support multiple connections to multiple clients.

Network link and network both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system may be forms of carrier waves transporting the information.

In addition computer system may include multiple peripheral components that facilitate input and output. These peripheral components are connected to multiple controllers adapters and expansion slots such as input output I O interface coupled to one of the multiple levels of bus . Input device may include for example a microphone a video capture device a body scanning system a keyboard a mouse or other input peripheral device communicatively enabled on bus via I O interface controlling inputs. In addition an output device communicatively enabled on bus via I O interface for controlling outputs may include for example one or more graphical display devices audio speakers and tactile detectable output interfaces but may also include other output interfaces. In alternate embodiments of the present invention additional or alternate input and output peripheral components may be added.

Those of ordinary skill in the art will appreciate that the hardware depicted in may vary. Furthermore those of ordinary skill in the art will appreciate that the depicted example is not meant to imply architectural limitations with respect to the present invention. For example computer system may also be a tablet computer laptop computer or telephone device.

With reference now to a block diagram illustrates examples of components of a portal summary controller. It will be understood that in additional or alternate embodiments the portal summary controller may include additional or alternate components.

In the example portal summary controller includes a portal status recorder . Portal status recorder monitors the usage of one or more portal pages and records and stores portal usage with a time stamp and other available information in a portal status database . As previously noted portal usage may include but is not limited to which portlet instances are open within a portal page the selected data options for open database driven portlets and the dynamically generated content of portlet instances within a portal page. It is important to note that dynamically generated content may include but is not limited to text graphics audio video and streaming multimedia content.

In one example as portal status recorder records and stores portal usage records within portal status database to indicate when portal usage is recorded portal status recorder may adjust a graphical characteristic or other output characteristic of individual portlet instances within a portal page or may adjust a graphical characteristic or other output characteristic within the portal page itself. For example each time portal status recorder records the portal usage for a portal page portal status recorder may add a time stamp to a portion of the portal page indicating when the portal usage was recorded and stored for the portal page. In another example each time portal status recorder records the portal usage for a portal page portal status recorder may temporarily adjust a graphical attribute or characteristic of the portal page or an individual portlet instance within the portal page such as by adding shading or adjusting a coloring of a portal page or individual portlet instance within the portal page. In yet another example where portal status recorder monitors portal usage within multiple portal pages portal status recorder may simultaneously update a graphical characteristic of each of the monitored portal pages or graphically distinguish a selection of recorded portal pages from at least one portal page for which usage is not recorded.

In monitoring usage of one or more portal pages portal status recorder determines when to record and store portal usage within portal status database . In one example portal status recorder records each change in portal usage detected such as recording each change in the portlets selected for view within a portal page each change in the data option selected for a portlet instance and each change in the dynamically generated content of a portlet instance within a portal page. In another example portal status recorder may support an application program interface to include a selectable option within one or more portlet instances or within a portal page that allows a user to select an option to direct portal status recorder to record and store the current usage of a particular portlet instance or portal page as a whole. In yet another example portal status recorder may determine when to record and store portal usage in portal status database based on recording settings in portal summary preferences . For example portal summary preferences may specify recording settings for recording and storing the portal usage periodically according to calendared events set for the portal or in a separate calendaring application according to the type of portlet and according to other criteria or rules.

Portal summary controller also includes a portal summary selection interface controller . In one example portal summary selection interface controller provides an interface with a list or other selectable representation of one or more records representing portal usage recorded in portal status database . A user selecting from the list may customize or configure those records of portal usage for summary portal generator to include in a summary portal page. In another example portal summary selection interface controller may include selectable options within an interface for a user to select a particular portlet and select a time period over which to display all the portal usage for the particular portlet stored in portal status database within a summary portal page generated by summary portal generator . Further in another example portal summary selection interface controller may include selectable options within an interface for a user to select to automatically direct summary portal generator to create a portal page for all or a selection of portal usage contemporaneously with the recording of the portal usage within portal status database .

In addition to a user directly selecting which selection of portal usage stored in portal status database to include in a summary portal page portal summary preferences may specify preferences for specifying the selection of portal usage stored in portal status database for summary portal generator to include in a summary portal page. In one example portal summary preferences may indicate a preference to automatically generate a summary portal page for each record of portal usage recorded in portal status database . In another example portal summary preferences may indicate a preference to automatically generate a summary portal page on the morning of each business quarter including a separate portlet instance of a particular portlet application for each of the previously recorded business quarters with each portlet instance displaying the content stored for the portlet application at the end of the current quarter or one of the previous quarters.

In creating a summary portal page summary portal generator may create a portal page which may include at least one portlet instance of at least one portlet application which functions as if placed on a normal portal page with the data options for database driven portlets specified according to the data options for the portlets specified at a previous point in time as accessed from portal status database . Based on the previously specified data options the portlet instance in a summary portal page displays dynamically generated content for the portlet based on the current data for the previously selected data option.

In addition in creating a summary portal page summary portal generator may create a summary portal page in which portlet instances may function as if placed on a normal portal page however the content of the portlet instance is specified with the content previously displayed within the portlet instance of a same portlet application at a previous point in time as accessed from portal status database . In this example the summary portal page may include multiple portlet instances each specified with content accessed from portal status database as recorded at a same point in time or different points in time.

Further in creating a summary portal page summary portal generator may create a summary portal page which includes portlet instances for those portlet applications recorded as placed within a portal page over a particular time period within portal status database with a default data option selected. In this example in addition to allowing a user to specify the portlet instances open within a portal page the user may store time based recordings of which portlet instances were open within a portal page at different points in time and access a summary portal page with the portlet instances open at one of the different points in time as recorded in portal status database .

Moreover in creating a summary portal page summary portal generator may direct a portal application within portal application layer to create the summary portal page with a selection of one or more portlets and one or more of a selection of data options set for the portlets and a selection of stored content to display in the portlets. In addition or alternatively summary portal generator may create a portal page separately from the portal application within portal application layer with the selection of one or more portlet instances and one or more of a selection of data options set for the portlet instances and a selection of stored content from portal summary preferences to display in the portlet instances.

In one example summary portal generator creates a summary portal page within a separate window. In another example summary portal generator creates the summary portal page within an interface which adds a new tab to support a new portal page and summary portal generator places the summary portal page within the tab.

Further in creating a summary portal page summary portal generator may graphically distinguish the portions of the content displayed within the summary portal page which are based on records from portal status database from the portions of the content displayed within the summary portal page which are based on current data accesses. In addition as a user interacts with the summary portal page the user may change data option selections within one or more portal instances and summary portal generator specifies user selected changes according to the same graphical characteristic used to distinguish current data accesses. For example portions of the content displayed within the summary portal page based on records from portal status database may be highlighted with a distinguishable color texture hue or other graphical indicator which facilitates visual distinction of content based on records from portal status database from the other content displayed within the summary portal page.

It is important to note that portal status database may be stored at a client system such as one of client systems or or at a portal server system such as portal server system . In the example where portal usage is stored at a client system portal status database may represent a database within memory or may represent data stored with cache. In addition separate storage systems for storing portal usage may be accessible to client systems or portal server systems via network .

In one example where portal usage is stored at a client system portal status recorder may store data points within portal status database and a rich client portal application running at the client system renders portlets locally from the data points for output within a summary portal page managed by summary portal generator . In addition in the example where portal usage is stored at a client system portal status recorder may store HTML fragments as previously described within portal status database and a rich client portal application renders portlets locally from the HTML fragments by running a file server portlet that allows display of HTML content. In yet another example where portal usage is stored at a client system portal status recorder may capture and store static snapshot images of a portlet instance and summary portal generator generates HTML from the snapshot for rendering through a rich client portal application running a file server portlet that allows display of HTML content.

In the example where portal usage is stored in portal status database at a portal server system portal status recorder may record into portal status database data points HTML or static snapshot images as described with reference to locally storing portal usage. Portal summary preferences or other preferences within one or more of the layers of portal layers are set to point to portal status database at the portal server system. The portal server system renders the content for display in the portlet instances in a summary portal page from the stored data points HTML or static snapshot images.

In addition it is important to note that while the invention is described with reference to summary portal generator accessing portal status database to generate summary portal pages other controllers or functions may access portal status database . For example when a user is offline or not able to access a data server system for a portlet portlet applications may access previously accessed and stored content from portal status database and dynamically generate content for display within portlet instances while offline or not able to access a data server system for a portlet.

With reference now to a block diagram illustrates examples of portlet instances specified according to recorded portal usage within summary portal pages. In the example portal summary controller monitors portal usage of a portal page which includes portlet instances and . Portlet instances and may represent instances of a same portlet application or different portlet applications. In addition at least one of portlet instances and represents an instance of a database driven portlet.

In the example portal summary controller detects and stores at one or more points in time within portal status database the portal instances open within portal page as illustrated at reference numeral the portlet content within at least one portlet within portal page as illustrated at reference numeral and the selected portlet options within at least one portlet within portal page as illustrated at reference numeral . In addition although not depicted portal summary controller may detect and store portal usage from other portal pages in portal status database .

In one example portal summary controller generates a portal summary page of the saved portlet content for a same portlet application over multiple points in time. For example portlet content may store the portlet content for a financial portlet each month. Summary portal page includes multiple instances of the financial portlet illustrated by portlet instances and . Each of the portlet instances includes the content saved for one of the previous months in the financial portlet instances displayed within portal page or other portal pages. Thus a user may select to view a summary of multiple instances of a same portlet application with the content displayed for that portlet at different points in time.

In another example portal summary controller generates a portal summary page of the portlets accessed at one or different times during a particular time period. In the example portal summary page includes instances of each of the portlets recorded as placed within portal page at a particular point in time. For portlet instance the portlet instance is set to access the content currently available for the data option selected at the particular time period. For portlet instances the portlet instance is set to display the content stored for the portlet at the particular time period. Thus a user may select to view a summary of instances of portlets placed in a portal page at a particular time and either access current content for the data option selected at the point in time or access the content that was displayed in the portlet at the point in time.

Referring now to a block diagram illustrates one example of a portal summary page for portal usage at different times over a particular time period. In the example within a first portal page displayed within an interface that facilitates tabbed windows for rendering portal pages a first portal page group A is illustrated as depicted at reference numeral . The portal page illustrated for the tab depicted at reference numeral includes financial portlet instances and a spreadsheet portlet instance and a search portlet . Each of financial portlet instances and and spreadsheet portlet instance are instances of database driven portlets and include a menu of selectable data options respectively illustrated at reference numerals and . In alternate embodiments additional or alternate types of selection interfaces from the menu selections may be implemented. For example data options may be selectable from multiple selectable words or links displayed within a portlet instance.

In the example those portlet instances which are recordable according to user preferences are marked with a graphical indicator as illustrated by graphical indicators and . Portal summary preferences for example may specify that only those portlets which are database driven and therefore include dynamically generated content are to be monitored and the usage of stored. In the example portlet instances and are instances of database driven portlets which dynamically generate content based on the current data specified for a selected data option. In contrast a search portlet instance with a search entry interface into which a user may enter any term is not an instance of a database driven portlet and is not marked as being recorded. In other embodiments usage of portlets that are not database driven such as search portlet may be recorded. In addition in other embodiments graphical indicator and or separate graphical indicators may be updated within portlet instances to indicate the usage of the portlet instance has been saved.

In the example portal status recorder records the portal usage within the portal page as illustrated with reference to multiple records of portal status database . Portal status recorder may determine from portal summary preferences user inputs and other specifications which portal usage to record.

For example portal status recorder is directed to periodically record the currently selected portlet data options. In the example the period is every fifteen minutes as illustrated by record recorded at 10 10 00 and record recorded at 10 25 00. Although not depicted in each of record and record the current data options selected within the placed recordable portlets are recorded.

In addition for example portal status recorder is directed to record each time a portlet instance is added to a portal page or withdrawn from a portal page. In the example when financial portlet instance is added to the portal page record records the time the portlet instance was added and the data option of option B selected within the portlet instance.

Further for example portal status recorder is directed to record the content within portlet instance responsive to the user selection of save option using cursor . As illustrated within portlet instances and save options and allow a user to select to save the contents of each of these portlet instances individually. In the example when the user selects to save the content of portlet instance within portal status database or another database that the user selects record within the selected database includes an identifier for portlet instance the time of saving the content the content itself and the data option selected within portlet instance .

Subsequent to portal status recorder storing records of portal usage in portal status database a user may request to view a summary of portal usage at different points during a range of time. In the example the user selects to view a summary of portal usage during a time range from 10 00 00 to 10 20 00. Records and are relevant to the search period range.

As illustrated summary portal generator generates a new summary portal page within the display area. Using cursor a user may select between portal page and summary portal page by selecting one of the tabs within a tab interface . In additional or alternate examples summary portal generator may open a separate window for displaying summary portal page . In addition in additional or alternate examples summary portal generator may open summary portal page within the browser or other interface at the client system where the client system interface specifies the interface for selecting between multiple portal pages.

In particular summary portal generator generates summary portal page with a first selection of portlet instances representative of the portlets placed within portal page and the data options selected for those portlets as recorded in record . For example summary portal page includes financial portlet instance financial portlet instance and spreadsheet portlet instance which are set to option A option B and option C respectively reflective of the portlet placement and data option selections at 10 10 00 when portal status recorder recorded the portal usage in record and reflective of the portlet addition at 10 13 40 when portal status recorder recorded the portal usage in record . Each of financial portlet instance financial portlet instance and spreadsheet portlet instance include the current dynamically generated content for the data option selections recorded in record of option A option B and option C respectively.

In addition summary portal generator generates summary portal page with a second selection of portlet instances displaying the content recorded in record . For example summary portal page includes financial portlet instance which includes the saved content for data option A reflective of the portlet instance content at 10 15 10 when portal status recorder recorded the portal usage in recorder .

In the examples of records and stored within portal status database or one or more other databases selected by a user or portal summary controller additional or alternate data that is available or analyzed may be stored with each of the records and displayed in the summary. For example a record may include content of a portlet and a summary of the stored content.

In addition in the example of summary portal page in other examples the user may select or summary portal generator may automatically generate a summary portal page reflective of only particular types of portal usage records. For example summary portal page may only reflect recorders with portlet placement and data options selected or may only reflect records with portlet content stored.

Further it is important to note that in another example the summary portal page may be generated at a particular point in time and then be set for summary portal generator to automatically update summary portal page each time portal status recorder records a new record in portal status database .

With reference now to a block diagram illustrates one example of a portal summary selection interface through which a user may select the portal usage to apply when specifying portlet instances within a summary portal page. In the example of a portal summary selection interface facilitated by portal summary selection interface controller a user may select from a list of records of portal usage stored in portal status database as illustrated in the list at reference numeral . In particular as illustrated in the example the user may first select to view a filtered selection of the records of portal usage stored in portal status database by selecting a filtering criteria from a pull down menu using a cursor or other input which enables selection from a pull down list. In the example a user has selected to view all records within portal status database which include instances of a financial portlet. As illustrated the examples of selectable records within portal status database which include instances of a financial portlet include time based records of saved content for the financial portlet and saved option selections for the financial portlet. From among the filtered list illustrated at reference numeral a user may further select which of the records to include within a summary portal page by individually selecting records using cursor or other type of input option that enables selection from the list of records.

While the example illustrates the list of portal usage from portal status database filtered according to a type of portlet in other example a user may select other filtering criteria such as a time range whether the record is for content whether the record is for an option whether the record indicates the portlets opened at a particular time and other criteria which distinguish a selection of records from among portal status database . In addition while the example illustrates pull down menu as providing the selectable options for filtering records from portal status database in other examples portal summary selection interface controller may implement other types of interfaces through which a user may select filtering criteria.

In addition in the example of portal summary selection interface in addition to or as an alternative to selecting from the list at reference numeral portal summary selection interface controller may include options for specifying the types or categories of records to include within the portal summary page. In the example as illustrated at reference numeral a user may select from options include types of portlet instances such as financial portlets portfolio portlets and news portlets frequency of portlet usage such as quarterly monthly weekly or daily and may select whether to record all portal usage content usage or data option usage. It will be understood that the category examples depicted at reference numeral are for purpose of illustration of the types of options portal summary selection interface controller may present within portal summary selection interface and are not limiting on the types or formats of criteria a user is enabled to select from to specify the recorded portal usage to include within a summary portal page.

In particular a user may also select an as recorded option to add portlet instances reflecting all or selected types of records within portal status database as the records are recorded by portal status recorder and stored in portal status database . In one example a user may select to open a summary portal page which will provide a summary of each of the portlet content changes throughout a session by selecting the content usage option and option within portal summary selection interface . By updating the summary portal page as the content changes within one or more other portal pages the user may switch to view the summary portal page and view a record of previously displayed dynamic content over a particular time period.

In the example a user may select a save option to select to save selected options for specifying the portlet instances within a summary portal page. In addition upon choosing the save option depicted at reference numeral portal summary selection interface controller may prompt the user to name the selected options for the summary portal page and portal summary selection interface controller saves the selected options as a file or other data storage unit.

Through portal summary selection interface a user may select options for multiple separate summary portal pages and may select to open separate summary portal pages by selecting to open one or more of the saved option files. For example as illustrated the user selects to save options for a summary portal page specified for the portal usage of the content of a financial portlet on Jul. 7 2007 at 10 20 00 and of a financial portlet instance set to data option 1 on Jul. 7 2007 at 9 15 00. The user may later select the saved option file to trigger summary portal generator to create a summary portal page with portlet instances specified according to the saved records.

In addition a user may select options for a summary portal page within portal summary selection interface and select to create the summary portal page through selection of the create option depicted at reference numeral . When the user selects the create option illustrated at reference numeral summary portal generator detects the applicable records from portal status database designated by the user selected options and generates a summary portal page including portlet instances specified according to the applicable records.

In addition through portal summary selection interface a user may select options for multiple separate summary portal pages where the selected options trigger opening separate summary portal pages. For example a user may select an option for a summary portal page with records for the news portlet as recorded daily. A user may further select an option to automatically trigger a summary portal page based on the selected frequency such as triggering a summary portal page each day with portlet instances specified according to the records of the news portlet for the day.

It will be understood that portal summary selection interface may include additional or alternate options. In addition it will be understood that a system administrator or user may specify the types of options to be included within portal summary selection interface . Further a user may select to view portal summary selection interface or portal summary selection interface controller may automatically trigger display of portal summary selection interface periodically or responsive to different conditions.

It is important to note that in addition to portal status recorder monitoring portal usage of one or more portal pages portal status recorder may monitor portal usage of a summary portal page and records of portal usage of a summary portal page may be included within portal summary selection interface for user selection to include in another summary portal page. In one example a summary portal page may include portlet instances specified according to recorded data options from portal status database but the user could specify a preference to record the content accessed for the previously selected data options within the summary portal page and present the summary of the content recordings in the same or an alternate summary portal page.

It is also important to note that in displaying records from portal status database portal summary interface controller may detect which records within portal status database include redundant information and graphically illustrate redundant records within portal summary selection interface . For example if multiple records for a financial portlet include a same data option selection each of the redundant records may be graphically highlighted to show the redundancy. In addition portal summary selection interface controller may include options within portal summary selection interface to combine all redundant records into a single portlet instance within a summary portal page with timestamps displayed with the portlet instance for each of the redundant records.

Referring now to a high level logic flowchart depicts a program and process for recording portal usage. In the example the process starts at block and thereafter proceeds to block . Block depicts the portal summary controller determining whether a trigger to record portal usage is received. The trigger may occur based on a user selection a specified condition being met within portal summary preferences or other events. If the portal summary controller receives a trigger to record portal usage then the process passes to block .

Block illustrates recording portal usage by detecting at least one type of portal usage designated for recording by the trigger. For example the trigger may specify recording a particular portlet instance a particular type of portlet or all portlets. In addition the trigger may specify recording content data option selections or other criteria specifying what to record. Next block depicts storing the recorded portal usage in a record within the portal status database with time stamp and other information and the process ends.

With reference now to a high level logic flowchart illustrates a program and process for generating a summary portal page. In the example the process starts at block and thereafter proceeds to block . Block illustrates the portal summary controller determining whether a trigger to generate a summary portal page is detected. If the portal summary controller detects a trigger to generate a summary portal page then the process passes to block .

Block depicts accessing all applicable records for the summary portal page from the portal status database. In determining applicable records the portal summary controller may prompt the user to select from record options may receive previously selected records may detect record selections or rules for selecting records from the portal summary preferences or may detect applicable records from other events or sources. Next block illustrates generating a summary portal page with portal instances as specified according to the applicable records and the process ends.

Referring now to a high level logic flowchart depicts a program and process for specifying a summary portal page. In the example the process stars at block and thereafter proceeds to block . Block depicts the portal summary controller determining whether an option to specify a summary portal page is triggered or requested. If the portal summary controller detects a trigger to specify a summary portal page then the process passes to block .

Block illustrates displaying at least one selection of records or types of records from the portal status database and an option to save the requested options for user selection within a display interface. In addition as previously described with reference to the display may also include additional filtering options and may include options to automatically trigger summary portal page generation based on selected options.

Next block depicts the portal summary controller determining whether the user has completed the summary portal page specification by selecting to save the selected records or types of records and other selected options. If the user selects to save the selected options then the process passes to block . Block illustrates storing the user selections in a summary portal option file for defining a summary portal page and the process ends.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

