---

title: Management and synchronization of batch workloads with active/active sites OLTP workloads
abstract: A method for managing a plurality of workloads executing on both a primary system and on a secondary system, and synchronizing both a plurality of software data and a plurality of hardware data stored on the primary system with the secondary system is provided. The method may include receiving a region switch request and stopping the execution of the plurality of workloads on the primary system; suspending the replication of the plurality of software and hardware data stored on the primary system with the plurality of software and hardware data stored on the secondary system; and switching the replication of the plurality of software data and the plurality of hardware data that occurs from the primary system to the secondary system to occur from the secondary system to the primary system. The method may further include activating the execution of and synchronizing the plurality of workloads on the secondary system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09582532&OS=09582532&RS=09582532
owner: International Business Machines Corporation
number: 09582532
owner_city: Armonk
owner_country: US
publication_date: 20140825
---
The present application is a continuation of and claims priority under 35 U.S.C. 120 of U.S. patent application Ser. No. 13 970 686 filed on Aug. 20 2013 which is incorporated by reference in its entirety.

The present invention relates generally to the field of workload balancing and more particularly to the management and synchronization of batch workloads with online transaction processing OLTP workloads across Active Active Sites.

Active Active Sites is a network of independent processing systems where each system has access to a replicated database giving each system access and usage of shared multiple workloads. In an Active Active Sites system all requests are load balanced across all available processing capacity. Where a failure occurs on a system another system in the network takes its place. Active Active Sites i.e. A A Sites are designed to provide continuous availability disaster recovery and cross region workload balancing for defined Active Active Sites workloads. Active Active Sites workloads are currently limited to routable online transaction processing OLTP applications and their data objects. Online transaction processing OLTP workloads are comprised of short transactions that perform business operations across one or more database management system DBMS . ACID properties are preserved across those DBMS. Batch workloads are long running processes comprised of DBMS transactions that modify large amount of data and which often use storage outside of the DBMS e.g. files to record the progress of the process for recovery purposes.

Batch processing is an execution of a series of programs jobs on a computer without manual intervention. Jobs are set up so they can be run to completion without manual intervention. As such all input data are preselected through scripts command line parameters or job control language. This is in contrast to online or interactive programs which prompt the user for such input. A program utilizes a set of data files as input processes the data and produces a set of intermediate and output data files. This operating environment is termed as batch processing since the input data are collected into batches of files and are processed in batches by the program. There is currently no Active Active Sites support for batch workload distribution since batch jobs are typically local to a region. However since batch workloads can target the same data objects as OLTP workloads it may be beneficial to consider batch workloads in all planned and unplanned Active Active Sites workload and or region switches.

A method for managing a plurality of workloads executing on both a primary system and on a secondary system and synchronizing both a plurality of software data and a plurality of hardware data stored on the primary system with the secondary system is provided. The method may include receiving a region switch request and stopping the execution of the plurality of workloads on the primary system suspending the replication of the plurality of software and hardware data stored on the primary system with the plurality of software and hardware data stored on the secondary system and switching the replication of the plurality of software data and the plurality of hardware data that occurs from the primary system to the secondary system to occur from the secondary system to the primary system. The method may further include activating the execution of and synchronizing the plurality of workloads on the secondary system.

Detailed embodiments of the claimed structures and methods are disclosed herein however it can be understood that the disclosed embodiments are merely illustrative of the claimed structures and methods that may be embodied in various forms. This invention may however be embodied in many different forms and should not be construed as limited to the exemplary embodiments set forth herein. Rather these exemplary embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of this invention to those skilled in the art. In the description details of well known features and techniques may be omitted to avoid unnecessarily obscuring the presented embodiments.

Embodiments of the present invention relate generally to the field of workload balancing and more particularly to management and synchronization of batch workloads with Active Active Sites OLTP workloads. The following described exemplary embodiments provide a system method and program product for managing and synchronizing of batch workloads with Active Active OLTP workloads.

Active Active Sites A A Sites are designed to provide continuous availability disaster recovery and cross region workload balancing. However workload distribution support is not currently provided for batch jobs since batch jobs are typically local to a region. Furthermore while Active Active Sites can currently provide software replication for the data objects targeted by batch jobs there is no current support for the synchronization of batch artifacts such as intermediate data files and batch job scheduler states that are critical for the successful re processing of interrupted batch jobs during region switches. These intermediate data files are typically sequential or flat files. Batch job scheduler states are also typically maintained in flat files as well. The aforementioned flat files are not replicated using the software replication components of Active Active Sites however they are replicated between regions using hardware disk replication products for disaster recovery DR purposes. Since software replication and hardware replication are managed separately the Active Active Sites workload data may be inconsistent in certain use cases. Therefore there exists a need for providing the management and synchronization of batch workloads with Active Active OLTP workloads.

According to at least one embodiment of the present invention batch workloads that are running at the time of a planned or unplanned workload or region i.e. site switch may be restarted i.e. resumed at the job step prior to failure at the alternate region and re synchronized with OLTP workloads to resolve any data inconsistency.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present disclosure. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The following described exemplary embodiments provide a system method and program product for the management and synchronization of batch workloads with Active Active OLTP workloads. Additionally embodiments of the present invention may ensure applicable batch workloads that are running at the time of a planned or unplanned workload or region switch may be restarted i.e. resumed at the job step prior to failure at the alternate region and re synchronized with OLTP workloads to resolve any data inconsistency.

Referring to the hardware that may be used in a networked computer environment with a failover model to manage and synchronize Active Active Sites workloads is depicted. Active Active Sites A A Sites are designed to provide continuous availability disaster recovery and cross region workload balancing. According to at least one embodiment of the present invention the current environment of a software data replication i.e. software replication as depicted in is utilized in addition to the utilization of a hardware data replication i.e. disk replication which will be explained in detail with respect to and .

Currently as depicted in A A Sites including the active standby configuration only support A A Sites workloads. A A Sites workloads are workloads that support OLTP against DBMS such as DB2 IMS and or VSAM and require the ability to perform planned and unplanned region switches in seconds. In Active Active Sites the DBMS are synchronized using software replication. DB2 is a relational model database server developed by IBM Information Management System IMS is a transaction and hierarchical database manager for critical online applications developed by IBM and virtual storage access method VSAM is an IBM disk file storage access method. Software replication uses DBMS log capture transaction replay technology for synchronizing the DBMS across regions.

The networked computer environment may include a computer with a processor and a data storage device that is enabled to run a software program . The networked computer environment may also include server computers and that are enabled to run Active Active Sites such as DB2 replication IMS replication and or VSAM replication. The client computer may issue transactions via a communication network to a workload distributor . The workload distributor is software and or hardware that balances the workload distribution and for each transaction may determine how the workload should be distributed to the regions. As such the workload distributor may interact with server and as well as controller . Server and server may be separated by unlimited distances running the same applications and having the same data. As such servers and will replicate with each other to ensure cross region or cross site workload balancing and continuous availability and disaster recovery.

The networked computer environment may include a plurality of client computers only one of which is shown. The communication network may include various types of communication networks such as a wide area network WAN local area network LAN a telecommunication network a wireless network a public switched network and or a satellite network.

The client computer may communicate with workload distributor via the communications network . The workload distributor may execute computer instructions for continuous availability across multiple regions or regions at unlimited distances. The one or more workload distributors may operate in any type of environment that is capable of executing a software application. One or more workload distributors may include a high speed computer processing device such as a mainframe computer or router to manage the volume of operations governed by an entity for which a continuous availability across multiple region or sites at unlimited distances process is executing. The one or more workload distributors may be part of an enterprise e.g. a commercial business that implements the continuous availability across multiple regions or sites at unlimited distances.

The system depicted in includes one or more regions such as region A where server resides and region B where server resides. Each of the regions region A and region B includes one or more systems executing one or more workloads. The workloads include transaction processing applications database applications queue management operations. Each of the regions includes one or more hardware devices such as servers and and or software such as workload distributor for managing and distributing network traffic among the one or more systems.

The system depicted in additionally includes a software data replication module . The replication module replicates data i.e. software replication for each of the workloads between region A and region B. The system depicted in further includes a controller module . The one or more controller modules control the operation of various components such as the one or more workload distributors as described in more detail below.

The workload distributors and the regions region A and region B may be communicatively coupled via one or more networks . The networks may be any type of known network including but not limited to a wide area network WAN a local area network LAN a global network e.g. Internet a virtual private network VPN an intranet and a telephone network. The networks may be implemented using a wireless network or any kind of physical network implementation known in the art. The regions such as region A and region B may be coupled to the one or more workload distributors through multiple networks e.g. intranet and Internet so that not all of the regions are coupled to the one or more workload distribution modules through the same network.

In the current environment transactions may be distributed to one or more of the regions through the one or more workload distributors . Additionally users of various systems executing at the one or more regions such as region A one and region B may initiate the transactions . Also in the current environment transactions may be transmitted from systems outside of the regions such as computer and the workloads are routed within one or more of the regions by the workload distributor .

It will be understood that the execution of continuous availability across multiple regions at unlimited distances system and methods described in may be implemented as modules in hardware software executing on general purpose hardware or a combination thereof. Although only two regions are depicted in it will be understood that the number of regions in is limited for clarity and that in an embodiment any number of regions may be implemented. In addition in embodiments any geographic distance may separate the regions. Furthermore although the one or more workload distributor may be depicted as existing in one or more of the regions directly it will be understood that in an embodiment the one or more workload distributors may be located outside of the regions.

The communications network may include connections such as wire wireless communication links or fiber optic cables. As will be discussed with reference to server computers may include internal components and external components respectively and client computer may include internal components and external components respectively. Client computer may be for example a mobile device a telephone a personal digital assistant a netbook a laptop computer a tablet computer a desktop computer or any type of computing devices capable of running a program accessing a network and accessing a database.

As previously explained according to at least one embodiment of the present invention the current environment of software data replication i.e. software replication as depicted in is utilized. Furthermore the current environment for A A Sites as depicted in supports only A A Sites and DBMS such as DB2 IMS or VSAM and as such there is no support for non A A Sites workloads such as batch workloads. The management and synchronization of batch workloads with Active Active OLTP workloads is described in more detail with respect to and . It should be appreciated that provides only an illustration of one implementation and does not imply any limitations with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made based on design and implementation requirement.

With respect to hardware data replication i.e. disk replication with software data replication i.e. software replication of A A Sites is deployed across Region A and Region B . Although embodiments of the present invention may be implemented on different platforms IBM System z may be used as one example. Additionally embodiments of the present invention may be implemented on a single system or on a systems complex. Systems complex i.e. a sysplex or system in a mainframe allows authorized components in up to 32 logical partitions LPARs to communicate and cooperate with each other using the cross system coupling facility XCF protocol. In mainframes a cross system coupling facility XCF is a component of z OS that manages communications between applications in a sysplex or system. Parallel sysplex also referred to as a system is a cluster of mainframes acting together as a single system image with z OS. Used for disaster recovery parallel sysplex combines data sharing and parallel computing to allow a cluster of systems to share a workload for high performance and high availability. Geographically dispersed parallel sysplex GDPS is an extension of parallel system of mainframes located potentially in different cities Sites or regions. GDPS includes configurations for single region or multiple region configurations. Peer to peer remote copy PPRC is a protocol to replicate a storage volume to another control unit in a remote region. Synchronous PPRC causes each write to the primary volume to be performed to the secondary as well and the I O is only considered complete when update to both primary and secondary have completed.

GDPS PPRC is based on synchronous data mirroring technology PPRC that may be used on mainframes that are a limited distance apart. In a two system model both regions may be administered as if they were one system. In the event of a failure of a system or storage device recovery can occur with limited or no data loss automatically.

For example in a primary system such as System A may reside in Region A either in Region A Region 1 if a single region system or GDPS PPRC or across Region A Region 1 and Region A Region 2 if a multi region system or GDPS PPRC . A secondary system such as System B may reside in Region B either in region B Region 1 if a single region system or GDPS PPRC or across Region B Region 1 and Region B Region 2 if a multi region system or GDPS PPRC . There may be two A A Sites workloads Workload A and Workload B in the active standby configuration with the active instances of the workloads executing on System A in Region A and the standby instances of the workload executing on System B in Region B . Additionally there may be non A A Sites workloads executing on System A and or System B such as system or batch workloads.

Software replication such as DB2 Q replication may keep the A A Sites workload s data almost in synch across System A and System B . Hardware replication i.e. disk replication may mirror all the data i.e. the A A Sites workload data and non A A Sites workload data from Region A to Region B for System A and from Region B to Region A for System B . According to at least one embodiment of the present invention disk replication may be symmetric however it is not required. For example the data for System A in Region A may be disk replicated but the data for System B in Region B may not be replicated. Furthermore according to at least one embodiment of the present invention the disk replication may be between Region A and Region B however the data may be replicated to another region. For example data may be disk replicated from Region A to Region C not depicted . However for example purposes only a symmetric disk configuration for System A and System B and disk replication between Region A and Region B may be assumed.

According to one embodiment of the present invention when there is a request for a planned region or workload switch for System A GDPS A A may perform the following A A Sites workloads may switch from using the active instances of a workload i.e. server on System A in Region A to the standby instance of a workload on System B in Region B . The switch may be initiated by an operator by clicking on a route button or initiating a region switch script on the GDPS A A GUI. This switch may typically take approximately one minute.

Non A A Sites workloads which may be optional may provide the capability to restart System A and its associated workload off the secondary mirrored volumes in Region B . The GDPS script capability may be used to provide this capability. The script may be initiated by the operator. The script may stop System A and its associated workload i.e. server in Region A reverse disk replication from Region A to Region B to Region B to Region A and restart System A and its associated workloads in Region B . The System A restart may typically take approximately one hour. Additionally when System A is restarted in Region B the former active workload instances of active standby and or active query configurations i.e. running on server are restarted and become the standby instances of the workloads. Similar processing may take place for a planned or unplanned region switch for System B .

In another embodiment of the present invention when there is request for an unplanned region or workload switch for System A GDPS A A may perform the following A A Sites workloads may switch from using the active instances of a workload i.e. server on System A in Region A to the standby instance of a workload on System B in Region B . The switch may be automatic or may require operator authorization based upon policy. The switch may typically take approximately one minute.

Non A A Sites workloads which may be optional may provide the capability to restart System A and its associated workload i.e. server off the secondary mirrored volumes in Region B . GDPS A A for A A Sites workloads may provide the ability to automatically or manually based upon policy to perform unplanned region switches and comparable support for non A A Sites workloads. The GDPS script may be used to provide this capability. If the new policy specifies automatic a predefined non A A Sites unplanned region switch script may automatically be initiated and if it specifies prompt an operator prompt may be issued requesting authorization. Alternatively an administrator may manually initiate the unplanned non A A Sites region switch script. The switch script may restart System A and its associated workloads in Region B . The System A restart may typically take approximately one hour. Additionally when System A is restarted in Region B the former active workload instances of active standby and or active query configurations i.e. running on server are restarted and become the standby instances of the workloads. Similar processing may take place for a planned or unplanned region switch for System B .

Examples of the supported use cases that involve management of the disk replication environment using GDPS A A interfaces may include the following 

Referring now to an operational flowchart illustrating the steps to synchronize the restart of A A Sites managed OLTP workloads with batch workloads following a planned or unplanned region switch operation for System A i.e. the primary system . This may be an example of a typical planned maintenance outage. The Region Switch Use Case illustrates the new capability to re synchronize the data replicated using software data and hardware data replication now managed together by Active Active Sites allowing the batch job to be successfully restarted at the recovery region. may be explained with the aide of .

At all A A Sites workloads on System A are quiesced i.e. will not accept new work . For example all the OLTP transactions i.e. the workloads coming in to System A are tapered off and eventually disabled. After quiescing the incoming transactions to System A the software replication pipe is drained at . As such the outstanding transactions are processed. This may be a combination of sending the incoming transactions to the workload distributor i.e. the router that sits in front as well as to a backend database. Therefore the in flight transactions are drained in the database systems themselves i.e. processed in a managed way.

Then at the A A Sites workloads are switched from Region A to Region B . For example there may be an actual switch of the OLTP workloads from server in Region A to server in Region B . Next at System A is stopped in Region A and at System B replication in Region A is suspended. Therefore during this time there is no disk replication from System B in Region B back to Region A .

At the disk replication is allowed to reach a quiesce point. In other words A e.g. that sits in Region A and the copy of A e.g. that resides in Region B i.e. A Prime are in synch. For example with respect to both the original server residing in Region A and the secondary mirrored volumes of server residing in Region B would be in synch.

At the System A disk replication is suspended and reversed i.e. switched with no copy. A Prime i.e. which is an identical clone of A is physically located in Region B now and may become the primary. Therefore at System A is restarted in Region B . A prime copy of System A in Region B i.e. a batch copy of System A in Region B is now started and the original System A in Region A is still suspended.

Next at the software replication from System B to System A is started. In other words all the OLTP traffic in System A of Region B and System B of Region B is handled in Region B . The original active standby pairing between Region A System A and Region B System B is now wholly contained in Region B . As such at the A A Sites workloads batch component and other non A A Sites workloads on System A are restarted and therefore ready to receive batch workload requests.

The following may be a sample script that may be used to execute a planned region switch operation for System A 

Similarly in an unplanned or disastrous outage in Region A a customer may be able to restart their batch jobs from the point in time the batch jobs left off before the disaster occurred. The restart may occur as soon as one hour from the time of the unplanned outage which is a significantly shorter timeframe than the existing state of the art method which cannot guarantee recovery at all.

Data processing system is representative of any electronic device capable of executing machine readable program instructions. Data processing system may be representative of a smart phone a computer system PDA or other electronic devices. Examples of computing systems environments and or configurations that may represented by data processing system include but are not limited to personal computer systems server computer systems thin clients thick clients hand held or laptop devices multiprocessor systems microprocessor based systems network PCs minicomputer systems and distributed cloud computing environments that include any of the above systems or devices.

Workload balancing program may be implemented on an electronic device such as user client computer and network server computers and . User client computer and network server computers may include respective sets of internal components and external components illustrated in . Each of the sets of internal components includes one or more processors one or more computer readable RAMs and one or more computer readable ROMs on one or more buses and one or more operating systems and one or more computer readable tangible storage devices . The one or more operating systems and software program in client computer are stored on one or more of the respective computer readable tangible storage devices for execution by one or more of the respective processors via one or more of the respective RAMs which typically include cache memory . In the embodiment illustrated in each of the computer readable tangible storage devices is a magnetic disk storage device of an internal hard drive. Alternatively each of the computer readable tangible storage devices is a semiconductor storage device such as ROM EPROM flash memory or any other computer readable tangible storage device that can store a computer program and digital information.

Each set of internal components also includes a R W drive or interface to read from and write to one or more portable computer readable tangible storage devices such as a CD ROM DVD memory stick magnetic tape magnetic disk optical disk or semiconductor storage device. A software program can be stored on one or more of the respective portable computer readable tangible storage devices read via the respective R W drive or interface and loaded into the respective hard drive .

Each set of internal components also includes network adapters or interfaces such as a TCP IP adapter cards wireless wi fi interface cards or G or G wireless interface cards or other wired or wireless communication links. A software program in client computer can be downloaded to client computer from an external computer via a network for example the Internet a local area network or other wide area network and respective network adapters or interfaces . From the network adapters or interfaces the software program in client computer is loaded into the respective hard drive . The network may comprise copper wires optical fibers wireless transmission routers firewalls switches gateway computers and or edge servers.

Each of the sets of external components can include a computer display monitor a keyboard and a computer mouse . External components can also include touch screens virtual keyboards touch pads pointing devices and other human interface devices. Each of the sets of internal components also includes device drivers to interface to computer display monitor keyboard and computer mouse . The device drivers R W drive or interface and network adapter or interface comprise hardware and software stored in storage device and or ROM .

Aspects of the present invention have been described with respect to block diagrams and or flowchart illustrations of methods apparatus system and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer instructions. These computer instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The aforementioned programs can be written in any combination of one or more programming languages including low level high level object oriented or non object oriented languages such as Java Smalltalk C and C . The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on a remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet service provider . Alternatively the functions of the aforementioned programs can be implemented in whole or in part by computer circuits and other hardware not shown .

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the described embodiments. The terminology used herein was chosen to best explain the principles of the embodiments the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

