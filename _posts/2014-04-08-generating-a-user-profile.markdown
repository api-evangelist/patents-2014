---

title: Generating a user profile
abstract: An example method for generating a user profile for a user based on a static profile and a dynamic profile of the user includes compressing dynamic rules into aggregated rules for validation. The dynamic rules associated with a particular user are matched to one or more validated aggregated rules to generate the dynamic profile for that user. The static profile for the user is generated for the user based on factual user information and historical transactional data for the user. The static and dynamic profile are then combined to form the user profile.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483778&OS=09483778&RS=09483778
owner: Facebook, Inc.
number: 09483778
owner_city: Menlo Park
owner_country: US
publication_date: 20140408
---
This application is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 13 337 468 filed 27 Dec. 2011 which is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 12 553 522 filed 3 Sep. 2009 issued as U.S. Pat. No. 8 103 611 which is a divisional under 35 U.S.C. 120 of U.S. patent application Ser. No. 11 074 157 filed 7 Mar. 2005 issued as U.S. Pat. No. 7 603 331 which is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 09 554 383 filed 12 May 2000 issued as U.S. Pat. No. 6 871 186 which is a national phase application under 35 U.S.C. 365 of PCT Patent Application No. PCT US98 24339 filed 13 Nov. 1998 which is a continuation in part under 35 U.S.C. 120 of U.S. patent application Ser. No. 08 970 359 filed 14 Nov. 1997 which issued as U.S. Pat. No. 6 236 978 each of which is incorporated herein by reference.

The present invention relates to a system and method for dynamic profiling of a user in one to one marketing applications.

Many organizations collect historical data about every transaction that every customer performs with that organization. Such historical transactional data is useful in various one to one marketing applications such as e.g. shopping assistant application and dynamic Web site content presentation. A number of problems have been encountered in these marketing applications. One such problem relates to the creation of highly pertinent and comprehensible individual user profiles that are derived from the historical transactional data. In addition it is also important to have the ability to utilize these user profiles when the marketing application obtains a current status of the user. If the user profiles are generated in a highly relevant and comprehensible manner with respect to a specific user the applications would be able to understand that user s needs better and more efficiently serve that user.

There are two basic types of user profiles that can be generated a static profile and a dynamic profile. The static profile contains all of the factual information of the user including for example demographic data e.g. age sex address psychographic data e.g. personality traits and habits purchasing preferences e.g. what does the user purchase in an average week etc. Static profiles are generated using conventional methods that are known to those of ordinary skill in the art.

Dynamic profiling information includes specific rules describing the user s behavior. For example such rules may include whenever user X travels to France user X often buys expensive wines in Paris or when user Y shops on a weekend and did not buy any groceries for at least 3 days user Y usually purchases a large amount of groceries. These rules can be generated with transactional data for each user using various rule generation methods that are generally known to those of ordinary skill in the art. For example one such conventional rule generation method is implemented in a rule learning system which generates behavior rules for individual customers. See T. Fawcett et al. Combining Data Mining and Machine Learning for Effective User Profiling Proceedings of the KDD 96 Conference 1996 pp. 8 13 .

In order to obtain an extensive understanding of the user it is desirable to build both static and dynamic profiles for that user. Although the generation of static profiles is generally straight forward generating dynamic profiles for a large number of users may present potential problems. Many transactional systems e.g. airline reservations systems credit card transactional systems and or Web site management systems generate a various number of transactions for each user. For example some systems and or applications may only generate a dozen transactions per each user which may not be enough to construct a statistically significant and reliable set of rules for a specific user. Even if there are enough transactions to construct a statistically significant set of rules these rules should still be verified for their pertinence to the user. Since there can be a large number of users and since the rules generated for each user may not be reliable there is a problem of verifying a large set of generated rules for the users. For example in a typical system facilitating 5 million users and providing about 100 rules per user approximately 500 million rules would have to be either stored or processed. Generally many of these rules are either not useful or insignificant. Thus due to the amount of these generated rules a rule validation process becomes considerably complicated. Furthermore checking the usefulness of these rules by hand becomes practically impossible.

Conventional systems have not successfully provided detailed solutions to constructing reliable dynamic profiles for the users. One such system described in T. Fawcett et al. Combining Data Mining and Machine Learning for Effective User Profiling Proceedings of the KDD 96 Conference 1996 provides a limited generation of user s dynamic profiles. However this conventional system does not provide a comprehensive method and system for analyzing a large number of dynamic rules and thus does not provide adequate assistance for the user.

The system and method according to the present invention generates dynamic profiles and thereafter transforms the dynamic profiles for various users into aggregate rules. In particular similar individual rules are compressed into a smaller number of aggregated rules. Because the total number of aggregate rules is substantially smaller than the total number of individual rules for all of the users the aggregate rules can be examined manually by a human expert. This expert examines these aggregated rules and selects only rules based on the expert s preferences. Only the individual rules that correspond to the aggregated rules selected by the human expert are retained in the user s profiles. Since the selected aggregate rules were selected by the human expert a creation of more accurate dynamic profiles is further assured. The system and method according to the present invention thus provide a more useful set of individual rules for each user.

The dynamic profiles generated with the system and method according to the present invention can be used in various systems e.g. Personal Shopping Assistant and Personal Intelligent Digital Assistant to provide better recommendations to the users as to which products and services each individual user should utilize. Accordingly the user would be more satisfied with these systems and the suggestions that these systems provide to the user. In addition Dynamic Web Content Presentation systems can include the system and method according to the present invention because the users will be provided with better quality profiles to facilitate the provision of more pertinent Web pages to the user visiting a particular Web site. Fraud detection systems may also include the system and method according to the present invention thus providing higher quality user profiles which may facilitate better fraud detection. Other applications for the system and method according to the present invention are also conceivable to those of ordinary skill in the art.

In addition the system and method according to the present invention utilizing the above described rule compression method is not limited to a construction of pertinent dynamic profiles and can be used in a vast variety of applications e.g. construction of high quality association rules in data mining applications . Other usages of the system and method according to the present invention are also conceivable to one having ordinary skill in the art.

In another embodiment of the system and method according to the present invention the user rules are validated using a processing device. These user rules are retrieved from a storage device. The user rules are then separated into at least one subset of a user set. Then it is determined if particular rules of the at least one subset is one of acceptable unacceptable and undecided based on a defined criteria. If the particular rules of at least one subset are acceptable the particular rules of the at least one subset are provided to a corresponding user.

When constructing good dynamic profiles validation is an important consideration. It is possible to construct dynamic profiles for individual customers using any existing data mining methods. For example an exemplary user rule may indicate that whenever a user buys milk in the evening this user also buys onions. It is difficult to ascertain if this rule adequately describe the user s behavior. In fact it may be a statistical coincidence. Therefore it is preferable to allow the user or a human expert to examine groups of the user rules.

Certain exemplary embodiments of exemplary architectures systems apparatus methods and computer readable medium according to the present disclosure can provide at least one recommendation to at least one of one or more users and one or more applications using multidimensional data. According to the exemplary embodiments of the present disclosure it is possible to access the multidimensional data which can define a multidimensional space defined by a Cartesian product of the dimensions. The multidimensional space can have at least three dimensions and each of the dimensions can be capable of i providing variable information and ii having a type that Is different from a type of another one of the dimensions. It is also possible to retrieve information from data associated with the multidimensional space. Further at least one recommendation can be generated based on the retrieved information. Further according to certain exemplary embodiments at least one of the dimensions can include profiles.

In many customer related applications e.g. banking credit card Internet marketing applications etc. user profiles for each user or customer are generated to better understand the user i.e. user s purchasing trends business travel locations types of favorite restaurants etc. . A flow diagram of an exemplary process for building user profiles is illustrated in . In particular information regarding e.g. the user s past purchasing history is retrieved in step . In step user profiles are built and the process completion is signaled in step . User profiles can preferably be generated using static profiles and dynamic profiles. A more detailed flow diagram of the process of building user profiles represented in by step is illustrated in . The static profile includes user static characteristics e.g. name of the user address telephone number date of birth sex income etc. . The static profile is built in step using methods known to one having ordinary skill in the art. After the static profile is built this static profile is stored in a separate file based on the data obtained from the CUST and TRANS files as discussed below. The CUST file has the following format 

where Cust ID is a user identifier that provides an index value for locating a specific user in the CUST file. A A. . . Aare fields describing the characteristics of the user e.g. sex income education etc. .

The dynamic profile is built in step . A dynamic profile consists of rules or patterns characterizing a user s behavior e.g. if user X shops in the evening on weekdays and purchases diapers user X also buys beer if user X shops on weekdays user X usually buys a small number of items if user X travels to New York on business user X prefers to have lunches at expensive seafood restaurants. The rules are derived from a set of transactions pertaining to a particular user. These transactions may be for example credit card transactions airline reservations and Web site visit transactions and are stored in the TRANS file which has the following format 

where Trans ID corresponds to a unique index key that identifies the transaction being performed by the user. Fields C C . . . Cidentify a particular transaction e.g. date of transaction time of transaction amount spent location of the transaction etc. . The field Cust ID corresponds to an index key pointing to a particular user having a respective record in the CUST file. Thus the user performing a particular transaction can be identified. Other file formats can also be utilized as can be understood by those having ordinary skill in the art. For example the user specific information can also be stored in several files rather than in a single CUST file thus the CUST file can be normalized by splitting the CUST file into several smaller files . Using different file formats does not affect the operability of the system and process according to the present invention. After the dynamic profile for a particular user is generated this dynamic profile is validated in step .

After the validation of the dynamic profile the static and dynamic profiles are combined to form a combined user profile in step . The following exemplary information can be obtained from the TRANS file to be provided into the static profile when the static and dynamic profiles the CUST and TRANS files are combined a an average transaction amount for user X b user X s favorite brand of beer is e.g. Heineken c user X shops mostly on week ends.

While it is relatively uncomplicated to construct user static profiles it is much more difficult to construct quality dynamic profiles. Rules provided in the dynamic profile are generated for each user. Because a user may perform only a small number of transactions the corresponding rules generated may be statistically insignificant unreliable and irrelevant. In many systems e.g airline reservations systems credit card transactional systems or Web site usage systems it is possible to have from as little as a few dozen to a few hundred transactions per each user. The rules generated with such amounts of data are often ineffective and insignificant.

The total number of generated rules can also be very large. For example in a system serving 5 million customers and generating an average of 100 rules per user a total number of generated rules can reach 500 million. Many of the 500 million generated rules are of questionable quality and usefulness. In order to filter the rules having such undesirable characteristics a human expert must decide which dynamic rules should be stored and which dynamic rules should be discarded. It would be impossible for the human expert to manually check the usefulness of all 500 million rules.

Quality dynamic profiles are generated by validating dynamic rules generated using various rule induction methods. Ultimately however the human expert validates the machine generated rules to determine their usefulness in various systems. Since most of the systems generate too many rules to be manually examined by human experts the system and method according to the present invention facilitates compressing individual rules into aggregated rules. After the individual rules are compressed into the aggregated rules the aggregated rules are evaluated by a human expert who selects only the rules that the expert believes are pertinent for the user. In addition it is possible in some applications that the respective user can be such a human expert and examining only the rules that are pertinent to the respective user .

It can be assumed that user specific rules have been already created using methods known to those having ordinary skill in the art. For example individual user rules can be generated using an induction software system e.g. CART Breiman et al. 1984 C4.5 Quinlan 1993 or RL Clearwater Provost 1990 . The structure of these rules has preferably the following form C aC a . . . C a C a 1 where C C . . . C Care fields from the TRANS file a a . . . a aare constants and are relational operators e.g. 

Next it is important to remove useless individual rules from the total number of rules. A process to remove these useless individual rules is shown in . In step individual rules are provided for processing. In step several similar individual rules of the form 1 are compressed into one aggregated rule of the form A b A b . . . A b C a C a . . . C a C a 2 where A . . . Aare the fields in the CUST file b . . . bare constants and are relational operators e.g. 

Additional fields e.g. Sex etc. unlike other fields in the above exemplary rule are fields from the CUST file. Individual rules relating to different users can be compressed into the same aggregated rule for a group of users. Thus the rule compression can preferably be implemented for different users. The number of aggregated rules of the form 2 generated by the compression algorithm should be much smaller than the initial number of individual rules. Then in step the aggregated rules can be validated one by one by the human expert including a particular user to determine which rules are appropriate for that user. After the user validates the aggregated rules this user selects the set of preferred aggregated rules in step . Only the individual rules corresponding to the aggregated rules selected in step are retained in the user s dynamic profile step to provide validated individual rules step to the user.

The exemplary rule compression process described below in detail then generates rules e.g. fuzzy rules of the form 2 . These fuzzy rules utilize fuzzy linguistic variables for the fields from the CUST and TRANS files which are generally known to those having ordinary skill in the art. Each fuzzy linguistic variable has a corresponding identifier e.g. Income Transaction Amount etc. each being capable of providing a range of values e.g. natural numbers between 0 and 1 000 000 a set of terms e.g. low medium high etc. and a membership function that assigns a membership value e.g. between 0 and 1 to each value from the domain of the fuzzy linguistic variable for each range of values. In addition the non ordered fields in the CUST and TRANS files e.g. Product Purchased have assigned classification hierarchies for example the field Product Purchased can include standard classification hierarchies used in marketing. Thus UPCs e.g. can be grouped into brands brands can be grouped into product categories etc.

Exemplary outputs generated by the Rule Compression Process are a set of preferably fuzzy aggregated rules having the form 2 .

The steps of the exemplary rule compression process shall now be described in detail with reference to . In step all the individual rules of the form 1 are grouped into sets of similar rules i.e. rules having the same structure . The maximal number of such similar groups is 4 where n is the number of fields in the TRANS file. For example if n 10 then there can be at most 1 2similar groups. However this number is typically much smaller in practice. Each set of similar rules forms a set of points in a k dimensional space generated by the individual rules described above. In step a group of clusters of the generated points is determined using any of the cluster computation methods known to those of ordinary skill in the art. In step starting from the first cluster of the group of clusters determined in Step an approximate rule for that cluster is determined in Step . The approximate rule is determined as a function of the points in the cluster. For example a point in the cluster may be the center of the cluster. The center can be identified as a point that minimizes the sum of distances from a particular point to other points in the cluster. For example given

In step the next cluster is selected and the procedure described with respect to step is repeated. In step it is determined whether all of the clusters in the group of clusters have been evaluated. As an illustration if cluster Clustcontains three 3 dimensional points 0 0 1 0 1 0 1 0 1 corresponding to the vertices of a equilateral triangle then the center of this cluster Cis the center of the triangle i.e. the point . Other approaches to defining the center of a cluster can be used. This exemplary rule compression process does not depend on any specific method for defining any center of a cluster C.

Given the set of rules 1 corresponding to the cluster with the center C c c . . . c the corresponding aggregated rule has the form C c C c . . . C cC c 3 which is a representative rule for the cluster of similar rules. For example if the center of the cluster is the following rule is generated C C C . Also for totally ordered fields C standard deviations of the points in that cluster are calculated for that field. For unordered categorical fields C a measure of the deviation of the points is determined in that cluster along the j th dimension from c by using the hierarchical classification for that field .

In step a total number of clusters generated in Step is provided to the user. In step the user is asked if there are too many of the generated clusters for manually inspecting the aggregated rules i.e. the number of generated clusters is greater than a predetermined number . If so the generated clusters are compressed using a cluster compression process described in step . Thereafter there is a smaller number of clusters and corresponding aggregation rules per cluster . The user is asked again in step if there are too many generated clusters for the manual inspection of aggregated rules. If the number of clusters is smaller than the predetermined number for each cluster Cobtained in step or in step a set of users corresponding to the points for that cluster is identified in step . Each point in a cluster corresponds to a first representative rule from the dynamic profile of the user so that all of the users corresponding to the dynamic profile rules from that cluster can be identified. For example CUST IDis defined as a set of values Cust IDcorresponding to the users corresponding to the rules of cluster C. A set of records CUST from the CUST file corresponding to the users of that cluster is identified i.e. having user ID values from the set CUST ID . Thus CUST r CUST r and r.Cust ID CUST ID.

The set of records CUSTform a set of points in m dimensional space where m is the number of fields in the CUST file . These points are separated into clusters using the same techniques as described in step . For each resulting cluster CUST a center is located as explained below. The set of points belonging to that cluster is approximated with a logical statement having the form A b A b . . . A b 4 to form a corresponding condition in step where Aare the fields of the CUST file are relational operators e.g. etc. and bare constants. One way to construct the condition 4 would be by finding the center b b . . . b of the cluster CUSTas described in step and substituting the values of binto the condition 4 also setting all the relational operators to be . Another way to construct this condition 4 is described in A. Motro Using Integrity Constraints to Provide Intentional Answers to Relational Queries Proceedings of the 15th International Conference on Very Large Databases 1989 pp. 237 246 and C. Shum et al. Implicit Representation of Extensional Answers Proceedings of the 2nd International Conference on Expert Database Systems 1988.

In step the first and second representative rules are augmented i.e. expression 4 is augmented with expression 3 . The resulting rule is A b A b . . . A b C c C c . . . C cC c. 5 

For example assume that the center of a cluster is a rule if a user shops in the evening on weekdays and buys diapers the user also buys beer i.e. IF Shopping time evening and Day of week weekday and Purchase diapers THEN Purchase beer . Also assume that most of the users in that cluster are men thus forming the expression 4 where Sex Male . Accordingly the augmented rule is if a male user shops in the evening on weekdays and buys diapers the user also buys beer i.e. IF Sex Male and Shopping time evening and Day of week weekday and Purchase diapers THEN Purchase beer .

Then in step the rules of the form 5 generated in step are converted into fuzzy aggregated rules. In particular each field Aand Cin the form 5 is mapped into a corresponding fuzzy linguistic variable associated with that field. In addition all of the terms in the expression 5 are converted into appropriate fuzzy expressions. For example assume that a non fuzzy term A 20 corresponds to a fuzzy linguistic variable also denoted as A. Further assume that the term set for Ais either low or high and that there is a membership function that assigns the membership value e.g. between 0 and 1 to each value from the domain of fuzzy term Afor each value from the term set. Then it can be determined for which term i.e. low or high the membership value 20 is higher and a corresponding term is assigned. If the membership value is higher for the term low then the expression A 20 is replaced by A LOW.

In step the set of aggregated fuzzy rules generated by the rule compression process is shown to the human expert who selects only the meaningful and useful rules from this set according to user desired criteria.

If constants are substituted for the variables x y and z the terms of the aggregated rules 6 and 7 will contain only equalities and constants. Thus these aggregated rules with the above described substitutions will have respective points in the same 4 dimensional space. If the distance between these two points can be calculated for fixed values of variables x y and z d Clust x z Clust y i.e. if all the attributes are numeric then the distance can be a Euclidean distance if some of the attributes are categorical and unordered the distance can be calculated in terms of how far the nodes are in the aggregation hierarchy defined for that attribute then the distance between clusters Clustand Clustis equal to 

In general let c c c . . . C and c c c . . . c be the centers of two clusters Clustand Clustas calculated in steps through illustrated in where cand care vectors with different dimensions because different rules can have different numbers of terms . The rules corresponding to the centers of these two clusters are extended with e.g. dummy attributes and dummy random variables that form a union of the attributes for clusters Clustand Clust. Assuming that the dummy variables are uniformly distributed over their domains the distances between the two rules for fixed values of random variables can be calculated. Thereafter the random variables are either integrated for continuous random variables or summed for discrete random variable over different values of these random variables. Thus the distance between clusters can be determined using the system and method according to the present invention.

Once the distance between the two clusters is determined the clusters can be merged as follows. In order to perform this operation the size of the cluster should be determined as a part of the Cluster Compression process. The size of the cluster is the measure of how far the points of the cluster are apart from each other. This size can be determined e.g. using the following formula 

The flow diagram in illustrates an exemplary process for compressing clusters. In particular two clusters Clustand Clustare selected in step . There are a number of ways to determine which clusters should be selected in step . The simplest way to select the clusters is in an arbitrary manner. In step the distance between the clusters is determined as discussed above. In step the respective size of each cluster is determined. In step a check is performed to determine if the distance between the clusters d Clust Clust is smaller than the sizes of these clusters e.g. to determine if these two clusters are close enough to each other . If so the clusters should be merged into one cluster in step otherwise the clusters are maintained as separate clusters. In particular an inquiry as to whether two clusters are close enough can be computed in the following manner e.g. 

In deciding which clusters Clustand Clustshould be chosen in step of the cluster compression process distances between e.g. all pairs of clusters can be calculated and condition 8 can be checked to ascertain which clusters should be merged. Other methods to select the clusters for compression can also be used. Furthermore the distance between all the pairs of clusters does not necessarily have to be calculated.

The system according to the present invention can be used in a Personal Shopping Assistant PSA a Personal Intelligent Digital Assistant PIDA and in a dynamic Web content presentation system described below.

A Personal Shopping Assistant PSA system according to the present invention provides recommendations on the products and services that its users should consider purchasing including e.g. suggestions for purchasing at a specific source and at a particular price . An exemplary embodiment of the PSA system according to the present invention is shown in . In particular the system includes a User Transaction Collection and Recording Unit or module a Past Purchasing History Storage Unit or module a User Profile Generation module a State of the World module a User Estimated Purchasing Needs module a Purchasing Recommendations module and the State of the User module .

The User Transaction Collection and Recording Unit collects most of the shopping transactions performed by the user e.g. 80 90 of all the purchases made by the user . The User Transaction Collection and Recording Unit can be implemented as a smart card or as a smart Point of Sales register that records individual items purchased by the user.

Alternatively the user himself can record this information as part of the User Transaction Collection and Recording Unit using some transaction recording systems such as Quicken or Microsoft s Money.

When the user purchases one or more products the User Transaction Collection and Recording Unit records and transmits this information to the Purchasing History Storage Unit where this information is stored as part of the purchasing history of the user. The Purchasing History Storage Unit can be implemented e.g. as a database that records transactions performed by various users in the TRANS file as described above.

Information stored by the Purchasing History Storage Unit is provided to User Estimated Purchasing Needs module . In order to estimate the user s purchasing needs pertinent static and dynamic profiles of the user should be constructed based on the past purchasing histories obtained from the Purchasing History Storage Unit which is performed by the User Profile Generation module . Static profiles include the user s demographic information e.g. age sex marital status particular preferences e.g. user prefers a particular brand of beer and certain purchasing decisions e.g. the user bought a particular automobile in a particular month . Dynamic profiles include a set of rules e.g. if a user goes to France the user often buys perfumes in Paris if user Y visits a Web site from the site Z in the evening user Y does not spend a predetermined amount of time at site Z etc. .

In addition the PSA system maintains information on the current State of the World using the State of the World module which records information e.g. on a broad range of products and services offered by various suppliers and on promotions and discounts run for these products and services. Also the PSA system includes the State of the User module that maintains information about the user obtained from the Purchasing History Storage Unit e.g. the user will be in New York on Jun. 28 1995 because she purchased an airline ticket for that date and destination and various external information e.g. the date time and the user s location if available .

By knowing the purchasing history of a user provided from the Purchasing History Storage Unit the user s profile provided from the User Profile Generation module and the external information about the user provided from the State of the User module the PSA system estimates the user s future purchasing needs using the User Estimated Purchasing Needs module . This Estimated Purchasing Needs module may match the rules specifying which products the user will buy and when with the user s purchasing history. As a result a set of products that the user should consider buying is produced.

Once future purchasing needs are estimated in Step the PSA system will match these needs against a broad range of products and services offered by various suppliers and on the promotions and discounts run for these products and services. This matching process is performed by the Purchasing Recommendation module using conventional methods that are known to those of ordinary skill in the art. For example if the user needs to buy a pair of jeans within the next two months the Purchasing Recommendations module selects the merchants selling jeans e.g the cheapest pair of jeans that fits the use s requirements considering the promotions offered within the next two months by matching to the user profile i.e. the user s purchasing needs . Once the Purchasing Recommendations module matches the user s purchasing needs against the products and services the Purchasing Recommendations module provides purchasing recommendations to the user.

For example based on the past purchasing history of a particular user the PSA service may ascertain that whenever user X goes to France user X often buys perfume in Paris. This rule is stored as a part of the user profile using the User Profile Generation module . In addition the Purchasing History Storage Unit of the PSA service may receive information that the user has purchased a ticket to Paris and in a substantially same time period the State of the World Unit of the PSA service also receives information that e.g. Christian Dior has launched a new line of perfumes that is similar to the brands previously purchased by user X. In addition the State of the World Unit may also receive information that the duty free shop at Charles de Gaulle airport is having a sale on these new perfumes the price being very competitive . Using the above described exemplary information the PSA service using the User Estimated Purchasing Needs module estimates that user X may want to buy these perfumes and sends a message to user X via the Purchasing Recommendation module to consider purchasing the new perfume at the duty free shop at Charles de Gaulle airport.

The success of the PSA service depends primarily on accurate predictions by the PSA service of users future needs. If the user finds e.g. 50 of the PSA suggestions useful the user will probably be satisfied with the PSA service. However if the user finds e.g. only 10 of the suggestions to be useful the user will most likely reject this service. As indicated above in order to make predictions of the user s future needs more accurate it is important to build reliable user profiles. The present invention provides a method and system for generating better dynamic profiles and therefore providing more accurate predictions of the users future needs.

The PSA system illustrated in can be implemented using a first exemplary system shown in and a second exemplary system shown in . The first exemplary system of provides that the User Transaction Collection and Recording Unit is stored on the client side. All other modules from are stored on the server side and are connected to the User Transaction Collection and Recording Unit via a Telecommunication Medium e.g. a telephone line or a wireless communication medium . In the first exemplary system individual user purchasing histories and static and dynamic profiles of these users are stored on the server at a central location e.g. a database and the method and system according to the present invention as described above generates improved dynamic profiles and thus provides better estimated purchasing needs of the users.

The second exemplary system of provides that the User Transaction Collection and Recording Unit the User s Profile Generation Module the Purchasing History Storage Unit the State of the World module the State of the User module and the User Estimated Purchasing Needs module are stored on the client side while the State of the World module and the Purchasing Recommendations module are stored on the server side. In the second exemplary system the user dynamic profiles are validated in Step of by the user since these profiles are stored on the client side and are available to the user for checking and validating . Once module estimates user purchasing needs these estimated user purchasing needs are transmitted via the Telecommunication Medium e.g. a telephone line or a wireless communication medium to the server where the estimated user purchasing needs are matched by the Purchasing Recommendation module to various products and services offered by various suppliers that are stored on the server side . The resulting purchasing recommendations are transmitted back to the client side via the telecommunication medium for the user s consideration.

The PSA service can also be used in a Personal Intelligent Digital Assistant PIDA service as illustrated in . Each user subscribing to this additional service is provided with a Personal Digital Assistant PDA e.g. the remote device or the User Transaction Collection and Recording Unit which is connected to the PSA system e.g. a general purpose computer . The PDA remote device s which includes e.g. a PDA processor a PDA I I port and a PDA input device and the PSA system s which includes e.g. a display device a storage device a PSA processor a PSA I O port and a PSA input device form a client server architecture in which the PDA remote device is a client and the PSA system is a server. The PSA system using the Past Purchasing History Storage Unit e.g. a storage device and the User Profile Generation module the State of the World module the State of the User module the User Estimated Purchasing Needs module and the Purchasing Recommendations module executed by e.g. a processor estimates users future needs and behavior as described above. The PDA device accumulates additional information on the user s current state such as the user s location information preferences and desires e.g. the user is hungry now and wants to eat . This additional information is transmitted from the PDA device to the PSA system via the telecommunication medium e.g. a wireless network fiber optics communication system telephone wired system etc. to be stored using the State of the User module e.g. in the storage device as part of the user s state and is used subsequently for estimating the user s purchasing needs.

For example in order to illustrate how the PIDA service operates assume that it is Tuesday 11 30 am and that user X is driving in his car on I 87 in the Albany region on business and that he indicated through his PDA device that he wants to have lunch. The PDA device records the current state of user X as Tuesday 11 30 am presently driving in user X s car on I 87 in the Albany region travel purpose is business wants to have lunch. This information is sent from the PDA device to the PSA system via telecommunication medium . Based on user X s past purchasing history the PIDA service recognizes that whenever user X is traveling on business he likes to have light lunches at good quality restaurants and that he generally likes sea food. By examining user X s personal profile and by matching the dynamic rule which provides that whenever user X travels on business he prefers light lunches at good quality restaurants with user X s current state user X is currently traveling on business the PSA system can predict that user X prefers a lunch at a good quality restaurant and he wants to eat light food. Next the State of the world module of the PSA system searches for highly rated seafood restaurants in the Albany region. If the PSA system finds any such restaurant user X is provided with restaurant choices e.g. if more than one restaurant is located by contacting user X s PDA device . If the PSA system does not find first choice restaurants conforming to the user X s preferences the PSA system provides second choice restaurants to user X.

User needs are estimated based on purchasing history the user s static and dynamic profiles and the current state of the user sent to the PSA system from the PDA device . When the needs of the user are estimated e.g. the user wants to buy a perfume in Paris or wants to eat at a good seafood restaurant in the Albany region they are matched with the current state of the world. If the PIDA service finds good matches e.g. Christian Dior perfumes are on sale at Charles de Gaulle airport in Paris or that there is a good seafood restaurant in the Albany region serving special lunches and located very close to the user s current route purchase recommendations are provided to the customer based on these matches. These recommendations are sent back from the PSA server to the PDA device via a telecommunication medium e.g. via e mail or through another intelligent user interface .

The PIDA service incorporating the system and method according to the present invention can be used for notifying the users about various purchasing opportunities both time sensitive e.g. a particular sale will start next week and spatial e.g. if you need a new sweater and sweaters you would probably like are on sale at the store near your work .

The system and method according to the present invention can also be incorporated in a Web site system. In conventional systems when a user visits a particular Web site the user usually sees the same contents regardless of who the user is. Using the system and method according to the present invention i.e. individual profiles for respective users the dynamic Web content of the Web site presented to the user can be varied to conform to the dynamic profile of the user visiting the Web site. Furthermore dynamic profile construction methods can also be used in fraud detection systems. In particular a set of fraud detection rules can be dynamically generated for each user.

It should be noted that the use of the above described rule compression process and the cluster compression process according to the present invention is not limited to a construction of user profiles. For example these process can also be used for computing useful association rules in data mining applications or in general compressing large sets of rules generated by data mining algorithms.

Another embodiment of the present invention for providing a selective validation of individual user rules is shown in . In particular user rules for all individual users e.g. customers are provided to a selective validation module arrangement step . The selective validation module arrangement can be preferably executed by a central computing device illustrated in or executed by the processor of the general purpose computer illustrated in . The individual user rules may be stored in the storage device . It is also possible to provide the selective validation module arrangement in the remote unit illustrated in . In step the selective validation module arrangement receives still unvalidated user rules and outputs at least one set of selectively validated individual user rules step . In addition the selective validation module arrangement can optionally include the process illustrated in . In an exemplary embodiment of the present invention this selective validation procedure allows the human expert to select particular subsets of individual user rules and characterize these subsets as Good subsets Bad subsets and or Undecided subsets.

A flow chart representation of an exemplary embodiment of a process executed by the selective validation module or an exemplary steps executed by the selective validation arrangement described above is illustrated in . According to the present invention a Good Rules set is provided to maintain e.g. store all sets of individual user rules which were selected by the human expert as rules which are usable for a particular user. A Bad Rules set is provided to store all sets of individual user rules selected by the human expert to be unusable for that user.

As shown in in step each of the Good Rules and Bad Rules sets are initialized e.g. to be empty or null sets. In step all user rules are combined to form Set S. Set S initially contains all related e.g. similar subsets of the unvalidated individual user rules for all users. These similar subsets may be grouped in a similar manner as discussed above with reference to or using a filtering and or clustering operator as discussed below. In step the user rules in Set S or subsets in Set S can be displayed. The human expert examines the subsets of related rules from Set S e.g. one rule or one set at a time and selects which subsets or which rules in Set S are good bad and or neither step . These subsets can also be examined automatically by a system e.g. the processor implementing an expert system or an artificial intelligence system using a predetermined criteria. If a particular subset in Set S is selected to be usable the particular subset is marked as good if this subset is selected to be unusable it is marked as bad if the human expert or the system cannot determine if the particular subset is usable or not such subset is marked as undecided step . In step the subsets which are marked as good are moved from Set S to the Good Rules set and the subsets which are marked as bad are moved from Set S to Bad Rules set.

In step a decision is made e.g. automatically via the processor or by the human expert if the processing of the selective validation module arrangement is completed and if so initiates a completion process according to this embodiment of the present invention. There can be numerous conditions to indicate to the selective validation module arrangement according to the present invention that the completion process should be initiated. For example the following exemplary conditions may prompt the selective validation module arrangement to stop processing 

If it is determined that the processing of the completion process according to the present invention should be initiated the rules from the Good Rules set is assigned to one or more corresponding users step Good Rules set and or undecided subsets can be displayed step and the execution of the process according to the present invention is stopped. If however it is determined that the completion process should not be initiated i.e. the subsets should be regrouped the remaining rules in Set S i.e. the subsets marked as undecided are grouped or regrouped to generate a new Set S step and this new Set S is provided to the human expert i.e. looped back to step so that the rules within new Set S may be reclassified using the process and or the arrangement according to the present invention i.e. looped again starting with step .

It should be noted that if a particular subset Set S is marked as undecided this subset is then further analyzed by either splitting it into smaller subsets using techniques described below or optionally regrouping this particular subset with other related sets from Set S as also described below.

According to an exemplary embodiment of the process according to the present invention the rules in Set S which were marked as undecided are grouped to generate a new Set S according to the following exemplary methods 

An exemplary filtering operator receives a subset of rules and splits this subset into at least 2 subsets one subset contains rules which pass a predetermined selection criteria of the filter and another subset contains rules which do not. In particular this selection criteria may be specified using a data mining query or a pattern template . The data mining query describes a class of patterns in general terms.

Data mining queries are described in publications T. Imielinski et al. DataMine Application Programming Interface and Query Language for Database Mining Proceedings of the Second International Conference on Knowledge Discovery and Data Mining August 1996 J. Han et al. DMQL A Data Mining Query Language for relational Databases Proceedings of the SIGMOD Workshop in Research Issues on Data Mining and Knowledge Discovery Montreal June 1996 and W. Shen et al. Metaqueries for Data Mining Advances in Knowledge Discovery and Data Mining chap. 15 AAAI Press 1996. Any pattern description language or any data mining query language can be used to specify patterns and data mining queries. For example article by T. Imielinski et al. DataMine Application Programming Interface and Query Language for Database Mining Proceedings of the Second International Conference on Knowledge Discovery and Data Mining August 1996 introduced M SQL for association rule discovery which is based on software query language SQL modified with additional data mining operators. However the exemplary embodiment of the data mining query does not depend on any specific language.

For the following exemplary request Find all rules in customer purchase data specifying which product categories the customers with children of various ages are buying M SQL query is as follows 

Thus this exemplary data mining query specifies a set of patterns. The set of these exemplary patterns may indicate 

Pattern Templates are described in M. Klemmettinen et al. Finding Interesting Rules for Large Sets of Discovered Association Rules Proceedings of the Third International Conference on Information and Knowledge Management December 1994. For example a pattern template may be provided as follows 

The clustering operator receives as input a subset of rules and an attribute hierarchy of this subset. In particular the attribute hierarchy can be formed using the procedure described below with reference with . An exemplary attribute hierarchy is illustrated in . All of the fields i.e. attributes of the attribute hierarchy are provided at the bottom of the attribute hierarchy. These fields are portions of the transaction file TRANS Trans ID Cust ID C . . . C as described above without the fields Trans ID and Cust ID. In the exemplary hierarchy illustrated in n 13.

A top portion of shows an exemplary procedure to generate the attribute hierarchy. In step grouping data of a particular subset of rules is determined by combining the fields of the TRANS file e.g. a table into groups e.g. fields C1 C2 C3 illustrated in are combined into group N1 fields C4 and C5 into group N2 etc. . In step these groups are further combined into larger groups and so on. For example and as shown in groups N2 and N3 are combined into group N4 groups N1 and N4 are combined into group N5 fields C9 and C10 are combined into group N6 group N7 and field C11 are combined into group N8 groups N6 and N8 are combined into N9 and groups N5 and N9 are combined into N10. As a result the attribute hierarchy is generated step with attributes of the TRANS transaction file being its leaves. It should be noted that a tree which defines this attribute hierarchy shown in does not have to be balanced i.e. all path lengths from the root node to the leaves do not have to be equal.

The attribute hierarchy may include one or more e.g. two levels of nodes below the descendent leaves of the attribute hierarchy i.e. the fields of the TRANS transaction file . A first level consists of a pair of attributes field and a relational operator. The relational operator may include exemplary operators such as etc. A second level is below the first level and consists of three attributes field relational operator and sets of values which the field attribute can be compared to e.g. predetermined values one or more intervals etc. . For example the second level can be C3 a i.e. field C3 uses the relational operator to be compared to variable a C5 

After the attribute hierarchy is generated in step shown in Cut data is generated with respect to the attribute hierarchy step by providing a Cut in the attribute hierarchy. Cut in the attribute hierarchy is defined as a set of nodes of the tree such that a union of all descendant leaves of the nodes which were identified in the cut consists of all the fields of TRANS transaction file i.e. C . . . C . An exemplary cut is shown in which includes the following groups fields C1 C2 C3 N4 N6 C11 and N7. In addition the Cut is not limited to the nodes of shown in and can also include one or two levels below the field levels shown in . shows a detailed illustration of step in which Cut data is generated. In step the Cut is provided to the attribute hierarchy. If the Cut is properly specified e.g. all of the leaves of the attribute hierarchy are above the Cut leaves being the lowest level of the attribute hierarchy in step or if the human expert or the system indicates that the Cut is unacceptable step a different Cut is created using similar techniques as described above for providing the original cut step and the procedure is restarted at step with this newly created Cut . Otherwise Cut data is generated as a function of the Cut step and can be stored in memory for a possible future use.

After the Cut data is generated step in subsets of the user rules are grouped using Cut data and the hierarchy data step and these grouped subsets are placed into Set S step to be provided to the human expert.

Thus the clustering operator consists of steps . As indicated above the following data is provided as input to the clustering operator a initial set of user rules b an attribute hierarchy as described above and c the Cut . The output of the clustering operator is Set S which includes subsets of rules. These subsets are mutually exclusive and collectively exhaustive e.g. a union of the subsets is equal to all of the rules in Set S .

Using the Cut two rules are provided to the same class if and only if they have the same structure with respect to the Cut . In particular the rules should have the same number of attributes and these attributes e.g. can be grouped in pairs so that two attributes in the same pair have the same ancestor in the Cut . For example the rules C1 5 and C48 C12 8 and C1 3 and C6 5 and C10

After Set S is split into a subset of clusters one or more statistics may be generated for each cluster. These statistics may be e.g. 

These exemplary statistics may be utilized by the human expert in step shown in to determine which sets of rules the human expert may select for a manual examination. This completes the description of and the way rules are examined by the human expert.

If the human expert determines that the clustering of rules based on a particular Cut is unsatisfactory the rules may be regrouped in step using a different Cut . For example this different cut would be a finer cut which generated a larger number of clusters which are smaller in size . This can be done by merging back the clusters of rules obtained with the previous Cut in step returning to step where the human expert marks all the merged rules as undecided and then in step again re cluster rules based on the different e.g. finer Cut .

The process and system according to the present invention can be implemented using e.g. a graphical user interface GUI which enables the human expert to communicate with the validation system according to the present invention. Using this GUI the human expert selects a number of operators from a graphical menu of the GUI. Exemplary operators provided on this graphical menu may include a Filtering operator a Clustering operator and a Browsing operator e.g. allows the human expert to examine sets of rules generated by the Clustering operator or another operator . Other operators can also be included in the graphical menu of the GUI.

The human expert may apply a number of e.g. four operations in sequence e.g. two filtering operators one clustering operator and one browsing operator . This process can also be performed in parallel e.g. the human expert may decide to perform two filtering operations in parallel and then combine their results .

In another embodiment of the present invention while the human expert proceeds deeper into an validation process i.e. performs more iterations of steps and shown in the process steps may be recorded using the GUI interface.

