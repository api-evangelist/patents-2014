---

title: Dataflow alerts for an information management system
abstract: Disclosed herein are systems and methods for managing information management operations. The system may be configured to employ a work flow queue to reduce network traffic and manage server processing resources. The system may also be configured to forecast or estimate information management operations based on estimations of throughput between computing devices scheduled to execute one or more jobs. The system may also be configured to escalate or automatically reassign notification of system alerts based on the availability of system alert recipients. Various other embodiments are also disclosed herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535776&OS=09535776&RS=09535776
owner: Commvault Systems, Inc.
number: 09535776
owner_city: Tinton Falls
owner_country: US
publication_date: 20140602
---
The present application claims priority to and the benefit of U.S. Provisional Application No. 61 945 587 filed Feb. 27 2014 which is hereby incorporated herein by reference in its entirety.

Businesses worldwide recognize the commercial value of their data and seek reliable cost effective ways to protect the information stored on their computer networks while minimizing impact on productivity. Protecting information is often part of a routine process that is performed within an organization.

A company might back up critical computing systems such as databases file servers web servers and so on as part of a daily weekly or monthly maintenance schedule. The company may similarly protect computing systems used by each of its employees such as those used by an accounting department marketing department engineering department and so forth.

Given the rapidly expanding volume of data under management companies also continue to seek innovative techniques for managing data growth in addition to protecting data. For instance companies often implement migration techniques for moving data to lower cost storage over time and data reduction techniques for reducing redundant data pruning lower priority data etc.

Enterprises also increasingly view their stored data as a valuable asset. Along these lines customers are looking for solutions that not only protect and manage but also leverage their data. For instance solutions providing data analysis capabilities information management improved data presentation and access features and the like are in increasing demand.

With the increasing importance of protecting and leveraging data organizations simply cannot afford to take the risk of losing critical data. Moreover runaway data growth and other modern realities make protecting and managing data an increasingly difficult task. Therefore there is a need for efficient powerful and user friendly solutions for protecting and managing data.

Depending on the size of the organization there are typically several data production sources under the purview of tens hundreds or even thousands of employees or other individuals. It is now common for nearly each of the numerous employees students or other individuals to use or be assigned a computing device client for accomplishing daily tasks. Organizations then deploy servers in a variety of hierarchical configurations to provide information management and other services to the clients.

To increase the productivity of computing devices such as servers in an information management system a storage manager can be configured to manage server jobs that are not defined by a data storage policy or a data retention policy. Some embodiments of the present disclosure provide methods capable of managing servers by queuing and issuing non storage policy and non retention policy jobs to servers based on server statuses e.g. available and or idle although the methods can apply to any computing device . By configuring the storage manager to queue and issue jobs the servers e.g. using push queue techniques query traffic from the servers to the storage manager can be reduced. The reduction of server originating requests can reduce the load on the server manager increase the availability of network bandwidth and allow server processing resources to be dedicated to processing jobs that are already assigned to the servers.

In addition to managing e.g. queuing and issuing jobs a storage manager may notify a system administrator or other users of jobs that appear as though they will not complete within a prescribed time limit. Some embodiments of the present disclosure describe systems and methods of forecasting or estimating failures of jobs to complete in a timely manner e.g. based on throughput estimations between a transmitting computing device and a receiving computing device. Thus rather than comparing the number of jobs or amount of data being copied to a threshold to determine a possible failure the system compares data throughput amount of data processed per time unit to a threshold. The storage manager can be configured to generate an alert for notifying a user of the forecasted failure. In response to the alert the user can remedy the source of the issue causing the alert or the user can reschedule around the problematic job. By receiving an alert and taking remedial action a user may be able to prevent network congestion which may impact other users of the network.

Even if the storage manager generates or transmits a system alert to a user the user may be unavailable to respond to the alert or unable to address an otherwise preventable job failure and or network congestion. Some embodiments of the present disclosure describe systems and methods of escalating alerts when such an alert recipient is unavailable. The availability of an alert recipient can be determined by using system directory tools or can be based on failure to acknowledge the alert. Escalating an alert can include transmitting the alert to other members or to supervisors of an information technology IT team or information management administration team. By escalating alerts a storage manager can reduce the risk of system failures going unanswered and can therefore reduce an organization s risk of having an unprotected information system or unprotected computing devices. For example the storage manager may be configured to escalate alerts if a storage device or storage computing device unexpectedly goes offline if network bandwidth drops below a predetermined threshold or if a scheduled job is forecasted to fail to complete within a prescribed time limit.

The primary storage subsystem includes one or more client computing devices communicatively coupled to one or more primary storage devices . The client computing device can include any number of electronic computing devices such as a desktop laptop tablet smart phone wearable device vehicle mounted device or the like.

As illustrated the client computing device may include one or more data agents that are configured to manage information generated by or through the use of one or more applications installed on the client computing device . The data agent communicates with the primary storage device the storage manager and components within the secondary storage system to facilitate the manipulation of and retention of primary data that is located on the primary storage device .

Primary data according to some embodiments is production data or other live data generated by the operating system and other applications residing on a client computing device . The primary data is generally stored on the primary storage device s and is organized via a file system supported by the client computing device . For instance the client computing device s and corresponding applications may create access modify write delete and otherwise use primary data . In some cases some or all of the primary data can be stored in cloud storage resources.

Primary data is generally in the native format of the source application . According to certain aspects primary data is an initial or first stored copy of data generated by the source application e.g. created before any other copies or before at least one other copy . Primary data in some cases is created substantially directly from data generated by the corresponding source applications .

The primary data may sometimes be referred to as a primary copy in the sense that it is a discrete set of data. However the use of this term does not necessarily imply that the primary copy is a copy in the sense that it was copied or otherwise derived from another stored version

The primary storage device can serve the storage needs of the client computing device in any one of a number of storage device implementations. For example the primary storage device can be a mechanical or solid state hard drive a network accessible storage device NAS or the like.

While the primary storage system depicts a single client computing device and a single primary storage device the primary storage subsystem can include tens hundreds or thousands of client computing devices and primary storage devices . The primary storage subsystem can represent some or all of the computing devices used to support productivity of a business educational institution or other organization valuing the protection retention and maintenance of electronically generated information.

Additional details regarding various exemplary embodiments of the components of the primary storage subsystem are provided below in the discussion associated with .

For recovery and or regulatory compliance purposes it may be useful to generate copies of the primary data . Accordingly the secondary storage subsystem includes one or more secondary storage computing devices and one or more secondary storage devices configured to create and store one or more secondary copies inclusive of copies of the primary data and associated metadata.

Creation of secondary copies can help in search and analysis efforts and meet other information management goals such as restoring data and or metadata if an original version e.g. of primary data is lost e.g. by deletion corruption or disaster allowing point in time recovery complying with regulatory data retention and electronic discovery e discovery requirements reducing utilized storage capacity facilitating organization and search of data improving user access to data files across multiple computing devices and or hosted services and implementing data retention policies.

The client computing devices access or receive primary data and communicate the data e.g. over the communication pathways for storage in the secondary storage device s . The communication pathways can include one or more private and or public networks including local area networks wide area networks campus area networks metropolitan area networks and the like.

A secondary copy can comprise a separate stored copy of application data that is derived from one or more earlier created stored copies e.g. derived from primary data or another secondary copy . Secondary copies can include point in time data and may be intended for relatively long term retention e.g. weeks months or years before some or all of the data is moved to other storage or is discarded. Types of secondary copies can include full backup incremental backup auxiliary copy etc.

The secondary storage computing devices provide intermediary interface between the secondary storage devices and other components of the information management system . Each secondary storage computing device may be associated with or may include a media agent to facilitate inter component communications within the information management system . The media agent configured to communicate with the storage manager and with the data agent of the client computing device . The media agent also interfaces with the secondary storage devices to copy read analyze transfer or otherwise manipulate secondary copies .

Additional details regarding various exemplary embodiments of the components of the secondary storage subsystem are provided below in the discussion associated with .

The storage manager is centralized storage and or information manager that is configured to perform certain control functions. The storage manager is communicatively coupled between the primary storage subsystem and the secondary storage subsystem via the communication channel s . The storage manager facilitates transfer of data between the primary storage subsystem and the secondary storage subsystem . For example the storage manager may instruct the data agent to retrieve some or all of primary data . The storage manager may then initiate communications between the data agent and one or more media agents to transfer some or all of the primary data to one or more of the secondary storage devices . According to some embodiments the storage manager may employ a software module such as a jobs agent to initiate facilitate schedule and otherwise manage communications between the data agent and the media agents .

The storage manager can be configured to support additional information management operations. For example the storage manager may include an index or may interface with the index . The index can be a database or other data structure that can be used to track and or schedule information management policies e.g. storage policies and retention policies. For example each time the storage manager executes a transfer of information from the primary storage subsystem to the secondary storage subsystem the storage manager can update the index to reflect the operation. The storage manager can be configured to update the index to reflect all information management operations that have occurred or that are scheduled to be executed in the information management system . For example in accordance with a data retention policy the jobs agent may reference the index prior to transferring a secondary copy from one secondary storage computing device to another slower and less costly secondary storage device .

The information management system may constitute a single information management systems cell of multiple information management system cells operated by a particular business educational institution or other organization. The storage manager may include and utilize a management agent to communicate with other similar storage managers of other information management system cells. When needed or requested the storage manager can acquire or query other storage managers or other information management system cells for information satisfying the criteria of the queries. Upon receipt of information requested from other information management system cells the storage manager may update one or more databases tables data structures or the like e.g. the index .

While distributing functionality amongst multiple computing devices can have certain advantages in other contexts it can be beneficial to consolidate functionality on the same computing device. As such in various other embodiments one or more of the components shown in as being implemented on separate computing devices are implemented on the same computing device. In one configuration a storage manager one or more data agents and one or more media agents are all implemented on the same computing device. In another embodiment one or more data agents and one or more media agents are implemented on the same computing device while the storage manager is implemented on a separate computing device.

The storage manager can be configured to manage various jobs types within the information management system using different resources. For example the storage manager can categorize all jobs or tasks to be performed in the information management system into one or more groups types or categories. Then the storage manager can allocate particular types of jobs to particular storage manager resources such as processes. For example the storage manager can allocate a first group of processes to jobs for executing a data storage and or data retention policy and can allocate a second group of processes to jobs for executing other jobs related to the information management system . Jobs associated with the first group processes can include tasks such as analyzing data backing up data restoring data retaining data and the like. Jobs associated with the second group of processes can include jobs associated with maintenance of the information management system e.g. releases of software updates security maintenance e.g. security patches virus scans etc. and information management system policy synchronizations e.g. changes to job preemption policies changes to job priorities updates to alert definitions etc. . The jobs associated with the first group of processes e.g. those used for executing the storage retention policy may be impractical to manage from components other than the storage manager within the information management system . Therefore these jobs can be managed and issued by the storage manager in accordance with data storage and data retention policies stored and maintained by the storage manager . The first group of processes can be interchangeably referred to as information management operation or system processes and the second group of processes although different from the first group of processes can be interchangeably referred to as information management system or operation processes .

By contrast the jobs or tasks associated with the second group of processes may traditionally be initiated from and managed by servers or client devices other than the storage manager within the information management system . Such an implementation of task management can have several disadvantages. In the case where the storage manager manages tens hundreds or thousands of client computing devices and secondary storage computing devices receiving requests for updates or task authorization from all of these devices in an unscheduled manner can result in a bombardment of the storage manager . Additionally when the client computing devices and or the secondary storage computing devices dedicate processing resources e.g. CPU cycles and memory to request approval or information for jobs from the storage manager then these resources are at least partially unavailable to perform backup restoration and retention operations. Additionally each request consumes bandwidth on the communication pathways that communicatively couple the components of the information management system .

Configuring the storage manager to manage and issue jobs associated with the second group of processes can take advantage of the storage manager holistic awareness of the statuses of the computing device within the primary storage subsystem and the secondary storage subsystem . For example since the storage manager already uses the jobs agent for tracking the status of various jobs within the primary storage subsystem and the secondary storage subsystem the storage manager is positioned to efficiently issue non storage retention policy jobs to the computing devices of the primary storage subsystem and secondary storage subsystem based on the operational statuses of the computing devices. For example the storage manager may be configured to issue a management system update job to a secondary storage computing device if the secondary storage computing device is online available and is not presently scheduled to execute a job within a data storage or retention policy.

The storage manager may use various work queues to manage e.g. track and schedule jobs in the information management system . For example the storage manager may manage the first group of processes using a first work queue . The storage manager may manage the second group of processes using a second work queue .

The first work queue may be any form of data structure such as a table that includes a number of columns identifying aspects of a job such as the job ID the device ID a media agent identifier the type of job and the job status etc. Although not shown the first work queue can also include additional columns such as a data agent identification errors and a numerical indication of job progression. The first work queue may also include a number of rows each associated with a single job or task.

The second work queue may only include jobs that are associated with the second group of processes . The second work queue may include columns such as job ID device ID device status job type and job status. The second work queue may be organized into one or more rows of tasks . As described above the second group of processes may include jobs or tasks that are associated with the information management system but that are not directly related to backing up data restoring data and or retaining data. In other words the second group of processes can be associated with jobs that do not accomplish execution of data storage retention policies that are unrelated to the data storage retention policies or that are only tangentially related to the data storage retention policies of the information management system. Some of the jobs managed by the second work queue can include among other things installation of security patches synchronization of information management system policies media agent updates data agent updates or other software updates in accordance with embodiments.

The storage manager may issue jobs to the media agents based on the status of the devices that the media agents control. For example the storage manager my wait to distribute a job shown in the first of the rows of the second work queue based on a busy status for a computing device e.g. computing device . The storage manager may queue a job or task until a status of the computing device becomes available or idle. In one embodiment computing device shown in the second work queue represents the secondary storage computing device or the client computing device . For relatively more important jobs scheduled in the second work queue the storage manager may preempt jobs scheduled in the first work queue . For example the storage manager may wait until one two or just a few jobs remain scheduled for a particular device in the first work queue before preemptively issuing or prioritizing a job in the second work queue over the job s remaining in the first work queue for a particular device.

When computing devices have an offline status the storage manager suspends unidirectional communications to those devices. The storage manager reduces incoming traffic by unidirectionally issuing and distributing jobs from second work queue e.g. using a push queue mechanism to media agents and data agents . To further reduce network traffic the storage manager may be configured to suspend issuing jobs when a computing device of a media agent or data agent has an offline status. The storage manager could continuously or periodically ping or transmit messages to an offline computing device to determine when the computing device comes online. However a more network efficient implementation of the information management system may be to configure some of all of the computing devices to notify the storage manager of a status change from offline to online. At such point the storage manager can update the second work queue to reflect the current device s status and may resume distributing jobs from the second work queue .

Other devices within the information management system may also be configured to execute some or all of the second group of processes in addition to the first group of processes . The first group of processes and the second group of processes may represent portions of information management software that is installed on or executed by the computing devices of the information management system . Hence the first group of processes and the second group of processes are illustrated in as being included in the client computing device s and the secondary storage computing device s in addition to the storage manager .

By configuring the storage manager to manage jobs that may have been accomplished or managed by the client computing devices or by the secondary storage computing devices the information management system may run more efficiently and with less issue. In particular the storage manager may protect itself from bombardment by job or task requests network traffic on the channel may be reduced and the client computing devices and the secondary storage computing devices may focus their processing resources on executing jobs for the data storage and retention policies. Although the embodiments described above describe a work queue of administrative tasks managed by the storage manager a similar work queue can be executed by one or more secondary storage computing devices to reduce bombardment of these computing devices by subordinate computing devices e.g. client computing devices . In such an embodiment the client computing devices are configured to wait for the secondary storage computing devices to initiate jobs or tasks rather than pinging or querying the secondary storage computing devices job request updates. The advantageous result of such a configuration may further reduce network traffic protect servers from bombardment by requests and enable the client computing devices to dedicate processing resources to non managerial jobs or tasks.

In block a storage manager receives jobs from the Internet from a software program or from system administrators. The jobs are tasks other than the jobs defined by a data storage or data retention policy. The jobs can include tasks related to security patches software updates and synchronizing configuration changes throughout the information management system according to various embodiments.

In block the storage manager updates at least two work queues of jobs with the received jobs. In a first work queue the storage manager organizes and schedules jobs or tasks that are associated with executing a data storage or data retention policy. A second work queue is associated with jobs or tasks that are of a different type than the jobs of the first work queue. For example the jobs of the second work queue are unrelated to or are tangentially related to the jobs defined by the data storage or data retention policy but execution of the jobs of the second work queue is needed for the information management system to operate or function.

At block the storage manager updates the work queues with the statuses of computing devices to which the jobs are scheduled for assignment or distribution. The statuses of the computing devices of the information management system can include for example offline online available busy processing the job job failed job recently completed job paused or the like.

At block the storage manager issues the jobs of the two or more work queues in accordance with priority settings for the jobs and based at least in part on a current status the computing devices to which the jobs are distributed. By configuring the storage manager to distribute jobs other than the jobs defined by data storage and retention policies the storage manager can more efficiently manage network traffic can protect itself from being bombarded by requests and can supervise the use of processing resources in the computing devices of the information management system.

In the event that one or more queued scheduled or issued jobs cannot be complete by a computing device within an allocated timeframe it may be useful to alert or notify a system administrator or other users of the system deficiency. Issued jobs can fail to complete in a timely manner for a number of reasons. For example the amount of data associated with the job can unexpectedly increase or spike such that a predetermined window time becomes inadequate to complete a data transfer given a fixed network throughput or bandwidth. As another example the network throughput i.e. rate or amount of data transfer over time can diminish unexpectedly and or significantly enough to render an allocated window of time inadequate to transfer a fixed amount of data between computing devices. As another example a transmitting or receiving computing device involved in the execution of a particular job may crash stall or otherwise become inoperable to continue transferring or receiving the data associated with the execution of a job. In any of these scenarios as well as in other potential scenarios notification to appropriate personnel may enable a system or IT administrator to remedy any hardware or software issues that present an obstacle in executing a particular job. When information management system operations fail to occur during regularly scheduled windows of time the operations failure can propagate throughout an information management system to cause further delays similar to a traffic jam. The operations failure can also expose an organization s information to an undesirable amount of risk of loss while the organization s information is not being completely or partially backed up. Described hereafter are systems and methods for forecasting failures in information management system operations in accordance with various embodiments of the disclosure.

System administrators regularly schedule resource intensive information management operations to coincide with the convenience of the system administrator and more importantly with the availability of network throughput. As used herein network throughput includes a rate of data transfer from one computing device to another. Network throughput includes both the bandwidth of network communication channels and the processing availability and or speeds of the computing devices involved in the data transfer. The network throughput may be measured end to end from a source device through one or more networks to a destination or target device. In other words the network throughput is a measurement of the rate by which data is 1 processed by the source computing device for transfer over the network 2 transferred from the source computing device to the target computing device and or 3 processed or temporarily stored by target computing device after receipt over the network. The particular data transfer or operation may have start time limitations that are based on the completion of other jobs based on heavy network bandwidth usage and or based on an availability of other system components. An information management operation may have stop time limitations that are based on other scheduled information management operations scheduled network maintenance or an otherwise upcoming need for network resources. The operation failure forecast interface provides users with an option of defining a particular operation window . As illustrated the operation window may be used to define a day for an operation a duration for the operation and an end time for the operation. The day for the operation may be defined in terms of days of the week e.g. Sunday to Saturday days of the month days of a year or the like. The duration option may also be defined by any one of a number of duration parameters such as seconds minutes hours days or the like. The time may be displayed in 24 hour cycles or 12 hour cycles. Having the end time and the duration defined in the operation window a need for a start time definition does not exist. However in some embodiments the operation window includes a start time definition in addition to or in lieu of one or more of the other parameters illustrated.

In the operation menu the operation failure forecast interface allows a user to define the type of information management operation to apply the failure forecast alert to. The operation menu can include a drop down menu or any other suitable mode of option selection interface. The operation menu may be populated with for example a backup copy a disaster recovery copy a compliance copy an auxiliary copy an archive copy or the like. The operation menu may also allow a user to select to more granular operation options such as full backup incremental backup synthetic backup or the like.

In some embodiments upon selection of a particular operation from the operation menu the operation failure forecast interface displays a recommended duration of an operation window based on previous information management operations. For example if the user allocates one hour to perform a full backup of a 10 TB computing system when a previous similar operation consumed 10 hours the operation failure forecast interface may notify the user of the durations of previous similar operations that are based on timetables of operation histories. In some embodiments the storage manager stores tables of operation histories in the index .

The operation failure forecast interface provides the throughput estimation menu to allow users to select from a number of throughput estimation techniques. The throughput estimation menu is illustrated as a drop down menu but can just as easily be implemented as a text box a plurality of check boxes radio buttons or other graphical interface elements. The throughput estimation menu illustrates at least three techniques that can be used by the storage manager to estimate the throughput of an information management operation. The techniques include a previous jobs technique a window of time technique and a graphical correlation technique. Each of these three techniques are described herein below.

According to one embodiment the storage manager estimates throughput for a job using throughput data from one or more previous jobs. The one or more previous jobs used in the estimation can be selected as a sample set for having varying degrees of relationship or correspondence with the operation selected in the operation menu . As a first example one or more jobs that immediately preceded the selection of the job from the operation window can be used to provide a current reflection of throughput within the information management system . As another example the one or more jobs can be further filtered to more closely correlate with the job selected in the operation menu by averaging one or more jobs that were executed between the same computing devices as the job selected in the operation menu . As yet another example the one or more previous jobs used for the estimation of throughput can be estimated based on average throughput of a same type of job e.g. average of a number of incremental backups full backups etc. time of operation of the one or more previous jobs day of the week during which the jobs were executed or the like.

Various mathematical functions can also be applied to the one or more previous jobs selected for throughput estimation such as the average throughput of the previous jobs. For a more conservative estimation the slowest or lowest throughput of the previous jobs can be used. For a more optimistic estimation the fastest or highest throughput of the selected one or more previous jobs can be used to estimate the throughput of the job selected in the operation menu .

According to another embodiment the storage manager estimates throughput for a job selected in the operation menu by relying on throughput measurements from a particular window of time. The window can be selected to include the previous day s throughput measurements several days of throughput measurements a week a month or a year of data throughput measurements or the like. A disadvantage or shortcoming of the window of time technique is that positive and negative spikes or extremes in throughput rates may not be accurately represented by an average of throughput measurements. For example throughput rates measured on a Sunday may be significantly higher than actual rates achieved near the end of business on a Thursday or Friday when employees may be more prone to consume network bandwidth while surfing the Internet. Thus a window of time that spans a week of throughput measurements may correspond poorly with a particular time selected for the execution of a job. In one embodiment the average of the throughput measurements is taken within the same window of time that the operation selected in the operation menu is scheduled for. In other embodiments the storage manager uses statistical functions to estimate throughput rates associated with a window of time. For example the storage manager can calculate quartiles for throughput rates where the first quartile and second quartile represent throughputs that are less than the mean or average throughput data during the selected window of time and the third and fourth quartiles represent throughput rates exceeding the average or mean throughput rates within the window of time. For a more conservative estimation of throughput the storage manager can use the average of the first quartile or the second quartile of throughput measurements. For more optimistic estimations the storage manager can use an average of the third quartile or the fourth quartile throughput measurements. Alternatively the storage manager can use the lowest throughput rate achieved during the window of time. This may provide a system administrator with a worst case scenario estimation of how long a particular job could reasonably take. Other statistical operations may also be applied. For example the applied statistical functions can include among other things determining and using one or more standard deviations below or above the mean throughput measurements.

In accordance with another embodiment the storage manager may employ graphical correlation techniques to estimate throughputs for a selected job. The historical graph of throughput measurements can be used to reflect cyclic variations in throughput over an extended period of time. For example the storage manager can be configured to graphically or mathematically determine cyclic patterns based on days of the week days of the month times of the month months of the year and the like.

The storage manager may correlate historical measurements with a recent snapshot of throughput measurements to forecast upcoming trends. The storage manager may compare the window of the recent throughput measurements with the average throughput measurements for a particular span of time e.g. seven days. If the time window correlates strongly with a section of the average throughput measurements the storage manager can rely on as a forecast or estimate the subsequently plotted throughput trends depicted by the average throughput measurements . In the event that the correlation between the throughput measurements and the average throughput measurements is weak the storage manager may indicate such weakness through the operation failure forecast interface and may recommend use of alternative throughput estimation technique. To determine the correlation between the throughput measurements and the average throughput measurements the storage manager may employ various mathematical operations such as cross correlation correlation convolution or the like. An advantage of using historic pattern correlation is that cyclical patterns such as a weekend days or throughput associated with a middle of the month versus the beginning or end of the month may be captured over time and may provide a more reliable predictive indication of throughput.

Returning to the operation failure forecast interface allows the user to determine various additional parameters for generating a forecasted failure alert. For example the alert threshold allows a user to set a threshold for initiating an alert based on when after the end time a job is estimated to complete. For example if the user wants to receive an alert if the job is estimated to exceed the end time by 30 minutes then the user would enter 30 minutes in the alert threshold . The alert selection menu allows the user to select one or more types of alert notifications such as email SMS page and voicemail. The alert selection menu illustrates check boxes and text boxes for entering email addresses cellular telephone numbers page numbers and telephone numbers. However other selection menus such as drop down boxes may also be implemented. The default action menu allows a user to determine a default action for the storage manager to take when a job is forecasted to not complete by the end time or by the alert threshold. In one embodiment the storage manager may be configured to stop a job once it is determined that the job will not complete by the end time. In other embodiments the storage manager can be configured to continue to process the job even after an alert has been sent. The stop menu can be used to configure the storage manager to stop a job at particular times relative to the predetermined end time. For example the storage manager can be configured to stop a particular job before the end time at the end time or after the end time depending upon various factors. Some of the various factors the user may consider include the priority of the job and network resource availability.

The storage manager can also be configured to transmit alerts based on live throughput measurements between a receiving device and a transmitting device. For example if the storage manager is performing a backup operation of primary data into the secondary storage device the storage manager may time or measure the rate at which a portion of a data transfer occurs by timing or measuring a delivery of for example a tenth of the overall size of data to be delivered. To illustrate if the primary data being backed up is one terabyte the storage manager may estimate the throughput from the primary storage device to the secondary storage device based on the rate at which one or more preceding gigabytes of information are successfully transferred. Alternatively prior to beginning an information management operation the storage device can be configured to time the transmission of a pilot packet of data to determine a present estimate of throughput. In some embodiments throughput is measured based on data transferred from a primary storage device to a secondary storage device . However in other embodiments throughput is measured based on data transmitted from a primary storage device to a secondary storage device from a client computing device to a secondary storage device from a client computing device to the secondary storage device or the like.

The ability to forecast predict or estimate a failure in an information management operation to complete in a timely manner may enable a user to proactively trouble shoot manage and or repair the information management system . For example as described above a failure forecast can enable a system administrator to reschedule subsequent or preceding operations can allow the system administrator to justify upgrading network hardware can enable the system administrator to identify particular bottlenecks within the information management system and or may generally enable the system administrator to more confidently protect a particular organization s information.

At block a computing device in an information management system receives a threshold such as a time related threshold from a user by which one or more information management operations should be complete. According to various embodiments the time related threshold may be set in terms of days of the week days of a month days of the year and in terms of the start time end time and or a duration for the information management operation. In other words the threshold may define a window for which the operation should be completed.

At block a computing device estimates data throughput for a selected information management operation. One or more techniques may be used to estimate and or measure data throughput including the use of previous jobs the window of time and or cyclic patterns based on historic throughput measurements.

At block the computing device estimates a time of completion for an information management operation based on the remaining data to be transferred during the information management operation and based on the estimated or measured throughput between a transmitting computing device in a receiving computing device. The estimated time of completion can be calculated according to Equation 1 time in seconds data in GB throughput in GB s . Equation 1 Although the units in Equation 1 are seconds and GB gigabytes other units can also be used such as minutes hours days megabytes terabytes and the like.

At block the computing device alerts the user if the computing device estimates that the information management operation will not complete before or by the time related threshold set by the user e.g. Sunday Dec. 29 2013 at 11 00 p.m. The computing device can use any one of a number of methods for transmitting the alert to the user including email text message a page an electronic voicemail or the like.

The information management system as described above can be configured to generate an alert when an information management operation such as the jobs illustrated in the first work queue and the second work queue shown in are forecasted or estimated to be incomplete by a predetermined time. The system can be configured to generate a number of other alerts related to the information management system . For example the storage manager the client computing devices and or the secondary storage computing devices can be configured to generate alerts related to application management automatic updates configuration alerts job management alerts media management alerts operation management alerts and the like. More specifically the information management system can be configured to generate alerts when one or more of the following occur a Microsoft exchange mailbox exceeds a particular limit when software downloads updates or upgrades become available when a storage manager client media agent or data agent configuration has been changed when a data aging data classification data protection data recovery or data verification operation stalls fails or completes when one or more media drives or media libraries go offline unexpectedly or generate an error or any other data management event.

Some alerts occur regularly within an information management system and may be disregarded or addressed at the convenience of the system administrator. Other alerts however may significantly impact an information management system s ability to protect or otherwise adequately manage an organization s information. For example alerts associated with online to offline status changes of secondary storage devices and storage libraries can be particularly problematic and can inhibit the execution of many important storage and or retention operations. An information management system can be configured to generate an alert in response to various alert generating events. However alerts can go unanswered when for example alerts are sent to employees who are on vacation no longer employed with the organization away from the office sick on bereavement leave or involved in any one of a number of personal matters that may hinder or prevent an alert recipient from addressing the underlying event which caused the alert. According to one embodiment an information management system e.g. information management system can be configured to automatically escalate an unacknowledged alert up a chain of management until the alert is acknowledged and or someone takes remedial action to resolve the alert causing event.

The employee hierarchy chart may include groups of task specific teams and layers of management according to one embodiment. The task specific teams may include teams of IT administrators or personnel who are responsible for implementing maintaining and updating the information technology infrastructure and organization. The task specific teams may include an information management team a software support team a network support team a hardware team and an administrative support team . The information management team may be responsible for all the tasks associated with ensuring that data storage and data retention policies are executed adequately. The other teams may be responsible for all other IT related tasks within an organization such as installing new applications and operating systems updating and maintaining communications networks creating new usernames and passwords on clients for employees purchasing and setting up new computers clients and the like.

The storage manager may be configured to elevate specific alerts according to a priority hierarchy or set of rules. For example an alert priority rule or alert escalation rule related to information management operation alerts can be defined to be transmitted to various members of the information management team to team supervisors to division managers and finally to the director or to a client. In practice the storage manager can be configured to first transmit an alert to team member A of the information management team . According to some embodiments team members within the information management team can receive a designation of team member A for different specific alerts or different types of alerts to distribute responsibility for highest priority alerts among different members of the information management team . The storage manager may be configured to wait for acknowledgment of the alert for a predetermined amount of time e.g. 30 minutes. The storage manager may then escalate the alert to team member B if the alert remains unacknowledged by the expiration of the alert acknowledgement time limit. The storage manager can be configured to escalate the alert to other members of the information management team repeatedly providing each team member with a predetermined amount of time to acknowledge the alert. If all of the team members of one team fail to timely acknowledge the alert the storage manager may escalate the alert to a higher layer of management. For example if the information management team includes team members A B C and D the storage manager may be configured to escalate an unacknowledged alert to team member E who is the supervisor for the information management team . In the absence of an acknowledgment from team supervisor E the storage manager can be configured to escalate the alert to team supervisor F and team supervisor G before escalating the alert to the next level of management. The storage manager in some embodiments may be configured to escalate unacknowledged alerts to the division manager H followed by escalating the alert to the division director I and or to the client J. In some embodiments the employee hierarchy chart represents a team that is responsible for IT support within an organization for which the information management operation alert is generated. In other embodiments the employee hierarchy chart represents an outside IT services group or firm that has been hired to manage information management operations and or information management operation alerts for another organization such as a client J.

Although the employee hierarchy chart illustrates one embodiment of an alert escalation path the storage manager can be configured to execute or escalate alerts using other priority paths or other escalation rules. For example according to various embodiments the amount of time between generating an alert and escalating an alert can be increased or decreased. Furthermore the alerts can be transmitted to all members of the lowest level of management prior to escalating the alert to a higher level of management. In some embodiments the storage manager is configured to escalate an alert within a first level of management for a predetermined duration e.g. 30 minutes before escalating the alerts to a higher level of management . Additional options for setting and adjusting escalation priority rules are described below in the discussion related to .

At block a computing device receives an indication of a system failure a system slowdown or other alert causing information management system event. For example a computing device can receive an indication that a secondary storage device has unexpectedly changed from an online status to an offline status. Such an event may prevent an information management system from executing backup operations and leave an organization s information partially or fully exposed to a greater risk of information loss than the organization may want to exposure to.

At block a computing device determines a point of contact for receiving an alert. The alert can relate to the indication of system failure system slowdown or other system event triggered in block . The computing device may determine a first point of contact by referring to a set of rules an employee hierarchical chart or a service team hierarchical chart or by progressing through a list of manually entered contacts.

At block the computing device determines the availability of a point of contact using for example directory services. The computing device may use directory services such as Microsoft s Active Directory or Lync Novell s eDirectory Apache s ApacheDS Oracle s Oracle Internet Director OpenDS or the like. Many directory services include specific application programming interfaces or are compatible with a generic directory access protocol such as LDAP lightweight directory access protocol . By querying various directory services attributes e.g. organizationStatus meetingEndTime meetingStartTime and meetingScope the computing device can determine whether the point of contact is still an employee is out of the office is in a meeting is on a phone call or is otherwise unavailable to acknowledge and or respond to an alert. For example the computing device can call a home or mobile telephone number and determine that the point of contact is unavailable if the call is directed to a voice mailbox. In some implementations the computing device can be configured to try calling the point of contact several time e.g. three calls in 60 minutes before determining that a point of contact is unavailable. If the point of contact is deemed unavailable the method proceeds to block . If the point of contact is available the method proceeds to block .

At block the computing device determines a next point of contact to receive the alert. The computing device can determine the next point of contact by referencing one or more tables organizational tables charts or by stepping through an automatically or manually generated list of points of contact that may or may not be prioritized by seniority or job function within an organization. For example if a primary point of contact is an IT administrator the next point of contact may be that IT administrator s supervisor or manager. In other embodiments the computing device may determine that the next point of contact is a person having a peer relationship with the primary point of contact. After exhausting a list of peers of the primary point of contact the computing device may then be configured to escalate the alert to points of contact having supervisory relationships or roles with respect to the primary points of contact. Block then proceeds to block where the computing system determines the availability of the next point of contact. The method may alternate between block and block until an available point of contact is located within an organization s system.

At block the computing system alerts or notifies the available point of contact of the alert generating system event. According to various embodiments the computing device may alert the available point of contact using one or more of any number of electronic resources. For example the computing device may alert the available point of contact using a pager a cell phone e.g. text message and or an electronic recording an email a home telephone an RSS feed or the like. In some implementations the computing system alerts more than one person at a time. For example the computing system can be configured to alert a point of contact and his her supervisor such as copying them on emails to the point of contact . The duplicative notification may allow the point of contact s supervisor to be forewarned of escalating alerts so as not to be taken by surprise when an alert is escalated to the supervisor.

After transmitting one or more alerts to the available point of contact the computing device can be configured to escalate and or retransmit the alert to a next available point of contact if the first available point of contact fails to acknowledge respond to and or remedy the initial event that generated the alert. The computing device for example can host a web based interface into which team members of the employee hierarchy chart can login and acknowledge receipt of the alert. If the alert is not acknowledged within a predetermined period of time the method proceeds to block . If the available point of contact acknowledges the alert within the predetermined time the method ends at block .

The events for escalation window enables a system administrator or other user to select from one or more events related to an information management system . Based on the selection of events from the events for escalation window a computing device can be configured to alert or notify one or more points of contact of equipment failures job or task failures performance changes or the like. Some examples of events that may be selected to generate an alert and that may be alert escalated include a client device not being backed up for a specified number of days reaching a maximum number of documents files data size for a data agent failing to restore a job low disk space on a client a device going offline failing to access or mount storage media and or low disk space available for a software module such as a media agent. This list of examples is but a few of tens or hundreds of system events selectable by a user for alert escalation.

The devices to alert window may allow a user to select a mode by which to transmit an alert. As illustrated electronic modes of notification can include a page cellular phone messages email home telephone updating a network feed and the like. Although not shown various forms of social networking applications may also be used to notify one or more individuals of an alert. For example the alert escalation interface may enable the storage manager to hook into various forms of social media e.g. Facebook Twitter Google Circles or the like to distribute alerts if authorized by the list of or by individual points of contact within the list of points of contact. Additional features related to connecting social networking applications may be incorporated into the alert escalation interface as disclosed in commonly assigned U.S. Patent Application Publication 2013 0263289 titled INFORMATION MANAGEMENT OF DATA ASSOCIATED WITH MULTIPLE CLOUD SERVICES which is hereby incorporated by reference in its entirety.

The availability tracking window may allow the system administrator to define which conditions constitute the availability or unavailability of a point of contact. As described above the storage manager can be configured to use one or more types of directory services to determine or track the unavailability of a particular point of contact. For example some internet protocol IP telephones and private branch exchange PBX telephones can connect with directory services to indicate that a point of contact is using the telephone. Through directory services the storage manager can determine if a point of contact has a directory services status of out of office in a meeting on a telephone call engaged in a calendared event etc.

The storage manager can also be configured to connect with various social networking applications of the list of points contact and use APIs associated with the networking applications to determine a status of a user. For example a point of contact may use Facebook s location feature to specify the location of their post e.g. a park a movie theater a restaurant or other attraction . The post with the location may include a map or other coordinate based information that the storage manager may use to determine the location of the point of contact. Other social networking applications such as Google Circles Foursquare and the like may be similarly manipulated by the storage manager to determine the location of a point of contact.

The availability tracking window enables a system administrator to define which status or statuses should be interpreted by the system as unavailable. For example a point of contact may be unavailable if out of the office or if in a meeting but may be defined as available if on telephone call or if an Outlook calendar item is not a meeting or conference i.e. it is simply an informational reminder or entry.

The location tracking window enables a system administrator to authorize tracking of one or more persons on a list of points of contact. Examples of options can include cell phone location tracking and laptop IP address tracking. It is common for companies and other organizations to issue communication devices such as smart phones to employees to enable the employees to be more responsive to the needs of the company or organization. Many communication devices are now equipped with location services that are based on global positioning systems GPS and or wireless service provider based location tracking e.g. using triangulation. An organization may according to some embodiments install a program or application onto a work assigned communication device and configure the program to 1 acquire a location of the communication device and 2 update directory services with the location of the communications device utilizing for example web based services. Thus if enabled a storage manager may determine that a point of contact is unavailable if the point of contact s location exceeds for example a predefined radius from the company s or organization s location.

In other embodiments the storage manager may track an IP address of a laptop or other electronic device assigned to a point of contact in an organization. One or more programs can be installed on a laptop or other electronic device to gather and transmit the device s IP address to a database or directory service. The program installed on the laptop may run operating system commands such as ipconfig to determine a current IP address of the laptop or other device. The storage manager may be configured to use one or more reverse lookup programs or resources to determine the general location of the mobile device. Examples of reverse lookup resources include websites such as whois.net ipaddress.com or the like. Other techniques for determining a location of a mobile device are disclosed in commonly assigned U.S. patent application Ser. No. 13 728 386 titled APPLICATION OF INFORMATION MANAGEMENT POLICIES BASED ON OPERATION WITH A GEOGRAPHIC ENTITY which is hereby incorporated by reference in its entirety.

The location tracking window may also enable a system administrator or other user to enable the information management system to track an employee using a building security system. Many organizations utilize electronic access means such as swipe cards RFID cards biometric scanners etc. to monitor and track whether an employee is on the premises of the organization. Some electronic access means provide access to a building and other electronic access means provide access to parking facilities associated with an organization s building. When authorized the storage manager may query the computing system or data structure used in a building security system to determine if a point of contact is in a building or parking facility associated with an organization prior to sending an alert to the point of contact or prior to escalating an alert beyond the point of contact.

The point of contact priority window enables selection of one of a number of techniques for determining primary and subsequent points of contacts to whom alerts are sent in response to error related and or failure related events within an information management system. The point of contact priority window may enable a user to select or determine an alert escalation rule using manual parameters team based parameters or using graphically assigned parameters . Manual parameters may include a name username phone number or email address of one or more points of contact for the storage manager to incrementally contact. The team based parameters may allow a user to prioritize teams within an IT department that are contacted in response to an alert causing system event. Graphically assigned parameters may enable a user to graphically assign an order of alert escalation as described in the discussion related to .

Information displayed in the point of contact priority window can be based on information acquired from one or more system directories. For example the team based priority parameters and the graphically assigned parameters can be populated by performing an Active Directory query of each subgroup in the IT department and displaying the results for prioritization by the user. A similar query can be used to populate the graphically assigned parameters . As a result utilization of system directories such as Active Directory enables the alert escalation interface to enable a user to select from and prioritize alert delivery for various members of an IT support team or other groups responsible for information management operations support.

Hereafter various example systems are illustrated and described to provide further example embodiments into which the systems and methods of may be implemented. Additionally systems illustrated in and related discussions further expound on features of each of the components introduced in information management systems and . Taken together with the disclosure of the systems of further enable work queue management estimating or forecasting information management operation failures and escalation of information management system alerts to resolve system errors failures and performance glitches.

Depending on the size of the organization there are typically many data production sources which are under the purview of tens hundreds or even thousands of employees or other individuals. In the past individual employees were sometimes responsible for managing and protecting their data. A patchwork of hardware and software point solutions has been applied in other cases. These solutions were often provided by different vendors and had limited or no interoperability.

Certain embodiments described herein provide systems and methods capable of addressing these and other shortcomings of prior approaches by implementing unified organization wide information management. shows one such information management system which generally includes combinations of hardware and software configured to protect and manage data and metadata generated and used by the various computing devices in the information management system .

The organization which employs the information management system may be a corporation or other business entity non profit organization educational institution household governmental agency or the like.

Generally the systems and associated components described herein may be compatible with and or provide some or all of the functionality of the systems and corresponding components described in one or more of the following U.S. patents and patent application publications assigned to CommVault Systems Inc. each of which is hereby incorporated in its entirety by reference herein 

The information management system can include a variety of different computing devices. For instance as will be described in greater detail herein the information management system can include one or more client computing devices and secondary storage computing devices .

Computing devices can include without limitation one or more workstations personal computers desktop computers or other types of generally fixed computing systems such as mainframe computers and minicomputers.

Other computing devices can include mobile or portable computing devices such as one or more laptops tablet computers personal data assistants mobile phones such as smartphones and other mobile or portable computing devices such as embedded computers set top boxes vehicle mounted devices wearable computers etc. Computing devices can include servers such as mail servers file servers database servers and web servers.

In some cases a computing device includes virtualized and or cloud computing resources. For instance one or more virtual machines may be provided to the organization by a third party cloud service vendor. Or in some embodiments computing devices can include one or more virtual machine s running on a physical host computing device or host machine operated by the organization. As one example the organization may use one virtual machine as a database server and another virtual machine as a mail server both virtual machines operating on the same host machine.

A virtual machine includes an operating system and associated virtual resources and is hosted simultaneously with another operating system on a physical host computer or host machine . A hypervisor typically software and also known in the art as a virtual machine monitor or a virtual machine manager or VMM sits between the virtual machine and the hardware of the physical host computer. One example of hypervisor as virtualization software is ESX Server by VMware Inc. of Palo Alto Calif. other examples include Microsoft Virtual Server and Microsoft Windows Server Hyper V both by Microsoft Corporation of Redmond Wash. and Sun xVM by Oracle America Inc. of Santa Clara Calif. In some embodiments the hypervisor may be firmware or hardware or a combination of software and or firmware and or hardware.

The hypervisor provides to each virtual operating system virtual resources such as a virtual processor virtual memory a virtual network device and a virtual disk. Each virtual machine has one or more virtual disks. The hypervisor typically stores the data of virtual disks in files on the file system of the physical host computer called virtual machine disk files in the case of VMware virtual servers or virtual hard disk image files in the case of Microsoft virtual servers . For example VMware s ESX Server provides the Virtual Machine File System VMFS for the storage of virtual machine disk files. A virtual machine reads data from and writes data to its virtual disk much the same way that an actual physical machine reads data from and writes data to an actual disk.

Examples of techniques for implementing information management techniques in a cloud computing environment are described in U.S. Pat. No. 8 285 681 which is incorporated by reference herein. Examples of techniques for implementing information management techniques in a virtualized computing environment are described in U.S. Pat. No. 8 307 177 also incorporated by reference herein.

The information management system can also include a variety of storage devices including primary storage devices and secondary storage devices for example. Storage devices can generally be of any suitable type including without limitation disk drives hard disk arrays semiconductor memory e.g. solid state storage devices network attached storage NAS devices tape libraries or other magnetic non tape storage devices optical media storage devices DNA RNA based memory technology combinations of the same and the like. In some embodiments storage devices can form part of a distributed file system. In some cases storage devices are provided in a cloud e.g. a private cloud or one operated by a third party vendor . A storage device in some cases comprises a disk array or portion thereof.

The illustrated information management system includes one or more client computing device having at least one application executing thereon and one or more primary storage devices storing primary data . The client computing device s and the primary storage devices may generally be referred to in some cases as a primary storage subsystem . A computing device in an information management system that has a data agent installed on it is generally referred to as a client computing device or in the context of a component of the information management system simply as a client .

Depending on the context the term information management system can refer to generally all of the illustrated hardware and software components. Or in other instances the term may refer to only a subset of the illustrated components.

For instance in some cases the information management system generally refers to a combination of specialized components used to protect move manage manipulate analyze and or process data and metadata generated by the client computing devices . However the information management system in some cases does not include the underlying components that generate and or store the primary data such as the client computing devices themselves the applications and operating system residing on the client computing devices and the primary storage devices . As an example information management system may sometimes refer to one or more of the following components and corresponding data structures storage managers data agents and media agents. These components will be described in further detail below.

There are typically a variety of sources in an organization that produce data to be protected and managed. As just one illustrative example in a corporate environment such data sources can be employee workstations and company servers such as a mail server a web server or the like. In the information management system the data generation sources include the one or more client computing devices .

The client computing devices may include any of the types of computing devices described above without limitation and in some cases the client computing devices are associated with one or more users and or corresponding user accounts of employees or other individuals.

The information management system generally addresses and handles the data management and protection needs for the data generated by the client computing devices . However the use of this term does not imply that the client computing devices cannot be servers in other respects. For instance a particular client computing device may act as a server with respect to other devices such as other client computing devices . As just a few examples the client computing devices can include mail servers file servers database servers and web servers.

Each client computing device may have one or more applications e.g. software applications executing thereon which generate and manipulate the data that is to be protected from loss and managed.

The applications generally facilitate the operations of an organization or multiple affiliated organizations and can include without limitation mail server applications e.g. Microsoft Exchange Server file server applications mail client applications e.g. Microsoft Exchange Client database applications e.g. SQL Oracle SAP Lotus Notes Database word processing applications e.g. Microsoft Word spreadsheet applications financial applications presentation applications browser applications mobile applications entertainment applications and so on.

The client computing devices can have at least one operating system e.g. Microsoft Windows Mac OS X iOS IBM z OS Linux other Unix based operating systems etc. installed thereon which may support or host one or more file systems and other applications .

As shown the client computing devices and other components in the information management system can be connected to one another via one or more communication pathways . The communication pathways can include one or more networks or other connection types including as any of following without limitation the Internet a wide area network WAN a local area network LAN a Storage Area Network SAN a Fibre Channel connection a Small Computer System Interface SCSI connection a virtual private network VPN a token ring or TCP IP based network an intranet network a point to point link a cellular network a wireless data transmission system a two way cable system an interactive kiosk network a satellite network a broadband network a baseband network a neural network a mesh network an ad hoc network other appropriate wired wireless or partially wired wireless computer or telecommunications networks combinations of the same or the like. The communication pathways in some cases may also include application programming interfaces APIs including e.g. cloud service provider APIs virtual machine management APIs and hosted service provider APIs.

Primary data according to some embodiments is production data or other live data generated by the operating system and other applications residing on a client computing device . The primary data is generally stored on the primary storage device s and is organized via a file system supported by the client computing device . For instance the client computing device s and corresponding applications may create access modify write delete and otherwise use primary data . In some cases some or all of the primary data can be stored in cloud storage resources.

Primary data is generally in the native format of the source application . According to certain aspects primary data is an initial or first e.g. created before any other copies or before at least one other copy stored copy of data generated by the source application . Primary data in some cases is created substantially directly from data generated by the corresponding source applications .

The primary data may sometimes be referred to as a primary copy in the sense that it is a discrete set of data. However the use of this term does not necessarily imply that the primary copy is a copy in the sense that it was copied or otherwise derived from another stored version.

The primary storage devices storing the primary data may be relatively fast and or expensive e.g. a disk drive a hard disk array solid state memory etc. . In addition primary data may be intended for relatively short term retention e.g. several hours days or weeks .

According to some embodiments the client computing device can access primary data from the primary storage device by making conventional file system calls via the operating system. Primary data representing files may include structured data e.g. database files unstructured data e.g. documents and or semi structured data. Some specific examples are described below with respect to .

It can be useful in performing certain tasks to organize the primary data into units of different granularities. In general primary data can include files directories file system volumes data blocks extents or any other hierarchies or organizations of data objects. As used herein a data object can refer to both 1 any file that is currently addressable by a file system or that was previously addressable by the file system e.g. an archive file and 2 a subset of such a file e.g. a data block .

As will be described in further detail it can also be useful in performing certain functions of the information management system to access and modify metadata within the primary data . Metadata generally includes information about data objects or characteristics associated with the data objects.

Metadata can include without limitation one or more of the following the data owner e.g. the client or user that generates the data the last modified time e.g. the time of the most recent modification of the data object a data object name e.g. a file name a data object size e.g. a number of bytes of data information about the content e.g. an indication as to the existence of a particular search term user supplied tags to from information for email e.g. an email sender recipient etc. creation date file type e.g. format or application type last accessed time application type e.g. type of application that generated the data object location network e.g. a current past or future location of the data object and network pathways to from the data object geographic location e.g. GPS coordinates frequency of change e.g. a period in which the data object is modified business unit e.g. a group or department that generates manages or is otherwise associated with the data object aging information e.g. a schedule such as a time period in which the data object is migrated to secondary or long term storage boot sectors partition layouts file location within a file folder directory structure user permissions owners groups access control lists ACLS system metadata e.g. registry information combinations of the same or the other similar information related to the data object.

In addition to metadata generated by or related to file systems and operating systems some of the applications and or other components of the information management system maintain indices of metadata for data objects e.g. metadata associated with individual email messages. Thus each data object may be associated with corresponding metadata. The use of metadata to perform classification and other functions is described in greater detail below.

Each of the client computing devices are generally associated with and or in communication with one or more of the primary storage devices storing corresponding primary data . A client computing device may be considered to be associated with or in communication with a primary storage device if it is capable of one or more of routing and or storing data to the particular primary storage device coordinating the routing and or storing of data to the particular primary storage device retrieving data from the particular primary storage device coordinating the retrieval of data from the particular primary storage device and modifying and or deleting data retrieved from the particular primary storage device .

The primary storage devices can include any of the different types of storage devices described above or some other kind of suitable storage device. The primary storage devices may have relatively fast I O times and or are relatively expensive in comparison to the secondary storage devices . For example the information management system may generally regularly access data and metadata stored on primary storage devices whereas data and metadata stored on the secondary storage devices is accessed relatively less frequently.

In some cases each primary storage device is dedicated to an associated client computing device . For instance a primary storage device in one embodiment is a local disk drive of a corresponding client computing device . In other cases one or more primary storage devices can be shared by multiple client computing devices e.g. via a network such as in a cloud storage implementation. As one example a primary storage device can be a disk array shared by a group of client computing devices such as one of the following types of disk arrays EMC Clariion EMC Symmetrix EMC Celerra Dell EqualLogic IBM XIV NetApp FAS HP EVA and HP 3PAR.

The information management system may also include hosted services not shown which may be hosted in some cases by an entity other than the organization that employs the other components of the information management system . For instance the hosted services may be provided by various online service providers to the organization. Such service providers can provide services including social networking services hosted email services or hosted productivity applications or other hosted applications .

Hosted services may include software as a service SaaS platform as a service PaaS application service providers ASPs cloud services or other mechanisms for delivering functionality via a network. As it provides services to users each hosted service may generate additional data and metadata under management of the information management system e.g. as primary data . In some cases the hosted services may be accessed using one of the applications . As an example a hosted mail service may be accessed via browser running on a client computing device . The hosted services may be implemented in a variety of computing environments. In some cases they are implemented in an environment having a similar arrangement to the information management system where various physical and logical components are distributed over a network.

The primary data stored on the primary storage devices may be compromised in some cases such as when an employee deliberately or accidentally deletes or overwrites primary data during their normal course of work. Or the primary storage devices can be damaged or otherwise corrupted.

For recovery and or regulatory compliance purposes it is therefore useful to generate copies of the primary data . Accordingly the information management system includes one or more secondary storage computing devices and one or more secondary storage devices configured to create and store one or more secondary copies of the primary data and associated metadata. The secondary storage computing devices and the secondary storage devices may sometimes be referred to as a secondary storage subsystem .

Creation of secondary copies can help in search and analysis efforts and meet other information management goals such as restoring data and or metadata if an original version e.g. of primary data is lost e.g. by deletion corruption or disaster allowing point in time recovery complying with regulatory data retention and electronic discovery e discovery requirements reducing utilized storage capacity facilitating organization and search of data improving user access to data files across multiple computing devices and or hosted services and implementing data retention policies.

The client computing devices access or receive primary data and communicate the data e.g. over the communication pathways for storage in the secondary storage device s .

A secondary copy can comprise a separate stored copy of application data that is derived from one or more earlier created stored copies e.g. derived from primary data or another secondary copy . Secondary copies can include point in time data and may be intended for relatively long term retention e.g. weeks months or years before some or all of the data is moved to other storage or is discarded.

In some cases a secondary copy is a copy of application data created and stored subsequent to at least one other stored instance e.g. subsequent to corresponding primary data or to another secondary copy in a different storage device than at least one previous stored copy and or remotely from at least one previous stored copy. In some other cases secondary copies can be stored in the same storage device as primary data and or other previously stored copies. For example in one embodiment a disk array capable of performing hardware snapshots stores primary data and creates and stores hardware snapshots of the primary data as secondary copies . Secondary copies may be stored in relatively slow and or low cost storage e.g. magnetic tape . A secondary copy may be stored in a backup or archive format or in some other format different than the native source application format or other primary data format.

In some cases secondary copies are indexed so users can browse and restore at another point in time. After creation of a secondary copy representative of certain primary data a pointer or other location indicia e.g. a stub may be placed in primary data or be otherwise associated with primary data to indicate the current location on the secondary storage device s .

Since an instance of a data object or metadata in primary data may change over time as it is modified by an application or hosted service or the operating system the information management system may create and manage multiple secondary copies of a particular data object or metadata each representing the state of the data object in primary data at a particular point in time. Moreover since an instance of a data object in primary data may eventually be deleted from the primary storage device and the file system the information management system may continue to manage point in time representations of that data object even though the instance in primary data no longer exists.

For virtualized computing devices the operating system and other applications of the client computing device s may execute within or under the management of virtualization software e.g. a VMM and the primary storage device s may comprise a virtual disk created on a physical storage device. The information management system may create secondary copies of the files or other data objects in a virtual disk file and or secondary copies of the entire virtual disk file itself e.g. of an entire.vmdk file .

Secondary copies may be distinguished from corresponding primary data in a variety of ways some of which will now be described. First as discussed secondary copies can be stored in a different format e.g. backup archive or other non native format than primary data . For this or other reasons secondary copies may not be directly useable by the applications of the client computing device e.g. via standard system calls or otherwise without modification processing or other intervention by the information management system .

Secondary copies are also in some embodiments stored on a secondary storage device that is inaccessible to the applications running on the client computing devices and or hosted services . Some secondary copies may be offline copies in that they are not readily available e.g. not mounted to tape or disk . Offline copies can include copies of data that the information management system can access without human intervention e.g. tapes within an automated tape library but not yet mounted in a drive and copies that the information management system can access only with at least some human intervention e.g. tapes located at an offsite storage site .

Creating secondary copies can be a challenging task. For instance there can be hundreds or thousands of client computing devices continually generating large volumes of primary data to be protected. Also there can be significant overhead involved in the creation of secondary copies . Moreover secondary storage devices may be special purpose components and interacting with them can require specialized intelligence.

In some cases the client computing devices interact directly with the secondary storage device to create the secondary copies . However in view of the factors described above this approach can negatively impact the ability of the client computing devices to serve the applications and produce primary data . Further the client computing devices may not be optimized for interaction with the secondary storage devices .

Thus in some embodiments the information management system includes one or more software and or hardware components which generally act as intermediaries between the client computing devices and the secondary storage devices . In addition to off loading certain responsibilities from the client computing devices these intermediate components can provide other benefits. For instance as discussed further below with respect to distributing some of the work involved in creating secondary copies can enhance scalability.

The intermediate components can include one or more secondary storage computing devices as shown in and or one or more media agents which can be software modules residing on corresponding secondary storage computing devices or other appropriate devices . Media agents are discussed below e.g. with respect to .

The secondary storage computing device s can comprise any of the computing devices described above without limitation. In some cases the secondary storage computing device s include specialized hardware and or software componentry for interacting with the secondary storage devices .

To create a secondary copy involving the copying of data from the primary storage subsystem to the secondary storage subsystem the client computing device in some embodiments communicates the primary data to be copied or a processed version thereof to the designated secondary storage computing device via the communication pathway . The secondary storage computing device in turn conveys the received data or a processed version thereof to the secondary storage device . In some such configurations the communication pathway between the client computing device and the secondary storage computing device comprises a portion of a LAN WAN or SAN. In other cases at least some client computing devices communicate directly with the secondary storage devices e.g. via Fibre Channel or SCSI connections . In some other cases one or more secondary copies are created from existing secondary copies such as in the case of an auxiliary copy operation described in greater detail below.

Some or all primary data objects are associated with corresponding metadata e.g. Meta which may include file system metadata and or application specific metadata. Stored on the secondary storage device s are secondary copy data objects A C which may include copies of or otherwise represent corresponding primary data objects and metadata.

As shown the secondary copy data objects A C can individually represent more than one primary data object. For example secondary copy data object A represents three separate primary data objects C and C represented as C and C respectively and accompanied by the corresponding metadata Meta Meta and Meta respectively . Moreover as indicated by the prime mark a secondary copy object may store a representation of a primary data object or metadata differently than the original format e.g. in a compressed encrypted deduplicated or other modified format. Likewise secondary data object B represents primary data objects B and A as B and A respectively and accompanied by corresponding metadata Meta Meta and Meta respectively. Also secondary data object C represents primary data objects A B and A as A B and A respectively accompanied by corresponding metadata Meta Meta and Meta respectively.

The information management system can incorporate a variety of different hardware and software components which can in turn be organized with respect to one another in many different configurations depending on the embodiment. There are critical design choices involved in specifying the functional responsibilities of the components and the role of each component in the information management system . For instance as will be discussed such design choices can impact performance as well as the adaptability of the information management system to data growth or other changing circumstances.

As noted the number of components in the information management system and the amount of data under management can be quite large. Managing the components and data is therefore a significant task and a task that can grow in an often unpredictable fashion as the quantity of components and data scale to meet the needs of the organization.

For these and other reasons according to certain embodiments responsibility for controlling the information management system or at least a significant portion of that responsibility is allocated to the storage manager .

By distributing control functionality in this manner the storage manager can be adapted independently according to changing circumstances. Moreover a computing device for hosting the storage manager can be selected to best suit the functions of the storage manager . These and other advantages are described in further detail below with respect to .

The storage manager may be a software module or other application. In some embodiments storage manager is a computing device comprising circuitry for executing computer instructions and performs the functions described herein. The storage manager generally initiates performs coordinates and or controls storage and other information management operations performed by the information management system e.g. to protect and control the primary data and secondary copies of data and metadata.

As shown by the dashed arrowed lines the storage manager may communicate with and or control some or all elements of the information management system such as the data agents and media agents . Thus in certain embodiments control information originates from the storage manager whereas payload data and payload metadata is generally communicated between the data agents and the media agents or otherwise between the client computing device s and the secondary storage computing device s e.g. at the direction of the storage manager . Control information can generally include parameters and instructions for carrying out information management operations such as without limitation instructions to perform a task associated with an operation timing information specifying when to initiate a task associated with an operation data path information specifying what components to communicate with or access in carrying out an operation and the like. Payload data on the other hand can include the actual data involved in the storage operation such as content data written to a secondary storage device in a secondary copy operation. Payload metadata can include any of the types of metadata described herein and may be written to a storage device along with the payload content data e.g. in the form of a header .

In other embodiments some information management operations are controlled by other components in the information management system e.g. the media agent s or data agent s instead of or in combination with the storage manager .

According to certain embodiments the storage manager provides one or more of the following functions 

The storage manager may maintain a database or storage manager database or management database of management related data and information management policies . The database may include a management index or index or other data structure that stores logical associations between components of the system user preferences and or profiles e.g. preferences regarding encryption compression or deduplication of primary or secondary copy data preferences regarding the scheduling type or other aspects of primary or secondary copy or other operations mappings of particular information management users or user accounts to certain computing devices or other components etc. management tasks media containerization or other useful data. For example the storage manager may use the index to track logical associations between media agents and secondary storage devices and or movement of data from primary storage devices to secondary storage devices . For instance the index may store data associating a client computing device with a particular media agent and or secondary storage device as specified in an information management policy e.g. a storage policy which is defined in more detail below .

Administrators and other employees may be able to manually configure and initiate certain information management operations on an individual basis. But while this may be acceptable for some recovery operations or other relatively less frequent tasks it is often not workable for implementing on going organization wide data protection and management.

Thus the information management system may utilize information management policies for specifying and executing information management operations e.g. on an automated basis . Generally an information management policy can include a data structure or other information source that specifies a set of parameters e.g. criteria and rules associated with storage or other information management operations.

The storage manager database may maintain the information management policies and associated data although the information management policies can be stored in any appropriate location. For instance an information management policy such as a storage policy may be stored as metadata in a media agent database or in a secondary storage device e.g. as an archive copy for use in restore operations or other information management operations depending on the embodiment. Information management policies are described further below.

According to certain embodiments the storage manager database comprises a relational database e.g. an SQL database for tracking metadata such as metadata associated with secondary copy operations e.g. what client computing devices and corresponding data were protected . This and other metadata may additionally be stored in other locations such as at the secondary storage computing devices or on the secondary storage devices allowing data recovery without the use of the storage manager .

As shown the storage manager may include a jobs agent a user interface and a management agent all of which may be implemented as interconnected software modules or application programs.

The jobs agent in some embodiments initiates controls and or monitors the status of some or all storage or other information management operations previously performed currently being performed or scheduled to be performed by the information management system . For instance the jobs agent may access information management policies to determine when and how to initiate and control secondary copy and other information management operations as will be discussed further.

The user interface may include information processing and display software such as a graphical user interface GUI an application program interface API or other interactive interface s through which users and system processes can retrieve information about the status of information management operations e.g. storage operations or issue instructions to the information management system and its constituent components.

Via the user interface users may optionally issue instructions to the components in the information management system regarding performance of storage and recovery operations. For example a user may modify a schedule concerning the number of pending secondary copy operations. As another example a user may employ the GUI to view the status of pending storage operations or to monitor the status of certain components in the information management system e.g. the amount of capacity left in a storage device .

An information management cell may generally include a logical and or physical grouping of a combination of hardware and software components associated with performing information management operations on electronic data typically one storage manager and at least one client computing device comprising data agent s and at least one media agent . For instance the components shown in may together form an information management cell. Multiple cells may be organized hierarchically. With this configuration cells may inherit properties from hierarchically superior cells or be controlled by other cells in the hierarchy automatically or otherwise . Alternatively in some embodiments cells may inherit or otherwise be associated with information management policies preferences information management metrics or other properties or characteristics according to their relative position in a hierarchy of cells. Cells may also be delineated and or organized hierarchically according to function geography architectural considerations or other factors useful or desirable in performing information management operations. A first cell may represent a geographic segment of an enterprise such as a Chicago office and a second cell may represent a different geographic segment such as a New York office. Other cells may represent departments within a particular office. Where delineated by function a first cell may perform one or more first types of information management operations e.g. one or more first types of secondary or other copies and a second cell may perform one or more second types of information management operations e.g. one or more second types of secondary or other copies .

The storage manager may also track information that permits it to select designate or otherwise identify content indices deduplication databases or similar databases or resources or data sets within its information management cell or another cell to be searched in response to certain queries. Such queries may be entered by the user via interaction with the user interface . In general the management agent allows multiple information management cells to communicate with one another. For example the information management system in some cases may be one information management cell of a network of multiple cells adjacent to one another or otherwise logically related in a WAN or LAN. With this arrangement the cells may be connected to one another through respective management agents .

For instance the management agent can provide the storage manager with the ability to communicate with other components within the information management system and or other cells within a larger information management system via network protocols and application programming interfaces APIs including e.g. HTTP HTTPS FTP REST virtualization software APIs cloud service provider APIs and hosted service provider APIs. Inter cell communication and hierarchy is described in greater detail in U.S. Pat. Nos. 7 747 579 and 7 343 453 which are incorporated by reference herein.

As discussed a variety of different types of applications can reside on a given client computing device including operating systems database applications e mail applications and virtual machines just to name a few. And as part of the process of creating and restoring secondary copies the client computing devices may be tasked with processing and preparing the primary data from these various different applications . Moreover the nature of the processing preparation can differ across clients and application types e.g. due to inherent structural and formatting differences between applications .

The one or more data agent s are therefore advantageously configured in some embodiments to assist in the performance of information management operations based on the type of data that is being protected at a client specific and or application specific level.

The data agent may be a software module or component that is generally responsible for managing initiating or otherwise assisting in the performance of information management operations. For instance the data agent may take part in performing data storage operations such as the copying archiving migrating replicating of primary data stored in the primary storage device s . The data agent may receive control information from the storage manager such as commands to transfer copies of data objects metadata and other payload data to the media agents .

In some embodiments a data agent may be distributed between the client computing device and storage manager and any other intermediate components or may be deployed from a remote location or its functions approximated by a remote process that performs some or all of the functions of data agent . In addition a data agent may perform some functions provided by a media agent or may perform other functions such as encryption and deduplication.

As indicated each data agent may be specialized for a particular application and the system can employ multiple application specific data agents each of which may perform information management operations e.g. perform backup migration and data recovery associated with a different application . For instance different individual data agents may be designed to handle Microsoft Exchange data Lotus Notes data Microsoft Windows file system data Microsoft Active Directory Objects data SQL Server data SharePoint data Oracle database data SAP database data virtual machines and or associated data and other types of data.

A file system data agent for example may handle data files and or other file system information. If a client computing device has two or more types of data one data agent may be used for each data type to copy archive migrate and restore the client computing device data. For example to backup migrate and restore all of the data on a Microsoft Exchange server the client computing device may use one Microsoft Exchange Mailbox data agent to backup the Exchange mailboxes one Microsoft Exchange Database data agent to backup the Exchange databases one Microsoft Exchange Public Folder data agent to backup the Exchange Public Folders and one Microsoft Windows File System data agent to backup the file system of the client computing device . In such embodiments these data agents may be treated as four separate data agents even though they reside on the same client computing device .

Other embodiments may employ one or more generic data agents that can handle and process data from two or more different applications or that can handle and process multiple data types instead of or in addition to using specialized data agents . For example one generic data agent may be used to back up migrate and restore Microsoft Exchange Mailbox data and Microsoft Exchange Database data while another generic data agent may handle Microsoft Exchange Public Folder data and Microsoft Windows File System data.

Each data agent may be configured to access data and or metadata stored in the primary storage device s associated with the data agent and process the data as appropriate. For example during a secondary copy operation the data agent may arrange or assemble the data and metadata into one or more files having a certain format e.g. a particular backup or archive format before transferring the file s to a media agent or other component. The file s may include a list of files or other metadata. Each data agent can also assist in restoring data or metadata to primary storage devices from a secondary copy . For instance the data agent may operate in conjunction with the storage manager and one or more of the media agents to restore data from secondary storage device s .

As indicated above with respect to off loading certain responsibilities from the client computing devices to intermediate components such as the media agent s can provide a number of benefits including improved client computing device operation faster secondary copy operation performance and enhanced scalability. As one specific example which will be discussed below in further detail the media agent can act as a local cache of copied data and or metadata that it has stored to the secondary storage device s providing improved restore capabilities.

Generally speaking a media agent may be implemented as a software module that manages coordinates and facilitates the transmission of data as directed by the storage manager between a client computing device and one or more secondary storage devices . Whereas the storage manager controls the operation of the information management system the media agent generally provides a portal to secondary storage devices . For instance other components in the system interact with the media agents to gain access to data stored on the secondary storage devices whether it be for the purposes of reading writing modifying or deleting data. Moreover as will be described further media agents can generate and store information relating to characteristics of the stored data and or metadata or can generate and store other types of information that generally provides insight into the contents of the secondary storage devices .

Media agents can comprise separate nodes in the information management system e.g. nodes that are separate from the client computing devices storage manager and or secondary storage devices . In general a node within the information management system can be a logically and or physically separate component and in some cases is a component that is individually addressable or otherwise identifiable. In addition each media agent may reside on a dedicated secondary storage computing device in some cases while in other embodiments a plurality of media agents reside on the same secondary storage computing device .

A media agent and corresponding media agent database may be considered to be associated with a particular secondary storage device if that media agent is capable of one or more of routing and or storing data to the particular secondary storage device coordinating the routing and or storing of data to the particular secondary storage device retrieving data from the particular secondary storage device coordinating the retrieval of data from a particular secondary storage device and modifying and or deleting data retrieved from the particular secondary storage device .

While media agent s are generally associated with one or more secondary storage devices one or more media agents in certain embodiments are physically separate from the secondary storage devices . For instance the media agents may reside on secondary storage computing devices having different housings or packages than the secondary storage devices . In one example a media agent resides on a first server computer and is in communication with a secondary storage device s residing in a separate rack mounted RAID based system.

Where the information management system includes multiple media agents a first media agent may provide failover functionality for a second failed media agent . In addition media agents can be dynamically selected for storage operations to provide load balancing. Failover and load balancing are described in greater detail below.

In operation a media agent associated with a particular secondary storage device may instruct the secondary storage device to perform an information management operation. For instance a media agent may instruct a tape library to use a robotic arm or other retrieval means to load or eject a certain storage media and to subsequently archive migrate or retrieve data to or from that media e.g. for the purpose of restoring the data to a client computing device . As another example a secondary storage device may include an array of hard disk drives or solid state drives organized in a RAID configuration and the media agent may forward a logical unit number LUN and other appropriate information to the array which uses the received information to execute the desired storage operation. The media agent may communicate with a secondary storage device via a suitable communications link such as a SCSI or Fiber Channel link.

As shown each media agent may maintain an associated media agent database . The media agent database may be stored in a disk or other storage device not shown that is local to the secondary storage computing device on which the media agent resides. In other cases the media agent database is stored remotely from the secondary storage computing device .

The media agent database can include among other things an index including data generated during secondary copy operations and other storage or information management operations. The index provides a media agent or other component with a fast and efficient mechanism for locating secondary copies or other data stored in the secondary storage devices . In some cases the index does not form a part of and is instead separate from the media agent database .

A media agent index or other data structure associated with the particular media agent may include information about the stored data. For instance for each secondary copy the index may include metadata such as a list of the data objects e.g. files subdirectories database objects mailbox objects etc. a path to the secondary copy on the corresponding secondary storage device location information indicating where the data objects are stored in the secondary storage device when the data objects were created or modified etc. Thus the index includes metadata associated with the secondary copies that is readily available for use in storage operations and other activities without having to be first retrieved from the secondary storage device . In yet further embodiments some or all of the data in the index may instead or additionally be stored along with the data in a secondary storage device e.g. with a copy of the index . In some embodiments the secondary storage devices can include sufficient information to perform a bare metal restore where the operating system of a failed client computing device or other restore target is automatically rebuilt as part of a restore operation.

Because the index maintained in the media agent database may operate as a cache it can also be referred to as an index cache. In such cases information stored in the index cache typically comprises data that reflects certain particulars about storage operations that have occurred relatively recently. After some triggering event such as after a certain period of time elapses or the index cache reaches a particular size the index cache may be copied or migrated to a secondary storage device s . This information may need to be retrieved and uploaded back into the index cache or otherwise restored to a media agent to facilitate retrieval of data from the secondary storage device s . In some embodiments the cached information may include format or containerization information related to archives or other files stored on the storage device s . In this manner the index cache allows for accelerated restores.

In some alternative embodiments the media agent generally acts as a coordinator or facilitator of storage operations between client computing devices and corresponding secondary storage devices but does not actually write the data to the secondary storage device . For instance the storage manager or the media agent may instruct a client computing device and secondary storage device to communicate with one another directly. In such a case the client computing device transmits the data directly or via one or more intermediary components to the secondary storage device according to the received instructions and vice versa. In some such cases the media agent may still receive process and or maintain metadata related to the storage operations. Moreover in these embodiments the payload data can flow through the media agent for the purposes of populating the index cache maintained in the media agent database but not for writing to the secondary storage device .

The media agent and or other components such as the storage manager may in some cases incorporate additional functionality such as data classification content indexing deduplication encryption compression and the like. Further details regarding these and other functions are described below.

As described certain functions of the information management system can be distributed amongst various physical and or logical components in the system. For instance one or more of the storage manager data agents and media agents may reside on computing devices that are physically separate from one another. This architecture can provide a number of benefits.

For instance hardware and software design choices for each distributed component can be targeted to suit its particular function. The secondary computing devices on which the media agents reside can be tailored for interaction with associated secondary storage devices and provide fast index cache operation among other specific tasks. Similarly the client computing device s can be selected to effectively service the applications residing thereon in order to efficiently produce and store primary data .

Moreover in some cases one or more of the individual components in the information management system can be distributed to multiple separate computing devices. As one example for large file systems where the amount of data stored in the database is relatively large the database may be migrated to or otherwise reside on a specialized database server e.g. an SQL server separate from a server that implements the other functions of the storage manager . This configuration can provide added protection because the database can be protected with standard database utilities e.g. SQL log shipping or database replication independent from other functions of the storage manager . The database can be efficiently replicated to a remote site for use in the event of a disaster or other data loss incident at the primary site. Or the database can be replicated to another computing device within the same site such as to a higher performance machine in the event that a storage manager host device can no longer service the needs of a growing information management system .

The distributed architecture also provides both scalability and efficient component utilization. shows an embodiment of the information management system including a plurality of client computing devices and associated data agents as well as a plurality of secondary storage computing devices and associated media agents .

Additional components can be added or subtracted based on the evolving needs of the information management system . For instance depending on where bottlenecks are identified administrators can add additional client computing devices secondary storage computing devices and corresponding media agents and or secondary storage devices . Moreover where multiple fungible components are available load balancing can be implemented to dynamically address identified bottlenecks. As an example the storage manager may dynamically select which media agents and or secondary storage devices to use for storage operations based on a processing load analysis of the media agents and or secondary storage devices respectively.

Moreover each client computing device in some embodiments can communicate with among other components any of the media agents e.g. as directed by the storage manager . And each media agent may be able to communicate with among other components any of the secondary storage devices e.g. as directed by the storage manager . Thus operations can be routed to the secondary storage devices in a dynamic and highly flexible manner to provide load balancing failover and the like. Further examples of scalable systems capable of dynamic storage operations and of systems capable of performing load balancing and fail over are provided in U.S. Pat. No. 7 246 207 which is incorporated by reference herein.

In alternative configurations certain components are not distributed and may instead reside and execute on the same computing device. For example in some embodiments one or more data agents and the storage manager reside on the same client computing device . In another embodiment one or more data agents and one or more media agents reside on a single computing device.

In order to protect and leverage stored data the information management system can be configured to perform a variety of information management operations. As will be described these operations can generally include secondary copy and other data movement operations processing and data manipulation operations analysis reporting and management operations. The operations described herein may be performed on any type of computing platform e.g. between two computers connected via a LAN to a mobile client telecommunications device connected to a server via a WLAN to any manner of client device coupled to a cloud storage target.

Data movement operations according to certain embodiments are generally operations that involve the copying or migration of data e.g. payload data between different locations in the information management system in an original native and or one or more different formats. For example data movement operations can include operations in which stored data is copied migrated or otherwise transferred from one or more first storage devices to one or more second storage devices such as from primary storage device s to secondary storage device s from secondary storage device s to different secondary storage device s from secondary storage devices to primary storage devices or from primary storage device s to different primary storage device s .

Data movement operations can include by way of example backup operations archive operations information lifecycle management operations such as hierarchical storage management operations replication operations e.g. continuous data replication operations snapshot operations deduplication or single instancing operations auxiliary copy operations and the like. As will be discussed some of these operations involve the copying migration or other movement of data without actually creating multiple distinct copies. Nonetheless some or all of these operations are referred to as copy operations for simplicity.

A backup operation creates a copy of a version of data e.g. one or more files or other data units in primary data at a particular point in time. Each subsequent backup copy may be maintained independently of the first. Further a backup copy in some embodiments is generally stored in a form that is different than the native format e.g. a backup format. This can be in contrast to the version in primary data from which the backup copy is derived and which may instead be stored in a native format of the source application s . In various cases backup copies can be stored in a format in which the data is compressed encrypted deduplicated and or otherwise modified from the original application format. For example a backup copy may be stored in a backup format that facilitates compression and or efficient long term storage.

Backup copies can have relatively long retention periods as compared to primary data and may be stored on media with slower retrieval times than primary data and certain other types of secondary copies . On the other hand backups may have relatively shorter retention periods than some other types of secondary copies such as archive copies described below . Backups may sometimes be stored at on offsite location.

Backup operations can include full synthetic or incremental backups. A full backup in some embodiments is generally a complete image of the data to be protected. However because full backup copies can consume a relatively large amount of storage it can be useful to use a full backup copy as a baseline and only store changes relative to the full backup copy for subsequent backup copies.

For instance a differential backup operation or cumulative incremental backup operation tracks and stores changes that have occurred since the last full backup. Differential backups can grow quickly in size but can provide relatively efficient restore times because a restore can be completed in some cases using only the full backup copy and the latest differential copy.

An incremental backup operation generally tracks and stores changes since the most recent backup copy of any type which can greatly reduce storage utilization. In some cases however restore times can be relatively long in comparison to full or differential backups because completing a restore operation may involve accessing a full backup in addition to multiple incremental backups.

Any of the above types of backup operations can be at the volume level file level or block level. Volume level backup operations generally involve the copying of a data volume e.g. a logical disk or partition as a whole. In a file level backup the information management system may generally track changes to individual files at the file level and includes copies of files in the backup copy. In the case of a block level backup files are broken into constituent blocks and changes are tracked at the block level. Upon restore the information management system reassembles the blocks into files in a transparent fashion.

Far less data may actually be transferred and copied to the secondary storage devices during a file level copy than a volume level copy. Likewise a block level copy may involve the transfer of less data than a file level copy resulting in faster execution times. However restoring a relatively higher granularity copy can result in longer restore times. For instance when restoring a block level copy the process of locating constituent blocks can sometimes result in longer restore times as compared to file level backups. Similar to backup operations the other types of secondary copy operations described herein can also be implemented at either the volume level file level or block level.

Because backup operations generally involve maintaining a version of the copied data in primary data and also maintaining backup copies in secondary storage device s they can consume significant storage capacity. To help reduce storage consumption an archive operation according to certain embodiments creates a secondary copy by both copying and removing source data. Or seen another way archive operations can involve moving some or all of the source data to the archive destination. Thus data satisfying criteria for removal e.g. data of a threshold age or size from the source copy may be removed from source storage. Archive copies are sometimes stored in an archive format or other non native application format. The source data may be primary data or a secondary copy depending on the situation. As with backup copies archive copies can be stored in a format in which the data is compressed encrypted deduplicated and or otherwise modified from the original application format.

In addition archive copies may be retained for relatively long periods of time e.g. years and in some cases are never deleted. Archive copies are generally retained for longer periods of time than backup copies for example. In certain embodiments archive copies may be made and kept for extended periods in order to meet compliance regulations.

Moreover when primary data is archived in some cases the archived primary data or a portion thereof is deleted when creating the archive copy. Thus archiving can serve the purpose of freeing up space in the primary storage device s . Similarly when a secondary copy is archived the secondary copy may be deleted and an archive copy can therefore serve the purpose of freeing up space in secondary storage device s . In contrast source copies often remain intact when creating backup copies. Examples of compatible data archiving operations are provided in U.S. Pat. No. 7 107 298 which is incorporated by reference herein.

Snapshot operations can provide a relatively lightweight efficient mechanism for protecting data. From an end user viewpoint a snapshot may be thought of as an instant image of the primary data at a given point in time and may include state and or status information relative to an application that creates manages the data. In one embodiment a snapshot may generally capture the directory structure of an object in primary data such as a file or volume or other data set at a particular moment in time and may also preserve file attributes and contents. A snapshot in some cases is created relatively quickly e.g. substantially instantly using a minimum amount of file space but may still function as a conventional file system backup.

A hardware snapshot or hardware based snapshot operation can be a snapshot operation where a target storage device e.g. a primary storage device or a secondary storage device performs the snapshot operation in a self contained fashion substantially independently using hardware firmware and or software residing on the storage device itself. For instance the storage device may be capable of performing snapshot operations upon request generally without intervention or oversight from any of the other components in the information management system . In this manner In this manner hardware snapshots can off load other components of information management system from processing involved in snapshot creation and management.

A software snapshot or software based snapshot operation on the other hand can be a snapshot operation in which one or more other components in information management system e.g. client computing devices data agents etc. implement a software layer that manages the snapshot operation via interaction with the target storage device. For instance the component implementing the snapshot management software layer may derive a set of pointers and or data that represents the snapshot. The snapshot management software layer may then transmit the same to the target storage device along with appropriate instructions for writing the snapshot.

Some types of snapshots do not actually create another physical copy of all the data as it existed at the particular point in time but may simply create pointers that are able to map files and directories to specific memory locations e.g. to specific disk blocks where the data resides as it existed at the particular point in time. For example a snapshot copy may include a set of pointers derived from the file system or an application. In some other cases the snapshot may be created at the block level such as where creation of the snapshot occurs without awareness of the file system. Each pointer points to a respective stored data block so that collectively the set of pointers reflect the storage location and state of the data object e.g. file s or volume s or data set s at a particular point in time when the snapshot copy was created.

Once a snapshot has been taken subsequent changes to the file system typically do not overwrite the blocks in use at the time of the snapshot. Therefore the initial snapshot may use only a small amount of disk space needed to record a mapping or other data structure representing or otherwise tracking the blocks that correspond to the current state of the file system. Additional disk space is usually required only when files and directories are actually later modified. Furthermore when files are modified typically only the pointers which map to blocks are copied not the blocks themselves. In some embodiments for example in the case of copy on write snapshots when a block changes in primary storage the block is copied to secondary storage or cached in primary storage before the block is overwritten in primary storage and the pointer to that block changed to reflect the new location of that block. The snapshot mapping of file system data may also be updated to reflect the changed block s at that particular point in time. In some other cases a snapshot includes a full physical copy of all or substantially all of the data represented by the snapshot. Further examples of snapshot operations are provided in U.S. Pat. No. 7 529 782 which is incorporated by reference herein.

A snapshot copy in many cases can be made quickly and without significantly impacting primary computing resources because large amounts of data need not be copied or moved. In some embodiments a snapshot may exist as a virtual file system parallel to the actual file system. Users in some cases gain read only access to the record of files and directories of the snapshot. By electing to restore primary data from a snapshot taken at a given point in time users may also return the current file system to the state of the file system that existed when the snapshot was taken.

Another type of secondary copy operation is a replication operation. Some types of secondary copies are used to periodically capture images of primary data at particular points in time e.g. backups archives and snapshots . However it can also be useful for recovery purposes to protect primary data in a more continuous fashion by replicating the primary data substantially as changes occur. In some cases a replication copy can be a mirror copy for instance where changes made to primary data are mirrored or substantially immediately copied to another location e.g. to secondary storage device s . By copying each write operation to the replication copy two storage systems are kept synchronized or substantially synchronized so that they are virtually identical at approximately the same time. Where entire disk volumes are mirrored however mirroring can require significant amount of storage space and utilizes a large amount of processing resources.

According to some embodiments storage operations are performed on replicated data that represents a recoverable state or known good state of a particular application running on the source system. For instance in certain embodiments known good replication copies may be viewed as copies of primary data . This feature allows the system to directly access copy restore backup or otherwise manipulate the replication copies as if the data was the live primary data . This can reduce access time storage utilization and impact on source applications among other benefits.

Based on known good state information the information management system can replicate sections of application data that represent a recoverable state rather than rote copying of blocks of data. Examples of compatible replication operations e.g. continuous data replication are provided in U.S. Pat. No. 7 617 262 which is incorporated by reference herein.

Another type of data movement operation is deduplication or single instance storage which is useful to reduce the amount of data within the system. For instance some or all of the above described secondary storage operations can involve deduplication in some fashion. New data is read broken down into portions e.g. sub file level blocks files etc. of a selected granularity compared with blocks that are already stored and only the new blocks are stored. Blocks that already exist are represented as pointers to the already stored data.

In order to streamline the comparison process the information management system may calculate and or store signatures e.g. hashes or cryptographically unique IDs corresponding to the individual data blocks in a database and compare the signatures instead of comparing entire data blocks. In some cases only a single instance of each element is stored and deduplication operations may therefore be referred to interchangeably as single instancing operations. Depending on the implementation however deduplication or single instancing operations can store more than one instance of certain data blocks but nonetheless significantly reduce data redundancy.

Depending on the embodiment deduplication blocks can be of fixed or variable length. Using variable length blocks can provide enhanced deduplication by responding to changes in the data stream but can involve complex processing. In some cases the information management system utilizes a technique for dynamically aligning deduplication blocks e.g. fixed length blocks based on changing content in the data stream as described in U.S. Pat. No. 8 364 652 which is incorporated by reference herein.

The information management system can perform deduplication in a variety of manners at a variety of locations in the information management system . For instance in some embodiments the information management system implements target side deduplication by deduplicating data e.g. secondary copies stored in the secondary storage devices . In some such cases the media agents are generally configured to manage the deduplication process. For instance one or more of the media agents maintain a corresponding deduplication database that stores deduplication information e.g. datablock signatures . Examples of such a configuration are provided in U.S. Pat. Pub. No. 2012 0150826 which is incorporated by reference herein. Instead of or in combination with target side deduplication deduplication can also be performed on the source side or client side e.g. to reduce the amount of traffic between the media agents and the client computing device s and or reduce redundant data stored in the primary storage devices . According to various implementations one or more of the storage devices of the target side source side or client side of an operation can be cloud based storage devices. Thus the target side source side and or client side deduplication can be cloud based deduplication. In particular as discussed previously the storage manager may communicate with other components within the information management system via network protocols and cloud service provider APIs to facilitate cloud based deduplication single instancing. Examples of such deduplication techniques are provided in U.S. Pat. Pub. No. 2012 0150818 which is incorporated by reference herein. Some other compatible deduplication single instancing techniques are described in U.S. Pat. Pub. Nos. 2006 0224846 and 2009 0319534 which are incorporated by reference herein.

In some embodiments files and other data over their lifetime move from more expensive quick access storage to less expensive slower access storage. Operations associated with moving data through various tiers of storage are sometimes referred to as information lifecycle management ILM operations.

One type of ILM operation is a hierarchical storage management HSM operation. A HSM operation is generally an operation for automatically moving data between classes of storage devices such as between high cost and low cost storage devices. For instance an HSM operation may involve movement of data from primary storage devices to secondary storage devices or between tiers of secondary storage devices . With each tier the storage devices may be progressively relatively cheaper have relatively slower access restore times etc. For example movement of data between tiers may occur as data becomes less important over time.

In some embodiments an HSM operation is similar to an archive operation in that creating an HSM copy may though not always involve deleting some of the source data e.g. according to one or more criteria related to the source data. For example an HSM copy may include data from primary data or a secondary copy that is larger than a given size threshold or older than a given age threshold and that is stored in a backup format.

Often and unlike some types of archive copies HSM data that is removed or aged from the source copy is replaced by a logical reference pointer or stub. The reference pointer or stub can be stored in the primary storage device or other source storage device such as a secondary storage device to replace the deleted data in primary data or other source copy and to point to or otherwise indicate the new location in a secondary storage device .

According to one example files are generally moved between higher and lower cost storage depending on how often the files are accessed. When a user requests access to the HSM data that has been removed or migrated the information management system uses the stub to locate the data and often make recovery of the data appear transparent even though the HSM data may be stored at a location different from the remaining source data. In this manner the data appears to the user e.g. in file system browsing windows and the like as if it still resides in the source location e.g. in a primary storage device . The stub may also include some metadata associated with the corresponding data so that a file system and or application can provide some information about the data object and or a limited functionality version e.g. a preview of the data object.

An HSM copy may be stored in a format other than the native application format e.g. where the data is compressed encrypted deduplicated and or otherwise modified from the original application format . In some cases copies which involve the removal of data from source storage and the maintenance of stub or other logical reference information on source storage may be referred to generally as on line archive copies . On the other hand copies which involve the removal of data from source storage without the maintenance of stub or other logical reference information on source storage may be referred to as off line archive copies . Examples of HSM and ILM techniques are provided in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

An auxiliary copy is generally a copy operation in which a copy is created of an existing secondary copy . For instance an initial secondary copy may be generated using or otherwise be derived from primary data or other data residing in the secondary storage subsystem whereas an auxiliary copy is generated from the initial secondary copy . Auxiliary copies can be used to create additional standby copies of data and may reside on different secondary storage devices than the initial secondary copies . Thus auxiliary copies can be used for recovery purposes if initial secondary copies become unavailable. Exemplary compatible auxiliary copy techniques are described in further detail in U.S. Pat. No. 8 230 195 which is incorporated by reference herein.

The information management system may also perform disaster recovery operations that make or retain disaster recovery copies often as secondary high availability disk copies. The information management system may create secondary disk copies and store the copies at disaster recovery locations using auxiliary copy or replication operations such as continuous data replication technologies. Depending on the particular data protection goals disaster recovery locations can be remote from the client computing devices and primary storage devices remote from some or all of the secondary storage devices or both.

Data analysis reporting and management operations can be different than data movement operations in that they do not necessarily involve the copying migration or other transfer of data e.g. primary data or secondary copies between different locations in the system. For instance data analysis operations may involve processing e.g. offline processing or modification of already stored primary data and or secondary copies . However in some embodiments data analysis operations are performed in conjunction with data movement operations. Some data analysis operations include content indexing operations and classification operations which can be useful in leveraging the data under management to provide enhanced search and other features. Other data analysis operations such as compression and encryption can provide data reduction and security benefits respectively.

In some embodiments the information management system analyzes and indexes characteristics content and metadata associated with the data stored within the primary data and or secondary copies providing enhanced search and management capabilities for data discovery and other purposes. The content indexing can be used to identify files or other data objects having pre defined content e.g. user defined keywords or phrases other keywords phrases that are not defined by a user etc. and or metadata e.g. email metadata such as to from cc bcc attachment name received time etc. .

The information management system generally organizes and catalogues the results in a content index which may be stored within the media agent database for example. The content index can also include the storage locations of or pointer references to the indexed data in the primary data or secondary copies as appropriate. The results may also be stored in the form of a content index database or otherwise elsewhere in the information management system e.g. in the primary storage devices or in the secondary storage device . Such index data provides the storage manager or another component with an efficient mechanism for locating primary data and or secondary copies of data objects that match particular criteria.

For instance search criteria can be specified by a user through user interface of the storage manager . In some cases the information management system analyzes data and or metadata in secondary copies to create an off line content index without significantly impacting the performance of the client computing devices . Depending on the embodiment the system can also implement on line content indexing e.g. of primary data . Examples of compatible content indexing techniques are provided in U.S. Pat. No. 8 170 995 which is incorporated by reference herein.

In order to further leverage the data stored in the information management system to perform these and other tasks one or more components can be configured to scan data and or associated metadata for classification purposes to populate a database or other data structure of information which can be referred to as a data classification database or a metabase . Depending on the embodiment the data classification database s can be organized in a variety of different ways including centralization logical sub divisions and or physical sub divisions. For instance one or more centralized data classification databases may be associated with different subsystems or tiers within the information management system . As an example there may be a first centralized metabase associated with the primary storage subsystem and a second centralized metabase associated with the secondary storage subsystem . In other cases there may be one or more metabases associated with individual components. For instance there may be a dedicated metabase associated with some or all of the client computing devices and or media agents . In some embodiments a data classification database may reside as one or more data structures within management database or may be otherwise associated with storage manager .

In some cases the metabase s may be included in separate database s and or on separate storage device s from primary data and or secondary copies such that operations related to the metabase do not significantly impact performance on other components in the information management system . In other cases the metabase s may be stored along with primary data and or secondary copies . Files or other data objects can be associated with identifiers e.g. tag entries etc. in the media agent or other indices to facilitate searches of stored data objects. Among a number of other benefits the metabase can also allow efficient automatic identification of files or other data objects to associate with secondary copy or other information management operations e.g. in lieu of scanning an entire file system . Examples of compatible metabases and data classification operations are provided in U.S. Pat. Nos. 8 229 954 and 7 747 579 which are incorporated by reference herein.

The information management system in some cases is configured to process data e.g. files or other data objects secondary copies etc. according to an appropriate encryption algorithm e.g. Blowfish Advanced Encryption Standard AES Triple Data Encryption Standard 3 DES etc. to limit access and provide data security in the information management system .

The information management system in some cases encrypts the data at the client level such that the client computing devices e.g. the data agents encrypt the data prior to forwarding the data to other components e.g. before sending the data to media agents during a secondary copy operation. In such cases the client computing device may maintain or have access to an encryption key or passphrase for decrypting the data upon restore. Encryption can also occur when creating copies of secondary copies e.g. when creating auxiliary copies or archive copies. In yet further embodiments the secondary storage devices can implement built in high performance hardware encryption.

Certain embodiments leverage the integrated ubiquitous nature of the information management system to provide useful system wide management and reporting functions. Examples of some compatible management and reporting techniques are provided in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

Operations management can generally include monitoring and managing the health and performance of information management system by without limitation performing error tracking generating granular storage performance metrics e.g. job success failure information deduplication efficiency etc. generating storage modeling and costing information and the like.

As an example a storage manager or other component in the information management system may analyze traffic patterns and suggest or automatically route data via a particular route to e.g. certain facilitate storage and minimize congestion. In some embodiments the system can generate predictions relating to storage operations or storage operation information. Such predictions described may be based on a trending analysis that may be used to predict various network operations or use of network resources such as network traffic levels storage media use use of bandwidth of communication links use of media agent components etc. Further examples of traffic analysis trend analysis prediction generation and the like are described in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

In some configurations a master storage manager may track the status of a set of associated storage operation cells in a hierarchy of information management cells such as the status of jobs system components system resources and other items by communicating with storage managers or other components in the respective storage operation cells. Moreover the master storage manager may track the status of its associated storage operation cells and associated information management operations by receiving periodic status updates from the storage managers or other components in the respective cells regarding jobs system components system resources and other items. In some embodiments a master storage manager may store status information and other information regarding its associated storage operation cells and other system information in its index or other location .

The master storage manager or other component in the system may also determine whether a storage related criteria or other criteria is satisfied and perform an action or trigger event e.g. data migration in response to the criteria being satisfied such as where a storage threshold is met for a particular volume or where inadequate protection exists for certain data. For instance in some embodiments the system uses data from one or more storage operation cells to advise users of risks or indicates actions that can be used to mitigate or otherwise minimize these risks and in some embodiments dynamically takes action to mitigate or minimize these risks. For example an information management policy may specify certain requirements e.g. that a storage device should maintain a certain amount of free space that secondary copies should occur at a particular interval that data should be aged and migrated to other storage after a particular period that data on a secondary volume should always have a certain level of availability and be able to be restored within a given time period that data on a secondary volume may be mirrored or otherwise migrated to a specified number of other volumes etc. . If a risk condition or other criteria is triggered the system can notify the user of these conditions and may suggest or automatically implement an action to mitigate or otherwise address the condition or minimize risk. For example the system may indicate that data from a primary copy should be migrated to a secondary storage device to free space on the primary storage device . Examples of the use of risk factors and other triggering criteria are described in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

In some embodiments the system may also determine whether a metric or other indication satisfies a particular storage criteria and if so perform an action. For example as previously described a storage policy or other definition might indicate that a storage manager should initiate a particular action if a storage metric or other indication drops below or otherwise fails to satisfy specified criteria such as a threshold of data protection. Examples of such metrics are described in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

In some embodiments risk factors may be quantified into certain measurable service or risk levels for ease of comprehension. For example certain applications and associated data may be considered to be more important by an enterprise than other data and services. Financial compliance data for example may be of greater importance than marketing materials etc. Network administrators may assign priorities or weights to certain data or applications corresponding to its importance priority value . The level of compliance with the storage operations specified for these applications may also be assigned a certain value. Thus the health impact and overall importance of a service on an enterprise may be determined for example by measuring the compliance value and calculating the product of the priority value and the compliance value to determine the service level and comparing it to certain operational thresholds to determine if the operation is being performed within a specified data protection service level. Further examples of the service level determination are provided in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

The system may additionally calculate data costing and data availability associated with information management operation cells according to an embodiment of the invention. For instance data received from the cell may be used in conjunction with hardware related information and other information about network elements to generate indications of costs associated with storage of particular data in the system or the availability of particular data in the system. In general components in the system are identified and associated information is obtained dynamically or manually . Characteristics or metrics associated with the network elements may be identified and associated with that component element for further use generating an indication of storage cost or data availability. Exemplary information generated could include how fast a particular department is using up available storage space how long data would take to recover over a particular network pathway from a particular secondary storage device costs over time etc. Moreover in some embodiments such information may be used to determine or predict the overall cost associated with the storage of certain information. The cost associated with hosting a certain application may be based at least in part on the type of media on which the data resides. Storage devices may be assigned to a particular cost category which is indicative of the cost of storing information on that device. Further examples of costing techniques are described in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

Any of the above types of information e.g. information related to trending predictions job cell or component status risk service level costing etc. can generally be provided to users via the user interface in a single integrated view or console. The console may support a reporting capability that allows for the generation of a variety of reports which may be tailored to a particular aspect of information management. Report types may include scheduling event management media management and data aging. Available reports may also include backup history data aging history auxiliary copy history job history library and drive media in library restore history and storage policy. Such reports may be specified and created at a certain point in time as a network analysis forecasting or provisioning tool. Integrated reports may also be generated that illustrate storage and performance metrics risks and storage costing information. Moreover users may create their own reports based on specific needs.

The integrated user interface can include an option to show a virtual view of the system that graphically depicts the various components in the system using appropriate icons. As one example the user interface may provide a graphical depiction of one or more primary storage devices the secondary storage devices data agents and or media agents and their relationship to one another in the information management system . The operations management functionality can facilitate planning and decision making. For example in some embodiments a user may view the status of some or all jobs as well as the status of each component of the information management system . Users may then plan and make decisions based on this data. For instance a user may view high level information regarding storage operations for the information management system such as job status component status resource status e.g. network pathways etc. and other information. The user may also drill down or use other means to obtain more detailed information regarding a particular component job or the like.

Further examples of some reporting techniques and associated interfaces providing an integrated view of an information management system are provided in U.S. Pat. No. 7 343 453 which is incorporated by reference herein.

The information management system can also be configured to perform system wide e discovery operations in some embodiments. In general e discovery operations provide a unified collection and search capability for data in the system such as data stored in the secondary storage devices e.g. backups archives or other secondary copies . For example the information management system may construct and maintain a virtual repository for data stored in the information management system that is integrated across source applications different storage device types etc. According to some embodiments e discovery utilizes other techniques described herein such as data classification and or content indexing.

As indicated previously an information management policy can include a data structure or other information source that specifies a set of parameters e.g. criteria and rules associated with secondary copy or other information management operations.

One type of information management policy is a storage policy. According to certain embodiments a storage policy generally comprises a data structure or other information source that defines or includes information sufficient to determine a set of preferences or other criteria for performing information management operations. Storage policies can include one or more of the following items 1 what data will be associated with the storage policy 2 a destination to which the data will be stored 3 datapath information specifying how the data will be communicated to the destination 4 the type of storage operation to be performed and 5 retention information specifying how long the data will be retained at the destination.

As an illustrative example data associated with a storage policy can be logically organized into groups. In some cases these logical groupings can be referred to as sub clients . A sub client may represent static or dynamic associations of portions of a data volume. Sub clients may represent mutually exclusive portions. Thus in certain embodiments a portion of data may be given a label and the association is stored as a static entity in an index database or other storage location.

Sub clients may also be used as an effective administrative scheme of organizing data according to data type department within the enterprise storage preferences or the like. Depending on the configuration sub clients can correspond to files folders virtual machines databases etc. In one exemplary scenario an administrator may find it preferable to separate e mail data from financial data using two different sub clients.

A storage policy can define where data is stored by specifying a target or destination storage device or group of storage devices . For instance where the secondary storage device includes a group of disk libraries the storage policy may specify a particular disk library for storing the sub clients associated with the policy. As another example where the secondary storage devices include one or more tape libraries the storage policy may specify a particular tape library for storing the sub clients associated with the storage policy and may also specify a drive pool and a tape pool defining a group of tape drives and a group of tapes respectively for use in storing the sub client data. While information in the storage policy can be statically assigned in some cases some or all of the information in the storage policy can also be dynamically determined based on criteria which can be set forth in the storage policy. For instance based on such criteria a particular destination storage device s or other parameter of the storage policy may be determined based on characteristics associated with the data involved in a particular storage operation device availability e.g. availability of a secondary storage device or a media agent network status and conditions e.g. identified bottlenecks user credentials and the like .

Datapath information can also be included in the storage policy. For instance the storage policy may specify network pathways and components to utilize when moving the data to the destination storage device s . In some embodiments the storage policy specifies one or more media agents for conveying data e.g. one or more sub clients associated with the storage policy between the source e.g. one or more host client computing devices and destination e.g. a particular target secondary storage device .

A storage policy can also specify the type s of operations associated with the storage policy such as a backup archive snapshot auxiliary copy or the like. Retention information can specify how long the data will be kept depending on organizational needs e.g. a number of days months years etc. 

The information management policies may also include one or more scheduling policies specifying when and how often to perform operations. Scheduling information may specify with what frequency e.g. hourly weekly daily event based etc. or under what triggering conditions secondary copy or other information management operations will take place. Scheduling policies in some cases are associated with particular components such as particular logical groupings of data associated with a storage policy e.g. a sub client client computing device and the like. In one configuration a separate scheduling policy is maintained for particular logical groupings of data on a client computing device . The scheduling policy specifies that those logical groupings are to be moved to secondary storage devices every hour according to storage policies associated with the respective sub clients.

When adding a new client computing device administrators can manually configure information management policies and or other settings e.g. via the user interface . However this can be an involved process resulting in delays and it may be desirable to begin data protecting operations quickly.

Thus in some embodiments the information management system automatically applies a default configuration to client computing device . As one example when one or more data agent s are installed on one or more client computing devices the installation script may register the client computing device with the storage manager which in turn applies the default configuration to the new client computing device . In this manner data protection operations can begin substantially immediately. The default configuration can include a default storage policy for example and can specify any appropriate information sufficient to begin data protection operations. This can include a type of data protection operation scheduling information a target secondary storage device data path information e.g. a particular media agent and the like.

Other types of information management policies are possible. For instance the information management policies can also include one or more audit or security policies. An audit policy is a set of preferences rules and or criteria that protect sensitive data in the information management system . For example an audit policy may define sensitive objects as files or objects that contain particular keywords e.g. confidential or privileged and or are associated with particular keywords e.g. in metadata or particular flags e.g. in metadata identifying a document or email as personal confidential etc. .

An audit policy may further specify rules for handling sensitive objects. As an example an audit policy may require that a reviewer approve the transfer of any sensitive objects to a cloud storage site and that if approval is denied for a particular sensitive object the sensitive object should be transferred to a local primary storage device instead. To facilitate this approval the audit policy may further specify how a secondary storage computing device or other system component should notify a reviewer that a sensitive object is slated for transfer.

In some implementations the information management policies may include one or more provisioning policies. A provisioning policy can include a set of preferences priorities rules and or criteria that specify how client computing devices or groups thereof may utilize system resources such as available storage on cloud storage and or network bandwidth. A provisioning policy specifies for example data quotas for particular client computing devices e.g. a number of gigabytes that can be stored monthly quarterly or annually . The storage manager or other components may enforce the provisioning policy. For instance the media agents may enforce the policy when transferring data to secondary storage devices . If a client computing device exceeds a quota a budget for the client computing device or associated department is adjusted accordingly or an alert may trigger.

While the above types of information management policies have been described as separate policies one or more of these can be generally combined into a single information management policy . For instance a storage policy may also include or otherwise be associated with one or more scheduling audit or provisioning policies. Moreover while storage policies are typically associated with moving and storing data other policies may be associated with other types of information management operations. The following is a non exhaustive list of items the information management policies may specify 

Policies can additionally specify or depend on a variety of historical or current criteria that may be used to determine which rules to apply to a particular data object system component or information management operation such as 

As indicated by the dashed box the second media agent B and the tape library B are off site and may therefore be remotely located from the other components in the information management system e.g. in a different city office building etc. . Indeed off site may refer to a magnetic tape located in storage which must be manually retrieved and loaded into a tape drive to be read. In this manner information stored on the tape library B may provide protection in the event of a disaster or other failure.

The file system sub client and its associated primary data A in certain embodiments generally comprise information generated by the file system and or operating system of the client computing device and can include for example file system data e.g. regular files file tables mount points etc. operating system data e.g. registries event logs etc. and the like. The e mail sub client on the other hand and its associated primary data B include data generated by an e mail client application operating on the client computing device and can include mailbox information folder information emails attachments associated database information and the like. As described above the sub clients can be logical containers and the data included in the corresponding primary data A B may or may not be stored contiguously.

The exemplary storage policy A includes backup copy preferences or rule set disaster recovery copy preferences rule set and compliance copy preferences or rule set . The backup copy rule set specifies that it is associated with a file system sub client and an email sub client . Each of these sub clients are associated with the particular client computing device . The backup copy rule set further specifies that the backup operation will be written to the disk library A and designates a particular media agent A to convey the data to the disk library A. Finally the backup copy rule set specifies that backup copies created according to the rule set are scheduled to be generated on an hourly basis and to be retained for 30 days. In some other embodiments scheduling information is not included in the storage policy A and is instead specified by a separate scheduling policy.

The disaster recovery copy rule set is associated with the same two sub clients . However the disaster recovery copy rule set is associated with the tape library B unlike the backup copy rule set . Moreover the disaster recovery copy rule set specifies that a different media agent B than the media agent A associated with the backup copy rule set will be used to convey the data to the tape library B. As indicated disaster recovery copies created according to the rule set will be retained for 60 days and will be generated on a daily basis. Disaster recovery copies generated according to the disaster recovery copy rule set can provide protection in the event of a disaster or other data loss event that would affect the backup copy A maintained on the disk library A.

The compliance copy rule set is only associated with the email sub client and not the file system sub client . Compliance copies generated according to the compliance copy rule set will therefore not include primary data A from the file system sub client . For instance the organization may be under an obligation to store and maintain copies of email data for a particular period of time e.g. 10 years to comply with state or federal regulations while similar regulations do not apply to the file system data. The compliance copy rule set is associated with the same tape library B and media agent B as the disaster recovery copy rule set although a different storage device or media agent could be used in other embodiments. Finally the compliance copy rule set specifies that copies generated under the compliance copy rule set will be retained for 10 years and will be generated on a quarterly basis.

At step the storage manager initiates a backup operation according to the backup copy rule set . For instance a scheduling service running on the storage manager accesses scheduling information from the backup copy rule set or a separate scheduling policy associated with the client computing device and initiates a backup copy operation on an hourly basis. Thus at the scheduled time slot the storage manager sends instructions to the client computing device to begin the backup operation.

At step the file system data agent A and the email data agent B residing on the client computing device respond to the instructions received from the storage manager by accessing and processing the primary data A B involved in the copy operation from the primary storage device . Because the operation is a backup copy operation the data agent s A B may format the data into a backup format or otherwise process the data.

At step the client computing device communicates the retrieved processed data to the first media agent A as directed by the storage manager according to the backup copy rule set . In some other embodiments the information management system may implement a load balancing availability based or other appropriate algorithm to select from the available set of media agents A B. Regardless of the manner the media agent A is selected the storage manager may further keep a record in the storage manager database of the association between the selected media agent A and the client computing device and or between the selected media agent A and the backup copy A.

The target media agent A receives the data from the client computing device and at step conveys the data to the disk library A to create the backup copy A again at the direction of the storage manager and according to the backup copy rule set . The secondary storage device A can be selected in other ways. For instance the media agent A may have a dedicated association with a particular secondary storage device s or the storage manager or media agent A may select from a plurality of secondary storage devices e.g. according to availability using one of the techniques described in U.S. Pat. No. 7 246 207 which is incorporated by reference herein.

The media agent A can also update its index to include data and or metadata related to the backup copy A such as information indicating where the backup copy A resides on the disk library A data and metadata for cache retrieval etc. After the 30 day retention period expires the storage manager instructs the media agent A to delete the backup copy A from the disk library A. The storage manager may similarly update its index to include information relating to the storage operation such as information relating to the type of storage operation a physical location associated with one or more copies created by the storage operation the time the storage operation was performed status information relating to the storage operation the components involved in the storage operation and the like. In some cases the storage manager may update its index to include some or all of the information stored in the index of the media agent A.

At step the storage manager initiates the creation of a disaster recovery copy B according to the disaster recovery copy rule set . For instance at step based on instructions received from the storage manager at step the specified media agent B retrieves the most recent backup copy A from the disk library A.

At step again at the direction of the storage manager and as specified in the disaster recovery copy rule set the media agent B uses the retrieved data to create a disaster recovery copy B on the tape library B. In some cases the disaster recovery copy B is a direct mirror copy of the backup copy A and remains in the backup format. In other embodiments the disaster recovery copy B may be generated in some other manner such as by using the primary data A B from the primary storage device as source data. The disaster recovery copy operation is initiated once a day and the disaster recovery copies B are deleted after 60 days.

At step the storage manager initiates the creation of a compliance copy C according to the compliance copy rule set . For instance the storage manager instructs the media agent B to create the compliance copy C on the tape library B at step as specified in the compliance copy rule set . In the example the compliance copy C is generated using the disaster recovery copy B. In other embodiments the compliance copy C is instead generated using either the primary data B corresponding to the email sub client or using the backup copy A from the disk library A as source data. As specified in the illustrated example compliance copies C are created quarterly and are deleted after ten years.

While not shown in at some later point in time a restore operation can be initiated involving one or more of the secondary copies A B C. As one example a user may manually initiate a restore of the backup copy A by interacting with the user interface of the storage manager . The storage manager then accesses data in its index and or the respective storage policy A associated with the selected backup copy A to identify the appropriate media agent A and or secondary storage device A.

In other cases a media agent may be selected for use in the restore operation based on a load balancing algorithm an availability based algorithm or other criteria. The selected media agent A retrieves the data from the disk library A. For instance the media agent A may access its index to identify a location of the backup copy A on the disk library A or may access location information residing on the disk A itself.

When the backup copy A was recently created or accessed the media agent A accesses a cached version of the backup copy A residing in the index without having to access the disk library A for some or all of the data. Once it has retrieved the backup copy A the media agent A communicates the data to the source client computing device . Upon receipt the file system data agent A and the email data agent B may unpackage e.g. restore from a backup format to the native application format the data in the backup copy A and restore the unpackaged data to the primary storage device .

The storage manager may permit a user to specify aspects of the storage policy A. For example the storage policy can be modified to include information governance policies to define how data should be managed in order to comply with a certain regulation or business objective. The various policies may be stored for example in the database . An information governance policy may comprise a classification policy which is described herein. An information governance policy may align with one or more compliance tasks that are imposed by regulations or business requirements. Examples of information governance policies might include a Sarbanes Oxley policy a HIPAA policy an electronic discovery E Discovery policy and so on.

Information governance policies allow administrators to obtain different perspectives on all of an organization s online and offline data without the need for a dedicated data silo created solely for each different viewpoint. As described previously the data storage systems herein build a centralized index that reflects the contents of a distributed data set that spans numerous clients and storage devices including both primary and secondary copies and online and offline copies. An organization may apply multiple information governance policies in a top down manner over that unified data set and indexing schema in order to permit an organization to view and manipulate the single data set through different lenses each of which is adapted to a particular compliance or business goal. Thus for example by applying an E discovery policy and a Sarbanes Oxley policy two different groups of users in an organization can conduct two very different analyses of the same underlying physical set of data copies which may be distributed throughout the organization.

A classification policy defines a taxonomy of classification terms or tags relevant to a compliance task and or business objective. A classification policy may also associate a defined tag with a classification rule. A classification rule defines a particular combination of data criteria such as users who have created accessed or modified a document or data object file or application types content or metadata keywords clients or storage locations dates of data creation and or access review status or other status within a workflow e.g. reviewed or un reviewed modification times or types of modifications and or any other data attributes. A classification rule may also be defined using other classification tags in the taxonomy. The various criteria used to define a classification rule may be combined in any suitable fashion for example via Boolean operators to define a complex classification rule. As an example an E discovery classification policy might define a classification tag privileged that is associated with documents or data objects that 1 were created or modified by legal department staff 2 were sent to or received from outside counsel via email and or 3 contain one of the following keywords privileged or attorney counsel or other terms.

One specific type of classification tag which may be added to an index at the time of indexing is an entity tag. An entity tag may be for example any content that matches a defined data mask format. Examples of entity tags might include e.g. social security numbers e.g. any numerical content matching the formatting mask XXX XX XXXX credit card numbers e.g. content having a 13 16 digit string of numbers SKU numbers product numbers etc.

A user may define a classification policy by indicating criteria parameters or descriptors of the policy via a graphical user interface that provides facilities to present information and receive input data such as a form or page with fields to be filled in pull down menus or entries allowing one or more of several options to be selected buttons sliders hypertext links or other known user interface tools for receiving user input. For example a user may define certain entity tags such as a particular product number or project ID code that is relevant in the organization.

In some implementations the classification policy can be implemented using cloud based techniques. For example the storage devices may be cloud storage devices and the storage manager may execute cloud service provider API over a network to classify data stored on cloud storage devices.

The formatting and structure of secondary copies can vary depending on the embodiment. In some cases secondary copies are formatted as a series of logical data units or chunks e.g. 512 MB 1 GB 2 GB 4 GB or 8 GB chunks . This can facilitate efficient communication and writing to secondary storage devices e.g. according to resource availability. For example a single secondary copy may be written on a chunk by chunk basis to a single secondary storage device or across multiple secondary storage devices . In some cases users can select different chunk sizes e.g. to improve throughput to tape storage devices.

Generally each chunk can include a header and a payload. The payload can include files or other data units or subsets thereof included in the chunk whereas the chunk header generally includes metadata relating to the chunk some or all of which may be derived from the payload. For example during a secondary copy operation the media agent storage manager or other component may divide the associated files into chunks and generate headers for each chunk by processing the constituent files.

The headers can include a variety of information such as file identifier s volume s offset s or other information associated with the payload data items a chunk sequence number etc. Importantly in addition to being stored with the secondary copy on the secondary storage device the chunk headers can also be stored to the index of the associated media agent s and or the index . This is useful in some cases for providing faster processing of secondary copies during restores or other operations. In some cases once a chunk is successfully transferred to a secondary storage device the secondary storage device returns an indication of receipt e.g. to the media agent and or storage manager which may update their respective indexes accordingly. During restore chunks may be processed e.g. by the media agent according to the information in the chunk header to reassemble the files.

Data can also be communicated within the information management system in data channels that connect the client computing devices to the secondary storage devices . These data channels can be referred to as data streams and multiple data streams can be employed to parallelize an information management operation improving data transfer rate among providing other advantages. Example data formatting techniques including techniques involving data streaming chunking and the use of other data structures in creating copies e.g. secondary copies are described in U.S. Pat. Nos. 7 315 923 and 8 156 086 and 8 578 120 each of which is incorporated by reference herein.

Referring to the data stream has the stream header and stream payload aligned into multiple data blocks. In this example the data blocks are of size 64 KB. The first two stream header and stream payload pairs comprise a first data block of size 64 KB. The first stream header indicates that the length of the succeeding stream payload is 63 KB and that it is the start of a data block. The next stream header indicates that the succeeding stream payload has a length of 1 KB and that it is not the start of a new data block. Immediately following stream payload is a pair comprising an identifier header and identifier data . The identifier header includes an indication that the succeeding identifier data includes the identifier for the immediately previous data block. The identifier data includes the identifier that the data agent generated for the data block. The data stream also includes other stream header and stream payload pairs which may be for SI data and or for non SI data.

As an example the data structures illustrated in may have been created as a result of two storage operations involving two client computing devices . For example a first storage operation on a first client computing device could result in the creation of the first chunk folder and a second storage operation on a second client computing device could result in the creation of the second chunk folder . The container files in the first chunk folder would contain the blocks of SI data of the first client computing device . If the two client computing devices have substantially similar data the second storage operation on the data of the second client computing device would result in the media agent storing primarily links to the data blocks of the first client computing device that are already stored in the container files . Accordingly while a first storage operation may result in storing nearly all of the data subject to the storage operation subsequent storage operations involving similar data may result in substantial data storage space savings because links to already stored data blocks can be stored instead of additional instances of data blocks.

If the operating system of the secondary storage computing device on which the media agent resides supports sparse files then when the media agent creates container files it can create them as sparse files. As previously described a sparse file is type of file that may include empty space e.g. a sparse file may have real data within it such as at the beginning of the file and or at the end of the file but may also have empty space in it that is not storing actual data such as a contiguous range of bytes all having a value of zero . Having the container files be sparse files allows the media agent to free up space in the container files when blocks of data in the container files no longer need to be stored on the storage devices. In some examples the media agent creates a new container file when a container file either includes 100 blocks of data or when the size of the container file exceeds 50 MB. In other examples the media agent creates a new container file when a container file satisfies other criteria e.g. it contains from approximately 100 to approximately 1000 blocks or when its size exceeds approximately 50 MB to 1 GB .

In some cases a file on which a storage operation is performed may comprise a large number of data blocks. For example a 100 MB file may be comprised in 400 data blocks of size 256 KB. If such a file is to be stored its data blocks may span more than one container file or even more than one chunk folder. As another example a database file of 20 GB may comprise over 40 000 data blocks of size 512 KB. If such a database file is to be stored its data blocks will likely span multiple container files multiple chunk folders and potentially multiple volume folders. As described in detail herein restoring such files may thus requiring accessing multiple container files chunk folders and or volume folders to obtain the requisite data blocks.

Conditional language such as among others can could might or may unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without user input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling or connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any one of the items in the list all of the items in the list and any combination of the items in the list. Likewise the term and or in reference to a list of two or more items covers all of the following interpretations of the word any one of the items in the list all of the items in the list and any combination of the items in the list.

Depending on the embodiment certain acts events or functions of any of the algorithms described herein can be performed in a different sequence can be added merged or left out altogether e.g. not all described acts or events are necessary for the practice of the algorithms . Moreover in certain embodiments acts or events can be performed concurrently e.g. through multi threaded processing interrupt processing or multiple processors or processor cores or on other parallel architectures rather than sequentially.

Systems and modules described herein may comprise software firmware hardware or any combination s of software firmware or hardware suitable for the purposes described herein. Software and other modules may reside on servers workstations personal computers computerized tablets PDAs and other devices suitable for the purposes described herein. Software and other modules may be accessible via local memory via a network via a browser or via other means suitable for the purposes described herein. Data structures described herein may comprise computer files variables programming arrays programming structures or any electronic information storage schemes or methods or any combinations thereof suitable for the purposes described herein. User interface elements described herein may comprise elements from graphical user interfaces command line interfaces and other suitable interfaces.

Further the processing of the various components of the illustrated systems can be distributed across multiple machines networks and other computing resources. In addition two or more components of a system can be combined into fewer components. Various components of the illustrated systems can be implemented in one or more virtual machines rather than in dedicated computer hardware systems. Likewise the data repositories shown can represent physical and or logical data storage including for example storage area networks or other distributed storage systems. Moreover in some embodiments the connections between the components shown represent possible paths of data flow rather than actual connections between hardware. While some examples of possible connections are shown any of the subset of the components shown can communicate with any other subset of components in various implementations.

Embodiments are also described above with reference to flow chart illustrations and or block diagrams of methods apparatus systems and computer program products. Each block of the flow chart illustrations and or block diagrams and combinations of blocks in the flow chart illustrations and or block diagrams may be implemented by computer program instructions. Such instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the acts specified in the flow chart and or block diagram block or blocks.

These computer program instructions may also be stored in a non transitory computer readable memory that can direct a computer or other programmable data processing apparatus to operate in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the acts specified in the flow chart and or block diagram block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operations to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the acts specified in the flow chart and or block diagram block or blocks.

Any patents and applications and other references noted above including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the invention can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further implementations of the invention.

These and other changes can be made to the invention in light of the above Detailed Description. While the above description describes certain examples of the invention and describes the best mode contemplated no matter how detailed the above appears in text the invention can be practiced in many ways. Details of the system may vary considerably in its specific implementation while still being encompassed by the invention disclosed herein. As noted above particular terminology used when describing certain features or aspects of the invention should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the invention with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the invention to the specific examples disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the invention encompasses not only the disclosed examples but also all equivalent ways of practicing or implementing the invention under the claims.

To reduce the number of claims certain aspects of the invention are presented below in certain claim forms but the applicant contemplates the various aspects of the invention in any number of claim forms. For example while only one aspect of the invention is recited as a means plus function claim under 35 U.S.C sec. 112 f AIA other aspects may likewise be embodied as a means plus function claim or in other forms such as being embodied in a computer readable medium. Any claims intended to be treated under 35 U.S.C. 112 f will begin with the words means for but use of the term for in any other context is not intended to invoke treatment under 35 U.S.C. 112 f . Accordingly the applicant reserves the right to pursue additional claims after filing this application in either this application or in a continuing application.

