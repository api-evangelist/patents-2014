---

title: Methods and systems for triggering efficient application synchronization
abstract: An example method of synchronizing application data between a mobile device and a remote computing device includes for each network of one or more networks, collecting network data regarding a mobile device's current connectivity state to the respective network. The mobile device includes one or more mobile applications including application data. The method also includes detecting, at the mobile device, a current connection to a current network. The method further includes comparing one or more opportunity scores for synchronizing application data. The one or more opportunity scores includes an opportunity score for the current network. Each opportunity score is associated with a particular network. The method also includes determining, based on the comparing, whether the current network is a good opportunity network for syncing mobile application data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09661440&OS=09661440&RS=09661440
owner: QUALCOMM Incorporated
number: 09661440
owner_city: San Diego
owner_country: US
publication_date: 20140821
---
This application claims the benefit of priority from U.S. provisional patent application No. 62 029 278 filed Jul. 25 2014 which is incorporated by reference.

The present disclosure generally relates to data transmission over a network and more particularly to synchronizing application data between computing devices.

Mobile devices are ubiquitous and may include a smartphone tablet portable digital assistant PDA portable game console palmtop computer and other portable electronic devices. In addition to the primary function of these devices many include peripheral functions. For example a smartphone may include the primary function of making telephone calls and the peripheral functions of playing a game a still camera a video camera global positioning system GPS navigation web browsing and sending and receiving emails.

Applications may be installed on the mobile device to provide these peripheral functions. In an example an application is provided by a third party and a user may download the application onto the mobile device. In another example the user receives the mobile device with an application already installed on the mobile device. A mobile application may sync with a remote server by transferring data to and or receiving data from the remote server. For example a user may upload photos or a video to the remote server using a mobile application. In such an example hundreds or thousands of megabytes of data may be transferred to a backend service. Even though the data transfer may be performed in the background the data transfer may be data heavy and time consuming. Additionally as the time it takes to sync the mobile application increases the processing power required to support such functionality also increases.

This disclosure relates to data transmission over a network. Methods systems and techniques for synching application data are provided.

According to some embodiments a method of synchronizing application data between a mobile device and a remote computing device includes for each network of one or more networks collecting network data regarding a mobile device s current connectivity state to the respective network. The mobile device includes one or more mobile applications including application data. The method also includes detecting at the mobile device a current connection to a current network. The method further includes comparing one or more opportunity scores for synchronizing application data. The one or more opportunity scores include an opportunity score for the current network. Each opportunity score is associated with a particular network. The method also includes determining based on the comparing whether the current network is a good opportunity network for syncing mobile application data.

According to some embodiments a system for synchronizing application data between a mobile device and a remote computing device includes a network metrics logger that detects a current connection between a mobile device and a current network and that for each network of one or more networks collects network data regarding a mobile device s current connectivity state to the respective network. The mobile device includes one or more mobile applications including application data. The system also includes an opportunity learning engine that compares one or more opportunity scores for synchronizing application data and determines based on the comparing whether the current network is a good opportunity network for syncing mobile application data. The one or more opportunity scores include an opportunity score for the current network. Each opportunity score is associated with a particular network.

According to some embodiments a computer readable medium has stored thereon computer executable instructions for performing operations including for each network of one or more networks collecting network data regarding a mobile device s current connectivity state to the respective network where the mobile device includes one or more mobile applications including application data detecting at the mobile device a current connection to a current network comparing one or more opportunity scores for synchronizing application data the one or more opportunity scores including an opportunity score for the current network and wherein each opportunity score is associated with a particular network and determining based on the comparing whether the current network is a good opportunity network for syncing mobile application data.

According to some embodiments an apparatus for synchronizing application data between a mobile device and a remote computing device includes means for for each network of one or more networks collecting network data regarding a mobile device s current connectivity state to the respective network where the mobile device includes one or more mobile applications including application data. The apparatus also includes means for detecting at the mobile device a current connection to a current network. The apparatus further includes means for comparing one or more opportunity scores for synchronizing application data the one or more opportunity scores including an opportunity score for the current network and wherein each opportunity score is associated with a particular network. The apparatus also includes means for determining based on the comparing whether the current network is a good opportunity network for syncing mobile application data.

According to some embodiments a method of synchronizing application data between a mobile device and a remote computing device includes determining whether to synchronize application data over a mobile device s current connection to a first network. The mobile device includes one or more mobile applications including application data. The method also includes comparing a plurality of opportunity scores including an opportunity score for the first network and an opportunity score for a second network. The mobile device has been previously connected to the second network. Each opportunity score is associated with a particular network and is based one or more feature sets of the particular network. The method further includes determining based on the comparison of the plurality of opportunity scores whether to schedule a mobile application data sync.

In an example the first network is of a first type and the second network is of a second type that is different from the first type. In such an example a first opportunity score that is associated with the first network of the first type and a second opportunity score that is associated with the second network of the second type may be compared. Accordingly opportunity scores that are associated with different network types may be compared. In another example the first network and the second network are of a common network type and have different feature set values for a feature set. In such an example a first opportunity score and a second opportunity score that are associated with the common network type are compared. Accordingly opportunity scores that are associated with the same network type may be compared.

According to some embodiments a system for synchronizing application data between a mobile device and a remote computing device includes a synchronization manager that determines whether to synchronize application data over a mobile device s current connection to a first network. The mobile device includes one or more mobile applications including application data. The synchronization manager compares a plurality of opportunity scores including an opportunity score for the first network and an opportunity score for a second network. The mobile device has been previously connected to the second network. Each opportunity score is associated with a particular network and is based one or more feature sets of the particular network. The synchronization manager determines based on the comparison of the plurality of opportunity scores whether to schedule a mobile application data sync.

It is to be understood that the following disclosure provides many different embodiments or examples for implementing different features of the present disclosure. Some embodiments may be practiced without some or all of these specific details. Specific examples of components modules and arrangements are described below to simplify the present disclosure. These are of course merely examples and are not intended to be limiting.

Mobile applications connected to the cloud are increasingly commonplace. A mobile device may include a synchronization manager that synchronizes syncs mobile applications installed on the mobile device with remote servers. Current sync schedules are mostly network agnostic and check only whether the mobile device is connected to a Wi Fi or cellular network. A Wi Fi network and cellular network are different types of networks.

The synchronization manager may synch one or more mobile applications when for example the mobile device is connected to a Wi Fi network. Trademarks are the properties of their respective owners. The synchronization manager may also provide the user with an option to sync mobile applications over Wi Fi rather than a cellular network. By using Wi Fi to sync a mobile application the user may save over her data plan. The synchronization manager does not typically take into account particular features of the Wi Fi e.g. type of Wi Fi link or cellular network connection and these features may be helpful to determine whether it is a good time for synching application data.

Application data transfer may be improved by learning about the mobile device s connectivity state over time for Wi Fi and cellular connections. For example it may be desirable to characterize networks to which the mobile device connects and take into account particular features of the network e.g. Wi Fi or cellular network to determine whether to sync a mobile application over the network or whether to delay the sync until the application is connected to another network. For example it may be advantageous to consider the Wi Fi link type Wi Fi backhaul characteristics cellular link type and data plan etc. when determining whether to sync the mobile application.

Additionally it may be unnecessary for some data transfers e.g. application data synchs to be done in real time. Such data transfers may be delay tolerant e.g. uploading photos to a website and performed at a later point in time. It may be desirable to schedule mobile application synchs between a mobile device and a remote computing device at opportune times of good network connectivity. In this way performance may be improved. Additionally mobile device power expended in performing mobile application synchs may be optimized. As such helping mobile applications leverage good network conditions may be beneficial for power and performance of data transfer.

The present disclosure provides techniques to improve mobile application data transfer by learning about the mobile device s network connectivity state over time. Rather than only determining whether to synch the mobile application based on the current network connection long term network data collected over a time period may be used to make this determination. Scheduling synchs at opportune times of good network connectivity can help improve the mobile device s performance and optimize power thus reducing the expenditure in performing the synch.

Mobile device may include one or more mobile applications that may include application data. A user of mobile device may download one or more mobile applications provided by a service provider onto his or her mobile device. A mobile application is a software program that may be downloaded and accessed directly via the mobile device. A mobile application may be represented by an icon on a display of mobile device and the user may select the mobile application by touching the icon e.g. double tapping the icon to access and interact with the mobile application. Mobile device in this example includes a mobile application and a mobile application .

Mobile applications and may be client applications executing on mobile device . Mobile device is coupled over a network to a server and a server . Servers and are remote from mobile device . It may be unnecessary for a mobile application to require constant connectivity to its associated server. For example a user may interact with mobile application without mobile device being connected to server and a user may interact with mobile application without mobile device being connected to server . An application may be deployed to a server and then available for download to a mobile device. In an example mobile application uses a small local database on mobile device whose content is a subset of data that is stored at server and mobile application uses a small local database on mobile device whose content is a subset of data that is stored at server .

A mobile application may sync with its associated server by transferring data to and or receiving data over a network from the server. Mobile device includes a synchronization manager that manages and arbitrates the synching of mobile applications. Synchronization manager may be at the system layer and collect synch requests from mobile applications. Synchronization manager may then schedule the mobile application synchs.

The following is a description of mobile application as it may interact with server . This description applies as well to mobile application and server . Mobile application may be any mobile application. In an example mobile application is the Facebook mobile application and the user may desire to upload photos onto Facebook . In another example mobile application is a music streaming application and the user may desire to synch a playlist. In another example mobile application is a calendar application and the user may desire to synch a calendar. In another example mobile application is a news application and the user may desire to retrieve the latest news feed updates.

Synchronization manager may schedule mobile application data synchs between mobile device and a server associated with the mobile application data. For example mobile application may transfer data to and receive data from server over network . In an example in response to server data at server changing synchronization manager schedules a synch between mobile application and server so that application data of mobile application is in synch with server data at server . In such an example mobile application may send mobile application data over network to server for storage.

In another example in response to changes to application data for mobile application synchronization manager schedules a synch between mobile application and server so that server data at server is in synch with application data of mobile application . In such an example server may send application data over network to mobile application for storage. In another example in response to mobile device sending out a network message to keep the Transmission Control Protocol TCP Internet Protocol IP connection alive synchronization manager schedules a synch between mobile application and server . In such an example the synch may be piggy backed on the TCP IP connection. In another example synchronization manager schedules a synch between mobile application and server periodically e.g. in response to a time period elapsing . In another example synchronization manager schedules a synch between mobile application and server in response to a user request to manually synch the mobile application.

Mobile device includes a network metrics logger that logs network data associated with mobile device . Network metrics logger may create a network database in mobile device s storage. Network database is local to mobile device and may store a history of mobile device s network connections and their state.

Network metrics logger may collect data about current network connectivity of mobile device and store the network data in network database . In an example for one or more networks to which mobile device connects network metrics logger detects a current connection to the network and collects network data on the mobile device s current connectivity state to the network. Network metrics logger may invoke an application programming interface API to collect the network data. In an example network metrics logger periodically invokes the API e.g. every one five ten or more seconds to collect the network data.

The collected network data may include one or more features. A feature may be a network metric that is used to characterize a network. A feature set is a collection of different features that may be used to classify a network. A feature set may include one or more metrics characterizing the network. The feature set may be used in calculating an opportunity score indicating whether a network is a good opportunity network or a bad opportunity network. A good opportunity network is a network that may provide a good opportunity to sync mobile application data over the network because in one example the network is fast. A bad opportunity network is a network that may provide a bad opportunity to sync mobile application over the network because in another example the network is slow or another network is known to provide faster data transfer and is more likely to be connected to the mobile device within a threshold time period e.g. within three hours . An opportunity score may be associated with a network the score indicating whether to synchronize application data over the network for which the opportunity score is assigned. An opportunity score may be based on one or more feature sets of the particular network.

A feature set may abstract the network type e.g. Wi Fi network or cellular network such that different networks may be compared to each other and their synch opportunities normalized into one metric e.g. the opportunity score . As such even though mobile device may connect to different networks with different network metrics the opportunity score may be used to determine whether one network is better than another for synching mobile application data.

For brevity and simplicity two levels of opportunity scores e.g. a good opportunity network and a bad opportunity network are described. This is not intended to be limiting and other embodiments may have more than two levels of opportunity scores. For example in another embodiment a network may be assigned one of three levels of opportunity scores. In such an example a first level network may be a good opportunity network a second level network may be a moderate opportunity network and a third level network may be a bad opportunity network. Opportunity scores are discussed further below.

In an example network is a Wi Fi network and network metrics logger detects a current network connection to the Wi Fi network. Example features of a Wi Fi network are signal strength of the Wi Fi network service set identifier SSID of the Wi Fi network media access control MAC address and link speed of the access point that allows the mobile device to connect to the Wi Fi network. In an example network data for Wi Fi networks may be ordered based on the SSID of the Wi Fi network and the MAC address of the access point. Multiple access points may exist within a single SSID. While mobile device is connected to the Wi Fi network network metrics logger may log the signal strength and SSID of the network and the MAC address and link speed of the access point device that allows mobile device to connect to the Wi Fi network into network database . In an example a feature set that classifies an access point with a given MAC address and an SSID includes the given access point s MAC address the signal strength SSID and frequency band of the Wi Fi network and the link speed and signal level of the access point that allows mobile device to connect to the Wi Fi network. This is merely an example and other feature sets may classify a Wi Fi network.

In another example network is a cellular network and network metrics logger detects a current network connection to the cellular network. Example features of a cellular network are signal strength of the cellular network network type e.g. Long Term Evolution LTE Third generation 3G Fourth generation 4G and Evolution Data Optimized EVDO and network name e.g. Verizon Sprint and AT T . In an example network data for cellular networks may be ordered based on the type and signal strength of the network. While mobile device is connected to cellular network network metrics logger may log the signal strength network type and network name of the cellular network into network database . In an example a feature set that classifies a given geographic location and cellular network includes the geographic location of the mobile device at the time of the connection cellular signal strength network name and network type. This is merely an example and other feature sets may classify a cellular network.

Network metrics logger may also log temporal data and spatial data on the mobile device s current network connection e.g. to the Wi Fi or cellular network . Mobile device may have different signal strengths in different geographical areas. In an example network metrics logger normalizes the signal strength. In another example network metrics logger logs the geographic location of mobile device and the time of the log to distinguish access points and cellular network connections over time and space. In an example network metrics logger takes into account mobile device s proximity to an access point. For example if mobile device is close to the access point network metrics logger may recognize a strong signal strength that is captured by the signal strength metric. The signal strength and signal range may vary across different access points and network metrics logger may capture the state of the signal strength over time. In such an example the user may roam about the access point and network metrics logger may continue to collect network data to understand the range signal strength metric that can be connected to that particular access point.

As discussed opportunities may vary considerably within and across networks. For example access points may have different frequency bands and may translate into different opportunities. In an example a 2.4 GHz gigahertz frequency band has relatively no bandwidth compared to a 5.8 GHz frequency band. is an example bar graph of picture upload completion times for different Wi Fi based connections. Bar graph shows the amount of time it takes to upload a photograph to a backend server. An x axis of bar graph represents the amount of time in seconds it takes to upload a picture and a y axis of bar graph represents the different types of Wi Fi networks.

The bars show different opportunities and may represent different Wi Fi standards e.g. AC N 1 and N 2 the access point is configured to across different frequency bands. A left cluster of bar graph illustrates the opportunities associated with mobile device when it is near the access point and a right cluster of bar graph illustrates the opportunities associated with mobile device when it is far from the access point. If the data transfer is reduced then the total energy expended in performing the data transfer is reduced about the same. For example in bar graph the AC 80 MHz Wi Fi interface completes the picture upload almost 50 percent faster when mobile device is near the access point compared to when mobile device is far from the access point. In such an example mobile device may expend almost 50 percent less energy synching the mobile application when mobile device is near the access point compared to when mobile device is far from the access point.

Additionally network metrics logger may process small measurements e.g. using packet pair or some other routines to estimate the bandwidth of the current network state or may snoop on an existing data transfer on the link to estimate network bandwidth. Network metrics logger stores the collected network data in network database for opportunity learning engine to analyze.

In some embodiments opportunity learning engine characterizes the one or more networks to which mobile device has connected or to which mobile device is currently connected and learns the connectivity behavior of mobile device from the logged network data.

For one or more networks to which mobile device connects opportunity learning engine may identify a feature set in accordance with the network and calculate an opportunity score for the network. In an example opportunity learning engine calculates based on the collected network data for the identified feature set that classifies a network an opportunity score for the network. Opportunity learning engine may calculate the opportunity score for the network while mobile device is connected to the network of after the network connection has been dropped. The opportunity scores may be calculated based on network data that is collected over a time period e.g. one week or one month and may be continuously updated to reflect the mobile device s network connectivity over a period of time. Opportunity learning engine stores the opportunity scores in network database which stores a history of mobile device s network connections and their state.

In an example the feature set that classifies a given Wi Fi network is the access point s MAC address the signal strength SSID and frequency band of the Wi Fi network and the link speed and signal level of the access point that allows mobile device to connect to the Wi Fi network. In such an example opportunity learning engine may analyze this feature set to calculate an opportunity score for the given Wi Fi network. In another example the feature set that classifies a cellular network includes the geographic location of the mobile device at the time of the connection to the cellular network cellular signal strength network name and network type. In such an example opportunity learning engine may analyze this feature set to calculate an opportunity score for the given cellular network.

In some embodiments opportunity learning engine uses regression analysis to calculate the opportunity score. In an example the calculation of an opportunity score may include deriving a model for throughput and latency observed by one or more applications in a network as a function of the network feature sets collected at the time and also as a function of the location when the mobile device is connected to the network. In another example an opportunity score may be derived via clustering and threshold based techniques where for example Wi Fi access points with a particular frequency band e.g. 5 GHz frequency band at a given signal strength will have a better opportunity score than a lower frequency band e.g. 2.4 GHz frequency band access point due to the different throughputs they provide.

While mobile device is connected to a network opportunity learning engine may compare one or more opportunity scores to determine whether the currently connected network is a good opportunity network. Opportunity learning engine derives its intelligence to determine good or bad opportunities from the collected network data.

Network metrics logger may detect that mobile device is currently connected to a network. In an example opportunity learning engine identifies the SSID of the currently connected network and searches network database for the SSID. Opportunity learning engine and compares the opportunity score for the currently connected network identified by the SSID to opportunity scores for one or more other networks to which mobile device has previously connected. In such an example opportunity learning engine may compare the opportunity score for the network to which mobile device is currently connected to the opportunity score for other networks in order to determine whether the currently connected network is a good opportunity network.

In an example the compared one or more opportunity scores may include an opportunity score for the current network connection and an opportunity score for one or more other networks to which mobile device has previously connected. In essence opportunity learning engine compares the different values of the feature sets that classify different networks to which mobile device has connected by using the opportunity scores for the different networks as a mechanism to determine whether a good or bad opportunity exists for synching mobile application data over the current network connection. From the values of the feature set that are collected for networks to which mobile device is connected opportunity learning engine learns of good and bad opportunity networks that mobile device may or may not use to sync mobile application data.

Opportunity learning engine may determine based on the comparison of the one or more opportunity scores whether the current network connection is a good opportunity network for syncing mobile application data. In response to determining that the current network connection is a good opportunity network for syncing mobile application data opportunity learning engine may send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data. Opportunity learning engine may send the notification to synchronization manager so that it can leverage good network conditions for scheduling or performing data transfer e.g. synching the application data .

In contrast in response to determining that the current network connection is not a good opportunity network for syncing mobile application data opportunity learning engine may determine to not send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data. In another example opportunity learning engine may send a notification to synchronization manager that the current network connection is not a good opportunity network for syncing mobile application data. As such synchronization manager may determine to not sync mobile application data over the current network connection and may delay any mobile application syncs over the current network connection.

A good opportunity may be based on for example instantaneous classification of good or available access point cellular network state. For example opportunity learning engine may rely on a maximum received signal strength indication RSSI and a link speed for an access point that satisfies a threshold. In such an example it may be unnecessary for opportunity learning engine to rely on the connection history of mobile device and may send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data.

In an example opportunity learning engine compares one or more opportunity scores including an opportunity score for the current network connection and a threshold opportunity score. If the opportunity score for the current network connection satisfies the threshold opportunity score opportunity learning engine may send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data. If the opportunity score for the current network connection does not satisfy the threshold opportunity score opportunity learning engine may want to delay the transfer of data over the current network connection and not send the notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data.

A good opportunity may be based on logging when a network interface is actually used and characterizing the performance obtained or identifying relatively better opportunity compared to previous ones in a time period observed over time e.g. a day . In an example a good opportunity may be based on knowledge of known good opportunity access point and cellular connections from a previously stored history of network states. For example opportunity learning engine may leverage previous knowledge of a good access point. In an example the user of mobile device may shift between a home Wi Fi network and a company Wi Fi network. The company Wi Fi network may be faster than the home Wi Fi network. The data transfer may be faster over the company Wi Fi network and may thus also expend less energy from mobile device compared to using the home Wi Fi network for synching application data.

In such an example a first opportunity score for the company Wi Fi network may indicate that it is a good opportunity network and a second opportunity score for the home Wi Fi network may indicate that it is a bad opportunity network. In another example the first opportunity score for the company Wi Fi network and the second opportunity score are the home Wi Fi network may indicate that both the company and home Wi Fi networks are good opportunity networks but that the company Wi Fi network is a better opportunity network compared to the home Wi Fi network. In an example the opportunity score for the company Wi Fi network may indicate that the access point that connects mobile device to the company Wi Fi network is a better opportunity network e.g. a faster network compared to the opportunity score for the home Wi Fi network.

Network metrics logger may store first network data based on mobile device s connection to the company Wi Fi network and may store second network data based on mobile device s connection to the home Wi Fi network. Opportunity learning engine may calculate an opportunity score for each of the company Wi Fi network and home Wi Fi network. In such an example opportunity learning engine leverages the network history knowledge across access points.

Opportunity learning engine may compare one or more opportunity scores and speculate whether a network having a better opportunity score will be connected to mobile device in the future. In an example opportunity learning engine compares a plurality of opportunity scores. Opportunity learning engine may take into consideration how often mobile device connects to particular networks. In an example opportunity learning engine determines whether a high probability exists that a better network over which to sync application data will be seen in the near future. Opportunity learning engine may determine that a high probability exists that mobile device will connect to the particular network within the threshold amount time and thus may determine to not send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data and or may send a notification to synchronization manager that the current network connection is not a good opportunity network for syncing mobile application data. Opportunity learning engine may delay sending the notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data until mobile device is connected to the particular network.

In an example opportunity learning engine may learn from the logged network data that mobile device typically connects to the company Wi Fi network during business hours on weekdays e.g. Monday Tuesday Wednesday Thursday and Friday and connects to the home Wi Fi network on the weekends e.g. Saturday and Sunday . In an example if mobile device is at the user s home on a Tuesday morning at 7 00 A.M. mobile device may be connected to the home Wi Fi network. Opportunity learning engine may compare the opportunity score for the home Wi Fi network with other opportunity scores for other networks and recognize that a better opportunity exists using the work Wi Fi network for data transfer and that a high probability exists that mobile device will be connected to the company Wi Fi network in two hours at Tuesday 9 00 A.M. In such a scenario opportunity learning engine may want to delay the transfer of data over the current network connection and not send the notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data.

Accordingly opportunity learning engine may determine to not send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data and or may send a notification to synchronization manager that the current network connection is not a good opportunity network for syncing mobile application data. At a later point in time opportunity learning engine may recognize that mobile device is currently connected to the company Wi Fi network and determine based on the compared opportunity scores that the currently connected network is a good opportunity network. Accordingly opportunity learning engine may send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data.

The opportunity score for a network may factor in the likelihood that mobile device will be connected to a particular network within a threshold amount of time e.g. within four hours where the particular network is a good opportunity network.

Opportunity learning engine may distinguish between a data upload and a data download. A data upload may refer to data being sent from mobile device to the remote computing device. A data download may refer to data being sent from the remote computing device to mobile device . Opportunity learning engine may distinguish these two data transfers for synchronization manager because the upload bandwidth may be capped or lower than the download bandwidth. As such opportunities may be different for data upload and data download. To determine whether to send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data opportunity learning engine may factor in whether mobile device will be uploading or downloading data to sync a mobile application.

Opportunity learning engine may also take into consideration the state of mobile device . In an example if mobile device is charging opportunity learning engine may send a send a notification to synchronization manager that the current network connection is a good opportunity network for syncing mobile application data. Opportunity learning engine may send the notification even if the network is identified as a bad opportunity network for uploading mobile application data. For example if mobile device is connected to a network the network may be a good opportunity network for downloading mobile application data but a bad opportunity network for uploading mobile application data. Opportunity learning engine may determine a zero opportunity cost to sync the mobile application.

In another example if mobile device s battery life is below a threshold battery life opportunity learning engine may want to delay the transfer of data over the current network connection to save battery power even if the current network connection is identified as a good opportunity network . In such an example opportunity learning engine may send a notification to synchronization manager to not sync mobile applications over the current network connection and or send a notification to synchronization manager that the current network connection is not a good opportunity network for syncing mobile application data. In this way opportunity learning engine may avoid mobile device from consuming more power.

Although the opportunity learning engine has been described as sending a notification to synchronization manager it should also be understood that opportunity learning engine may send the notification to one or more mobile applications installed on mobile device . Opportunity learning engine may for example send the notification to only synchronization manager to only one or more mobile applications installed on mobile device or to both synchronization manager and one or more mobile applications installed on mobile device .

Synchronization manager may receive the notification from opportunity learning engine and determine whether to sync the mobile application data. The notification may indicate that the current network connection is a good opportunity network or a bad opportunity for syncing mobile application data. Synchronization manager may offer high level data services or applications in an operating system.

Opportunity learning engine may send the notification to synchronization manager in a variety of ways. In an example opportunity learning engine notifies synchronization manager of good opportunity networks via broadcast messages. Synchronization manager may register to receive network hint broadcasts. In an example mobile device executes an Android operating system and makes use of Android s sendBroadcast Intent Networkopportunity call to notify Android services. In such an example the Android services may register to receive the broadcast intent using registerReceiver BroadcastReceiver IntentFilter . Upon receiving the broadcast message services such as synchronization manager may choose to initiate pending syncs and or other data transfer activity to leverage good network conditions.

In response to a condition being satisfied synchronization manager may determine whether to sync the mobile application data. In an example when the notification is received the condition is satisfied. Synchronization manager may make the determination of whether to sync the mobile application data in response to for example receiving the notification from opportunity learning engine . In another example when a period of time has elapsed the condition is satisfied. Synchronization manager may periodically make the determination of whether to sync the mobile application data.

After receiving the notification that the current network connection is a good opportunity network for syncing mobile application data synchronization manager may determine to not sync the mobile application data. In response to determining to not sync the mobile application data synchronization manager may do nothing further.

Synchronization manager may determine to not sync application data of a mobile application if for example the mobile application already has a sync scheduled. In another example if a mobile application already has a sync scheduled synchronization manager may determine to sync the mobile application data and reschedule the sync to be performed sooner.

In response to determining to sync the mobile application data synchronization manager may send a message to the server associated with the mobile application or may send a message to the mobile application installed on mobile device to initiate the mobile application data synching. Mobile application or synchronization manager may send a message to server to initiate the mobile application data synching.

Synchronization manager may schedule the syncing of mobile applications installed on mobile device . In some embodiments data transmissions from applications are delayed and batched. Synchronization manager may collect application data sync requests. In an example synchronization manager collectively syncs the mobile application data. Synchronization manager may send a broadcast notification to the one or more mobile applications to be synced and or the server associated with the one or more mobile applications to be synced to initiate the mobile application data synching. In an example the notification is not broadcasted to all the mobile application installed on mobile device . In such an example the notification may be sent to particular mobile applications based on some preferential behavior.

In some embodiments synchronization manager schedules the syncing of mobile applications based on a priority. Referring to synchronization manager may use a priority of mobile application and a priority of mobile application to determine which mobile application to synch before the other. For example if mobile application has a higher priority for synching than mobile application synchronization manager may schedule the sync of mobile application with server before the synch of mobile application with server .

A priority may be assigned to a mobile application in a variety of ways. In an example the user of mobile device may assign a priority to a mobile application. In such an example synchronization manager may provide the user with a prompt requesting the user to indicate which mobile applications have a higher priority for synching compared to one or more other mobile applications installed on mobile device . In another example synchronization manager monitors the way in which the user of mobile device engages with mobile applications and and assigns priorities to the mobile applications based on the monitoring. Synchronization manager may assign a priority to a mobile application based on for example which mobile applications are the most frequency used how much data on average has been transferred to the mobile application s associated server during a mobile application sync or whether the mobile application is the most recently used mobile application.

In some embodiments synchronization manager schedules the syncing of mobile applications based on a time period elapsing. Synchronization manager may identify a mobile application as being an application to periodically sync. In such an example even if synchronization manager does not receive a notification that the current network connection is a good opportunity network for syncing mobile application data of mobile application synchronization manager may nonetheless schedule the sync of mobile application .

In some embodiments synchronization manager may recognize whether the sync is for an upload or a download and accordingly issue opportunity notifications. Synchronization manager may then schedule the data upload or data download based on the sync notification. In an example these notifications are broadcast messages sent on shared memory channels between opportunity learning engine and all service processes that have subscribed to the broadcast notification. Notifications may be triggered when for example opportunity learning engine sees the best opportunity score for a network based on previously seen opportunities and wants to convey this knowledge to sync managers.

In some embodiments a user option may be added to opportunity learning engine to override a determination made by opportunity learning engine . In an example if opportunity learning engine determines to send a notification that the current network is a good opportunity network for syncing mobile application data opportunity learning engine may provide the user with an option to override this determination. If the user overrides the determination opportunity learning engine may determine to not send the notification.

In another example if opportunity learning engine determines to not send a notification that the current network is a good opportunity network for syncing mobile application data opportunity learning engine may provide the user with an option to override this determination. If the user overrides the determination opportunity learning engine may send the notification. In another example if opportunity learning engine determines to send a notification that the current network is not a good opportunity network for syncing mobile application data opportunity learning engine may provide the user with an option to override this determination. If the user overrides the determination opportunity learning engine may send a notification that the current network is a good opportunity network for syncing mobile application data or may determine that no notification should be sent.

In an example opportunity learning engine may provide a prompt on a display of mobile device . The prompt may request whether a user of mobile device desires to override the determination of whether the current network is a good opportunity network for syncing mobile application data. The determination may be that the current network is for example a good opportunity network or not a good opportunity network for syncing mobile application data.

In an example opportunity learning engine may receive a user input responsive to the prompt the user input indicating that the user desires to override the determination that the current network is a good opportunity network for syncing mobile application data. In such an example in response to the user input opportunity learning engine may determine to not send a notification that the current network is a good opportunity network for syncing mobile application data. In another example opportunity learning engine may receive a user input responsive to the prompt the user input indicating that the user does not desire to override the determination that the current network is a good opportunity network for syncing mobile application data. In such an example in response to the user input opportunity learning engine may send a notification that the current network is a good opportunity network for syncing mobile application data.

In another example opportunity learning engine may receive a user input responsive to the prompt the user input indicating that the user desires to override the determination that the current network is not a good opportunity network for syncing mobile application data. In such an example in response to the user input opportunity learning engine may send a notification that the current network is a good opportunity network for syncing mobile application data. In another example opportunity learning engine may receive a user input responsive to the prompt the user input indicating that the user does not desire to override the determination that the current network is not a good opportunity network for syncing mobile application data. In such an example in response to the user input opportunity learning engine may determine to not send a notification that the current network is a good opportunity network for syncing mobile application data.

Opportunity learning engine may monitor the user s overrides to learn about what the user wants. In an example the user s overrides may be an input into opportunity learning engine so that it knows for example to not wait for the company Wi Fi network on Saturdays and Sundays.

In some embodiments a user option may be added to synchronization manager to override a determination made by synchronization manager . In an example if synchronization manager determines that a mobile application data sync should be scheduled before synchronization manager actually schedules the mobile application data sync a user may be provided with an option to override the mobile application data sync. If the user overrides the determination synchronization manager may determine to not schedule the mobile application data sync.

In another example if synchronization manager determines that a mobile application data sync should not be scheduled before synchronization manager determines to not schedule the mobile application data sync the user may be provided with an option to override synchronization manager s this determination. For example mobile device may be low on battery and synchronization manager may want to save battery power and thus may determine that the mobile application data sync should not take place. The user may override the synchronization manager s determination to not schedule the mobile application data sync and instruct synchronization manager to schedule the mobile application data sync.

As discussed above and further emphasized here are merely examples which should not unduly limit the scope of the claims. For example although mobile device is described as being a mobile device it should also be understood that in other embodiments mobile device may be a stationary device.

Method includes blocks . In a block for each network of one or more networks network data is collected regarding a mobile device s current connectivity state to the respective network where the mobile device includes one or more mobile applications including application data. In an example for each network of one or more networks network metrics logger collects network data regarding mobile device s current connectivity state to the respective network where mobile device includes mobile applications and and each mobile application includes application data.

In a block a current connection to a current network is detected at a mobile device. In an example network metrics logger detects a current connection to network at mobile device .

In a block one or more opportunity scores are compared for synchronizing application data the one or more opportunity scores including an opportunity score for the current network where each opportunity score is associated with a particular network. In an example opportunity learning engine compares one or more opportunity scores for synchronizing application data the one or more opportunity scores including an opportunity score for the current network and wherein each opportunity score is associated with a particular network.

In an example the current network and a second network previously connected to the mobile device are of a common network type and have different feature set values for a feature set. Opportunity learning engine may compare opportunity scores that are associated with the common network type e.g. cellular network Wi Fi network etc. . In an example the one or more opportunity scores includes a first opportunity score and a second opportunity score that are associated with the common network type and opportunity learning engine compares the first and second opportunity scores to each other.

In another example the current network is of a first type and a second network previously connected to the mobile device is of a second type that is different from the first type. Opportunity learning engine may compare opportunity scores that are associated with the current network of the first type and the second network of the second type. In an example the one or more opportunity scores includes a first opportunity score and a second opportunity score where the first opportunity score is associated with the current network of the first type e.g. cellular network and the opportunity score is associated with the second network of the second type e.g. Wi Fi network . In such an example opportunity learning engine compares opportunity scores that are associated with different network types.

In a block it is determined based on the comparison of the one or more opportunity scores whether the current network is a good opportunity network for syncing mobile application data. In an example opportunity learning engine determines based on the comparison of the one or more opportunity scores whether network is a good opportunity network for syncing mobile application data.

It is also understood that additional processes may be performed before during or after blocks discussed above. It is also understood that one or more of the blocks of method described herein may be omitted combined or performed in a different sequence as desired.

Method includes blocks . In a block it is determined whether to synchronize application data over a mobile device s current connection to a first network the mobile device including one or more mobile applications including application data. In an example synchronization manager determines whether to synchronize application data over mobile device s current connection to a first network mobile device including mobile applications and each mobile application including application data.

In a block a plurality of opportunity scores including an opportunity score for the first network and an opportunity score for a second network is compared the mobile device being previously connected to the second network and each opportunity score being associated with a particular network and being based one or more feature sets of the particular network. In an example synchronization manager compares a plurality of opportunity scores including an opportunity score for the first network and an opportunity score for a second network mobile device being previously connected to the second network and each opportunity score being associated with a particular network and being based one or more feature sets of the particular network.

In an example the first network is of a first type and the second network is of a second type that is different from the first type. In such an example a first opportunity score that is associated with the first network of the first type and a second opportunity score that is associated with the second network of the second type may be compared. Accordingly opportunity scores that are associated with different network types may be compared. In another example the first network and the second network are of a common network type and have different feature set values for a feature set. In such an example a first opportunity score and a second opportunity score that are associated with the common network type are compared. Accordingly opportunity scores that are associated with the same network type may be compared.

In a block it is determined based on the comparison of the plurality of opportunity scores whether to schedule a mobile application data sync. In an example synchronization manager determines based on the comparison of the plurality of opportunity scores whether to schedule a mobile application data sync.

It is also understood that additional processes may be performed before during or after blocks discussed above. It is also understood that one or more of the blocks of method described herein may be omitted combined or performed in a different sequence as desired.

The computer system may include one or more processors. The computer system may additionally include one or more storage devices each selected from a group including floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium RAM PROM EPROM FLASH EPROM any other memory chip or cartridge and or any other medium from which a processor or computer is adapted to read. The one or more storage devices may include stored information that may be made available to one or more computing devices and or computer programs e.g. clients coupled to the client or server using a computer network not shown . The computer network may be any type of network including a LAN a WAN an intranet the Internet a cloud and or any combination of networks thereof that is capable of interconnecting computing devices and or computer programs in the system.

Computer system includes a bus or other communication mechanism for communicating information data signals and information between various components of computer system . Components include I O component for processing user actions such as selecting keys from a keypad keyboard or selecting one or more buttons or links etc. and sends a corresponding signal to bus . In an example a user action may be a user input that overrides a determination made by opportunity learning engine and or synchronization manager .

I O component may also include an output component such as a display and an input control such as a cursor control such as a keyboard keypad mouse etc. . In an example display displays a prompt on display the prompt requesting whether a user of mobile device desires to override the determination of whether the current network is a good opportunity network for syncing mobile application data.

An audio I O component may also be included to allow a user to use voice for inputting information by converting audio signals into information signals. Audio I O component may allow the user to hear audio. A transceiver or network interface transmits and receives signals between computer system and other devices via a communication link to a network. In some embodiments the transmission is wireless although other transmission mediums and methods may also be suitable.

A processor which may be a micro controller digital signal processor DSP or other processing component processes these various signals such as for display on display of computer system or transmission to other devices via communication link . Network metrics logger opportunity learning engine and synchronization manager may execute in processor . Processor may also control transmission of information such as cookies or IP addresses to other devices.

Components of computer system also include a system memory component e.g. RAM a static storage component e.g. ROM and or a computer readable medium . Computer system performs specific operations by processor and other components by executing one or more sequences of instructions contained in system memory component . In an example processor processes instructions according to and or processes instructions according to .

Logic may be encoded in computer readable medium which may refer to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. In various implementations non volatile media include optical or magnetic disks or solid state drives volatile media include dynamic memory such as system memory component and transmission media includes coaxial cables copper wire and fiber optics including wires that include bus . In some embodiments the logic is encoded in computer readable medium . Computer readable medium may be any apparatus that can contain store communication propagate or transport instructions that are used by or in connection with processor . Computer readable medium may be an electronic magnetic optical electromagnetic infrared or semiconductor device or a propagation medium or any other memory chip or cartridge or any other medium from which a computer is adapted to read. Further transmission media may take the form of acoustic or light waves such as those generated during radio wave optical and infrared data communications.

In various embodiments of the present disclosure execution of instruction sequences to practice the present disclosure may be performed by computer system . In various other embodiments of the present disclosure a plurality of computer systems coupled by communication link to the network e.g. such as a LAN WLAN PTSN and or various other wired or wireless networks including telecommunications mobile and cellular phone networks may perform instruction sequences to practice the present disclosure in coordination with one another.

Where applicable various embodiments provided by the present disclosure may be implemented using hardware software or combinations of hardware and software. Also where applicable the various hardware components and or software components set forth herein may be combined into composite components including software hardware and or both without departing from the spirit of the present disclosure. Where applicable the various hardware components and or software components set forth herein may be separated into sub components including software hardware or both without departing from the spirit of the present disclosure. In addition where applicable it is contemplated that software components may be implemented as hardware components and vice versa.

Application software in accordance with the present disclosure may be stored on one or more computer readable mediums. It is also contemplated that the application software identified herein may be implemented using one or more general purpose or specific purpose computers and or computer systems networked and or otherwise. Where applicable the ordering of various steps described herein may be changed combined into composite steps and or separated into sub steps to provide features described herein.

The foregoing disclosure is not intended to limit the present disclosure to the precise forms or particular fields of use disclosed. As such it is contemplated that various alternate embodiments and or modifications to the present disclosure whether explicitly described or implied herein are possible in light of the disclosure. Changes may be made in form and detail without departing from the scope of the present disclosure. Thus the present disclosure is limited only by the claims.

