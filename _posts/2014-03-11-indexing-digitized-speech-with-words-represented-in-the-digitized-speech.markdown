---

title: Indexing digitized speech with words represented in the digitized speech
abstract: Indexing digitized speech with words represented in the digitized speech, with a multimodal digital audio editor operating on a multimodal device supporting modes of user interaction, the modes of user interaction including a voice mode and one or more non-voice modes, the multimodal digital audio editor operatively coupled to an ASR engine, including providing by the multimodal digital audio editor to the ASR engine digitized speech for recognition; receiving in the multimodal digital audio editor from the ASR engine recognized user speech including a recognized word, also including information indicating where, in the digitized speech, representation of the recognized word begins; and inserting by the multimodal digital audio editor the recognized word, in association with the information indicating where, in the digitized speech, representation of the recognized word begins, into a speech recognition grammar, the speech recognition grammar voice enabling user interface commands of the multimodal digital audio editor.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09123337&OS=09123337&RS=09123337
owner: Nuance Communications, Inc.
number: 09123337
owner_city: Burlington
owner_country: US
publication_date: 20140311
---
This application is a continuation of co pending U.S. application Ser. No. 13 961 792 entitled INDEXING DIGITIZED SPEECH WITH WORDS REPRESENTED IN THE DIGITIZED SPEECH filed on Aug. 7 2013 which is a continuation of U.S. application Ser. No. 11 688 331 entitled INDEXING DIGITIZED SPEECH WITH WORDS REPRESENTED IN THE DIGITIZED SPEECH filed on Mar. 20 2007 now U.S. Pat. No. 8 515 757 issued Aug. 20 2013. Each of the documents listed above is incorporated herein by reference in its entirety.

The field of the invention is data processing or more specifically methods apparatus and products for indexing digitized speech.

User interaction with applications running on devices through a keyboard or stylus has become increasingly limited and cumbersome as those devices have become increasingly smaller more mobile and more complex. In particular small handheld devices like mobile phones and PDAs serve many functions and contain sufficient processing power to support user interaction through multimodal access that is by interaction in non voice modes as well as voice mode. Devices which support multimodal access combine multiple user input modes or channels in the same interaction allowing a user to interact with the applications on the device simultaneously through multiple input modes or channels. The methods of input include speech recognition keyboard touch screen stylus mouse handwriting and others. Multimodal input often makes using an automated device easier.

Analyzing audio data with a digital audio editor is tedious if one is analyzing human speech and interested in the location of words in the audio data. Multimodal digital audio editors including multimodal digital audio editors may be formed by sets of markup documents served up by web servers for display on multimodal browsers. A multimodal browser as the term is used in this specification generally means a web browser capable of receiving multimodal input and interacting with users with multimodal output where modes of the multimodal input and output include at least a speech mode. Multimodal browsers typically render web pages written in XHTML Voice X V . X V provides a markup language that enables users to interact with an multimodal digital audio editor often running on a server through spoken dialog in addition to traditional means of input such as keyboard strokes and mouse pointer action. Visual markup tells a multimodal browser what the user interface is look like and how it is to behave when the user types points or clicks. Similarly voice markup tells a multimodal browser what to do when the user speaks to it. For visual markup the multimodal browser uses a graphics engine for voice markup the multimodal browser uses a speech engine. X V adds spoken interaction to standard web content by integrating XHTML eXtensible Hypertext Markup Language and speech recognition vocabularies supported by VoiceXML. For visual markup X V includes the XHTML standard. For voice markup X V includes a subset of VoiceXML. For synchronizing the VoiceXML elements with corresponding visual interface elements X V uses events. XHTML includes voice modules that support speech synthesis speech dialogs command and control and speech grammars. Voice handlers can be attached to XHTML elements and respond to specific events. Voice interaction features are integrated with XHTML and can consequently be used directly within XHTML content.

In addition to X V multimodal digital audio editors also may be implemented with Speech Application Tags SALT . SALT is a markup language developed by the Salt Forum. Both X V and SALT are markup languages for creating applications that use voice input speech recognition and voice output speech synthesis. Both SALT applications and X V applications use underlying speech recognition and synthesis technologies or speech engines to do the work of recognizing and generating human speech. As markup languages both X V and SALT provide markup based programming environments for using speech engines in an application s user interface. Both languages have language elements markup tags that specify what the speech recognition engine should listen for and what the synthesis engine should say. Whereas X V combines XHTML VoiceXML and the XML Events standard to create multimodal digital audio editors SALT does not provide a standard visual markup language or eventing model. Rather it is a low level set of tags for specifying voice interaction that can be embedded into other environments. In addition to X V and SALT multimodal digital audio editors may be implemented in Java with a Java speech framework in C for example and with other technologies and in other environments as well.

Current lightweight voice solutions require a developer to build a grammar and lexicon to limit the potential number of words that an automated speech recognition ASR engine must recognize as a means for increasing accuracy. Pervasive devices have limited interaction and input modalities due to the form factor of the device and kiosk devices have limited interaction and input modalities by design. In both cases the use of speaker independent voice recognition is implemented to enhance the user experience and interaction with the device. The state of the art in speaker independent recognition allows for some sophisticated voice applications to be written as long as there is a limited vocabulary associated with each potential voice command. For example if the user is prompted to speak the name of a city the system can with a good level of confidence recognize the name of the city spoken.

Methods apparatus and computer program products are described for indexing digitized speech with words represented in the digitized speech implemented with a multimodal digital audio editor operating on a multimodal device supporting multiple modes of user interaction with the multimodal digital audio editor the modes of user interaction including a voice mode and one or more non voice modes the multimodal digital audio editor operatively coupled to an ASR engine including providing by the multimodal digital audio editor to the ASR engine digitized speech for recognition receiving in the multimodal digital audio editor from the ASR engine recognized user speech including a recognized word also including information indicating where in the digitized speech representation of the recognized word begins and inserting by the multimodal digital audio editor the recognized word in association with the information indicating where in the digitized speech representation of the recognized word begins into a speech recognition grammar the speech recognition grammar voice enabling user interface commands of the multimodal digital audio editor.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods apparatus and products for indexing digitized speech according to embodiments of the present invention are described with reference to the accompanying drawings beginning with . sets forth a network diagram illustrating an exemplary system for indexing digitized speech according to embodiments of the present invention. Indexing digitized speech in this example is implemented with a multimodal digital audio editor operating on a multimodal device . A multimodal digital audio editor is a computer application for audio editing that is for manipulating digital audio. The digital audio so edited in multimodal digital audio editors according to embodiments of the present application is referred to generally in this specification as digitized speech. A typical multimodal digital audio editor according to embodiments of the present invention allows a user to 

Examples of off the shelf digital audio editors that may be improved for operation as a multimodal digital audio editor that indexes digitized speech according to embodiments of the present invention include 

A multimodal device is automated computing machinery that supports multiple modes of user interaction with a multimodal digital audio editor including a voice mode and one or more non voice modes of user interaction with the multimodal digital audio editor. The voice mode is represented here with audio output of voice prompts and responses from the multimodal devices and audio input of speech for recognition from a user . Non voice modes are represented by input output devices such as keyboards and display screens on the multimodal devices . The multimodal digital audio editor is operatively coupled to an automatic speech recognition ASR engine in a speech engine . Such an operative coupling may be implemented with an application programming interface API a voice service module or a VOIP connection as explained in more detail below.

The system of operates generally to carry out indexing digitized speech according to embodiments of the present invention by providing by the multimodal digital audio editor to an ASR engine digitized speech for recognition. The multimodal digital audio editor receives from the ASR engine recognized user speech including a recognized word . The recognized user speech from the ASR engine also includes information referred to in this example as an index indicating where in the digitized speech representation of the recognized word begins. The multimodal digital audio editor inserts the recognized word in association with the information indicating where in the digitized speech representation of the recognized word begins into a speech recognition grammar . The speech recognition grammar voice enables user interface commands of the multimodal digital audio editor. Typical digital audio editors according to embodiments of the present invention also visually display the digitized speech with the recognized word as an index of where in the digitized speech the representation of the recognized word begins as illustrated on and explained in more detail below with reference to .

The system of includes two speech recognition grammars . The grammar is the grammar used by the ASR engine in voice server to recognize the recognized word that is then inserted into grammar by the multimodal digital audio editor . Such speech recognition grammars are composed of grammar rules. Grammar rules are components of a speech recognition grammar that advise an ASR engine or a voice interpreter which words presently can be recognized. The follow grammar for example 

A multimodal device is an automated device that is automated computing machinery or a computer program running on an automated device that is capable of accepting from users more than one mode of input keyboard mouse stylus and so on including speech input and also displaying more than one mode of output graphic speech and so on. A multimodal device is generally capable of accepting speech input from a user digitizing the speech and providing digitized speech to a speech engine for recognition. A multimodal device may be implemented for example as a voice enabled browser on a laptop a voice browser on a telephone handset an online game implemented with Java on a personal computer and with other combinations of hardware and software as may occur to those of skill in the art. Because multimodal digital audio editors may be implemented in markup languages X V SALT object oriented languages Java C procedural languages the C programming language and in other kinds of computer languages as may occur to those of skill in the art this specification uses the term multimodal digital audio editor to refer to any software application for editing digital audio server oriented or client oriented thin client thick client stand alone application that administers more than one mode of user input and more than one mode of output to a user where the modes include at least a visual mode and a speech mode.

Each of the example multimodal devices in the system of includes a microphone an audio amplifier a digital to analog converter and a multimodal digital audio editor capable of accepting from a user speech for recognition digitizing the speech and providing the digitized speech to a speech engine for recognition. The speech may be digitized according to industry standard codecs including but not limited to those used for Distributed Speech Recognition as such. Methods for COding DECoding speech are referred to as codecs. The European Telecommunications Standards Institute ETSI provides several codecs for encoding speech for use in DSR including for example the ETSI ES 201 108 DSR Front end Codec the ETSI ES 202 050 Advanced DSR Front end Codec the ETSI ES 202 211 Extended DSR Front end Codec and the ETSI ES 202 212 Extended Advanced DSR Front end Codec. In standards such as RFC3557 entitled

As mentioned a multimodal device according to embodiments of the present invention is capable of providing digitized speech to a speech engine for recognition. A speech engine is a functional module typically a software module although it may include specialized hardware also that does the work of recognizing and generating or synthesizing human speech. The speech engine implements speech recognition by use of a further module referred to in this specification as a ASR engine and the speech engine carries out speech synthesis by use of a further module referred to in this specification as a text to speech TTS engine. As shown in a speech engine may be installed locally in the multimodal device itself or a speech engine may be installed remotely with respect to the multimodal device across a data communications network in a voice server . A multimodal device that itself contains its own speech engine is said to implement a thick multimodal client or thick client because the thick multimodal client device itself contains all the functionality needed to carry out speech recognition and speech synthesis through API calls to speech recognition and speech synthesis modules in the multimodal device itself with no need to send requests for speech recognition across a network and no need to receive synthesized speech across a network from a remote voice server. A multimodal device that does not contain its own speech engine is said to implement a thin multimodal client or simply a thin client because the thin multimodal client itself contains only a relatively thin layer of multimodal digital audio editing software that obtains speech recognition and speech synthesis services from a voice server located remotely across a network from the thin client. For ease of explanation only one of the multimodal devices in the system of is shown with a speech engine but readers will recognize that any multimodal device may have a speech engine according to embodiments of the present invention.

A multimodal digital audio editor that is implemented partially or entirely in X V may provide speech for recognition and text for speech synthesis to a speech engine through a VoiceXML interpreter. A VoiceXML interpreter is a software module of computer program instructions that accepts voice dialog instructions from a multimodal digital audio editor typically in the form of a VoiceXML element. The voice dialog instructions include one or more grammars data input elements event handlers and so on that advise the VoiceXML interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm FIA .

Just as a speech engine may be installed locally or remotely with respect to any particular multimodal device so also a VoiceXML interpreter may be installed locally in the multimodal device itself or a VoiceXML interpreter may be installed remotely with respect to the multimodal device across a data communications network in a voice server . In a thick client architecture a multimodal device with a multimodal digital audio editor implemented in X V includes both its own speech engine and its own VoiceXML interpreter. The VoiceXML interpreter exposes an API to the multimodal digital audio editor for use in providing speech recognition and speech synthesis for the multimodal digital audio editor. The multimodal digital audio editor provides dialog instructions VoiceXML elements grammars input elements event handlers and so on through the API to the VoiceXML interpreter and the VoiceXML interpreter administers the speech engine on behalf of the multimodal digital audio editor. In a thick client architecture VoiceXML dialogs are interpreted by a VoiceXML interpreter on the multimodal device. In a thin client architecture VoiceXML dialogs are interpreted by a VoiceXML interpreter on a voice server located remotely across a data communications network from the multimodal device running the multimodal digital audio editor .

A VoiceXML interpreter provides grammars speech for recognition and text prompts for speech synthesis to the speech engine and the VoiceXML interpreter returns to the multimodal digital audio editor speech engine output in the form of recognized speech semantic interpretation results and digitized speech for voice prompts. In a thin client architecture the VoiceXML interpreter is located remotely from the multimodal client device in a voice server the API for the VoiceXML interpreter is still implemented in the multimodal device with the API modified to communicate voice dialog instructions speech for recognition and text and voice prompts to and from the VoiceXML interpreter on the voice server. Each of the example multimodal devices in the system of may be configured to index digitized speech by installing and running on the multimodal device a multimodal digital audio editor that indexes digitized speech with words represented in the digitized speech according to embodiments of the present invention. The use of these four example multimodal devices is for explanation only not for limitation of the invention. Any automated computing machinery capable of accepting speech from a user and providing the speech digitized to an ASR engine for recognition may be configured to function as a multimodal device for indexing digitized speech according to embodiments of the present invention.

The system of also includes a voice server which is connected to data communications network through wireline connection . The voice server is a computer that runs a speech engine that provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning text representing recognized speech. Voice server also provides speech synthesis text to speech TTS conversion for voice prompts and voice responses to user input in multimodal digital audio editors such as for example X V applications SALT applications or Java voice applications.

The system of includes a data communications network that connects the multimodal devices and the voice server for data communications. A data communications network for indexing digitized speech according to embodiments of the present invention is a data communications data communications network composed of a plurality of computers that function as data communications routers connected for data communications with packet switching protocols. Such a data communications network may be implemented with optical connections wireline connections or with wireless connections. Such a data communications network may include intranets internets local area data communications networks LANs and wide area data communications networks WANs . Such a data communications network may implement for example 

The system of includes a web server connected for data communications through wireline connection to network and therefore to the multimodal devices . The web server may be any server that provides to client devices markup documents that compose multimodal digital audio editors. The web server typically provides such markup documents via a data communications protocol HTTP HDTP WAP or the like. That is although the term web is used to described the web server generally in this specification there is no limitation of data communications between multimodal devices and the web server to HTTP alone. The markup documents also may be implemented in any markup language that supports non speech display elements data entry elements and speech elements for identifying which speech to recognize and which words to speak grammars form elements and the like including for example X V and SALT. A multimodal digital audio editor in a multimodal device then upon receiving from the web sever a markup document as part of a multimodal digital audio editor may execute speech elements by use of a VoiceXML interpreter and speech engine in the multimodal device itself or by use of a VoiceXML interpreter and speech engine located remotely from the multimodal device in a voice server .

The arrangement of the multimodal devices the web server the voice server and the data communications network making up the exemplary system illustrated in are for explanation not for limitation. Data processing systems useful for indexing digitized speech according to various embodiments of the present invention may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. Data communications networks in such data processing systems may support many data communications protocols in addition to those noted above. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .

For further explanation of speech recognition grammars sets forth a chart illustrating an example speech recognition grammar as a tree structure. The following example is a grammar useful in indexing digitized speech according to embodiments of the present invention that supports ordering pizza with the grammar expressed in Java Speech Grammar Format JSGF 

The chart of maps the elements of the order grammar into a tree structure with the order element at the root of the tree. The terms order pizza topping and polite phrase specify rules of the grammar. Grammar elements in angled brackets and are references to rules of the grammar also called non terminals because they represent branch nodes in the tree structure of the grammar that expand into further branch nodes or leaf nodes.

A terminal element is a leaf node in the tree structure of the grammar. Pizza is a non optional leaf node if the order grammar is to be matched the word pizza must be matched with a user utterance. The vertical bars designate grammar elements as alternatives the use of any one of which will match a grammar element. In the rule cheese pepperoni and italian sausage are non optional alternative terminal elements. If the order grammar is to be matched the user much speak one of cheese pepperoni or italian sausage. 

The grammar terms in square brackets are optional. The square brackets in designate the polite phrase rule as an optional non terminal element a branch node in the grammar tree. The terms of the rule in square brackets therefore are optional terminals leaf nodes in the grammar tree which in this example form two optional alternative phrases each of which is composed of two optional alternative terminals or leaf nodes respectively I want and give me .

Indexing digitized speech according to embodiments of the present invention in a thin client architecture may be implemented with one or more voice servers computers that is automated computing machinery that provide speech recognition and speech synthesis. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a voice server in indexing digitized speech according to embodiments of the present invention. The voice server of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the voice server.

Stored in RAM is a voice server application a module of computer program instructions capable of operating a voice server in a system that is configured to carry out automatic speech recognition according to embodiments of the present invention. Voice server application provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning speech recognition results including text representing recognized speech text for use as variable values in dialogs and text as string representations of scripts for semantic interpretation. Voice server application also includes computer program instructions that provide text to speech TTS conversion for voice prompts and voice responses to user input in multimodal digital audio editors such as for example X V applications SALT applications or Java Speech applications.

The voice server application may be implemented as a web server implemented in Java C or another language that supports X V SALT VoiceXML or other multimodallanguages by providing responses to HTTP requests from X V clients SALT clients Java Speech clients or other multimodal clients. Voice server application may for a further example be implemented as a Java server that runs on a Java Virtual Machine and supports a Java voice framework by providing responses to HTTP requests from Java client applications running on multimodal devices. The voice server application also may be implemented as a VoiceXML service or a SALT service in which case the voice server will also include a SALT interpreter or a VoiceXML interpreter. In addition to Java VoiceXML and SALT voice server applications that support automatic speech recognition may be implemented in other ways as may occur to those of skill in the art and all such ways are well within the scope of the present invention.

The voice server in this example includes a speech engine . The speech engine is a functional module typically a software module although it may include specialized hardware also that does the work of recognizing and generating human speech. The speech engine includes an automated speech recognition ASR engine for speech recognition and a text to speech TTS engine for generating speech. The speech engine also includes a grammar a lexicon and a language specific acoustic model . The language specific acoustic model is a data structure a table or database for example that associates Speech Feature Vectors SFVs with phonemes representing to the extent that it is practically feasible to do so all pronunciations of all the worcl l in a human language. The lexicon is an association of words in text form with phonemes representing pronunciations of each word the lexicon effectively identifies words that are capable of recognition by an ASR engine. Also stored in RAM is a Text To Speech TTS Engine a module of computer program instructions that accepts text as input and returns the same text in the form of digitally encoded speech for use in providing speech as prompts for and responses to users of multimodal systems.

The grammar communicates to the ASR engine the words and sequences of words that currently may be recognized. For precise understanding distinguish the purpose of the grammar and the purpose of the lexicon. The lexicon associates with phonemes all the words that the ASR engine can recognize. The grammar communicates the words currently eligible for recognition. The set of words currently eligible for recognition and the set of words capable of recognition may or may not be the same the set of words in the grammar typically are a subset of the words in the lexicon.

Grammars for use in indexing digitized speech according to embodiments of the present invention may be expressed in any format supported by any ASR engine including for example the Java Speech Grammar Format JSGF the format of the W3C Speech Recognition Grammar Specification SRGS the Augmented Backus Naur Format ABNF from the IETF s RFC2234 in the form of a stochastic grammar as described in the W3C s Stochastic Language Models N Gram Specification and in other grammar formats as may occur to those of skill in the art. Grammars typically operate as elements of dialogs such as for example a VoiceXML or an X V . A grammar s definition may be expressed in line in a dialog. Or the grammar may be implemented externally in a separate grammar document and referenced from with a dialog with a URI. Here is an example of a grammar expressed in JSFG 

In this example the elements named and are rules of the grammar. Rules are a combination of a rulename and an expansion of a rule that advises an ASR engine or a voice interpreter which words presently can be recognized. In this example expansion includes conjunction and disjunction and the vertical bars l mean or. An ASR engine or a voice interpreter processes the rules in sequence first then then . The rule accepts for recognition call or phone or telephone plus that is in conjunction with whatever is returned from the rule and the rule. The rule accepts bob or martha or joe or pete or chris or john or artoush and the rule accepts today or this afternoon or tomorrow or next week. The command grammar as a whole matches utterances like these for example 

The voice server application in this example is configured to receive from a multimodal client such as a multimodal digital audio editor located remotely across a network from the voice server digitized speech for recognition from a user and pass the speech along to the ASR engine for recognition. ASR engine is a module of computer program instructions also stored in RAM in this example. In carrying out automated speech recognition the ASR engine receives speech for recognition in the form of at least one digitized word and uses frequency components of the digitized word to derive a Speech Feature Vector SFV . An SFV may be defined for example by the first twelve or thirteen Fourier or frequency domain components of a sample of digitized speech. The ASR engine can use the SFV to infer phonemes for the word from the language specific acoustic model . The ASR engine then uses the phonemes to find the word in the lexicon .

Also stored in RAM is a VoiceXML interpreter a module of computer program instructions that processes VoiceXML grammars. VoiceXML input to VoiceXML interpreter may originate for example from VoiceXML clients running remotely as multimodal digital audio editors on multimodal devices from SALT clients running as multimodal digital audio editors on multimodal devices or from Java client applications running as multimodal digital audio editors remotely on multimedia devices. In this example VoiceXML interpreter interprets and executes VoiceXML segments representing voice dialog instructions received from remote multimedia devices and provided to VoiceXML interpreter through voice server application .

A multimodal digital audio editor in a thin client architecture may provide voice dialog instructions VoiceXML segments VoiceXML elements and the like to VoiceXML interpreter through data communications across a network with multimodal digital audio editor . The voice dialog instructions include one or more grammars data input elements event handlers and so on that advise the VoiceXML interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm FIA . The VoiceXML interpreter interprets VoiceXML dialogs provided to the VoiceXML interpreter by a multimodal digital audio editor.

Also stored in RAM is an operating system . Operating systems useful in voice servers according to embodiments of the present invention include UNIX Linux Microsoft NT AIX IBM s i5 0S and others as will occur to those of skill in the art. Operating system voice server application VoiceXML interpreter ASR engine NM and TTS Engine in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also for example on a disk drive .

Voice server of includes bus adapter a computer hardware component that contains drive electronics for high speed buses the front side bus the video bus and the memory bus as well as drive electronics for the slower expansion bus . Examples of bus adapters useful in voice servers according to embodiments of the present invention include the Intel Northbridge the Intel Memory Controller Hub the Intel Southbridge and the Intel I O Controller Hub. Examples of expansion buses useful in voice servers according to embodiments of the present invention include Industry Standard Architecture ISA buses and Peripheral Component Interconnect PCI buses.

Voice server of includes disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the voice server . Disk drive adapter connects non volatile data storage to the voice server in the form of disk drive . Disk drive adapters useful in voice servers include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. In addition non volatile computer memory may be implemented for a voice server as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The example voice server of includes one or more input output I O adapters . I O adapters in voice servers implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. The example voice server of includes a video adapter which is an example of an 1 0 adapter specially designed for graphic output to a display device such as a display screen or computer monitor. Video adapter is connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary voice server of includes a communications adapter for data communications with other computers and for data communications with a data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for indexing digitized speech according to embodiments of the present invention include modems for wired dial up communications Ethernet IEEE 802.3 adapters for wired data communications network communications and 802.11 adapters for wireless data communications network communications.

For further explanation sets forth a functional block diagram of exemplary apparatus for indexing digitized speech in a thin client architecture according to embodiments of the present invention. The example of includes a multimodal device and a voice server connected for data communication by a VOIP connection through a data communications network . A multimodal digital audio editor runs on the multimodal device and a voice server application runs on the voice server . The multimodal digital audio editor may be a set or sequence of X V or SALT documents that execute on multimodal browser a Java voice application that executes on the Java Virtual Machine or a multimodal digital audio editor implemented in other technologies as may occur to those of skill in the art. The example multimodal device of also includes a sound card which is an example of an I O adapter specially designed for accepting analog audio signals from a microphone and converting the audio analog signals to digital form for further processing by a codec .

In addition to the multimodal sever application the voice server also has installed upon it a speech engine with an ASR engine a grammar a lexicon a language specific acoustic model and a TTS engine as well as a NM and a Voice XML interpreter . VoiceXML interpreter interprets and executes VoiceXML dialog instructions received from the multimodal digital audio editor and provided to VoiceXML interpreter through voice server application . VoiceXML input to VoiceXML interpreter may originate from the multimodal digital audio editor implemented as an X V client running remotely on the multimodal device . As noted above the multimodal digital audio editor also may be implemented as a Java client application running remotely on the multimedia device a SALT application running remotely on the multimedia device and in other ways as may occur to those of skill in the art.

VOIP stands for Voice Over Internet Protocol a generic term for routing speech over an IP based data communications network. The speech data flows over a general purpose packet switched data communications network instead of traditional dedicated circuit switched voice transmission lines. Protocols used to carry voice signals over the IP data communications network are commonly referred to as Voice over IP or VOIP protocols. VOIP traffic may be deployed on any IP data communications network including data communications networks lacking a connection to the rest of the Internet for instance on a private building wide local area data communications network or LAN. 

Many protocols are used to effect VOIP. The two most popular types of VOIP are effected with the IETF s Session Initiation Protocol SIP and the ITU s protocol known as H.323. SIP clients use TCP and UDP port 5060 to connect to SIP servers. SIP itself is used to set up and tear down calls for speech transmission. VOIP with

SIP then uses RTP for transmitting the actual encoded speech. Similarly H.323 is an umbrella recommendation from the standards branch of the International Telecommunications Union that defines protocols to provide audio visual communication sessions on any packet data communications network.

The apparatus of operates in a manner that is similar to the operation of the system of described above. Multimodal digital audio editor is a user level multimodal client side computer program that presents a voice interface to user provides audio prompts and responses and accepts input speech for recognition . Multimodal digital audio editor provides a speech interface through which a user may provide oral speech for recognition through microphone and have the speech digitized through an audio amplifier and a coder decoder codec of a sound card and provide the digitized speech for recognition to ASR engine . Multimodal digital audio editor then packages the digitized speech in a recognition request message according to a VOIP protocol and transmits the speech to voice server through the VOIP connection on the network .

Voice server application provides voice recognition services for multimodal devices by accepting dialog instructions VoiceXML segments and returning speech recognition results including text representing recognized speech text for use as variable values in dialogs and output from execution of semantic interpretation scripts as well as voice prompts. Voice server application includes computer program instructions that provide text to speech TTS conversion for voice prompts and voice responses to user input in multimodal digital audio editors such as for example X V applications SALT applications or Java Speech applications.

The voice server application receives speech for recognition from a user and passes the speech through API calls to VoiceXML interpreter which in turn uses an ASR engine for speech recognition. The ASR engine receives digitized speech for recognition uses frequency components of the digitized speech to derive an SFV uses the SFV to infer phonemes for the word from the language specific acoustic model and uses the phonemes to find the speech in the lexicon . The ASR engine then compares speech found as words in the lexicon to words in a grammar to determine whether words or phrases in speech are recognized by the ASR engine.

The apparatus of operates generally to carry out indexing digitized speech according to embodiments of the present invention by providing by the multimodal digital audio editor to an ASR engine digitized speech for recognition. The multimodal digital audio editor receives from the ASR engine recognized user speech including a recognized word . The recognized user speech from the ASR engine also includes information referred to in this example as an index indicating where in the digitized speech representation of the recognized word begins. The multimodal digital audio editor inserts the recognized word in association with the information indicating where in the digitized speech representation of the recognized word begins into a speech recognition grammar . The speech recognition grammar voice enables user interface commands of the multimodal digital audio editor. Typical digital audio editors according to embodiments of the present invention also visually display the digitized speech with the recognized word as an index of where in the digitized speech the representation of the recognized word begins as illustrated on and explained in more detail below with reference to .

The ASR engine in this example is improved not only to return recognized user speech from digitized user speech but when recognizing a word in the digitized speech also identifying information indicating where in the digitized speech representation of the word begins. The digitized speech is represented by time domain amplitude values sampled by an analog to digital converter from analog speech input from a user that is from user utterances and organized according to a codec in sequential sets grouped frames. Each frame is characterized in sequence by a unique cardinal frame identification number and each frame contains the same number of time domain amplitude samples. The ASR engine then can convert the digitized speech containing a word to the frequency domain beginning with one of the frames of time domain amplitude samples and derive an index value indicating where in the digitized speech representation of the word begins by multiplying the one of the frame identification numbers by the number of amplitude samples in each frame. Conversion to the frequency domain may be carried out for example by the Fast Fourier Transform FFT . The index value so derived is an example of information indicating where in the digitized speech representation of the word begins.

The multimodal digital audio editor is operatively coupled to the ASR engine . In this example the operative coupling between the multimodal digital audio editor and the ASR engine is implemented with a VOIP connection through a voice services module then through the voice server application and either NM VoiceXML interpreter or SALT interpreter depending on whether the multimodal digital audio editor is implemented in X V Java or SALT. The voice services module is a thin layer of functionality a module of computer program instructions that presents an API for use by an application level program in providing dialog instructions and speech for recognition to a voice server application and receiving in response voice prompts and other responses. In this example application level programs are represented by multimodal digital audio editor NM and multimodal browser .

The voice services module provides data communications services through the VOIP connection and the voice server application between the multimodal device and the VoiceXML interpreter . The API is the same API presented to applications by a VoiceXML interpreter when the VoiceXML interpreter is installed on the multimodal device in a thick client architecture on . So from the point of view of an application calling the API the application is calling the VoiceXML interpreter directly. The data communications functions of the voice services module are transparent to applications that call the API . At the application level calls to the API may be issued from the multimodal browser which provides an execution environment for the multimodal digital audio editor when the multimodal digital audio editor is implemented with X V. And calls to the API may be issued from the JVM which provides an execution environment for the multimodal digital audio editor when the multimodal digital audio editor is implemented with Java.

Indexing digitized speech according to embodiments of the present invention in thick client architectures is generally implemented with multimodal devices that is automated computing machinery or computers. In the system of for example all the multimodal devices are implemented to some extent at least as computers. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a multimodal device in indexing digitized speech according to embodiments of the present invention. In a multimodal device implementing a thick client architecture as illustrated in the multimodal device has no connection to a remote voice server containing a VoiceXML interpreter and a speech engine. All the components needed for speech synthesis and voice recognition in indexing digitized speech according to embodiments of the present invention are installed or embedded in the multimodal device itself.

The example multimodal device of includes several components that are structured and operate similarly as do parallel components of the voice server having the same drawing reference numbers as described above with reference to at least one computer processor frontside bus RAM high speed memory bus bus adapter video adapter video bus expansion bus communications adapter I O adapter disk drive adapter an operating system a JVM a VoiceXML Interpreter a speech engine and so on. As in the system of the speech engine in the multimodal device of includes an ASR engine a grammar a lexicon a language dependent acoustic model and a TTS engine . The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm FIA .

The speech engine in this kind of embodiment a thick client architecture often is implemented as an embedded module in a small form factor device such as a handheld device a mobile phone PDA and the like. An example of an embedded speech engine useful for indexing digitized speech according to embodiments of the present invention is IBM s Embedded ViaVoice Enterprise. The example multimodal device of also includes a sound card which is an example of an I O adapter specially designed for accepting analog audio signals from a microphone and converting the audio analog signals to digital form for further processing by a codec . The sound card is connected to processor through expansion bus bus adapter and front side bus .

Also stored in RAM in this example is a multimodal digital audio editor a module of computer program instructions capable of operating a multimodal device as an apparatus that supports indexing digitized speech according to embodiments of the present invention. The multimodal digital audio editor implements speech recognition by accepting speech for recognition from a user and sending the speech for recognition through API calls to the ASR engine . The multimodal digital audio editor implements speech synthesis generally by sending words to be used as prompts for a user to the TTS engine . As an example of thick client architecture the multimodal digital audio editor in this example does not send speech for recognition across a network to a voice server for recognition and the multimodal digital audio editor in this example does not receive synthesized speech TTS prompts and responses across a network from a voice server. All grammar processing voice recognition and text to speech conversion in this example is performed in an embedded fashion in the multimodal device itself.

More particularly multimodal digital audio editor in this example is a user level multimodal client side computer program that provides a speech interface through which a user may provide oral speech for recognition through microphone have the speech digitized through an audio amplifier and a coder decoder codec of a sound card and provide the digitized speech for recognition to ASR engine . The multimodal digital audio editor may be implemented as a set or sequence of X V documents executing in a multimodal browser or microbrowser that passes VoiceXML grammars and digitized speech by calls through an API directly to an embedded VoiceXML interpreter for processing. The embedded VoiceXML interpreter may in turn issue requests for speech recognition through API calls directly to the embedded ASR engine . Multimodal digital audio editor also can provide speech synthesis TTS conversion by API calls to the embedded TTS engine for voice prompts and voice responses to user input.

In a further class of exemplary embodiments the multimodal digital audio editor may be implemented as a Java voice application that executes on Java Virtual Machine and issues calls through the VoiceXML API for speech recognition and speech synthesis services. In further exemplary embodiments the multimodal digital audio editor may be implemented as a set or sequence of SALT documents executed on a multimodal browser or microbrowser that issues calls through the VoiceXML API for speech recognition and speech synthesis services. In addition to X V SALT and Java implementations multimodal digital audio editor may be implemented in other technologies as will occur to those of skill in the art and all such implementations are well within the scope of the present invention.

The multimodal device of operates generally to carry out indexing digitized speech according to embodiments of the present invention by providing by the multimodal digital audio editor to an ASR engine digitized speech for recognition. The multimodal digital audio editor receives from the ASR engine recognized user speech including a recognized word . The recognized user speech from the ASR engine also includes information referred to in this example as an index indicating where in the digitized speech representation of the recognized word begins. The multimodal digital audio editor inserts the recognized word in association with the information indicating where in the digitized speech representation of the recognized word begins into a speech recognition grammar . The speech recognition grammar voice enables user interface commands of the multimodal digital audio editor. Typical digital audio editors according to embodiments of the present invention also visually display the digitized speech with the recognized word as an index of where in the digitized speech the representation of the recognized word begins as illustrated on and explained in more detail below with reference to .

The ASR engine in this example is improved not only to return recognized user speech from digitized user speech but when recognizing a word in the digitized speech also identifying information indicating where in the digitized speech representation of the word begins. The digitized speech is represented by time domain amplitude values sampled by an analog to digital converter from analog speech input from a user that is from user utterances and organized according to a codec in sequential sets grouped frames. Each frame is characterized in sequence by a unique cardinal frame identification number and each frame contains the same number of time domain amplitude samples. The ASR engine then can convert the digitized speech containing a word to the frequency domain beginning with one of the frames of time domain amplitude samples and derive an index value indicating where in the digitized speech representation of the word begins by multiplying the one of the frame identification numbers by the number of amplitude samples in each frame. Conversion to the frequency domain may be carried out for example by the Fast Fourier Transform FFT . The index value so derived is an example of information indicating where in the digitized speech representation of the word begins.

The multimodal digital audio editor is operatively coupled to the ASR engine . In this example the operative coupling between the multimodal digital audio editor and the ASR engine is implemented either with NM VoiceXML interpreter or SALT interpreter depending on whether the multimodal digital audio editor is implemented in X V Java or SALT. When the multimodal digital audio editor is implemented in X V the operative coupling is effected through the multimodal browser which provides an operating environment and an interpreter for the X V application and then through the VoiceXML interpreter which passes grammars and voice utterances for recognition to the ASR engine. When the multimodal digital audio editor is implemented in Java Speech the operative coupling is effected through the NM which provides an operating environment for the Java application and passes grammars and voice utterances for recognition to the ASR engine. When the multimodal digital audio editor is implemented in SALT the operative coupling is effected through the SALT interpreter which provides an operating environment and an interpreter for the X V application and passes grammars and voice utterances for recognition to the ASRengine.

The multimodal digital audio editor in this example running on a multimodal device that contains its own VoiceXML interpreter and its own speech engine with no network or VOIP connection to a remote voice server containing a remote VoiceXML interpreter or a remote speech engine is an example of a so called thick client architecture so called because all of the functionality for processing voice mode interactions between a user and the multimodal digital audio editor as well as the functionality for indexing digitized speech with words represented in the digitized speech according to embodiments of the present invention is implemented on the multimodal device itself.

For further explanation sets forth a flow chart illustrating an exemplary method of indexing digitized speech according to embodiments of the present invention. Indexing digitized speech in this example is implemented with a multimodal digital audio editor . The multimodal digital audio editor operates on a multimodal device on supporting multiple modes of user interaction with the multimodal digital audio editor including a voice mode and one or more non voice modes of user interaction with the multimodal digital audio editor. A voice mode of such interaction is represented in this example with audio output through a speaker and audio input through a microphone . Non voice modes are represented by user input devices a visual display device a keyboard and a mouse.

The multimodal digital audio editor is operatively coupled to an ASR engine . The operative coupling provides a data communications path from the multimodal digital audio editor to the ASR engine for speech recognition grammars. The operative coupling provides a data communications path from the ASR engine to the multimodal digital audio editor for recognized speech and semantic interpretation results. The operative coupling may be effected with a JVM on VoiceXML interpreter on or SALT interpreter on when the multimodal digital audio editor is implemented in a thick client architecture. When the multimodal digital audio editor is implemented in a thin client architecture the operative coupling may include an a voice services module on and a VOIP connection on . When multimodal digital audio editor is implemented in X V the operative coupling may include a VoiceXML interpreter on . When the multimodal digital audio editor is implemented in a Java speech framework the operative coupling may include a Java speech API and a JVM on . When the multimodal digital audio editor is implemented in SALT the operative coupling may include a SALT interpreter on .

The method of includes providing by the multimodal digital audio editor to the ASR engine digitized speech for recognition. The digitized speech may be a stream currently input by a user through an analog to digital converter and a codec on a sound card or a previously recorded digital audio clip for example. The multimodal digital audio editor also provides to the ASR engine a speech recognition grammar that identifies to the ASR engine words in the digitized speech that are presently eligible for recognition.

In the method of the ASR engine recognizes a word in the digitized speech and the ASR engine also identifies information indicating where in the digitized speech representation of the word begins. As explained in more detail below the ASR engine can use a frame number and the number of amplitude samples in each frame to calculate an index indicating where in the digitized speech representation of the word begins. Such an index may be implemented therefore as the actual sequence number of a particular digital amplitude sample in the digitized speech where representation a recognized word begins in the digitized speech such as for example 167243 298374 or 314325. The ASR engine returns to the multimodal digital audio editor recognized user speech including the recognized word and an index value as the information indicating where in the digitized speech representation of the word begins. The multimodal digital audio editor receives from the ASR engine the recognized user speech including the recognized word and also including the information indicating where in the digitized speech representation of the recognized word begins.

The method of also includes inserting by the multimodal digital audio editor the recognized word in association with the information indicating where in the digitized speech representation of the recognized word begins into a speech recognition grammar the speech recognition grammar voice enabling user interface commands of the multimodal digital audio editor. User interface commands so voice enabled may include for example Play Pause Stop Rewind Zoom and so on. In the method of inserting the word into a speech recognition grammar includes associating the recognized word as a non optional terminal element in the speech recognition grammar with a word representing a user interface command of the digital audio editor. Here is an example of a speech recognition grammar bearing non optional terminal elements associated with words representing user interface commands of a multimodal digital audio editor 

In this example grammar the words car bomb and airplane are words recognized by an ASR engine and inserted by a multimodal digital audio editor into a speech recognition grammar as non optional terminal grammar elements in association with the following words representing user interface commands of the multimodal digital audio editor play and show. In this example moreover the multimodal digital audio editor has inserted as parts of a non optional terminal grammar element information indicating where in digitized speech representation of each recognized word begins respectively in this example as digital sample sequence numbers 167243 298374 and 314325. These sequence numbers or indices in this example are associated with the recognized words car bomb and airplane in semantic interpretation scripts so that when the words car bomb and airplane are subsequently recognized as part of user interface commands the value of the semantic interpretation script that is the index into the digitized speech where representation of the word begins is returned by an ASR engine as part of the recognition results advising the multimodal digital audio editor how to associated a recognized word with a particular location in playback editing or display of the digitized speech.

The method of also includes visually displaying the digitized speech with the recognized word as an index of where in the digitized speech the representation of the recognized word begins. Visual display of the digitized speech is explained below with reference to .

For further explanation sets forth a flow chart illustrating a further exemplary method of indexing digital speech according to embodiments of the present invention. The method of is similar to the method of including as it does providing digitized speech for recognition receiving recognized user speech including a recognized word and information indicating where in the digitized speech representation of the recognized word begins and inserting the recognized word with information indicating where representation of the recognized word begins into a speech recognition grammar that voice enables user interface commands all of which function in a manner similar to that described above with reference to the method of . In the method of however identifying the information indicating where in the digitized speech representation of the word begins includes organizing the digitized speech in sequential sets of time domain amplitude samples grouped in frames each frame characterized in sequence by a unique and cardinal frame identification number each frame containing the same number of time domain amplitude samples. The organizing step is shown for convenience of explanation as occurring in the ASR engine. Readers will recognize however that such organizing also may be carried out as part of a codec function on a sound card and in other ways as may occur to those of skill in the art.

Also in the method of identifying the information indicating where in the digitized speech representation of the word begins includes converting the digitized speech containing the word to the frequency domain beginning with one of the frames of time domain amplitude samples. Moreover in the method of identifying the information indicating where in the digitized speech representation of the word begins also includes deriving an index value indicating where in the digitized speech representation of the word begins by multiplying the one of the frame identification numbers by the number of amplitude samples in each frame. The digitized speech is composed of time domain digital amplitude samples.

The ASR engine may for example convert time domain digital amplitude samples to the frequency domain by Fast Fourier Transform FFT on a set of several amplitudes in a frame identified by a frame number where the frame numbers are cardinals that uniquely identify each frame. The frame number is a time domain entity so the location in the digitized speech of a recognized word is specified as a cardinal sample number by multiplying the frame number by the number of amplitude samples in each frame. Because of its function as an indicator of location that is the location where in the digitized speech representation of a recognized word begins such a cardinal sample number is sometimes referred to in this specification as an index or index value. 

For further explanation sets forth a flow chart illustrating a further exemplary method of indexing digital speech according to embodiments of the present invention providing digitized speech for recognition receiving recognized user speech including a recognized word and information indicating where in the digitized speech representation of the recognized word begins and inserting the recognized word with information indicating where representation of the recognized word begins into a speech recognition grammar that voice enables user interface commands all of which function in a manner similar to that described above with reference to the method of . In the method of however the speech recognition grammar voice enabling user interface commands of the multimodal digital audio editor includes inserting by the multimodal digital audio editor into the grammar as part of a non optional terminal grammar element the information indicating where in the digitized speech representation of the recognized word begins. Here is an example of a speech recognition grammar bearing non optional terminal elements containing information indicating where in digitized speech representation of recognized words begin 

In this example grammar the words car bomb and airplane are words recognized by an ASR engine and inserted by a multimodal digital audio editor into a speech recognition grammar as non optional terminal grammar elements in association with the following words representing user interface commands of the multimodal digital audio editor play and show. In this example moreover the multimodal digital audio editor has inserted as parts of a non optional terminal grammar element information indicating where in digitized speech representation of each recognized word begins respectively in this example as digital sample sequence numbers 167243 298374 and 314325. These sequence numbers or indices in this example are associated with the recognized words car bomb and airplane in semantic interpretation scripts so that when the words car bomb and airplane are subsequently recognized as part of user interface commands the value of the semantic interpretation script that is the index into the digitized speech where representation of the word begins is returned by an ASR engine as part of the recognition results advising the multimodal digital audio editor how to associated a recognized word with a particular location in playback editing or display of the digitized speech. Without the indices in the grammar the multimodal digital audio editor would need to use the recognized word to look up the index in a table or other data structure a much more laborious procedure than including the index in the grammar and in the recognition results.

For further explanation sets forth a drawing of an exemplary graphical user interface GUI display of a multimodal digital audio editor that indexes digitized speech with words represented in the digitized speech according to embodiments of the present invention. In the example of the multimodal digital audio editor has provided to an ASR engine digitized speech for recognition a recorded MP3 clip for example along with a speech recognition grammar that enabled recognition of the words airplane bomb car subway explode and attack. The ASR engine recognized the words bomb airplane and subway and returned to the multimodal digital audio editor recognition results that included the recognized words along with information indicating where in the digitized speech representation of each recognized word begins. The digitized speech comprises digital amplitude sample values organized in sequentially numbered frames. The information indicating where in the digitized speech representation of each recognized word begins is represented by a sequential time domain digital amplitude sample number index value calculated by the ASR engine with a frame number of the frame where the word is found in the digitized speech and the number of samples per frame.

The multimodal digital audio editor having received the recognized words and their index values inserted each recognized word in association its index value into a speech recognition grammar that voice enables user interface commands of the multimodal digital audio editor such as this example grammar 

The example grammar enables the multimodal digital audio editor to accept and carry out voice commands such as for example 

In addition to voice control the example GUI of also includes visual controls for manipulation by keyboard a mouse or other user interface tools. Such visual controls include the GUI playback controls for user interface commands such as for example Rewind Play Pause Stop Fast Forward and so on as well as visual controls for display of the digitized speech.

The example GUI display of also includes two visual displays of digitized speech with recognized words as an index of where in the digitized speech the representation of each recognized word begins a waveform display and a spectrogram display . The horizontal axis of the waveform display represents time and the vertical axis represents waveform amplitude. The words bomb airplane and subway are visually displayed on the waveform display as indices of where in the digitized speech the representation of each recognized word begins with the left edge of bomb aligned as an index with sample number 167243 the left edge of airplane aligned as an index with sample number 298374 and the left edge of subway aligned as an index with sample number 314325 .

The horizontal axis of the spectrogram display represents time and the vertical axis represents frequency. Amplitude or sound intensity is indicated on the spectrogram display with color or with intensity on a gray scale for example. The words bomb airplane and subway are visually displayed on the spectrogram display as indices of where in the digitized speech the representation of each recognized word begins with the left edge of bomb aligned as an index with sample number 167243 the left edge of airplane aligned as an index with sample number 298374 and the left edge of subway aligned as an index with sample number 314325 .

In view of the explanations set forth above readers will now recognized that the benefits of indexing digitized speech with words represented in the digitized speech according to embodiments of the present invention include greatly easing the process of analyzing human speech with a digital audio editor when the analyst is interest in locations of particular words in the audio data. A typical multimodal digital audio editor according to embodiments of the present invention among other benefits that will occur to those of skill in the art effectively combines recognized text with audio data so that the audio editor can annotate a graphical display of the audio data with the recognized words and enable manipulation of the display with voice commands.

Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for indexing digitized speech with words represented in the digitized speech. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on computer readable signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example EthernetsrM and networks that communicate with the Internet Protocol and the World Wide Web. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

