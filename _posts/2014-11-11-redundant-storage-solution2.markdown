---

title: Redundant storage solution
abstract: Method and apparatus for switching between a first server and a second server, each located within a virtual private cloud and the first server being located within a first zone and the second server being located within a second zone that is physically separate from the first zone. The method and apparatus further configured to determine that the first server has experienced a failure to send or receive data. The method and apparatus further configured to enable a second port on the second server. The method and apparatus further configured to create a new route table at the second server and flush the previous route table. The method and apparatus further configured to transmit, via the second port, a request to a virtual private cloud controller to update an elastic internet protocol address with the second port information and receive data from the virtual private cloud controller.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09584363&OS=09584363&RS=09584363
owner: SOFTNAS, LLC.
number: 09584363
owner_city: Houston
owner_country: US
publication_date: 20141111
---
This application claims priority to U.S. Provisional Application No. 61 902 776 filed Nov. 11 2013 entitled Redundant Storage Solution which is entirely incorporated by reference herein.

For simplicity and clarity of illustration where appropriate reference numerals have been repeated among the different figures to indicate corresponding or analogous elements. In addition numerous specific details are set forth in order to provide a thorough understanding of the implementations described herein. However those of ordinary skill in the art will understand that the implementations described herein can be practiced without these specific details. In other instances methods procedures and components have not been described in detail so as not to obscure the related relevant feature being described. Also the description is not to be considered as limiting the scope of the implementations described herein.

Several definitions that apply throughout this disclosure will now be presented. The term coupled is defined as directly or indirectly connected to one or more components. The term server can include a hardware server a virtual machine and a software server.

The present technology is configured to comprise two or more servers located within a Virtual Private Cloud VPC . Two of the two or more servers are located within different zones within the VPC. For example the VPC can be defined within a particular area but the two servers are located some distance apart. In at least one embodiment there are two servers each having a corresponding zone. In at least one implementation the zone is an availability zone. In other embodiment the two servers can be located within the same zone. The present technology comprises at least two servers that are configured such that they are configured such that one of the servers is a primary server and the other server is a backup or redundant server such that all of the data that is present on the first server is also present on the second server. For example the second server can be a mirror storage device of the first server.

The present technology is configured to provide a seamless failover in the event that the first server is not able to send and or receive data with a client device the communication from the client device is routed over to the second device. In at least one implementation the switch over to the second server is such that it can be made such that there is no disruption of communication from the client to data stored on the two servers.

In at least one embodiment the present technology can be implemented as a software or a hardware module. In at least one embodiment the present technology causes a processor to execute instructions. The software module can be stored within a memory device or a drive. The present technology can be implemented with a variety of different drive configurations including Network File System NFS internet Small Computer System Interface iSCSi and Common Internet File System CIFS . Additionally the present technology can be configured to run on VMware ESXi which is an operating system independent hypervisor based on the VMkernel operating system interfacing with agents that run on top of it. Additionally the present technology can be configured to run on Amazon Web Service in VPC.

In at least one embodiment the present technology is configured to provide for a method of switching between a first node and a second node each located within a virtual private cloud where the first node is located within a first zone and the second node is located within a second zone that is separate from the first zone the nodes each comprising pools and volumes. In at least one embodiment the method comprises determining at the second node that the first node has experienced a failure to send or receive data enabling a second port on the second node creating a new route table at the second node flushing the previous route table transmitting via the second port a request to a virtual private cloud controller to update an internet protocol address with the second port information and receiving via the second port data from the virtual private cloud controller. In one embodiment the request to a virtual private cloud controller to update an internet protocol address with the second port information utilizes a load balancer. In one embodiment the second zone is physically separate from the first zone. In another embodiment the second zone is logically separate from the first zone.

In at least one embodiment the method further comprises automatically discovering the information present on both nodes necessary to achieve replication including at least determining which storage pools and volumes need to be replicated. In some embodiments the determination may further include automatically discovering storage pools on the nodes that have the same name automatically discovering the volumes in each such storage pool automatically configuring tasks necessary for each volume to be replicated automatically determining whether a full back up or synchronization from the first node to the second node of all storage pools and volumes in the source node is necessary and upon such determination executing the full back up or synchronization from the first node to the second node of all storage pools and volumes in the source node.

In at least one embodiment the method further comprises performing a snap replication once per a first predetermined period the snap replication comprising synchronizing data on the first node to the second node which has changed within a second predetermined period. In at least one embodiment the method further comprises providing access to the first node or the second node via a user interface. In one embodiment the user interface is an application programming interface. In another embodiment the user interface is a complete packet inspection interface.

In at least one embodiment the method further comprises authorizing two way communication between the nodes via at least one secure shell. In at least one embodiment the method further comprises authorizing two way communication between the nodes via at least one secure network connection. In one embodiment the secure network connection is via TCP IP. In another embodiment the secure network connection is via secure shell.

In at least one embodiment the present technology is configured to provide for a method of switching between a first node and a second node each located within a virtual private cloud where the first node is located within a first zone and the second node is located within a second zone that is physically separate from the first zone the nodes each comprising pools and volumes. In at least one embodiment the method comprises determining at the second node that the first node has experienced a failure to send or receive data enabling a second port on the second node creating a new route table at the second node flushing the previous route table transmitting via the second port a request to a virtual private cloud controller to update a load balancer with the second port information and receiving via the second port data from the virtual private cloud controller.

In at least one embodiment the present technology is configured to provide for a virtual private cloud configured to be connected to the internet via a hypertext transfer protocol server the virtual private cloud comprising a first server comprising a first network interface card and a second network interface card and a second server comprising a first network interface card and a second network interface card. In one embodiment the second server is configured to be communicatively coupled to the first server to provide for a redundant file system and the first network interface card on the first server is configured to be coupled to the first network interface card on the second server. In at least one embodiment the second server is configured to determine that the first server has experienced a failure to send or receive data enable a second port on the second server create a new route table at the second server flush the previous route table transmit via the second port a request to a virtual private cloud controller to update an elastic internet protocol address with the second port information and rescue via the second port data from the virtual private cloud controller.

The present technology is configured to provide for seamless cross zone failover. As illustrated in an example of the present disclosure is illustrated. A VPC is illustrated. The VPC comprises a controller . The controller can control the first server and the second server . While only two servers are illustrated in the present example the technology can be implemented with two or more servers. The illustration of only two servers is provided to simplify the presentation of information. The controller can be communicatively coupled to a storage client . The storage client can be a web server for example a hypertext transfer protocol HTTP server. In other embodiments other types of storage clients can be implemented. In other embodiments the storage client can be configured to allow for pass through of data and not necessary provide for storage. The storage client or other device can be communicatively coupled to the internet . Additionally as illustrated there are several client devices that connect to the storage client through internet. The client devices can include a first computer and a second computer . The client devices can further include a first mobile device and a second mobile device . Other devices that need access to storage client are also considered within this disclosure. The other devices can include tablets laptops servers navigation devices electronic systems within an automobile and other special purpose devices.

The first server can comprise a first communication port and a second communication port . The first communication port and the second communication port can be any interface that is designed to communication with a corresponding communication interface on another device that allows for communication between the devices. In one example the first communication port and the second communication port can be network interface cards NICs . In other configurations the first communication port and the second communication port can be other devices that allow for transfer of data including universal serial bus Ethernet optical data cards and the like. While the first communication port and the second communication port can be the same type of port in other implementations the ports can be different.

The second server can comprise a first communication port and a second communication port . The first communication port and the second communication port can be any interface that is designed to communication with a corresponding communication interface on another device that allows for communication between the devices. In one example the first communication port and the second communication port can be network interface cards NICs . In other configurations the first communication port and the second communication port can be other devices that allow for transfer of data including universal serial bus Ethernet optical data cards and the like. While the first communication port and the second communication port can be the same type of port in other implementations the ports can be different.

As illustrated the first communication port of the first server can be configured to be communicatively coupled with the first communication port of the second server . The communicative coupling of the first server with the second server allows for data to be transferred between the first server and the second server . This allows for the data on the second server to be a mirror of the data on the first server thereby providing a backup to the data on the first server .

The controller can be configured to direct data traffic to the first server or the second server based upon an elastic internet protocol address EIP .

The first server can further include a zone file system ZFS . ZFS can be used to send and receive data for asynchronous replication. ZFS can be configured to communicate with a distributed replicated block device DRBD on the first server . The DRBD can be configured to communicate with DRBD devices such as a first disk device A and a second disk device B . Additionally the server can comprise an elastic block storage EBS . The EBS can comprise a first volume A and a second volume B . The EBS first volume A can be communicatively coupled to the first disk device A . The EBS second volume B can be communicatively coupled to the second disk device B .

The second server can further include ZFS . The ZFS can be configured to communicate with a DRBD on the first server . The DRBD can be configured to communicate with DRBD devices such as a first disk device A and a second disk device B . Additionally the server can comprise an EBS . The EBS can comprise a first volume A and a second volume B . The EBS first volume A can be communicatively coupled to the first disk device A . The EBS second volume B can be communicatively coupled to the second disk device B .

In normal operation the first server is communicatively coupled to the controller via a second port over communication channel . Additionally data that is being accessed at the first server is stored on the first disk device A and the first volume . This data is replicated to the second server via the first ports over communication channel . The replicated data is stored on the second server in the first disk device A and first volume A . The data stored on the second disk device B and the second volume is the backup or replication of the data on second server on second disk device B and the second volume .

When the second server detects that the first server has lost communication the second server enables the second port to communicate with the controller via communication channel . The second server sends information to the controller to update the EIP so that communication can flow to the second server instead of the first server . As described below the transformation of the EIP can be as a result of the second server creating a new route table and flushing the old route table. Once the EIP is updated the data that was originally being directed towards the first server is directed to the first disk device and the first volume so that the client devices do not experience any delay in accessing or storing data and the data set remains complete.

While the above has used volumes and disk devices to describe the EBS and DRBD devices these terms can refer to one or more files or one or more devices. Additionally the controller has been described within the VPC however the controller can be located outside of the VPC. While the above has been described in relation to servers other types of structures are considered within this disclosure.

The present disclosure also includes a method as illustrated with respect to . As illustrated the method includes several steps. The steps illustrated are for illustration purposes and other steps can be implemented. Additionally while a particular order is illustrated in the present technology can be implemented in other arrangements such that the order of the steps can be different than that as illustrated. Furthermore the present technology can include steps that are not illustrated and other embodiments can be such that one or more of the steps are removed. The method is described in relation to two servers which can be any device as described above. For example the servers as described below can be network attached storage devices.

The method comprises determining at a second server that a first server currently communicatively coupled to client storage device such as an HTTP server has experienced a communication failure block . This determination can be made when the second server does not receive communication from the first server as the first server and the second server can be communicatively coupled to one another over a first set of ports one on each server .

The method can further comprise enabling a second port on the second server block . The enabling the second port can be in response to the determination that the first server experienced a communication failure.

The method can further comprise creating a new route table at the second server block . The new route or routing table can include information to route data that was previously routed to the first server to the second server. The route table can contain other information that is necessary to route data to the right location.

The method can further comprise flushing previous route routing tables block . Additionally the method can insert the new route tables in place of the flushed route tables.

The method can further include transmitting via the second port a request to the VPC controller to update EIP block .

The method can further include receiving data via the second port from the VPC controller at the second server where the data communication would have been previously directed to the first server block .

Examples within the scope of the present disclosure may also include tangible and or non transitory computer readable storage media for carrying or having computer executable instructions or data structures stored thereon. Such non transitory computer readable storage media can be any available media that can be accessed by a general purpose or special purpose computer including the functional design of any special purpose processor as discussed above. By way of example and not limitation such non transitory computer readable media can include RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to carry or store desired program code means in the form of computer executable instructions data structures or processor chip design. When information is transferred or provided over a network or another communications connection either hardwired wireless or combination thereof to a computer the computer properly views the connection as a computer readable medium. Thus any such connection is properly termed a computer readable medium. Combinations of the above should also be included within the scope of the computer readable media.

Computer executable instructions include for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Computer executable instructions also include program modules that are executed by computers in stand alone or network environments. Generally program modules include routines programs components data structures objects and the functions inherent in the design of special purpose processors etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of the program code means for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.

Those of skill in the art will appreciate that other examples of the disclosure may be practiced in network computing environments with many types of computer system configurations including personal computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. Examples may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked either by hardwired links wireless links or by a combination thereof through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

The various embodiments described above are provided by way of illustration only and should not be construed to limit the scope of the disclosure. Those skilled in the art will readily recognize various modifications and changes that may be made to the principles described herein without following the example embodiments and applications illustrated and described herein and without departing from the scope of the disclosure.

At least one embodiment works by first defining a specific IAM role to associate to each ec2 Instance. In at least one embodiment each Instance must be started with 2 ethernet interfaces configured or defined or both.

 opt aws bin ec2 associate address a eipalloc 03a 7 e962 n eni 46561127 region us east 1 allow reassociation

