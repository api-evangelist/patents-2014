---

title: Systems and methods for protecting sensitive data in communications
abstract: Systems and methods for protecting sensitive data in communications are described, including identifying first information in content created by a user for a communication; sending the first information to a vault; receiving, from the vault, an identifier associated with the first information; replacing the first information in the content with second information that is associated with the first information and does not provide any indication of the content of the first information; and sending the communication comprising the content with the second information and the identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09177174&OS=09177174&RS=09177174
owner: GOOGLE INC.
number: 09177174
owner_city: Mountain View
owner_country: US
publication_date: 20140206
---
The subject matter discussed herein relates generally to electronic or digital communications and more particularly to systems and methods for protecting sensitive data in communications.

Digital communications such as emails documents text messages images sometimes contain sensitive data such as credit card numbers passwords and identifiers etc. Users may sometimes need to include sensitive data in communications e.g. in an email or a document but do not want the sensitive data to be accessed by another without permission e.g. end up in the wrong hands .

Related art tools allow the communications to be encrypted in transit from point A to point B using Secure Sockets Layer SSL Transport Layer Security TLS or other cryptographic protocols. However once the communications reach point B the communications are decrypted to their original forms. Communications may then be received without permission e.g. fall in the wrong hands at point B. For example a user may electronically forward a communication with the sensitive data intact to an unintended recipient or convert a communication in another medium e.g. paper copy that can be accessed by an unintended viewer.

The subject matter includes methods for protecting sensitive data in communications including identifying first information in content created by a user for a communication sending the first information to a vault receiving from the vault an identifier associated with the first information replacing the first information in the content with second information that is associated with the first information and does not provide any indication of the content of the first information and sending the communication comprising the content with the second information and the identifier.

The methods are implemented using one or more computing devices and or systems. The methods may be stored in computer readable media.

The subject matter described herein is taught by way of example implementations. Various details have been omitted for the sake of clarity and to avoid obscuring the subject matter. The examples shown below are directed to structures and functions for implementing systems and methods for protecting sensitive data in communications.

Each of sending system and receiving system can be implemented to provide the functions of both a sending system and a receiving system. The term sending system and receiving system are only labels that associated with the functions provided with respect to a communication. For example when a communication e.g. email is sent from system A to system B system A is considered the sending system and system B is considered the receiving system with respect to that email. If a communication such as a response e.g. a reply email is sent from system B to system A system B is considered the sending system and system A is considered the receiving system with respect to the reply email.

Sending system may communicate with other receiving systems not shown and store sensitive information in other vaults not shown . Receiving system may receive content emails documents etc. from other sending systems not shown .

In some implementations the functions operations or process or sending system may include identifying at block a digital communication or content e.g. an email document text message image other digital content etc. to be provided by one user e.g. user Alice associated with sending system to another user e.g. user Bob associated with receiving system . For example Alice may have selected a document to share with Bob or written an email to send to Bob. The content identified at may contain sensitive data or confidential data collectively referred to as sensitive information . Sensitive information is any information that the sender or receiver e.g. Alice or Bob does not want to reveal to a third party e.g. any user other than Alice the sender and Bob the intended recipient . Examples of sensitive information include but are not limited to objectively sensitive information and subjectively sensitive information. Sensitive information may occur in one or more locations of a communication.

Objectively sensitive information is information that most users would characterize as being sensitive such as credit card numbers personal identifiers personal financial information account numbers personal medical information passwords personal identification numbers or personal identification numbers e.g. PINs government issued identifiers e.g. driver license numbers social security numbers etc. employment information or identifiers. Subjectively sensitive information is information that a particular sender and or receiver e.g. Alice and or Bob may consider sensitive but other users may not characterize as sensitive.

At block a user interface UI may be provided to the sharer or sender e.g. Alice to identify or detect information at one or more location of the communication that Alice considers sensitive. Example of such UI are shown in and described below.

In some implementations sensitive information may be automatically identified and or detected by sending system or a non user e.g. without the assistance or intervention of any users such as Alice . For example sending system may be configured e.g. programmed to identify and detect different types of sensitive information such as credit card numbers telephone numbers names passwords account numbers etc. For example credit card numbers may have a format that is a string of numbers X to Y digits long with our without separating characters e.g. non digits hyphens spaces periods commas etc. in between some digits. For example for certain types of credit cards may include a string of 16 digits after stripping out any non digits e.g. separating characters and other types of credit cards may require a string of 15 digits after stripping out any non digits e.g. separating characters .

In some implementations sending system may be programmed to identify and or detect credit card numbers as numbers that conform to certain conditions or definitions. For example some credit card providers may only have credit card numbers that start with a digit 3 . Other credit card providers may only have credit card numbers that start with a digit 4 and still other credit card providers may only have credit card numbers that start with a digit 5 . Credit card numbers or any numbers e.g. account numbers may be processed to determine if the numbers meet one or more conditions. For example sending system may be programmed to perform the Luhn algorithm or a modulus algorithm to check the checksum of the numbers to validate or confirm that the numbers are credit card numbers as a condition or additional condition to be sensitive information. Additional and or different processing may be performed automatically e.g. by sending system to identify and or detect sensitive information.

At block sending system receives a request to share the digital content or send a digital communication identified at . At block sending system determines whether the receiving system e.g. receiving system supports the same or similar features to protect sensitive information. For example the determination may be based on a system identifier and or software identifier of receiving system e.g. sending system may request the identifier information from receiving system or use the identifier information received previously .

If receiving system does not support sensitive information protection sending system may still be implemented as indicated in block to allow the sharer or sender e.g. Alice to replace sensitive information as described in below to allow automatic replacement of sensitive information as described above or to perform other operations with the sensitive information not shown or not to replace the sensitive information. Operations described in block may be implemented after block or in conjunction with the operations of block . At block the document is shared with Bob or email is sent to Bob who is associated with receiving system .

If receiving system supports sensitive information protection determined at block then at block sending system sends the sensitive information to vault . For example the sensitive information may include a credit card number 4012 8888 8888 8888 which is sent to vault . The sensitive information is encoded as e.g. represented by a tag or reference that uniquely identifies the sensitive information. Vault then sends one or more tags or references e.g. reference tags associated with sensitive information to sending system . For example vault may return a reference tag Info ID 72384019 or tag id 3F5904E0 EF89 51D3 2A0C 4303E82C3301. A reference tag is not required to be human readable but may be . A reference tag can be used to access identify or retrieve the associated sensitive information e.g. converting the reference tag to sensitive information associated with it .

In some implementations sending system authenticates with vault to send sensitive information and or receive the associated reference tags. In other implementations sending system may receive the sender s e.g. Alice s credentials in an encrypted form and pass those encrypted credentials to vault for authenticating Alice. Alice s credentials are encrypted to prevent sending system or any administrators of sending system from seeing acquiring or using Alice s credentials. Vault is described further in .

At block sending system replaces the sensitive information with the reference tags provided by vault . For example sending system replaces the credit card number 4012 8888 8888 8888 with reference tag Info ID 72384019 provided by vault .

In some implementations sensitive information may be replaced with placeholder information i.e. that serves as placeholder for the sensitive information . A placeholder or placeholder information may be defined by Alice or defined automatically by sending system without any user intervention or assistance e.g. defined or created by non user . In some implementations sending system may provide a number of predefined placeholders for Alice to choose to replace a piece of sensitive information.

A placeholder may be a human readable substitute for sensitive information. Human readable means any one or more characters that are displayable showable or printable i.e. not hidden characters such as characters representing the outputs of the carriage return key tab key escape key etc. on the keyboard . A placeholder does not need to uniquely identify any sensitive information. A placeholder cannot be converted to sensitive information i.e. cannot be used to access identify or retrieve any sensitive information.

For example sending system replaces the credit card number 4012 8888 8888 8888 with a placeholder defined by Alice defined by sending system or selected by Alice from a list of available placeholders for a given type of information. Examples of placeholders include but are not limited to CREDIT CARD NUMBER XXXX XXXX XXXX XXXX a blank string a string of characters that includes invisible characters e.g. characters not displayable and or not printable etc. At block the document email or digital content void of the sensitive information is transmitted or sent to receiving system along with the reference tag TAG ID 72384019. 

In some implementations the UI in may allow Alice to identify the sensitive information and or replace the identified sensitive information with other information e.g. a reference tag or placeholder . For example after Alice selects a piece of information e.g. the credit card number with a mouse pointer as shown Alice may be able to activate a menu or widget for defining how the identified information should be replaces. The menu or widget shown in may be activated by for example right clicking on the selected information or ctrl clicking i.e. clicking the mouse while pressing down a CTRL key or another key on the selected information.

Alice may select the A Placeholder for replacing the credit card number with a system defined placeholder Blank format for replacing the credit card number with a blank placeholder A Link for replacing the credit card number with a link e.g. Uniform Resource Locator URL such as a link to vault for accessing the credit card number Other for replacing the credit card number with another placeholder based on implementation and User Defined for replacing the credit card number with a placeholder entered or defined by Alice. In some implementations a placeholder is delimited e.g. marked at the beginning and end with marks characters or symbols which may be visible or hidden to allow receiving system to identify the placeholders and replace them with the original sensitive information. Receiving system is described in below.

If Alice has activated or defined any limits e.g. access limit period sending system sends information regarding the limits to vault . An identifier for the recipient being authorized e.g. Bob can be sent with the time limit. If it just sends the time limit e.g. a value that represents 3 months without sending any identifier the time limit would apply to everybody. In some implementation sending system may include the user who is affected by a limit in a human readable form such as the time limit for Jim James is 3 months . Vault then parses Jim James as a user and applies the time limits to Jim James. Vault uses the information to enforce the limits. For example sending system sends to vault a time limit of three months in association with the sensitive information e.g. the credit card number 5432 1234 5678 9109 . After sending system has finished interacting with vault sending system is ready to send the email to receiving system .

Referring back to when a request to read or display the email is received at block the email is retrieved from the data store and at block reference tags are retrieved detected or scanned to determine if receiving system needs to retrieve any sensitive information from a vault e.g. vault . In some implementations the operations at block include printing an email. In other implementations printing emails are allowed at block described below.

At block the reference tags e.g. along with any received reference tags such as 3F5904E0 EF89 51D3 2A0C 4303E82C3301 are sent to vault . Vault retrieves the sensitive information based on the reference tags and returns the sensitive information to receiving system . The correct vault to interact with may be predetermined based on a communication. In some implementations sending system may indicate to receiving system either with the transmission of Alice s email or separately which vault the sensitive information may be retrieved from. An implementation may specify the location e.g. by URL identifier etc. of the appropriate vault in for example the tag for the sensitive data such as . Sending system may also indicate how to access the sensitive information e.g. the protocol to use to retrieve sensitive information .

In some implementations accesses to sensitive information in a vault e.g. vault may be controlled by access control lists ACL . An ACL may be derived from the communication i.e. the email from Alice to Bob. For example the ACL may be created using the email s information on the From To CC and BCC lines. If a communication is a document a social network post and the like the ACL may be created using information of the sharer and the people or users the document is shared with. If a communication is a conference or any interactive communications e.g. a voice conference or a video conference the ACL may be created using information of the originator and participants. The sender of an email sharer of a post originator of a conference etc. may also explicitly indicate using a user interface not shown who or which users may have access and what types of access to certain communications. When receiving system e.g. a mail server document server conference server etc. requests the sensitive information receiving system provides the information of the sender and receivers of a communication or participants of a post conference etc. to vault . The information is used to determine whether access to sensitive information is granted.

If any access limits are implemented and or requested the limits are also checked by receiving system and or vault . For example Alice places a time limit of three months for Bob to access the credit card number in an email. Bob s access is verified at the time of extraction of the credit card number and if verification passes the credit card number is received from 120. If another recipient Charlie who is not authorized to view the credit card number has access to the correspondence e.g. the email was forwarded to Charlie vault will not provide the sensitive data based on the ACL i.e. the ACL does not indicate that Charlie can access the credit card number . In some implementations if Charlie is not authorized the vault may return a placeholder or other representation. The tag may be replaced with a placeholder or other representation by the receiving system upon receiving a not authorized status code or message from the vault.

At block receiving system replaces the placeholder for the sensitive information e.g. credit card number for Bob. For example receiving system may scan for marks that indicate sensitive information has been replaced at sending system such as scanning for a delimiter that marks the beginning and end of each piece of sensitive information. When the communication or digital content e.g. Alice s email is rendered for display or printing receiving system replaces XXXX XXXX XXXX XXXX with 5432 1234 5678 9109 in Alice s email to Bob. shows an example rendered copy of an example communication e.g. Alice s email .

Referring back to if an unauthorized user e.g. Charlie attempts to view the email vault based on a reference tag e.g. 3F5904E0 EF89 51D3 2A0C 4303E82C3301 and or the accessing user e.g. Charlie will not return any sensitive information and receiving system does not replace the reference tag with the sensitive information e.g. does not show the sensitive information in place of the placeholder XXXX XXXX XXXX XXXX . The receiving system may depending on implementations replace the reference tag with a placeholder or some other indication to show that viewing or accessing the sensitive information is not authorized. In some implementations receiving system may replace the placeholder XXXX XXXX XXXX XXXX with a warning message such as Unauthorized to view when Charlie attempts to accesses the email and may not permit access to the email.

The decoding of a reference tag to sensitive information is transparent to the recipient e.g. Bob . No intervention is needed from Bob to initiate processing the received email to view the sensitive information. In some implementations Bob may be given the choice e.g. using a setting to replace the placeholder or a reference tag automatically or replace only when Bob clicks on a widget. For example Bob may be viewing Alice s email using a device e.g. computer in a public library.

In some implementations receiving system may lock the sensitive information to prevent copying or capturing from a display. For example sensitive information can be rendered as images or interactive UI elements instead of text to prevent intentional or accidental copying. Receiving system may also be implemented that the sensitive information is not replaced or rendered for printing e.g. only print the placeholder or another message such as Redacted .

At block receiving system receives a request to reply or forward an Alice s email or a request to share Alice s communication if Alice s communication is not an email. The request may be initiated by Alice. At block the stored version or copy see is forwarded included in a reply or response or shared with a third recipient. If the receiving system of the third recipient implements sensitive data protection and the third recipient is authorized to access the sensitive information the receiving system will decode the sensitive information as describe above by receiving system .

If the receiving system of the third recipient does not implement sensitive data protection reference tags used in a communication may be replaced with placeholders e.g. XXXX XXXX XXXX XXXX for a credit card . However the reference tags may be preserved in case the communication is forwarded to other users who are authorized to view or access the sensitive information.

A sending system sends the unique identifiers to a receiving system along with a communication with sensitive information of the communication stripped out. The transmission or the communication may be sent encrypted or not encrypted. Receiving system then extracts the unique identifiers and sends to the vault where the associated sensitive information is deposited by sending system . The vault then provides the sensitive information correspond to the unique identifiers to receiving system .

Unique identifiers may be locally unique across a sending system a receiving system or a vault or universally unique across sending systems receiving systems and vaults that support sensitive data protection. For example a vault may be implemented to assign Globally Unique Identifiers GUIDs or Universally Unique Identifiers UUIDs or the like.

In some implementations a vault may allow users to manage their sensitive information using a user interface UI . A user may be identified or authenticated in any trustworthy manner. For example Alice may register with vault . Vault provides sign in credentials to Alice which can be used by Alice to sign in to vault . After signing in vault may provide UI for Alice to manage her sensitive information deposited with vault . Alice s sensitive information refers to any sensitive information deposited to vault by any sending system with Alice being the originator initiator sharer or sender e.g. Alice is the original sender of an email . In some implementations Alice may provide the sensitive information e.g. 5432 1234 5678 9109 the corresponding reference tag e.g. 3F5904E0 EF89 51D3 2A0C 4303E82C3301 or both to access or manage the sensitive information.

In some implementations the original sender sharer initiator or originator e.g. Alice can delegate authority to another user to modify or manage sharing settings for accessing sensitive data. For example Alice can allow her assistant or a trusted recipient to manage who can see certain sensitive data e.g. the credit card number . The UI or another UI not shown may include a Delegate Access Manager option for Alice to specify that for example user Bob can Grant Revoke or Manage access to All sensitive data of Selected sensitive data etc. For example Alice can delegate to Bob as an access manager who can Grant access to Selected sensitive data. Alice can identify the selected sensitive data by identifying the data e.g. 5432 1234 5678 9109 or the reference tags associated with the data e.g. 3F5904E0 EF89 51D3 2A0C 4303E82C3301 

Using UI or another interface Alice can manually configure potential recipients or users that may access e.g. view the decoded sensitive data e.g. 5432 1234 5678 9109 using for example the Grant Access option of the UI. In some implementations Alice can specify the expiration time of the authorization for the recipient to view sensitive data using for example the Limit Access option of the UI. Alice can specify a time period as described above. The Revoke Access option allows Alice to revoke access i.e. no longer allowed to see the decoded sensitive data.

For example Alice s email to Bob is forwarded to Charlie who is not an original recipient of that email. Vault may be implemented to automatically grant access e.g. using ACL to original recipients of an email. Charlie or Bob can request Alice to grant Charlie access to see the sensitive data. Once Alice grants Charlie access using for example UI Charlie s receiving system will be able to retrieve the sensitive information and render Charlie s email with the sensitive information in an accessible form. However another user cannot retrieve the sensitive information unless Alice grants access.

Alice can revoke access to sensitive data using UI . For example after granting access to Charlie Alice realizes that Bob does not need access to the credit card number i.e. the sensitive data Bob was granted access based on the original email sent to Bob . Alice can select the Revoke Access option of UI and identify whose access is revoked and or what sensitive data the access to which is revoked.

Alice can revoke access at any time such as immediately after sending the example email to Bob e.g. Alice changes her mind sends the email unintentionally realizes that she did not really want to share that information etc. . Alice may use UI or another UI not shown to modify for example the access control list to revoke Bob s access to the sensitive information. As soon as Bob s access is revoked Bob loses the ability to access e.g. see the sensitive information.

In some implementations when Alice revokes access to sensitive information vault may notify Alice e.g. by email text messages or another manner specified by Alice using configuration settings whether Bob had already accessed the sensitive information before his access was revoked.

At sending system replaces the sensitive information in the email with some information that is not sensitive or cannot be used to access the sensitive information. For example the sensitive information may be stripped out and replaced with a placeholder or information that serves as a placeholder. In some implementations the sensitive information is simply stripped out or deleted without inserting any replacement information. At block sending system sends or transmits the communication e.g. the content to receiving system . The transmission includes the placeholder and the identifier but not the sensitive information. The receiving system then process the communication as described in .

In some examples process may be implemented with different fewer or more blocks. Process may be implemented as computer executable instructions which can be stored on a medium loaded onto one or more processors of one or more computing devices and executed as a computer implemented method.

An example of one or more devices may be computing device described below in . Devices may include but are not limited to a computer e.g. a laptop computing device a mobile device e.g. smartphone or tablet a television a device associated with a vehicle a server computer computing devices storage devices and .

In some implementations devices may be considered user devices e.g. devices used by users to access services and or issue requests such as on a social network . Devices may be devices associated with service providers e.g. used by service providers to provide services and or store data such as webpages text text portions images image portions audios audio segments videos video segments and or information thereabout .

For example a user e.g. Alice may access view and or share content or access emails using user device or . Bob and Charlie may access their emails e.g. view Alice s email using devices . Sending system vault and receiving system may be supported by devices and or other devices not shown .

Computing device can be communicatively coupled to input user interface and output device interface . Either one or both of input user interface and output device interface can be a wired or wireless interface and can be detachable. Input user interface may include any device component sensor or interface physical or virtual that can be used to provide input e.g. buttons touch screen interface keyboard a pointing cursor control microphone camera braille motion sensor optical reader and or the like . Output device interface may include a display television monitor printer speaker braille or the like. In some example implementations input user interface and output device interface can be embedded with or physically coupled to the computing device . In other example implementations other computing devices may function as or provide the functions of input user interface and output device interface for a computing device .

Examples of computing device may include but are not limited to highly mobile devices e.g. smartphones devices in vehicles and other machines devices carried by humans and animals and the like mobile devices e.g. tablets notebooks laptops personal computers portable televisions radios and the like and devices not designed for mobility e.g. desktop computers other computers information kiosks televisions with one or more processors embedded therein and or coupled thereto radios and the like .

Computing device can be communicatively coupled e.g. via I O interface to external storage and network for communicating with any number of networked components devices and systems including one or more computing devices of the same or different configuration. Computing device or any connected computing device can be functioning as providing services of or referred to as a server client thin server general machine special purpose machine or another label.

I O interface can include but is not limited to wired and or wireless interfaces using any communication or I O protocols or standards e.g. Ethernet 802.11x Universal System Bus WiMax modem a cellular network protocol and the like for communicating information to and or from at least all the connected components devices and network in computing environment . Network can be any network or combination of networks e.g. the Internet local area network wide area network a telephonic network a cellular network satellite network and the like .

Computing device can use and or communicate using computer usable or computer readable media including transitory media and non transitory media. Transitory media include transmission media e.g. metal cables fiber optics signals carrier waves and the like. Non transitory media include magnetic media e.g. disks and tapes optical media e.g. CD ROM digital video disks Blu ray disks solid state media e.g. RAM ROM flash memory solid state storage and other non volatile storage or memory.

Computing device can be used to implement techniques methods applications processes or computer executable instructions in some example computing environments. Computer executable instructions can be retrieved from transitory media and stored on and retrieved from non transitory media. The executable instructions can originate from one or more of any programming scripting and machine languages e.g. C C C Java Visual Basic Python Perl JavaScript and others .

Processor s can execute under any operating system OS not shown in a native or virtual environment. One or more applications can be deployed that include logic unit application programming interface API unit input unit output unit sensitive data detector vault interface content management and inter unit communication mechanism for the different units to communicate with each other with the OS and with other applications not shown . For example sensitive data detector vault interface and content management may implement one or more processes shown and described in . The described units and elements can be varied in design function configuration or implementation and are not limited to the descriptions provided.

In some example implementations when information or an execution instruction is received by API unit it may be communicated to one or more other units e.g. logic unit input unit output unit sensitive data detector vault interface and content management . For example after input unit has detected a user input to send an email API unit may call on sensitive data detector to detect or identify any sensitive information. Once identified vault interface is called to interact with a vault to deposit the sensitive information and retrieve one or more identifiers. Content management is then called by API unit to replace the sensitive information with non sensitive information e.g. placeholders . Output unit is then called to output the communication to receiving system via i o interface .

In some instances logic unit may be configured to control the information flow among the units and direct the services provided by API unit input unit output unit sensitive data detector vault interface and content management in some example implementations described above. For example the flow of one or more processes or implementations may be controlled by logic unit alone or in conjunction with API unit .

In situations in which the systems discussed here collect personal information about users or may make use of personal information the users may be provided with an opportunity to control whether programs or features collect user information e.g. information about a user s social network social actions or activities profession a user s preferences or a user s current location or to control whether and or how to receive content from the content server that may be more relevant to the user. In addition certain data may be treated in one or more ways before it is stored or used so that personally identifiable information is removed. For example a user s identity may be treated so that no personally identifiable information can be determined for the user or a user s geographic location may be generalized where location information is obtained such as to a city ZIP code or state level so that a particular location of a user cannot be determined. Thus the user may have control over how information is collected about the user and used by a content server.

Although a few example implementations have been shown and described these example implementations are provided to convey the subject matter described herein to people who are familiar with this field. It should be understood that the subject matter described herein may be implemented in various forms without being limited to the described example implementations. The subject matter described herein can be practiced without those specifically defined or described matters or with other or different elements or matters not described. It will be appreciated by those familiar with this field that changes may be made in these example implementations without departing from the subject matter described herein as defined in the appended claims and their equivalents.

