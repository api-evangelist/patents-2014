---

title: UEFI and operating system driver methods for updating MAC address in LAN-based NIC
abstract: An information handling system (IHS) unambiguously addresses networked devices connected by a local area network (LAN) based network interface controller (NIC) by detecting a device descriptor of LAN-based NIC, determining that the device descriptor indicates a capability for assigning a reserve media access control (MAC) address to the networked device, writing the reserve MAC address in the LAN-based NIC of the networked device, and associating the reserve MAC address with the networked device in an inventory data structure for the IHS.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09537822&OS=09537822&RS=09537822
owner: Dell Products, L.P.
number: 09537822
owner_city: Round Rock
owner_country: US
publication_date: 20140730
---
This disclosure relates generally to information handling systems and more particularly to managing media access control MAC addresses for networked devices.

As the value and use of information continue to increase individuals and businesses seek additional ways to process and store information. One option available to users is information handling systems. An information handling system IHS generally processes compiles stores and or communicates information or data for business personal or other purposes thereby allowing users to take advantage of the value of the information. Because technology and information handling needs and requirements vary between different users or applications information handling systems may also vary regarding what information is handled how the information is handled how much information is processed stored or communicated and how quickly and efficiently the information may be processed stored or communicated. The variations in information handling systems allow for information handling systems to be general or configured for a specific user or specific use such as financial transaction processing airline reservations enterprise data storage or global communications. In addition information handling systems may include a variety of hardware and software components that may be configured to process store and communicate information and may include one or more computer systems data storage systems and networking systems.

In systems management the media access control MAC address of a networked device is often used to uniquely identify that system for targeted deployment of an operating system OS or for identification after OS deployment. An example is a Configuration Manager ConfigMgr for short . When the networked device is first entered into the ConfigMgr database the ConfigMgr database captures the MAC address which is then used to identify the networked device. Networked devices that include a network interface controller NIC generally have a MAC address that is hard coded. NICs are also known as network adapters local area network LAN adapters and similar terms. Ethernet standard is one ubiquitous used in NICs. Ethernet based NICs are often included as an expansion card or built into the motherboard of the networked device.

In many instances however networked devices are being developed with no onboard NIC. For example a number of networked devices such as laptops can be connected to an enterprise system via a docking station. For each of the laptops an original eqiupment manufacturer OEM MAC address provisioned in a universal serial bus USB NIC is used many times used over and over when first registering these laptops into the ConfigMgr database. This results in many networked devices getting registered with the same MAC address. In another scenario a single networked device such as a laptop is used at different physical locations such as at one or more work locations and at the user s home. A different docking station or network dongle at each location can have a different physical NIC that is then used for the same networked device. In both instances the overall ecosystem is harder to manage.

Disclosed is a method of unambiguously addressing networked devices in an information handling system IHS . In one embodiment the method includes detecting a device descriptor of a local area network LAN based network interface controller NIC connected to a networked device. The method further includes determining that the device descriptor indicates a capability for assigning a reserve media access control MAC address to the networked device. The method further includes provisioning the reserve MAC address in the LAN based NIC of the networked device. The method includes associating the reserve MAC address with the networked device in an inventory data structure for the IHS for unambiguously addressing the networked device.

According to at least one aspect of the present disclosure an IHS is provided to unambiguously address networked devices. In one embodiment the IHS includes a LAN based NIC and a networked device connected to the LAN based NIC. The IHS includes a system operably in communication with the LAN based NIC to detect a device descriptor of the LAN based NIC. The system is further operable to determine that the device descriptor indicates a capability for assigning a reserve MAC address. The system is further operable to provision the LAN based NIC with the reserve MAC address. The system is further operable to associate the reserve MAC address with the networked device in an inventory data structure for the IHS for unambiguously addressing the networked device.

According to at least one aspect of the present disclosure a system unambiguously addresses networked devices. In one embodiment the system includes a processor and an operating system driver executed by the processor and in communication with a LAN based NIC that is connected to a networked device. The operating system driver is operable to detect a device descriptor of the LAN based NIC. The operating system driver is further operable to determine that the device descriptor indicates a capability for assigning a reserve MAC address to the networked device. The operating system driver is operable to provision the LAN based NIC with the reserve MAC address. The operating system driver is operable to associate the reserve MAC address with the networked device in an inventory data structure.

The above presents a general summary of several aspects of the disclosure in order to provide a basic understanding of at least some aspects of the disclosure. The above summary contains simplifications generalizations and omissions of detail and is not intended as a comprehensive description of the claimed subject matter but rather is intended to provide a brief overview of some of the functionality associated therewith. The summary is not intended to delineate the scope of the claims and the summary merely presents some concepts of the disclosure in a general form as a prelude to the more detailed description that follows. Other systems methods functionality features and advantages of the claimed subject matter will be or will become apparent to one with skill in the art upon examination of the following figures and detailed written description.

An information handling system IHS unambiguously addresses networked devices connected by a local area network LAN based network interface controller NIC by detecting a device descriptor of LAN based NIC determining that the device descriptor indicates a capability for assigning a reserve media access control MAC address to the networked device provisioning the reserve MAC address in the LAN based NIC of the networked device and associating the reserve MAC address with the networked device in an inventory data structure for the IHS.

The present disclosure further provides for an IHS and method for programming a reserved MAC address stored in the Unified Extensible Firmware Interface UEFI Basic Input Output System BIOS . Proprietary communication protocols are provided for both an operating system OS driver and UEFI Preboot eXecution Environment PXE driver to uniquely identify networked devices that otherwise would be identified by duplicative MAC addresses. Rather than a manual MAC address replacement the present disclosure provides for automatic changing of a MAC address without necessarily having a physical network interface controller NIC to go along with this MAC address.

The reserved MAC Address as used herein refers to a MAC address that can be used for a local area network LAN based NIC such as connected via a universal serial bus USB . The UEFI Basic Input Output System BIOS can add a new SMBIOS interface that the OEM can utilize via custom tools to program the reserved MAC Address in the write once non volatile storage of the BIOS. The System Management BIOS SMBIOS specification defines data structures and access methods that can be used to read information stored in the BIOS of a computer as defined by the Distributed Management Task Force DMTF . This reserved MAC address can be specific to a given system. This level of security at the enterprise system level can prevent malicious entities from modifying the reserved MAC address.

In the following detailed description of exemplary embodiments of the disclosure specific exemplary embodiments in which the disclosure may be practiced are described in sufficient detail to enable those skilled in the art to practice the disclosed embodiments. For example specific details such as specific method orders structures elements and connections have been presented herein. However it is to be understood that the specific details presented need not be utilized to practice embodiments of the present disclosure. It is also to be understood that other embodiments may be utilized and that logical architectural programmatic mechanical electrical and other changes may be made without departing from general scope of the disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present disclosure is defined by the appended claims and equivalents thereof.

It is understood that the use of specific component device and or parameter names such as those of the executing utility logic described herein are for example only and not meant to imply any limitations on the disclosure. The disclosure may thus be implemented with different nomenclature terminology utilized to describe the components devices parameters herein without limitation. Each term utilized herein is to be given its broadest interpretation given the context in which that term is utilized.

References within the specification to one embodiment an embodiment embodiments or one or more embodiments are intended to indicate that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present disclosure. The appearance of such phrases in various places within the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Further various features are described which may be exhibited by some embodiments and not by others. Similarly various requirements are described which may be requirements for some embodiments but not other embodiments.

Turning now to the drawings the detailed description set forth below in connection with the appended drawings is intended as a description of various configurations and is not intended to represent the only configurations in which the concepts described herein may be practiced. The detailed description includes specific details for the purpose of providing a thorough understanding of various concepts with like numerals denoting like components throughout the several views. However it will be apparent to those skilled in the art that these concepts may be practiced without these specific details. In some instances well known structures and components are shown in block diagram form in order to avoid obscuring such concepts.

Referring specifically to example IHS includes one or more processor s coupled to system memory via system interconnect . System interconnect can be interchangeably referred to as a system bus in one or more embodiments. Also coupled to system interconnect is a local storage controller coupled to local storage within which can be stored software and one or more sets of data. For example local storage can contain an inventory data structure that tracks MAC addresses of networked devices. As shown system memory can include therein a plurality of modules including firmware F W UEFI BIOS platform operating system O S and application s . The various software and or firmware modules have varying functionality when their corresponding program code is executed by processor s or other processing devices within IHS .

The Unified Extensible Firmware Interface UEFI is a specification that defines a software interface between an operating system and platform firmware. UEFI is meant to replace the Basic Input Output System BIOS firmware interface present in a majority of conventional PC compatible personal computers. In practice most UEFI images provide legacy support for BIOS services. UEFI can support remote diagnostics and repair of computers even without another operating system.

IHS further includes one or more input output I O controllers which support connection to and processing of signals from one or more connected input device s such as a keyboard mouse touch screen or microphone. I O controllers also support connection to and forwarding of output signals to one or more connected output devices such as a monitor or display device or audio speaker s . Additionally in one or more embodiments one or more device interfaces such as an optical reader a universal serial bus USB a card reader Personal Computer Memory Card International Association PCMCIA port and or a high definition multimedia interface HDMI can be associated with IHS . Device interface s can be utilized to enable data to be read from or stored to corresponding removal storage device s RSDs such as a compact disk CD digital video disk DVD flash drive or flash memory card. In one or more embodiments device interface s can also provide an integration point for connecting other device s to IHS . In such implementation device interfaces can further include General Purpose I O interfaces such as IC SMBus and peripheral component interconnect PCI buses.

IHS includes a network interface device NID which in one or more embodiments is a LAN based NIC . LAN based NIC enables IHS to communicate and or interface with other devices services and components that are located external to IHS . These devices services and components can interface with IHS via an external network such as example network using one or more communication protocols. Network can be a local area network wide area network personal area network and the like and the connection to and or between network and IHS can be wired or wireless or a combination thereof. For purposes of discussion network is indicated as a single collective component for simplicity. However it is appreciated that network can comprise one or more direct connections to other devices as well as a more complex set of interconnections as can exist within a wide area network such as the Internet.

In one or more embodiments IHS includes features for automatic changing of a MAC address without necessarily having a physical NIC to go along with this MAC address. With particular reference to the LAN based NIC can include LAN based NIC firmware having nonvolatile NV stored OEM MAC address a device descriptor and a reserved MAC address that is reprogrammable. The UEFI BIOS platform includes a UEFI PXE driver and a UEFI reserved MAC protocol driver that stores the reserved MAC address in system memory . OS includes an OS to BIOS interface a USB NIC driver and UEFI device detection driver .

In one or more embodiments the LAN based NIC can utilize Universal Serial Bus USB technology. In one embodiment the LAN based NIC complies with another LAN based protocol such as FireWire IEEE 1394 Ethernet IEEE 802.3 and Token Ring IEEE 802.5 etc.

The networked devices may have a LAN on Mother Board LOM with a MAC LOM MAC address. Either this LOM MAC address or a different virtual MAC address that may be created is stored as a reserved MAC address for use with docking station or USB NIC . When the networked device is connected to docking station that contains a physical NIC not shown or to a USB NIC with the capability for a reserved MAC address the physical NIC or the USB NIC automatically communicates with the networked device and spoofs the OEM MAC address provided by the networked device instead of using its own OEM MAC address. In this manner the same physical NIC or USB NIC can be used for multiple networked devices to register the individual devices in the IHS inventory list database . The reserve MAC addresses rather than the MAC address of the physical NIC or USB NIC can be used in that registration.

In one embodiment the networked device can be responsible for maintaining and providing its own reserved MAC address internally. Devices of the IHS such as a configuration server not shown can be responsible for querying each networked device to retrieve the current device MAC address which happens to be the reserved MAC after the networked device updates the MAC address as it connects to a docking station . The configuration server can retain the results of the MAC query as the reserved MAC address in the server s inventory list as a way to reference and identify that networked device uniquely.

In one usage case the system tracks software licensing as part of cloud licensing. For example a user may subscribe to license software or media content for a predetermined number of MAC addresses such as three or five. Absent the above described functionality provided as one aspect of the present disclosure a single networked device used at different USB NICs can appear to the system to be more than one networked device unnecessarily exhausting at least a portion of the license grant.

An exemplary sequence of events for this path can be as follows 1 OS detects USB NIC with a custom device descriptor which requests that the custom USB NIC driver begin its initialization path block . 2 The USB NIC driver attempts to communicate over the secure OS to BIOS interface by sending a pre defined discovery query command to the BIOS block . 3 If unsuccessful the USB NIC driver will abort the MAC address update and continue to load with the MAC address that was programmed into the device by the manufacturer block . 4 If successful the USB NIC driver requests that the UEFI BIOS platform send the reserved MAC address block . 5 Once the USB NIC driver receives the reserved MAC Address the USB NIC driver archives the OEM MAC address in the NIC internal non volatile storage not shown and then reprograms the USB NIC block . 6 The USB NIC driver continues to load as usual whereby operation of the USB NIC behaves as normal with the only exception being the updated reserved MAC Address block . The reserved MAC address may be cleared from the USB NIC when the networked device is detached from the USB NIC to prevent duplicate MAC addresses on the IHS . In one embodiment the host system is not required to clear the reserved MAC address in the USB NIC . The USB NIC firmware or hardware of the USB NIC can be required to re initialize to the OEM MAC address any time power is lost to prevent a reserved MAC address from becoming sticky to the networked device . For example the networked device may leave the IHS for another IHS not shown .

The Preboot eXecution Environment PXE also known as Pre Execution Environment sometimes pronounced pixie is an environment to boot computers using a network interface independently of data storage devices or installed operating systems. PXE makes use of several network protocols like Internet Protocol IPv4 User Datagram Protocol UDP Dynamic Host Configuration Protocol DHCP and Trivial File Transfer Protocol TFTP and of concepts like globally unique identifier GUID universally unique identifier UUID and Universal Network Device Interface and extends the firmware of the PXE client the computer to be bootstrapped via PXE with a set of predefined application programming interfaces APIs . The firmware on the client tries to locate a PXE redirection service on the network Proxy DHCP in order to receive information about available PXE boot servers. After parsing the answer the firmware will ask an appropriate boot server for the file path of a network bootstrap program NBP download the NBP into the computer s random access memory RAM using TFTP possibly verify the NBP and finally execute the NBP.

With further reference to an exemplary sequence of events for this path is as follows 1 USB NIC with a specific device descriptor that is indicative of a reserve MAC address is detected by the UEFI BIOS platform block 2 The UEFI reserved MAC protocol driver that allows for the communication of the reserved MAC address is exposed block 3 The UEFI PXE driver that is specific to this device is loaded and the UEFI BIOS platform communicates the reserved MAC address to the UEFI PXE driver block 4 The UEFI PXE driver archives the original MAC address in internal non volatile storage of the USB NIC and then provisions the USB NIC with the reserved MAC address block 5 Operation of the USB NIC behaves as normal with the only exception being the updated reserve MAC address that is presented to network and local OS for bare metal installation block 6 The UEFI PXE driver continues to load as usual block .

With reference to a method is provided for unambiguously addressing networked devices in an IHS. In one embodiment in the method includes a system detecting a device descriptor of a LAN based NIC connected to a networked device that does not physically contain a unique MAC address block . The system determines that the device descriptor indicates a capability for assigning a reserve MAC address to the networked device block . The system provisions the reserve MAC address in the LAN based NIC of the networked device block . The system can associate the reserve MAC address with the networked device in an inventory data structure for the IHS in order to unambiguously address the networked device block .

In one embodiment the LAN based NIC determines whether the networked device has undergone a power cycle block . In response to determining in block that the network system has not been undergone a power cycle the LAN based NIC maintains the reserve MAC address block . Processing returns to block . In response to determining or detecting in block that the networked device has been disconnected from the LAN based NIC the LAN based NIC re initializes an OEM MAC address for the LAN based NIC block .

Without a reserve MAC address ambiguous addressing can arise from more than one networked device connecting to the IHS at various times via the same LAN based NIC. Thus in one embodiment the method continued in further includes the system detecting a second device descriptor of a second networked device that is connected to the LAN based NIC block . The system provisions a second different reserve MAC address in the LAN based NIC block .

Without a reserve MAC address ambiguous addressing can also arise from the same networked device connecting to the IHS at various times via different LAN based NICs. Thus in one embodiment the method further includes the system detecting the device descriptor of the networked device that is connected to a second LAN based NIC block . The system provisions the second LAN based NIC with the previously assigned reserve MAC address of the networked device block .

In one embodiment the method further includes the system detecting the presence of the networked device by an operating system driver during one of a boot of the IHS and a hot plugging of the network system. The method includes the operating system driver provisioning the reserve MAC address in the LAN based NIC. In an exemplary embodiment the method includes sending a command by the operating system driver over an operating system to BIOS interface to a UEFI BIOS. The method then includes receiving the reserve MAC address from the UEFI BIOS.

In one embodiment the method includes detecting the presence of the networked device by an operating system driver during of an operating system of the IHS. The method includes accessing a UEFI reserve MAC protocol to expose a UEFI PXE driver that is specific to the device descriptor. The method further includes loading the UEFI PXE driver into a UEFI platform. The method includes provisioning the LAN based NIC with the reserve MAC address using the UEFI PXE driver.

In the above described flow charts of one or more of the methods may be embodied in a computer readable device containing computer readable code such that a series of functional processes are performed when the computer readable code is executed on a computing device. In some implementations certain steps of the methods are combined performed simultaneously or in a different order or perhaps omitted without deviating from the scope of the disclosure. Thus while the method blocks are described and illustrated in a particular sequence use of a specific sequence of functional processes represented by the blocks is not meant to imply any limitations on the disclosure. Changes may be made with regards to the sequence of processes without departing from the scope of the present disclosure. Use of a particular sequence is therefore not to be taken in a limiting sense and the scope of the present disclosure is defined only by the appended claims.

One or more of the embodiments of the disclosure described can be implementable at least in part using a software controlled programmable processing device such as a microprocessor digital signal processor or other processing device data processing apparatus or system. Thus it is appreciated that a computer program for configuring a programmable device apparatus or system to implement the foregoing described methods is envisaged as an aspect of the present disclosure. The computer program may be embodied as source code or undergo compilation for implementation on a processing device apparatus or system. Suitably the computer program is stored on a carrier device in machine or device readable form for example in solid state memory magnetic memory such as disk or tape optically or magneto optically readable memory such as compact disk or digital versatile disk flash memory etc. The processing device apparatus or system utilizes the program or a part thereof to configure the processing device apparatus or system for operation.

While the disclosure has been described with reference to exemplary embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the disclosure. In addition many modifications may be made to adapt a particular system device or component thereof to the teachings of the disclosure without departing from the essential scope thereof. Therefore it is intended that the disclosure not be limited to the particular embodiments disclosed for carrying out this disclosure but that the disclosure will include all embodiments falling within the scope of the appended claims. Moreover the use of the terms first second etc. do not denote any order or importance but rather the terms first second etc. are used to distinguish one element from another.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the disclosure. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The description of the present disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope of the disclosure. The described embodiments were chosen and described in order to best explain the principles of the disclosure and the practical application and to enable others of ordinary skill in the art to understand the disclosure for various embodiments with various modifications as are suited to the particular use contemplated.

