---

title: Visualization of runtime resource policy attachments and applied policy details
abstract: A service policy visualization interface is provided that is capable of selection and filtering of policy resources associated with a service managed using service policies. In response to detecting a selection of a policy resource within the service policy visualization interface, the selected policy resource is introspected to identify service policies. The service policies are attached to the selected policy resource within a resource hierarchy associated with the selected policy resource. Based upon results of the introspection of the selected policy resource, an effective applied policy configuration associated with the selected policy resource is created, including correlated and combined effects of the attached service policies. The effective applied policy configuration associated with the selected policy resource, including the correlated and combined effects of the attached service policies, is displayed within the service policy visualization interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535564&OS=09535564&RS=09535564
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09535564
owner_city: Armonk
owner_country: US
publication_date: 20140325
---
This application is a continuation of and claims priority to and claims the benefit of U.S. patent application Ser. No. 13 765 178 titled VISUALIZATION OF RUNTIME RESOURCE POLICY ATTACHMENTS AND APPLIED POLICY DETAILS which was filed in the United States Patent and Trademark Office on Feb. 12 2013 and which is incorporated herein by reference in its entirety.

The present invention relates to service level agreement SLA policy enforcement. More particularly the present invention relates to visualization of runtime resource policy attachments and applied policy details.

Within an information technology IT environment service providers may specify business policies based upon the service provider resources being used by a particular consumer or transaction. The specified business policies may be applied these resources. For example service level agreements SLAs are contracts for services formed between consumers and service providers. A consumer may enter into a service level agreement with a service provider to send and or receive an agreed number of messages e.g. text messages per month for a contracted set fee. The SLA may further specify that if the consumer exceeds the agreed number of messages per month associated with the contracted set fee an additional per message fee will be charged for each additional message. As such the SLA represents such a business policy.

A method includes providing via a processor a service policy visualization interface capable of selection and filtering of policy resources associated with a service managed using service policies introspecting in response to detecting a selection of a policy resource within the service policy visualization interface the selected policy resource to identify service policies attached to the selected policy resource within a resource hierarchy associated with the selected policy resource creating based upon results of the introspection of the selected policy resource an effective applied policy configuration associated with the selected policy resource comprising correlated and combined effects of the attached service policies and displaying the effective applied policy configuration associated with the selected policy resource comprising the correlated and combined effects of the attached service policies within the service policy visualization interface.

A system includes a display and a processor programmed to provide a service policy visualization interface via the display capable of selection and filtering of policy resources associated with a service managed using service policies introspect in response to detecting a selection of a policy resource within the service policy visualization interface the selected policy resource to identify service policies attached to the selected policy resource within a resource hierarchy associated with the selected policy resource create based upon results of the introspection of the selected policy resource an effective applied policy configuration associated with the selected policy resource comprising correlated and combined effects of the attached service policies and display the effective applied policy configuration associated with the selected policy resource comprising the correlated and combined effects of the attached service policies within the service policy visualization interface.

A computer program product includes a computer readable storage medium having computer readable program code embodied therewith where the computer readable program code when executed on a computer causes the computer to provide a service policy visualization interface capable of selection and filtering of policy resources associated with a service managed using service policies introspect in response to detecting a selection of a policy resource within the service policy visualization interface the selected policy resource to identify service policies attached to the selected policy resource within a resource hierarchy associated with the selected policy resource create based upon results of the introspection of the selected policy resource an effective applied policy configuration associated with the selected policy resource comprising correlated and combined effects of the attached service policies and display the effective applied policy configuration associated with the selected policy resource comprising the correlated and combined effects of the attached service policies within the service policy visualization interface.

The examples set forth below represent the necessary information to enable those skilled in the art to practice the invention and illustrate the best mode of practicing the invention. Upon reading the following description in light of the accompanying drawing figures those skilled in the art will understand the concepts of the invention and will recognize applications of these concepts not particularly addressed herein. It should be understood that these concepts and applications fall within the scope of the disclosure and the accompanying claims.

The subject matter described herein provides visualization of runtime resource policy attachments and applied policy details. The visualization of runtime resource policy attachments and applied policy details described herein may be performed for example by device policy monitoring points PMPs or other devices as appropriate for a given implementation. The present technology provides three visualization steps that may be utilized to enhance policy evaluation and analysis. A first visualization step allows a policy administrator to identify a web service resource of interest. A second visualization step allows the policy administrator to identify a set of message content filters that describe a specific scenario associated with the identified web service resource of interest. A third visualization step allows the policy administrator to view the detail of conditions that are evaluated by policies for that identified set of message content filters and to view actions that are taken depending on outcomes of those conditions. As such the present technology may be utilized to identify within a visual environment runtime resource policy attachments and applied policy details across multiple hierarchical arrangements or other nested or abstracted arrangements.

As described in detail below the policy visualization technology described herein is concerned with three interrelated aspects of the policy and presents these interrelated aspects to the user e.g. policy administrator in three steps each of which also provides visualized output to assist the user with interpretation of policy applications within a runtime system. The first step identifies what policies are attached and inherited at each resource. The second step determines what effective policies are created from the various disparate policy attachment files and message content filters. The third step determines what runtime conditions if any are evaluated and what actions if any are performed for a particular set of content filters. It is the combination of these three aspects of the visualization that together allow the user to fully visualize the complete policy applied to messages for a given web service and to accurately understand and predict system behavior for any given set of resources messages and runtime conditions.

For purposes of the present description the term effective policy may be considered a consolidated compacted representation of policies applied from all layers of a policy hierarchy within the resource hierarchy. The effective policy identifies all conditions upon which actions may be taken upon messages by a given resource. An effective policy may be created for each resource based upon locally defined and inherited policies. As such the effective policy for a resource may be identified as described herein and utilized for analysis of messaging actions performed by resources during policy enforcement.

In order to completely visualize the policy behavior applied to a resource introspection of the respective policy attachments may be performed to identify the respective runtime resource policy attachments. Introspection may be utilized for example to determine what policy or policies are attached to each level in the hierarchy of resources to determine under what conditions the policy or policies are applied to a given message and to determine what runtime conditions are set configured within the policy and what conditional actions are configured to be performed in response to the message. Introspection provides a programmatic approach to determining a comprehensive set of associations between the respective runtime resource policy attachments and resources.

The present technology may be utilized to present a policy administrator with a view of the specific policies applied to a given resource or collection of resources in a scenario where many policies and objects may be defined. In addition policies may be attached such that they only apply to specific consumers of these resources or particular messages. Additionally a policy may be attached but may describe different actions to take depending on further conditions evaluated at runtime.

To provide one possible example use case the policy administrator may use the present technology to troubleshoot a problem by identifying a particular resource for which the attached behavior is not implemented as expected. The present technology may further allow the policy administrator to view what system behavior is defined for the particular resource and to view determine under what circumstances that behavior will change if the definition is changed. For example a policy administrator may see that the behavior defined for that resource is correct but that it is inheriting additional policy conditions from a resource higher in the nested hierarchy and may determine that the inherited additional policy conditions are impacting access to or other aspects of the resource. As another example the policy administrator may determine that the correct policies are being attached but that a syntactic or semantic error within one of the policy files is causing incorrect behavior which would allow the policy administrator to quickly repair the policy attachment file to alleviate the error.

For purposes of the examples described herein resources may be considered to be arranged in a hierarchical manner such that policies applied to a top level resource automatically apply to resources beneath that resource in the respective hierarchy. The present examples further represent an example web service hierarchy with a service port or binding operations and message parts resources within the web service hierarchy. The present description utilizes visualization of policy attachments and details for a web service for purposes of example to show example policies that may be applied to a given message sent to that web service to show what conditions may be evaluated and to show what actions may be taken depending upon the evaluation of the conditions. However while a web service is used for purposes of example herein it should be noted that the present subject matter may be implemented to process other systems and hierarchies. For example the present technology may be used for visualization of runtime resource policy attachments and applied policy details for a system oriented architecture SOA hierarchy such as a representational state transfer REST resource with a service a uniform resource locator URL and the associated GET POST and DELETE processing performed within such systems. As such the present technology may be applied to any such SOA resource hierarchy.

Policies may further be refined using message content filters such that they apply only to specific consumers of these web service resources. For example consumers in a gold service level group may be given access to particular resources and access to the respective resources may be blocked for other users. Additionally the policies themselves may define further conditions such that even when a policy or set of policies is applied to a particular consumer of a resource evaluation of run time conditions such as network traffic for example may further refine behavior.

In order to provide a foundation for the description of the visualization technology described below it should be understood that various separate elements come together to determine the system behavior that a policy creates. For example when a message comes in to a given resource the position of that resource in the hierarchy determines what policies are considered. Message processing may further depend upon message content filters defined in the policy and the details of the message itself and these aspects may further impact what policies are applied. Each policy may then specify a set of conditions and actions to take based on those conditions. As such the policy as well as the operating conditions of the appliance e.g. policy enforcement point PEP at runtime may further impact the actions that are taken with respect to the message. To further clarify the runtime operating conditions and to provide to the policy administrator a transparent view of the actions that are configured to be taken for a given message the present technology visually communicates three separate aspects to the policy administrator the resource hierarchy associated with the message the applicable message content filters and the applicable runtime conditions and actions to be taken based upon the message.

The present technology leverages automated policy transformation and runtime enforcement that allows policies within a policy domain e.g. service provider policy domain etc. to be associated with any runtime object e.g. objects representing specific consumers organizations service resources etc. that needs to be controlled or regulated by that policy. Those policies may be enforced against the runtime object s at policy enforcement points PEPs that operate to provide proxy service offerings including policy enforcement to manage the respective services. Examples of runtime objects against which policies may be enforced include transactions web requests database requests representational state transfer REST services and web applications. The control or regulation of the runtime object by policy may be further determined based upon the content of that object at runtime such as user credentials. Policies may be attached at an object level for an object thereby enhancing the specificity of policy enforcement based upon the granularity of the respective objects e.g. at the level of specific consumers organizations service resources etc. and based upon the content of those objects at runtime.

It should be noted that conception of the present subject matter resulted from recognition of certain limitations associated with evaluation of runtime policy attachments and applied policy details. For example it was observed that with respect to policy enforcement evaluation and analysis a combination of factors such as inheritance of policies multiple policies multiple types of policies message specific policies and policy actions based on run time conditions creates a complex set of behaviors associated with policy enforcement. Further it was determined that because of the complex interrelationships of the factors described above it is difficult for users to track or determine what actions will be taken if a given consumer tries to access a specific resource e.g. policies applied to nested resources . As a result it was determined that these factors lead to unexpected behavior or behavior that is difficult to predict within the system and that causes increased overhead for resultant analysis to identify a root cause of such behavior to alter such behavior or to correct anomalies resulting from such behavior. It was further observed that it is difficult to troubleshoot issues when the error may be due to inheritance message content filters incorrect syntax or semantics within one of many different policy attachment files. Accordingly it was determined that a solution that encompasses all of these separate aspects of a service policy and that brings these aspects together to provide a clearer more transparent model with which the user may interact would improve policy development deployment troubleshooting updates and other policy life cycle issues. It was further determined that a programmatic visualization approach may improve efficiency in managing these policy life cycle issues. As such in view of the observations and determinations described above the present subject matter improves policy administration and enforcement by providing technology for visualization of runtime resource policy attachments and applied policy details as described above and in more detail below.

Several additional definitions may be utilized within the following description and some are repeated and further defined below. The term service policy or policy as utilized herein represents any mediation enforcement provision routing provision security provision or any other custom policy provision that is written to a specification that a policy enforcement system may implement. As such a service policy may be implemented as a web service e.g. web services description language WSDL as a representational state transfer REST implementation or service as a web application e.g. plain old XML POX implementation as a database request or otherwise as appropriate for the given implementation.

Regarding service policies a service level agreement SLA is a service policy that represents an agreement e.g. a contract for services between a service provider and a consumer where a level of service is formally defined and agreed between the parties to the SLA. The SLA records a common understanding about services priorities responsibilities guarantees warranties and any other particulars of the agreement. Examples of SLAs include business services such as a web service a REST service and a web application. The SLA may specify for example the levels of availability serviceability performance operation or other attributes of the service to be provided by the service provider to the consumer. As a further example an SLA may represent a processing agreement such as a transaction rate a processor utilization level a disk utilization level and a memory utilization level for the business service.

A service level definition SLD represents a service policy that protects the service provider infrastructure access and utilization constraints such as for example from accesses by non contracting entities for which an SLA has not been established or to limit a maximum resource utilization to prevent service degradation e.g. maximum number of messages per minute . An SLD when attached to a policy subject is enforced by a policy enforcement point PEP . A policy subject represents an entity with which a policy e.g. an SLA or SLD may be associated such as for example with an endpoint of a transaction a message a resource an operation or other entity.

A policy administration point PAP represents a location e.g. repository registry etc. where policies such as SLAs and SLDs may be created stored accessed and modified. A WebSphere service registry and repository WSRR represents one possible example of a PAP. A policy enforcement point PEP represents an intermediary system that operates to enforce defined policies. The PEP provides proxy service offerings including policy enforcement. A policy framework represents the infrastructure used to convert supported policy vocabularies into processing actions and processing rules.

A policy may be specified as an SLA between a service provider and a consumer. Each consumer may have its own selected service options. As such for purposes of the present example it is assumed that two consumers have selected different service plans for a particular service. Within this example one consumer has selected a default service level defined within the service provider domain for this particular service offering at a level of one hundred 100 allowed requests per hour. Similarly another consumer has selected a higher tier service level identified within the present example as a gold service level group with a service offering of five hundred 500 allowed requests per hour. As such enforcement of this SLA by a PEP would involve identification of the respective consumers correlation of the respective consumers with their selected service plans levels and monitoring of request rates e.g. message rates transaction rates etc. for each consumer based upon their respective selected plans. If a threshold number of requests per hour associated with a selected plan were reached the PEP would then invoke processing to identify any additional service requests as overages relative to the plan or prevent the service requests as appropriate for a given implementation. Similarly if a consumer issues a request that is authorized based upon the selected service plan the PEP is responsible for ensuring that the request is satisfied for the consumer by the service provider. Again policies may be attached hierarchically within a policy enforcement domain such as an at operation level at a port level and at a service level.

The present technology enhances policy enforcement functionality by providing for visualization of runtime resource policy attachments and applied policy details. The visualization of runtime resource policy attachments and applied policy details may also enhance policy monitoring evaluation and modification. The policy enforcement rules and actions are dynamically implemented and enforced on a transactional basis during runtime as transactions associated with the defined policies occur e.g. as messages are received and as such monitoring and correlation may also be performed during runtime as transactions occur.

Example transformations include transformation of a defined service policy into one or more processing actions in a normalized and interchangeable format. The normalized and interchangeable format may include for example a language such as extensible markup language XML XML stylesheet language for transformations XSLT object oriented languages such as Java and C programming languages relational database management RDBM languages such as structured query language SQL and scripting languages implementations such as PHP Hypertext Preprocessor PHP and Perl.

It should be noted that the PEP processing technology described herein operates as a proxy for both the service providers and the consumers to enforce the various provisions of defined SLAs and SLDs. As such the PEP represents a proxy component entity for both the service provider s and for the consumer s . Within this proxy context for policy enforcement the PEP operates to protect the interests of the service providers to ensure that no unauthorized consumers access the respective services provided by the service providers and to ensure that consumers that are authorized do not exceed the defined SLDs associated with the services and service providers. Similarly the PEP operates to protect the interests of consumers and service providers to ensure that the SLA s for which the consumers and service providers have contracted are upheld enforced. To fulfill this dual proxy role the PEP operates as a proxy intermediary for both of the respective entities to analyze messages communicated between the respective entities and to enforce policy enforcement rules that are defined in association with the PEP based upon policies associated with the respective services and agreements.

A policy framework as described in more detail below consumes policies for enforcement by a PEP and evaluates policy enforcement activities configured based upon the particular resource and potentially contents of the resources . To enforce the respective policies the policy framework generates policy enforcement rules that include processing actions.

The technology for visualization of runtime resource policy attachments and applied policy details described herein may be performed in real time to allow prompt analysis of policies attached to resources and the hierarchical relationship of the attached policies. For purposes of the present description real time shall include any time frame of sufficiently short duration as to provide reasonable response time for information processing acceptable to a user of the subject matter described. Additionally the term real time shall include what is commonly termed near real time generally meaning any time frame of sufficiently short duration as to provide reasonable response time for on demand information processing acceptable to a user of the subject matter described e.g. within a portion of a second or within a few seconds . These terms while difficult to precisely define are well understood by those skilled in the art.

The service provider server 1 through the service provider server M represent service capable devices e.g. messaging devices for text messages etc. . The service provider server 1 through the service provider server M also represent administrative devices that may be utilized by service provider administrators for policy creation such as creation of SLDs and SLAs.

Policies implemented by service provider administrators via devices such as the service provider server 1 through the service provider server M may be stored within the policy registry for enforcement by PEPs such as the policy enforcement server 1 through the policy enforcement server T . The policy enforcement server  through the policy enforcement server T each implement a policy framework as described in more detail below for transformation and enforcement of defined service policies stored in the policy registry into policy enforcement rules that include processing rules and processing actions that are to be enforced during runtime against objects. The objects may be of varying granularity e.g. at the level of specific consumers organizations service resources etc. as described above based upon the particular scope and configuration of the respective policies to be enforced for the respective service providers and consumers.

A PEP may be implemented via each of the policy enforcement server 1 through the policy enforcement server T . The PEP has the role of enforcing policies defined outside or within the PEP. The PEPs operate as gateways that provide virtual services that proxy policy enforcement operations for the real backend services. The PEPs protect and optimize transactions flowing through the respective network s on behalf of the backend services. As such the policy enforcement server 1 through the policy enforcement server T each represent proxy gateways that provide proxy services for the service providers represented by the service provider server 1 through the service provider server M and for consumers represented by the computing device 1 through the computing device N .

It should be noted that there may be a many to one relationship of PEPs to service providers. Each PEP may create its own policy enforcement rules based upon policies to be enforced for a given service provider. By use of the present technology the policy enforcement rule creation from defined policies may be consistently repeated across the set of PEPs that are designated to enforce the respective policies.

A policy monitoring point PMP provides policy visualization capabilities for analysis of runtime resource policy attachments and applied policy details within the system . The PMP identifies in response to user selections of for example message content filters policy enforcement artifacts e.g. processing rules and processing actions that are applied to the respective messages resources within a hierarchical policy enforcement arrangement where policy attachments may be inherited from other layers within the policy hierarchy. The PMP may evaluate transaction details from one or more PEPs implemented via the policy enforcement server 1 through the policy enforcement server T . It should be noted that while the PMP is illustrated as a separate component for ease of description purposes it may be implemented via one of the policy enforcement server 1 through the policy enforcement server T or the service provider server 1 through the service provider server M without departure from the scope of the present technology.

As will be described in more detail below in association with through the PMP provides technology for automated visualization of runtime resource policy attachments and applied policy details. The automated visualization of runtime resource policy attachments and applied policy details is based upon runtime analysis of policy attachments and applied policy details e.g. policy enforcement rules and actions enforced during runtime to fulfill the respective SLDs and SLAs established for messaging management within the system . A variety of possibilities exist for implementation of the present subject matter and all such possibilities are considered within the scope of the present subject matter.

It should be noted that any of the respective computing devices described in association with may be portable computing devices either by a user s ability to move the respective computing devices to different locations or by the respective computing device s association with a portable platform such as a plane train automobile or other moving vehicle. It should also be noted that the respective computing devices may be any computing devices capable of processing information as described above and in more detail below. For example the respective computing devices may include devices such as a personal computer e.g. desktop laptop etc. or a handheld device e.g. cellular telephone personal digital assistant PDA email device music recording or playback device tablet computing device e book reading device etc. a service provider messaging server a web server application server or other data server device or any other device capable of processing information as described above and in more detail below.

The network and the network may include any form of interconnection suitable for the intended purpose including a private or public network such as an intranet or the Internet respectively direct inter module interconnection dial up wireless or any other interconnection mechanism capable of interconnecting the respective devices.

Further the core processing module may provide different and complementary processing for visualization of runtime resource policy attachments and applied policy details in association with each implementation. As such for any of the examples below it is understood that any aspect of functionality described with respect to any one device that is described in conjunction with another device e.g. sends sending etc. is to be understood to concurrently describe the functionality of the other respective device e.g. receives receiving etc. .

A central processing unit CPU provides computer instruction execution computation and other capabilities within the core processing module . A display provides visual information to a user of the core processing module and an input device provides input capabilities for the user.

The display may include any display device such as a cathode ray tube CRT liquid crystal display LCD light emitting diode LED electronic ink displays projection touchscreen or other display element or panel. The input device may include a computer keyboard a keypad a mouse a pen a joystick touchscreen or any other type of input device by which the user may interact with and respond to information on the display .

A communication module provides interconnection capabilities that allow the core processing module to communicate with other modules within the system . The communication module may include any electrical protocol and protocol conversion capabilities useable to provide interconnection capabilities appropriate for a given implementation.

A memory includes a policy processing storage area that provides memory space for analysis of registry policies e.g. SLAs and SLDs in association with the core processing module when implemented for example in association with one or more of the PMP . The memory also includes a policy enforcement processing rule and action storage area that provides storage space for created policy enforcement rules and associated runtime processing actions. As described above the created policy enforcement rules and associated runtime processing actions may be utilized for runtime enforcement of defined policies e.g. SLAs and SLDs in association with the core processing module when implemented for example in association with one or more of the policy enforcement server 1 through the policy enforcement server T .

It is understood that the memory may include any combination of volatile and non volatile memory suitable for the intended purpose distributed or localized as appropriate and may include other memory segments not illustrated within the present example for ease of illustration purposes. For example the memory may include a code storage area an operating system storage area a code execution area and a data area without departure from the scope of the present subject matter.

A policy framework module is also illustrated. The policy framework module provides processing capabilities for the core processing module as described above and in more detail below. The policy framework module implements the technology for visualization of runtime resource policy attachments and applied policy details of the core processing module .

The policy framework module includes a policy enforcement module that implements the policy enforcement such as via one of the policy enforcement server 1 through the policy enforcement server T . The policy framework module also includes a policy visualization module that implements the visualization of runtime resource policy attachments and applied policy details as described above and in more detail below.

It should also be noted that the policy framework module may form a portion of other circuitry described without departure from the scope of the present subject matter. Further the policy framework module may alternatively be implemented as an application stored within the memory . In such an implementation the policy framework module may include instructions executed by the CPU for performing the functionality described herein. The CPU may execute these instructions to provide the processing capabilities described above and in more detail below for the core processing module . The policy framework module may form a portion of an interrupt service routine ISR a portion of an operating system a portion of a browser application or a portion of a separate application without departure from the scope of the present subject matter.

The policy registry is also shown associated with the core processing module within to show that the policy registry may be coupled to the core processing module without requiring external connectivity such as via the network or the network .

The CPU the display the input device the communication module the memory the policy framework module and the policy registry are interconnected via an interconnection . The interconnection may include a system bus a network or any other interconnection capable of providing the respective components with suitable interconnection for the respective purpose.

Though the different modules illustrated within are illustrated as component level modules for ease of illustration and description purposes it should be noted that these modules may include any hardware programmed processor s and memory used to carry out the functions of the respective modules as described above and in more detail below. For example the modules may include additional controller circuitry in the form of application specific integrated circuits ASICs processors antennas and or discrete integrated circuits and components for performing communication and electrical control activities associated with the respective modules. Additionally the modules may include interrupt level stack level and application level modules as appropriate. Furthermore the modules may include any memory components used for storage execution and data processing for performing processing activities associated with the respective modules. The modules may also form a portion of other circuitry described or may be combined without departure from the scope of the present subject matter.

Additionally while the core processing module is illustrated with and has certain components described other modules and components may be associated with the core processing module without departure from the scope of the present subject matter. Additionally it should be noted that while the core processing module is described as a single device for ease of illustration purposes the components within the core processing module may be co located or distributed and interconnected via a network without departure from the scope of the present subject matter. For a distributed arrangement the display and the input device may be located at a point of sale device kiosk or other location while the CPU and memory may be located at a local or remote server. Many other possible arrangements for components of the core processing module are possible and all are considered within the scope of the present subject matter. It should also be understood that though the policy registry is illustrated as a separate component for purposes of example the information stored within the policy registry may also alternatively be stored within the memory without departure from the scope of the present subject matter. Accordingly the core processing module may take many forms and may be associated with many platforms.

For purposes of the present example two computing devices specifically the computing device 1 and the computing device N are illustrated. The computing device 1 is assumed to be a gold service level member while the computing device N is assumed to be a silver service level member. It is additionally assumed that the gold service level member has contracted e.g. via SLA for at least one higher level service offering e.g. number of messages per unit time relative to the silver service level member. When the gold service level member utilizing the computing device 1 initiates a message it is received by the operation 1 service resource and is processed according to the configured service policy attachments e.g. processing rules and processing actions for the gold service level . Similarly when the silver service level member utilizing the computing device N initiates a message it is received by the operation 2 service resource and is processed according to the configured service policy attachments e.g. processing rules and processing actions for the silver service level . As such depending upon the service level and where the respective policies are attached transactions per minute message latency details about the specific customer e.g. credentials service level the time of day and other factors may be captured in the policy implementation.

As can be seen from a first row of the GUI is a Filter specification row where the user may specific a filter specification content filter name within the present example a matching criteria selection is within the present example and enter a text name for the filter specification within the text entry field . A drop down arrow allows the user to select additional alternative filter specification types such as for purposes of example Content Filter Value and Policy Name. A drop down arrow allows the user to specify additional alternative matching criteria such as for purposes of example is not and contains. 

A second row of the GUI is a Contract Type specification row. Several radio button selection options are presented. A first All Contracts selection radio button allows the user to specify filtering for both SLAs and SLDs. A second Applies to All Consumers SLD selection radio button allows the user to specify filtering for SLDs. A third Applies to Specific Consumers SLA selection radio selection button allows the user to specify filtering for SLAs. A Filter button allows the user to specify filtering based upon the configured selected options. A Clear button allows the user to clear the filtering selections. The choice of whether to implement filtering is up to the respective user and the user may proceed to the first step of the visualization as described further below with or without filtering the configuration.

The resource hierarchy allows the user to understand what resources are present and allows the user to understand the arrangement of those resources such that the user may understand through visualization any policy inheritance which may be taking place with respect to the resources. Within the present set of examples the service level e.g. SERVICE level of the hierarchy inherits policies from the WSDL level e.g. web services description language WSDL level of the hierarchy similarly to the description of above for the port service resource and service respectively. Therefore policies attached at WSDL and service levels will also apply at the port level.

Understanding the organization of the hierarchy allows the user to make efficient use of policies by adding removing or altering policies at the highest level within the resource hierarchy often removing the need to attach identical policies at multiple levels. Without this hierarchical visualization presented within the resource hierarchy the inheritance of policy attachments may be a source of confusion when a policy is unexpectedly inherited that results in unexpected system behavior. Based upon the present technology the visualization may utilize a tree based UI element such as the resource hierarchy to represent the hierarchy which may efficiently communicate the resource hierarchy and the actual policy inheritance to the user.

It should be noted that several options exist for policy attachment representations. The present example identifies policy attachments that specify the same set of content filters and combines them together into a single effective policy. For example within a first row of the GUI it is assumed that one 1 policy attachment is specified within the column that specifies that there are no conditions and that the effective policy will be applied in any situation. As such an Any row represents that there are no specific content filters specified and that the effective policy will be applied in any situation. Within a second row of the GUI it is assumed there are three 3 policy attachments specified within the view column that all specify that they applied to customers with a membership level of gold. The present example illustrates a single row with a content filter name of Member Level and a content filter value of Gold. The present example lists all three policy attachments within the first row as an effective policy. Similar analysis for details that are provided within may be performed for each of a row and a row and are omitted herein for brevity.

As such the effective policy row correlates all applied policy attachments. Detailed actions and runtime conditions that created this single effective policy may also be illustrated e.g. by user selection of a row to visualize for the user the complete set of actions that are taken in response to a gold level customer rather than having those details spread across a number of locations. As such the user may browse policy attachments rather than having to seek out and determine policy inter relationships. Accordingly the visualization technology described herein provides the user with a visual depiction of what overall system behavior will be taken in response to given runtime operating conditions. Accordingly the present technology allows the user to predict and take action on complex system behavior rather than having to search through multiple policy files to identify the effective action taken as a result of the many different policies.

As can be seen in the columns through described above are again illustrated. Within it can be seen that the row is illustrated as having been selectively expanded e.g. via a mouse click by the user.

Within an expansion area an expansion of the row shows that the effective policy implemented by the set of policy attachments includes two sets of conditions all of which are evaluated e.g. All of the Following for messages for which the respective policy attachments are to be enforced. A first policy attachment condition checks message count e.g. Message Count 150 Per Minute meaning a message count greater than one hundred and fifty per minute and has an action of Reject Message if the condition evaluates to true e.g. check mark or an action of Route Message if the condition evaluates to false e.g. x mark . The second policy attachment condition checks latency e.g. Latency 100 ms meaning a latency greater than one hundred milliseconds for a message and also has an action of Reject Message if the condition evaluates to true or an action of Route Message if the condition evaluates to false.

It should be noted that many possibilities for a display format other than within rows are possible such as columnar or other arrangement and all such possibilities are considered within the scope of the present subject matter. Additionally many possibilities for conditions exist such as a time of day condition a day of the week condition a network latency condition a number of transactions condition and other conditions. The actions may be to reject a message to log the message to route the message to another backend URL or other actions. Additionally in the case of a security policy an action may be to expect or not expect a particular security token. Any such possible conditions and actions are considered to be within the scope of the present technology. A policy specification may allow for nested conditions such as Any of the Following as shown in Exactly One of the Following each of which may be represented within the visualization as shown within and may be used to identify the actions that are taken if the runtime condition is evaluated to true or false.

The previous stages of the visualization allow the user to understand which policies are included at each level of the resource hierarchy and under what message circumstances the respective policy attachments are included for evaluation. This stage is concerned with laying out the detail of the policy attachments to specify which actions the compressed consolidated policy attachments e.g. effective policies define and under what runtime conditions the policy attachments are triggered.

Separate policies have been combined in the previous visualization stages into a single effective policy. At this level the detail for multiple policy attachments may be shown to the user simultaneously. This part of the policy visualization allows the user to have a clear visualization of all of the conditions and actions that are applied to a given message without being required to read and interpret all of the separate policy attachments. As such the present technology may help with troubleshooting and altering system behavior in an efficient and comprehensive manner.

At decision point the process makes a determination as to whether a request to perform policy visualization has been detected such as via a user interface request from a user to invoke the visualization of runtime resource policy attachments and applied policy details described herein. In response to determining that a request to perform policy visualization has been detected the process identifies a resource hierarchy such as the policy hierarchy described above associated with a policy implemented within a runtime system such as the system at block .

At block the process identifies all policies attached to each resource including hierarchical policy attachments e.g. inherited policy attachments . Identification of policy attachments may include introspecting in response to detecting a selection of a policy resource within a service policy visualization interface the selected policy resource to identify service policies attached to the policy resource within a resource hierarchy associated with the policy resource. The selected policy resource may include a service level resource a port resource an operation resource associated with the service or other resource as appropriate for a given implementation. The service may include for example one of a web service a representational state transfer REST a web application or other service as appropriate for a given implementation. Identification of the service policies attached to the policy resource within a resource hierarchy associated with the policy resource may further include determining conditions under which the attached service policies are configured to be applied to the selected policy resource. Identification of the service policies attached to the policy resource within a resource hierarchy associated with the policy resource may additionally include determining runtime conditions configured within the attached service policies and conditional actions configured in association with the configured runtime conditions to be performed in response to the selected policy resource.

At block the process prompts the user for entry of filter options such as the content filter options and other filtering options described for example above in association with . As described above filter configuration may be considered optional. As such at decision point the process makes a determination as to whether a filter has been configured by the user. In response to determining that a filter has been configured by the user the process filters the policies attached to the resources based upon the filter selection s at block . As such the process may detect a selection of at least one message content filter that describes a specific policy enforcement scenario associated with the selected policy resource and may apply the selected message content filter to the selected policy resource.

In response to filtering the policies attached to the resources based upon the filter selection s at block or in response to making a determination at decision point that a filter has not been configured by the user the process determines an effective policy for each resource as a set of policy attachments at block . As described above the effective policy may include policies defined within all layers of hierarchy within the resource hierarchy and identifies all conditions upon which actions may be taken upon messages by a given resource. Further determining the effective policy may include correlating combined effects of the attached service policies based upon results of the introspection of the selected policy resource into an effective applied policy configuration associated with the policy resource. The attached service policies may include multiple service policies applied from multiple different hierarchical policy attachment levels associated with the selected policy resource.

At block the process displays the policy hierarchy such as described for example above in association with . At decision point the process makes a determination as to whether to expand or contract the displayed policy hierarchy such as in response to user selections of plus or minus icons associated with a policy hierarchy as also described above. In response to determining to expand or contract the displayed policy hierarchy the process expands or contracts the displayed policy hierarchy at block . It should be noted that the processing may be iterative without departure from the scope of the present technology to repeatedly respond to expansion or contraction requests associated with the displayed policy hierarchy.

In response to completion of the expanding and or contracting of the displayed policy hierarchy at block or in response to determining at decision point that a request to expand or contract the displayed policy hierarchy has not been detected the process displays the effective policy grid at block such as described for example above in association with . Displaying the effective policy may include displaying the effective applied policy configuration associated with the policy resource including the correlated effects of the attached service policies within the service policy visualization interface. Displaying the effective policy may include displaying based upon one or more applied message content filters a resultant set of runtime conditions configured within the attached service policies and conditional actions configured in association with the configured runtime conditions to be performed in response to messages processed by the selected policy resource.

At decision point the process makes a determination as to whether an effective policy selection has been detected such as for example a selection of a row e.g. a mouse click within an effective policy grid that contains a displayed representation of an effective policy. In response to determining that an effective policy selection has been detected the process expands the selected effective policy and shows the policy attachment details e.g. local and hierarchically inherited at block such as described for example above in association with . The policy attachment details specify what runtime conditions if any are evaluated by a selected resource and specify what actions if any are performed for a particular set of content filters. As such the process expands in response to a user selection of a displayed effective policy row of the effective applied policy configuration associated with the policy resource the selected displayed effective policy row to display the resulting set of runtime conditions configured within the attached service policies and conditional actions configured in association with the configured runtime conditions to be performed in response to messages processed by the selected policy resource. Again it should be noted that the processing may be iterative without departure from the scope of the present technology to repeatedly respond to effective policy selections and to repeatedly show policy attachment details.

At decision point the process makes a determination as to whether processing is completed such as by detection of a user request to terminate a policy analysis session. In response to determining that processing has not been completed the process returns to block and iterates as described above. In response to determining that processing has been completed the process returns to decision point and iterates as described above.

As such the process provides technology to operate with three interrelated aspects of a policy and presents these interrelated aspects to the user e.g. policy administrator in three steps each of which also provides visualized output to assist the user with interpretation of policy applications within a runtime system. The first step identifies what policies are attached and inherited at each resource. The second step determines what effective policies are created from the various disparate policy attachment files and message content filters. The third step determines what runtime conditions if any are evaluated and what actions if any are performed for a particular set of content filters. It is the combination of these three aspects of the visualization that together allow the user to fully visualize the complete policy applied to messages for a given web service and to accurately understand and predict system behavior for any given set of resources messages and runtime conditions.

As described above in association with through the example systems and processes provide visualization of runtime resource policy attachments and applied policy details. Many other variations and additional activities associated with visualization of runtime resource policy attachments and applied policy details are possible and all are considered within the scope of the present subject matter.

Those skilled in the art will recognize upon consideration of the above teachings that certain of the above examples are based upon use of a programmed processor such as the CPU . However the invention is not limited to such example embodiments since other embodiments could be implemented using hardware component equivalents such as special purpose hardware and or dedicated processors. Similarly general purpose computers microprocessor based computers micro controllers optical computers analog computers dedicated processors application specific circuits and or dedicated hard wired logic may be used to construct alternative equivalent embodiments.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as JAVA Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention have been described with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable storage medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable storage medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

