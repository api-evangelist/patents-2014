---

title: Applications in a flexible registration framework
abstract: A processing device executing an application that is logged in to a user account recognized by a registration service receives information identifying a device that has not been bound to any user account, wherein the application supports a plurality of registration techniques. The processing device identifies a registration technique supported by the device that is to be used for registration of the device. The processing device performs at least one of sending information associated with the registration technique to the device or receiving the information associated with the registration technique. The processing device sends the information associated with the registration technique to the registration service, and then receives a message from the registration service, wherein the message indicates that the information satisfied a criterion of the registration technique and comprises a notification that the device is bound to the user account.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09648055&OS=09648055&RS=09648055
owner: Ayla Networks, Inc.
number: 09648055
owner_city: Santa Clara
owner_country: US
publication_date: 20141015
---
Many modern appliances consumer devices and other devices include embedded systems that are configured to perform one or more dedicated functions. However most embedded systems of such devices do not include networking capabilities role based access control capabilities remote interface capabilities remote control capabilities or related capabilities. Designing such functionality into an embedded system designing application programming interfaces APIs for accessing such functionality designing web services capable of communicating with and controlling the embedded system via this added functionality and designing applications for taking advantage of this functionality can consume considerable resources of the device manufacturer.

Moreover many devices such as those that include embedded systems require user registration to enable certain features and or to make the devices usable. Conventionally each such device has a single registration technique that is coded into that device during manufacturing.

Embodiments are directed to a network connected device platform also referred to as an internet of things IoT cloud platform or simply an IoT platform having a flexible registration framework that provides flexible control of registration techniques to be used for binding devices to user accounts.

There are numerous different registration techniques that may be used to register devices. Each of these registration techniques provides different tradeoffs in terms of security and convenience to a user. Moreover each registration technique may rely on one or more underlying technologies to complete device registration. Accordingly the registration techniques that may be available for a device may depend on the capabilities of the device.

Conventionally a device manufacturer e.g. an original equipment manufacturer OEM weighs the benefits limitations and requirements of available registration techniques and selects a particular registration technique for their products during product development. The device manufacturer then hard codes the single selected registration technique into their products. The device manufacturer may also set up an online registration service that facilitates registration of the devices using that single registration technique. Notably such registration services are also coded to support only the single registration technique that is used by all of the manufacturer s products.

Embodiments described herein set forth a registration framework that includes a registration service applications and devices that work together to register the devices. The registration framework supports numerous different registration techniques and may register devices using any of the supported registration techniques. Each of the applications and devices also support one or more registration techniques. Moreover at any time additional registration techniques may be added to any of the applications devices or registration service. Thus the registration framework provides the flexibility to select different optimal registration techniques to apply depending on who is performing the registration the device being registered an application facilitating the registration and or other environmental conditions.

In one embodiment a registration service receives information identifying a first device a second device to be registered and an application running on the first device wherein the application is logged in to a user account recognized by the registration service. The registration service determines a registration technique that is supported by both the application and by the second device and then sends a message indicating the registration technique to at least one of the first device or the second device. The application and the second device may then each perform operations associated with the registration technique to complete registration and bind the second device to the user account.

In another embodiment a mobile device or other computing device executes an application that supports multiple registration techniques and that is logged in to a user account recognized by a registration service. The application receives information identifying a device that has not been bound to any user account. The application then identifies a registration technique supported by the device that is to be used for registration of the device. In some instances this determination is made by querying the registration service. Depending on the identified registration technique the application may then receive registration information from a user receive registration information from the device send registration information to the device and or send registration information to the registration service. The registration service then determines whether registration is successful and sends a notification to the application and or the device indicating that the registration information satisfied a criterion of the registration technique and that the device is bound to the user account.

In another embodiment a device such as an embedded system establishes a connection to a local area network LAN and then provides data to a registration service via the connection to the LAN. The device then receives from the registration service an instruction to implement a specified registration technique. Responsive to the instruction the device implements the specified registration technique wherein the registration service is to bind the embedded system to a user account responsive to satisfaction of a criterion of the specified registration technique. Numerous other embodiments are discussed herein that relate to flexible application of registration techniques to bind devices to user accounts.

Referring now to the figures is a block diagram depicting an example network architecture including remotely accessible embedded systems A C and computing devices that interact with the embedded systems. The network architecture includes multiple devices A C and a computing device executing a remote control application that are connected to a local area network LAN and further includes multiple wide area network WAN accessible services connected to a WAN . The WAN accessible services may be components of an IoT platform that OEMs can leverage to quickly and easily create new network connected device products. The IoT platform will handle authorization and authentication network connection device registration information gathering and analytics device management role based access control and more. The registration service of the IoT platform the remote control application and the embedded systems A C together form a flexible registration framework for registering devices A C. The flexible registration framework enables OEMs to choose registration techniques for their devices based on desired security levels ease of use and or other considerations. The flexible registration framework additionally enables the OEMs to easily change the registration techniques to be used by any of their devices and to update those devices accordingly. The registration techniques may be changed dynamically without any change to device side software.

The devices A C are devices with embedded systems A C and may include for example electrical appliances such as refrigerators ovens washers driers dishwashers thermostats alarms air conditioners televisions radios receivers amplifiers and so forth. The devices A C may also include consumer devices such as digital watches music players game consoles digital cameras printers and so forth. Other examples of devices A C include stationary devices such as HVAC systems traffic lights factory controllers signs electronic billboards sprinkler systems and irrigation control systems as well as medical devices. Devices A C may also be any other type of device that includes an embedded system.

An embedded system A C is a class of computing device that is embedded into another device as one component of the device. The device A C typically also includes other hardware electrical and or mechanical components that may interface with the embedded system A C. Embedded systems A C are typically configured to handle a particular task or set of tasks for which the embedded systems A C may be optimized. Accordingly the embedded systems A C may have a minimal cost and size as compared to general computing devices.

The embedded systems A C may each include a communication module not shown that enables the embedded system A C and thus the device A C to connect to a LAN or to a wireless carrier network e.g. that is implemented using various data processing equipment communication towers etc. . The communication module may be configured to manage security manage sessions manage access control manage user registration manage communications with external devices and so forth. In one embodiment the communication module is configured to communicate using Wi Fi . Alternatively the communication module may be configured to communicate using Bluetooth Zigbee Z wave wireless universal serial bus USB Internet Protocol version 6 over Low power Wireless Area Networks 6LowPAN power line communication PLC Ethernet e.g. 10 Megabyte Mb 100 Mb and or 1 Gigabyte Gb Ethernet or other communication protocols. If the communication module is configured to communicate with a wireless carrier network then the communication module may communicate using Global Systems for Mobile Communications GSM Code Division Multiple Access CDMA Universal Mobile Telecommunications Systems UMTS 3GPP Long Term Evaluation LTE Worldwide Interoperability for Microwave Access WiMAX or any other second generation wireless telephone technology 2G third generation wireless telephone technology 3G fourth generation wireless telephone technology 4G or other wireless telephone technology. One example of an embedded system is described in greater detail below with reference to .

Referring back to the LAN may include a router switch bridge or other network device not shown that enables communication between multiple devices connected to the LAN . The network device may provide wired connections to the LAN using for example Ethernet ports universal serial bus USB ports and or Firewire ports. The network device may additionally provide wireless connections to the LAN using for example a Wi Fi transceiver.

Some embedded systems A C may not support any of the communication types supported by the network device. For example device A may support Zigbee and device B may support Bluetooth. To enable such devices to connect to the LAN the LAN may include a gateway device not shown connected to the network device via one of the connection types supported by the network device e.g. via Ethernet or Wi Fi . The gateway device may additionally support other communication protocols such as Zigbee PLC and or Bluetooth and may translate between supported communication protocols. Accordingly some devices may connect to the LAN through the gateway device.

The LAN or wireless carrier is connected to a wide area network WAN . The WAN may be a private WAN e.g. an intranet or a public WAN such as the Internet or may include a combination of a private and public network. The LAN may include a router and or modem e.g. a cable modem a direct serial link DSL modem a Worldwide Interoperability for Microwave Access WiMAX modem an long term evolution LTE modem etc. that provides a connection to the WAN .

The WAN may include or connect to a server computing device . The server computing device may include a physical machine and or a virtual machine hosted by a physical machine. The physical machine may be a rackmount server a desktop computer or other computing device. In one embodiment the server computing device includes a virtual machine managed and provided by a cloud provider system. Each virtual machine offered by a cloud service provider may be hosted on a physical machine configured as part of a cloud. Such physical machines are often located in a data center. The cloud provider system and cloud may be provided as an infrastructure as a service IaaS layer. One example of such a cloud is Amazon s Elastic Compute Cloud EC2 .

The server computing device hosts one or more WAN accessible services which may be a web based service and or a cloud service e.g. a web based service hosted in a cloud computing platform . In one embodiment the WAN accessible services include a device service a user account service and a registration service . Alternatively the functionality of one or more of the device service user account service and or registration service may be combined into a single service or may be divided into multiple services. For example the functionality of the registration service may be incorporated into the device service in some embodiments.

Device service may maintain a session e.g. via a continuous or intermittent connection with one or more of the embedded systems A C. Alternatively the device service may periodically establish sessions with the embedded systems A C. Via a session with an embedded system A C device service may issue commands to the embedded system and or receive status updates from the embedded system. The commands may be commands to change a state of one or more parameters of a device controllable by the embedded system. For example if the embedded system is embedded in a heater or thermostat then the commands may include commands to increase or decrease a temperature. In another example if the embedded system is embedded in a home automation system then the commands may include commands to turn on or off lights.

Status updates received from the embedded systems A C may identify values or states of some or all detectable parameters of devices A C that the embedded systems are included in. Status updates may also include fault information statistical device usage information trace data and or other information. Such values states and or other information may change based on direct user interaction with the devices. Such values states and or other information may also change responsive to commands sent to the embedded systems A C by the device service and or by computing device . By maintaining or periodically establishing sessions with the embedded systems A C the device service may maintain up to date information on the states of the devices A C.

User account service performs authorization and authentication of applications. Applications e.g. remote control application may provide identification of a particular user account maintained by user account service as well as credentials such as a password biometric information a one time password OTP etc. to user account service . User account service may use the credentials to authenticate the application to a particular user account. Once the application is authenticated user account service may provide a session token to the application. This session token may be used to identify the particular user account that the application is logged into as well as a role or roles of the user account devices that the user account has permission to access e.g. devices owned by the holder of the user account and so on. The application may then provide the session to token to other WAN accessible services e.g. device service and or registration service to show that the application is associated with a particular user account. Each of the WAN accessible services recognize the user account and will permit access to particular resources e.g. to particular devices based on the user account associated with the session token.

Computing device may be a portable device such as an electronic book reader portable digital assistant mobile phone laptop computer portable media player tablet computer camera video camera netbook notebook and the like. Computing device may also be a traditionally stationary device such as a desktop computer gaming console digital video disc DVD player media center and the like. Computing device may connect to the WAN and or to the LAN .

Computing device may include a remote control application or multiple remote control applications that can receive information for devices A C and control the devices A C. The remote control application A C is configured to interface with and or control one or more of the devices A C via the devices embedded systems A C. The remote control application may be programmed to run on various operating systems such as Windows operating systems Unix operating systems iOS operating systems Android operating systems and Java operating systems to name a few. The remote control application may also be configured as firmware or as hardware or as some combination of software firmware and or hardware. The remote control application may include a graphical user interface GUI that enables users to interact with and control devices A C in an intuitive and user friendly manner. A user may interact with the GUI to cause the remote control application to generate notifications commands property updates and other messages for the devices represented in the GUI.

In one embodiment the computing device includes separate remote control applications for each of the embedded systems A C. Alternatively the computing device may include a single remote control application that is capable of communicating with and controlling embedded systems A C for multiple different devices A C.

While computing device is connected to WAN or directly to a LAN remote control application may establish a session with the user account service . Via this session the remote control application may interface with device service and registration service . The device service may provide an interface for indirectly controlling and monitoring one or more of the devices A C. If a user desires to change a state of a device the user may issue a command via the remote control application and that command may be sent to the device service . The device service may then forward the command on to the appropriate embedded system. Additionally when the device service receives updated state information for a device from an embedded system the device service may forward the state information on to the remote control application . This may enable users to connect to and control the devices A C from anywhere they have access to the Internet.

A user account may gain access to a device A C by registering that device to the user account or by another user account sharing access to the device A C. Registration of the device causes the device to be bound to a particular user account.

Registration service is responsible for coordinating with devices A C and remote control applications to register devices A C to a user account. Registration service supports a large number of registration techniques that may be performed to register a device. Each remote control application may support one or more registration techniques. Additionally each of the devices A C may support one or more registration techniques which may differ from device to device. The registration techniques supported by application may be different than the registration techniques supported by devices A C. In order for a device to successfully be registered to a user account there should be overlap of at least one registration technique that is supported by both the remote control application and the device A C. Registration service may identify and select a registration service that is supported by both the remote control application and a device A C and then instruct the remote control application and device A C to use the selected registration technique. Alternatively if the remote control application supports only a single registration technique that is the same as a single registration technique supported by the device then the device and remote control application may automatically apply that single registration technique.

One or both of the remote control application and device A C may then generate or collect appropriate registration information and provide the registration information to the registration service . The registration service determines whether the received registration information satisfies one or more criteria of the selected registration technique and if so binds the device A C to the user account associated with the remote control application . Once the device is registered to the user account the remote control application can begin controlling the device A C.

Registration service manages the registration and deregistration of devices such as embedded systems to user accounts. In one embodiment registration service corresponds to registration service of . Registration service may include a device interface an application interface a registration technique selector a device updater a device binder and or an application updater . Alternatively the functionality of one or more of the device interface application interface registration technique selector device updater device binder and or application updater may be combined into a single module or divided into multiple sub modules.

Device interface is responsible for connecting to and communicating with embedded systems and or other devices e.g. unregistered device . Device interface may connect to embedded systems or other devices whether or not those devices have been registered to any user accounts. Device interface may receive data from embedded systems or other devices such as location information addressing information e.g. internet protocol IP addresses device identifiers IDs registration information and so forth. Device interface may additionally send information to devices such as device updates e.g. firmware updates commands to use particular registration techniques registration confirmation and so on.

Application interface is responsible for connecting to remote control applications e.g. remote control application . Application interface may receive a session token from a remote control application and may query a user account service to determine a user account associated with the session token. The user account service may also identify devices registered to the user account. Application interface may provide the remote control application with instructions to use particular registration techniques for registration of a device with application updates and with other information. Application interface may additionally receive application information addressing information registration information and or other information from remote control applications.

Remote control application is an application that interfaces with and or controls one or more devices e.g. one or more devices having embedded systems . Remote control application may be a program or library that is executed by a processing device e.g. by a processor of computing device of . The remote control application may be programmed to run on various operating systems such as Windows operating systems Unix operating systems iOS operating systems Android operating systems and Java operating systems to name a few. The remote control application may also be configured as firmware or as hardware or as some combination of software firmware and or hardware. In one embodiment the remote control application includes a graphical user interface GUI a registration technique implementer a service communicator and a device communicator . In other embodiments the functionality of some or all of the GUI registration technique identifier service communicator and or device communicator may be combined into a single module or divided into additional modules. The remote control application may also include a session token network credentials and or data identifying supported registration techniques .

Graphical user interface GUI enables users to interact with and control devices in an intuitive and user friendly manner. GUI may provide a collection of graphical icons visual indicators buttons toggles sliders and so forth that represent states and values of different parameters for the devices as well as controls for changing those states and values. A user may interact with the GUI to cause the remote control application to generate notifications commands property updates and other messages for the devices represented in the GUI. A user may additionally interact with GUI to perform one or more operations associated with device registration.

Device interface is responsible for connecting to and communicating with embedded systems and or other devices e.g. unregistered device . Device interface may establish limited connections to embedded systems or other devices while those devices are unregistered. Via the limited connection device interface may provide the unregistered device with network credentials to enable the unregistered device to connect to a network e.g. to a LAN . Device interface may additionally receive registration information from the unregistered device and or send registration information to the unregistered device via the limited connection.

Service interface is responsible for connecting to registration service a device service and or other WAN accessible services of an IoT platform. Service interface may send a session token to the registration service to authenticate the remote control application to a particular user account. Service interface may receive instructions to use particular registration techniques for registration of a device receive application updates and or receive other information from the registration service . Service interface may additionally send to registration service application information addressing information registration information and or other information.

Unregistered device is a device that has not yet been registered to any user account. Unregistered device may be a device having an embedded system or may be any other computing device that is to connect to an IoT platform. In one embodiment unregistered device corresponds to a device A C or embedded system A C of . Unregistered device may include a service interface an application interface and or a registration technique implementer . Alternatively the functionality of one or more of the service interface application interface and or registration technique implementer may be combined into a single module or divided into multiple sub modules.

Service interface is responsible for connecting to registration service a device service and or other WAN accessible services of a IoT platform. Service interface may receive instructions to use particular registration techniques for registration of the unregistered device receive device updates and or receive other information from the registration service . Service interface may additionally send to registration service device information addressing information registration information and or other information.

Application interface is responsible for connecting to remote control applications e.g. remote control application . Application interface may provide the remote control application with registration information. Application interface may additionally receive application information addressing information registration information and or other information from remote control applications.

When a device e.g. unregistered device is purchased by an end user that device may initially not be registered to any user accounts. The end user may desire to register the device to his user account to gain access to and control over that device. For example a user may purchase and install an Internet enabled oven dishwasher dryer or washer. By registering the Internet enabled device to a user account that the remote control application is logged into the remote control application gains the ability to monitor and or control that device. In one embodiment the remote control application may be granted one of multiple different permission levels through the registration process. A first permission level may permit monitoring of a device but not permit any control of the device. A second permission level may permit control of some e.g. a subset of all device functions or settings and a third permission level may permit control of all device functions and settings as an example.

To register the device the end user first downloads and installs the remote control application on a different computing device e.g. on a mobile device . Alternatively the user may already have remote control application installed on his or her computing device. Via the remote control application the end user logs into a user account service e.g. user account service and receives a session token that binds the remote control application to the user account for the duration of a session. The user may generate a new user account if the end user does not already have a user account.

Once the remote control application is logged into the user account of the end user the remote control application provides the session token to registration service and may request registration of a new device e.g. of unregistered device . In one embodiment the remote control application automatically detects unregistered device and sends a registration request to the registration service . The registration request may include information about the detected device such as an internet protocol IP address a media access control MAC address a serial number identifying information of a LAN that the device is connected to location information or other information that can be used to uniquely identify the device. Alternatively a user may request registration of a new device via GUI which may cause a registration request to be sent to registration service . The user may input a type of device to be registered a serial number of the device or other information that identifies the device.

Instead of or in addition to remote control application generating a registration request unregistered device may generate a registration request and send the registration request to registration service . In one embodiment unregistered device generates a registration request responsive to detecting remote control application . Unregistered device may receive information about the remote control application e.g. an IP address associated with remote control application a MAC address associated with remote control application session token etc. that may be used to identify remote control application and may include such information in the registration request.

Responsive to registration service receiving a registration request registration technique selector determines a registration technique to be used to register the unregistered device . Registration service has multiple supported registration techniques . Similarly unregistered device has one or more supported registration techniques and remote control application has one or more supported registration techniques . Registration service supports all registration techniques that are supported by any of the devices and remote control applications. Unregistered device is likely to support just one or a few registration techniques. Remote control application may support all of the same registration techniques supported by registration service or may support a subset of such registration techniques.

To select a registration technique registration technique selector determines the supported registration techniques of the remote control application and the supported registration techniques of the unregistered device . Registration technique selector then determines if there is any overlap between supported registration techniques and supported registration techniques .

Registration technique selector may apply one or more registration technique selection rules to select a registration technique. In one embodiment a simple registration technique selection rule is applied that selects a registration technique based on overlapping registration techniques. If a single overlapping registration technique is identified registration technique selector may select the overlapping registration technique and notify the remote control application and or the unregistered device of the registration technique to use. If multiple overlapping registration techniques are identified then registration technique selector may determine which of the overlapping registration techniques to select. A registration technique selection rule may indicate that a registration selection technique with a highest security level is to be applied. Alternatively a registration selection technique selection rule may indicate that one of the overlapping registration techniques is to be selected based on one or more other criteria. For example a registration technique selection rule may indicate that a particular registration technique is to be selected based on a location of the unregistered device or based on a role of the user account that the remote control application is logged into.

In one example a registration technique selection rule indicates that a registration technique is to be selected based on a location of the unregistered device . For example an OEM may specify that a first registration technique is to be used for devices in Europe a second registration technique is to be used for devices in China and a third registration technique is to be used for devices in the United States. Registration technique selector may determine a location of the unregistered device based on an IP address of the unregistered device based on cell tower triangulation based on Wi Fi access point triangulation or based on global positioning system GPS coordinates received from the unregistered device for example. Registration technique selector may then select the registration technique designated for the determined location.

In another example a registration technique selection rule indicates that a registration technique is to be selected based on a role of the user account that the remote control application is logged into. User accounts may be associated with one or more roles. Each role is associated with a type of user and provides a set of permissions or privileges with regards to one or more devices. Examples of roles include an end user role an OEM administrator role an OEM account manager role a technician role a dealer role and so on. Accordingly a first registration technique may be used if a dealer is installing the unregistered device in a customer s home and a second registration technique may be applied if the customer is installing the unregistered device herself. Many other registration technique selection rules may also be applied.

Once a registration technique is selected device interface may notify unregistered device of the registration technique to be used. Additionally or alternatively application interface may notify remote control application of the registration technique to be used.

Each of the remote control application and unregistered device may include a registration technique implementer that implements a selected registration technique for device registration. The registration technique implementer and registration technique implementer each perform one or more registration operations associated with device registration. The specific registration operations that are performed depend on the specific registration technique that was selected. Examples of operations that may be performed by registration technique implementer include receiving registration information from unregistered device prompting a user to input registration information generating registration information sending registration information to unregistered device and sending registration information and or other information to registration service . Examples of registration operations that may be performed by unregistered device include receiving registration information from remote control application generating registration information sending registration information to remote control application and sending registration information and or other information to registration service .

Registration service receives registration information from one or both of remote control application and unregistered device . Device binder then determines whether the received registration information satisfies one or more registration criteria of the selected registration technique. The registration criteria may differ from registration technique to registration technique. If the registration criteria of the registration technique are satisfied device binder binds the unregistered device to the user account that the remote control application is logged into. Device binder may additionally send a notification of successful device registration to the remote control application and or unregistered device . Remote control application may then gain access to unregistered device which is now registered .

As mentioned the remote control application and unregistered device may perform different registration operations depending on a selected registration technique. Additionally the types of registration information that is gathered may differ between registration techniques and the registration criteria may differ for different registration techniques. A few examples of registration techniques are provided herein below. Many other registration techniques may also be used in embodiments.

In a first example registration technique the remote control application causes a screen of a mobile device that the remote control application is running on to pulsate. The duration of pulses and spacing between pulses may provide a code. The unregistered device includes a detector e.g. a light sensor that detects the pulses. The unregistered device identifies the code and then forwards the code to registration service . Remote control application additionally sends the code to registration service . Registration service determines whether the code received from the unregistered device matches the code received from remote control application . If they match then the registration criteria are satisfied and registration is successful.

In a second example the unregistered device includes a display e.g. a liquid crystal LCD display a light emitting diode LED display an organic light emitting diode OLED display an electronic ink e ink display a plasma display panel a cathode ray tube CRT etc. and the unregistered device displays a unique code via the display. A user views the unique code and enters it into the remote control application . The remote control application and the unregistered device both send the unique code to the registration service . Registration service compares the unique code received from the remote control application to the unique code received from the unregistered device . If they match then registration is successful.

In a third example a user of the remote control application receives a unique code from a web site via a text message via email or via another means. The unique code may be sent to the remote control application or the user may be asked to input the unique code into the application. The remote control application may then send the unique code to the unregistered device or the user may be asked to input the unique code into the unregistered device via an input device of the unregistered device . Both the remote control application and the unregistered device send the unique code to the registration service which compares the received codes to determine if registration successful.

In a fourth example remote control application may connect to the unregistered device directly or via a LAN. The unregistered device may send the unique code to the remote control application via the connection. In one embodiment unregistered device broadcasts the unique code. In one embodiment unregistered device begins broadcasting the unique code responsive to a user pushing a button on the unregistered device . Remote control application and unregistered device may send the unique code to the remote control application . Registration service compares the unique code received from the remote control application to the unique code received from the unregistered device . If they match then registration is successful.

In a fifth example unregistered device includes a bar code e.g. a two dimensional bar code such as a quick response QR code or a 1 dimensional bar code such as a universal product code UPC . The remote control application includes a bar code scanner or an image capture device that captures the bar code on the unregistered device . The remote control application may transmit the bar code to the registration service . The unregistered device may also transmit the bar code to the registration service. Alternatively the registration service may include a data structure e.g. a table database etc. that matches bar codes to unique identifying information of each device such as MAC addresses serial numbers etc. Registration service may compare the received bar codes to one another or may compare a single received bar code to the data structure to identify the device that is to be registered. If the bar codes match then registration is successful and registration service binds the unregistered device to the user account. Alternatively if the bar code received from the remote control application matches a bar code in the data structure registration service determines an unregistered device corresponding to the bar code and binds that unregistered device to the user account.

In a sixth example remote control application and unregistered device are on the same LAN and remote control application detects the unregistered device on the LAN e.g. via the san list of the Wi Fi devices connected to the LAN . Remote control application sends information identifying the unregistered device and address information showing that the unregistered device and the remote control application are on the same LAN to the registration service . Registration service may then register the device to the user account associated with the remote control application. In a variation of the sixth example the unregistered device additionally sends a token e.g. a unique code to remote control application which the unregistered device may also transmit to the registration service or which the registration service may look up in a data structure . Registration service may apply a registration technique having a first criterion that the remote control application be on a same LAN as the unregistered device and a second criterion that a token received from the unregistered device match a token received from the remote control application . Responsive to both criteria being satisfied registration service may bind the unregistered device to a user account.

The binding of the unregistered device to the user account may be recorded by the registration service . The binding information may be saved as an entry in the user account for example. In one embodiment the information identifying the user account to which the device is bound and any information identifying the owner of the device individuals who have access to the device etc. is stored in a server data store e.g. in the cloud and not in the device . Such information may also not be stored in the remote control application in embodiments. Accordingly even upon the loss or compromise of the device or a mobile device that includes the remote control application no customer identifiable information is compromised e.g. no customer information can be obtained from the device .

Embodiments herein describe a registration service as making a registration decision determining whether or not registration information satisfies the criteria of a registration technique . However it should be understood that in alternative embodiments the unregistered device and or remote control application may make the registration decision. For example unregistered device may provide registration information to remote control application and remote control application may then determine whether the received registration information potentially in combination with additional registration information that may be received from registration service received from a user or generated by remote control application satisfies criteria of the selected registration technique. Remote control application may then notify the registration service that registration is or is not successful responsive to which device binder may bind the device to the user account if appropriate. Similarly remote control application may send registration information to unregistered device and the unregistered device may use such registration information to make a registration decision. Unregistered device may then notify the registration service of the registration decision.

Moreover embodiments herein describe a registration service determining a registration technique to be applied by a remote control application and an unregistered device . However in alternative embodiments the remote control application and or unregistered device may determine which registration technique to apply. For example remote control application may include a registration technique selection rule and may apply the registration technique selection rule to determine which registration technique to use. Similarly unregistered device may include and apply a registration technique selection rule to select a registration technique.

New registration techniques may be added to the supported registration techniques at any time without making any changes to the existing code of the registration service . Moreover registration techniques to be used for registering of devices may be changed without making any updates to software or firmware of those devices. In one embodiment a registration technique to be used by a device may be changed simply by sending an instruction to that device and or to a remote control application that will interface with that device. This enables registration techniques to be easily changed on the fly even for devices that have already been sold and deployed to customer locations. In one embodiment registration service is managed as a plugin or extension.

Additional registration techniques may also be added to remote control application and or unregistered device at any time. Some registration technique selection rules may select a registration technique to be used even if that registration technique is not supported by one or both of the remote control application and or unregistered device . If a registration technique is selected that is not supported by remote control application application updater updates remote control application to cause remote control application to support that registration technique. Application updater may download an update that includes the selected registration technique to remote control application and remote control application may be updated based on the update. Similarly if a registration selection technique is selected that is not supported by unregistered device device updater may download a firmware update to unregistered device that will cause unregistered device to support the selected registration technique. Unregistered device may then execute the update to support the selected registration technique.

The registration framework has been described with reference to registering an unregistered device . However it should be understood that in some embodiments the device to be registered may be a registered device. In such embodiments the described operations may be performed to re register the device. Re registration is registration of an already registered device to a new user account. Some registration techniques support re registration while other registration techniques do not support re registration. If a selected registration technique does not support re registration then an owner may deregister themselves from a device to enable registration of the device to a new user account. If device binder determines that the selected registration technique does support re registration then reregistration may be performed without deregistering the device. In one embodiment re registration causes the device to no longer be bound to a user account that the device was originally bound to before re registration was performed. In another embodiment re registration causes the device to be bound to the new user account without affecting the binding to the original user account.

At block the registration service determines a registration technique to be used for registering the unregistered device . Registration service may then notify the unregistered device and or the remote control application of the determined registration technique. In an alternative embodiment registration service may not notify remote control application or unregistered device of the registration technique to be used. For example if the remote control application and unregistered device include only a single registration technique that matches or if remote control application and unregistered application have the same default registration technique then the registration technique notification may be omitted.

Remote control application transmits registration information e.g. a unique code or token to unregistered device . Unregistered device and remote control application then both transmit the registration information to registration service. Registration service compares the received registration information and if they match registers the device by binding it to a user account associated with the remote control application . Registration service then notifies the remote control application and or the unregistered device of the successful registration.

At block processing logic determines one or more registration techniques that are supported by the application based on the received first information. At block processing logic determines one or more registration techniques supported by the second device based on the second information.

At block processing logic determines registration techniques that are supported by both the application and by the second device overlapping registration techniques . If there is just one overlapping registration technique the method continues to block . At block processing logic sends a message to the first device and or the second device indicating the registration technique to use. For example if the application supports two registration techniques and the second device supports a single registration technique then the application may be notified of the registration technique supported by the second device. In another example if the application supports registration techniques A and B and the second device supports registration techniques B and C then processing logic may notify the application and the second device that registration technique B is to be used. In one embodiment if the application and the second device both support only a single registration technique which is the same then the operations of block may be skipped.

If at block the application and the second device have more than one overlapping registration technique the method continues to block . At block processing logic applies a registration technique selection rule to select one of the registration techniques supported by both the application and the second device. The registration technique selection rule may select a registration technique based on a security level associated with the technique based on a role of a user account that the application is associated with based on a location of the second device and or based on other criteria. For example each registration technique may have a security rating and processing logic may select a registration technique having a highest security rating. The method continues to block and processing logic notifies one or both of the application and the second device of the selected registration technique.

If at block there were no overlapping supported registration techniques between the application and the second device then the method proceeds to block and an error message is sent. Alternatively processing logic may update one or both of the application and the second device to cause them to support an additional registration technique. At this point the method would return to block .

At block processing logic applies one or more registration technique selection rules to select a registration technique. A simple registration technique selection rule may select a registration technique that is shared by the application and the second device. Other registration technique selection rules may select a registration technique based on location of the first and or second device based on a role associated with the application based on security level and or based on other criteria. The supported registration techniques of the application and or the second device may or may not be taken into consideration when selecting the registration technique.

At block processing logic determines whether the selected registration technique is supported by both the application and the second device. If either the application or the second device fail to support the selected registration technique the method continues to block . If the selected registration technique is supported by both the application and the second device the method proceeds to block .

At block the application and or the second device are updated to cause them to support the selected registration technique. This may include downloading a firmware and or software update to one or both of the first device and the second device and causing the first device and or second device to install the update. At block processing logic notifies one or both of the application and the second device of the selected registration technique to be used. In one embodiment no notification message is sent to a device that was updated at block as the update itself may include an instruction to apply the registration technique.

At block processing logic determines whether the first registration data and the second registration data satisfy one or more criteria of a registration technique that is to be used. In one embodiment processing logic determines whether the first registration data includes a unique code or token that matches a unique code or token in the second registration data. In other embodiments processing logic may additionally or alternatively determine whether a location of the first device and or second device satisfy a location criterion whether the first device and second device are on the same LAN whether a role of a user account associated with the remote control application has registration permissions and or may apply other criteria. If the received registration data satisfies the one or more criteria then registration is successful and the method continues to block . Otherwise registration fails and the method ends.

At block processing logic may verify the user account associated with the application e.g. by checking a session token received from the application . At block processing logic binds the second device to the verified user account. At block processing logic notifies the remote control application and or the second device of the successful registration. At block processing logic may then provide information on the second device to the remote control application. The remote control application would then be able to monitor and control the second device remotely via a device service.

At block processing logic determines whether the first registration data satisfies one or more criteria of a first registration technique that is to be used. If the received registration data satisfies the one or more criteria then registration is successful and the method continues to block at which processing logic binds the second device to a first user account associated with the first remote control application. Otherwise registration fails and the method proceeds to block .

At block processing logic receives second registration data from a second remote control application running on a second device. Processing logic may additionally receive registration data from a fourth device that is to be registered. At block processing logic determines whether the second registration data satisfies one or more criteria of a second registration technique that is to be used. If the received registration data satisfies the one or more criteria then registration is successful and the method continues to block at which processing logic binds the fourth device to a second user account associated with the second remote control application. Otherwise registration fails and the method ends.

Though method is described with reference to registering two devices using two different registration techniques many different devices may be registered using the same or different registration techniques.

At block processing logic determines whether the embedded system supports the registration technique. If the embedded system supports the registration technique the method continues to block . Otherwise the method proceeds to block at which processing logic sends an update to the embedded system to cause the embedded system to support the determined registration technique. At block processing logic notifies the embedded system to implement the registration technique. Depending on the registration technique implementing the registration technique may include waiting for registration information from an application and forwarding such registration information to a registration service sending registration information to an application broadcasting registration information displaying registration information on a screen and or performing other operations.

At block processing logic identifies devices of the particular device type. At block processing logic determines whether the devices support the specified registration technique. If all of the devices support the determined registration technique the method continues to block . If there are devices that do not support the selected registration technique the method continues to block .

At block processing logic updates those identified devices that do not support the registration technique to cause those devices to support the registration technique. This may include automatically updating devices after they are sold to a user the first time they are activated in a user s home. In some instances the OEM may not desire to update devices that are in the field devices that have already been deployed to customer locations . In such an instance processing logic would only update those devices that have not yet been deployed e.g. that have not yet been sold to end users .

At block processing logic identifies a registration technique supported by the device. Identifying the registration technique supported by the device may include comparing the unique identifying information and or device type to a data structure that associates device types with supported registration techniques. Alternatively identifying the registration technique supported by the device may include sending the received information to a registration service and receiving a notification of a registration technique that should be used to register the device.

At block processing logic determines what registration information is to be used and or what registration operations are to be performed for the registration technique. Three different types of registration information operations are discussed though other options are also possible.

If option A is selected at block processing logic receives registration information from a user and or determines registration information. Processing logic may also receive the registration information from another source e.g. from a web page . At block processing logic then sends the registration information to the device and to a registration service. The device then also forwards the registration information to the registration service.

If option B is selected at block processing logic receives registration information from the user and or determines registration information. Processing logic may also receive the registration information from another source. Processing logic then sends the registration information to the device at block . The device would then forward the registration information on to the registration service potentially along with additional registration information determined by the device .

If option C is selected at block processing logic receives registration information from the device from a user and or from another source. At block processing logic sends the registration to the registration service. The device may also send registration information to the registration service.

If at block the sent registration information satisfied registration criteria of the registration technique the method continues to block . At block processing logic receives a message from the registration service indicating that the registration information satisfied the registration criteria of the registration technique and that the device is bound to the user account. At block processing logic may then begin remotely controlling the device.

If at block the registration information failed to satisfy the registration criteria of the registration technique then the method ends without the device being registered.

At block processing logic provides to the unregistered device network credentials for a LAN that the computing device is connected to. The network credentials may include a password for joining the LAN. The network credentials are provided to the unregistered device using the wireless connection with the unregistered device. The unregistered device may use the network credentials to connect to the LAN e.g. a LAN that includes a wireless access point . Once the unregistered device is connected to the LAN the unregistered device may establish a connection to one or more WAN accessible services e.g. to a registration service and or to a device service .

At block processing logic identifies a registration technique supported by the device e.g. by querying a registration service . At block processing logic determines whether the application supports the identified registration technique. If the application supports the identified registration technique the method continues to block . If the application fails to support the identified registration technique then at block processing logic may notify the registration service of the lack of support. At block processing logic may then receive an application update that will cause the application to support the registration technique. Alternatively the registration service may automatically determine that the application does not support the registration technique and may automatically download the application update to the computing device. In such an embodiment the operations of block may be skipped.

At block processing logic updates the application to cause the application to support the registration technique. At block processing logic performs one or more operations associated with the registration technique to bind the unregistered device to a particular user account. The method then ends.

At block processing logic collects data associated with the registration technique. Processing logic may prompt a user to input registration information e.g. to type in a code . Alternatively or additionally processing logic may receive registration information such as a unique token from the unregistered device. Alternatively or additionally processing logic may receive an identification of a web site that processing logic may navigate to. The web site may provide processing logic with registration information. Registration information may also be received from other sources.

At block processing logic determines whether the collected registration information satisfies a registration criterion of the registration technique. If the registration information satisfies the registration criterion the method continues to lock . Otherwise the method ends without the unregistered device being registered.

At block processing logic notifies a registration service that the criterion of the registration criterion has been satisfied. The registration service may then bind the unregistered device to the user account. At block processing logic receives a message from the registration service indicating that the device is bound to the user account. At block processing logic may then begin remotely controlling the device.

At block processing logic establishes a connection to a registration service via the LAN. Processing logic may provide data to the registration service that the registration service may use to identify the embedded system or other device that includes the processing logic. For example processing logic may provide a serial number MAC address or other uniquely identifying information to the registration service.

At block processing logic receives an instruction to implement a specified registration technique from the registration service. Prior to receiving the instruction the processing logic may or may not have a capability to implement the registration technique. At block if the processing logic does not support the registration technique then the method continues to block . If at block the processing logic does support the registration technique the method proceeds to block .

At block processing logic receives an update from the registration service. At block processing logic executes the update. The update updates a firmware of the embedded system or other device to cause the embedded system or other device to support the registration technique.

At block processing logic implements the registration technique. This may include providing registration information to the registration service and or a remote control application receiving registration information from the remote control application and or performing other operations.

At block processing logic detects a device running a remote control application. Processing logic may identify the device on a list of devices connected to a LAN or may detect the device using a protocol such as Bluetooth Zigbee and so forth.

At block processing logic identifies a registration technique to use. In one embodiment processing logic queries the registration service regarding capabilities of the remote control application and receives a response identifying supported registration techniques of the remote control application. Alternatively processing logic may query the remote control application regarding the remote control application s capabilities. Processing logic may receive a response that indicates supported registration techniques of the remote control application. Alternatively processing logic may include a data structure that identifies registration techniques supported by various remote control applications. Processing logic may search the data structure for an entry corresponding to the remote control application to identify supported registration techniques of the remote control application.

Processing logic may then select a registration technique that is supported by both the embedded system and the remote control application. In an alternative embodiment processing logic queries the registration service and receives an instruction to use a particular registration technique from the registration service.

At block processing logic determines what registration information is to be used and or what registration operations are to be performed for the registration technique. Three different types of registration information operations are discussed though other options are also possible.

If option A is selected at block processing logic receives registration information from a user and or determines registration information. Processing logic may also receive the registration information from another source e.g. from a web page . At block processing logic then sends the registration information to the remote control application and to a registration service. The remote control application then also forwards the registration information to the registration service.

If option B is selected at block processing logic receives registration information from the user and or determines registration information. Processing logic may also receive the registration information from another source. Processing logic then sends the registration information to the remote control application at block . The remote control application would then forward the registration information on to the registration service potentially along with additional registration information determined by the remote control application .

If option C is selected at block processing logic receives registration information from the remote control application from a user and or from another source. At block processing logic sends the registration to the registration service. The remote control application may also send registration information to the registration service.

If at block the sent registration information satisfied registration criteria of the registration technique the method continues to block . At block processing logic receives a message from the registration service indicating that the registration information satisfied the registration criteria of the registration technique and that the embedded system is bound to the user account.

If at block the registration information failed to satisfy the registration criteria of the registration technique then the method ends without the embedded system being registered.

The example computing device includes a processing device a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM or Rambus DRAM RDRAM etc. a static memory e.g. flash memory static random access memory SRAM etc. and a secondary memory e.g. a data storage device which communicate with each other via a bus .

Processing device represents one or more general purpose processors such as a microprocessor central processing unit or the like. More particularly the processing device may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor processor implementing other instruction sets or processors implementing a combination of instruction sets. Processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. Processing device is configured to execute the processing logic instructions for performing the operations and steps discussed herein.

The computing device may further include a network interface device . The computing device also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The data storage device may include a machine readable storage medium or more specifically a computer readable storage medium on which is stored one or more sets of instructions embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system the main memory and the processing device also constituting computer readable storage media.

The computer readable storage medium may also be used to store a registration service or a remote control application as described with reference to and or a software library containing methods that call an a registration service or remote control application . While the computer readable storage medium is shown in an example embodiment to be a single medium the term computer readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable storage medium shall also be taken to include any medium other than a carrier wave that is capable of storing or encoding a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies described herein. The term computer readable storage medium shall accordingly be taken to include but not be limited to solid state memories and optical and magnetic media.

The embedded system may include a host processing device a host memory and or a communication module coupled to the host processing device . The embedded system may also include numerous other components that are not shown herein. Examples of such additional components may include light emitting diodes LEDs a power supply regulator fuses ports a user interface digital to analog D A converters analog to digital A D converters field programmable gate arrays FPGAs application specific integrated circuits ASICs and so on.

Host processing device may be a microcontroller or a digital signal processor DSP in one embodiment. Host processing device may alternatively or additionally include a programmable logic controller PLC a field programmable gate array FPGA or a complex programmable logic device CPLD . The host processing device may be configured to perform specific functions related to the operation and control of the device .

Host memory may include random access memory RAM read only memory ROM one time programmable OTP ROM Flash e.g. NOR Flash or other types of memory. Host memory may store an application programming interface API for the communication module . The API may enable the host processing device to send commands and or data to and receive commands and or data from communication module .

Host memory may additionally include a device state for the device . The device state may include a present device state historical device state and or changes made to the device state over a particular period. For example device state in one embodiment includes changes made to the device s state since a connection to a device service was lost. Host memory may also include firmware for the host processing device that configures the host processing device to perform one or more operations that are specific to device .

In some embodiments the host memory may be integrated into the host processing device . For example microcontrollers typically include a processor core memory and programmable input output peripherals. Accordingly if the host processing device is a microcontroller then host memory may be a memory of host processing device .

Communication module may be an integrated circuit IC that is configured to be coupled to host processing device of embedded system . Communication module may be provided by a third party to a manufacturer of the device along with the API and may enable network capability and remote control capability to be easily added to the device . The communication module may include its own processing device a memory and or a network adapter . The processing device may be a microcontroller a DSP a PLC a microprocessor or programmable logic device such as an FPGA or a CPLD. The memory may include a non volatile memory e.g. RAM and or a volatile memory e.g. ROM Flash etc. . In one embodiment memory is integrated into processing device .

Memory may store one or more supported registration techniques . Memory may also store other firmware for the processing device such as firmware that includes instructions for an application interface a service interface and or a registration technique implementer .

Network adapter may be a wired network adapter e.g. an Ethernet adapter or a wireless network adapter e.g. a Wi Fi adapter or other wireless local area network WLAN adapter . Network adapter may also be configured to provide connection to a network or other devices using Zigbee PLC Bluetooth 6LowPAN or other communication protocols. Network adapter may receive notifications and other messages from a registration service device service and or remote control applications. Network adapter may additional send outgoing messages to the registration service device service and or to remote control applications.

Service interface may be executed by processing device to operate on messages and notifications received from a WAN accessible service such as the registration service or device service. Similarly application interface may be executed by processing device to operate on messages and notifications received from remote control applications. Registration technique implementer may be executed by processing device to perform operations associated with a supported registration technique .

The modules components and other features described herein for example in relation to can be implemented as discrete hardware components or integrated in the functionality of hardware components such as ASICS FPGAs DSPs or similar devices. In addition the modules can be implemented as firmware or functional circuitry within hardware devices. Further the modules can be implemented in any combination of hardware devices and software components or only in software.

Some portions of the detailed description have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as receiving sending determining identifying collecting or the like refer to the actions and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

Embodiments of the present invention also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the discussed purposes or it may comprise a general purpose computer system selectively programmed by a computer program stored in the computer system. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic disk storage media optical storage media flash memory devices other type of machine accessible storage media or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. Although the present invention has been described with reference to specific example embodiments it will be recognized that the invention is not limited to the embodiments described but can be practiced with modification and alteration within the spirit and scope of the appended claims. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense. The scope of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

