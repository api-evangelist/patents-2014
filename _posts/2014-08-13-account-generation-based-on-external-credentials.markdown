---

title: Account generation based on external credentials
abstract: Techniques are described for using a credential, such as a user identifier associated with an account on a first service, to create a reusable account on a second service. The account may be initially activated based on the receipt of a passcode sent to the account on the first service. The account may be created with access to a subset of features on the second service. On receiving a password for the account, the account may be modified to access a broader feature set. The account may be reusable via a cookie or other token placed on a user device, and reusability may be disabled on detecting possible security risk conditions associated with the user identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09491155&OS=09491155&RS=09491155
owner: Amazon Technologies, Inc.
number: 09491155
owner_city: Reno
owner_country: US
publication_date: 20140813
---
To increase sales or web site traffic online merchants and other providers of online services may seek to improve the experience of users visiting their web sites. In some cases improvements to user experience may include providing faster and easier ways for users to access a web site. However providing faster and easier access to a web site may increase the risk of unauthorized accesses fraudulent transactions or other types of malicious activities on the web site.

Certain implementations and embodiments will now be described more fully below with reference to the accompanying figures in which various aspects are shown. However various aspects may be implemented in many different forms and should not be construed as limited to the implementations set forth herein. Like numbers refer to like elements throughout.

This disclosure describes implementations of systems devices methods and computer readable media for creating a user account on a second service using a user identifier ID for a user account on a first service. In some implementations a user may send an account request to access the second service the account request specifying a user ID for an account on the first service. In some cases the specified user ID may be a user name user login or other credential associated with the user s account on the first service. For example the second service may be an online store and the first service may be an online social networking service online payment service online merchant e.g. e commerce site online communication service and so forth. The user may navigate to a login page or other portal of the second service and enter the user ID associated with the account on the first service. Implementations may then create an account for the user on the second service the newly created account employing the specified user ID as a user name or login credential. An authentication factor e.g. a passcode may be generated and sent to the user s account on the first service. After retrieving the authentication factor from the account on the first service the user may provide the authentication factor to authenticate the user to the second service and activate the account on the second service. The user may then employ the account to access features of the second service.

In some implementations the creation of the account on the second service may be substantially unperceivable by e.g. transparent to the user. For example the user may perceive that he or she is accessing the second service using the user ID associated with the account on the first service but the user may not perceive that a new account has been created on the second service to provide such access. In some cases the account may be initially created with a password that is unpublished in that it is not provided to the user. Such a password may be generated by a random or pseudo random password generation process and may be sufficiently long to ensure it may not be guessed by another user or process attempting unauthorized access to the account.

In some implementations the account may be configured to have access rights to a subset of the features available on the second service. For example in cases where the second service is an online merchant or another type of electronic commerce web site the account may be used to purchase items but may not be used to modify the customer s shipping address or stored payment methods. Accordingly implementations may provide for a limited access account on the second service that employs a user ID from another account on the first service. Some implementations may enable the user to provide a password or some other type of additional credential for the account. In such cases the access rights of the account may be modified to enable the user to access a broader subset of e.g. all the features of the second service using the account. For example the user may provide a password for the account to edit the user s shipping address modify the stored payment methods for the user or perform other actions. In some cases the initially created account may be employable by the user for various activities that exhibit a lower risk of fraudulent use than other activities. The user may then specify an additional credential e.g. password for the account to enable the use of the account for activities that exhibit a higher risk such as modifying shipping information or payment methods. A subset of features of a service may include all of the available features of the service or may include fewer than all of the available features.

The account on the second service may be reusable by the user to access features of the second service after the creation of the account. In some implementations a token may be stored on a user device and that token may be retrieved and authenticated during subsequent logins to the second service using the user ID of the account on the first service. In some cases the token may be a Hypertext Transfer Protocol HTTP cookie that is associated with the user s account on the second service. In some implementations the use of the token to access the account may be barred based on one or more conditions that indicate a potential fraudulent use of the account such as a security breach of the first service or suspicious user behavior exhibited through the account. In such cases the user may be prompted to re authenticate using the passcode based authentication process described below.

An account may include any type of account that may be employed by a user or a process to access a computing device or a service executing on a computing device. An account may be associated with one or more users and the account may include stored data associated with the user s . Such data may include identifying information for the user s such as name address information contact information demographic information regarding the user s or other information. The data may also include historical information regarding the use of the account by the user s such as browsing history purchase history shipment history and so forth. An account may be accessed through the provision of any number of credentials including but not limited to a user ID e.g. user name login handle nick or tag password token passcode digital certificate response to challenge question and so forth.

In some implementations the user device may execute any number of user applications that each enables the user to access one or more features of a service . The user application s may include web application s provided by web server s executing on one or more server devices and presented to the user through a web browser executing on the user device . In such cases the user application s may be described using a programming language such as any version of Hypertext Markup Language HTML Dynamic HTML DHTML Extensible Markup Language XML Extensible HTML XHTML and so forth. The user application s may also include dynamic content described using a programming language including any version of JavaScript VBScript Perl Common Gateway Interface CGI Cascading Style Sheets CSS other types of style sheets and so forth. Implementations support the use of any web browser to present the user application s .

In some implementations the user application s may be native application s . A native application may be written using any compiled or interpreted programming language including but not limited to Java Objective C C and so forth. A native application may be designed and written to be executed by the processor s of the user device within an operating system OS of the user device and at least partly outside of a web browser. In cases where the user application s include native application s the user application s may communicate with service s executing on the server device s .

The server device s may include any type of computing device including but not limited to a network computer a cloud computing device a mainframe computer or any of the types of computing devices listed with reference to the user device . In some cases two or more of the server devices may comprise a cluster cloud farm or other grouping of multiple devices that coordinate operations to provide load balancing failover support parallel processing capabilities shared storage resources or other aspects. Although examples herein may describe the server device s as physically separate devices implementations are not so limited. In some cases the server device s may include one or more of a virtual computing environment a hypervisor a device emulation or a virtual machine executing on one or more physical computing devices. The server device s are described further with reference to .

In the example of the user device executes a user application that is configured to interact with a service executing on server device s and the user device executes a user application that is configured to interact with a service executing on server device s . However implementations are not limited to this example. In some implementations the user device may execute a user application that is configured to interact with the service and the service . In such cases the operations described as being performed by the user applications and may be performed by a same user application . Moreover in some implementations the service may execute on a same set of one or more server devices as the service . In some implementations the service may include an account that enables the user e.g. employing the user application to access the service .

In some implementations the user may employ the user application to generate and send an account request to the service executing on the server device s . The account request may be a request that the user be provided access to the service . The account request may include a user ID for the account on the service . The user ID may be employable by the user to log into the account on the service . For example the user ID may be a login credential such as a user name handle gamer tag nickname profile name or some other ID that uniquely identifies the user while the user is accessing feature s of the service . In some cases the account request may be generated by the user entering the user ID through a login web page of the user application or through one or more user interface controls that constitute a login dialog or window of the user application . In some cases the account request may be received by a login portal module that is executing as a component of the service . One or both of the service or the login portal module may provide the user ID to an account management module executing on the service device s . Although the example of depicts the account management module as executing separately from the service in some implementations the account management module may execute as a component of the service . In cases where the account request specifies the user ID the account management module may create an account that includes the user ID . The newly created account may be created such that the user may access the account using the user ID as a login credential and employ the account to access one or more features of the service . In some implementations the account may be created with access rights such that the account may be employed by the user to access a subset of the features of the service . In some implementations the account may be created such that the user is not provided an indication that the account has been created.

The server device s may store account information that includes data for the account . Although the example of depicts the account information as being stored on the server device s in some implementations the account information may be stored on another device that is accessible to the server device s over one or more networks. The account information is described further with reference to .

The account management module may generate an authentication factor associated with the account . The authentication factor may be any type of knowledge based authentication factor including one or more passwords one or more passphrases e.g. including multiple words one or more passcodes e.g. a numeric code one or more answers to challenge question s and so forth. The authentication factor may be of any length and may be alphabet numeric or alphanumeric. In some cases the authentication factor may be generated through a random or pseudo random password generation algorithm. The authentication factor may be uniquely associated with the account with respect to a predetermined period of time. For example the authentication factor may have a unique one to one correspondence with the account during a thirty day period five day period or other time period such that another account may not be associated with the same authentication factor during that time period. In some implementations the account management module may store the authentication factor in a table or other data structure that associates the authentication factor with the user ID or another identifier of the account .

In some implementations the service may include a remote service interface module that is configured to communicate with the service executing on the server device s . The remote service interface module may access the service via an application programming interface API exposed by the service to enable external processes to interface with feature s of the service . Although depicts the remote service interface module as a component of the service in some implementations the remote service interface module may execute separately from the service . The remote service interface module may communicate the authentication factor to the account on the service . In some implementations the remote service interface module may send a message such as an email text message or other type of communication to the account and the message may include the authentication factor . The message may also include instructions on how to employ the authentication factor to access the account on the service . In some cases the authentication factor may be valid for a predetermined period of time from when it is generated or from when it is sent to the account . In such cases the authentication factor may not be employed to access the account after the period of time has elapsed.

The user may employ the user application to log into the account on the service and retrieve the authentication factor . The user may then employ the user application to provide the authentication factor to the login portal module . For example the login web page of the service may include a text box or other control in which the user may enter the authentication factor . The login portal module may compare the authentication factor to the authentication factor previously generated for the account . If the entered authentication factor matches the previously generated authentication factor the login portal module may authenticate the user and activate the account .

In some implementations the service may generate a token that is communicated to the user device . The token may be a digital sequence of information that includes any amount of data in any format. The token may be generated via a random or pseudo random process to include a random or pseudo random sequence of data of any length. In some implementations the token may be associated with the account and the server device s may store token information e.g. a table that associates the token with the user ID of the account . In some implementations the token may be uniquely associated with the account . Moreover the token may be associated with a particular communication session between the user device and the server device s such as a Hypertext Transfer Protocol HTTP session or HTTP Secure HTTPS session. The token may be received during one or more subsequent login requests to access the account and such access may be provided if the received token corresponds to the token that was communicated to the user device . Accordingly the token may indicate or establish the communication session between the user device and the server device s across multiple logins to the account . In some implementations the token may be provided to the user device as a HTTP cookie that is stored in a location accessible to the web browser that executes the user application . The creation of the account and the authentication and activation of the account using the passcode based authentication process is described further with reference to .

During subsequent login request s in which the user specifies the user ID to access the service the service may retrieve the token previously stored on the user device . If the retrieved token matches the previously provided token the user may be provided access to the service through the account . If the retrieved token does not match and is therefore not authenticated the user may be prompted to repeat the passcode based authentication process described above. In such cases a new account may be created that is associated with the user ID and the previously created account may be disabled or deleted. In some implementations the information related to the previously created account such as purchase history payment methods and so forth may not be transferred to the new account . Through use of the token implementations enable reusability of the account . Such reusability is described further with reference to .

Implementations may also employ other techniques to provide reusability of the account . For example instead of providing the token to the user device the service may determine a device ID that is uniquely associated with the user device such as a telephone number a processor ID or a media access control MAC address. On creating the account a mapping between the device ID and the user ID may be stored in a table or other data structure. On receiving a subsequent login request specifying the user ID implementations may retrieve the device ID from the requesting user device and compare it to the previously stored device ID associated with the user ID . If the device IDs match the user may be provided access to the service through the account . In cases where the device ID is a telephone number associated with the user device authentication of the user may include querying the telephone service provider to determine whether that telephone number is still associated with the same user .

In some implementations the account may be created with access rights to access a subset of the service . For example the account may be used to purchase items but may not be used to modify the shipping address or stored payment methods for the user . To access a broader subset of the features of the service or all the features the user may be requested to provide a password or some other type of additional credential. The access rights of the account may be modified to enable the user to access a broader subset of e.g. all the features of the service using the account . In some cases until the user provides the additional credential e.g. password the account may not be given access to those features of the service that may enable fraudulent use of the account such as editing a shipping address or altering a payment instrument. By providing an additional credential the user may request that the account be converted to an account with broader access. Such a conversion is described further with reference to .

In some implementations the process for creating the account may be transparent to or unperceivable by the user in that the user may not be aware that the account has been created in response to the account request specifying the user ID . From the perspective of the user the user is being provided access to the service via his or her external credential e.g. the user ID that is the login of the external remote third party service . Accordingly implementations enable a somewhat simplified registration process for the new user to enable expedited access to at least some of the features of the service . In some cases the user may not be aware that the account exists unless or until the user specifies an additional credential e.g. password to convert the account to have broader access to the features of the service .

In some implementations the creation of the account to enable the user to access the service may not depend on the third party service supporting any particular standard for third party authorization or user authentication. For example the third party service may not support a standard that includes the issuing of access tokens by the third party service to enable access to the service such as a version of the OAuth standard.

The various devices of the environment may communicate with one another using one or more networks. Such networks may include public networks such as the Internet private networks such as an institutional or personal intranet or some combination of private and public networks. The networks may include any type of wired or wireless network including but not limited to local area networks LANs wide area networks WANs wireless WANs WWANs wireless LANs WLANs mobile communications networks e.g. 3G 4G etc. and so forth. In some implementations communications between the various devices in the environment may be encrypted or otherwise secured. For example such communications may employ one or more public or private cryptographic keys ciphers digital certificates or other credentials supported by a security protocol such as any version of the Secure Sockets Layer SSL or the Transport Layer Security TLS protocol.

In some implementations the record for the account may also include user information . The user information may be requested and received from the remote service e.g. through an API employed by the remote service interface module . The user information may include a name of the user such as one or more of a first name e.g. given name last name e.g. family name or surname middle name nickname or title. The user information may include a shipping address indicating a location where the user may receive deliveries. The user information may also include other contact information such as a home address a business address email address es telephone number s and so forth. In some cases the user information may include payment information such as a payment history for the user . The user information may also include user preferences such as the preferred language s of the user .

The user information may also include social graph data gathered by the remote service . The social graph data may list any number of friends family members neighbors colleagues or other acquaintances of the user and may indicate their relationship s with the user . The social graph data may indicate immediate acquaintances of the user such as family members friends business colleagues and so forth. The social graph data may also indicate more distant relationships between the user and others such as second degree relationships e.g. friends of friends family members of friends third degree relationships e.g. friends of friends of friends and so forth. In some implementations at least a portion of the user information may be employed to authenticate the user in response to subsequent login requests specifying the user ID as described further with reference to .

In some implementations the social graph data may be employed to determine whether the user submitting a login request to access the account is the same user who submitted a previous login request or who submitted the account request . The social graph data may describe the social networking behavior of the user on one or more online social networks. The social graph data may be determined based on the user s contact lists friend lists address book data messages transaction data purchases refunds activity data product reviews reputational information subscriptions or other information.

The social graph data for the user may include any number of relationships involving the user and other entities. Accordingly the social graph data may describe any number of symmetric or asymmetric relationships between the user and other entities such as other users groups companies brands products organizations and so forth. A symmetric relationship may correspond to a relationship between two parties where both parties have explicitly consented to the relationship. By contrast an asymmetric relationship may correspond to a relationship between two parties where only one party has explicitly consented to the relationship. Each relationship may specify a name or other identification of the other entity and a degree of relationship between the user and the other entity. For example the relationship may be a direct relationship indicating that the user is acquainted with the other entity. Alternatively a relationship may be an indirect relationship such that the user is included in a chain of acquaintance in which any number of entities are intermediary between the user and the other entity e.g. second degree third degree relationships and so forth .

In some cases the social graph data for the user may be requested from the third party service and compared to previously received social graph data for the user to determine whether the identity of the user has changed. Such an analysis may include determining an identity confidence level based on a degree of similarity or overlap between the two sets of social graph data . The identity confidence level may be higher if the two sets of social graph data share a larger number of entities or relationships in common. In some cases the identity confidence level may be based at least partly on reputations of the entities in the social graph data . The reputation of an entity may indicate a degree to which the entity is trusted within a social network. The presence of higher reputation entities in the overlapping social graph data may lead to a determination of a higher identity confidence level. In some implementations the identity of the user may be verified if the determined identity confidence level meets or exceeds a predetermined threshold level.

Although depicts the account information as being stored in a single data structure e.g. table implementations are not so limited. In some implementations the account information may be stored in multiple tables that are associated with each other via the user ID or other key data attribute. For example the authentication factor s may be stored in a separate table from the password s and both tables may employ the user ID as a primary key. Alternatively the multiple tables may employ as a primary key or a secondary key an ID that is uniquely associated with the user ID .

Implementations may ensure the privacy of the user information by requesting permission to use data associated with the user . Such a request may be configured as an opt in in which the user information may not be collected processed or used prior to receiving explicit permission to do so from the user associated with the user information . Alternatively implementations may employ an opt out paradigm in which the collection processing and use of the user information are discontinued on receiving a request to do so from the user .

The user device may include one or more input output I O devices . The I O device s may include input devices such as a keyboard a mouse a pen a game controller a touch input device an audio input device e.g. a microphone a gestural input device a haptic input device an image or video capture device e.g. a camera or other devices. In some cases the I O device s may also include output devices such as a display an audio output device e.g. a speaker a printer a haptic output device and so forth. The I O device s may be physically incorporated with the user device or may be externally placed.

The user device may include one or more I O interfaces to enable components or modules of the user device to control interface with or otherwise communicate with the I O device s . The I O interface s may enable information to be transferred in or out of the user device or between components of the user device through serial communication parallel communication or other types of communication. For example the I O interface s may comply with a version of the RS 232 standard for serial ports or with a version of the IEEE 1284 standard for parallel ports. As another example the I O interface s may be configured to provide a connection over Universal Serial Bus USB or Ethernet. In some cases the I O interface s may be configured to provide a serial connection that is compliant with a version of the IEEE 1394 standard. The user device may also include one or more busses or other internal communications hardware or software that allow for the transfer of data between the various modules and components of the user device .

The user device may include one or more network interfaces that enable communications between the user device and other network accessible computing devices such as the server device s . The network interface s may include one or more network interface controllers NICs or other types of transceiver devices configured to send and receive communications over a network.

The user device may include one or more memories described herein as memory . The memory comprises one or more computer readable storage media CRSM . The CRSM may include one or more of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium a mechanical computer storage medium and so forth. The memory provides storage of computer readable instructions that may describe data structures program modules processes applications or other data for the operation of the user device . In some implementations the memory may provide storage of computer readable instructions or other information in a non transitory format.

The memory may include an OS module . The OS module may be configured to manage hardware resources such as the I O device s the I O interface s and the network interface s and to provide various services to applications processes or modules executing on the processor s . The OS module may include one or more of the following any version of the Linux OS any version of iOS from Apple Corp. of Cupertino Calif. USA any version of Windows or Windows Mobile from Microsoft Corp. of Redmond Wash. USA any version of Android from Google Corp. of Mountain View Calif. USA and its derivatives from various sources any version of Palm OS from Palm Computing Inc. of Sunnyvale Calif. USA and its derivatives from various sources any version of BlackBerry OS from Research In Motion Ltd. of Waterloo Ontario Canada any version of VxWorks from Wind River Systems of Alameda Calif. USA or other operating systems.

The memory may include one or more of the modules described above as executing on the user device such as the user application s . The memory may also include one or more other modules such as a user authentication module or an access control module to secure access to the user device and so forth.

The memory may include data storage to store data for operations of the user device . The data storage may comprise a database array structured list tree or other data structure and may be a relational or a non relational datastore. The data storage may store data such as that described above including one or more of the user ID the authentication factor or the token . The data storage may also store other data such as user authentication information or access control data. In some implementations at least a portion of the information stored in the data storage may be stored externally to the user device on other devices that may communicate with the user device via the I O interface s or via the network interface s .

The server device s may include one or more memories described herein as memory . The memory comprises one or more CRSM as described above with reference to the memory . The memory may include an OS module that is configured to manage hardware resources such as the I O device s the I O interface s and the network interface s and to provide various services to applications processes or modules executing on the processor s . The OS module may include one or more of the operating systems described above with reference to the OS module . The memory may include one or more of the modules described above as executing on the server device s such as one or more of the service s the login portal module the remote service interface module or the account management module . The memory may also include one or more other modules such as a user authentication module or an access control module to secure access to the server device s and so forth.

The memory may include the data storage which may store data for operations of the server device s . The data storage may comprise a database array structured list tree or other data structure and may be a relational or a non relational datastore. The data storage may store data such as that described above as present on the server device s including one or more of the user ID the account information or the authentication factor . In some implementations the data storage may include token information that associates one or more tokens with user s or that associates one or more tokens with account s . In some implementations the data storage may store risk assessment data . The risk assessment data may be employed by implementations to determine whether the account may be subsequently employed to access the service or whether another account is to be created for the user ID . For example the risk assessment data may include information that the remote service has experienced a security breach or has been otherwise compromised such that logins to the service using the user IDs are more likely to be fraudulent e.g. made by unauthorized users or processes . The data storage may also store other data such as user authentication information or access control data. In some implementations at least a portion of the information stored in the data storage may be stored externally to the server device s on other devices that may communicate with the server device s via the I O interface s or via the network interface s .

At the user may employ the user application to generate and send the account request requesting access to the service . The account request may specify the user ID that is the login credential for the account on the service . In some cases the account request may be generated and sent through a login portal web page or through a login dialog of a web page served by the service .

At in response to receiving the account request the login portal module may create the account . The account may be created such that the user ID is a login user name or other credential for the account . The account information may be updated to store information for the account . In some implementations the account may be created with access rights to access a subset of the e.g. lower risk features of the service .

At the authentication factor may be generated for the account . The authentication factor may be of any length and may include any number of characters of any data type. In some cases the authentication factor may be generated independently of any information in the user ID and independently of any information that identifies the account . The user ID may not be derivable based on the authentication factor . For example the authentication factor may be generated using a random or pseudo random algorithm. An association between the authentication factor and the account may be stored in a table or other data structure on the server device s . In some cases the authentication factor may be stored in the account information with other information for the account such that the account information or another data structure provides a mapping between the authentication factor and the user ID . The authentication factor may be employable to authenticate the user to the service and to activate the account on the service . In some cases the authentication factor may be a nonce that is to be used once to authenticate the user within a period of time.

At the authentication factor may be communicated to the account on the service . For example the authentication factor may be sent in an email text message or other type of message to the account . The service may receive the authentication factor and store it such that it is accessible through the account . For example the authentication factor may be sent in a message that is stored such that it is accessible through an inbox or other feature of the service .

At an indication may be provided to the user device indicating that the authentication factor has been sent to the account of the service . The indication may be provided as a message displayed on the login portal web page through which the user generated the account request .

At the user may log into or otherwise access the account on the service by providing one or more credentials such as the user ID and a password for the account . At if the credential s provided by the user at are authenticated the user may be authorized to access the account to enable the user to retrieve the authentication factor .

At the user may enter the authentication factor through a login portal web page or other user interface served by the service .

At a determination may be made whether the received authentication factor is authenticated and is associated with the user ID . Such a determination may be made by comparing the authentication factor entered at with the authentication factor sent to the account at . For example implementations may access the account information or another data structure that stores a mapping between the sent authentication factor and the user ID . The sent authentication factor corresponding to the user ID may be retrieved from the data structure and compared to the received authentication factor . If the two authentication factors do not match the received authentication factor may be determined as not authenticated. If the two authentication factors match the received authentication factor may be determined as authenticated. In some implementations the authentication factor may be generated with a predetermined expiration or timeout period. In such cases the expiration time of the received authentication factor may be compared to the current time at .

If the received authentication factor is determined to be not authenticated or expired the process may proceed to . At an indication may be provided to the user device indicating that the authentication factor entered at is incorrect or unauthenticated. The indication may be provided as a message displayed on the login portal web page through which the user generated the account request . The user may then be given the opportunity to re attempt to enter the correct authentication factor . If the received authentication factor is determined to be authenticated and not expired the process may continue as described with reference to .

At the user may authorize the service to request and receive the user information from the service . In some implementations the authorization may include the user specifying the service as a trusted entity to request the user information regarding the user .

At in some implementations the user information may be requested and retrieved from the service and stored as part of the account information on the server device s . As described with reference to the user information may include one or more of the name the shipping address the contact information the payment information the user preferences or the social graph data for the user .

At the token may be generated and provided to the user device . At the token may be stored on the user device . In some implementations the token is a HTTP cookie that is received and stored by the web browser that presents the user application on the user device . A mapping between the token and the account may be stored on the server device s in the account information or elsewhere. The token may be retrieved and authenticated in response to subsequent login requests that specify the user ID such that the created account is reusable. Such reusability is described further with reference to .

At a login request is sent from the user device to access the previously created account on the service . The login request may specify the user ID . The login request may also include the token . For example in cases where the token is a HTTP cookie the login request may be a HTTP request that includes the cookie.

At a determination is made whether the token is authentic. The determination may be made by comparing the received token to the token that was provided to the user device and stored in the account information or elsewhere on the server device s . If the two tokens correspond to one another the process may proceed to . If not the process may proceed as described with reference to .

At in implementations that employ a timeout or predetermined expiration period for the token a determination is made whether the token has expired. In some implementations the token may be valid for a predetermined duration from the time when the token was generated or communicated to the user device . In such cases the token may not be employed to access the account after the token has expired. If the token is not expired the process may proceed to . If the token has expired the process may proceed as described with reference to .

At a determination may be made whether the risk assessment data indicates a potential misuse of the account . The risk assessment data may include any information that enables implementations to evaluate a risk that the account is being employed to attempt fraud or that the account is being otherwise misused. For example the risk assessment data may include data regarding a security breach or other compromise of the service . Such a breach may indicate that the user ID has been acquired by a malicious user or process and that the account is being accessed for a potentially unauthorized activity.

The risk assessment data may also include data indicating that the login request is from a different geographic location relative to a previous login request or relative to the account request . The location of the login requests may be determined based on geolocation of an IP address of the user device based on information collected by a navigation system of the user device based on information regarding the cell tower servicing a user device that is a mobile device or based on other information. A change in the location of the login request may indicate that a different possibly unauthorized user is using the account to access the service .

The risk assessment data may also include data indicating that the login request is from a different user device relative to a previous login request or relative to the account request . The particular user device that sent the login request or the account request may be determined based on a device identifier that is unique to the user device such as a MAC address processor identifier and so forth.

The risk assessment data may also include information indicating that the account is being used to purchase a high value item e.g. a product that has a value above a predetermined monetary value. Such information may be based on a product page that the user is browsing while the login request is generated. Purchase of a high value item may indicate that the account is being used in an unauthorized manner. In some implementations the risk assessment data may include information regarding other types of user behavior or patterns of user behavior. For example if the user behavior includes suspicious behavior that is anomalous in comparison with typical behavior of the authorized user such behavior may indicate a possible use of the account by an unauthorized user .

If the risk assessment data indicates a potential misuse of the account the process may proceed as described with reference to . If the risk assessment data does not indicate a potential misuse the process may proceed to .

At current user information may be requested from the service . At a determination is made whether the user information has changed since the account was created. If the user information has not changed the process may proceed to and the user may be provided access to the service via the account e.g. the user may be successfully logged into the account . If the user information has changed the process may proceed as described with reference to . For example a change in the social graph data the shipping address the user preferences e.g. the language preferences or other user information may indicate that a different possibly unauthorized user is using the account to access the service .

With reference to at a determination may be made whether one or more challenge questions are to be used to authenticate the user . If so the process may proceed to . If not the process may proceed to and initiate a e.g. passcode based authentication of the user as described in . In some implementations the user may be given a choice whether to be authenticated based on challenge question s or through the passcode based authentication. In some cases the determination whether to use challenge question s may be based on whether sufficient user information has been received to enable the use of challenge question s to authenticate the user . In some cases the determination to use challenge question s may be based on the particular criteria that caused the process to reach instead of . For example the nature of the risks described in the risk assessment data may be analyzed to determine whether to use challenge question s . In some cases challenge question s may be used if the user no longer has access to the account on the service . In some implementations if the user no longer has access to the account the user may be asked to create a password for the account as described with reference to if the user is able to correctly answer the challenge question s as described below.

At the user may be requested to answer one or more challenge questions regarding purchase history described in the payment information regarding the social graph data or regarding other user information . Such challenge questions may be used to determine whether the user is the same user for whom the account was created. For example the user may be asked to correctly identify one or more past purchases from a list of options. As another example the user may be asked to correctly identify one or more acquaintances described in their social graph data .

At a determination is made whether the user has answered the challenge question s correctly based on comparing the user s answers to the user information . If the user answers the challenge question s correctly the process may proceed to and the user may be provided access to the service via the account . If the user fails to answer the challenge question s correctly the process may proceed to . At the process for passcode based authentication of the account may be initiated and may proceed as described with reference to . In some cases a new account may be created based on the user ID as described with reference to and the previously created account may be deleted or disabled.

At the user may employ the user application to request access to a feature of the service through the account . At a determination is made whether the requested feature is included in the access rights of the account . The access rights may be the set of access rights established for the account when it was created. In some implementations the access rights may be a subset of the e.g. lower risk features of the service . For example the account may have been initially configured to have access to features enabling the user to perform one or more of the following purchase items using a previously added payment method e.g. credit card or payment card view the purchase history of past purchases shipments or other transactions view address and shipping information or purchase items from a subset of the catalog of the service such as items below a threshold monetary value.

If the requested feature is included in the access rights the process may proceed to and provide access to the requested feature. If the requested feature is not included in the access rights the process may proceed to .

At the user may be requested to provide one or more additional credentials . For example the user may be requested to provide a password that may be associated with the account . At the user may provide the additional credential s . In some implementations the providing of the additional credential s may be based at least partly on an authentication of the user through the service . For example the user may provide the additional credential s after logging into the user s account on the service . In some cases the request for the additional credential s may be sent to the user s account on the service . The authentication of the user on the service may proceed as described with reference to .

At the credential s may be validated. For example if the credential s include a password the password may be analyzed to determine whether it is of a sufficient length or complexity to provide adequate security for the account . If the credential s are determined to be invalid the process may proceed to and notify the user that the credential s are invalid. The user may then provide different credential s . In some implementations the validation of the credential s may also be based at least partly on the authentication of the user through the service . For example the credential s may not be determined to be valid unless the credential s are received in a communication sent from the service during an authenticated login of the user to the user s account on the service . If the credential s are determined to be valid the specified password may be designated e.g. set for the account . The process may then proceed to .

At the access rights for the account may be modified and replaced with a different set of access rights to enable the account to access the feature requested at . In some cases the access rights may include all the features of the service or may include a broader subset of the features that the subset accessible through the access rights . The access rights may include those e.g. higher risk features that may be more susceptible to fraud or misuse such as one or more of the following edit shipping information and contact information e.g. address information for the user edit payment method s including credit card s payment card s or other payment instrument s stored for the user purchase items from the entire catalog provided by the service including higher value items or associate a user device with the account .

In some implementations the process of may also include at least a portion of the process for passcode based authentication of the user as described in . For example if the user requests to add a password to the account the user may be asked to perform the passcode based authentication to verify the user s identity through the account . In some cases if the user requests to add a password to the account the user may be asked to answer one or more challenge questions as described with reference to .

In some cases the user may request access to a feature of the account and the feature may be deemed sensitive or high risk. In such cases the user may be prompted to repeat the passcode based authentication process as described in to verify the user s identity. For example the user may be sent through the passcode based authentication process if the user requests to add a password to the account add a payment method change a shipping address create a sub account under the account subscribe to other service s or perform other activities.

At the user may employ the user application to request access to a feature of the service through the account . At a determination is made whether the requested feature is included in the access rights of the account as described with reference to . If the requested feature is included in the access rights the process may proceed to and provide access to the requested feature. If the requested feature is not included in the access rights the process may proceed to .

At the process for e.g. passcode based authentication of the user may be initiated as described with reference to . At a determination is made whether the authentication is successful. If not at the user may not be provided access to the requested feature. In some cases the user may be prompted to repeat the passcode based authentication. If the authentication is successful the process may proceed to and the user may be provided access to the requested feature.

Those having ordinary skill in the art will readily recognize that certain steps or operations illustrated in the figures above may be eliminated combined or performed in an alternate order. Any steps or operations may be performed serially or in parallel. Moreover the methods described above may be implemented as one or more software programs for a computer system and may be encoded in a computer readable storage medium as instructions executable on one or more processors.

Embodiments may be provided as a computer program product including one or more non transitory computer readable storage media having stored thereon instructions in compressed or uncompressed form that may be used to program a computer or other electronic device to perform processes or methods described herein. The computer readable storage media may include one or more of an electronic storage medium a magnetic storage medium an optical storage medium a quantum storage medium and so forth. For example the computer readable storage media may include but are not limited to hard drives floppy diskettes optical disks read only memories ROMs random access memories RAMs erasable programmable ROMs EPROMs electrically erasable programmable ROMs EEPROMs flash memory magnetic or optical cards solid state memory devices or other types of physical media suitable for storing electronic instructions. Further embodiments may also be provided as a computer program product including a transitory machine readable signal in compressed or uncompressed form . Examples of machine readable signals whether modulated using a carrier or unmodulated include but are not limited to signals that a computer system or machine hosting or running a computer program may be configured to access including signals transferred by one or more networks. For example a transitory machine readable signal may comprise transmission of software by the Internet.

Separate instances of these programs can be executed on or distributed across any number of separate computer systems. Thus although certain steps have been described as being performed by certain devices software programs processes or entities this need not be the case and a variety of alternative implementations will be understood by those having ordinary skill in the art.

Additionally those having ordinary skill in the art readily recognize that the techniques described above can be utilized in a variety of devices environments and situations. Although the present disclosure is written with respect to specific embodiments and implementations various changes and modifications may be suggested to one skilled in the art. It is intended that the present disclosure encompass such changes and modifications that fall within the scope of the appended claims.

