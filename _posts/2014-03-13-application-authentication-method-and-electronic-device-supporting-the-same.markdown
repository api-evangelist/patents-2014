---

title: Application authentication method and electronic device supporting the same
abstract: A method for operating an electronic device is provided. The method includes executing, by a processor of the electronic device operable in a first mode (e.g. a trusted execution environment (TEE)) or a second mode (e.g. a non-trusted execution environment (NTEE)), wherein the first mode is more secure than the second mode; receiving, by the processor operating in the first mode, data or information related to a first software program stored in a first memory region; and authenticating, by the processor operating in the first mode, at least a portion of the data or information using a second software program stored in a second memory region.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09280655&OS=09280655&RS=09280655
owner: Samsung Electronics Co., Ltd
number: 09280655
owner_city: 
owner_country: KR
publication_date: 20140313
---
This application claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application No. 61 779 239 filed on Mar. 13 2013 in the U.S. Patent and Trademark Office and Korean Patent Application No. 10 2013 0157463 filed on Dec. 17 2013 in the Korean Intellectual Property Office the entire disclosure of each of which is incorporated herein by reference.

The present invention generally relates to an application authentication method and electronic device supporting the same that can authenticate an application requesting an operation at run time.

Advanced electronic devices may contain a non trusted execution environment NTEE and a trusted execution environment TEE . The NTEE contains an ordinary Operating System OS drivers middleware and applications. An example of such a system is Android which may contain the Linux kernel device drivers the Android execution environment Android middleware and applications. The TEE may contain security critical components that are accessed by NTEE components at run time to execute specific security related operations. Typically the TEE may contain a secure OS secure drivers secure middleware and trusted applications TA . In addition the TEE may contain a special module that handles communication between the NTEE and the TEE the monitor. To preserve the integrity of the TEE all components thereof are governed by a secure boot such that the integrity of the TEE is examined at system boot time.

NTEE components may request the TEE to perform certain security critical operations. Such an NTEE component may be referred to as an NTEE client. Examples of NTEE clients may include NTEE OS native applications Android applications and the like. Typically a TEE operation request issued by an NTEE client is received by the NTEE OS middleware and is forwarded to the NTEE driver which is responsible for communication with the TEE. The NTEE client may also communicate directly with the TEE driver.

The TEE driver forwards the request for TEE operation to the monitor. The monitor switches to the TEE and passes the request to a Request Handler of the secure OS. The secure OS identifies a suitable trusted application to handle the request and sends the request to the identified trusted application to perform a specified operation. The secure OS may send the request directly to the trusted application or send the same through the secure middleware layer. Upon receiving the request the trusted application executes the requested operation.

Meanwhile a TEE operation request may contain some data to be processed by a corresponding trusted application. A TEE operation request may also contain a reference to data in the NTEE memory that has to be processed. In addition a TEE operation request may contain a reference to the NTEE memory where results of the TEE operation are to be placed. The system memory is configured in such a way that the NTEE memory is fully accessible by the TEE secure OS for read and write operations and the TEE memory is blocked from any access by NTEE components.

Since a trusted application in the TEE may perform a security critical operation only for a specific NTEE component it is important for the trusted application to check the integrity of an NTEE client that has requested such an operation.

Existing solutions such as ARM TrustZone Client API Specification 3.0 and Global Platform Client API Specification 1.0 provide a mechanism for such an NTEE client integrity check. Namely both specifications instruct the NTEE environment to collect specific information about the client and send the collected information to the TEE trusted application through the TEE driver as so called log in information . For example the NTEE environment may check integrity of the NTEE client by calculating a hash of the NTEE client executable file. Another example is to forward some NTEE client supplied data as an authentication token for the TEE trusted application.

Such an approach requires that all NTEE components engaged in NTEE client authentication be trusted by the TEE trusted application. Namely the TEE trusted application should trust the NTEE OS NTEE driver and NTEE middleware. However practical implementation of the NTEE often assumes that some of the NTEE components may be freely changed and thus cannot be trusted by the TEE.

For example the NTEE middleware may be changed by malicious software in such a way that a hash of a malicious NTEE client executable file is substituted by the hash of the valid NTEE client executable file. The NTEE driver can be replaced with a different one that intercepts client identification data and provides the same to a malicious NTEE client.

Under the condition that NTEE components can be changed by malicious software existing solutions based on NTEE client authentication using NTEE components cannot provide a high level of security. Hence the TEE trusted application cannot fully trust the NTEE client authentication data provided by NTEE components.

The present invention has been made to address at least the above mentioned problems and or disadvantages and to provide at least the advantages described below.

Accordingly an aspect of the present invention is to provide a mechanism for authenticating an NTEE client which requests a corresponding trusted application to perform an operation using TEE components trusted by the trusted application. In addition an aspect of the present invention is to provide an application authentication method and electronic device supporting the same that can reliably authenticate an NTEE client in execution.

In accordance with an aspect of the present invention a method for operating an electronic device is provided. The method includes executing by a processor of the electronic device operable in a first mode or a second mode the first mode wherein the first mode is more secure than the second mode receiving by the processor operating in the first mode data or information related to a first software program stored in a first memory region and authenticating by the processor operating in the first mode at least a portion of the data or information using a second software program stored in a second memory region.

In accordance with another aspect of the present disclosure an electronic device is provided. The electronic device includes a memory unit configured to have a first region and a second region and a processor configured to execute a first mode and a second mode wherein the first mode is more secure than the second mode wherein the processor receives data or information related to a first software program stored in the first region of the memory unit in the first mode and authenticates at least a portion of the received data or information using a second software program stored in the second region thereof in the first mode.

Hereinafter embodiments of the present invention are described in detail with reference to the accompanying drawings. The same reference symbols are used throughout the drawings to refer to the same or like parts. Detailed descriptions of well known functions and structures incorporated herein may be omitted to avoid obscuring the subject matter of the present invention.

The electronic device of the present invention is a device containing the NTEE and TEE. For example the electronic device may be a smartphone tablet computer mobile phone video phone e book reader desktop computer laptop computer netbook computer personal digital assistant portable multimedia player MP3 player mobile medical instrument electronic bracelet electronic necklace electronic appcessory camera wearable device electronic clock wrist watch home appliance such as a refrigerator air conditioner cleaner oven washing machine or air cleaner intelligent robot TV digital video disc audio system medical instrument such as a Magnetic Resonance Angiography MRA scanner Magnetic Resonance Imaging MRI scanner Computed Tomography CT scanner tomograph or ultrasonic diagnostic equipment navigation aid Global Positioning System GPS receiver Event Data Recorder EDR Flight Data Recorder FDR set top box streaming box such as Samsung HomeSync Apple TV or Google TV electronic dictionary car infotainment device marine electronic device such as a marine navigation system or gyrocompass avionics instrument security equipment electronic clothing electronic key camcorder game console head mounted display flat panel display device electronic frame electronic album part of a furniture or building supporting communication electronic board electronic signature receiver projector and the like or a combination thereof. It should be understood by those skilled in the art that the electronic device of the present invention is not limited thereto.

In the following description the word module refers to a software component a hardware component a firmware component or a combination thereof which is capable of carrying out a function or an operation. Module may be used interchangeably with unit block circuit or the like. A module may be implemented mechanically or electronically. For example a module having a specific function may be implemented using at least one of an Application Specific Integrated Circuit ASIC a Field Programmable Gate Array FPGA and a Programmable Logic Device PLD .

Referring to the electronic device includes a display unit a key input unit a memory unit a wireless communication unit an audio processing unit including a speaker SPK and a microphone MIC a camera module a sensor unit and a control unit .

The display unit displays data on the screen under control of the control unit . That is when the control unit stores processed e.g. decoded or resized data in a data storage e.g. internal memory of the display unit or the memory unit the display unit converts the stored data into an analog signal and displays the analog signal on the screen. The display unit may include a display panel or a holographic panel. The display panel may be realized using Liquid Crystal Display LCD devices or Active Matrix Organic Light Emitting Diodes AMOLED . The display panel may be configured to be flexible transparent or wearable. The display panel may be combined with a touch panel to form a single module. The holographic panel may use light interference to display a three dimensional image in the air. The display unit may include a control circuit to control the display panel or holographic panel.

The touch panel may be placed on the display panel of the display unit . Specifically the touch panel may be an add on type placed on the display panel or an on cell or in cell type inserted into the display panel .

The touch panel may be a capacitive resistive infrared or ultrasonic touch panel to detect user input and send an event corresponding to the user input to the control unit . The touch panel may include a controller not shown . For example the controller may determine a representative one of touch points and send coordinate information of the representative touch point to the control unit . Alternatively the control unit may directly control touch operation of the touch panel .

The key input unit includes one or more touch keys that can detect contact with or proximity to a finger or an object. The key input unit may generate an event corresponding to user input e.g. share or play and send the event to the control unit . The key input unit may further include a different type of key than touch keys. For example the key input unit may include at least one dome key.

The memory unit stores data generated by the electronic device or received from an external device for example a server desktop computer or tablet computer through the wireless communication unit under control of the control unit .

The memory unit includes a main memory and a secondary memory. The main memory may include a Random Access Memory RAM . The secondary memory may include a disk RAM Read Only Memory ROM and flash memory. The main memory may store various programs such as a boot program operating system and applications loaded from the secondary memory. When the electronic device is turned on a boot program is loaded into the main memory first. The boot program loads the operating system into the main memory. The operating system may load a specific application into the main memory for execution. The control unit such as an application processor may access the main memory fetch instructions of the application decode the instructions and execute operations according to decoding results. That is a program may be loaded into the main memory and executed by a processor such as an application processor. The memory unit may further include as an external memory a memory card such as a CF Compact Flash SD Secure Digital Micro SD Mini SD xD extreme Digital or a Memory Stick.

The wireless communication unit performs voice video or data communication with an external device through a network under control of the control unit . The wireless communication unit may include a radio frequency transmitter for upconverting the frequency of a signal to be transmitted and amplifying the signal and a radio frequency receiver for low noise amplifying a received signal and downconverting the frequency of the received signal. The wireless communication unit may include a mobile communication module based on 3G 3.5G or 4G mobile communication a digital broadcast reception module such as a Digital Multimedia Broadcasting DMB module and a local area communication module such as a Wi Fi module Bluetooth module or Near Field Communication NFC module .

The audio processing unit inputs and outputs audio signals for speech recognition voice recording digital recording and calls in cooperation with the speaker SPK and microphone MIC. The audio processing unit converts a digital audio signal from the control unit into an analog audio signal through digital to analog D A conversion amplifies the analog audio signal and outputs the amplified analog audio signal to the speaker SPK. The audio processing unit converts an analog audio signal from the microphone MIC into a digital audio signal through analog to digital A D conversion and sends the digital audio signal to the control unit . The speaker SPK converts an audio signal from the audio processing unit into a sound wave and outputs the sound wave. The microphone MIC converts a sound wave from a person or other sound source into an audio signal.

The camera module captures still images or moving images. The camera module may include at least one image sensor such as a front lens or rear lens an image signal processor and an LED flash.

The sensor unit senses a physical quantity such as acceleration pressure amount of light or a change therein and sends sensed information e.g. a voltage change v to the control unit . The sensor unit senses the state of the electronic device e.g. movement and sends sensed information to the control unit . The sensor unit may include at least one of a gesture sensor gyro sensor atmospheric pressure sensor magnetic sensor acceleration sensor grip sensor proximity sensor RGB red green and blue sensor biometric sensor temperature sensor humidity sensor illumination sensor and ultraviolet sensor. The sensor unit may further include an electronic nose sensor electromyography sensor electroencephalogram sensor electrocardiogram sensor or fingerprint sensor. The sensor unit may further include a control circuit to control at least one of the sensors therein. Sensors of the sensor unit may be implemented as a single chip or may be separately implemented as multiple chips.

The control unit controls the overall operation of the electronic device controls signal exchange between internal components thereof performs data processing and controls supply of power from a battery to the internal components. The control unit may include one or more processors. For example the control unit includes at least one Application Processor AP and at least one Communication Processor CP . The AP and CP may be formed as a single integrated circuit package or may be formed as separate integrated circuit packages.

The AP executes the operating system or applications to control hardware and software so as to process various data and perform various operations. The AP may be implemented as a System on Chip SoC . In one embodiment the control unit may further include a Graphics Processing Unit GPU .

The CP performs data link management and protocol conversion for communication between the electronic device and external devices through networks. The CP may be implemented as a System on Chip SoC . The CP may perform a part of multimedia control. For example the CP may perform terminal identification and authentication in a communication network using a Subscriber Identity Module SIM card. The CP may provide the user with services related to voice calls video calls text messages and packet data. The CP may control data transmission and reception of the wireless communication unit .

The AP or CP may load instructions or data received from a nonvolatile memory or another component in a volatile memory for execution. The AP or CP store data received from or created by another component in the nonvolatile memory.

The programming module may reside in the main memory memory unit of the electronic device . The programming module may be composed of software hardware firmware or a combination thereof. The programming module includes an NTEE a TEE and a monitor .

The NTEE includes a kernel NTEE middleware and NTEE applications and . The kernel controls and manages system resources such as a bus processor or memory used to support operations or functions of the NTEE middleware NTEE Application Programming Interface API not shown and the NTEE applications and . The kernel provides an interface that enables the NTEE middleware NTEE API and NTEE applications and to access control and manage individual components of the electronic device . The kernel may include a system resource manager and drivers. The system resource manager performs resource control and resource allocation and release. The drivers control input and output of corresponding components according to commands from the kernel . The drivers may include a display driver memory driver USB driver keypad driver Wi Fi driver audio driver and the like. In particular the drivers may include a TEE driver

The NTEE middleware relays data between the NTEE API or NTEE applications and and the kernel . As part of handling processing requests from the NTEE applications and the NTEE middleware loads balance system resources by for example assigning priorities to the processing requests.

The NTEE API provides interfaces and functions that may be invoked by the NTEE applications and to use or control services provided by the NTEE middleware and the kernel . Here the services may be related to management or control of files windows images characters and the like.

The NTEE applications and include a preloaded application a native application a third party application and the like.

The TEE includes a secure OS a secure middleware a client authentication block responsible for NTEE client authentication and a trusted application . The secure OS controls and manages system resources needed to support operations or functions of the secure middleware the client authentication block the TEE API not shown and the trusted application . The secure OS provides an interface that enables the secure middleware TEE API and trusted application to access control and manage individual components of the electronic device . The secure OS controls e.g. block or permit access e.g. read or write operation from the NTEE . The secure OS includes a request handler which receives and processes a TEE operation request from the NTEE . Here the TEE operation request may contain identification information of a corresponding NTEE client e.g. NTEE application .

The secure middleware relays data between the TEE API or trusted application and the secure OS . As part of handling processing requests from the trusted application the secure middleware loads balance system resources by for example assigning priorities to the processing requests.

The client authentication block authenticates an NTEE client i.e. NTEE application having issued a TEE operation request. Specifically upon reception of an authentication request for an NTEE client from the trusted application the client authentication block determines whether to authenticate the NTEE client and sends the determination result to the trusted application . The trusted application may accept the request from the NTEE client and perform a requested operation or may reject the request therefrom according to the determination result. The client authentication block contains memory configuration data for access to NTEE memory. The client authentication block also includes a memory parser for memory analysis.

The trusted application corresponds to a preloaded application a native application or a third party application. In particular the trusted application provides the client authentication block with parameters used to authenticate an NTEE client such as an NTEE client identifier NTEE client Reference Integrity Measurement Data RIMD and a Reference Integrity Metric RIM verification key.

The monitor handles interaction between the NTEE and the TEE . The NTEE may be not allowed to directly access the TEE and may be allowed to access the TEE via the monitor . Here for example TrustZone technology from Advance RISC Machine ARM may be applied to the operation of the monitor .

Referring to the memory unit includes an NTEE memory region and a TEE memory region . The NTEE memory region and the TEE memory region correspond to one or more physical memory components or to a combination of heterogeneous memory components. The NTEE memory region is set so that a TEE component such as the secure OS may access the same for read and write operations. The TEE memory region is set so that an unauthenticated NTEE component cannot access the same. The memory parser accesses the NTEE memory region for reading and parsing. The memory parser accesses the NTEE memory region through the secure OS . The memory parser operates according to the memory configuration data and an authentication request from a TEE trusted application . The memory configuration data contains information about NTEE memory locations of various application related control structures in the NTEE OS kernel. Namely NTEE client control data structures contain at least NTEE client identification information and NTEE client memory management information.

Referring to at step an NTEE application in the NTEE sends a TEE operation request to the NTEE middleware . At step the NTEE middleware obtains identification information of the NTEE application from the kernel . At step the NTEE middleware instructs the TEE driver to request TEE operation and inserts identification information of the NTEE application into the TEE operation request. Alternatively the NTEE application may directly contact the TEE driver refer to . Specifically the NTEE application may directly instruct the TEE driver to request TEE operation and insert identification information of the NTEE application into the TEE operation request. Then the TEE driver obtains identification information of the NTEE application from the kernel and inserts the obtained identification information into the TEE operation request.

In response to the instruction from the NTEE middleware or the NTEE application at step the TEE driver invokes the monitor to switch to the TEE. At step the TEE driver sends the TEE operation request together with NTEE client identification information via the monitor to the TEE . In the TEE the request handler receives and processes the TEE operation request. Specifically at step the request handler identifies a trusted application to handle the TEE operation request. At step the request handler forwards the TEE operation request together with the NTEE client identification information to the identified trusted application .

Upon reception of the operation request and NTEE client identification information at step the trusted application sends an identification request to the client authentication block providing NTEE client identification information NTEE client RIMD and RIM verification key as parameters of the request.

At step the client authentication block determines whether to authenticate the NTEE client. More specifically step may be performed as follows.

The client authentication block accesses the memory configuration data and finds a data structure containing the NTEE client identification information provided by the trusted application in the kernel memory of the NTEE memory region . The client authentication block further analyzes the found data structure using the memory configuration data to locate memory management information related to the NTEE client refer to .

Here the memory management information contains at least correspondence of memory regions with client application code data and other application related information. Hence the memory parser of the client authentication block analyzes at least memory regions containing code of the NTEE client other memory regions may also be analyzed as well to produce a list of addresses of memory regions suitable for application authentication.

The memory parser computes a specific value corresponding to the NTEE client using the NTEE client identification information to perform NTEE client authentication. Specifically the memory parser calculates a pre defined hash function over contents of memory regions in the address list to produce a hash value. The client authentication block decrypts a digital signature from NTEE client RIMD using a RIM verification key to obtain a reference hash value. The client authentication block compares the reference hash value with the hash value obtained by the memory parser

At step the client authentication block produces an authentication result for the NTEE client. For example when the reference hash value matches the obtained hash value the client authentication block generates an authentication result indicating success of NTEE client authentication. Otherwise the client authentication block generates an authentication result indicating failure of NTEE client authentication.

At step the client authentication block sends the authentication result to the trusted application . At step the trusted application examines the received authentication result to determine if the NTEE client has been authorized. If the authentication result indicates success of NTEE client authentication at step the trusted application executes the requested operation. If the authentication result indicates failure of NTEE client authentication at step the trusted application rejects execution of the requested operation or performs only a portion of the requested operation. Alternatively the trusted application may provide the user with the authentication result indicating success or failure of authentication and may request the user to decide a subsequent action e.g. rejection limited execution or continued execution according to the authentication result.

In another embodiment the memory configuration data may contain additional information on specific NTEE memory regions. In this case the TEE trusted application may authenticate other memory regions of the NTEE being not limited to a memory region assigned to a specific NTEE client.

In another embodiment NTEE kernel code and static data can be authenticated by the TEE trusted application . To achieve this the client authentication block needs to be capable of accessing the NTEE kernel code and static data memory through the memory configuration data. As a result the client authentication block may calculate a hash value of the NTEE kernel code and static data and compare the calculated hash value with the reference hash value in the same way as for NTEE clients.

In another embodiment NTEE kernel loadable modules may be authenticated by the TEE trusted application . To achieve this the client authentication block needs to be capable of accessing NTEE kernel loadable modules code memory according to the memory configuration data. As a result the client authentication block may calculate a hash value of the NTEE kernel loadable modules and compare it with the reference hash value in the same way as for NTEE clients.

In the above embodiments NTEE clients such as NTEE native applications and Android applications middleware kernel kernel loadable modules application programming interfaces and the client authentication block are types of software programs.

One embodiment of the present invention may be applied to a secure storage system such as the electronic device . In a secure storage system an NTEE client may request a TEE secure storage TA trusted application to securely save some data. The TEE secure storage TA may identify the NTEE client by a hash value of the NTEE client code in the NTEE memory and securely save the data together with the hash value. Later when the NTEE client requests its data the TEE secure storage TA may authenticate the NTEE client by calculating a hash value over NTEE memory code and comparing it with the previously stored hash value. If the two hash values match the TEE secure storage TA provides decrypted data back to the requesting NTEE client. Otherwise the TEE secure storage TA may consider the NTEE client as unauthenticated and may not provide the decrypted data thereto.

One embodiment of the present invention may be applied to a secure run time monitoring system for the NTEE integrity status. A TEE trusted application may have a list of NTEE applications to be checked for integrity upon request from the NTEE or periodically check. The TEE trusted application may request the client authentication block to check integrity status of specific NTEE applications. Based on the results of the integrity check the TEE trusted application can modify its behavior.

Alternatively in addition to the integrity check for NTEE applications the TEE trusted application may check integrity of the NTEE kernel and loadable kernel objects e.g. drivers . If the integrity check of the NTEE fails the TEE trusted application may take special actions. Here the special actions may include without being limited to notifying other TEE trusted applications of the NTEE integrity check results requesting the TEE to limit its operation and the like. Alternatively the trusted application may provide the user with the integrity check result indicating success or failure and may request the user to decide a subsequent action according to the integrity check result.

In various embodiments a memory region or a portion thereof authenticatable by the trusted application may be a memory region or a portion thereof of a different device connectable in a wired or wireless manner with the electronic device .

The application authentication method of the present invention may be implemented as computer programs and may be stored in various computer readable storage media. The computer readable storage media may store program instructions data files data structures and combinations thereof. The program instructions may include instructions developed specifically for the present invention and existing general purpose instructions. The computer readable storage media may include magnetic media such as a hard disk and floppy disk optical media such as a CD ROM and DVD magneto optical media such as a floptical disk and memory devices such as a ROM RAM and flash memory. The program instructions may include machine codes produced by compilers and high level language codes executable through interpreters.

While the present invention has been shown and described with reference to various embodiments thereof it should be understood by those skilled in the art that many variations and modifications of the method and apparatus described herein will still fall within the spirit and scope of the present invention as defined in the appended claims and their equivalents.

