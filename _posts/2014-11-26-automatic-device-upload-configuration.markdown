---

title: Automatic device upload configuration
abstract: Various embodiments of the present technology involve the configuration of a wireless-enabled memory card. For example, a client application associated with a content management system (CMS) can obtain a computing device's current wireless configuration information, request a temporary authentication token from the CMS, encode this information in a visual code, and display this visual code on a display screen of the computing device. A user can capture an image of the visual code with a camera, thereby, causing the memory card to extract the wireless configuration information and token from the image, and connect to the specified wireless network. Once connected, the temporary authentication token is exchanged for an access token allowing the memory card to automatically send images captured by the camera to an account with the CMS for storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436769&OS=09436769&RS=09436769
owner: Dropbox, Inc.
number: 09436769
owner_city: San Francisco
owner_country: US
publication_date: 20141126
---
The present technology pertains to content storage and more specifically pertains to providing a method for configuring a computing device to automatically delivery content to a content management system for storage.

A Secure Digital SD card is a nonvolatile memory card often used by digital cameras to temporarily store image data e.g. pictures videos etc. captured using a digital camera. Since memory cards are relatively small in size and storage capacity the imaged data must be transferred to a host computer for safer and more long term storage. In order to transfer the image data a memory card must connect with the host computer. For example the digital camera can connect to the host computer via a wire where once connected a user must search for the holder containing the image data and then transfer the selected images or videos from the image data to a destination folder on the host computer or on an external storage. This process can be cumbersome and thus causing some users to infrequently upload and save their photos or to forego the process altogether. Thus in order to makes the process more convenient for users wireless enabled memory cards were developed that made it possible to automatically store images captured on for example a digital camera that does not have a wireless capability itself. In order to enable automatic image storing using a wireless enabled memory card a user must configure the memory card to their home wireless connection select a folder on a computer to store the images on and the like which can also be quite cumbersome. Additionally the folders to which a user is able to direct the storage of these images is limited to computing devices on the same wireless network. Thus a method for automatically configuring a wireless enabled memory card to save image data captured using a digital camera to a remote folder is desirable.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for configuring a wireless enabled memory card to automatically store photos to a remote folder via a wireless connection. In accordance with various embodiments a content management system CMS provides remote access to content items e.g. photos videos documents etc. from multiple computing devices each associated with a single user account. In order to enable access to the same content item from each of these devices the CMS and each computing device maintains a local copy of the content items. Changes made to one content item on one device are sent to the CMS which then causes each of the other devices to sync the content item with the updated version stored with the CMS. In order to enable this syncing process each of the computing devices includes a client application that communicates with the CMS to maintain up to date versions or copies of each content item.

Accordingly in order to configure a wireless enabled memory card the client application can obtain a computing device s current wireless configuration information e.g. SSID password etc. request a temporary authentication token from the CMS encode this information in a visual code and display this visual code on a display screen of the computing device. Accordingly a user can capture an image of the visual code with their digital camera thereby causing a processor of the memory card to extract the wireless configuration information and authentication token from the image and then attempt to connect to the specified wireless network. Once successfully connected the temporary authentication token can be exchanged for an access token which will allow the memory card to automatically send images captured by the digital camera to the user s account with the CMS for storage.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the art will recognize that other components and configurations may be used without departing from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for a method to quickly configure a wireless enabled memory card to automatically store photos to folder associated with for example a user s account with a content management system CMS . For example shows an example interaction of various devices and components between digital camera and CMS in accordance with at least one embodiment. In this example camera is a digital camera capable of capturing photos as image data and storing the image data on memory card shown in . Memory card in this example is a wireless enabled nonvolatile memory device that stores photos captured by camera as image data.

Accordingly in this example memory card includes processor in communication with wireless components that enable wireless communication storage component where the image data is physically stored and card interface which physically interfaces and connects with camera via slot . Wireless components is additionally connected to antenna which enables communication between memory card and wireless router through a local or home network . Accordingly router is in communication with CMS through large area network LAN via an internet service provider.

Thus upon capturing an image with camera image data for the image is sent to memory card connected to camera through a card interface and slot connection. Through slot the image data is sent by processor to storage for temporary storage. Then upon coming within range of router and connecting home network processor can be configured to automatically send the image data via antenna through home network to router . Accordingly router relays the image data through LAN for more permanent storage in CMS .

In order to enable the automatic sending of image data from memory card to CMS however a user must configure memory card with information for home network and information for a destination within CMS to store the image data. In at least one embodiment CMS provides remote storage and access to content items e.g. photos videos documents etc. to multiple computing devices each associated with a single user account. In order to enable access to the same content items from each of these devices CMS and each computing device maintains a local copy of the content items and changes made to one content item on one device are sent to CMS which then causes each of the other devices to sync the changes made to the content item. In order to enable this syncing process each of the computing devices includes a client application that communicates with the CMS to maintain up to date versions or copies of each content item.

In accordance with at least one embodiment the client application can obtain a computing device s current wireless configuration information e.g. SSID password etc. request a temporary authentication token from CMS encode this information in a network configuration identifier or visual code and display this visual code on a display screen of the computing device. shows an example wherein user is requesting a visual code to configure camera from CMS on computing device in accordance with at least one embodiment. Thus instead of downloading a program for memory card onto computing device and manually inputting the wireless configuration information and a local destination folder to save the captured images user can open the client application associated with CMS and request a visual code. shows such an example transfer of information between client application and web browser of computing device and CMS when user requests a visual code in accordance with at least one embodiment. In this example the request includes information to access home network and in response CMS generates a visual code that has information for home network and a temporary authorization code encoded into the visual code. Once it is received the visual code can be displayed via web browser .

Accordingly shows an example wherein user is capturing an image of visual code displayed on computing device with camera in accordance with at least one embodiment. In this example user can capture an image of visual code by aiming camera such that a reproduced image of visual code is positioned and displayed on viewfinder of camera . Accordingly processor of memory card in this example is configured to analyze the image of visual code to extract the information to access home network and the temporary authorization token encoded in visual code . As discussed herein visual code can be a Quick Response QR code a barcode or any other visual identifier that can be encoded with information readable by a computing device.

Thus once memory card using the information to access home network extract from visual code is able to access home network camera via memory card sends the temporary authorization token to CMS as shown in . Accordingly shows an example transfer of information between camera and CMS in accordance with at least one embodiment. In this example memory card using the information to access home network extract from visual code has connected to home network and sends the temporary authorization token to CMS . Upon receiving the temporary authorization token CMS is able to associate images sent from memory card with a user account belonging to user and CMS exchanges the temporary authorization token for an access token such as an API token to complete the transaction and configuration. Thus upon coming within range of router and connecting home network processor of memory card can now automatically send the image data for storage in CMS .

Alternatively instead of CMS generating visual code the client application can request the temporary authorization token from CMS and in response to receiving the temporary authorization token the client application can generate visual code using the temporary authorization token and information for home network locally on computing device .

In this example CMS generates the network configuration identifier by encoding the network configuration information and information for a temporary authentication token . CMS after generating the identifier sends the identifier to the first computing device and causes the network configuration identifier via the client side application to be displayed on a display screen of the first computing device . The network configuration identifier when analyzed by a camera of a second computing device causes the second computing device to automatically connect to the network. In this example CMS receives a request including the temporary authentication token from the second computing device to establish a link with CMS . In response to receiving the temporary authentication token CMS provides the second computing device with authorization to establish the link by associating the second computing device with a user account associated with the first computing device . Accordingly upon establishing the link and authorizing the second computing device CMS receives an image for storage from the second computing device via the link .

An exemplary system configuration for enabling access to content items from a variety of computing devices is shown in wherein computing devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that illustrated in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through computing devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different computing devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Computing devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple computing devices .

A user can interact with content management system via a client side application installed on computing device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on computing device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple computing devices . For example computing device can upload content to content management system via network . The content can later be retrieved from content management system using the same computing device or some other computing device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as digital data documents text files audio files video files etc. from one or more computing devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from computing devices so that computing devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on computing device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more computing devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple computing devices of varying type capabilities operating systems etc. For example computing device can include client software which synchronizes via a synchronization module at content management system content in computing device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes computing device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other computing devices associated with the user s account. For example multiple computing devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple computing devices .

Content management system can include a communications interface for interfacing with various computing devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific computing devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple computing devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can include a content item management module for maintaining a content directory. The content directory can identify the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in a content management system. For example the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

A content entry can also include a content pointer that identifies the location of the content item in content storage . For example the content pointer can include the exact storage address of the content item in memory. In some embodiments the content pointer can point to multiple locations each of which contains a portion of the content item.

In addition to a content path and content pointer a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share content publicly sharing module can be configured to generate a custom network address such as a uniform resource locator URL which allows any web browser to access the content in content management system without any authentication. To accomplish this sharing module can be configured to include content identification data in the generated URL which can later be used to properly identify and return the requested content item. For example sharing module can be configured to include the user account identifier and the content path in the generated URL. Upon selection of the URL the content identification data included in the URL can be transmitted to content management system which can use the received content identification data to identify the appropriate content entry and return the content item associated with the content entry.

In addition to generating the URL sharing module can also be configured to record that a URL to the content item has been created. In some embodiments the content entry associated with a content item can include a URL flag indicating whether a URL to the content item has been created. For example the URL flag can be a Boolean value initially set to 0 or false to indicate that a URL to the content item has not been created. Sharing module can be configured to change the value of the flag to 8 or true after generating a URL to the content item.

In some embodiments sharing module can also be configured to deactivate a generated URL. For example each content entry can also include a URL active flag indicating whether the content should be returned in response to a request from the generated URL. For example sharing module can be configured to only return a content item requested by a generated link if the URL active flag is set to 8 or true. Thus access to a content item for which a URL has been generated can be easily restricted by changing the value of the URL active flag. This allows a user to restrict access to the shared content item without having to move the content item or delete the generated URL. Likewise sharing module can reactivate the URL by again changing the value of the URL active flag to 8 or true. A user can thus easily restore access to the content item without the need to generate a new URL.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

