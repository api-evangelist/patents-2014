---

title: Multi-factor secure appliance decommissioning
abstract: A network-based appliance includes a mechanism to erase data on the appliance's local storage. The appliance's normal system reset operation is overridden to enable a local user to place the appliance into a safe mode during which remote erasure of the storage is permitted, provided that mode is entered within a first time period following initiation of a system reset. If the appliance is placed in the mode within the time period, it can then receive commands to wipe the local storage. Once the safe mode is entered by detecting one or more actions of a local user, preferably the appliance data itself is wiped by another person or entity that is remote from the device. Thus, physical (local) presence to the appliance is necessary to place the device in the safe mode, while non-physical (remote) presence with respect to the appliance enables actual wiping of the storage device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09455976&OS=09455976&RS=09455976
owner: GLOBALFOUNDRIES INC.
number: 09455976
owner_city: Grand Cayman
owner_country: KY
publication_date: 20140603
---
For example appliances built purposely for performing traditional middleware service oriented architecture SOA functions are prevalent across certain computer environments. SOA middleware appliances may simplify help secure or accelerate XML and Web services deployments while extending an existing SOA infrastructure across an enterprise. The utilization of middleware purposed hardware and lightweight middleware stacks can address the performance burden experienced by conventional software solutions. In addition the appliance form factor provides a secure consumable packaging for implementing middleware SOA functions. One particular advantage that these types of devices provide is to offload processing from back end systems. To this end it is well known to use such middleware devices to perform computationally expensive processes related to security.

Another common use for appliances is network security. For example network intrusion prevention system IPS appliances are designed to sit at the entry points to an enterprise network to protect business critical assets such as internal networks servers endpoints and applications from malicious threats.

Other appliance based solutions are common in cloud compute environments. Cloud compute resources are typically housed in large server farms that run networked applications typically using a virtualized architecture wherein applications run inside virtual servers or so called virtual machines that are mapped onto physical servers in a data center facility. Appliances are often used in these types of environments to facilitate rapid adoption and deployment of cloud based offerings. Typically the appliance is positioned directly between the business workloads that many organizations use and the underlying cloud infrastructure and platform components.

While enterprise appliances of these types are quite varied and provide numerous advantages they often need to be decommissioned for various reasons e.g. to enable servicing because a lease on the device expires to facilitate an upgrade to new hardware because the device is sold or the like. Appliances scheduled for decommissioning however often have sensitive data on them. Thus for example an appliance provisioned to facilitate health care related functions may store HIPAA regulated data. An appliance scheduled to be decommissioned may be stolen or otherwise accessed by unauthorized persons prior to its decommissioning the sensitive data stored on the device is at risk. One obvious solution to this security concern is to wipe the contents of the appliance s drive. This is easier said than done. Because secure appliances of this type typically do not have keyboards displays CD drives or often even USB based ports there is no convenient way to boot a disk that might wipe the internal drive prior to or in association with the decommission. An alternative is to enable a remote wipe of the appliance e.g. by a privileged remote administrator. That solution however raises another security risk namely how to prevent malicious or accidental wipes even from such a privileged administrator .

There remains a need to ensure protection of sensitive data on an appliance that is being decommissioned or otherwise taken out of service and in particular when the appliance is being managed from a remote location.

According to this disclosure a network based appliance includes a mechanism to enable secure erasure of sensitive data on the appliance s local storage e.g. prior to appliance decommissioning. In one embodiment the appliance s normal system reset operation is augmented or overridden to selectively enable a local user to place the appliance into an operating or safe mode during which remote erasure of the local storage is permitted provided that mode is entered within a first time period following initiation of a system reset. If the appliance is placed in the mode within the first time period it can then receive appropriate commands to wipe the local storage. Thus once the safe mode is entered by detecting one or more actions of a local user preferably the appliance data itself is wiped by another person or entity that is remote from the device. Typically the person is a remote privileged administrator that is assumed to have the authority and capability to formally wipe the appliance but only while the appliance has been first placed into the safe mode. Thus preferably physical local presence to the appliance is necessary to place the device in the safe mode while non physical remote presence with respect to the appliance is the state during which actually wiping of the storage device occurs. This implements a multi factor decommissioning operation namely a local operation typically by a first person or entity to place the appliance in the proper safe mode with a remote operation typically by a second person or entity then being initiated to perform the erasure itself.

The foregoing has outlined some of the more pertinent features of the disclosed subject matter. These features should be construed to be merely illustrative. Many other beneficial results can be attained by applying the disclosed subject matter in a different manner or by modifying the subject matter as will be described.

With reference now to the drawings and in particular with reference to exemplary diagrams of data processing environments are provided in which illustrative embodiments of the disclosure may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which aspects or embodiments of the disclosed subject matter may be implemented. Many modifications to the depicted environments may be made without departing from the spirit and scope of the present invention.

With reference now to the drawings depicts a pictorial representation of an exemplary distributed data processing system in which aspects of the illustrative embodiments may be implemented. Distributed data processing system may include a network of computers in which aspects of the illustrative embodiments may be implemented. The distributed data processing system contains at least one network which is the medium used to provide communication links between various devices and computers connected together within distributed data processing system . The network may include connections such as wire wireless communication links or fiber optic cables.

In the depicted example server and server are connected to network along with storage unit . In addition clients and are also connected to network . These clients and may be for example personal computers network computers or the like. In the depicted example server provides data such as boot files operating system images and applications to the clients and . Clients and are clients to server in the depicted example. Distributed data processing system may include additional servers clients and other devices not shown.

In the depicted example distributed data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. At the heart of the Internet is a backbone of high speed data communication lines between major nodes or host computers consisting of thousands of commercial governmental educational and other computer systems that route data and messages. Of course the distributed data processing system may also be implemented to include a number of different types of networks such as for example an intranet a local area network LAN a wide area network WAN or the like. As stated above is intended as an example not as an architectural limitation for different embodiments of the disclosed subject matter and therefore the particular elements shown in should not be considered limiting with regard to the environments in which the illustrative embodiments of the present invention may be implemented.

With reference now to a block diagram of an exemplary data processing system is shown in which aspects of the illustrative embodiments may be implemented. Data processing system is an example of a computer such as client in in which computer usable code or instructions implementing the processes for illustrative embodiments of the disclosure may be located.

With reference now to a block diagram of a data processing system is shown in which illustrative embodiments may be implemented. Data processing system is an example of a computer such as server or client in in which computer usable program code or instructions implementing the processes may be located for the illustrative embodiments. In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit and display .

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a set of one or more processors or may be a multi processor core depending on the particular implementation. Further processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multi processor SMP system containing multiple processors of the same type.

Memory and persistent storage are examples of storage devices. A storage device is any piece of hardware that is capable of storing information either on a temporary basis and or a permanent basis. Memory in these examples may be for example a random access memory or any other suitable volatile or non volatile storage device. Persistent storage may take various forms depending on the particular implementation. For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard and mouse. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system and applications or programs are located on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory . These instructions are referred to as program code computer usable program code or computer readable program code that may be read and executed by a processor in processor unit . The program code in the different embodiments may be embodied on different physical or tangible computer readable media such as memory or persistent storage .

Program code is located in a functional form on computer readable media that is selectively removable and may be loaded onto or transferred to data processing system for execution by processor unit . Program code and computer readable media form computer program product in these examples. In one example computer readable media may be in a tangible form such as for example an optical or magnetic disc that is inserted or placed into a drive or other device that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . In a tangible form computer readable media also may take the form of a persistent storage such as a hard drive a thumb drive or a flash memory that is connected to data processing system . The tangible form of computer readable media is also referred to as computer recordable storage media. In some instances computer recordable media may not be removable.

Alternatively program code may be transferred to data processing system from computer readable media through a communications link to communications unit and or through a connection to input output unit . The communications link and or the connection may be physical or wireless in the illustrative examples. The computer readable media also may take the form of non tangible media such as communications links or wireless transmissions containing the program code. The different components illustrated for data processing system are not meant to provide architectural limitations to the manner in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system . Other components shown in can be varied from the illustrative examples shown. As one example a storage device in data processing system is any hardware apparatus that may store data. Memory persistent storage and computer readable media are examples of storage devices in a tangible form.

In another example a bus system may be used to implement communications fabric and may be comprised of one or more buses such as a system bus or an input output bus. Of course the bus system may be implemented using any suitable type of architecture that provides for a transfer of data between different components or devices attached to the bus system. Additionally a communications unit may include one or more devices used to transmit and receive data such as a modem or a network adapter. Further a memory may be for example memory or a cache such as found in an interface and memory controller hub that may be present in communications fabric .

Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C C Objective C or the like and conventional procedural programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Those of ordinary skill in the art will appreciate that the hardware in may vary depending on the implementation. Other internal hardware or peripheral devices such as flash memory equivalent non volatile memory or optical disk drives and the like may be used in addition to or in place of the hardware depicted in . Also the processes of the illustrative embodiments may be applied to a multiprocessor data processing system other than the SMP system mentioned previously without departing from the spirit and scope of the disclosed subject matter.

As will be seen the techniques described herein may operate in conjunction within the standard client server paradigm such as illustrated in in which client machines communicate with an Internet accessible Web based portal executing on a set of one or more machines. End users operate Internet connectable devices e.g. desktop computers notebook computers Internet enabled mobile devices or the like that are capable of accessing and interacting with the portal. Typically each client or server machine is a data processing system such as illustrated in comprising hardware and software and these entities communicate with one another over a network such as the Internet an intranet an extranet a private network or any other communications medium or link. A data processing system typically includes one or more processors an operating system one or more applications and one or more utilities. The applications on the data processing system provide native support for Web services including without limitation support for HTTP SOAP XML WSDL UDDI and WSFL among others. Information regarding SOAP WSDL UDDI and WSFL is available from the World Wide Web Consortium W3C which is responsible for developing and maintaining these standards further information regarding TTP and XML is available from Internet Engineering Task Force IETF . Familiarity with these standards is presumed.

The secure nature of the physical appliance sometimes referred to herein as a box typically is provided by a self disabling switch which is triggered if the appliance cover is removed. This physical security enables the appliance to serve as a secure vault for sensitive information. Typically the appliance is manufactured pre loaded with software and then deployed within or in association with an enterprise or other network operating environment alternatively the box may be positioned locally and then provisioned with standard or customized middleware virtual images that can be securely deployed and managed e.g. within private or on premise cloud computing environments. The appliance may include hardware and firmware cryptographic support possibly to encrypt data on hard disk. No users including administrative users can access any data on physical disk. In particular preferably the operating system e.g. Linux locks down the root account and does not provide a command shell and the user does not have file system access. Typically the appliance does not include a display device a CD or other optical drive or any USB Firewire or other ports to enable devices to be connected thereto. It is designed to be a sealed and secure environment with limited accessibility and then only be authenticated and authorized individuals.

Referring to a representative operating environment includes the physical appliance which interfaces to a network . The appliance may be implemented using a data processing system such as described above with respect to and it may represent one of the servers or clients shown in . Preferably the appliance includes a Web 2.0 based user interface UI a command line interface CLI and REST based application programming interfaces APIs . In this example the appliance has been provisioned with an image comprising an operating system an application server an HTTP server and other application programs . Additional software solutions not shown may be included within the image. These software elements may come pre loaded on the appliance which may include other data e.g. templates scripts files etc. . The particular software configuration of course will depend on the use being made of the appliance. The appliance includes one of more storage devices e.g. disk . The type and number of storage devices may vary.

The appliance also includes a button such as a system reset. According to this disclosure the appliance s normal system reset functionality is augmented to include a multi factor decommissioning functionality which is illustrated as a software based component . As will be described this functionality selectively controls the appliance so that it may be placed in a mode by which a user at a remote system may wipe the storage device . This process is now described.

Without limitation the subject matter may be implemented in any network connected secure appliance irrespective of how that appliance is being used e.g. SOA support network security cloud application deployment etc. .

In general a network based appliance includes a mechanism to enable secure erasure of sensitive data on the appliance s local storage preferably prior to decommissioning. In one embodiment the appliance s normal system reset operation is augmented or overridden to selectively enable a local user to place the appliance into an operating or safe mode during which remote erasure of the local storage is permitted provided that mode is entered within a first time period following initiation of a system reset. If the appliance is placed in the mode within the first time period it can then receive appropriate commands to wipe the local storage. Thus once the safe mode is entered by detecting one or more actions of a local user preferably the appliance data itself is wiped by another person or entity that is remote from the device. Typically the person is a remote privileged administrator that is assumed to have the authority and capability to formally wipe the appliance but only while the appliance has been first placed into the safe mode. Thus preferably physical local presence to the appliance is necessary to place the device in the safe mode while non physical remote presence with respect to the appliance is the state during which actually wiping of the storage device occurs. This implements a multi factor decommissioning operation namely a local operation typically by a first person or entity to place the appliance in the proper safe mode with a remote operation typically by a second person or entity then being initiated to perform the erasure itself.

Preferably the approach described herein is to create a button based wipe command that can be carried out through standard appliance management. Preferably and with reference to this is achieved by including the button on the appliance or to use an existing button whose function has been modified hereby to place the appliance into a state but only for a limited time period that allows its internal drive to be wiped. As used herein a wipe or erasure is assumed to erase all of the writeable file systems within the appliance directly or to cause a boot of a dedicated kernel not shown that itself wipes those file systems. A state in which the appliance s data can be erased is sometimes referred to herein as a safe mode. Because the button puts the appliance into the state that is enabled for wipe it may also be considered a wipe safe mode enabled button. This nomenclature is not intended to be limiting. The button used for secure decommissioning according to this disclosure can be a button dedicated to this function or simply the existing system reset or other appliance button whose operation is modified according to the techniques herein. A physical button is not a requirement either as the technique may be used with any physical switch e.g. a knob a selector etc.

Thus safe mode is entered by detection of a local action on the appliance itself. Once in safe mode stage 3 the watchdog timer resets itself to a second time period and starts counting down again. Typically the second time period is longer than the first time period. For example the second time period which itself preferably is configurable is ten 10 minutes although any period may be used. If during the safe mode of operation the watching timer then counts down and expires i.e. the timer is not again interrupted the appliance is finally reset. Thus upon initial system reset the watchdog timer begins a first e.g. 1 minute countdown system reset is inhibited during the first time period to enable the user to enter the safe mode. If safe mode is entered the watchdog timer begins a second e.g. 10 minute countdown. The watchdog timer preferably is implemented in software and may be two 2 separate timers.

As noted the button operations described above are a local action because they take place if at all at the device itself. Once safe mode is entered preferably the appliance data itself is wiped by another person or entity that is remote from the device. This is a remote action. Typically the person is a remote privileged administrator. The remote privileged administrator may be a human being or a computing entity controlled or managed by such a person. The remote administrator is assumed to have the authority and capability to formally wipe or erase the appliance but only while the appliance has been placed into the safe mode in the manner previously described. Thus physical local presence to the appliance is necessary to place the device in safe mode while non physical remote presence with respect to the appliance is the state during which actually wiping of the storage device occurs. Thus a multi factor decommissioning operation one a local operation to place the appliance in the proper safe mode the other remote to perform the erasure provides significant advantages.

The second or remote operation or set of operations is now described. These operations comprise an authorized remote request to erase at least one storage device within the secure appliance thereby wiping all data from that storage device. There may be multiple storage devices within the appliance and the authorized remote request may serve to wipe all or some of these storage devices. There may be an authorized remote request to erase for each storage device within the appliance. Preferably a single global request to wipe all storage devices is used.

When safe mode is entered preferably the authorized remote request itself is enabled in phases. First preferably the remote user must enter a first code corresponding to a hardware based key on the appliance. For example when the appliance is manufactured a storage controller or other chip on the device may be programmed via an ECID Electronic Chip Identification fuse blown pattern. The hardware key would then be known only to the manufacturer and purchaser of the chip and the appliance . If the remote user can enter the first code a match on the hardware key then allows that user to take a second required action e.g. entry of a particular command that enables a bit in a hardware register so that the actual wipe mechanism can function. Once the second action and there may be other requirements completes the remote user can finally enter a pre programmed software code to perform the actual storage device wipe. While the pre programmed software code might be more publicly known and thus less secure presumably the hardware keys and bit setting operation are much less publicly known and thus very secure . Together these operations or at least some of them comprise the authorized remote request. After the pre programmed software code is received an interrupt is sent to the watchdog time once again freezing the countdown. This allows the wipe to taken place. Once the wipe is finished preferably the countdown is resumed e.g. by another interrupt and the system eventually resets.

The above described subject matter provides many advantages. By requiring a multi factor operation as described interested entities can be assured that the sensitive data on the appliance whether stored encrypted or in the clear is securely wiped from the appliance prior to or in connection with decommissioning. The approach ensures that only an appropriate person or entity can perform the actual wipe but the requirement of the local action to initiate the overall process ensures against accidental or malicious wipes from even a privileged remote administrator. The approach is safe reliable and simple to implement in association with existing device reset functions.

There is no requirement that the multi factor functionality be implemented from a system reset although this is a preferred operation. The functionality may be implemented as a standalone operation with its own dedicated button. As noted the particular local activation mechanism itself may be quite varied and is not limited to a physical button.

While a preferred operating environment and use case a secure appliance has been described the techniques herein may be used in any other operating environment in which it is desired to decommissioning or otherwise remove from service a computing system or device and for which it is desired to ensure protection of the data that might be stored thereon.

As has been described the functionality described above may be implemented as a standalone approach e.g. a software based function executed by a processor or it may be available as a service including as a web service via a SOAP XML interface . The particular hardware and software implementation details described herein are merely for illustrative purposes are not meant to limit the scope of the described subject matter.

More generally computing devices within the context of the disclosed subject matter are each a data processing system such as shown in comprising hardware and software and these entities communicate with one another over a network such as the Internet an intranet an extranet a private network or any other communications medium or link. The applications on the data processing system provide native support for Web and other known services and protocols including without limitation support for HTTP FTP SMTP SOAP XML WSDL UDDI and WSFL among others. Information regarding SOAP WSDL UDDI and WSFL is available from the World Wide Web Consortium W3C which is responsible for developing and maintaining these standards further information regarding HTTP FTP SMTP and XML is available from Internet Engineering Task Force IETF . Familiarity with these known standards and protocols is presumed.

As explained the scheme described herein may be implemented in or in conjunction with various server side architectures including simple n tier architectures web portals federated systems and the like. The techniques herein may be practiced in a loosely coupled server including a cloud based environment.

Still more generally the subject matter described herein can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the trusted platform module function is implemented in software which includes but is not limited to firmware resident software microcode and the like. Furthermore the download and delete interfaces and functionality can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain or store the program for use by or in connection with the instruction execution system apparatus or device. The medium can be an electronic magnetic optical electromagnetic infrared or a semiconductor system or apparatus or device . Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD. The computer readable medium is a tangible non transitory item.

The computer program product may be a product having program instructions or program code to implement one or more of the described functions. Those instructions or code may be stored in a non transitory computer readable storage medium in a data processing system after being downloaded over a network from a remote data processing system. Or those instructions or code may be stored in a computer readable storage medium in a server data processing system and adapted to be downloaded over a network to a remote data processing system for use in a computer readable storage medium within the remote system.

In a representative embodiment the interfaces and utility are implemented in a special purpose computing platform preferably in software executed by one or more processors. The software is maintained in one or more data stores or memories associated with the one or more processors and the software may be implemented as one or more computer programs. Collectively this special purpose hardware and software comprises the functionality described above.

In the preferred embodiment the functionality provided herein is implemented as an adjunct or extension to an existing cloud compute deployment management solution.

While the above describes a particular order of operations performed by certain embodiments of the invention it should be understood that such order is exemplary as alternative embodiments may perform the operations in a different order combine certain operations overlap certain operations or the like. References in the specification to a given embodiment indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic.

Finally while given components of the system have been described separately one of ordinary skill will appreciate that some of the functions may be combined or shared in given instructions program sequences code portions and the like.

While the technique herein is described in the context of a decommissioning operation this is not a limitation as the techniques may be used whenever it is necessary or desirable to wipe an appliance data store.

The appliance is not limited to any particular type of appliance. The multi factor operation may likewise be used to erase data from any machine irrespective of the machine s physical configuration.

The technique herein may be extended beyond the wipe use case to invoke any privileged operation by way of a privileged command . As one of ordinary skill will appreciate a goal of the described method is to identify correctly the appliance to be operated upon using both physical and remote pathways so that the privileged operation initiated by the privileged command cannot be invoked accidentally or maliciously either by the remote operator or the physical operator acting independently. In addition to the wipe privileged command other privileged commands including without limitation as modify firmware or replace operating system etc. may use the approach. Thus and generalizing the multi factor security approach of this disclosure may be applied to invoke any privileged operation using a privileged command where by virtue of its function the privileged operation might present a security risk or otherwise be dangerous to the integrity of the appliance.

