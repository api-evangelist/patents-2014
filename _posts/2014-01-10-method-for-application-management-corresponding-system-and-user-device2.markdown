---

title: Method for application management, corresponding system, and user device
abstract: A method for application management is provided. First, an original application is received. A license code is injected into the original application through a repackaging process to generate a repackaged application. Next, the repackaged application is published for a user device to download and install, wherein the user device executes a client program. When the user device executes the repackaged application, the license code sends a license check request to activate the client program to send a license check response according to license information of the repackaged application. The license check response indicates whether the repackaged application is allowed to be further executed. When the license check response indicates that the repackage application is not allowed to be further executed, the license code terminates the repackaged application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09613223&OS=09613223&RS=09613223
owner: Industrial Technology Research Institute
number: 09613223
owner_city: Hsinchu
owner_country: TW
publication_date: 20140110
---
This application claims the priority benefit of Taiwan application serial no. 102125575 filed on Jul. 17 2013. The entirety of the above mentioned patent application is hereby incorporated by reference herein and made a part of this specification.

The disclosure relates to a method for application management an application management system and a user device.

Android is a semi open source code operating system based on Linux which is mainly applied to mobile devices and is continually developed by an Open Handset Alliance established by Google. An Android software development Kit SDK provided by Google allows a third party software developer to develop applications for the Android operating system.

Regarding a license of the application the Android application requires a special code to inquire the license of the application from a backend system so as to determine whether the application is allowed to be executed. Generally the third party developer manually adds a license code when developing the application. The third party software developer is required to add the license code in different ways for SDKs provided by different practitioner platforms.

Moreover the Android SDK provides application programming interfaces APIs for a mobile device including network setting hardware setting and data accessing for example address book accessing and international mobile equipment identity number IMEI accessing etc. . Which means that the third party application can access private data of the user stored on the mobile device and sent the same through the network. Presently Android s control on the application is only to provide a permission list during installation of the application for the user to decide whether to install the application so as to achieve permission control of the application. After the application is installed the permission setting cannot be changed.

Accordingly the disclosure is directed to a method for application management an application management system and a user device which is capable of adding a license code and a permission code to an application so as to facilitate the application program of the user device executing a license check procedure and implementing permission control for the application program in the user device.

The disclosure provides a method for application management which includes following steps. First an original application is received. A license code is injected into the original application through a repackaging process to generate a repackaged application. Next the repackaged application is published for a user device to download and install the same where the user device executes a client program. When the user device executes the repackaged application the license code sends a license check request to activate the client program to send a license check response according to license information of the repackaged application. The license check response indicates whether the repackaged application is allowed to be further executed. When the license check response indicates that the repackage application is not allowed to be further executed the license code terminates the repackaged application.

The disclosure provides a method for application management which is adapted to a user device and includes following steps. First a client program is executed. A repackaged application is downloaded from an application management system where the repackaged application is generated by the application management system by injecting a license code into an original application through a repackaging process. Then the repackaged application is executed. When the repackaged application is executed the license code sends a license check request to activate the client program to send a license check response according to license information of the repackaged application where the license check response indicates whether the repackaged application is allowed to be further executed. When the license check response indicates that the repackage application is not allowed to be further executed the license code terminates the repackaged application.

The disclosure provides an application management system including a repackaging module and an application management module. The repackaging module receives an original application and injects a license code into the original application through a repackaging process to generate a repackaged application. The application management module publishes the repackaged application for a user device to download and install the same where the user device executes a client program. When the user device executes the repackaged application the license code sends a license check request to activate the client program to send a license check response according to license information of the repackaged application. The license check response indicates whether the repackaged application is allowed to be further executed. When the license check response indicates that the repackage application is not allowed to be further executed the license code terminates the repackaged application.

The disclosure provides a user device including a communication module and a processor. The communication module is configured to connect an application management system. The processor is configured to execute a client program and download a repackaged application from the application management system and execute the repackaged application where the repackaged application is generated by the application management system by injecting a license code into an original application through a repackaging process. When the repackaged application is executed the license code sends a license check request to activate the client program to send a license check response according to license information of the repackaged application. The license check response indicates whether the repackaged application is allowed to be further executed. When the license check response indicates that the repackage application is not allowed to be further executed the license code terminates the repackaged application.

In order to make the disclosure comprehensible several exemplary embodiments accompanied with figures are described in detail below.

In the following detailed description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the disclosed embodiments. It will be apparent however that one or more embodiments may be practiced without these specific details. In other instances well known structures and devices are schematically shown in order to simplify the drawing.

Referring to the application management system includes a repackaged module an application management module a license management module a key providing module a key management module and an over the air OTA module .

In the present exemplary embodiment the application management system can be any computer based system which is configured to receive an application developed by a third party software developer and add a license code to the application through a repackaging process and provide the same to a user device of a client terminal for downloading. Moreover the application management system may provide the user device to conduct subsequent inquiry and other related services.

The repackaging module receives an application which is defined as an original application developed by the third party software developer and injects a license code into the original application through a repackaging process to generate a repackaged application. Moreover the key providing module provides a key to the repackaging module and the repackaging module may inject the key into the original application through the repackaging process.

The application management module publishes the repackaged application for the user device of the client terminal to download and install the same.

The license management module receives a name of the repackaged application from the user device and provides license information to the user device according to the name.

The key management module receives a key of the repackaged application from the key providing module and when the key management module receives the name of the repackaged application from the user device the key management module provides the corresponding key to the user device according to the name.

The OTA module provides permission management information to the user device and the user device can change a permission setting according to the permission management information.

In the present exemplary embodiment the repackaging module the application management module the license management module the key providing module the key management module and the OTA module can be hardware or software configured in a single server host or different server hosts.

In the present exemplary embodiment the user device is a mobile device with an Internet accessing function such as a smart phone a tablet PC a personal digital assistant a notebook computer an e book or a digital camera etc. Moreover in the present exemplary embodiment the user device applies an Android operating system. However in other exemplary embodiment the user device may also apply a Windows operating system an iOS operating system an Android operating system a Blackberry operating system a Symbian operating system a Linux operating system or a Unix operating system etc.

In the following description the processor can control operations of the user device related to the disclosure by executing a license code a permission code and a client program.

Information and data transmitted by the user device are sent by the processor through the communication module and information and data received by the user device are also received by the processor through the communication module . Here the communication module may a support wireless signal transmission technique such as global system for mobile communications GSM the third generation 3G mobile communication 4G mobile communication long terminal evolution LTE network personal handy phone system PHS code division multiple access CDMA wireless fidelity Wi Fi worldwide interoperability for microwave access WiMAX Bluetooth etc. The communication module may also support a wired signal transmission technique for example universal serial bus USB Firewire serial interface or a Thunderbolt serial interface. In the present exemplary embodiment the communication module of the user device is used for connecting the application management system .

The storage device is for example a fixed or movable random access memory RAM flash memory hard disc memory card other similar devices or a combination of the above devices which is used for storing program codes and data executed by the user device for hardware operation thereof.

Referring to and the repackaging module of the application management system first receives the original application developed by the third party software developer step S . In the present exemplary embodiment after the repackaging module receives the original application the repackaging module injects a license code and a key provided by the key providing module into the original application through a repackaging process so as to generate a repackaged application step S .

In detail taking the Android system as an example the repackaging module first extracts a file classes.dex from the original application and uses a disassembler to disassemble the file classes.dex into at least one file with an extension name of smali which is defined as a disassembled file . Then the key providing module first provides a key to the repackaging module and the repackaging module injects the license code and the key to the aforementioned disassembled file to generate at least one first intermediate file. The repackaging module may perform static analysis on the disassembled file to inject the license code to a proper location. For example in the present embodiment the program code loaded by the user device when the user device enters the application is first analysed and the license code is injected thereto. Moreover the Android application is edited by the Java programming language. However since the Java programming language is easy to be disassembled in order to avoid attacks of reverse engineering the repackaging module dynamically obfuscates the first intermediate file to generate at least one second intermediate file. Thereafter an assembler is used to assemble the second intermediate file and execute a digital signature procedure required by the Android system on all of the applications so as to generate the repackaged application. The assembler and the disassembler may adopt a smali baksmali tool specialized for assembling and disassembling dex files.

Then the application management module publishes the repackaged application for the user device to download and install the same step S . For example the application management module may provide a web page or an application selling platform to publish the aforementioned repackaged application and the user device may obtain the repackaged application through free download or payment.

After the user device downloads and installs the repackaged application as that shown in the user device includes a repackaged application and the repackaged application includes a license code . Here the user device of also includes all of the components of the user device shown in and details thereof may refer to related descriptions of which are not repeated.

It should be noticed that the user device further includes a client program and when the processor of the user device executes the client program the communication module may communicate with the application management system or a database of the storage device to perform a license check procedure. Namely after the user device downloads and installs the repackaged application when the processor of the user device executes the repackaged application step S the license code included in the repackaged application sends a license check request to activate the client program in the user device to send a license check response according to license information of the repackaged application step S . Then the license check response and a time required for the license check response may indicate whether the repackaged application is allowed to be further executed.

In the present exemplary embodiment the license code may provide a name of the repackaged application to the client program . Then the client program may provide the above name to the application management system through the communication module and the license module of the application management system provides the corresponding license information to the client program according to the received name of the repackaged application . The client program conducts the license check according to the content of the license information. For example the license information may include license agreements of expiration date and number of times of use etc. of the repackaged application . The client program conducts the license check according to the license information and the license check response indicates whether the repackage application is allowed to be further executed. Then the client program transmits the license check response to the license code to notify the license code to continue or terminate the repackaged application . However considering a safety protection design and in order to avoid attack of inter applications the present exemplary embodiment adopts a safe communication protocol of inter process communication IPC to ensure integrity of data transmitted between the client program and the repackaged application.

In detail taking the Android operating system as an example the Android operating system provides an IPC channel between the repackaged application and the client program . Moreover the license code may further include a timer. When the license code of the repackaged application sends the license check request the license code first encrypts the license check request by using the key of the repackaged application and then sends the name of the repackaged application and the encrypted license check request to the client program . Now the timer starts timing.

After the client program receives the name of the repackaged application and the encrypted license check request the client program provides the name to the application management system through the communication module . The application management system controls the key management module to inquire the key providing module for the corresponding key of the repackaged application according to the name and transmits back the key to the user device .

In another exemplary embodiment if the user device has executed the license check procedure before the user device can store both the license information and the key in the database of the storage device or only store one of the license information and the key in the database of the storage device . In this way the client program can directly use the name of the repackaged application to inquire the key and the license information corresponding to the repackaged application from the database without inquiring the application management system .

After the user device obtains the aforementioned license information and the key from the communication module or its own storage device the client program first decrypts the license check request by using the aforementioned key and generates the license check response according to the license information and then encrypts the license check response by using the aforementioned key and transmits the same to the license code of the repackaged application . Then the license code decrypts the license check response and inspects the content thereof and the timer stops timing.

In the present exemplary embodiment whether the repackaged application is allowed to be further executed is determined according to the license check response of the client program and a timing result of the timer. First according to the timing result of the timer the license code determines whether the license check response is received within a predetermined time for example 5 seconds after sending the license check request to the client program step S . If the license check response is not received within the predetermined time the license code terminates the repackaged application step S . Conversely if the license check response is received within the predetermined time the license code determines whether to continually execute the repackaged application according to the license check response step S . When the license check response indicates that the repackage application is not allowed to be further executed the license code terminates the repackaged application step S . Conversely the license code continually executes the repackaged application step S .

In the present exemplary embodiment the user device may obtain the license information from the application management system and the client program determines whether to stop using the repackaged application according to the license information. Moreover when the user device allows independent threads of the applications based on a sand box to ensure security of the system for example Android iOS blackberry Symbian etc. the disclosure further provides a permission management of the applications so as to set different access permissions for one or a plurality of applications in the user device .

Referring to in collaboration with and first the repackaging module of the application management system receives an original application developed by the third party software developer step S . In the present exemplary embodiment after the repackaging module receives the original application the repackaging module injects a permission code and a key provided by the key providing module into the original application through a repackaging process so as to generate a repackaged application step S .

In the present exemplary embodiment of the disclosure the repackaging module first extracts a file classes.dex from the original application and uses a disassembler to disassemble the file classes.dex into at least one disassembled file with an extension name of smali. Then the key providing module first provides a key to the repackaging module and the repackaging module injects the permission code and the key to the aforementioned disassembled file to generate at least one first intermediate file. The repackaging module may also perform static analysis on the disassembled file to inject the permission code to a proper location. For example in the present embodiment a program code of an application programming interface API related to user s privacy can be analyzed and the permission code is injected thereto. Moreover the repackaging module dynamically obfuscates the first intermediate file to generate at least one second intermediate file. Thereafter an assembler of smali is used to assemble the second intermediate file and execute a digital signature procedure required by the Android system on all of the applications so as to generate the repackaged application. Similar to the first exemplary embodiment the assembler and the disassembler may adopt a smali baksmali tool specialized for assembling and disassembling dex files.

Then the application management module publishes the repackaged application for the user device to download and install the same step S . For example the application management module may provide a web page or an application selling platform to publish the aforementioned repackaged application and the user device may obtain the repackaged application through free download or payment.

After the user device downloads and installs the repackaged application as that shown in the user device includes a repackaged application and the repackaged application includes a permission code . Here the user device of also includes all of the components of the user device shown in and details thereof may refer to related descriptions of which are not repeated.

It should be noticed that the user device further includes a client program and when the processor of the user device executes the client program the communication module may communicate with the application management system or a database of the storage device to perform a license check procedure.

Moreover the storage device stores permission settings of some system functions and the system functions generally refer to information privacy or information security of the user for example a function used for obtaining an international mobile equipment identity number IMEI of the user device a function used for accessing a subscriber identity module SIM of the user device a function used for obtaining an international mobile subscriber identity number IMSI of the user device a function used for searching location information of the user device a function used for obtaining a phone number a function of sending a text and a function used for downloading files through network etc. In the present exemplary embodiment the client program may provide a user interface and the user of the user device may use the user interface to change the permission setting of the aforementioned system function as executive non executive or respond with fake information. Based on the aforementioned user interface the permission setting can be changed at any time and the permission code may execute the aforementioned system function not to execute the system function or respond the system function with the fake information according to the permission setting of the system function.

After the user device downloads and installs the repackaged application when the processor of the user device executes the repackaged application step S and when the repackaged application calls the aforementioned system function step S the permission code in the repackaged application first intercepts the call of the repackaged application on the aforementioned system function step S and sends a permission check request to activate the client program to send a permission check response according to the permission setting of the aforementioned system function step S . Moreover the permission check response and a time required for the permission check response may indicate whether the aforementioned system function is allowed to be further executed.

In detail in the previous exemplary embodiment the Android operating system provides an IPC channel between the repackaged application and the client program. Moreover the permission code further includes a timer. When the permission code of the repackaged application sends the permission check request the permission code first encrypts the permission check request by using the key of the repackaged application and then sends the name of the repackaged application and the encrypted permission check request to the client program . Now the timer starts timing.

After the client program receives the name of the repackaged application and the encrypted permission check request the client program provides the name to the application management system through the communication module . The application management system controls the key management module to inquire the key providing module for the corresponding key of the repackaged application according to the name and transmits back the key to the user device .

In another exemplary embodiment if the user device has executed the permission check procedure before the key can be in the database of the storage device . In this way the client program can directly use the aforementioned name to inquire the key corresponding to the repackaged application from the database.

After the user device obtains the key from the communication module or its own storage device the client program first decrypts the permission check request by using the aforementioned key and encrypts the permission check response by using the aforementioned key and transmits the same to the permission code of the repackaged application . The permission code decrypts the permission check response and inspects the content thereof and the timer stops timing. Here the permission check response is the permission setting of the system function set by the user of the user device through the user interface.

In the present exemplary embodiment first according to the timing result of the timer the permission code determines whether the permission check response is received within a predetermined time for example 5 seconds after sending the permission check request to the client program step S . If the permission check response is not received within the predetermined time the permission code does not execute the aforementioned system function step S . Conversely if the permission check response is received within the predetermined time the permission code determines to continually execute the aforementioned system function not to execute the system function or respond the system function with fake information according to the permission check response step S .

For example it is assumed that the user device stores a repackaged application of navigation and a repackaged application of the Facebook. The user device may set different permission settings to the system function in allusion to the two packaged applications. Taking the system function of reading location information as an example the repackaged application of navigation is set to be capable of reading global positioning system GPS data of the user device and the repackaged application of the Facebook is set to be not capable of reading the GPS data of the user device . Therefore once the repackaged application of the Facebook executes the system function of reading the location information the permission code may refuse the Facebook to read the GPS data according to the permission check response. In another embodiment the license code can also respond fake information to the system function of reading the location information such that the Facebook reads the fake GPS data. In this way the user of the user device can avoid the GPS data of the user s location being read and tracked by others on the Facebook and meanwhile the user can use the GPS data enjoy a navigation service.

In another exemplary embodiment the client program further has a real time analysing function. When the user device executes the repackaged application and the repackaged application loads a new program code dynamically during the execution of the repackaged application the permission code of the repackaged application transmits the new program code to the client program for analysis. Here the new program code can be an update file of the repackaged application form the application management system or other sources.

When the repackaged application loads the new program code during the execution of the repackaged application the permission code intercepts the new program code and transmits the new program code to the client program . The client program analyzes whether the new program code calls the system function requiring the permission management and modifies the new program code according to the analysis result. After the client program modifies the new program code the client program transmits the modified new program code to the permission code . Then the permission code allows adding the modified new program code to the repackaged application . The aforementioned modification enables the permission code to intercept the call of the new program code on the aforementioned system function and send the permission check request to activate the client program to send the permission check response according to the permission setting.

In the present exemplary embodiment under a specific circumstance the OTA module of the application management system may transmit license management information to the client program of the user device . For example when the user loses the user device the user can notify the application management system and the OTA module of the application management system can transmit the license management information to the client program of the user device to notify the client program to change the permission setting of the system function. For example the license management information may notify the client program to set the repackaged application of navigation to be capable of reading the GPS data to facilitate tracking a location of the user device . For another example the license management information may notify the client program to prohibit all of the repackaged applications from obtaining phone numbers sending short messages and receiving short messages so as to prevent the phone numbers or private data from being stolen.

Besides according to the method for application management of the present exemplary embodiment it is unnecessary to modify the underlying operating system of the user device so that the application management system is not limited to the telecommunication practitioner. In another exemplary embodiment the application management system can be a general software system integrator which is capable of using the application management method of the disclosure to develop an independent platform and an operation method thereof is similar to a software selling platform and the independent platform can be applied in internal of an enterprise or organization to provide applications complied with an accessing policy of the enterprise or organization to internal staff or related personnel. In such exemplary embodiment the user device may upload the existing original application to the application management system . The application management system can perform the repackaging process on the original application to generate a repackaged application capable of dynamically setting the permission and provide the same to the user device for downloading.

It should be noticed that the repackaging processes of the license management embodiment of and the license management embodiment of can be integrated i.e. the license code the permission code and the key are all together injected to the original application. In this way the repackaged application downloaded by the user device may execute the license check procedure and the permission check procedure. The license check procedure and the permission check procedure may use a same key or different key and if different keys are used the key providing module has to provide two different keys and the two different keys have to be injected to the original application through the repackaging process to generate the repackaged application where one key is used for encryption and decryption of the license check procedure and another key is used for encryption and decryption of the permission check procedure.

In summary according to the method for application management and the application management system provide by the disclosure before the original application developed by the third party software developer is published the repackaging process can be performed to inject the license code and the permission code to the original application to generate the repackaged application. After the user device downloads and installs the repackaged application the client program of the user device can execute the license check procedure. Moreover the client program can provide the user interface such that the user of the user device may set the accessing permissions of the related system functions of the repackaged applications through the user interface so as to implement different permission controls on the repackaged applications to properly protect the user privacy.

It will be apparent to those skilled in the art that various modifications and variations can be made to the disclosed embodiments. It is intended that the specification and examples be considered as exemplary only with a true scope of the disclosure being indicated by the following claims and their equivalents.

