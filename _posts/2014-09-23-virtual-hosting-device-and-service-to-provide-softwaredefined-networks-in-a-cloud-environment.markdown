---

title: Virtual hosting device and service to provide software-defined networks in a cloud environment
abstract: A hosting system to facilitate a customer of an operator of the system to connect to a cloud provider, the system including: a first cloud exchange co-located with and connected to first cloud provider equipment; a second cloud exchange co-located with and connected to second cloud provider equipment, wherein the first cloud provider equipment and the second cloud provider equipment are of a same cloud provider but at different geographically spaced locations or the first cloud provider equipment is of a different cloud provider than that of the second cloud provider equipment, and wherein the first cloud exchange is connected to the second cloud exchange; and a non-transitory computer readable medium including computer program instructions, the instructions configured to facilitate the configuration of a software-defined network including the first cloud exchange and/or second cloud exchange, wherein the network connects the customer to the first cloud provider equipment and/or the second cloud provider equipment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09531814&OS=09531814&RS=09531814
owner: NUVEM NETWORKS, INC.
number: 09531814
owner_city: Madison
owner_country: US
publication_date: 20140923
---
Cloud computing environments have revolutionized the manner in which business organizations examine the requirements and capacity to implement their data processing needs. A cloud computing environment may allow a cloud provider to host hardware and related items and provide systems and computational power as a service to a customer or other user e.g. individual consumers business organizations or other entities . Thus when implementing data processing needs via a cloud vendor a user may avoid the direct cost of space energy and maintenance in order to acquire computational resources.

Systems and methods to facilitate customers to configure a network to connect to one or more cloud providers are disclosed. In some implementations the system may comprise one or more Cloud Points of Presence PoPs and one or more Cloud Exchanges interconnected with each other through a high performance fiber optic cable backbone. A Cloud PoP may host a container based virtual access gateway which a customer may use to connect to the system. A Cloud Exchange may host a container based virtual cloud gateway which may interface with one or more cloud providers. In some implementations one or more Cloud PoPs and or one or more Cloud Exchanges may host a container based virtual network controller. A customer may deploy an access gateway a cloud gateway and a network controller to easily define a software defined network to connect to one or more cloud providers. Thus in an embodiment the system and interface to create and orchestrate the software defined network may essentially be provided as a service in the cloud i.e. the network is effectively in the cloud and provided as a service to a customer.

In an embodiment there is provided a hosting system to facilitate a customer of an operator of the system to connect to a cloud provider the system comprising a first cloud exchange co located with and connected to first cloud provider equipment a second cloud exchange co located with and connected to second cloud provider equipment wherein the first cloud provider equipment and the second cloud provider equipment are of a same cloud provider but at different geographically spaced locations or the first cloud provider equipment is of a different cloud provider than that of the second cloud provider equipment and wherein the first cloud exchange is connected to the second cloud exchange and a non transitory computer readable medium comprising computer program instructions the instructions configured to facilitate the configuration of a software defined network including the first cloud exchange and or second cloud exchange wherein the network connects the customer to the first cloud provider equipment and or the second cloud provider equipment.

In an embodiment there is provided a hosting system to provide a software defined network as a service the system comprising a cloud exchange co located with and connected to cloud provider equipment a non transitory computer readable medium comprising computer program instructions the instructions configured to configure a virtual networking device at the cloud exchange and or at a customer point of presence receive a software defined network specification from a customer of the operator of the system and create a software defined network based on the received specification wherein the software defined network includes the virtual networking device and connects equipment of the customer to the cloud provider equipment.

In an embodiment there is provided a method to facilitate a customer of an operator of a system to connect to a cloud provider the method comprising facilitating configuration of a software defined network including a first cloud exchange of the system and or a second cloud exchange of the system the network connecting the customer to first cloud provider equipment and or second cloud provider equipment wherein the first cloud exchange is co located with and connected to the first cloud provider equipment wherein the second cloud exchange is co located with and a connected to the second cloud provider equipment the first cloud provider equipment and the second cloud provider equipment being of a same cloud provider but at different geographically spaced locations or the first cloud provider equipment being of a different cloud provider than that of the second cloud provider equipment and wherein the first cloud exchange is connected to the second cloud exchange.

In an embodiment there is provided a method of providing a software defined network as a service the method comprising configuring a virtual networking device at a customer point of presence and or a cloud exchange co located with and connected to cloud provider equipment receiving a software defined network specification from a customer of an operator of the cloud exchange and or customer point of presence and creating a software defined network based on the received specification wherein the software defined network includes the virtual networking device and connects equipment of the customer to the cloud provider equipment.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and not restrictive of the scope of the invention.

To allay one or more those or other problems a customer may wish to establish a direct private connection or link to the cloud provider in addition to or as an alternative to connecting through the internet. The direct connection is through a direct connect port of the cloud provider and is made through a dedicated router of the customer co located with the cloud provider and a dedicated telecommunication link acquired by the customer between the router and the customer. schematically illustrates another example cloud provider network architecture . In this architecture a business location is connected to the customer s dedicated one or more servers of the cloud provider using a private link instead of the internet. The cloud provider provisions direct connect ports for customers to access their dedicated servers . The business location uses the private link to connect to the customer s dedicated router which is in turn cross connected via telecommunications link to the port provisioned by the cloud provider . A virtual private network VPN the dashed line in may be set up for the customer to access one or more servers of the cloud provider .

A private connection to the cloud provider may have its own one or more problems. For example the customer has to request a connection negotiate and sign one or more contracts expend time and cost therefor and perhaps be subject to various fees such as termination fees and or co location fees . Further weeks if not months may be spent in the process of requesting a private connection getting approved and negotiating the contracts.

Furthermore for a private connection a customer typically has to install and maintain expensive networking equipment e.g. router in proximity to the cloud provider s equipment. Needless to say the installation and maintenance of such equipment calls for a significant amount of capital investment. Furthermore if the business customer wants to switch to another cloud provider another private link has to be procured and further networking equipment has to be co located in the vicinity of the other cloud provider. The problem gets worse if the switching takes place before the expiration of the term of one or more contracts in which case the business customer may have to pay a hefty early termination fee to the cloud provider the link provider etc.

And if a business wants a connection to an additional cloud provider through a private connection the above outlined process of request and approval of the connection negotiation and signing of contracts setting up network equipment has to be repeated all over again. The problem is compounded when the business has multiple locations wishing to connect to multiple cloud providers and or multiple separate facilities of a single cloud provider. Thus using private links may become prohibitively expensive cumbersome inflexible etc. for a customer.

The system incorporates network function virtualization NFV to provide virtual network devices which can be instantiated and deployed to create any number of software defined networks SDNs to connect to any number of cloud providers. In an implementation the system is provided by a third party separate from the customers. In an implementation the system is provided by a third party separate from the customers and the cloud providers. In an embodiment the administrator of the system may for example control one of more aspects of the software defined networks such as limit the bandwidth of a software defined network. Thus an administrator of system may control the bandwidth of a software defined network and for example charge the customer depending on bandwidth.

In some implementations the system may comprise one or more Cloud Points of Presence PoPs connected to one or more Cloud Exchanges by a physical network. That is the one or more Cloud PoPs and one or more Cloud Exchanges may be connected to each other through a high performance optical fiber backbone . One Cloud PoP and two Cloud Exchanges are shown in to describe the embodiments of the system. However it should be understood that the system also contemplates multiple Cloud PoPs and multiple Cloud Exchanges connected to each other.

In some implementations a Cloud Exchange may interface with one or more cloud providers. For example Cloud Exchange interfaces with three cloud providers Cloud provider C cloud provider A and cloud provider D at a same general location. As another example Cloud Exchange interfaces with three cloud providers cloud provider E cloud provider B and cloud provider F . While one Cloud Exchange is shown as connected to a plurality of cloud providers in an embodiment each cloud provider may have an associated Cloud Exchange. In some implementations a cloud exchange may be co located within 200 yards and or having a direct connection with a cloud provider equipment. Co located means within the same storage rack as the cloud provider equipment in the same datacenter as the cloud provider equipment in the same building as the cloud provider equipment on the same campus as the cloud provider equipment within 300 yards or less of the cloud provider equipment within 200 yards or less of the cloud provider equipment within 100 yards or less of the cloud provider equipment or within the range of a direct line connection that is not intermediated by an amplifier repeater or router.

Further one or more cloud providers may be at a geographically spaced location e.g. at least 1 mile apart at least 10 miles apart at least 100 miles apart at least 1000 miles apart from another cloud provider and accordingly a first Cloud Exchange may be provided with a first cloud provider and a second Cloud Exchange may be provided at a second cloud provider that is geographically spaced from the first cloud provider. Connectivity to multiple cloud providers allows a customer the flexibility of including multiple cloud providers in the customer s network and or switching between cloud providers. A customer may easily add drop or exchange one or more cloud providers.

In some implementations multiple locations of a business . . . may be connected to a Cloud PoP e.g. a customer interface. As will be appreciated each business location may be connected to a different Cloud PoP. Each individual link . . . may be a private connection and or a connection over the internet. Private connection may be used when a business location is in geographic proximity to Cloud PoP . Connection over the internet may be used when a business location is not within a reasonable geographic distance from a Cloud PoP . In some implementations a business location may have both a private connection and connection over the internet wherein the private connection works as a primary link and the connection over the internet acts as a backup link. Furthermore each private connection and each connection over the internet may comprise of two redundant links. The redundancy ensures the smooth operation of the network even if one or more of the links fail.

In some implementations the system incorporates network function virtualization NFV to provide customers with virtual network devices. The virtual networks devices may be one or more controllers e.g. and or one or more gateways e.g. . A customer may instantiate these virtual networks devices and may deploy them to configure a customized software defined network SDN on demand. In some implementations a customer may configure multiple SDNs . . . using the physical infrastructure of system .

In some implementations a virtual network device e.g. may be localized within a same sub zone e.g. . For example an instance of a virtual network controller or a gateway may use the hardware included in a particular sub zone. In some implementations a redundant virtual network device may be instantiated on the hardware of a different sub zone. Instantiating the redundant virtual network devices on two different sub zones helps ensure the availability of the virtual network device if for example one of the sub zones fails.

In some implementations the virtual network devices . . . may be instantiated on the hardware resources without the use of a hypervisor. In some implementations the virtual network devices . . . may run on a proprietary operating system . In some implementations the virtual network devices may be constructed using containers.

In some implementations a sub zone e.g. in the Cloud PoP may be similar to the sub zone in the Cloud Exchange. Like its counterpart in a Cloud Exchange a sub zone in the Cloud PoP may comprise bare metal hardware resources connected to a pair of peering routers. Likewise multiple virtual network devices may be instantiated and deployed on the hardware resources of a sub zone. In some implementations a virtual network device may be localized within a same sub zone. For example an instance of a virtual controller or gateway may use the hardware included in a particular sub zone. In some implementations a redundant virtual network device may be instantiated using the hardware of a different sub zone. Instantiating the redundant virtual network devices in different sub zones helps ensure the availability of the virtual network device if for example one of the sub zones fails.

In some implementations a customer may connect to a Cloud PoP through a private link. The desire for a private link may be for any number of reasons e.g. a private link may be faster more reliable and or more secure than the internet. The private link may comprise a pair of redundant connections and . The private link may be provided by a telecommunications provider. In some implementations a connection over the internet may be maintained in addition to the private link. The private link may be used as the primary link and the connection over the internet may be used as a secondary link in case for example the private link fails.

In some implementations when a customer uses a private link to connect to a Cloud PoP the customer may maintain networking equipment in close proximity to the Cloud PoP. The networking equipment may comprise a pair of routers and . In some implementations the customer equipment e.g. routers and may be hosted at a customer hotel i.e. space available at the Cloud PoP location for use by equipment dedicated to the customer such as customer supplied equipment . The customer routers and at one side may interface with the private connections and coming in from the customer s business location. On the other side the customer routers and may interface with the Cloud PoP equipment e.g. peering routers and to provide the connectivity from the business location to the Cloud PoP. In some implementations a single Cloud PoP hotels networking equipment for multiple customers. In some implementations a customer may hotel networking equipment at multiple Cloud PoP locations for example when geographically distributed business locations want to connect to respective Cloud PoPs close to each of the locations. Advantageously the Cloud PoP may be relatively remote from cloud provider equipment and thus a customer may effectively obtain a private connection to cloud provider equipment that may be significantly lower cost technically simpler etc. than the customer obtaining a private connection directly to cloud provider equipment.

In some implementations the virtual network controller may comprise a container . That is the operating system has operating system level virtualization that comprises a server virtualization method where the kernel of the operating system e.g. a Unix based operating system such as Linux allows for multiple isolated user space instances instead of just one. Such instances called containers or virtualization engines VE virtual private servers VPS or jails generally look and feel like a real server from the point of view of its owners and users. In addition to isolation mechanisms the kernel typically provides resource management features to limit the impact of one container s activities on the other containers.

The virtual network controller comprises a topology manager a security manager and a virtual network interface card e.g. a virtual Ethernet port . Where the controller has a container the container comprises the topology manager the security manager and the virtual network interface card .

The topology manager may maintain a list of all the other devices in the software defined network which includes the controller . The security manager may be responsible for the secure transfer of data among the nodes of the software defined network by implementing techniques such as encryption etc.

In some implementations the virtual network interface card in the virtual network controller may connect to a virtual network interface card implemented on a virtual switch . The virtual switch may be implemented on a pair of Network Interface Controllers NICs and within the hardware resources of a sub zone. The NICs and may be connected to the peering routers of the zone in which the sub zone resides.

In some implementations the virtual network controller may connect to and control other virtual gateways. In some implementations the virtual network controller may be connected to other virtual network controllers. In some implementations the virtual network controller may not connect to external entities such as the cloud providers. In some implementations multiple virtual network controllers can be implemented within a same sub zone. In some implementations redundant virtual network controllers may be implemented in different sub zones.

In some implementations the virtual gateway may comprise a core container and an edge container . The gateway core container may interact with other virtual devices in the software defined network and the edge container may interact with an external entity connected to the network. The external entity may be a cloud provider a customer deploying the virtual network etc. Where the external entity is customer equipment the virtual gateway may be characterized as an access gateway such as a mobile gateway or a site gateway. Where the external entity is cloud provider equipment the virtual gateway may be characterized as a cloud gateway.

In some implementations the virtual gateway and optionally the gateway core container may comprise a security agent and a topology agent which together may form a gateway core. The gateway core generally faces the internal network i.e. it generally interacts with one or more virtual controllers defined in the network and or with gateway cores of other virtual gateways in the network and connects the internal network to a gateway edge which in turn connects to the external device. For example the topology agent may interact with the topology manager of a virtual network controller to receive a list of devices in the software defined network e.g. respectively defined by an IP address . The topology agent then may cache the received list and based on the list may initiate connection with a neighbor virtual device e.g. another virtual gateway or with a virtual controller. The security agent may receive security credentials from the SDN automation engine see e.g SDN automation engine in . When the virtual gateway needs to connect to its controller the security agent may hand over those credentials to the controller so that the controller may trust the gateway .

In some implementations the virtual gateway and optionally the gateway edge container may comprise a security manager and an edge manager which together may form the gateway edge of the virtual gateway. The gateway edge generally faces the outside of the network i.e. it generally may interact with the equipment of an external device such as cloud provider equipment and or customer equipment and may connect the external device to the gateway core which gateway core in turn may connect the external device to one or more virtual controllers defined in the network and or with gateway cores of other virtual gateways in the network. The security manager may receive security credentials from the SDN automation engine. The edge manager may facilitate and maintain the network connectivity which may be through a private link e.g. to a customer or to a cloud provider or the internet e.g. IPSEC at the edge of the system. For example the edge manager may set up and manage the network connectivity including managing credentials routing protocols etc.

In some implementations the core container and the edge container of the virtual gateway may connect to each other through virtual network interface cards and e.g. virtual Ethernet ports . Furthermore both containers may have respective virtual network interface cards which connect to a virtual switch through virtual network interface cards . The virtual switch may be implemented on a pair of Network Interface Controllers NICs and within the hardware resources of a sub zone. The NICs may be connected to the peering routers of the zone in which the sub zone resides.

In some implementations the virtual gateway may connect to one or more virtual network controllers. In some implementations the virtual gateway may additionally or alternatively connect to one or more other virtual gateways. In some implementations multiple virtual gateways may be implemented within a same sub zone. In some implementations redundant virtual gateways may be implemented in different sub zones.

When the customer configures a network using either the portal or the API the SDN automation engine may then update the payment and billing provider with billing information e.g. costs amount reference number billing address etc. for the configured network. In some implementations an e mail provider may send an acknowledgement e mail to the customer indicating that a software defined network has been configured. In some implementations the SDN automation engine may communicate with the cloud providers APIs to connect the software defined network to one or more of the customer s cloud providers. In some implementations the cloud provider may send a notification to the customer through the cloud provider portal i.e. the portal enabled by the cloud provider for the customer. The notification may indicate that the software defined network is trying to connect the cloud provider. In some implementations the customer is prompted to accept the connection and when the customer accepts the connection the customer is connected to the cloud provider.

In some embodiments the customer may request an access gateway in step S or may request a cloud gateway in step S. In step S the SDN automation engine receives the request to create an access gateway or a cloud gateway. In step S the SDN automation engine determines a billing model e.g. as selected by the customer and interacts with the payment billing provider . In some implementations the billing may be pay as you go on demand for which the billing e.g. payment method may be checked for validity and or charged at step S. In some implementations the customer may pay a monthly charge for the deployment of the network for which the billing e.g. payment method may be checked for validity and or charged at step S. If the payment arrangement in step Sor in step Sis not approved the customer may be notified of the failure in step S and further processing may be stopped. If the payment arrangement is valid the system may proceed to step S where the definition of a cloud or access gateway may be created in the datastore based on the customer s input and automatically generate security credentials therefor. In step S the cloud or access gateway may be deployed on a specified network.

In some implementations the system may facilitate customers to create cloud accounts with the system and or their respective cloud providers. In step S a customer may put in a request to create a cloud account through the API or the portal. In step S the SDN automation engine may receive the request to create the cloud account. In step S the SDN automation engine may create a definition of the cloud account in the datastore based on the user provided input.

In some implementations the system may facilitate the customers to create a site location. A site location may be the network definition of the customer s equipment at a particular location to be connected to the system and may include a specification of a Cloud PoP to which the customer wants to connect the customer s equipment. In step S the customer may put in a request to create a site location. In step S the SDN automation engine receives the request to create the site location. Then in step S the SDN automation engine creates a definition of the site in a datastore based on the customer provided input.

In some implementations the system may facilitate the customer to pair an access gateway to the customer s site location and or pair a cloud gateway to a customer s cloud provider at step S. The details of the pairing as described further below.

In step S the SDN automation engine may select an appropriate SDN resource manager and may send it a create gateway resource control message after which the SDN resource manager may acknowledge the receipt of the control message. In step S the SDN resource manager may allocate a gateway resource from the pool of device resources e.g. a pool of gateways and may configure it for the specific customer network. In step S the SDN resource manager may configure the security agent of the gateway of the specific customer network with a network specific ID and credentials e.g. one or more keys . In step S the SDN resource manager may configure the topology agent of the gateway of the specific customer network with the network specific ID and one or more logical network interfaces. In step S the SDN resource manager may configure the virtual switch by allocating the gateway the vlan virtual port and port bandwidth size used by the topology agent s one or more logical interfaces. In step S the security agent of the newly added gateway may attempt to join the network specified by the network ID and the credentials provided. If the provided credentials are valid the cloud controller security manager adds the gateway to the network and updates the topology manager . In step S the topology agent may attempt to establish a secure connection with the topology manager at the controller .

In step S a customer may put in a request to pair an access site gateway. In step S the SDN automation engine may check if the access gateway has already been paired. If paired the SDN automation engine may stop the process. In step S the SDN automation engine may check whether the site location is defined in the datastore. If not defined the SDN automation engine may stop the process. In step S the SDN automation engine may check if the site location has already been paired. If already paired the SDN automation engine may stop the process. After all the checks are done the SDN automation engine in step S may prompt the customer to specify the site location to pair with the access gateway. In step S the SDN automation engine may check the site gateway type.

In some implementations the connection to the access gateway may be over the internet. In that case the SDN automation engine may proceed to step S and request the customer to specify if not already provided the site equipment details for example IP address device manufacturer device model etc. In step S the SDN automation engine may receive a request to pair an access gateway with site equipment at a specific site location. In step S the SDN automation engine may create a definition of the pairing in the datastore based on the customer provided input and automatically generate security credentials. In step S the SDN automation engine may configure the access gateway to allow connectivity over the internet from the customer specified IP address under the automatically generated security credentials. In step S the SDN automation engine may present the security credentials and device configuration to the customer via the portal API or an e mail. In step S the customer may configure the site equipment to connect with the access gateway using the provided credentials and configuration.

In some implementations the connection to the access gateway may be over a private link. In that case the SDN automation engine may proceed from step S to step S to prompt the customer to provide the connection details. In some implementations the connection details may include the name of the link provider the order number and a letter of authorization LOA from the link provider. In step S the SDN automation engine may receive a request to pair the access gateway with the private link device at a specific Cloud PoP location. In some implementations the access gateway may reside at a specific Cloud PoP. In step S the SDN automation engine may create a definition of the pairing in the datastore based on the user provided input and automatically generate security credentials. In step S the SDN automation engine may configure the access gateway for a private connectivity and where not already set up send the job order request to the system helpdesk. In step S where needed the system helpdesk may co ordinate the install date with the private link provider. In some implementations the system helpdesk may schedule a technician to install the connection and patch the customer device once installed by the provider technician in the allocated customer hotel in accordance with an automatically generated job order by the SDN automation engine.

In some implementations the configured SDN may be a remote access network. In some implementations the configured SDN may be a wide area network. In some implementations the configured SDN may be a cloud bridge network. A cloud bridge network allows traffic to go between different cloud provider equipment e.g. between cloud provider equipment of different cloud providers and or geographically spaced cloud provider equipment of the same cloud provider without the traffic having to pass through the customer. In some implementations the configured SDN may be a consumer virtual private network. In some implementations the configured SDN may be a cloud federation network. A cloud federation network allows the customer connecting from one or more locations to be connected to two or more cloud providers with a connection to at least one of the cloud providers being live. The network thus allows a customer to switchover or failover to a different cloud provider or optionally use both cloud providers at the same time.

In some implementations a customer may access the software defined network from a personal or mobile device. In some implementations a customer may access the software defined network from a device at different locations.

To provide security while for example simplifying the user experience a client application may be provided in collaboration with the automation engine that implements a security process to provide secure access by a user to a customer s network using virtually any device at a location of the user s choice. In an embodiment the security process provides dynamic access to the customer s network using one or more of the following factors a user login associated with the access device a device key associated with the access device a bio factor or other authorization information pass fail associated with the token device geolocation of the token device at time of session initiation reestablishment periodic interval and or a correct one time personal identification code e.g. a PIN from the access device. In an embodiment all of the above factors are used. By using a plurality of factors and different types of factors improved security may be provided.

In an embodiment and at a high level the process may involve a user login associated with the access device at the time of installation of the client application to allow the user to be known without having to supply user credentials at every session initiation. A device key that uniquely identifies the access device and its associated user login may be auto generated at the time of installation and may never be revealed to the end user thus removing it as a factor that the end user has to actively manage.

Further a one time personal identification code OTP may be automatically sent to the user on a registered token device e.g. a cell phone in response to the user normally interacting with the user s network e.g. start an application desired to be accessed . The OTP sent to the token device may be hidden and may require that the user reveal it by providing a bio factor or other authorization information e.g. bio factor or other authorization information may be locally supported on the token device . Upon revealing the OTP the user simply enters the OTP in the provided input box on the access device or if the access device is the token device the token device may be given access without the user entering the OTP. Further a geolocation factor may be automatically provided by the token device upon successful bio factor or authorization information validation.

So from the user perspective the user simply activates an application. If a current session is not present or the current session is about to expire the user enters the automatically provided OTP after it has been revealed on the token device or the device automatically processes the OTP to give access. The resulting user experience is one where the user is asked to enter only a single factor OTP or is not required to enter one at all but the system may be secured by a plurality of factors e.g. 5 factors .

Unlike traditional VPN clients that require username and password credentials separate from the computer and or mobile device that the VPN client runs on the system herein in an embodiment relies on the operating system s underlying credentials key management subsystem. That is as noted above at time of installation of the client application on the access device the user approves the installation through the native operating system security credential subsystem. If the user properly authenticates at time of install a unique device key is generated that is used only by that installation on that access device specific to that user s login. This unique device key is associated with the user s login on the customer s network. So after the user logs into the access device and after the client application is started which may run in the background like other login processes the client application authenticates in the background by sending the unique device key to the automation engine. If the client application is successfully authenticated e.g. the device has not been revoked the client application will continue running e.g. in the background awaiting a VPN connection request to the customer s network. On a mobile device the client application may not operate in the background but may be initiated on demand based on the user attempting to access the customer s network. The client application may use the mobile device s native per APP VPN technology.

In an embodiment and as alluded to above the system employs a secure hidden or locked personal identification code process. For an access device that is not a registered token device e.g. a desktop the user is sent a hidden OTP that the user must reveal to him or herself by means of a bio factor or other authentication information supplied at the token device and which in an embodiment is processed for pass fail at the token device. The revealed OTP is then used e.g. manually input at the access device. For an access device that is also the token device the user is sent an OTP that the user unlocks by means of a bio factor or other authentication information supplied at the token device and which in an embodiment is processed for pass fail at the token device. The unlocked OTP may then be automatically processed at the token device. This simple method helps prevent unauthorized access in cases where both the access device and token device are in the possession of an unauthorized user and helps prevents unauthorized access in cases where the access device and token device are one in the same.

When the access device is the token device as noted above the system still employs multiple factors despite the user only being required to unlock a hidden OTP. For example one or more of the following factors may be used a user login associated with the access device a device key associated with the access device a bio factor or other authorization information pass fail associated with the token device and or a geolocation of the token device at time of session initiation reestablishment periodic interval.

Further in an embodiment the system may provide a relatively quick session reestablishment. In a situation with an existing session that times out or is otherwise interrupted or disconnected unlike traditional methods that require the user to reenter the username and password the client application may employ a simple end user process where the user is simply asked to provide or unlock depending on the access device a new OTP. This method while extremely simple still benefits from the protection of the secure hidden personal identification code process and device based multifactor geo dependent access control.

In step S a customer may launch a SDN protected application website or network service on a computing device that is other than a registered token device a registered token device being a device configured to receive the token described herein and registered with the system to receive the token typically such a device would be a mobile device e.g. a mobile phone . In some implementations the process of non token device access may start after an existing SDN protected session times out. In step S a client program running on the customer s personal device may get notified that the protected application website or network service has been launched or that an existing session has timed out. The client may prompt the customer for a VPN access code and may send the device and customer information to the SDN automation engine via the API . In step S the SDN automation engine may create a login attempt record with the provided information. In step S the SDN automation engine may send a one time personal identification code OTP through e.g. a telephony provider to the customer s registered token device . In step S a client running on the token device may prompt the customer for VPN access verification . If the customer does not proceed to verification in step S the process may stop. If the customer proceeds to verification the customer in step S may be prompted to provide a bio factor or other authentication information to the token device to unlock the OTP . In some implementations the bio factor may include a fingerprint a retina a face a voice a heart rate etc. . If the customer does not provide the bio factor or other authentication information or the provided bio factor or other authentication information is not approved at step S by e.g. the bio factor or other authentication information evaluation system in the token device or located elsewhere the process may stop. If the customer provides the bio factor or other authentication information and it is approved the system proceeds to step S where the client running on the token device may send the bio verification or other authentication information pass fail and geolocation information to the SDN automation engine via the API . The client may also reveal the OTP to the customer . In step S the customer may enter the OTP into the provided box in the VPN access client . In step S the client on the computing device may send the OTP to the SDN automation engine via the API . In step S the SDN automation engine may process the OTP information against the decision matrix that includes device information customer information geolocation information and bio factor or other authentication information pass fail to determine if the access should be granted. If the decision is made to grant access in step S the system may proceed to step S or else the process may stop.

In step S the SDN automation engine may interact with a security agent at a virtual access gateway residing at a Cloud PoP . The security agent may add the IP address of the customer s device e.g. a laptop to its whitelist for a fixed duration of time. In step S the client on the computing device establishes a VPN connection so that the application website or network service may function on the SDN.

In some implementations the authentication for the connection may be session specific and may be terminated after a certain amount of time and the authentication process may have to be started all over again. In some implementations the connection may be terminated after the IP address of the customer s device changes. In some implementations SDN automation engine may receive the geolocation of the token device periodically. If the geolocation of the token device is not within any one or more geographically defined areas associated with the target access gateway the connection may be terminated. For example the authentication to access the SDN might be within a one mile or other amount radius of the present location. If the token device moves outside that radius the authentication may be terminated and the customer may have to start the authentication process again. In some implementations when the session times out or ends the SDN automation engine may update the whitelist to remove the previously added IP address of the device . This provision of a limited authentication helps ensure that the SDN is secure.

In step S the SDN automation engine may process the pass fail information against the decision matrix that includes device s information customer s information geolocation and bio factor or other authentication information pass fail to determine if the access should be granted. If the decision is made to grant access in step S the system may proceed to step S or else the process may stop.

In step S the SDN automation engine may update the whitelist on the target access gateway with the IP address of the token device for a duration of time. In step S the SDN automation engine may send a success notification to the client running on the token device . In step S the client running on the token device may receive the success notification and may show it to the customer . The client running on the token device may then establish the VPN connection with the target access gateway and may launch the SDN protected application .

In some implementations the authentication for the connection may be session specific and may be terminated after a certain amount of time and the authentication process may have to be started over again. In some implementations the connection may be terminated after the IP address of the token device changes. In some implementations SDN automation engine may receive the geolocation of the token device periodically. If the geolocation of the token device is not within any one or more geographically defined areas associated with the target access gateway the connection may be terminated. For example the authentication to access the software defined network might be within a one mile radius of the present location. If the token device moves outside the radius the authentication may be terminated and the customer may have to start the authentication process over again. In some implementations when the session times out or ends the SDN automation engine may update the whitelist to remove the previously added IP address of the token device .

In some implementations the API may provide resource group actions . The API user may use the group actions to create list update and delete a group of items of a particular target resource such as one or more of resources and or resources depending on access privileges associated with the software defined network SDN in the system . In some implementations the API user may use the POST method to create a number of items of a particular resource e.g. create a group of one or more network controllers and or one or more gateways . In some implementations the API user may use the GET method to retrieve a group of items of a particular resource e.g. obtain list of a group of one or more network controllers and or one or more gateways . In some implementations the API user may use the PUT method to modify replace a group of items of a particular resource . In some implementations the API user may use the DEL method to delete a group of items of a particular resource

In some implementations the API may provide resource item actions . The API user may use the item actions to create list update and delete one or more specific items of a target resource such as one or more of resources and or resources depending on access privileges which specific items are identified by the SDN ID . In some implementations the API user may use the POST method to create a specific item of a resource identified by the SDN ID e.g. create the network controller or gateway in the SDN denoted by the SDN ID . In some implementations the API user may use the GET method to retrieve a particular item of resource identified by SDN ID . In some implementations the API user may use the PUT method to modify replace a particular item of resource denoted by SDN ID . In some implementations the API user may use the DEL method to delete an item of resource denoted by SDN ID

Thus in an embodiment in the case of an API call using a group action the API user merely needs to specify the appropriate method and the desired target resource . Optionally the API user may specify the API version in the call. Optionally and or where necessary the API user would further specify in the API body one or more parameters and optionally one or more associated values associated with the API call e.g. a date parameter and date range associated therewith for a GET method . In some implementations the body specification may be in the form of JavaScript Object Notation.

In an embodiment in the case of an API call using an item action the API user merely needs to specify the appropriate method the desired target resource and the SDN ID for the particular item of the resource . Optionally the API user may specify the API version in the call. Optionally and or where necessary the API user would further specify in the API body one or more parameters and optionally one or more associated values associated with the API call e.g. a date parameter and date range associated therewith for a GET method . In some implementations the body specification may be in the form of JavaScript Object Notation.

Thus an API user may be provided a very simple API that enables a wide gamut of operations in association with the software defined network SDN in the system .

In an embodiment there is provided a hosting system to facilitate a customer of an operator of the system to connect to a cloud provider the system comprising a first cloud exchange co located with and connected to first cloud provider equipment a second cloud exchange co located with and connected to second cloud provider equipment wherein the first cloud provider equipment and the second cloud provider equipment are of a same cloud provider but at different geographically spaced locations or the first cloud provider equipment is of a different cloud provider than that of the second cloud provider equipment and wherein the first cloud exchange is connected to the second cloud exchange and a non transitory computer readable medium comprising computer program instructions the instructions configured to facilitate the configuration of a software defined network including the first cloud exchange and or second cloud exchange wherein the network connects the customer to the first cloud provider equipment and or the second cloud provider equipment.

In an embodiment the system further comprises a customer point of presence configured to allow the customer to connect to the first cloud exchange and or the second cloud exchange. In an embodiment the customer point of presence is configured to provide a private connection for the customer. In an embodiment the customer point of presence hosts networking equipment of the customer. In an embodiment the customer point of presence is configured to provide an internet connection to the customer. In an embodiment the computer program instructions are further configured to provide a web portal to the customer for the customer to configure the network. In an embodiment the computer program instructions are further configured to provide an application programming interface to the customer for the customer to configure the network. In an embodiment the configured network comprises a cloud bridge network or a cloud federation network. In an embodiment the computer program instructions are further configured to make available a plurality of virtual networking devices for use by the customer. In an embodiment the computer program instructions are further configured to receive a specification of the network from the customer wherein the network includes the plurality of virtual networking devices. In an embodiment the specification of the network comprises a network topology of the plurality of virtual networking devices. In an embodiment at least one of the virtual networking devices comprises a network controller or a gateway. In an embodiment at least one of the virtual networking devices is localized in a bare metal hardware resource of a sub zone within a customer point of presence. In an embodiment at least one of the virtual networking devices is localized in a bare metal hardware resource of a sub zone within the first cloud exchange and or second cloud exchange. In an embodiment at least one of the virtual networking devices is container based. In an embodiment at least two of the plurality of virtual networking devices are redundant and on two different sub zones of the first cloud exchange of the second cloud exchange and or of a customer point of presence. In an embodiment the system comprises the first cloud provider equipment and the second cloud provider equipment being of the same cloud provider but at different geographically spaced locations. In an embodiment the system comprises the first cloud provider equipment being of a first cloud provider different than a second cloud provider of the second cloud provider equipment. In an embodiment the computer program instructions are further configured to allow the customer to include the first and second cloud providers in the customer s network and or to switch between the first and second cloud providers. In an embodiment the first cloud exchange is connected to the second cloud exchange by a redundant fiber backbone. In an embodiment the computer program instructions are further configured to allow the customer to create a plurality of software defined networks each software defined network of the plurality of software defined networks including the first cloud exchange and or second cloud exchange. In an embodiment the computer program instructions are further configured to interact with a cloud provider application programming interface to connect the software defined network to the first cloud provider equipment and or the second cloud provider equipment and or to manage network traffic from the software defined network to the first cloud provider equipment and or the second cloud provider equipment. In an embodiment the computer program instructions are further configured to allow access to the network based upon multi factor authentication and geolocation information. In an embodiment the computer program instructions are further configured to provide a personal identification code to a token device wherein the personal identification code is hidden or locked at the token device until authorization information is provided at the token device. In an embodiment the computer program instructions are further configured to provide a personal identification code and to allow re establishment of access to the network upon receipt of the personal identification code without receipt of a user name and or user password at the time of re establishment.

In an embodiment there is provided a hosting system to provide a software defined network as a service the system comprising a cloud exchange co located with and connected to cloud provider equipment a non transitory computer readable medium comprising computer program instructions the instructions configured to configure a virtual networking device at the cloud exchange and or at a customer point of presence receive a software defined network specification from a customer of the operator of the system and create a software defined network based on the received specification wherein the software defined network includes the virtual networking device and connects equipment of the customer to the cloud provider equipment.

In an embodiment the computer program instructions are further configured to allow the customer to disconnect from the cloud provider and connect to another cloud provider connected to the system. In an embodiment the computer program instructions are further configured to provide a web portal or an application programming interface to the customer for the customer to configure the network. In an embodiment the computer program instructions are further configured to allow the customer to include the cloud provider and another cloud provider in the customer s network. In an embodiment the computer program instructions are further configured to make available a plurality of virtual networking devices for use by the customer and to receive a specification of the network from the customer wherein the network includes the plurality of virtual networking devices. In an embodiment the computer program instructions are further configured to interact with a cloud provider application programming interface to connect the software defined network to the cloud provider equipment and or to manage network traffic from the software defined network to the cloud provider equipment. In an embodiment the computer program instructions are further configured to allow access to the network based upon multi factor authentication and based upon geolocation information of a token device in relationship to geolocation of a customer s virtual networking device at a customer point of presence. In an embodiment the computer program instructions are further configured to provide a personal identification code to a token device wherein the personal identification code is hidden or locked at the token device until authorization information is provided at the token device. In an embodiment the computer program instructions are further configured to provide a hidden or locked personal identification code and to allow re establishment of access to the network upon receipt of the personal identification code unhidden or unlocked without receipt of a user name and or user password at the time of re establishment. In an embodiment the computer program instructions are further configured to provide an application programming interface API wherein the API allows a method call that merely specifies a type of the method a target resource for the method an identification code for an item of the target resource where the API implements specification of a particular item of the resource in the method call an identification of an API version where the API implements specification of the API version in the method call and a body specifying a parameter and or a value where the API implements specification of a parameter and or a value in the method call.

In an embodiment there is provided a method to facilitate a customer of an operator of a system to connect to a cloud provider the method comprising facilitating configuration of a software defined network including a first cloud exchange of the system and or a second cloud exchange of the system the network connecting the customer to first cloud provider equipment and or second cloud provider equipment wherein the first cloud exchange is co located with and connected to the first cloud provider equipment wherein the second cloud exchange is co located with and a connected to the second cloud provider equipment the first cloud provider equipment and the second cloud provider equipment being of a same cloud provider but at different geographically spaced locations or the first cloud provider equipment being of a different cloud provider than that of the second cloud provider equipment and wherein the first cloud exchange is connected to the second cloud exchange.

In an embodiment the method further comprises providing a web portal or an application programming interface to the customer for the customer to configure the network.

In an embodiment there is provided a method of providing a software defined network as a service the method comprising configuring a virtual networking device at a customer point of presence and or a cloud exchange co located with and connected to cloud provider equipment receiving a software defined network specification from a customer of an operator of the cloud exchange and or customer point of presence and creating a software defined network based on the received specification wherein the software defined network includes the virtual networking device and connects equipment of the customer to the cloud provider equipment.

In an embodiment the method further comprises providing an application programming interface to the customer for the customer to configure the network. In an embodiment the method further comprises allowing the customer to include the cloud provider and another cloud provider in the customer s network. In an embodiment the method further comprises providing a plurality of virtual networking devices to the customer and to receive a specification of the network from the customer wherein the network includes the plurality of virtual networking devices. In an embodiment the method further comprises interacting with a cloud provider application programming interface to connect the software defined network to the cloud provider equipment and or to manage network traffic from the software defined network to the cloud provider equipment. In an embodiment the method further comprises allowing access to the network based upon multi factor authentication and based upon geolocation information of a token device in relationship to geolocation of a customer s virtual networking device at a customer point of presence. In an embodiment the method further comprises providing a personal identification code to a token device wherein the personal identification code is hidden or locked at the token device until authorization information is provided at the token device. In an embodiment the method further comprises providing a hidden or locked personal identification code to a user and allowing re establishment of access to the network upon receipt of the personal identification code unhidden or unlocked without receipt of a user name and or user password at the time of re establishment.

Implementations described in this disclosure may be made in hardware firmware middleware software or various combinations thereof. The technology disclosed herein may also be implemented as computer readable instructions stored on a tangible computer readable storage medium which may be read and executed by one or more processors. A computer readable storage medium may include various mechanisms for storing information in a form readable by a computing device. For example a tangible computer readable storage medium may include optical storage media flash memory devices and or other storage mediums. Further firmware software routines or instructions may be described in the above disclosure in terms of specific exemplary aspects and implementations of the technology and performing certain actions. However it will be apparent that such descriptions are merely for convenience and that such actions may in fact result from computing devices processors controllers or other devices executing firmware software routines or instructions.

The systems described herein are exemplary system configurations. Other configurations may exist. Those having skill in the art will appreciate that the disclosure herein may work with various configurations. Accordingly more or less of the aforementioned system components may be used and or combined in various embodiments. Furthermore various operations of the methods described herein while described in a particular order may be performed in different orders as would be appreciated by those having skill in the art. In some embodiments more of less of the described operations may be used.

As will be appreciated by one skilled in the art aspects of the present disclosure may be illustrated and described herein in any of a number of patentable classes or context including any new and useful process machine manufacture or composition of matter or any new and useful improvement thereof. Accordingly aspects of the present disclosure may be implemented entirely hardware entirely software including firmware resident software micro code etc. or combining software and hardware implementation that may all generally be referred to herein as a circuit module component or system. Furthermore aspects of the present disclosure may take the form of a computer program product embodied in one or more computer readable media having computer readable program code embodied thereon.

Any combination of one or more computer readable media may be utilized. The computer readable media may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an appropriate optical fiber with a repeater a portable compact disc read only memory CDROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device. Program code embodied on a computer readable signal medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present disclosure may be written in any combination of one or more programming languages including an object oriented programming language such as Java Scala Smalltalk Eiffel JADE Emerald C C VB. NET Python or the like conventional procedural programming languages such as the C programming language Visual Basic Fortran 2003 Perl COBOL 2002 PHP ABAP dynamic programming languages such as Python Ruby and Groovy or other programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider or in a cloud computing environment or offered as a service such as a Software as a Service SaaS .

Aspects of the present disclosure are described herein with reference to flowchart illustrations and or block diagrams of methods apparatuses systems and computer program products according to embodiments of the disclosure. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable instruction execution apparatus create a mechanism for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that when executed can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions when stored in the computer readable medium produce an article of manufacture including instructions which when executed cause a computer to implement the function act specified in the flowchart and or block diagram block or blocks. The computer program instructions may also be loaded onto a computer other programmable instruction execution apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatuses or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various aspects of the present disclosure. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular aspects only and is not intended to be limiting of the disclosure. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of any means or step plus function elements in the claims below are intended to include any disclosed structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present disclosure has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the disclosure in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the disclosure. The aspects of the disclosure herein were chosen and described in order to best explain the principles of the disclosure and the practical application and to enable others of ordinary skill in the art to understand the disclosure with various modifications as are suited to the particular use contemplated.

Other implementations uses and advantages of the disclosed technology will be apparent to those skilled in the art from consideration of the specification and practice of the disclosure herein. The specification should be considered exemplary only and the scope of the technology disclosed herein is accordingly intended to be limited only by any associated claims.

