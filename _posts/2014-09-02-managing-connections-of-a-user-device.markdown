---

title: Managing connections of a user device
abstract: Systems, methods, and computer-readable medium are provided for managing connections of user devices. For example, two source devices may be configured to maintain a data stream with one another. The data stream may enable the two source devices to identify one or more connections between each other and at least a third device. In response to receiving an event that indicates content to be provided to the third device, the data stream may be used by the source devices to configure their network connections with the third device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09510083&OS=09510083&RS=09510083
owner: Apple Inc.
number: 09510083
owner_city: Cupertino
owner_country: US
publication_date: 20140902
---
The present application claims the benefit of U.S. Provisional Application No. 62 005 505 filed May 30 2014 which is hereby incorporated by reference for all purposes. The present application is also related to U.S. Provisional Applications U.S. Provisional Application No. 62 005 550 filed May 30 2014 U.S. Provisional Application No. 62 005 534 filed May 30 2014 U.S. Provisional Application No. 62 005 606 filed May 30 2014 U.S. Provisional Application No. 62 005 325 filed May 30 2014 U.S. Provisional Application No. 62 005 336 filed May 0 2014 U.S. Provisional Application No. 62 005 563 filed May 30 2014 U.S. Provisional Application No. 62 005 586 filed May 30 2014 U.S. Provisional Application No. 62 005 715 filed May 30 2014 and U.S. Provisional Application No. 62 005 799 filed May 30 2014 which are concurrently filed and commonly owned and are hereby incorporated by reference for all purposes. The present application is also related to U.S. Provisional Application 61 953 591 filed Mar. 14 2014 which is hereby incorporated by reference for all purposes.

Network accessible user devices have become ubiquitous over the years with many different manufacturers providing a plethora of different types styles and models. For example different types of such user devices may include audio players headsets or the like. Additionally some of these user devices are configured with only one or sometimes only a few functionalities. Further with the number of variations in type and the recent changes in technology some of these user devices may be able to connect to multiple source devices while others may only be able to connect to a single source device. In some examples the source device may be configured to provide content for presentation by the user device. As such managing such user devices may pose challenges for developers of source and user devices.

Embodiments of the present disclosure can provide systems methods and computer readable medium for managing connections of a user device by one or more source devices. Two source devices may be configured to establish and or maintain a data stream for communicating with one another about the connections of the user device. Once established the two source devices may instruct each other how to handle individual network connections with the user device. For example one of the source devices may use the data stream to inform the other source device about its own network connections with the user device. Requests to connect the second source device to the user device may also be shared with the first source device using the data stream.

According to one embodiment a method may be executed by one of the two source devices to establish a network connection with the user device. Using that established connection the first device may provide content e.g. audio content to the user device. When an input is received e.g. at the second source device that indicates additional content for the second source to provide to the user device the second source device may provide configuration instructions to the first source device. The configuration instructions may indicate to the first source device information about configuring the network connection between the first source and the user device. The second source may then establish a connection with the user device and provide content to the user device e.g. once the first connection has been terminated by the first source .

According to another embodiment a system may be implemented as a first computing device e.g. one of the source devices configured to maintain a data stream with the other source device. The first source may also be configured to establish a first network connection with a third device e.g. the user device . The user device may be configured to present information e.g. electronic content to a user. In some aspects the first source may provide information to the user device using the first network connection. Upon receipt of instructions for configuring the first network connection the second computing device may be enabled to establish a different network connection with the user device once the first network connection ends.

According to another embodiment a computer readable medium may include instructions that when executed configure a computer processor of a first computing device to maintain a data stream with a second computing device. In some cases the first computing device may also identify a network connection between the second computing device and a user device. This identification may take place via the data stream where the second device may provide information that identifies the network connection to the first device. An event may be received by the first device that identifies content to be transmitted to the user device. The content may be requested to be transmitted by the first device. Additionally using the data stream instructions to configure the first network connection may be provided to the second device. At least in response to the event another network connection e.g. between the first device and the user device may be utilized to provide the content to the user device from the first device.

Examples of the present disclosure are directed to among other things managing connections of a user device by one or more source devices. In some examples two source devices may be configured to establish and or maintain a data stream for communicating with one another about the connections of the user device. Once established the two source devices may instruct each other how to handle individual network connections with the user device. For example one of the source devices may use the data stream to inform the other source device about its own network connections with the user device. Requests to connect the second source device to the user device may also be shared with the first source device using the data stream.

In some cases connections of mobile peripheral devices also referred to herein as user devices may be managed by the two source devices. In some examples the user devices may be network accessible devices such as but not limited to wireless headsets e.g. headphones and or a microphone wireless audio playback devices e.g. streaming media players Moving Picture Experts Group MPEG 1 or MPEG 2 Audio Layer III MP3 players or the like wireless file transfer devices or other similar types of devices configured to receive and or provide data over a network connection. In some cases such user devices may communicate with the one or more source devices e.g. a laptop a telephone a tablet etc. using various types of wireless communication protocols or standards including but not limited to Bluetooth Bluetooth low energy BTLE ZigBee Near field Communication NFC or the like.

A device may be considered a source device because one of its functions when paired with the user device is to provide content for the user device to present to a user. However in some cases the source device may also receive data from the user device. For example when the user device is a mobile headset the source device e.g. a mobile telephone may send audio e.g. the voice of a caller to the user device and also receive audio e.g. the voice of the user from the user device. Still in the example where the user device is a set of mobile headphones the user device may only receive audio e.g. music etc. from the source device. But it is possible even in this scenario for the user device to provide data back to the source device e.g. volume control information audio position control information playback speed control information or the like . In addition even if the user device does not have a subscriber identity module SIM card or a baseband processor BP it may still be able to simulate such network interface devices. For example the user device may emulate a BP and or a SIM card to generate a ring that will appear to other devices as an outgoing call from the user device. The emulation may be provided by the Bluetooth stack of the user device.

Some user devices may be configured to establish network connections with a plurality of source devices. However other user devices may be configured to only establish network connections with a single source device. Still even when multiple network connections are enabled the user device may be limited to the number of simultaneous connections. In other words a user device may have the capability to establish multiple connections but may be limited to the number of those connections that it can manage at the same time. Alternatively some user devices may be able to manage a plurality of network connections with multiple different source devices. While the following disclosure may focus mostly on user devices that can only manage or otherwise establish a single network connection at a time it should be understood that the same or similar techniques may be used to manage network connections of user devices that can handle multiple different network connections either concurrently or consecutively . Thus the following techniques are not intended to and do not limit the applicability of similar techniques with more advanced user devices.

In at least one example two source devices e.g. a laptop and a mobile phone may communicate with one another to aid in the management of network connections for the user device e.g. as a shared resource of the two source devices . For the purposes of explanation the user device in this scenario may be a Bluetooth headset configured to play audio files of the laptop and or the mobile phone noted above. In other words the user may use the headset to listen to music or other audio that may be stored locally on and or accessed remotely by the laptop and or mobile phone.

Regardless of whether the headset can connect to both the laptop and the mobile phone at the same time the two source devices may be configured to manage individual network connections with the headset. In this way the user may relatively seamlessly use both source devices to play music on the headset e.g. consecutively switching from one source to the other source . In this example the source devices may be configured to establish a network socket or other mechanism for streaming data between the two source devices. Once established the network stream may be utilized by the two source devices to manage the network connections with the user device as if the two source devices were a single device managing a network resource via other network connections.

In some aspects using the established stream e.g. a persistent connection assuming the two source devices stay within a desired distance of each other the laptop and the mobile phone may be able to provide configuration instructions to one another. This communication between the laptop and the mobile device can be independent of data being communicated between the laptop and the headset and or between the mobile phone and the headset. For example if the mobile phone is connected to the headset the mobile phone may use the established stream e.g. the network socket to indicate this connection to the laptop. Alternatively if the laptop is connected to the headset the laptop may use the established stream to indicate this connection to the mobile phone.

In this way the two source devices may be up to date on the current state associated with Bluetooth or other connections of the headset. For example the headset may establish a Bluetooth connection with the laptop and may play music to the user that is provided by the laptop. The information about this connection may be provided by the laptop to the mobile phone via the persistent stream. If the user requests to switch to using the mobile phone for providing the music the user may simply press a play object e.g. a button on the mobile phone.

In some aspects the mobile phone may provide an instruction to the laptop via the stream e.g. to instruct the laptop to release the headset from its Bluetooth connection. In this way the headset may now be able to establish a new connection with another device. As desired the mobile phone may then establish a network connection with the headset and pick up where the laptop left off. In some examples this may enable the user to seamlessly or relatively seamlessly transition from music being played from one device e.g. at a desk to the music being played from another device e.g. while going for a walk or from music being played on one device to a phone call being answered via the other device.

In some examples the first computing device and the second computing device may identify or otherwise request a network socket for establishing a stream of data between the two devices . For example a particular network socket may be used to enable direct streaming of data from the first computing device to the second computing device . The streaming can be performed in a persistent manner as long as the two devices remain within a desired physical range of one another. For example the two devices may stream data through the networks the networks and or a combination of the two.

In some cases the networks and may actually be the same network. As noted above the first computing device and or the second computing device may be any types of computing devices including but not limited to a laptop a mobile phone a wearable device e.g. a smart watch smart glasses a smart wristband or a smart wallet a tablet or the like. Further the first computing device and the second computing device may use the stream to transmit configuration and or state information about the peripheral device . For example the stream may be used to communicate network connection termination instructions call answering instructions call transferring instructions device pairing and or connection instructions or the like.

As noted in some cases the peripheral device may be 1 paired and connected to one device 2 paired to multiple devices but connected to only one at a time or 3 paired and connected to one or more devices. The first type listed above Type 1 peripheral devices e.g. paired and connected to one device may only allow pairing to a single device. Pairing the Type 1 peripheral to a new device may cause the peripheral to forget about the previous pairing. For this type of peripheral switching from a new device to a previously paired device might require a manual re pairing with the previously paired device. The second type listed above Type 2 peripheral devices e.g. paired to multiple devices but connected to only one at a time may allow pairing to multiple devices however they can only connect to one of the paired devices at a time. The third type listed above may divided into two separate types Type 3 and Type 4 peripheral devices e.g. paired and connected to one or more devices . Type 3 and Type 4 devices may allow multiple pairings and multiple connections. However Type 3 devices may experience a multi second delay when switching the connection between paired devices. On the other hand Type 4 devices may switch connections between paired devices without any perceivable delay. The first computing device and or the second computing device may be configured to probe the peripheral device to identify its capabilities. For example the first computing device may utilize a probing sequence for such a determination thus enabling faster switching between paired devices e.g. when it is detected that the peripheral is a Type 4 device . The probing may be performed in advance of any incoming calls. This may allow for faster switching when desired. In other examples the probing can be performed after the first computing device is paired and connected.

In some cases if the peripheral is manufactured by the same manufacturer of the first computing device or the second computing device a flag may be included in the peripheral so that if the flag is detected the probing may not be performed because the capabilities of the peripheral will be known. Additionally a device identifier ID may be provided such that the first computing device or the second computing device may look up the capabilities of the peripheral in a table or other data structure. However as noted above when the type of the peripheral is not known in advance the type and or capabilities of the peripheral may be identified by a probing scheme of two devices. For example a first device may pair with the peripheral . Once paired the second device may attempt to pair with the peripheral . If the pairing between the first device and the peripheral is lost at this point the two devices may have identified a Type 1 device. Additionally if the first device remains paired when the second device connects but the first device cannot also connect while the second device is connected the two devices may have identified a Type 2 device. Also the probing scheme may identify a Type 3 or Type 4 device if both devices are capable of being connected to the peripheral at the same time e.g. at t the first device pairs with the peripheral at t the second device pairs with the peripheral at t the first device connects to the peripheral and at t when the second device connects to the peripheral the first device maintains its connection . At least because the two devices are in communication with one another e.g. via the established stream of data they are able to deduce the type of the peripheral by sharing the results of the probing schemes described above.

In some aspects the first computing device may be configured to establish a network connection with the peripheral device . Once paired and connected the first computing device may be able to provide content to the peripheral via the established connection. For example the first computing device may provide music for the peripheral to play or otherwise present to the user. In some examples if a telephone call arrives at the second computing device while the first connection is being used for playing music the two devices may determine which of the two devices should provide the call to the peripheral . In one example the call could be routed to the first computing device since it is already paired and connected via the network connection . However the call could stay with the second computing device and be routed to the peripheral via a second network connection . In some cases the determination of which device to use for providing the call to the peripheral and thus receiving the call to be provided may be made based at least in part on historical user information e.g. which device the user typically uses for calls preferences e.g. which device the user prefers based at least in part on a configuration setting usage patterns e.g. which device was the user using last and or battery concerns e.g. which device has more battery life remaining or which device uses less batter power to provide calls .

In some examples once the determination of which device is to be connected the two devices may communicate configuration information instructions for switching devices and or metadata associated with the currently active network connection . For example if the first computing device is paired and connected to the peripheral but the devices determine that the second computing should provide an incoming phone call or other content several instructions may be provided via the stream . That is the second computing device may provide a connection termination instruction to the first computing device via the stream . Either before simultaneously or sometime after the second computing device may also begin polling the peripheral device in order to pair. Once the first computing device has released the first network connection the peripheral device may be able to pair and connect with the second computing device via the second network connection . The second computing device may then be able to provide the call to the peripheral device .

At an even higher level the features described herein can enable two devices e.g. the first computing device and the second computing device that are connected and working together e.g. in tandem to share a third device e.g. the user device . In some cases events may come into either or both of the first computing device or the second computing device and the two devices may be configured to determine which of the two devices should alert the user device of the incoming event e.g. when both devices receive the same event information . Both devices may be configured to know the state of the other as well as the state of the user device and may be further configured to command audio or other event information routing and policies of the set of devices .

The first computing device may also be configured to establish a first connection with the user device . This first connection may be utilized by the first computing device to provide content to the user device . For example the first computing device may provide an audio track to the user device for presentation to the user. In some examples the second computing device may receive a data request e.g. from a user or other indication that data may be requested to be provided from the second computing device to the user device . For example a telephone call may come into the second computing device while the user is listening to the audio track via the user device . Even though the audio track is being provided to the user device by the first computing device the user may wish to answer the call from the second computing device . The data request may be the request to answer the call from the second computing device via the user device .

In order to provide the call to the user device the two source devices may first communicate with one another via the data stream to configure the appropriate connections. For example the second computing device may provide configuration information to the first computing device via the data stream. The configuration information may include instructions for ending the first network connection that is being used by the first computing device to provide the audio track. Based at least in part on this configuration information the first computing device may then terminate the first data connection so that the second computing device can subsequently establish a second network connection with the user device . Once the second network connection is established the second computing device may be able to provide content e.g. the call to the user device .

The first source may receive a data request e.g. a request from a user to provide data to the user device or an event e.g. an indication of incoming call or a calendar appointment . At least in response to a first connection request from the first source the user device may approve the connection request and then the first sources may establish the first network connection . The order of these operations may be actually be performed in a variety of different ways e.g. with or without the initial request for the connection from the first source .

Using a Bluetooth network connection the first source may first attempt to pair with the user device by polling e.g. sending a request and waiting for a response . In this example a connection may be established not necessarily by either device once the user device responds with an acceptance of the request. However in other examples the user device may always be pairable with the first source in which case the first source may simply establish a connection with the user device upon completion of the data request or receipt of an event. In some aspects once the first network connection is established the first source may provide content e.g. an audio file portions of an audio file a telephone call a notification of an event or calendar appointment etc. to the user device via the first network connection .

In some cases the second source may at some point receive a second or new data request . Similar to the data request the second data request received by the second source may include but is not limited to a request from a user to provide content of the second source an event received by the second source or the like. The second data request may also include a request from a user to switch content sources e.g. from the first source to the second source . That is the user may navigate to a settings user interface UI of the second source e.g. a network connections control UI and request that the second source become the source of content for the user device . Upon receipt of this data request the second source may be configured to take over control of the user device . As such the second source may provide configuration instructions to the first source using the established stream . The configuration instructions may include among other things an instruction to release or terminate the first network connection metadata associated with a state of the first network connection and or the use device instructions for the first source to stop providing content e.g. pause an audio track or the like.

In one example the configuration instructions may instruct the first source to terminate the first connection and provide metadata about the state of the user device and or the content being provided . The first source may provide metadata to the second source e.g. a location of a song being played by the user device via the stream . Based at least in part on the provided instructions the first source may terminate the first network connection with the user device thus freeing up the user device for other connections e.g. a connection with the second source . Here much like the establishment of the first connection the user device may or may not need to approve a connection request from the second source . The second source or the user device may then establish the second network connection and the second source may then provide content to the user device via the second connection .

Additionally some any or all of the processes may be performed under the control of one or more computer systems configured with specific executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. As noted above the code may be stored on a non transitory computer readable storage medium for example in the form of a computer program including a plurality of instructions executable by one or more processors. In some examples the first computing device shown in may perform the process of . Additionally the following description is from the perspective of the first device but it is to be understood that the method could be performed by the second device instead in which case references to the second computing device would refer to either first device or a third device different from either the first or second devices .

At block a data stream between a first device a second computing device can be maintained. In some examples this process may be executed or performed by a mobile phone of the user while the second computing device with which a stream is being maintained is a different mobile device of the user e.g. a laptop tablet or the like . As noted the maintained stream may enable the mobile phone and the different mobile device to manage a peripheral device e.g. a headset or the like as a shared resource. In some aspects the different mobile device of the user e.g. the second computing device in this example may be a wearable device such as but not limited to smart glasses a smart watch or the like .

At block a first network connection between the second computing device and the user device can be identified. For example the wearable device may already be connected to the headset e.g. streaming music or other content to the headset . As such at the mobile phone may be made aware of the first connection based at least in part on data shared via the stream that was maintained at .

At an event that identifies content to be transmitted to the user device may be received. In some cases the content may be a telephone call received by either or both of the mobile device or the mobile phone and the event may be a notification that the call is being received. In other scenarios the content may be a song that the user wishes to play from the mobile phone e.g. that may not be stored locally on the wearable device and the event may be a notification of a request to play the song. Additionally the content may be a calendar appointment and the event may be a signal indicating that the calendar appointment is occurring or will occur soon.

At instructions for configuring the first network connection to the second computing device may be provided. This instruction may be provided via the stream that is maintained at . As such it should be understood that the stream maintained at may be maintained persistently so long as the mobile phone and the wearable device remain within a threshold distance of each other. In some aspects the instructions for configuring the first network connection may include an instruction to terminate the first network connection or for the wearable device to otherwise release the headset from its connection. The instructions may also include an instruction to provide metadata via the maintained stream. The metadata may identify information about the first network connection including but not limited to a track that is playing on the headset a playing position in the track that is playing on the headset a volume of the headset or the like.

At the content may be provided to the user device via a second connection between the mobile phone and the headset. In other words if the event indicates an incoming call the instructions of may terminate the connection between the wearable device and the headset and the mobile phone may then establish the second connection with the headset. The mobile phone may then source or otherwise provide the incoming telephone call to the headset.

In some examples if the headset is paired and connected to both the mobile phone and the wearable device and the user is listening to music from either the mobile phone and or the wearable device may attempt to determine which device should send an incoming telephone call to the headset. At may be that both the mobile phone and the wearable device are notified when a call comes in. However it may be desired that only one of the two devices route the call to the headset. As such in some cases if both the mobile phone and the wearable device are within range of the other the phone may cause the headset to ring and the wearable device may suppress the ring.

This direction e.g. the determination to have the mobile phone provide the ring instead of the wearable device may be based at least in part on power advantages realized by having the phone route the call. For example the phone might have more battery power or might use less battery power to route calls. However in some examples the two devices may decide to have the wearable device route the call based at least in part on a determination that the wearable device has more remaining battery life or a higher percentage of total battery life remaining. In other examples if the wearable device is out of range of the mobile phone and or is in stand alone mode e.g. not paired with the mobile device the wearable device may route the call to the headset without even notifying the mobile phone. In some cases the mobile phone may act as the arbitrator for the two devices making routing decisions for events that are received at both the mobile phone and the wearable device or other connected peripheral .

Additionally in some examples a telephone call may be transferred from the wearable device to the mobile device e.g. the routing of the call to the headset may be switched from the wearable device to the mobile device by providing an icon on a user interface UI that identifies the connection and or the wearable device. By sliding the icon the user may be able to cause the call to be transferred from the wearable device to the mobile phone but still sent to the headset .

Other use cases include when a user is listening to music on the wearable device and a call comes in the user may be able to tap an icon on the wearable device and cause the music to pause or duck thereby allowing the user to hear the incoming call. This may be implemented by having the call sent from the wearable device or from the mobile phone to the headset. In the former scenario the wearable device would be configured to pause or duck the music temporarily while providing the call. However I the latter scenario the mobile phone may be configured to provide an instruction via the stream to the wearable device instructing the wearable device to pause or duck the music and or to give up the connection with the headset so that the mobile phone may connect and provide the call.

As noted using the stream between the mobile phone and the wearable device or between any two connectible user devices the two devices may be able to know each other s available audio routes current audio route and whether audio is active. Using this information smart decisions may be made regarding which of the mobile device or wearable device should provide notifications and or information. For example if the wearable device is actively playing music on a headset the system may assume that the user last interacted with the wearable device. In this case if a call or other notification came in the system may determine to provide the call or other notification via the wearable device regardless of battery or other optimization concerns.

As noted using the stream between the mobile phone and the wearable device or between any two connectible user devices the two devices may be able to know the active audio routes of each of the two devices with respect to the headset. Using this information smart decisions may be made regarding which of the mobile device or wearable device should provide notifications and or information. For example if the wearable device is actively playing music on the headset the system may assume that the user last interacted with the wearable device. In this case if a call or other notification came in the system may determine to provide the call or other notification via the wearable device regardless of battery or other optimization concerns.

Other data such as information that identifies interaction with a screen information that identifies whether a screen is on or other the like may be utilized to predict which device e.g. the wearable device or the mobile phone the user is actively using. As noted this information can be used to determine which device should manage the headset. Routing decisions of incoming events may also be determined based at least in part on the type of event it is whether it has a sound etc.

Other decisions as noted may be based at least in part on power management decisions. In some cases the power management decisions may be made by an external service. However the routing decisions of this system may be based at least in part on those power management rules. In one non limiting example if a user switches music being played on a headset from a first device to a second device for a particular reason. At some point the system may automatically revert the connection back to the device with the best power efficiency. In some cases the switch may only be made automatically when the user stops or pauses playback however in other cases it might be done when the connected device appears to be running out of or low on power e.g. once a threshold remaining power level is reached .

While the illustrated example represents the computing devices accessing the peripheral device via the networks and or the described techniques may equally apply in instances where the computing devices interact with the user device over a landline phone via a kiosk or in any other manner. It is also noted that the described techniques may apply in other client server arrangements as well as in non client server arrangements e.g. locally stored applications peer to peer configurations etc. .

As noted above the first and second computing devices may be configured to receive events communicate with one another through the stream e.g. via the networks and manage routing of information between the two devices and the user devices . In some examples the computing devices may be in communication with each other via the networks or via other network connections.

In one illustrative configuration either or both of the computing devices may include at least one memory and one or more processing units or processor s . The processor s may be implemented as appropriate in hardware software e.g. computer executable instructions firmware etc. or combinations thereof. Computer executable instruction or firmware implementations of the processor s may include machine executable instructions written in any suitable programming language to perform the various functions described. The computing devices may also include geo location devices e.g. a global positioning system GPS device or the like for providing and or recording geographic location information associated with the computing devices .

The memory may store program instructions that are loadable and executable on the processor s as well as data generated during the execution of these programs. Depending on the configuration and type of mobile device the memory may be volatile e.g. random access memory RAM and or non volatile e.g. read only memory ROM flash memory etc. . The mobile device may also include additional removable storage and or non removable storage including but not limited to magnetic storage optical disks etc. The disk drives and their associated non transitory computer readable media may provide non volatile storage of computer readable instructions program modules data structures and other data for the computing devices. In some implementations the memory may include multiple different types of memory such as RAM static random access memory SRAM dynamic random access memory DRAM or ROM. While the volatile memory described herein may be referred to as RAM any volatile memory e.g. that does not maintain data stored therein once unplugged from a host and or power would be appropriate.

The memory and the additional storage both removable and non removable are all examples of non transitory computer readable storage media. The memory and the additional storage are all examples of non transitory computer storage media. Additional types of computer storage media that may be present in the computing devices may include but are not limited to phase change RAM PRAM SRAM electrically erasable programmable read only memory EEPROM flash memory compact disc read only memory CD ROM digital video disc DVD magnetic cassettes or tape magnetic disk storage or any other medium that can be used to store the desired information and that can be accessed by the computing devices . Combinations of any of the above should also be included within the scope of non transitory computer readable media. Alternatively computer readable communication media may include computer readable instructions program modules or other data transmitted within a data signal such as a carrier wave or other transmission. However as used herein computer readable storage media does not include computer readable communication media.

The computing devices may also contain communications connection s that allow the computing devices to communicate with a data store or another computing device via the networks . The computing devices may also include input output I O device s such as a keyboard a mouse a pen a voice input device a touch input device a display speakers etc.

Turning to the contents of the memory in more detail the memory may include an operating system and or one or more application programs or services for implementing the features disclosed herein e.g. the process of including a stream module a connection module and or a content module . In some examples the stream module may be configured to establish and or manage a stream e.g. a persistent Bluetooth connection between the first computing device and the second computing device such as the stream of . The stream may in some cases be established via a network socket when the two devices are within a specific range of one another. The specific range may be defined by the type of network socket connection and or protocol used for the stream . For example if Bluetooth has an effective range of four or five meters then the stream may be persistent as long the first computing device and the second computing device are within four or five meters of each other. However in other examples no specific range may be necessary as the two devices may set up a stream while they are both connected to a single network e.g. a LAN or the like . Further in some examples the stream module may be configured to manage the communications over the stream by the two computing devices . These communications may include but are not limited to providing state information connection information e.g. connections of the user devices and or any other information that may enable or aid the two computing devices is managing the shared resource and or routing events audio etc. to the user devices .

In some examples the connection module may be configured to manage or otherwise control secondary connections of the computing devices . For example secondary connections may include connections with computing devices other than the first and second computing devices . That is when the first computing device connects with a peripheral device this may be considered a secondary connection for the first computing device . Similarly a secondary connection of the second computing device may include one with the user device . Secondary connections e.g. a first network connection between the first computing device and the user device or a second network connection between the second computing device and the user device may be utilized by the first and second computing devices to provide event information audio signals and or other data to the user devices .

In some examples the secondary connections managed by the connection module may be initiated by the first or second computing devices and or by the user devices . For example the first computing device may send a request to establish a first network connection with the user device using the connection module . It may then wait until it receives a response from the user device e.g. a handshake to establish a connection an indication from a user to quit waiting information from the stream to quit waiting or a timeout signal e.g. indicating that the first computing device should not wait any longer . As noted above the first and second computing devices may communicate via the stream e.g. utilizing the stream module to provide each other with connection information e.g. the first computing device may instruct the second computing device to end a connection with the user device for managing the connections of the user device .

In some examples the content module may be configured to store mange and or provide content to the user devices via the secondary connections managed by the connection module . For example the content module may be configured to receive content e.g. a telephone call a song a video etc. and provide the content to the user device . If the content is a song the content module may be responsible for storing the song locally preparing the song for transmission and then providing the song to the user device via the secondary connection. In other examples the content may be a call and the content module may be configured to provide the audio of the call to the user device e.g. a headset .

The communication of data from a device e.g. the first computing device the second computing device and or the user devices of can occur through various protocols e.g. 802.11 protocols Bluetooth protocols and near field communication NFC protocols . To determine which protocol to use a device can include a link manager for determining which protocol to use for a particular application and thus which driver path data should be sent. A lower level link layer can also perform selections of a particular protocol to use. Further a user tunnel UTUN controller can coordinate a plurality of virtual connections with various client applications to communicate over a common socket connection with another device e.g. the first computing device communicating with the second computing device .

In some embodiments a client application on the device e.g. mobile device can request data to be sent to another device e.g. companion device . The request can specify the other device via any suitable identifier e.g. an account name an IP address a MAC address etc. The request can be before or after the device determines that the other device is within communication e.g. as determined by initial signaling such as a handshake. The data e.g. in a message or a stream can be sent any suitable application layer protocol such as HTTP RTP SMTP MGCP etc. The other device can be any device including another device of the user. The request can made be in response to an action by the user an internal event e.g. based on time or other criteria that may be in a same or other application e.g. a calendar app or an external event e.g. in response to a message from another device . An example of an event is a syncing event.

Before sending data client application can submit an open socket request e.g. in a streaming example . The socket request can use information from an identity services IDS framework which can provide an address or other type of ID for the other device. For example client application can know account information for the second device e.g. account information of a different or same user and IDS framework can store a list of device IDs for a particular account. IDS framework can be in communication with identity management infrastructure to obtain the list. Thus IDS framework can store or otherwise obtain device IDs e.g. addresses for all devices that a user has registered with ID infrastructure . For example IDS framework can request via an IDS daemon to ID infrastructure to obtain the device IDs. In one implementation the socket request can be made to kernel .

In a messaging example the request to send data can go to IDS framework to obtain a device ID which can be sent to message a message controller and a user tunnel UTUN controller . UTUN controller can establish a mapping between the device ID and an IP address e.g. a virtual IP address when the device ID is not an IP address. A socket can be created between message controller which assigns a device ID to the socket and kernel which can assigns an address to the socket such as a virtual IP address . UTUN controller can be used to create the socket connection between message controller and kernel . In this manner the send date request from client application does not need to include a device ID but can specify an account which can then be cross referenced by IDS framework with known devices of the account and their capabilities e.g. if the request requires certain capabilities . Given that a device ID can be obtained a pairing does not need to occur prior to creating the socket.

In various embodiments IDS framework can receive a particular port service at the other device from client application determine the port service based on information obtained from an ID infrastructure or determine the port service from a token sent in the request. IDS framework can then communicate a device ID and other header information to message controller and or UTUN controller . IDS framework and UTUN controller can communicate via cross process communication XPC . UTUN controller can be part of an IDS daemon and can receive a device ID from ID infrastructure .

As mentioned above UTUN controller can create a virtual address that corresponds to the actual device address where the virtual address can be used to create a virtual socket. A virtual socket can also be created using any device ID e.g. an actual address of a device or other ID . As an example a socket can be created for communication between client application and kernel e.g. in a streaming context where kernel can have various sockets open with various client applications. Kernel can have a single connection to UTUN controller for the other device and multiplex mux the data from various client applications into the single connection. Instead or in addition UTUN controller can also perform the muxing e.g. if multiple socket exist between kernel and UTUN controller for various client applications to the other device. Incoming data can be demultiplexed demuxed for sending to the destination client application.

As another example a socket can be created between kernel and message controller e.g. in a messaging context where a socket can be created for each destination device with different sockets to a same device potentially having different priorities. Thus a particular virtual socket can be associated with a particular device and a particular priority e.g. high and low . Message controller can have various connections to various client applications. Thus message controller can provide mux demux capabilities.

UTUN controller can create a primary socket with the other device. When UTUN controller receives data using a virtual connection associated with the second device it can then map the virtual connection to the primary socket for communicating with the other device. All data for the other device can then be sent out through the primary socket. The virtual address for a virtual socket can be passed back to client application e.g. in the stream context. In one embodiment a virtual socket involving kernel is a TCP socket. The virtual address can have a same format as a regular address e.g. an IPv6 address. A mux module can include any combination of kernel message controller and UTUN controller .

When client application sends data client application can use the virtual socket to send data to kernel . For example the data can be sent using TCP via the virtual socket. Kernel can implement an UTUN interface for communicating with UTUN controller . Kernel would pass the data e.g. with a TCP header and the virtual socket identifying the virtual address to UTUN controller which would then use the virtual address to resolve the device address for determining the device socket.

When sending to the data over the device socket a link manager can determine which link to use. A link can be a particular combination of a wireless interface protocol e.g. Bluetooth or Wi Fi and a transport protocol e.g. TCP UDP etc. . In this manner UTUN controller does not need to know how the data is being sent but instead can simply send the data to link manager .

In various embodiments the determination by link manger can be made per data packet per set of data packets per device socket and may change from one data packet to another. Link manager may then select a link for sending the data. In the example shown a Wi Fi link provides software drivers for communicating with one or more Wi Fi protocols and BTLE link provides software drivers for communicating with Blutooth LE. Wi Fi link is in communication with Wi Fi hardware and BTLE link is in communication with BTLE hardware . Wi Fi link can be used for various Wi Fi protocols such as infra WiFi infrastructure WiFi . In one embodiment link manager can try all links to determine whether any of the links can contact the other device and then use a connected link with a highest predetermined rank or dynamic rank.

In some embodiments a combined link can include an interface for communicating with link manager and a selector that selects a particular protocol to use. The protocols can be the same or different than that available to link manager . Selector can perform similar functions as link manager in that a particular link is selected. However link manager and selector can use different criteria for determining which link to use. For example link manager can determine to use combined link and selector can then determine that BTLE hardware is to be used. The hardware can be contained on a same or separate chips.

One or more protocols can be only available via combined link such as classic Bluetooth hardware . Link manager and selector can use various criteria for determining which link to use such as power usage of a link speed of a link e.g. real time data rate and signal strength of a link. A goal of the optimization for selecting a link can be to provide a minimal data rate at a lowest possible energy.

Illustrative methods and systems for managing user device connections are described above. Some or all of these systems and methods may but need not be implemented at least partially by architectures such as those shown at least in above. In the foregoing description various non limiting examples were described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the examples. However it should also be apparent to one skilled in the art that the examples may be practiced without the specific details. Furthermore well known features were sometimes omitted or simplified in order not to obscure the example being described.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User devices e.g. client devices can include any type of general purpose personal computer such as but not limited to desktop or laptop computers running a standard operating system as well as cellular wireless and or handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. These devices can also include other electronic devices such as dummy terminals thin clients gaming systems or other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers. Alternatively the memory can be remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as desired.

The system and various devices may also include one or more software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the disclosure as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the disclosure to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the disclosure as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the disclosure and does not pose a limitation on the scope of the disclosure unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the disclosure.

Disjunctive language such as the phrase at least one of X Y or Z unless specifically stated otherwise is otherwise understood within the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

Any of the methods described herein may be totally or partially performed with a computer system including one or more processors which can be configured to perform the steps. Thus embodiments can be directed to computer systems configured to perform the steps of any of the methods described herein potentially with different components performing a respective steps or a respective group of steps. Although presented as numbered steps steps of methods herein can be performed at a same time or in a different order. Additionally portions of these steps may be used with portions of other steps from other methods. Also all or portions of a step may be optional. Additionally any of the steps of any of the methods can be performed with modules circuits or other means for performing these steps.

The specific details of particular embodiments may be combined in any suitable manner without departing from the spirit and scope of embodiments of the invention. However other embodiments of the invention may be directed to specific embodiments relating to each individual aspect or specific combinations of these individual aspects

The above description of exemplary embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form described and many modifications and variations are possible in light of the teaching above. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention in various embodiments and with various modifications as are suited to the particular use contemplated.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

