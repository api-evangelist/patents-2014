---

title: Content-based association of device to user
abstract: Example methods and systems for content-based association of a device to a user are presented. In an example method, data corresponding to each of a plurality of items of content stored within a user device are accessed. A device identifier for the user device is generated based on the data. The device identifier is transmitted from the user device to a service device to associate the user device with a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09356914&OS=09356914&RS=09356914
owner: Gracenote, Inc.
number: 09356914
owner_city: Emeryville
owner_country: US
publication_date: 20140730
---
A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document Copyright 2014 Gracenote Inc. All Rights Reserved.

This application relates generally to data processing and more specifically to systems and methods for associating a device with a user based on content.

Users commonly employ several electronic devices such as desktop computers laptop computers tablet computers gaming systems smart phones and so on over the course of a single day. Typically some commonality in terms of applications services and other functionality may exist among multiple such devices often leading to a commonality of content that is stored on the various devices or that is otherwise accessible via the devices. Such content may include for example music or other audio files video files still image files and text or document files.

In some applications executed on a user device and in some services accessed over the Internet or other wide area network WAN by way of the device the application or service may employ an identification of the user of the device to facilitate access to the application or service to provide personalized content and or functionality based on the identity of the user and enable other user specific actions.

However users are increasingly wary of providing personal identifying information over the Internet due to ever growing concerns of identity theft and the desire to remain anonymous. Web based cookies device media access control MAC addresses and similar types of device and user identification are increasingly unavailable on mobile devices. Further application tokens server based tokens and other similar forms of anonymous user identification available from a server typically involve the use of an active Internet connection to access the tokens and more importantly aren t uniformly shared across the applications on mobile or embedded devices.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of example embodiments. It will be evident however to one skilled in the art that the present subject matter may be practiced without these specific details.

The network may be any communication network capable of transporting information between the server and the user devices . Examples of the network may be include but are not limited to one or more of wide area networks WANs e.g. the Internet cellular telephone data networks e.g. 3G third generation and 4G fourth generation networks local area networks LANs and other wireless and wired communication networks.

Each user device A B and C is shown as including one or more applications A B and C respectively alternatively applications and content A B and C respectively alternatively content . While the example of depicts three user devices any other number of user devices may be associated with a particular user in other embodiments. Examples of the user device may include but are not limited to a desktop computer a laptop computer a tablet computer a smart phone a gaming system a smart television or any other device capable of storing and or access content .

Each of the user devices may include one or more applications . The applications may include for example audio generation and or playback applications video generation and or playback applications still image capture and or display applications email applications Short Message Service SMS applications word processing applications document reader applications graphics applications web browser applications and any other applications that access content. The content may include for example audio files audio video files still image files textual files e.g. documents texts emails and so on graphics files contact information files web browser history encrypted and or decrypted security certificates keys and any other type of content including media content. In some examples access of one or more of the applications operating on a user device may be limited to some proper subset of the content stored on or accessible by way of the user device . For example a video playback application may have access only to video and audio video files but not to contact information files. In other examples one or more of the user devices could provide a function or service associated with the content that is not associated with a particular application but by way of another function or service such as a system function provided by way of an operating system executing on the user device .

Within the environment of the communication system as is discussed in greater detail below a user device may process its content to produce an identifier for that user device that is ultimately provided to the server . In some examples the identifier for the user device may be considered a digital fingerprint of the content stored on or otherwise accessible via the user device . Presuming that the content among user devices of the same user is at least somewhat similar and or presuming that the content of the same user device evolves while maintaining some core content the server can employ the generated device identifiers to correlate one or more user devices with its particular user in an anonymous fashion without requesting explicit user information thus reducing the possibility of identity theft and increasing the overall security of the communication system . Other potential aspects of the communication system are described in greater detail below.

Some of the types of content may also include or at least be associated with metadata that includes at least some descriptive information corresponding to its related content . As depicted in for example the audio content A may include audio content metadata A the video content B may include video content metadata B the still image content C may include still image metadata C and the content information content D may include or may be considered in and of itself content information metadata D or more generally content metadata .

In some examples the metadata associated with particular content may depend on the type of content . For example the audio content metadata A may include for example a title of the associated audio content A e.g. an audio file a run time of the associated audio content A a hash and or fingerprint of a binary file representing the associated audio content A or a defined portion thereof parameters of an encoded file representing the associated audio content A e.g. compression rate a play count of the associated audio content A e.g. a number of times the audio file has been played a size e.g. in bytes of the associated audio content A a capture date and or time of the associated audio content A a genre of the associated audio content A an artist of the associated audio content A a composer of the associated audio content A a viewer rating of the associated audio content A an album in which the associated audio content A appears and so on.

By contrast the video content metadata B may include for example a title of the associated video content B e.g. a video file a run time of the associated video content B a hash and or fingerprint of a binary file representing the associated video content B or a defined portion thereof parameters of an encoded file representing the associated video content B e.g. color space compression rate and or frame rate a play count of the associated video content B a size e.g. in bytes of the associated video content B a capture date and or time of the associated video content B a genre of the associated video content B a director of the associated video content B cast and or crew of the associated video content B a viewer rating of the associated video content B and the like.

In some examples the still image metadata C may include for instance a title of the associated still image content C e.g. a still image file a size e.g. in bytes of the associated still image content C dimensions e.g. in pixels of the associated still image content C a capture date and or time of the associated still image content C a geographic location where the associated still image content C was captured e.g. a location name or Global Positioning System GPS coordinates access and or modification dates of the associated still image content C parameters of a compressed file representing the associated still image content C e.g. color space and or compression ratio hashes of human assigned freeform tags assigned to the still image content C and so forth. Other metadata such as for example any fields of the Exchangeable image file format Exif specification or the like may also be included in some embodiments.

The content information metadata D may include for example for each person indicated in the content information content D a name of the contact a work phone number of the contact a cell phone number of the contact a work email address of the contact a personal email address of the contact a home address of the contact creation and or modification dates and or times of the contact and so on. Other types of metadata may be included for this and other types of content in other embodiments.

The device identifier generation module of may be configured to generate an identifier for the user device based on at least a portion of the content and or the metadata corresponding with the content . In some embodiments the device identifier generation module may be associated with a particular application operating within the user device . Accordingly in such examples the device identifier generation module may only access the content and or associated metadata that is available to that particular application . For instance a video player application may only be configured to access video content B and or its associated metadata B. In that case the device identifier generation module may only employ the video content B and or the video content metadata B to generate a device identifier to be used in conjunction with the video player application . As a result the device identifier generation module may employ only that content for which a user has provided permission to access or content that the application generally is permitted to access to perform its assigned functions to generate a device identifier. In other examples the device identifier generation module may access the content and associated metadata for a number of related applications such as those that are provided by the same application provider. In yet other embodiments the device identifier generation module may access all or nearly all content and associated metadata available within the user device .

In some embodiments the device identifier generation module may select a portion of available content and or metadata based on a date and or time associated with each item of content and or metadata . For example the device identifier generation module may select content and or metadata that is older than some minimum age so that newer items of content that have just been added and thus may not remain on the user device for a significant time period are not included in the device identifier generation. In other examples the device identifier generation module may weight certain content such as for example older more stable content more heavily or strongly than other content thus contributing more to the generated device identifier. Consequently the content and or metadata utilized to generate the device identifier in this example may represent a core of the content stored on the device thus possibly resulting in a stable identifier for the user device that changes relatively little over time. Further in some examples content that is deemed more stable and thus may be associated with a stronger weight may be reinforced from time to time. For example each time the user device checks in with an identification service the device identifier may be matched against identifiers previously obtained at the service from the user device . Such matching may cause the weight associated with the content and or metadata to be reinforced strengthened or maintained. Also more volatile or less stable content and or metadata may be marked with a flag or otherwise denoted to indicate to the device identifier generation module that such content and or metadata may be ignored in the generation of the device identifier.

In an example the device identifier generation module generates the device identifier based primarily on the metadata to which the device identifier generation module has access as the metadata may be easily identified and obtained is often much smaller in size than the associated content and is thus likely to be easier and faster to process in generating the identifier for the user device .

As the content and or associated metadata may correlate with the user employing the user device the device identifier generated by the device identifier generation module may be considered to represent the user . Further due to similarities between the current content and or associated metadata that remain over time within a user device different device identifiers generated at different times for the same user device may be similar to a degree such that the device identifiers may be detected as representing the same user device and thus the same user .

Content and associated metadata between user devices of the same user may often be synchronized to some degree between the user devices such as for example by way of a server providing the same service to the user devices . As a result with the content and associated metadata of two or more user devices of the same user possibly being somewhat similar device identifiers generated for the two user devices may also be similar. Consequently either or both of the device identifiers may be useful as identifiers for the user .

In some examples additional information may be employed in conjunction with the device identifiers to associate two or more user devices to the same user . Such additional information may be advantageous in situations in which the content of two user devices for two different users are so similar as to indicate that the users are one and the same. For example location information such as GPS location information reverse Internet Protocol IP address mapping and or other information may be employed as a weighting factor with stronger weights being associated with user devices that are located in the same general geographic area. Further in cases in which such a weighting factor is low thus indicating that two separate user devices are not physically located closely to each other may not reduce the effect of device identifiers that indicate a strong association of the two or more user devices to the same user as different user devices of the same user may be purposely positioned in different locations e.g. due to the user travelling and leaving one of the user devices at home or the user may employ different Internet services for different user devices . In other examples the additional information may include explicit identifiers obtained from third party authentication services such as those offered by Facebook or Google which may be used to more correctly associate two or more user devices to the same user . In yet other embodiments described below in which groups of users that access or download the same or similar content are to be identified for purposes of advertising content recommendations or the like such additional information may not be desired.

The device identifier generation module may process either or both of the content and associated metadata of a user device by any of a number of techniques to produce a device identifier for the user device . In an embodiment the device identifier generation module may execute a hash function on the content and or associated metadata to generate the device identifier. For example the device identifier generation module may hash the title artist track duration and or other metadata for audio tracks on the user device resulting in a set or string of symbols serving as the device identifier. In another embodiment the device identifier generation module may execute a hash function on a portion of the content and or associated metadata and then organize the resulting sets of symbols possibly according to another portion of the content and or metadata . For example the device identifier generation module may hash the title and artist metadata for each audio track on the user device individually resulting in multiple sets or strings of symbols which may then be sorted by track duration or other metadata associated with the audio tracks resulting in a single set or string of symbols serving as the device identifier. The device identifier generation module may employ myriad other processing methods for generating a limited length device identifier from multiple data inputs including hashing and other computational methods in other embodiments to generate the device identifier.

The device identifier aggregation module may be configured to aggregate or otherwise combine two or more device identifiers generated by the device identifier generation module to generate yet another device identifier for the user device . In one example the device identifier aggregation module may concatenate or otherwise group multiple device identifiers together to form a sort of aggregate device identifier in which the original individual device identifiers remain observable or retrievable. In some examples each of a set of device identifiers may possess differing levels of entropy or degree of uncertainty or randomness that may be represented in each identifier. As a result the greater level of entropy associated with a particular device identifier the more likely that the device identifier is unique from others and thus the more likely that the user associated with the device identifier may be distinguished from other users . Accordingly one or more of the device identifiers may be employed depending on the needs of the user device to distinguish the user from other users. In other examples the multiple device identifiers may be combined mathematically in some fashion to form a sort of composite device identifier that retains a format similar to each of the original device identifiers. Many other methods or means of aggregating or combining device identifiers for the user device may be employed in other examples.

In yet other examples the device identifier aggregation module may remove or delete one or more device identifiers from the user device such as those device identifiers that are duplicates or near duplicates of one or more device identifiers previously generated or those device identifiers that are extremely different e.g. outliers from one or more previous device identifiers. In other examples the device identifier aggregation module may consolidate the device identifiers in such a manner that the effect of content that is only stored on the user device for a relatively short time period and thus are reflected in only some device identifiers but not in earlier or later device identifiers may be removed.

The device identifier storage module may store device identifiers generated aggregated or otherwise processed by either or both of the device identifier generation module and the device identifier aggregation module . In one example the device identifier storage module may organize the stored device identifiers according to the particular applications for which each device identifier was generated. Further the device identifier storage module may transmit to the server one or more of the stored device identifiers for use in for example identifying the user associated with the user device . Transmitting one or more device identifiers to the server may thus cause the server to facilitate access to particular functions or services provided by the server to the user device . In some embodiments the user device may employ the stored device identifiers to allow one or more applications executing on the user device to provide specific functions or services without the use of the server such as during times when the user device is not communicatively connected to the network .

While the above discussion focuses on the identification of multiple user devices to the same user multiple user devices belonging to different users may be grouped according to similar content being stored on or accessed by the user devices to identify the associated users as a group. The users of the same group may thus belong to a similar demographic group or exhibit the same behavioral content usage or content consumption characteristics which may be useful for advertising and content recommendation purposes. For example users that tend to store or watch the same video programs songs and the like as indicated by device identifiers that are based on such content may be associated with a particular group to which content recommendations advertising and so on are to be targeted. Further in some examples the device identifiers by way of their relative differences may indicate a logical distance between one or more users and a core group of the users . These differences may be caused for example by how many video programs that define the group are stored on a particular user device of the user which video programs differentiate the user from other users of the group and so on. Such information may be determined by processing the content of the user devices directly by employing the content access history of a user device at the server and or by other means. The number of times a particular video program has been played as well as information indicating that a program has been downloaded but not played may also be taken into account. Further the differences between stable and volatile content as described above may also be utilized in determining membership of a particular user within the group the relative strength of that membership and so on.

The device identifier comparison module may be configured to compare multiple device identifiers received from one or more user devices to determine which device identifiers may be associated with the same user . In some embodiments one or more of the device identifiers may have just been received while others of the device identifiers may have been previously received and stored at the server . In one example the device identifier comparison module may employ a genetic sequencing algorithm to compare different device identifiers to determine if they represent essentially the same content and or metadata despite relatively minor differences between the content and or metadata employed to generate the device identifiers. Other methods or algorithms of determining whether two or more different device identifiers represent the same user such as fuzzy logic algorithms latent semantic analysis LSA latent semantic indexing LSI and other methods of correlating different symbols together based on a magnitude of the differences between the symbols may be used in other embodiments.

Based on a determination in the device identifier comparison module that two or more different device identifiers represent the same user the device identifier aggregation module may associate the two device identifiers in some way to record their relationship with the same user . In some examples the device identifier aggregation module may collect or store the identifiers as a group and or may combine or aggregate the device identifiers in some manner such as by concatenating the device identifiers or by combining the device identifiers mathematically to generate a new device identifier as described above with respect to the device identifier aggregation module of . In yet other embodiments the device identifier aggregation module may delete or remove one or more of the device identifiers at the server such as those device identifiers that are duplicates or near duplicates of one or more device identifiers that have been associated with the same user . The device identifier aggregation module of the server may also perform one or more other functions described above in conjunction with the device identifier aggregation module of the user device in other implementations.

The user identifier assignment module may be configured to assign a user identifier for the user to one or more of the device identifiers determined to correspond to that user especially if such a user identifier has not already been assigned to the user . In some implementations the user identifier assignment module may generate a user identifier that is formatted to be compatible with a particular application or service prior to assigning the user identifier to the one or more device identifiers. In other embodiments one or more of the device identifiers may serve as the user identifier thus possibly eliminating the need to generate a separate user identifier in some cases.

The device identifier storage module and the user identifier storage module are configured to store the received aggregated and or combined device identifiers and the user identifiers respectively as described above. The device identifiers and the user identifiers may be stored at the server or at a storage device communicatively coupled with the server . In some examples one or more stored user identifiers of a user are associated with the device identifiers corresponding to the same user . As a result the user identifiers and associated device identifiers may be stored together in some embodiments.

In some user devices at least one of the specific applications and or services may possess its own restricted environment sometimes referred to as a sandbox within which the application and or service may access or process only certain types of content and corresponding metadata . In such examples at least some of the device identifiers may be specifically linked or otherwise associated with their corresponding applications and or services . Accordingly in these embodiments the device identifier storage module and the user identifier storage module may organize the device identifiers and user identifiers according to application or service .

Additional aspects of the user device of and the server of are discussed below in connection with the flow diagrams of .

In the method data corresponding to each of a plurality of items of content may be accessed operation . In the particular examples discussed below the data employed is the metadata for each of the plurality of items of content . However in other examples the items of content or some portion thereof may be employed instead of or in addition to the metadata . In some examples the content accessed may be those items of content associated with a particular application or service for which a user of the user device is to be identified. In some embodiments the items of content being accessed may be selected based on a particular creation date and or time as mentioned above. In other implementations the items of content themselves may be accessed or both the items of content and associated metadata may be employed.

A device identifier may be generated based on the accessed data e.g. metadata operation by any one or more of the methods described above as well as any other methods available for generating a unique device identifier based on a set of data associated with the content .

In some examples the accessing of the metadata operation and the generation of the device identifier based on that metadata operation may be performed periodically at a sufficient rate such that changes in the metadata and the resulting changes in the generated device identifiers are small enough for the server to recognize that two consecutive device identifiers received from the same user device are determined to represent the same user of the user device . In another example the rate at which the accessing and generation operations are performed at the user device may be based on the rate at which the associated content is being added deleted and or otherwise changed at the user device . For example device identifiers may be generated at a relatively high rate if new content is being created or stored or if previously stored content is being deleted at a high rate. In yet other embodiments newer content being added or deleted from the user device may not result in newer device identifiers being generated if the older more stable portions of the content are allowed to remain in the user device for long periods of time.

The generated device identifier may be transmitted to a service device such as the server operation for comparison storage and other purposes therein as described below in conjunction with . Also as explained above the newly generated device identifier may be stored at the user device combined or aggregated with previously generated device identifiers or even deleted from the user device.

In some examples the generation of a new device identifier may be initiated as the result of an application beginning execution or upon access of a service at the server . As a result the user device in one embodiment may first transmit a previously generated and transmitted device identifier such as the most recently generated device identifier to the server to log in the user device with the server . The user device may then access the current content metadata which may have changed since the last login with the server generate a new device identifier and transmit the new identifier to the server so that the server may be updated with the latest version of the device identifier. In some examples the user device may access the metadata generate the new device identifier and transmit the new device identifier to the server in response to the user exiting the application or terminating access to the service to update the server accordingly.

While the operations of method are shown in as being performed in a particular order other potential orders of operation including concurrent or overlapping execution of at least portions of the operations may also be possible.

In the method a first device identifier may be received from a first user device operation . As described above the first device identifier may be based on metadata corresponding to a plurality of items of content stored or accessible at the first user device . In at least some examples the first device identifier also may be stored at the server . In other embodiments the first device identifier as well as other device identifiers discussed below may be based on at least some items of content or some combination of the content and its associated metadata .

A user identifier for a user may be assigned to the first device identifier in response to the receiving of the first device identifier operation . In one example the first device identifier may be the first such identifier received from the first user device thus causing the assignment. In another example the user identifier may have been assigned to a previously received device identifier for the first user device and the first device identifier may compare favorably to the previously received device identifier thus indicating that the user identifier is to be assigned to the first device identifier.

Continuing with the method a second device identifier may be received from a second user device operation . The second device identifier may be based on metadata corresponding to a plurality of items of content stored or accessible at the second user device . In at least some embodiments the second device identifier also may be stored at the server .

The server may then compare the second device identifier to the first device identifier operation such as by way of a genetic sequencing algorithm described above and determine whether the second device identifier corresponds to the user based on the comparing of the second device identifier to the first device identifier operation . Based on a determination that the second user identifier corresponds to the user the user identifier may be assigned to or otherwise associated with the second device identifier operation thus indicating that the first user device and the second user device correspond to the same user by way of similarities in content stored at the user devices .

In some examples based on the user identifier being assigned to the second device identifier the server may transmit the user identifier to the second user device . An application operating in the second user device may employ the received user identifier to gain access to a service of the server associated with the application . For example the operation of the application may be directed or controlled based on user preferences or history information associated with the user identifier. In other examples the application may not require the use of the user identifier to guide its operation on the second user device because the second device identifier as stored in the second user device and the server may serve as the user identifier for the user .

Also a subsequent device identifier may be received at the server from the second user device at some point after the reception of the second device identifier thus possibly being based on metadata for content that is slightly different from the content that resided on the second user device at the time the second device identifier was generated. In this example the server may compare the subsequent device identifier with the second device identifier and if these two device identifiers compare favorably the server may associate the subsequent device identifier with the second device identifier for the second user device thus keeping information regarding the content at the second user device as indicated in the subsequent device identifier up to date at the server . In some embodiments a favorable comparison may be obtained by use of a predefined threshold and an appropriate distance function by dynamic adjustment of the threshold based on a history of device identifiers from the same user device by use of a dynamic threshold between the closest matching device identifier in a reference set of previously received device identifiers and other closest but still somewhat dissimilar device identifiers and or by other processing functions. In some examples differences between the subsequent device identifier and the second device identifier may be detected to determine a difference between the items of content upon which the second device identifier is based and the items of content upon with the subsequent device identifier is based.

In the method the server receives a first device identifier from a user device operation . As described above the first device identifier may be based on metadata corresponding to a plurality of items of content stored or accessible at the user device on the content or on some combination thereof. In at least some examples the first device identifier also may be stored at the server .

A user identifier for a user may be assigned to the first device identifier in response to the receiving of the first device identifier operation . In one example the first device identifier may be the first such identifier received from the user device thus initiating the assignment. In another example the user identifier may have been assigned to a previously received device identifier for the user device and the current device identifier may compare favorably to the previously received device identifier thus indicating that the user identifier is to be assigned to the current device identifier.

Continuing with the method a second device identifier may be received from the same user device operation after the reception of the first device identifier. As a result the second device identifier may be generated based on metadata corresponding to a plurality of items of content stored or accessible at the user device at a point in time after the generation of the first device identifier at the user device . Consequently the second device identifier may be different than the first device identifier based on differences in the content at the user device between the time the first device identifier was generated and the time the second device identifier was generated. In at least some embodiments the second device identifier also may be stored at the server .

The server may then compare the first identifier and the second identifier operation such as by way of a genetic sequencing algorithm described above and determine whether the first and second device identifiers correspond to the same user based on the comparing of the second device identifier to the first device identifier operation . Based on a determination that the first and second device identifiers correspond to the same user the server may associate the second device identifier with either or both of the first device identifier and the user identifier operation . The server may then employ the second device identifier as an updated version of the first device identifier for subsequent comparisons with newer device identifiers received from the user device .

In one example an application of the user device may have been reinstalled between the time the first device identifier was generated and the time the second device identifier was generated thus possibly causing a difference in the content stored on the user device that is associated with the application. In this example the server may be able to reassign or relate the user identifier to the reinstalled application if the content is not significantly different between the times before and after the reinstallation.

In another embodiment the first device identifier may be associated with a first application installed in the user device that may access a first group of the items of content used to generate the first device identifier and the second device identifier may be associated with a second application installed in the user device that may access a second group of the items of content used to generate the second device identifier. In this instance the first group of the items of content may overlap the second group of items of content such that the server may be able to determine that the first device identifier and the second device identifier correspond to the same user device and hence the same user .

Various embodiments described above ascribe specific operations to the user devices and the server . In other embodiments at least some of the operations or tasks described above in connection with the user devices may instead be performed in the server and vice versa. For example instead of calculating or generating the various device identifiers within the user device itself the server may generate the device identifiers based on content and or associated metadata received from the user device or otherwise accessed by the server . Other examples of performing the various operations in an alternative device or system are also possible.

In some examples the various methods described above may be employed for verification and or authentication of the user device for facilitating other functionality external to the user device . For instance a head unit or similar device in an automobile can employ any of the methods disclosed herein to verity that a mobile user device located within the automobile belongs to a specific user . Based on that verification authentication the head unit may load implement profile data e.g. driver seat position brake pedal location rear and side mirror orientation and the like corresponding to the user within the automobile.

In some situations an insufficient amount of content or an insufficient amount of a particular type of content may be stored in or accessible by a user device for the above methods to be effective immediately. Such examples may occur for example when a user first receives the user device . The user device and or the server may detect such a situation in which case a default or generic user profile e.g. a profile employed by a particular application reserved for such user devices may be associated with the user device until sufficient content is stored or accessed to facilitate unique identification of the user device and the user . In other examples in which a user currently associated with one or more user devices obtains a new user device the new user device may be loaded with content associated with that user from the server or another device in the cloud thus facilitating use of the various methods described herein without the use of a default or generic profile.

In view of at least some of the embodiments described herein one or more types of content e.g. video files audio files still image files document files and so on residing in or otherwise accessible to a user device may be employed to identify one or more such user devices with a particular user. Consequently sensitive identity information corresponding to the user need not be transmitted over a network between a user device and a server to establish correspondence between the user device and the user while maintaining the anonymity of the user. Such embodiments do not require an exact match between the content of multiple user devices of the same user. Moreover the examples discussed herein may be adaptable to situations in which the content of a particular user device changes over time and to situations in which two separate applications operating on the same user device access two differing sets of content with the user device. Accordingly the embodiments discussed herein may adapt to differences in content between user devices and applications and over extended periods of time.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code embodied on a machine readable medium or in a transmission signal or hardware modules. A hardware module is a tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. a standalone client or server computer system or one or more hardware modules of a computer system e.g. a processor or a group of processors may be configured by software e.g. an application or application portion as a hardware module that operates to perform certain operations as described herein.

In various embodiments a hardware module may be implemented mechanically or electronically. For example a hardware module may comprise dedicated circuitry or logic that is permanently configured e.g. as a special purpose processor such as a field programmable gate array FPGA or an application specific integrated circuit ASIC to perform certain operations. A hardware module may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term hardware module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily configured e.g. programmed to operate in a certain manner and or to perform certain operations described herein. Considering embodiments in which hardware modules are temporarily configured e.g. programmed each of the hardware modules need not be configured or instantiated at any one instance in time. For example where the hardware modules comprise a general purpose processor configured using software the general purpose processor may be configured as respective different hardware modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware module at one instance of time and to constitute a different hardware module at a different instance of time.

Hardware modules can provide information to and receive information from other hardware modules. Accordingly the described hardware modules may be regarded as being communicatively coupled. Where multiple such hardware modules exist contemporaneously communications may be achieved through signal transmissions e.g. over appropriate circuits and buses that connect the hardware modules. In embodiments in which multiple hardware modules are configured or instantiated at different times communications between such hardware modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware modules have access. For example one hardware module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware module may then at a later time access the memory device to retrieve and process the stored output. Hardware modules may also initiate communications with input or output devices and can operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented modules.

Similarly the methods described herein may be at least partially processor implemented. For example at least some of the operations of a method may be performed by one or processors or processor implemented modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processor or processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

The one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. application programming interfaces APIs .

Example embodiments may be implemented in digital electronic circuitry or in computer hardware firmware or software or in combinations thereof. Example embodiments may be implemented using a computer program product e.g. a computer program tangibly embodied in an information carrier in a machine readable medium for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers .

A computer program can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communications network.

In example embodiments operations may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method operations can also be performed by and apparatus of example embodiments may be implemented as special purpose logic circuitry e.g. an FPGA or an ASIC .

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on their respective computers and having a client server relationship to each other. In embodiments deploying a programmable computing system it will be appreciated that both hardware and software architectures may be considered. Specifically it will be appreciated that the choice of whether to implement certain functionality in permanently configured hardware e.g. an ASIC in temporarily configured hardware e.g. a combination of software and a programmable processor or a combination of permanently and temporarily configured hardware may be a design choice. Below are set forth hardware e.g. machine and software architectures that may be deployed in various example embodiments.

The example computer system includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a user interface UI navigation device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a machine readable medium on which is stored one or more sets of data structures and instructions e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium may include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more instructions or data structures. The term non transitory machine readable medium shall also be taken to include any tangible medium that is capable of storing encoding or carrying instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present subject matter or that is capable of storing encoding or carrying data structures utilized by or associated with such instructions. The term non transitory machine readable medium shall accordingly be taken to include but not be limited to solid state memories and optical and magnetic media. Specific examples of non transitory machine readable media include but are not limited to non volatile memory including by way of example semiconductor memory devices e.g. Erasable Programmable Read Only Memory EPROM Electrically Erasable Programmable Read Only Memory EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and Compact Disc Read Only Memory CD ROM and Digital Versatile Disc Read Only Memory DVD ROM disks.

The instructions may further be transmitted or received over a computer network using a transmission medium. The instructions may be transmitted using the network interface device and any one of a number of well known transfer protocols e.g. HyperText Transfer Protocol HTTP . Examples of communication networks include a local area network LAN a wide area network WAN the Internet mobile telephone networks Plain Old Telephone Service POTS networks and wireless data networks e.g. WiFi Long Term Evolution LTE and Worldwide Interoperability for Microwave Access WiMAX networks . The term transmission medium shall be taken to include any intangible medium that is capable of storing encoding or carrying instructions for execution by the machine and includes digital or analog communications signals or other intangible media to facilitate communication of such software.

Although the present subject matter has been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader scope of the subject matter. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. The accompanying drawings that form a part hereof show by way of illustration and not of limitation specific embodiments in which the subject matter may be practiced. The embodiments illustrated are described in sufficient detail to enable those skilled in the art to practice the teachings disclosed herein. Other embodiments may be utilized and derived therefrom such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. This Detailed Description therefore is not to be taken in a limiting sense and the scope of various embodiments is defined only by the appended claims along with the full range of equivalents to which such claims are entitled.

Such embodiments of the inventive subject matter may be referred to herein individually and or collectively by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed. Thus although specific embodiments have been illustrated and described herein it should be appreciated that any arrangement calculated to achieve the same purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all adaptations or variations of various embodiments. Combinations of the above embodiments and other embodiments not specifically described herein will be apparent to those of skill in the art upon reviewing the above description.

All publications patents and patent documents referred to in this document are incorporated by reference herein in their entirety as though individually incorporated by reference. In the event of inconsistent usages between this document and those documents so incorporated by reference the usage in the incorporated reference s should be considered supplementary to that of this document for irreconcilable inconsistencies the usage in this document controls.

In this document the terms a or an are used as is common in patent documents to include one or more than one independent of any other instances or usages of at least one or one or more. In this document the term or is used to refer to a nonexclusive or such that A or B includes A but not B B but not A and A and B unless otherwise indicated. In the appended claims the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein. Also in the following claims the terms including and comprising are open ended that is a system device article or process that includes elements in addition to those listed after such a term in a claim are still deemed to fall within the scope of that claim. Moreover in the following claims the terms first second third and so forth are used merely as labels and are not intended to impose numerical requirements on their objects.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. The Abstract is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

