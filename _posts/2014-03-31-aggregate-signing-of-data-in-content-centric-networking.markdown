---

title: Aggregate signing of data in content centric networking
abstract: One embodiment provides a system that facilitates routers in verifying content objects in a cost-effective manner by aggregating content objects into a secure content catalog. During operation, a client computing device receives a secure content catalog, which indicates a set of content objects and their corresponding digests. The catalog is digitally signed with the private key of a producer of the catalog. The client computing device constructs an interest for a content object, where the interest indicates a name for the content object and the corresponding digest for the content object, which is based on the secure content catalog. The name for the request content object is a hierarchically structured variable length identifier (HSVLI) which comprises name components ordered from a most general level to a most specific level.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09363086&OS=09363086&RS=09363086
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09363086
owner_city: Palo Alto
owner_country: US
publication_date: 20140331
---
This disclosure is generally related to the secure and efficient distribution of digital content. More specifically this disclosure is related to creating secure content catalogs of aggregate content objects to efficiently sign and verify content.

The proliferation of mobile computing and cellular networks is making digital content more mobile than ever including content such as song videos and movies. Content centric network CCN architectures such as Named Data Networking NDN have been designed to facilitate accessing such digital content. A fundamental feature of NDN is to name content instead of communication end points. Each piece of content is individually named and each piece of data is bound to a unique name that distinguishes the data from any other piece of data. In an NDN each piece of content is cryptographically signed by its producer or publisher. A requesting consumer verifies the content signature of received content to ensure integrity origin authentication and correctness.

In network content caching by routers is another key feature of NDN. While an NDN router may verify content by verifying the signature NDN does not require that a router verify all received content. The computational overhead required for a router to perform a cryptographic verification on every packet that it receives is not feasible. Furthermore a router may not be aware of the specific trust model for each content producing application which would require obtaining multiple key certificates or similar structures to establish trust with a public key that verifies a content signature. For these reasons an NDN router is not required to verify a content signature. However this leaves the system vulnerable to poisonous content if a router does not verify received content before forwarding it on. Furthermore the need for a content publisher to produce a signature for all content that it publishes carries a high computational cost.

Thus the computational complexity of both requiring a router to verify the signature on all content that it receives and requiring the publisher to produce a signature on all content that it publishes is at odds with the security need to prevent poisonous content from being disseminated in the network.

One embodiment provides a system that facilitates routers in verifying content objects in a cost effective manner by aggregating content objects into a secure content catalog. During operation a client computing device receives a secure content catalog which indicates a set of content objects and their corresponding digests. The catalog is digitally signed with the private key of a producer of the catalog. The client computing device constructs an interest for a content object where the interest indicates a name for the content object and the corresponding digest for the content object which is based on the secure content catalog. The name for the requested content object is a hierarchically structured variable length identifier HSVLI which comprises name components ordered from a most general level to a most specific level.

In some embodiments the client computing device verifies the signature based on a public key of the producer of the catalog.

In some embodiments the client computing device receives the requested content object and verifies the received content object by comparing a hash of the received content object with the corresponding digest for the content object in the previously constructed interest thereby facilitating routers to verify content in a cost effective manner.

In another embodiment a last name component of the HSVLI of the content object indicates the digest of the constructed interest.

In some embodiments prior to receiving the secure content catalog the client computing device receives a content object that identifies the secure content catalog based on a name of the secure content catalog where the content object further indicates an index number that corresponds to a content object represented in the secure content catalog.

In some embodiments the constructed interest corresponds to the secure catalog indicated by the name. The client computing device verifies the signature of the secure content catalog based on a public key of the producer of the catalog and verifies the previously received content object by comparing a hash of the received content object with the digest listed in the secure catalog at the entry corresponding to the index number where the digest is a cryptographic hash of the content object. This facilitates the cost effective verification of content by routers in a network.

In some embodiments a content producing device creates a secure content catalog that indicates a set of content objects and their corresponding digests. The content producing device produces a digital signature for the secure content catalog based on a private key of the producer of the catalog and then transmits the digitally signed secure content catalog to a client computing device. This facilitates the cost effective verification of content by routers in the network.

In another embodiment the content producing device receives an interest for the secure content catalog where a name for the content objects associated with the secure content catalog is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level. In response to the interest for the catalog the content producing device transmits a content object containing the secure content catalog.

In some embodiments a last name component of the HSVLI of the content object associated with the secure content catalog created by the content producing device indicates the digest of the content object.

In another embodiment a respective digest for a content object associated with the secure content catalog created by the content producing device is a cryptographic hash of the content object.

In some embodiments prior to creating the secure content catalog the content producing device transmits a content object that identifies the secure content catalog based on a name of the secure content catalog where the content object further indicates an index number that corresponds to a content object represented in the secure content catalog.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a computer network environment for the secure and efficient distribution of digital content by signing and verifying aggregates of content objects through the use of a secure content catalog. The secure content catalog can comprise a list of content objects identified by their name and their corresponding digest. During operation a client computing device requests and receives the secure content catalog. The catalog is digitally signed with a private key of a producer of the catalog such that all content objects associated with the catalog are aggregated. Verification of the signature of the catalog based on a public key of the producer relieves any further need to verify the signatures of the specific content objects associated with the catalog. In this manner the content publisher need only produce a signature for the catalog once and the consumer need only verify the signature on the catalog once. Subsequent requests for specific content objects associated with the signed and verified catalog obviate both the need for the content publisher to sign the specific content object and the need for the consumer to verify a signature on the specific content object.

The secure content catalog can contain a list of self certifying names for its associated content objects such that a last name component of the name of the content object indicates the digest corresponding to the content object where the digest is a cryptographic hash of the content object. The name for the content object is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general to a most specific level. By using the self certifying name as part of the secure content catalog any entity that requests or receives the packet with the self certifying name can simply perform a hash operation on the requested content object and then compare that result with the digest corresponding to the requested specific content object. Thus a router or other forwarding entity in an NDN does not need to verify a signature on every content object that it receives. Because the name of the requested content object contains a digest component a router need only perform one hash operation whose computational complexity is much lower than that required to produce a digital signature on the received content object to determine whether the content object fulfills a requested interest. If the content object is the requested one the router can forward the content object. If not the router can discard the interest thereby preventing the dissemination of poisonous content in the network.

In this manner content is securely and efficiently distributed through the CCN whereby a content publisher need only sign a secure content catalog once a consumer need only verify a signature on a secure content catalog once and a consumer and any routers in the CCN need only perform a hash operation rather than a full signature verification on a specific content object associated with the catalog.

In some embodiments an NDN contains three types of entities a consumer or client device that issues an interest for content a content producer or publisher that produces publishes and signs content and a router or other forwarding device that routes interest packets and forwards corresponding content packets. Each entity maintains the following three components a Content Store CS or cache that is used for content caching and retrieval a Forwarding Interest Base FIB that is a routing table of name prefixes and corresponding outgoing interfaces used to route interests where forwarding is done via longest prefix match on name and a Pending Interest Table PIT that is a table of outstanding or pending interests and a set of corresponding incoming and outgoing interfaces.

In some embodiments the network clients network nodes e.g. forwarders such as routers and publishers communicate over an information centric network ICN . In ICN each piece of content is individually named and each piece of data is bound to a unique name that distinguishes the data from any other piece of data such as other versions of the same data or data from other sources. This unique name allows a network device to request the data by disseminating a request or an Interest that indicates the unique name and can obtain the data independent from the data s storage location network location application and means of transportation. Named data network NDN or a content centric network CCN are examples of ICN architecture the following terms describe elements of an NDN or CCN architecture 

Content Object A single piece of named data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name.

Unique Names A name in an ICN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ndn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ndn test.txt. Thus the name parc home ndn can be a parent or prefix of parc home ndn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814 entitled ORDERED ELEMENT NAMING FOR NAME BASED PACKET FORWARDING by inventor Ignacio Solis filed 20 Mar. 2013 which is hereby incorporated by reference. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

Interest A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an information centric network which CCN NDN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

In some embodiments the ICN system can include a content centric networking CCN architecture. However the methods disclosed herein are also applicable to other ICN architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference.

Computing environment can include a content producer that can host content requested by client computing device . Content producer can create a secure content catalog associated with a set of content objects identified by the names . .of the content objects and their corresponding digests . .. Content producer can digitally sign secure content catalog using a private key of content producer . Content producer can also transmit the secure content catalog to the client computing device via the routers . .in network .

Upon receiving secure content catalog client computing device can verify the signature of secure content catalog based on the public key of content producer . Client computing device can construct an interest in a content object associated with secure content catalog by identifying the content object by its name . and corresponding digest .. This identification could be based on a self certifying name . where the name for the content object is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general to a most specific level. The last name component of the name of the content object can indicate the digest . corresponding to the content object identified by name . where the digest is a cryptographic hash of the content object.

Upon receiving interest for the content object identified by name . associated with secure catalog router . in the network can cache the digest . or the entire self certifying name . in its Pending Interest Table PIT before forwarding interest on to another router .or content producer . Content producer receives interest for the content object identified by name . associated with secure content catalog and transmits a requested content object . Content object is identified based on its name . and corresponding digest .. Upon receiving content object back from content producer router . performs a hash operation on content object and compares the result of the hash operation to its PIT entry in storage . corresponding to interest . If it does not match then router . will discard the packet. If it does match then router . will forward the packet on to either the next router .or to client computing device depending on the information in the FIB of the router. Thus router . need only perform a hash operation as opposed to a more computationally complex signature verification on content object . Furthermore client computing device need only perform the same single hash operation to verify the content. In this manner the system facilitates the secure and efficient distribution of digital content in a CCN by using the signed and aggregated content objects of the secure content catalog.

Client device now in possession of secure content catalog from receive catalog message generates a request content object interest which comprises interest wherein the name . of the requested content object in interest indicates the corresponding digest . of the requested content object. The name can be a self certifying name e.g. self certifying name . that contains the name . and corresponding digest . as obtained from secure content catalog and as described in relation to . Router performs a router cache digest procedure whereby router caches digest . or the self certifying name . which contains the name . and the digest . as a last name component . Content producer receives a receive content object request message and sends back a content object with the requested name . or self certifying name . . Router receives content object in a return content object message from content producer . Router performs a router hash content object operation on content object . Router then compares the result of this hash operation to the digest that was cached by the previous router cache digest operation . If the results do not match then router discards content object . If the results do match then router forwards content object on to client device .

Client device thus receives content object in a receive content object message . Similar to router hash content object operation client device performs a client hash content object operation on content object and compares the result of this hash operation to the digest based on secure content catalog included in the original interest . If there is no match then the content object is discarded. If there is a match then the original interest issued by client device is satisfied.

Depending on which node in the network receives the transmitted content object the system proceeds accordingly. If the receiving node is a router then the router verifies the received content object by comparing a hash of the received content object with the digest of the content object as contained in the PIT entry of the router from operation operation . If there is not a match decision then the system discards the content object operation . If there is a match decision then the router will forward the content object according to the information in its FIB returning to decision operation . If the receiving node of the content object is a client device then the client device verifies the received content object by comparing a hash of the received content object with the digest of the content object in the previously constructed interest operation . If there is not a match decision then the system discards the content object operation . If there is a match decision then the interest is correctly fulfilled by the received content object such that the client device now possesses the content object as initially requested.

Thus both the router and the client device need only perform one computationally inexpensive hash operation on the content object in order to verify the content operations and . For a given set of content objects associated with a specific secure content catalog a content producer need only perform the computationally expensive signature production once for the secure content catalog producer sign catalog operation described in relation to and a client device or router or other forwarding device or node each need only perform the complex signature verification process once for the secure content catalog client verify signature operation described in relation to . In this manner subsequent packets sent or received based on the content objects associated with the secure content catalog do not require either a signature production by the content producer or a signature verification by the consumer or router. Subsequent packets require only a simple hash operation by the consumer or router client hash content object operation and router hash content object operation respectively described in relation to thus facilitating the efficient and secure distribution of content in a CCN.

Secure content catalog is also known as an Aggregate Signature Object ASO . An ASO is a special purpose content object and comprises a data structure which can be authenticated using the traditional procedure of signing an individual content object within a CCN as described in relation to . The data structure of an ASO can comprises a list of digests where each digest corresponds to a name of a content object associated with the ASO. The digest is a hash of the content object identified by the corresponding name.

Content processing system can include instructions which when executed by computer and communication system can cause computer and communication system to perform methods and or processes described in this disclosure. Specifically content processing system may include instructions for sending requests for and receiving secure content catalogs and specific content objects identified by the secure content catalogs communication mechanism . Furthermore content processing system can include instructions for creating a secure content catalog that indicates a set of content objects and their corresponding digests catalog creation mechanism . Content processing system can also include instructions for producing a digital signature for a secure content catalog based on a private key of the producer of the catalog signature production mechanism . Content processing system can include instructions for verifying a digital signature for a secure content catalog based on a public key of the producer of the catalog signature verification mechanism .

Content processing system can further include instructions for constructing an interest for a content object where the interest indicates a name for the content object and the corresponding digest for the content object based on a secure content catalog and where the name for the content object is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level interest constructing mechanism .

Content processing system can also include instructions for verifying received content by comparing a hash of the received content object with the corresponding digest in either a previously constructed interest or a previously cached entry content verification mechanism .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least a secure content catalog that indicates a set of content objects and their corresponding digests a private key of a producer a public key of a producer a plurality of content objects wherein the name for a content object is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level the index of a content object associated with the secure content catalog the name of a content object associated with the secure content catalog the corresponding digest of a content object associated with the secure content catalog where the digest comprises a cryptographic hash of the named content object and the self certifying name of a content object associated with the secure content catalog wherein a last name component of the HSVLI of the content object indicates the digest corresponding to the content object.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules or apparatus. The hardware modules or apparatus can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs dedicated or shared processors that execute a particular software module or a piece of code at a particular time and other programmable logic devices now known or later developed. When the hardware modules or apparatus are activated they perform the methods and processes included within them.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

