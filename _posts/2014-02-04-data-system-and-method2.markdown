---

title: Data system and method
abstract: A system and method for content sharing includes acquiring, by a processing device, a plurality of data objects from data sources, storing the plurality of data objects in a data warehouse, generating a high-level index that is shared by the plurality of data objects, generating a plurality of low-level indices that each provides a respective low-level index for a respective one of the plurality of data objects, and providing the plurality of data objects on the content sharing platform for query or search using the high-level index and the plurality of low-level indices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09659043&OS=09659043&RS=09659043
owner: Enigma Technologies, Inc.
number: 09659043
owner_city: New York
owner_country: US
publication_date: 20140204
---
The present application claims priority from U.S. Provisional Application No. 61 762 036 filed Feb. 7 2013 which is incorporated by reference in its entirety.

The present disclosure relates generally to a data system and method and more particularly a data system and method that acquires searches and provides results of structured and or unstructured data sets.

Data are made publicly available and provided across the globe by governments companies private and public institutions and the like. The data obtained may be in the form of data sets reports one or more tables and or one or more articles and in various formats. Although many petabytes of public and enterprise data are available it is practically impossible to discover connections among the vast and valuable data because the data are stored in numerous independent systems and or locations and the formats of the data vary.

The aforementioned of publicly available data in numerous independent locations and in different formats are not ideal. Accordingly a new data system is desired to facilitate acquisitions searches and providing results of structured and unstructured data sets.

The following detailed description is merely illustrative in nature and is not intended to limit the embodiments of the disclosure or the application and uses of such embodiments. Furthermore there is no intention to be bound by any expressed or implied theory presented in the preceding technical field background brief description of the drawings or the following detailed description.

As used herein at least one system is at least one computer device or operating system controlled by at least one entity. As used herein structured data is organized or arranged in a predetermined schema. For example data arranged in fields of a database e.g. a relational database is considered structured data. As used herein unstructured data is data that is not identified using predefined fields or tags. An example of unstructured data includes textual documents or webpages e.g. SEC 10K forms acquired from company websites or from the Security and Exchange Commission s website. Other examples of unstructured data include but are not limited to satellite imagery streaming data visual data and audio visual data.

At the one or more structured and or unstructured source data sets acquired at are saved in a raw data cache and stored in a data warehouse of the at least one system. The data warehouse may include at least one of the following a graph database a relational database noSQL commonly called not only SQL flat files and the like. In one embodiment a data set or database version is stored in the data warehouse. In another embodiment at least one of the following is stored in the data warehouse the raw data cache the processed data and the data set or database version.

At each source data set in the data warehouse is post processed. Post processing includes at least an assignment of a single high level index HLI where the HLI is an index that is shared across the source data sets. In one embodiment the high level index is metadata that includes at least a data path address that reflects real world infrastructure pertaining to the location where the source data sets were acquired e.g. a website address or a uniform resource identifier. In another embodiment the high level index may include information or output from natural language processing NLP and or machine learning of the source data sets. In yet another embodiment the high level index may include metadata that includes at least a data path address that reflects real world infrastructure and natural language processing and or machine learning of the source data sets. The natural language processing and or machine learning recognizes the most prevalent entities topics names and the like that are contained within the source data sets. The high level index provides efficient screening of every source data set that is used in the method during data querying discussed further herein. In addition at a high level index circuitry or bridge network is created for one or more source data sets. The circuitry or bridge network provides connections between source data sets that meet a threshold relationship. The threshold relationship may be determined by natural language processing machine learning and or the like. Further the threshold relationships of the high level index can be input manually predefined or dynamically through software.

In another embodiment method does not include high level indexing operation. Rather indexing is performed for each record within each source data set for all source data sets.

At records in each source data set are indexed with a low level data index that includes metadata having key maps including but not limited to maps having at least one of the following words numbers dates other key words vectors and the like. A vector defines relationships between keywords. For example keywords football and Super Bowl may have a vector that specifies a very relevant relationship while keywords football and World Series may have a vector that specifies a non relevant relationship. In other words a vector describes relationships with keywords or a vector may represent proximity of these key words to each other taking into account comparative frequency and the like. For instance George and bush have vector representations that are manifested differently in the two following phrases George Bush was president of the United States before Barack Obama strong relationship . George likes to go wander off in the woods past the bush weak relationship . The low level index at is used by method to provide efficient searching or querying of each record within each source data set. Further the threshold relationships of the low level index can be input manually predefined or dynamically through software.

At a user of a system using method enters a query or search that initiates a search of the source data sets in the data warehouse. A query may be entered in a system input using method including but not limited to at least one of the following system inputs a user interface application programming interface API list plug in filter alert information clicks entity recognition and by selecting or clicking on at least one word on a system display or any computer program. Once the query or search is entered the system using method searches the high level index created at to generate a subset of source data sets and then searches this subset of source data sets using the low level indices created at to produce query output results that are sent to an output and or the user interface at . In another embodiment a user of the system employing method can initiate at least one additional data query by selecting at least one output result generated at from the previous query resulting in a recursive system and method.

In the illustrated embodiment operating environment may include gateway server network and or Internet e.g. global World Wide Web or the Internet. Operating environment may include any type and or number of networks including wired or wireless internet cellular network satellite network local area network wide area network public telephone network cloud network and or the like. In another embodiment the system and or method discussed herein may operate locally on a computer device i.e. the application may be wholly functional on its own on a single computer device. In the illustrated embodiment computer device may communicate with operating environment through server by a wireless network connection and or a wired network connection. Further server may connect computer device to the public telephone network to enable telephone functionality voice data and the like of the computer device . In another embodiment operating environment may include gateway server network and or Internet that are not located together rather they may be separate wireless or may include wired connections.

A computer device and operating environment illustrate one possible hardware configuration to support the systems and methods described herein including but not limited to the method discussed above and the method discussed below. In order to provide additional context for various aspects of the present disclosure the following discussion is intended to provide a brief general description of a suitable computing environment in which the various aspects of the present disclosure may be implemented. Those skilled in the art will recognize that the disclosure also may be implemented in combination with other program modules and or as a combination of hardware and software. Generally program modules include routines programs components data structures sets of instructions etc. that perform particular tasks and functionality or implement particular abstract data types.

Moreover those skilled in the art will appreciate that the inventive methods may be practiced with other computer system configurations including single processor or multiprocessor computer systems minicomputers mainframe computers as well as personal computers hand held computing devices microprocessor based or programmable consumer electronics and the like each of which may be operatively coupled to one or more associated devices.

The illustrated aspects of the disclosure may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

The computer device can utilize an exemplary environment for implementing various aspects of the disclosure including a computer wherein the computer includes a processing unit a system memory and a system bus. The system bus couples system components including but not limited to the system memory and the processing unit. The processing unit may be any of the various commercially available processors. Dual microprocessors and other multi processor architectures may also be employed as the processing unit.

The system bus can be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of commercially available bus architectures. The system memory can include read only memory ROM and random access memory RAM or any memory known by one skilled in the art. A basic input output system BIOS containing the basic routines used to transfer information between elements within the computer device such as during start up is stored in the ROM.

The computer device can further include a hard disk drive a magnetic disk drive e.g. to read from or write to a removable disk and an optical disk drive e.g. for reading a CD ROM disk or to read from or write to other optical media. The computer device can include at least some form of non transitory computer readable media. Non transitory computer readable media can be any available media that can be accessed by the computer device. By way of example and not limitation non transitory computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Non transitory computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer device .

Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above should also be included within the scope of non transitory computer readable media.

A number of program modules or software programs may be stored in the drives and RAM including an operating system one or more application programs other program modules and program data. The operating system in the computer device can be any of a number of commercially available operating systems and or web client systems and or open source operating systems covering the spectrum of consumer electronics devices cameras video recorders personal media players televisions remote controls etc. as well as all web client systems including commercial and open source platforms providing thin client access to the cloud.

In addition a user may enter commands and information into the computer device through a touch screen and or keyboard and a pointing device such as a mouse . Other input devices may include a microphone an IR remote control a track ball a pen input device an input pad a scanner or the like. These and other input devices are often connected to the processing unit through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port a game port a universal serial bus USB an IR interface and or various wireless technologies. A monitor or other type of display device also may be connected to the system bus via an interface such as a video adapter. Visual output also may be accomplished through a remote display network protocol such as Remote Desktop Protocol and the like. In addition to visual output a computer typically includes other peripheral output devices such as speakers printers etc.

A display can be employed with the computer device to present data that is electronically received from the processing unit. In addition to the descriptions provided elsewhere for example the display can be an LPD LCD plasma CRT etc. monitor that presents data electronically. The display may be integrated with computer device and or may be a stand alone display. Alternatively or in addition the display can present received data in a hard copy format such as a printer facsimile plotter etc. The display can present data in any color and can receive data from the computer device via any wireless or hard wire protocol and or standard.

The computer device can operate in a networked environment e.g. operating environment using logical and or physical connections to one or more remote computers devices such as a remote computer s . The remote computer s device s can be a workstation a server computer a router a personal computer microprocessor based entertainment appliance a peer device or other common network node and typically includes many or all of the elements described relative to the computer. The logical connections depicted include a local area network LAN and a wide area network WAN . Such networking environments are used in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer device is connected to the local network through a network interface or adapter. When used in a WAN networking environment the computer device typically includes a modem or is connected to a communications server on the LAN or has other means for establishing communications over the WAN such as the Internet . In a networked environment program modules depicted relative to the computer device or portions thereof may be stored in the remote memory storage device. It will be appreciated that network connections described herein are exemplary and other means of establishing a communications link between the computers may be used.

An example of a computer device and operating environment for a system using method may include but are not limited to at least one of the following. For example the one or more structured and or unstructured source data sets acquired at in method may use but is not limited to at least one of the following I O interface touch sensitive interface network interface wireless interface audio visual interface user interface module . The data warehouse storage at in method may use but is not limited to at least one of the following processor database memory user interfaced module and software . Further data post processing high level index at in method may use but is not limited to at least one of the following processor database memory network interface and software . Low level index at in method may use but is not limited to at least one of the following processor database memory network interface and software . Data querying at in method may use but is not limited to at least one of the following processor database memory network interface user interface module and software . Output results and user interface at in method may use but are not limited to use at least one of the following processor database memory network interface user interface module and software .

A unique data path address is assigned to each source data set at . In one embodiment the unique data path address provides each source data set with at least one of the following an address of the source place location date revision and or the like from which updates validations supplements and or the like are obtained. These updates validations and or supplements can occur at any frequency e.g. hourly daily weekly monthly etc. For example a unique data path address for source data sets of environmental data from the United States government may be recorded in the system as www.us.gov.epa.echo. At each source data set is tagged with the source s origin metadata. At the source data sets are optionally assigned at least one of the following a ranking a unique resource locator a unique resource name a unique resource indicator ranking information content structure dates versions keys and or the like.

At the procured source data set goes through parsing and data field detection. In one embodiment at least one source data set is parsed or sanitized for missing or inaccurate numbers data etc. and the data set is reviewed for data that is unexpectedly large small and or for other format irregularities. In yet another embodiment at least one source data set is scanned for data field detection to determine whether the data is at least one of the following text alphanumeric date time image audio video binary latitude longitude serial numbers identification numbers custom data types and or the like. In another embodiment data is repaired during data field detection to improve data integrity. The parsing and data field detection may be commenced by either a manual or automatic trigger.

The source data set is reviewed at to determine if the source is a new source i.e. first time procured source a previously procured source i.e. a version of the source was previously saved in the data warehouse or a combination of both a new source and a previously procured source. In one embodiment the source data set review could be a manual process an automated process or a combination of both. If the source is new the source data set has its first review at . During the first review the source data set has at least a unique data set identification assigned at . In one embodiment the unique data set identification may include at least one of the following an address and a version identifier. In another embodiment the unique data set identification may be composed of numbers letters dates times and or the like. In yet another embodiment the unique data set identification is incremental from one data set to the next or from one version to the next version. In another embodiment the unique data set identification may be an acquisition project identification number e.g. XZP12345 XZP12346 etc. This acquisition project identification number may be created whether or not the data is acquired e.g. a flawed data set may include a unique data set identification as a way to track successful and unsuccessful data acquisitions. If the source has been previously procured and is being procured for the Nth time i.e. a 2nd 3rd 4th etc. the source data set has its Nth review at and its unique data set identification assigned at including but not limited to its unique version which distinguishes a subsequently procured source data set from a previously procured source data set. Using the hierarchy of the source data set s unique identifier metadata is inherited to all the data or records in the source data set. Metadata includes but is not limited to topics geography relevancy entities and statistical profiles. Metadata inheritance propagates in all directions including parents passing metadata to children children to parents siblings to each other and the like.

At data analysis is performed on the source data set. In one embodiment the source data set may go through at least one of the following error analysis statistical analysis and contextual awareness analysis. Error analysis reviews the data set and checks for data that may have missing or inaccurate dates numbers text and or the like. Error analysis may also scan for numbers dates and other text that may be relatively large or small when compared to the majority of the data contained in the same field type. After scanning the data may be marked for further review and or analysis. Statistical analysis of the source data set may be any form of statistical analysis including but not limited to statistical distribution of textual or numerical fields means averages minimums and maximums and the like. In another embodiment the source data set may be procured again at least in part if the source data set is deemed to be unreliable. In yet another embodiment at least a portion of the source data set may be updated modified and or altered until the source data set is qualified as acceptable. Once the source data set is acceptable the source data set is saved to data warehouse storage at wherein at least one of the following is saved at raw data cache parsed data and source data base version.

The high level index provides efficient initial screening of all the source data sets in the graph database during searching or querying discussed herein. In another embodiment the high level index may be created earlier or later in the method. In one embodiment the high level index may include information from output of natural language processing or machine learning of the source data set. The natural language processing and or machine learning recognizes the most prevalent entities topics names and the like that are contained within the source data set.

In another embodiment the high level index is formed from metadata and may include at least one of the following a data path address a description subjects and topics that can be extracted and manipulated. As discussed herein the metadata may include a data path address e.g. website address that reflects real world infrastructure of where the source data set can be acquired and or a unique identifier URL URN URI . Further the source data set derives a genealogy from the high level index and other properties e.g. topics geography and relevancy associated with the high level metadata.

At updates and validations to source data sets occur at any specified frequency or at any unspecified frequency. In the illustrated embodiment the updates and validations include going out to the internet at to acquire the data sets and then returning from the internet at to save the data sets in the systems discussed herein including updating the high level index in the graph database and the like. For example the updates may occur during the high level index creation and data post processing based on polling techniques i.e. listening techniques and the like. These updates and the like may be done automatically using crawlers spiders robots and other techniques by accessing the Internet for structured and or unstructured source data sets. During the updates and or validations unique versions of source data sets are added to the graph database in the data warehouse. These updates and validations may be saved via automatic and or manual techniques discussed herein. In another embodiment previous unique versions are stored in another data warehouse and new nodes and edges or relationship circuitry are created in the graph database. For example previous unique versions may be stored in the production server backup server garbage trash server or some other storage location.

The post processing at includes creation of relationships among source data sets. As discussed herein these relationships may be described as circuitry or bridge networks that form between two or more source data sets. In one embodiment the circuitry or bridge network provides connections between source data sets that meet a threshold relationship. The threshold relationship may be determined by natural language processing machine learning and the like. In another embodiment the post processing may include metadata mining of attributes and characteristics including at least one of the following natural language processing or machine learning that recognizes names and entities for example topic extraction and the like. In yet another embodiment post processing may include metadata descriptions subjects and topic extraction. In another embodiment geo specific queries may be configured to find relationships between data sets that are geographically close within a range in the graph data base. For example in FIG. B data set DS 8 and data set DS 15 are geographically close. In another embodiment a predefined set of query facets relate the source data sets in the graph database. The predefined set of query facets e.g. the circuitry bridges and the like allow the system to know where to search in a very efficient manner.

These relationships circuitry and or bridges are dynamically updated as source data sets are added or updated to the graph database. The circuitry is a predefined set of possible query facets on top of the source data sets. The predefined nature of these possible query facets allows the system to refer directly to an in place and in memory mapping no SQL of all the metadata pertinent to a query in the method saving processing time due to the minimized number of trips to a relational database and or the like. If required based on a threshold the relationships circuitry and bridges are dynamically updated at in the graph database. After post processing at or circuitry updating at method includes data low level indexing at .

In another embodiment the methods discussed herein may not include a graph database a high level index and or post processing.

The low level data indexing at and or source data set optimization at may employ optional techniques. In one embodiment the method maintains persistent indices across ephemeral or virtual storage resources. In another embodiment low level indexing may include dynamic timing that factors in data procurement and scheduling timing to insure that the low level indices include the latest and most up to date information. In yet another embodiment low level indexing may include a dynamic relationship between full text searching system usage history analytics and database optimization using key words and vectors. In another embodiment dynamic generation of standard query language results stream into indexer logic including high level indexer and lower level indexer. In yet another embodiment distribution of the indexer process allocates computation and RAM memory resources. In another embodiment metadata of indices is maintained and used to increase the speed of the querying process. In yet another embodiment stemming and keywords are generated in feedback with NER development. In another embodiment the system dynamically creates input to indices to scale across source data sets. In yet another embodiment at least one or a combination of two or more of these techniques are employed by low level data indexing at and or source data set optimization at .

In another embodiment a query can be entered into a plugin e.g. at in the plugin discussed herein where queries are issued to the system automatically based upon a set of conditions like the recognition of a particular class of entities e.g. people or a global positioning system GPS radio indicating a location and the like. In yet another embodiment a query can be entered into a filter where a particular query string is further refined by narrowing its scope to a particular topic source or the like. In another embodiment a query can be entered into an alert where a particular query can be run at a user adjustable frequency and the user will be alerted if information fulfilling a particular set of conditions is obtained.

In yet another embodiment a query can be entered into an info click where a specific cell in a previous data result is used to initiate a query e.g. as illustrated and described in method discussed herein . In another embodiment a query can be entered into any type of entity recognition user interface. At the method includes a query execution process at that includes running a query of the array of indices in memory and processing results and formatting output at before the method produces output and or sends output to a user interface and the like at .

In another embodiment the query execution at may include at least one of the query execution processes at . In one embodiment query execution at may include query string parsing at where the query string is parsed into text numbers entities and or the like and then matched with the same found in the high level index in the graph database and or the low level indices within each source. In another embodiment query execution at may include retrieving indices of interest at where the indices are retrieved from the graph database circuitry i.e. indices in RAM. In yet another embodiment query execution at may include checking caches for query map and development of a query plan at . In another embodiment query execution at may include associating indices results with metadata across databases or sources in the graph database at . In yet another embodiment query execution at may include using metadata to request data from the data warehouse at . In another embodiment query execution at may include configuring the cache data resource so that it can be retrieved later at

Illustrated in the upper and lower user interfaces illustrate how the display of the preview of the data contained within the table can be dynamically selected to illustrate more see lower UI or less see upper UI of the source data set table preview. Illustrated in the upper user interface illustrates how the user interface may be dynamically selected by a user to query or search for more specific information using the methods described herein to return query results from the source data sets that are output and displayed in a table of records . The output displayed on the website s user interface may be selected and further results may be output in another table view page chart and the like. The lower user interface illustrates another embodiment of the output displayed on the website s user interface illustrating a short descriptive summary of each source data set and table results a short descriptive summary of each source data set and table results a preview of the data contained within the table and a listing of data sets

Illustrated in the upper and lower website user interfaces illustrate table view pages and user interface driven data analytics. For example the upper user interface illustrates a table of Contracts 2009 For The Department of Justice that displays the fields of role vendor city amount and serial for example . Also displayed in the upper user interface of is a drawer that can be used by a user to open as shown in Upper and close as shown in Lower access to table view tools and log . As illustrated in the upper user interface of a log of searches and or queries is maintained in the log so that a user can reuse filters and or queries previously run. Further illustrated in the lower interface of each field has at least one filter that provide field specific dynamic results . For example statistics including a sum average standard deviation maximum minimum and variance are provided for numerical fields. For text only fields a filter may be based on ascending or descending attributes of the data. Further a date field may have a filter to limit output based on data before or after a specific date.

Further illustrated in the upper and lower user interfaces illustrate examples of filters being applied to table view pages. The upper user interface illustrates a filter being applied to data found in the whole table and the lower user interface illustrates a filter applied to one or more columns in the table.

In another embodiment the user interfaces discussed herein may include at least one of the following a horizontal result page a table review page a user interface driven data analytics answer a plugin layer a relational join preview a streaming data resource to power external applications alert conditions and related emails texts and the like screen and list building capabilities reports and factsheets raw data assets in multiple machine readable formats and an interactive network socket that allows for polling and application requests.

In another embodiment the structured and or unstructured source data sets are not acquired into at least one system rather the source data sets are analyzed by the at least one system over the internet and the indices high and low level indices may be stored on the at least one system. For example with future developments of super high speed internet the need to acquire and save data into the at least one system may be reduced because the amount of time it would take to run method and the like over a super high speed internet may be about the same amount of time to run the method on data sets that have been acquired into the at least one system. In another embodiment the super high speed internet is used by the methods to analyze data sets that have been previously identified therefore a high level index and post processing a low level index and related circuitry are created and or updated each time a data query is entered in a system using the methods discussed herein.

While the systems methods and so on have been illustrated by describing examples and while the examples have been described in considerable detail it is not the intention of the applicants to restrict or in any way limit the scope of the appended claims to such detail. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the systems methods and so on provided herein. Additional advantages and modifications will readily appear to those skilled in the art. Therefore the disclosure in its broader aspects is not limited to the specific details the representative system or method and illustrative examples shown and described. Accordingly departures may be made from such details without departing from the spirit or scope of the applicant s general inventive concept. Thus this application is intended to embrace alterations modifications and variations that fall within the scope of the appended claims. Furthermore the preceding description is not meant to limit the scope of the disclosure. Rather the scope of the disclosure is to be determined by the appended claims and their equivalents.

The embodiments of this disclosure shown in the drawing and described above are exemplary of numerous embodiments that may be made within the scope of the appended claims. It is understood that numerous other configurations of the method and system may be created taking advantage of the disclosed approach. Description of information in terms of user interfaces and or conversations is for convenience. It will be readily apparent to a person of ordinary skill in the art to organize arrange and display other iterations of the exemplary embodiments in a similar manner. In short it is the applicant s intention that the scope of the patent issuing herefrom will be limited only by the scope of the appended claims.

