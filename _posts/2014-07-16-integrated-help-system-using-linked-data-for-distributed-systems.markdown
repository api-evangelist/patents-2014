---

title: Integrated help system using linked data for distributed systems
abstract: An approach is provided for providing cross product contextual help consolidating cross product contextual help. The approach is responsive to receiving a help request. The help request pertains to a first software product installed on the information handling system. The first software product interacts with a second software product that is also installed on the information handling system. The approach retrieves a first help contents from the first software product and a value from the second software product. The value is retrieved from the second software product using interfaces that were registered in a registry and uses linked data. Help information is presented to a user with the help information pertaining to the first application and including the first help contents retrieved from the first application and the value retrieved from the second application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122496&OS=09122496&RS=09122496
owner: International Business Machines Corporation
number: 09122496
owner_city: Armonk
owner_country: US
publication_date: 20140716
---
Complex IT environments contain numerous products and applications that work in a delicate harmony. Administration and configuration of these systems needs to be managed on these products as well as between numerous products. Integrations between products depend on individual configurations and can easily be broken by incorrect settings or uncoordinated administration. Traditional systems do not provide centralized assistance and or help in the context of a distributed IT environment. Instead the administrator visits each of the individual product help systems to view help content. Additionally the administrator needs to know the system environment in detail since the help provided though descriptive lacks details specific to a customer s environment. These issues result in the customer or system administrator making mistakes while configuring the environment even though the help content is descriptive. Managing and administering an IT solution involves numerous products and is a challenge to customers services teams and managed environment teams. System integration involves configuring between systems. Reviewing disparate documentation and help systems slows down work and can lead to mistakes. These issues affect the ease of use for products and solutions and negatively impact perceived value cost of ownership and the like.

An approach is provided for providing cross product contextual help consolidating cross product contextual help. The approach is responsive to receiving a help request. The help request pertains to a first software product installed on the information handling system. The first software product interacts with a second software product that is also installed on the information handling system. The approach retrieves a first help contents from the first software product and a value from the second software product. The value is retrieved from the second software product using interfaces that were registered in a registry and uses linked data. Help information is presented to a user with the help information pertaining to the first application and including the first help contents retrieved from the first application and the value retrieved from the second application.

The foregoing is a summary and thus contains by necessity simplifications generalizations and omissions of detail consequently those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting. Other aspects inventive features and advantages of the present invention as defined solely by the claims will become apparent in the non limiting detailed description set forth below.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The following detailed description will generally follow the summary of the invention as set forth above further explaining and expanding the definitions of the various aspects and embodiments of the invention as necessary. To this end this detailed description first sets forth a computing environment in that is suitable to implement the software and or hardware techniques associated with the invention. A networked environment is illustrated in as an extension of the basic computing environment to emphasize that modern computing techniques can be performed across multiple discrete devices.

Northbridge and Southbridge connect to each other using bus . In one embodiment the bus is a Direct Media Interface DMI bus that transfers data at high speeds in each direction between Northbridge and Southbridge . In another embodiment a Peripheral Component Interconnect PCI bus connects the Northbridge and the Southbridge. Southbridge also known as the I O Controller Hub ICH is a chip that generally implements capabilities that operate at slower speeds than the capabilities provided by the Northbridge. Southbridge typically provides various busses used to connect various components. These busses include for example PCI and PCI Express busses an ISA bus a System Management Bus SMBus or SMB and or a Low Pin Count LPC bus. The LPC bus often connects low bandwidth devices such as boot ROM and legacy I O devices using a super I O chip . The legacy I O devices can include for example serial and parallel ports keyboard mouse and or a floppy disk controller. The LPC bus also connects Southbridge to Trusted Platform Module TPM . Other components often included in Southbridge include a Direct Memory Access DMA controller a Programmable Interrupt Controller PIC and a storage device controller which connects Southbridge to nonvolatile storage device such as a hard disk drive using bus .

ExpressCard is a slot that connects hot pluggable devices to the information handling system. ExpressCard supports both PCI Express and USB connectivity as it connects to Southbridge using both the Universal Serial Bus USB the PCI Express bus. Southbridge includes USB Controller that provides USB connectivity to devices that connect to the USB. These devices include webcam camera infrared IR receiver keyboard and trackpad and Bluetooth device which provides for wireless personal area networks PANs . USB Controller also provides USB connectivity to other miscellaneous USB connected devices such as a mouse removable nonvolatile storage device modems network cards ISDN connectors fax printers USB hubs and many other types of USB connected devices. While removable nonvolatile storage device is shown as a USB connected device removable nonvolatile storage device could be connected using a different interface such as a Firewire interface etcetera.

Wireless Local Area Network LAN device connects to Southbridge via the PCI or PCI Express bus . LAN device typically implements one of the IEEE 802.11 standards of over the air modulation techniques that all use the same protocol to wireless communicate between information handling system and another computer system or device. Optical storage device connects to Southbridge using Serial ATA SATA bus . Serial ATA adapters and devices communicate over a high speed serial link. The Serial ATA bus also connects Southbridge to other forms of storage devices such as hard disk drives. Audio circuitry such as a sound card connects to Southbridge via bus . Audio circuitry also provides functionality such as audio line in and optical digital audio in port optical digital output and headphone jack internal speakers and internal microphone . Ethernet controller connects to Southbridge using a bus such as the PCI or PCI Express bus. Ethernet controller connects information handling system to a computer network such as a Local Area Network LAN the Internet and other public and private computer networks.

While shows one information handling system an information handling system may take many forms. For example an information handling system may take the form of a desktop server portable laptop notebook or other form factor computer or data processing system. In addition an information handling system may take other form factors such as a personal digital assistant PDA a gaming device ATM machine a portable telephone device a communication device or other devices that include a processor and memory.

The Trusted Platform Module TPM shown in and described herein to provide security functions is but one example of a hardware security module HSM . Therefore the TPM described and claimed herein includes any type of HSM including but not limited to hardware security devices that conform to the Trusted Computing Groups TCG standard and entitled Trusted Platform Module TPM Specification Version 1.2. The TPM is a hardware security subsystem that may be incorporated into any number of information handling systems such as those outlined in .

During installation each of the software products register themselves and their relationships with central registry to advertise their services. Each of the installed software products includes a help system that is integrated by Integrated Help System Provider . In the example shown Product A is installed along with Product A s help system Product B is installed along with Product B s help system Product C is installed along with Product C s help system and Product D is installed along with Product D s help system . In one embodiment one of the services registered by each of the products is their respective help systems.

During registration of the respective products the services registered in central registry are advertised via the central registry to the other software products as well as to Integrated Help System Provider . Entries are shown that correspond to each of the installed software products. Product A registry entries advertise the services provided by Product A including Product A s help system . Likewise Product B registry entries advertise the services provided by Product B including Product B s help system . Product C registry entries advertise the services provided by Product C including Product C s help system . Likewise Product D registry entries advertise the services provided by Product D as well as Product D s help system . In addition as depicted by the lines connecting different software products registry entries each of the software products has relationships to one or more other software products. In the example Product A has registered a relationship to Products B and C Product B has registered a relationship to Products C and D Product C has registered a relationship to Product A and Product D has registered a relationship to Products A and C.

When a user such as a system administrator requests help from Integrated Help System Provider the Integrated Help System Provider opens a help system interface to search for assistance in administration configuration etc. The Integrated Help System Provider queries central registry to locate services registered by various products Products A B C and D . The Integrated Help System Provider contacts each product service directly to retrieve the help contents from help systems and . Integrated Help System Provider retrieves the help contents and consolidates the help contents. Integrated Help System Provider then serves the consolidated help to the user. The user selects a help page to view its contents and the Integrated Help System Provider contacts the selected product directly to retrieve the requested help contents. The Integrated Help System Provider then serves the requested product help contents to the user.

Context provider works in conjunction with Integrated Help System Provider . In one embodiment context provider is integrated with Integrated Help System Provider . Context provider identifies the help files requested by the user and reads the contents e.g. text annotations in HTML data tags etc. by reading it the help contents. Context provider queries central registry to locate services registered by the various products. Context provider contacts each product service directly to retrieve the information e.g. values etc. that enrich the help content with actual values and data. The context provider then replaces the data tags e.g. HTML annotations etc. in the help files with the actual values retrieved from the system environment such as from other products installed on system . The enriched help is served to the user.

At step the process installs the selected software product on the customer s platform and the selected software product is added to the customer s base of installed products data store . As previously described the customer s platform may be a single system or a distributed system that includes any number of individual information handling system connected via a computer network. At step the installed software product exposes its services to other products via a remotely accessible interface such as a Representational State Transfer REST API etc. At step the process registers the exposed services of the installed software product in central registry . By registering the exposed services in the central registry the installed software product advertises the services that it provides to other software products. At step the process identifies other software products already installed on the customer s platform using the central registry and registers relationships between the selected software product and other software products in central registry .

Returning to decision if the customer is uninstalling a software product from the system decision branches to the uninstall branch whereupon steps through are performed to uninstall the selected software product. At step the process removes the selected software product from the customer s platform and the selected software product is removed from the customer s base of installed products data store . At step the process removes registry entries previously added to central registry when the selected software product was installed on the customer s platform. In this manner the selected software product s services are no longer advertised to other software products running on the customer s platform. At step the process removes relationship entries between the selected software product and other products installed on the customer s platform.

The process determines as to whether the customer wishes to install or uninstall any more software products decision . If the customer wishes to install or uninstall more software products then decision branches to the yes branch which loops back to receive and process the next software product selected by the customer. This looping continues until the customer no longer wishes to install or uninstall software products on the customer s platform at which point decision branches to the no branch and installation processing ends at .

Returning to decision if the Integrated Help System Provider help interface was not used by the user to request assistance instead the request was based on a consolidated help contents already displayed to the user then decision branches to the no branch to process the user s request. The process determines as to whether the user selected help documentation from the consolidated help contents or from another source of help content information decision . If the user selected help documentation then decision branches to the yes branch to further process the user s documentation selection. At predefined process the process handles the help page requested by the user see and corresponding text for further processing details . At predefined process responsive to receiving a help request pertaining to a first software product installed on the system the process detects that the first software product interacts with a second software product based upon relationship entries in the central registry. Help contents from the first software product are retrieved as well as from other software products if the requested help page is formed from a consolidation of multiple software product help contents. The retrieved help contents may reference via data tags values available from the second software product. These referenced values are received from the second software product through interfaces registered in the central registry using linked data. Enriched help document is the result of predefined process . At step the process presents help information pertaining to the first application enriched help document with the presented help information including the help contents retrieved from the first software programs and other software programs if applicable and any values retrieved from other software programs. At step the process receives another request from the user such as a selection of another document referenced in the presented help or the consolidated help contents.

The process determines as to whether the user has requested to quit the help system interface process decision . If the user has not requested to quit then decision branches to the no branch which loops back to process the user s next selection as described above. This looping continues until the user requests to quit at which point decision branches to the yes branch and processing ends at .

The process determines as to whether there are more registered software products installed on the system decision . If there are more software products installed on the system then decision branches to the yes branch which loops back to select and retrieve help contents data from the next selected software product. This looping continues until the process has completed generating consolidated help contents from the help contents retrieved from the various software products at which point decision branches to the no branch. The consolidated help contents includes a topology of the relationships between the software products with such relationships being revealed based on the relationships between software products that was retrieved from central registry .

At step the process serves the consolidated help contents with topology to a user of the system for example by displaying the consolidated help contents on display device that is used by the user. Processing then returns to the calling routine see at .

At step the process selects the first software product that corresponds to the requested help page. At step the process contacts the software product directly e.g. Product A etc. to retrieve the help contents for the requested help page from the software product. At step the process retrieves the requested help contents from the registered software product. At step the process consolidates the retrieved help contents in an integrated help page document document . The process determines as to whether help contents data from other registered software products is needed to build the requested help page decision . If help contents data from additional software products is needed to build the requested help page then decision branches to the yes branch whereupon processing loops back to select and process help contents data from the next software product that correspond to the requested help page with the retrieved help contents data being added to consolidated page document . This looping continues until the help contents data needed from all of the software products needed to build the help page have been retrieved and the consolidated help document has been generated at which point decision branches to the no branch for further processing.

The process determines as to whether data tags e.g. HTML tags etc. that reference values available from software products are found in consolidated help document decision . If data tags are found in the consolidated help file then decision branches to the yes branch whereupon at predefined process the help context provider is called to resolve the software product references see and corresponding text for further processing details . The result of the help context provider processing is enriched help files that include not only help contents data from one or more software products but also values received from one or more software products. In one embodiment at least one of the software products that provides one of the values does not have its help contents data included in consolidated help files . Returning to decision if there are no data tags found in consolidated help document then decision branches to the no branch bypassing predefined process . Processing then returns to the calling routine see at .

The process determines as to whether there are more registered products that provide the value corresponding to the selected data tag decision . If other software products provide the value corresponding to the selected data tag then decision branches to the yes branch which loops back to select the next software product that provides the value and the value is retrieved from the next software product as described above. This looping continues until all of the software products that provide the value corresponding to the selected data tag have been processed at which point decision branches to the no branch for further processing.

At step the process enriches the consolidated help contents data by replacing annotations e.g. the selected data tag etc. with values received from the registered software products and stored in memory area . Enriched help contents data is stored in document . The process determines as to whether there are more data tags in the consolidated help file to process decision . If there are more data tags to process then decision branches to the yes branch which loops back to select and process the next data tag as described above. This looping continues until all of the data tags found in consolidated help file have been processed at which point decision branches to the no branch. At step the process serves enriched help page document to the user such as on display device that is used by the user. The enriched help page includes the consolidated help data from one or more of the software products as well as actual data values from one or more software products that have been inserted in the help document. Processing then returns to the calling routine see at .

The following example shows a help file with a data tag followed by the enriched help file where the data tag has been replaced by the actual value received from one of the software products installed on the system. An example of a help file with a data tag is 

In the example assume the provider of the software product being referenced is Acme Corp and the name of the software product is Product A. In this example after the data tag is replaced by the actual values the resulting enriched help page document might be something like 

While particular embodiments of the present invention have been shown and described it will be obvious to those skilled in the art that based upon the teachings herein that changes and modifications may be made without departing from this invention and its broader aspects. Therefore the appended claims are to encompass within their scope all such changes and modifications as are within the true spirit and scope of this invention. Furthermore it is to be understood that the invention is solely defined by the appended claims. It will be understood by those with skill in the art that if a specific number of an introduced claim element is intended such intent will be explicitly recited in the claim and in the absence of such recitation no such limitation is present. For non limiting example as an aid to understanding the following appended claims contain usage of the introductory phrases at least one and one or more to introduce claim elements. However the use of such phrases should not be construed to imply that the introduction of a claim element by the indefinite articles a or an limits any particular claim containing such introduced claim element to inventions containing only one such element even when the same claim includes the introductory phrases one or more or at least one and indefinite articles such as a or an the same holds true for the use in the claims of definite articles.

