---

title: Hierarchical display-server system and method
abstract: A computing system includes a hierarchical set of servers. The hierarchical set includes a master server and one or more slave server. The master server and slave servers communicate with at least one non-intelligent user system over a communications network. The master server has full access to each non-intelligent user system. The master server controls access permissions for each slave server to the non-intelligent user system(s). Each higher level slave server can control access permissions for sub-level slave server(s) to the non-intelligent user system(s). A master or, if permitted access, a slave server, creates a window in a display of the non-intelligent user system, and can provide access to the window to any lower-level slave server to send pixels to fill that window. The pixels can be the graphics output of an application such as a browser or spreadsheet or the pixels can be video (either live or read from a hard drive). In other applications of the servers, the server system can control output on components of the user system, and receive input from components and peripherals of the user system, all via communications over the network. Access to respective non-intelligent user systems is dictated by the master server and each higher level slave server of the hierarchical set of servers. Data representing input of components and peripherals is multiplexed and communicated over the network by the user system, and data representing output of components of the user system is received by the user system over the network and demultiplexed and delivered to the component for output on the user system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09300763&OS=09300763&RS=09300763
owner: 
number: 09300763
owner_city: 
owner_country: 
publication_date: 20140226
---
The present application is a continuation and has benefit of priority of U.S. patent application Ser. No. 13 160 122 titled Hierarchical Display Server System and Method filed Jun. 14 2011 which is a conversion and has benefit of priority of U.S. Provisional Patent Application No. 61 354 799 titled Hierarchical Display Server System and Method filed Jun. 15 2010 which prior application is co pending and has at least one same inventor of the present application and is herein incorporated by this reference.

The present invention generally relates to server devices and non intelligent user devices connected by a communication network and more particularly relates to display server systems including master server device and hierarchical slave server devices communicatively connected to user devices having display input output and networking components with limited or no processing capability.

Over the years there have been various types of computing systems. Four of the major types are server client client server and display server. All types of computing systems perform a computing task for a user.

Server systems consist of a single system where all computing is done in a central location and there is no user interaction with the computing task other then the initial starting of the task. A typical server system is a traditional mainframe.

Client systems consist of a single system that performs all computing but in client systems there is constant user interaction with the computing task. Typical client systems are personal computers laptops smartphones and game consoles.

Client server systems consist of both a server computing system and a client computing system which together perform a single computing task. These systems each separately operate as both a server system and a client system. Operating as both server and client the client server system performs a single computing task requiring user interaction in the task at least in connection with acting as client in the task. Typical client server systems in use today are airline reservation systems and large retail store point of sale systems. A special type of client server system is the web server browser client. As is the case with any client server application the web server performs a single unique task serving responses to requests received. However rather than having a unique client program associated with each server program the browser program serves as a generic client program. The browser is used by all web servers. It will be noted that browsers presently may operate an application by downloading a program on the fly which is processed in the browser therefore web browser server computing particularly in instances of program download is very similar to standard client server computing.

Display server systems consist of a server computing system and a non intelligent user side system. A predominant aspect of this non intelligent user system is a display. The user system is therefore sometimes referred to as a display hence the term display server system for these types of computing systems. As with the server only computing system substantially all computing tasks are performed by the server in the display server system and little if any computing other than to the extent needed for input and output operations is performed by the display. In these display server systems the display is however highly interactive with the computing task that is processed by the server. The server performs substantially all of the processing and other functions of a client system of a client system type of computing system because the display has only very limited if any processing capability. In effect the display merely displays pixels corresponding to data representing the pixels received from the server by the display. In most cases data representing pixels for display is delivered by the server to the display for viewing such as a video stream or other data stream and low level user events at the display such as keystroke and mouse movements are sent natively by the display to the server.

Display server computing is the least employed arrangement for present computing systems but display server systems can provide benefits and are expected to grow in popularity. A typical display server computing environment is called zero client computing. In zero client computing a desktop operating system OS and applications are processed by a server instead of by a client system such as the typical personal computer . The user side system is often primarily a non intelligent thin client device coupled with a display and keyboard or other input and output device s .

Another environment in which display server computing is employed is 3D games. The 3D games are processed by a server system generally a high performance server computer and the server system delivers a pixel video stream of the game to a very thin client user side system connected to a television set. A traditional game controller input device at the user side system communicates inputs of a user to the server system during game play.

It would be advantageous therefore to provide greater operational flexibility and increased scalability for display server systems.

An embodiment of the invention is a display server system including a display hierarchical multiple server system. The display server system includes one or more non intelligent user system the display connected over a network to a plurality of server devices connected in a controlled hierarchy.

The user system includes a display one or more input output components such as keyboard mouse speakers microphone and or other similar peripheral devices and a network interface connector communicatively connected to a communication network. The user system sends over the network very low level data representing inputs actions by a user via the peripheral device to a server system communicatively of the network. The server system likewise communicates over the network to the display or another peripheral device very low level data representing results of an operation by the server system such as in response to the peripheral device. The low level data so communicated represents for example pixels video sent by the server system to the display of the user system a user s input to a keyboard of the user system sent by the keyboard to the server system audio samples sent by the server system to the speaker of the user system etc. Processing is limited for the user system for example the user system may only perform multiplexing and demultiplexing of communications as may be required for the network. Multiplexing and demultiplexing may be required for example to transform native data types employed in components of the user system to from network messages suitable for communication over the network.

The servers are arranged in a hierarchy with a single master server and multiple sets of cascading slave servers. The master server communicates with the first level slave servers and the first level slave servers communicate with the second level slave servers and so on. All servers are capable of communicating directly with the user system. The master server has complete control of all respective components of the user system. The master server provides each lower level slave server in the hierarchy an equal or lesser amount of control respectively over respective component s of the user system. The master server informs the user system component s which low level server s if any can controllingly access the component. This hierarchical access by respective slave servers of the hierarchy and by the master server to the respective components of the user system flexibly and extremely securely allows processing by the servers and input output by the components of the user system without significant processing required of the user system.

The user system and hierarchical server system are generally located remotely each from the other and the user system and server system communicatively connect over a physical communication network such as Ethernet Wi Fi 3G or other data network. In certain alternatives the user system and server system however can be contained in a single physical device and the network in such event is a local wire or other local link of the device.

The combined user system and server system whether embodied as a non intelligent user system and hierarchical server system as a single physical device or other similar arrangement is herein sometimes referred to as a hierarchical display server system which operates for hierarchical display server computing.

Referring to a hierarchical server system includes a master server communicatively connected respectively and either directly or indirectly to five slave servers slave server A slave server B slave server C slave server D and slave server E . The server system communicatively connects such as over a communications network to a user system A and to a user system B . The master server particularly connects to three first level slave servers slave server A slave server B and slave server C . Two of these first level slave servers slave server A and slave server C connect to second level slave servers slave server A connects to slave server D and slave server C connects to slave server E .

User system A is a desktop style non intelligent user system for example comprising four physical components display keyboard mouse and speaker . The keyboard mouse and speaker connect to the display . The display includes a network interface for connection to a communications network communicatively connected to the server system. User system B is a handheld style non intelligent user system such as a cell phone a tablet display a personal digital assistant or communicative mobile device. User system B comprises for example a display and keyboard contained within a single unitary housing. Both the user system A and the user system B can communicatively connect to all servers of the server system such as over a communication network.

A master server has access to all the components of each user system in communication with the master server. Master server for example through communicative access over the network controls all components of user system A i.e. each of the keyboard mouse and speaker of the user system A and each similar component although integrated in single unitary housing of the user system B i.e. display and keyboard of the user system B . Therefore for example master server can send video to any portion of user system A s display and play audio on speaker . Master server receives communications over the network through inputs to the user system A s keyboard and mouse . The master server likewise communicatively accesses each component of the user system B .

A master server can provide access to any of a user system s components to slave servers or any of these connected to the master server. Master server can give slave server A access to all or certain of user system A s display for example and the slave server A then can communicatively control the display such as to display video. In another example the master server can give slave server A access to user system A s speaker and slave server A can thereby communicatively control the speaker such as to play a tone or other sound.

A slave server can provide access to any of a user system s components to lower level slave servers connected to the slave server. Slave server A if provided access to user system s A speaker by the master server for example can provide that access to slave server D i.e. a lower level slave server . Slave server D thereby can communicatively control the speaker of the user system A . The user system A mixes all audio received for the speaker . When a server provides a lower level server access to a user system component the user system is informed of that access. If a user system has not been informed that a particular server can access a given component then the user system will ignore all communications for that given component from that server.

The connections between servers and between servers and user systems are network connections such as Ethernet WiFi 4G WiMax or any other communicative network or combination of such networks.

Referring to two exemplary but non exclusive types of user system are a desktop user system and a handheld user system . The desktop user system includes for example physically separate components of USB flash drive microphone speaker display camera mouse printer and keyboard . All of the components connect to a control unit which in turn is connected to the network . The control unit may physically be built into one of the other components such as the display or the control unit may be a separate processor of the desktop user system employed only for limited control operations e.g. no significant operating system operations . An exemplary control unit is later described with respect to . The handheld user system includes for example similar basic but all internal components of microphone keyboard display camera speaker control unit and network interface . In the example the handheld user system does not have a printer mouse or flash drive as does the desktop user system . The handheld user system however has a GPS unit and MEMS components not present in the desktop user system in the example. The network connection of the desktop user system can be wired such as Ethernet or wireless such as WiFi 4G WiMax or other communications network or combination thereof. The network connection of the handheld user system is wireless for example. The desktop user system and the handheld user system although examples only illustrate devices and components of the devices as may be operable in the embodiments. Other devices and components with at least network communication capabilities and certain of the features are also or alternatively possible in embodiments.

Referring to a detailed internal component functionality block diagram of a typical user system such as a small handheld device includes hardware components LCD display speaker buzzer touchscreen microphone camera and a keyboard . All hardware components interface to logic circuitry of the device that transforms low level data of the device into data that can be communicated over the network. A control unit of the device controls the overall operation of the device including the components. Messages received over the network interface are processed by the control unit which virtually de multiplexes the messages and delivers the appropriate de multiplexed message data to respective component for the data. A video decoder converts the received network communications data for delivery to the LCD display . Video decoder can be a standard MPEG2 H.264 VC 1 style decoder or a propriety video decoder. Audio decoder converts the network data into analog signals for delivery to the speaker . Audio decoder can be a standard AAC MP3 G711 style decoder or a propriety audio decoder. A haptics decoder converts the network data into a format for driving a buzzer . The opposite is true for outgoing messages in which the control unit virtually multiplexes message data from the respective component and creates messages for delivery to the network interface for network communications. The touchscreen encoder converts data from the touchscreen for delivery over the network. The audio encoder converts the analog data from the microphone into digital data for delivery over the network. The formats of the audio encoder data are the same as the formats of the audio decoder data. The video encoder converts data from the camera . The formats of the video encoder data are the same as the formats of the video decoder data. No substantial processing of data is performed by the user system rather the user system converts data generated by the hardware of the device and received by device into outgoing network messages and from incoming network messages respectively in form communicatable over the network and useable by the hardware respectively.

Referring to hierarchical servers such as that previously discussed permitted to communicate with a user system each create a respective window and thereby multiple windows are displayed by the user system i.e. one distinct window for each server . The respective servers are permitted access rights to the respective windows of the display. A server that has access to a window for example sends pixels representing graphical displays to fill that window. The pixels can be the graphics output of an application such as a browser or spreadsheet the pixels can be video either live or read from a hard drive or the pixels can be other media as applicable in the embodiment.

The servers of have hierarchical association such as that of the servers of to wit master server and five slave servers A B C D and E . Master server in the example of has access rights to the complete display and has created window which covers the entire area of the display and fills window with pixels representing graphical displays in the window or video or other media as applicable . Master server has also created window and given slave server A access rights to fill window with pixels representing graphical or other displays in the window . In turn slave server A has created window and given slave server D access rights to fill window for example with pixels representing a different or same graphical or other display. Master server has created window and given slave server B access rights to fill window also for example with pixels representing a different or same graphical or other display or media. Master server has created window and given slave server C access rights to fill window such as with pixels also representing a different or same graphical or other display. In turn slave server C has created window and given slave server E access rights to fill window also with pixels representing same or different graphical or other display. shows that higher level servers create windows and lower level servers fill the windows with pixels for each lower level server the window created for that particular server on the user system display is the only location in which the lower level server s pixels will be displayed. Slave servers can only create windows that are contained within the window or windows as applicable to which the respective slave server is given access rights by the master server or a higher priority slave server of the hierarchical association.

Referring to certain exemplary access rights according to certain embodiments are given slave servers by higher level servers as applicable. There are for example three general categories of access rights physical components windows on a display and server to server interaction . For physical components a particular server either has or does not have right to access and thus operationally use the component. Display windows are created hierarchically as discussed in connection with and as further later described with respect to . A higher level server creates a window and gives a lower level server access rights to fill that window. There are various server to server interactions that have access rights associated with them. Servers can be given access rights to copy paste and drag drop information exchanges access rights to files as further later described with respect to access rights to exchange private server to server communications and others. Also a slave server can request access for file operations from a higher priority server. Moreover a slave server may need and so may request access to lower level slave server or servers where such access is required.

Referring to certain exemplary network messages flow between server and user system between server and server and in a few cases between respective two or more user systems. For example user to server messages provide data representing inputs or directions from hardware components such as keyboard mouse GPS or other input or direction of the user system to the server via network communication. A connect message for example is the first message that a user system sends to commence communications with the master server. Server to user messages provide for example data control representing directions or instructions for hardware components of the user system such as printer speaker volume and camera. At least certain of the server to user messages are data representing commands for user system windows and digital rights management DRM . One message category consists of audio and video messages which can be sent between server and user system user system and server and directly between user systems. Higher level servers send messages to lower level servers and also a lower level server sends messages to the higher level server .

Referring to an exemplary user system and server system which server system can be any of a master server or any higher or lower level server permitted access to the user system in operation includes a keyboard input of the user system communicated to a browser of the server system such as a browser software application processed by the server system . The user system includes a user side hierarchical display system capable of processing communicated instructions of the server system and performing corresponding displays or other output operations at the user system in response. The user system also includes a messager and a communication unit such as a TCP UDP and IP software and or hardware unit for protocols and communications with server systems in a hierarchical arrangement . The user system further includes a keyboard or other input device.

The server system includes the browser . The server system also includes a hierarchical system capable of hierarchical interaction and arrangement with other server systems in a hierarchical display server system according to the embodiments. Additionally the server system includes a messager and a communication unit such as a TCP UDP and IP software and or hardware unit or components for protocols and communications with the user system and other server systems in a hierarchical arrangement .

In operation a keystroke at the keyboard such as may be entered by a user of the user system is detected by the user side hierarchical display system . The hierarchical display system processes the detected keystroke to determine that data representing the keystroke should be communicated to the server system . The hierarchical display system then passes data representing the keystroke to the messager . The messager formats the data representing the keystroke as a message readable by the server system . The messager communicates the message to the communication unit . The communication unit formats and communicates the message to the server system such as over a communications network according to an applicable TCP UDP IP packet protocol of the communicated message .

The communication unit of the server system communicatively receives from the network the communicated message . The communication unit extracts a message corresponding to the message from the communicated message and delivers the message to the messager . The messager determines that the message represents a keystroke input to the keyboard of the user system and delivers the message as an input to the hierarchical system of the server system . The hierarchical system on such input extracts therefrom a browser input representing the keystroke at the user system . The browser input is communicated to the browser by the hierarchical system . The browser then processes the browser input for operations in communication with and display or other output at the user system .

A similar process now repeats for window Z . Slave server sends a window and a slave connect message to the user system . The window command creates window Z at coordinates 160 50 and the slave connect portion of the message informs the user system that slave server B will connect. The access rights that the slave server B has are also part of the message . Slave server A sends a connect message to slave server B informing it to connect to the user system . Slave server B now sends the video message in the example to user system that fills window Z with pixels representing a video media displayed in window Z .

Now both master server and slave server A send audio messages further according to the example to the user system . The user system mixes the audio and plays it on the speaker . In order for user system to accept audio from slave server A the master server would have informed the user system that slave server A has speaker access rights.

Referring to in an exemplary embodiment of the detailed interaction of a server and two user systems and the user systems and are sending audio and video messages directly to each other. A configuration such as depicted in could be used for example in a video audio conference between the two users. Server sends message to create Window J and sends message to create Window K on the display of the user system A . Server sends video message that fills Window J with pixels representing the audio and video media for display on the user system A . Server then creates a similar set of windows on the display of user system B window M and Window N in the example. Server fills Window M with video message. Server then informs user system A and user system B that they each have access to the other s respective speakers and display windows respectively. Therefore user system B sends video message from camera to window K of user system A . Similarly user system A sends video message from camera to window N of user system B . Audio is exchanged similarly between each respective user system s microphone and speaker. User system A s microphone sends audio messages to user system B s speaker and user system B s microphone sends audio messages to user system A s speaker . Video and audio are common components for which access is permitted to a user system but access rights to any component may be passed on from a server to a user device thereby allowing the user device to communicate with another user device in this manner.

A similar process occurs when a slave server capable of serving a Calendar application message is commenced communicating with a user system display . Master server sends a window message and video message to the user system display directing the display to create and fill in a frame window with pixels representing the calendar such as the frame window . Master server sends a window message to create a Calendar application window . Master server then sends a connect message to the slave server . The slave server sends the video message to fill the Calendar application window with pixels representing the calendar. A standard desktop environment can thereby be created in a user system in a very secure manner each respective application unit having limited rights to the user system to fill windows such as with pixels representing text graphics video or other media of software programs or other operational units of and processed by the applicable master and slave server system.

Referring to an exemplary embodiment of a plurality of servers in a hierarchical association can service a particular user of respective ones of a plurality of user systems as the user moves from one user system to another of the user systems. In the example embodiment master server connects to slave server Browser and slave server Spreadsheet . There are three user systems according to the embodiment a desktop user system a handheld user system and a tablet user system . There is only a single user who periodically can move from one user system to another. Initially the user is operating the desktop user system . The respective servers are interconnected in the example with connection set to the desktop user system as has been described. If the user discontinues using the desktop user system and moves to use the handheld user system the handheld user system next sends a connect message to master server .

The master server then determines detects ascertains that the user has moved to the handheld user system and master server communicatively informs slave server Browser and slave server Spreadsheet of the user s movement from desktop user system to handheld user system . The master server and both slave servers and can then redirect their respective messages from transmitting to the desktop user system instead to transmitting to the handheld user system .

Because any particular desktop user system and handheld user system each may have respective distinct hardware and components. For example the desktop user system and handheld user system each may include different components such as varied display type or size keyboard type touch versus mouse input and other of a wide variety of types and styles of components. The desktop user system and the handheld user system therefore each communicate to the servers the respective hardware component details for the system or employed for communications at each time. The servers use the corresponding details for the respective system or as applicable automatically modifying communication and messaging operations accordingly. For example operations may be changed to provide for varied overall size of windows response to touch events and other inputs and outputs of each respective system or and other events characteristics and responses of the respective systems .

Further in the exemplary embodiment if the user moves to commence communicating via the tablet user system rather than the handheld user system the message communications follow and messaging is to tablet user system by the servers. As before if the handheld user system and tablet user system report different components to the servers the servers modify operations accordingly. The user has now used three different user systems and the servers provide serving operations for each unique system and respectively for example adjusting to accommodate differing input outputs of respective devices respective display size and other unique features and components as applies.

Referring to an exemplary method of operation of hierarchical servers for communicating with user device s dispenses with conventional application programming interface API requirements for the user devices. In this example slave server displays a popup event notification on user system . Slave server sends a request message to master server . The request message informs the master server that the slave server application wishes to display the popup event notification on the user system . If permissible per the master server the master server sends a window message to the user system . A window is displayed on the user system . The master server replies to the slave server with an update message. Slave server sends the message such as a video message to the user system . The message is display in the window as pixels representing the video message. Master server can animate the location of window displayed by the user system for example to draw attention to the message by a user of the user system . Slave server need not be made aware of animation or similar direction of the master server if applicable and the master server or any other server so permitted per the hierarchy can direct operation of the user system in similar manner. It is notable that in this example a special event notification API is not needed.

Referring to another exemplary method of operation of hierarchical servers for communicating with user device s also dispenses with conventional application programming interface API requirements for the user devices. In the example master server displays a news feed list through communications of more than one news server for example four news servers slave servers A B C and D . Master server communicates to the user system creating four identical windows on the display of the user system . Master server then connects to the four slave servers A B C and D respectively and the slave servers A B C and D send respective video messages to the user system . The messages each fill a respective one of the windows or of the user system with pixels representing an applicable video message. The message of slave server A fills window the message of slave server B fills window the message of slave server C fills window and the message of slave server D fills window . A special news feed API is thus not required.

Referring to another exemplary method of operation of hierarchical servers for communicating with user device s permits access between applicable servers and user system s in the presence of a firewall to the user system s . In the embodiment a master server and a slave server connect to a user system across a user side firewall between the servers and the user system . This type of firewall for example allows communications to be initiated from devices such as the user system behind the firewall to pass through the firewall but restricts communications across and through the firewall to the user system from outside the firewall . Once communications is initiated by the user system through the firewall to outside then communications may flow both ways with devices outside the firewall communicating through the firewall to the user system and vice versa. However upon completion of a communication session such as through time out of access communications or otherwise the applicable server s discontinue communicating with the user system until re initiation of communications as has been described.

Further regarding the firewall allows initial communications from user system out to servers and but does not allow initial communication from servers or to user system . In operation user system initially communicates with master server . This opens up a communications path in firewall and master server can send message to user system . When it is desired for slave server to communicate with user system master server sends slave server a connect message . Slave server responds with an ok message . Master server sends user system a next connect message for the slave server . Upon receiving the connect message user system sends slave server another connect message . The communications path in firewall is now open for two way communications between both servers and the user system . Slave server for example sends message to user system .

If communications of messages between slave server and user system are discontinued for a time out period firewall closes the communications path available for two way communications between slave server and user system for example slave server sends message to user system but the message cannot pass through at the firewall . Slave system must send a connect request message to master server in order to reestablish two way communications across the firewall . Master system responds by sending a connect message to user system . Upon receiving connect message user system sends a connect message to slave server to open the firewall for two way communications via slave server . Slave server then resends message as message and the message passes through the firewall for receipt by user system .

Referring to a server hierarchy controls access of slave servers and correspondingly of user system s from such slave servers to files contained a file system such as a file database. Devices and features of are similar to those of with addition of the file system . In the embodiment master server connects directly to file system and can access all files contained in file system . Master server controls access permission of slave server and can provide the slave server access rights to all or a sub set of the files on file system as applicable for the embodiment. For example such sub set can be one file a file directory a group of files or other. Access rights for the files may be read only read write append only or any other type of file access according to the implementation. Consistent with the permissioning and hierarchy as in other respects any slave server may pass on its access rights to one or more other lower level slave servers to which connected.

Referring to an example embodiment of hierarchical servers provides virtualized master and slave servers within a single physical server device or more than one such server device in combination as may be applicable . In the example hierarchical servers such as that of includes each server in a single server device or more than one device in combination as applicable . For purposes of explanation and example all the servers are contained in a single device . The master server and the slave servers and are each virtualized by the hypervisor and contained within the same single device . The user system for example including a display and a keyboard is connected to the single server device via a network connection and the permitted access and communications of respective master server and slave servers and each virtualized in the single device are controlled through associations between the respective servers according to the hypervisor .

Referring to another exemplary embodiment includes virtual hierarchical servers. In the example and for purposes of explanation the respective master and slave servers and also the user system in this example are all contained within a single physical server device or according to implementation more than one such device in combination . The single device in the example includes the master server and the slave servers as well as a display and keyboard . This exemplary configuration of virtual servers and user system in the same device can be a device or other similar arrangement including input output features of display keyboard communications storage and the like as may be applicable in the configuration.

In the foregoing specification the invention has been described with reference to specific embodiments. However one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the present invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of the present invention.

Benefits other advantages and solutions to problems have been described above with regard to specific embodiments. However the benefits advantages solutions to problems and device s connection s and element s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as a critical required or essential feature or element of any or all the claims. As used herein the terms comprises comprising or any other variation thereof are intended to cover a non exclusive inclusion such that a process method article or apparatus that comprises a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus.

