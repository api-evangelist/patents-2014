---

title: Peer-to-peer exchange of data resources in a control system
abstract: System(s) and method(s) are provided for peer-to-peer exchange of data in a control system. Decentralized storage and multi-access paths provide complete sets of data without dependence on a specific or pre-defined data source or access paths. Data is characterized as data resources with disparate granularity. The control system includes a plurality of layers that act as logic units communicatively coupled through access network(s). Server(s) resides in a service layer, whereas client(s) associated with respective visualization terminal(s) are part of a visualization layer. Peer-to-peer distribution of data resource(s) can be based on available access network(s) resources and optimization of response time(s) in the control system. When client requests a data resource, all the locations of the data resource and the quickest source to retrieve it are automatically determined. The client stores copy of data resource. Peer-to-peer distribution of data resource(s) can be implemented within the service layer or the visualization layer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09628557&OS=09628557&RS=09628557
owner: Rockwell Automation Technologies, Inc.
number: 09628557
owner_city: Mayfield Heights
owner_country: US
publication_date: 20140326
---
The subject application is continuation of U.S. patent application Ser. No. 12 695 869 filed on Jan. 28 2010 and entitled PEER TO PEER EXCHANGE OF DATA RESOURCES IN A CONTROL SYSTEM which is a continuation in part of U.S. patent application Ser. No. 11 239 823 filed on Sep. 30 2005 and entitled ROBUST DATA AVAILABILITY SYSTEM HAVING DECENTRALIZED STORAGE AND MULTIPLE ACCESS PATHS. The entireties of these related applications are incorporated herein by reference.

The subject disclosure relates to data storage and distribution and more specifically to peer to peer distribution of data within an integrated industrial control system.

With advances in computing such systems are employed in many aspects of communications industrial control and industry in general. As manufacturing becomes more complex and specialized computing systems and the data and software programs utilized to monitor and control these processes are essential. Downtime related to hardware and or software failure becomes crucial in terms of cost lost productivity and output.

Manufacturing control and monitoring systems consist of and produce enormous amounts of data. This includes configuration data such as controller code and alarm HMI human machine interface data recipe and report definitions to name just a few. Additionally while running control systems produce both real time and historical data about the status of a given process including alarms process values and audit error logs. For example process control workstation displays can show the current state of process variables to an operator. Additionally historical trend objects can display historical data from a persistent store such as a database or log file. For example trend object users can pan backwards in time in a line graph plotting some process variable against time to instances of the process variable that were captured and stored at some point in history. e.g. last week .

In typical distributed HMI systems the data is stored in a predefined location s . HMI displays themselves typically in the form of process overviews or machine detail displays can show real time or last known values to an operator. Multiple screens are created so that the operator can switch between them to view aspects of the system under control. Thus these monitor and control screens that link to inputs and outputs for monitor and control of processes are important. Additionally the data provided by such screens needs to be stored for later retrieval.

Typically users are responsible for backing up and deploying the data files. Each client must have a network path to the data and the server serving the data must be available and functioning. If the server is on a low bandwidth path to a client or a set of clients performance will suffer. Moreover when the server is the central storage location multiple remote system failures can burden the server during file and or software retrieval especially for large production control files and software. Thus alternative mechanism for the safeguard and retrieval of such data is imperative for continued operation of such key systems.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the disclosed innovation. This summary is not an extensive overview and it is not intended to identify key critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

The subject innovation is architecture that provides high availability quick robust redundant data to users by the use of peer to peer technology where the decentralized storage and multi access paths provide the complete data set without dependence on a specific or pre defined data source or access paths including sourcing data from other users of the data applying large file transfer techniques of file sharing.

By using peer to peer technology to distribute files or other data resources a number of benefits are realized in a distributed HMI human machine interface system. Files or other data resources are distributed for storage on many computers eliminating a single point of failure. Additionally client call up times of requested data are reduced as the peer to peer technology retrieves the data from the quickest source. Since the files or other data resources can be stored in many different locations data transfer bottlenecks that can occur on a network e.g. LAN WAN WLAN . . . can be eliminated. Moreover large files or other substantive data resources can be retrieved from multiple sources at the same time eliminating the single source bottleneck.

The invention disclosed and claimed herein in one aspect thereof comprises a system that facilitates data management. The system includes a storage component that decentralizes data storage by storing data on a plurality of computing devices and an access component that facilitates peer to peer access of the data from any one or more of the computing devices.

In another aspect of the subject invention when a client requests a file or other data resource the system automatically calculates all the locations of that file or other data resource and which is the quickest source to retrieve the file. The client then stores a copy of the file for instant retrieval later and to serve that file out to other clients that request it. A versioning scheme ensures that the only the newest version of files are shared on the network.

In yet another aspect thereof a machine learning and reasoning LR component is provided that employs a probabilistic and or statistical based analysis to prognose or infer an action that a user desires to be automatically performed.

In the subject disclosure peer to peer distribution is also applied to various control data and graphic data. The data is characterized as data resources with disparate granularity the data resources comprise files control screens control projects data structures such as graphic data objects and control data objects state information or the like. The control system can be an industrial control system or automation control system which typically includes control environment s comprising a set of one or more industrial controllers or automation controllers a plant a set of tools or machines equipment a group of sub systems industrial processes carried out by one or more apparatuses or the like. In addition the control system includes a plurality of layers that act as logic units communicatively coupled through access network s . Server s resides in a service layer whereas client s associated with respective visualization terminal s are part of a visualization layer. Peer to peer distribution of data resource s can be based on available access network s resources and optimization of response time s in the control system. In addition peer to peer distribution of data resource s can be implemented within the service layer or the visualization layer.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the disclosed innovation are described herein in connection with the following description and the annexed drawings. These aspects are indicative however of but a few of the various ways in which the principles disclosed herein can be employed and is intended to include all such aspects and their equivalents. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.

The innovation is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident however that the innovation can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate a description thereof.

As used in this application the terms component and system layer controller terminal station node interface are intended to refer to a computer related entity or an entity related to or that is part of an operational apparatus with one or more specific functionalities wherein such entities can be either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor a hard disk drive multiple storage drives of optical and or magnetic storage medium an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers.

Also components as described herein can execute from various computer readable storage media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal . As another example a component can be an apparatus with specific functionality provided by mechanical parts operated by electric or electronic circuitry which is operated by a software or a firmware application executed by a processor wherein the processor can be internal or external to the apparatus and executes at least a part of the software or firmware application. As yet another example a component can be an apparatus that provides specific functionality through electronic components without mechanical parts the electronic components can include a processor therein to execute software or firmware that provides at least in part the functionality of the electronic components. As further yet another example interface s can include input output I O components as well as associated processor application or Application Programming Interface API components. While the foregoing examples are directed to aspects of a component the exemplified aspects or features also apply to a system interface layer controller terminal and the like.

As used herein the terms to infer and inference refer generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources.

In addition the term or is intended to mean an inclusive or rather than an exclusive or. That is unless specified otherwise or clear from the context the phrase X employs A or B is intended to mean any of the natural inclusive permutations. That is the phrase X employs A or B is satisfied by any of the following instances X employs A X employs B or X employs both A and B. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from the context to be directed to a singular form.

Furthermore the term set as employed herein excludes the empty set e.g. the set with no elements therein. Thus a set in the subject disclosure includes one or more elements or entities. As an illustration a set of controllers includes one or more controllers a set of data resources includes one or more data resources etc. Likewise the term group as utilized herein refers to a collection of one or more entities e.g. a group of nodes refers to one or more nodes.

Various aspects or features will be presented in terms of systems that may include a number of devices components modules and the like. It is to be understood and appreciated that the various systems may include additional devices components modules etc. and or may not include all of the devices components modules etc. discussed in connection with the figures. A combination of these approaches also can be used.

Referring initially to the drawings illustrates a system that facilitates data management in accordance with an innovative aspect. The system provides high availability e.g. quick robust redundant . . . data to a user by utilizing peer to peer technology where the decentralized storage and multi access paths provide a complete dataset without dependence on a specific or pre defined data source or access paths. This includes sourcing data from one or more other users of the data by applying larger file transfer techniques and file sharing. Note that when referring to data it is to be understood that this includes all forms and types of data and associated data formats such as in the form of a file a document a screen a message graphics and multimedia information for example.

By using peer to peer technology to distribute files a number of benefits are realized in a distributed HMI human machine interface system. Files are distributed for storage on many computers eliminating a single point of failure. Additionally client call up times of requested data are reduced as the peer to peer technology retrieves the data from the quickest source. Since the files can be are stored in many different locations data transfer bottlenecks that can occur on a network e.g. LAN WAN WLAN . . . can be eliminated. Moreover large files can be retrieved from multiple sources at the same time eliminating the single source bottleneck.

In one implementation when a client requests a file the system automatically calculates all storage locations of that file and which is a quickest communications path to the source for retrieval the data and or file. Once received the client then stores a copy of the file for substantially instant service of that file to other requesting clients. A version scheme ensures that the only the latest version of file is shared on the network.

Accordingly the system includes a storage component that decentralizes data storage by storing data on a plurality of computing devices. An access component is provided that facilitates peer to peer access to the data via any one or more of the computing devices on which the data is stored. The system can be implemented in the form of a software client that resides on computing systems available on the network.

The system finds particular applicability to HMI systems where workstations are utilized to monitor and control process control systems and assembly line systems for example. Continued reliable operation of these systems is important with regard to product reliability product quality product output and a host of other cost and quality related aspects to name just a few. These systems typically employ large files that are used to monitor and control various parameters and so on. An operator sitting in front of a workstation overseeing a process e.g. microelectronics device fabrication can use many programs and graphical interface screens etc. that are provided to view and monitor process operations. Conventionally these files and or data are stored on server. The subject invention distributes these files and or data process control screens etc. to other computers for storage and access in case this workstation failed or the files and or data became corrupted.

For example monitor and control screens that are used or accessed the most can be distributed more times than screens that are accessed fewer times. The more frequently accessed data and or files can be stored or backed up on more reliable remote access nodes. Other criteria that can be considered include the speed at which data and or file retrieval occurs from a given node and the pathways employed to retrieve the data files.

The system also includes a tracking component that tracks activities of the system . These activities can include both user and system activities. When a data distribution or storage process is to commence or a data retrieval process is initiated the selection component accesses the tracking component to analyze tracking data as to the data and or files that are to be processed for storage and retrieval the nodes that are available and the best destination source node to utilize for example.

Referring now to there is illustrated a methodology of monitoring a system for failure and restoring data in accordance with the disclosed innovation. At the system monitors itself or another system for a failure. The failure can be in the form of a total system failure or a less radical failure such as data and or file corruption. At if no failure is detected flow loops back to the input of to continue monitoring for a failure. If a failure is detected flow is from to to initiate a data restore operation. At a check is made for online or available access nodes. At a check is then made of the most efficient means for retrieving the data from the available nodes. At once the node or nodes are selected data is retrieved from the selected system s and restored to the failed system now back online and operational. At the restored system can then be operated.

Referring now to there is illustrated a methodology of updating data of other systems in accordance with a disclosed aspect. At the system monitors itself or another system for updates. If no updates are detected flow loops back to the input of to continue monitoring for updates. If an update is detected flow is from to to initiates an update process. At the process can include checking which other systems hold data that needs to be updated with the latest version. At once the appropriate systems are selected the updated data is transmitted thereto and the old data overwritten.

It is to be appreciated that not all updates are error free and can cause system faults or problems that are problematic. Thus a latest update may need to be overwritten or downgraded to an earlier version that operates more error free. The update process can then include updating with an earlier and more stable version of data than the latest version.

Referring now to there is illustrated a methodology of restoring data from multiple other systems in accordance with an aspect. At a data restore operation is initiated. At a check is made for available systems. At of the available systems a check is made for the most efficient manner to receive the data from the available systems. Note that where all other systems are unavailable this restoration process can include signaling an offline backup system to power up and then transmit the data therefrom to the system to be restored. At if the most efficient manner is to receive the data from multiple available systems a request for the data can be communicated to several nodes. At once the data is received at the requesting system a merge process can be conducted to merge all portions of the received data into the desired format to provide a complete dataset of the requested data. At the system can then operate using the restored data.

The subject invention e.g. in connection with selection can employ various LR based schemes for carrying out various aspects thereof. For example a process for determining when a file should be updated can be facilitated via an automatic classifier system and process.

A classifier is a function that maps an input attribute vector x x1 x2 x3 x4 xn to a class label class x . The classifier can also output a confidence that the input belongs to a class that is f x confidence class x . Such classification can employ a probabilistic and or statistical based analysis e.g. factoring into the analysis utilities and costs to prognose or infer an action that a user desires to be automatically performed. In the case of data systems for example attributes can be words or phrases or other data specific attributes e.g. data formats derived from the words and the classes are categories or areas of interest e.g. levels of priorities .

A support vector machine SVM is an example of a classifier that can be employed. The SVM operates by finding a hypersurface in the space of possible inputs that splits the triggering input events from the non triggering events in an optimal way. Intuitively this makes the classification correct for testing data that is near but not identical to training data. Other directed and undirected model classification approaches include e.g. na ve Bayes Bayesian networks decision trees neural networks fuzzy logic models and probabilistic classification models providing different patterns of independence can be employed. Classification as used herein also is inclusive of statistical regression that is utilized to develop models of priority.

As will be readily appreciated from the subject specification the subject invention can employ classifiers that are explicitly trained e.g. via a generic training data as well as implicitly trained e.g. via observing user behavior receiving extrinsic information . For example SVM s are configured via a learning or training phase within a classifier constructor and feature selection module. Thus the classifier s can be employed to automatically learn and perform a number of functions including but not limited to assessing the best times at which a data restore and or backup can be conducted and estimating the cost at which a growing file will be best to backup rather than waiting to completion of the file change. The LR component can also track user and system interaction with screens and data and based on this prioritize the data for backup. This can also include backing the data up to systems will provide the fastest restore process. These prioritization criteria can also include system capabilities of all systems. For example it would be preferred to back the most important large file data to a system that has larger processing capacity over a system that has limited processing capability. Similarly it may be the more robust systems are employed for delicate process control operations thus it may not be desirable to backup data to such a system during a process operation but to a lesser loaded machine at such time.

The access point facilitates wireless communications to a wireless device e.g. a tablet PC that can be used to store backup data. The wireless device can also include a client not shown that facilitates data restoration from other access nodes of the network . The network can also interface to a cellular network in order to utilize a cellular device e.g. a cell phone as a backup system. Similarly the cellular device can include a client not shown that facilitates data management in accordance with the subject invention.

It is to be appreciated that this preferential processing can include not only the preferred system but a second preferred system a third preferred system and so on. Thus where a large file is involved only the data retrieval will be conducted according to the preferred systems e.g. only the first second and third systems .

In either case the system can perform calculations and estimations of the cost to wait for a preferred system or systems to respond versus the time and reliable pathways that could have been taken for alternative system s to respond sooner and made decisions that would abort the preferred systems and utilize the lesser systems for the restore operation.

Referring now to there is illustrated a block diagram of a computer operable to execute the disclosed architecture. In order to provide additional context for various aspects thereof and the following discussion are intended to provide a brief general description of a suitable computing environment in which the various aspects of the innovation can be implemented. While the description above is in the general context of computer executable instructions that may run on one or more computers those skilled in the art will recognize that the innovation also can be implemented in combination with other program modules and or as a combination of hardware and software.

Generally program modules include routines programs components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods can be practiced with other computer system configurations including single processor or multiprocessor computer systems minicomputers mainframe computers as well as personal computers hand held computing devices microprocessor based or programmable consumer electronics and the like each of which can be operatively coupled to one or more associated devices.

The illustrated aspects of the innovation may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules can be located in both local and remote memory storage devices.

A computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and non volatile media removable and non removable media. By way of example and not limitation computer readable media can comprise computer storage media and communication media. Computer storage media includes both volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital video disk DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer.

With reference again to the exemplary environment for implementing various aspects includes a computer the computer including a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various commercially available processors. Dual microprocessors and other multi processor architectures may also be employed as the processing unit .

The system bus can be any of several types of bus structure that may further interconnect to a memory bus with or without a memory controller a peripheral bus and a local bus using any of a variety of commercially available bus architectures. The system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS is stored in a non volatile memory such as ROM EPROM EEPROM which BIOS contains the basic routines that help to transfer information between elements within the computer such as during start up. The RAM can also include a high speed RAM such as static RAM for caching data.

The computer further includes an internal hard disk drive HDD e.g. EIDE SATA which internal hard disk drive may also be configured for external use in a suitable chassis not shown a magnetic floppy disk drive FDD e.g. to read from or write to a removable diskette and an optical disk drive e.g. reading a CD ROM disk or to read from or write to other high capacity optical media such as the DVD . The hard disk drive magnetic disk drive and optical disk drive can be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The interface for external drive implementations includes at least one or both of Universal Serial Bus USB and IEEE 1394 interface technologies. Other external drive connection technologies are within contemplation of the subject innovation.

The drives and their associated computer readable media provide nonvolatile storage of data data structures computer executable instructions and so forth. For the computer the drives and media accommodate the storage of any data in a suitable digital format. Although the description of computer readable media above refers to a HDD a removable magnetic diskette and a removable optical media such as a CD or DVD it should be appreciated by those skilled in the art that other types of media which are readable by a computer such as zip drives magnetic cassettes flash memory cards cartridges and the like may also be used in the exemplary operating environment and further that any such media may contain computer executable instructions for performing the methods of the disclosed innovation.

A number of program modules can be stored in the drives and RAM including an operating system one or more application programs other program modules and program data . All or portions of the operating system applications modules and or data can also be cached in the RAM . It is to be appreciated that the innovation can be implemented with various commercially available operating systems or combinations of operating systems.

A user can enter commands and information into the computer through one or more wired wireless input devices e.g. a keyboard and a pointing device such as a mouse . Other input devices not shown may include a microphone an IR remote control a joystick a game pad a stylus pen touch screen or the like. These and other input devices are often connected to the processing unit through an input device interface that is coupled to the system bus but can be connected by other interfaces such as a parallel port an IEEE 1394 serial port a game port a USB port an IR interface etc.

A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor a computer typically includes other peripheral output devices not shown such as speakers printers etc.

The computer may operate in a networked environment using logical connections via wired and or wireless communications to one or more remote computers such as a remote computer s . The remote computer s can be a workstation a server computer a router a personal computer portable computer microprocessor based entertainment appliance a peer device or other common network node and typically includes many or all of the elements described relative to the computer although for purposes of brevity only a memory storage device is illustrated. The logical connections depicted include wired wireless connectivity to a local area network LAN and or larger networks e.g. a wide area network WAN . Such LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise wide computer networks such as intranets all of which may connect to a global communications network e.g. the Internet.

When used in a LAN networking environment the computer is connected to the local network through a wired and or wireless communication network interface or adapter . The adaptor may facilitate wired or wireless communication to the LAN which may also include a wireless access point disposed thereon for communicating with the wireless adaptor .

When used in a WAN networking environment the computer can include a modem or is connected to a communications server on the WAN or has other means for establishing communications over the WAN such as by way of the Internet. The modem which can be internal or external and a wired or wireless device is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computer or portions thereof can be stored in the remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.

The computer is operable to communicate with any wireless devices or entities operatively disposed in wireless communication e.g. a printer scanner desktop and or portable computer portable data assistant communications satellite any piece of equipment or location associated with a wirelessly detectable tag e.g. a kiosk news stand restroom and telephone. This includes at least Wi Fi and Bluetooth wireless technologies. Thus the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices.

Wi Fi or Wireless Fidelity allows connection to the Internet from a couch at home a bed in a hotel room or a conference room at work without wires. Wi Fi is a wireless technology similar to that used in a cell phone that enables such devices e.g. computers to send and receive data indoors and out anywhere within the range of a base station. Wi Fi networks use radio technologies called IEEE 802.11 a b g etc. to provide secure reliable fast wireless connectivity. A Wi Fi network can be used to connect computers to each other to the Internet and to wired networks which use IEEE 802.3 or Ethernet . Wi Fi networks operate in the unlicensed 2.4 and 5 GHz radio bands at an 11 Mbps 802.11a or 54 Mbps 802.11b data rate for example or with products that contain both bands dual band so the networks can provide real world performance similar to the basic 10BaseT wired Ethernet networks used in many offices.

Referring now to there is illustrated a schematic block diagram of an exemplary computing environment in accordance with another aspect. The system includes one or more client s . The client s can be hardware and or software e.g. threads processes computing devices . The client s can house cookie s and or associated contextual information by employing the subject innovation for example.

The system also includes one or more server s . The server s can also be hardware and or software e.g. threads processes computing devices . The servers can house threads to perform transformations by employing the invention for example. One possible communication between a client and a server can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and or associated contextual information for example. The system includes a communication framework e.g. a global communication network such as the Internet that can be employed to facilitate communications between the client s and the server s .

Communications can be facilitated via a wired including optical fiber and or wireless technology. The client s are operatively connected to one or more client data store s that can be employed to store information local to the client s e.g. cookie s and or associated contextual information . Similarly the server s are operatively connected to one or more server data store s that can be employed to store information local to the servers .

Control system integrates administration environment visualization environment and control environment. In an aspect integration is accomplished through access network s and specific interfaces that functionally connect each of the foregoing environments to such access network s . In one or more scenarios access network s can embody network . Access network s can be geographically distributed and can include a plurality of wireline networks and wireless networks that operate in accordance with various bandwidths and disparate protocols for example packet based protocols such as internet protocol IP X.25 Asynchronous Transfer Mode ATM protocol frame based protocols such as frame relay and circuit switched protocols include service network s and control network s . Service network s comprise network s for communication of data that includes management data graphic data or control data whereas control network s primarily administer control data and data transactions related to a control environment. Distinction amongst service network s and control network s can enable improved integration of various functional elements within the control environment For example different parts of the control environment can be linked through custom or legacy control network s while exchange of information amongst the control environment and other network elements such as server can be implemented through non proprietary service network s e.g. an Ethernet network . It should be appreciated that in one or more embodiments the service network s and the control network s are both embodied in the same physical network. Interface s interface s and interface s functionally couple access network s to server in administration environment HMI in a visualization environment controller in a control environment respectively. In addition administration environment visualization environment and control environment are communicatively coupled via access network s through interface s to external network s which operate as service network s . The various interface s herein include one or more servers that provide a plurality of services including security services firewall deployment data encapsulation authorization and access services etc. . In one or more scenarios external network s include enterprise network s such as business management network s or vendor network s . External network s enable communication of functional elements e.g. HMI in administration environment visualization environment and control environment with device s mobile or otherwise device s functionally connected to external network s via wired or wireless link s .

Server can configure at least one controller e.g. to regulate related control process s . In an aspect server can generate and supply control project s to controller to configure control features. In addition server can configure one or more terminals such as HMI to render control data in accordance with various control processes and related controller s . In view of the network integration afforded by control system a remote device within device s also can configure controller through server . Server can retain data resource s associated with configured control process es and controller s . In one or more scenarios server can be embodied at least in part in computer environment .

Controller also includes processor s not shown volatile and non volatile memory not shown and other circuitry not shown that enables implementation of control process es e.g. execution of control logic or control code instructions related to a specific control environment not shown in . In one or more embodiments of the subject disclosure controller can be an industrial controller or an automation controller. Generally industrial or automation controllers are purpose specific processing devices employed to regulate automated or semi automated entities such as industrial processes machines manufacturing equipment plants or the like. A typical industrial controller or automation controller executes through a processor for example control logic to measure one or more variables and or inputs representative of a status of a controlled entity and or effectuate outputs associated with control of the entity. Such inputs and outputs can be digital and or analog. Inputs and outputs are not shown in for the sake of simplicity.

HMI can render control data associated with various control processes regulated through controller . To at least that end HMI includes a display component that can render one or more user interfaces through visual or aural indicia. The one or more user interfaces can be associated with one or more sets of control screens and rendered in accordance with at least one of graphical objects or gesture objects that compose the control screen s in the sets of control screens. Various schemes can be employed to render the one or more user interface s or other content s such as window based schemes e.g. iconic representation pop up representation of indicia or text based representation with scroll down or scroll sideways delivery or static rendering. In addition the one or more user interface s or other content s can be organized in various configurations within a rendering area e.g. display screen that can be a part of display component . In an aspect display component can be embodied at least in part in a display element within a monitor such as a cathode ray tube CRT monitor a Liquid Crystal Display LCD monitor a plasma monitor a light emitting diode LED monitor an electrochromic monitor or the like. Display component also can enable data entry from an end user display component can receive data input through various user interface interaction modalities such as speech gestures motion gestures touch gestures and conduits for example keyboards keypads touch screens microphones cameras or the like.

In addition HMI includes a client component also referred to herein and in annexed drawings as client that can receive and convey data and signaling in accordance with various aspects described herein. In contrast to and as advantage with respect of conventional operation of HMIs in typical control environment HMI can access and be accessed by one or more device s which can include enterprise devices.

HMI also includes processor s and memory . Processor s can be configured to execute or can execute code instructions not shown stored in memory to implement or provide at least part of the described functionality of HMI . Such code instructions can include program modules or software or firmware applications that implement specific tasks which can be accomplished through one or more of the methods described in the subject specification and that are associated at least in part with functionality or operation of control system . Moreover in some embodiments client can be implemented as software or firmware that can reside in memory as one or more sets of code instructions that when executed by processor s implement client and functionality thereof as described herein in various aspects. In an aspect to provide such functionality processor s can exploit bus to exchange data or any other information amongst functional elements e.g. client within HMI and memory or elements therein. Bus can be embodied in at least one of a memory bus a system bus an address bus a message bus or any other conduit protocol or mechanism for data or information exchange among components that execute a process or are part of execution of a process. The exchanged information can include at least one of code instructions code structure s data structures or the like.

Memory also can retain data resource s retrieved or received at least from controller or other controller s not shown . In the illustrated embodiment the data resource s can be retained in resource store s . In addition to or as part of stored data resources memory also can retain state information within state information info. store s . In an aspect memory can include various graphic data objects or gesture data objects e.g. data objects that can enable interaction with HMI through one or more gestures such as motion speech or touch . At least one of the graphic data objects or gesture data objects can be part of one or more control screens associated with control process es regulated through controller or other controllers not shown . In one or more embodiments such graphic data objects or gesture data objects or control screens can be stored within resource store s .

As described below through peer to peer exchange HMI also can render control data originated in disparate controller s not shown in . Interface s e.g. network adaptor s port s reference link s . . . enable communication with controller via access network s and interface s likewise interface s enables in part communication with other controller s not shown .

In one or more scenarios HMI can be embodied at least in part in computer environment . It should be appreciated that while various aspects or features of the subject disclosure are described in connection with various HMIs e.g. HMI HMIs and respective clients therein e.g. client clients such aspects or features described herein also can be implemented or accomplished in control systems in which a terminal e.g. a workstation a desktop computer a mobile computer a smartphone that can render control data embodies a HMI. When networked as described herein a server a HMI a controller e.g. industrial controller automation controller a terminal a device an access point or the like are referred herein to as a node or access node. The various memories available in control system can be embody at least in part data store s .

Association amongst servers and HMIs can be a one one to many relationship or a one to one relationship. Servers HMIs and controllers can be distributed in disparate geographic locations. Accordingly disparate functional elements of access network s enable communication and related exchange of data or information amongst two or more of servers located in disparate geographic regions. In addition such functional elements of access network s can enable communication and related exchange of data or information amongst two or more clients that reside in disparate geographical locations.

In an aspect of the subject disclosure for communication purposes and related exchange of data each layer operates as a single logical unit. Thus communication amongst disparate layers is carried out in the same or substantially the same manner irrespective of geographical location of the functional elements e.g. HMI 2 and controller P that exchange data. In addition a client e.g. in a local HMI e.g. can access data available in the local HMI in the same or substantially the same manner as data available in a remote HMI e.g. . Similarly data available in one or more servers in service layer appears logically the same to local HMI s and remote HMI s within visualization layer .

Deployment of servers within service layer enables peer to peer exchange of data resource s also referred herein as resource s amongst two or more of the servers. Such peer to peer server exchange of resource s can afford the resource s e.g. state information to be available to any or substantially any HMI or terminal within visualization layer Peer to peer server exchange of information allows the information to be available to any or substantially any client. In contrast to conventional backup systems e.g. server backup pairs or other redundancy schemes preservation of resource s is dynamic as opposed to be dictated by a static backup configuration scheme. In an aspect dynamic preservation or dynamic replication of information can be driven or triggered by 1 events such as updates to replicated resource s e.g. changes to state information alarm conditions 2 ad hoc redistribution of the information in a cluster of servers within the service layer or 3 addition of a server to the service layer. As discussed supra peer to peer exchange of resource s can render control system fault tolerant or resilient with respect to unavailability of resource s due to failure of one or more functional elements of system . In particular though not exclusively exchanged information can be embodied in state information for a specific controller e.g. controller or related control environment thus substantially all or all clients e.g. clients can access the state information. In a scenario pervasive or redundant state information availability can enable a HMI or terminal associated with a client to maintain visualization of a control process in case a disparate HMI directly associated e.g. locally deployed with a controller that effects the control process fails or otherwise becomes unavailable.

With respect to 1 as discussed supra in connection with related if a data resource is updated e.g. modified or deleted in a server e.g. server within service layer the update can be replicated in a group of one or more servers within service layer for example the group encompasses all servers and thus at least one of clients access the same data resource. In one or more embodiments of a server within service layer e.g. server in example embodiment presented in collection component can receive a replica of updated resource s from a first disparate server and retain the replica in memory within resource store s whereas distribution component can deliver updated resource s to a second disparate server. The first disparate server can be same as the second disparate server. The updated resource s or replica thereof can be embodied in state information such as an alarm condition or one or more memory tags specific to control project s in one or more controllers e.g. memory tag s can be retained in memory element s . In a scenario server through distribution component for example can partition state information in a plurality of portions and deliver the plurality of portions to respective servers with service layer . Collection components in each of the respective servers can receive a portion of the state information and thus the state information can be retained in multiple servers one of the respective collection components can integrate and thus recover the partitioned state information.

In connection with 2 a group of one or more servers that receive updated data resource s need not be configured as a destination server s of a replica. In addition replication of data resource s can be accomplished without reliance on a master server A server can receive an updated data resource and relay it based in part on one or more replication criteria e.g. a safety criterion not shown in order to increase availability of the updated data resource and resilience or robustness of service layer with respect to data corruption of data failure.

In reference to item 3 addition of a server to service layer can result in deployment of data resource s to the added server. This feature of the subject disclosure can improve scalability of service layer . In one or more embodiments e.g. embodiment distribution component can deliver one or more data resources to the added to server in response to such addition. Configuration component in the added server can broadcast an indication to at least one server in service layer that the added server is available to receive data resource s the indication can include a logical address e.g. internet protocol IP address of the added server for identification thereof. In the subject disclosure indication s request s or the like can be delivered in accordance with various transport protocols and associated formats for communication of data. The data resource s can be distributed. In addition the supplied data resource s can be retained in resource store s state information can be retained in a dedicated memory element to improve delivery performance of state information particularly although not exclusively in control environments in which state information is highly dynamic.

In server processor s can be configured to execute or can execute code instructions not shown stored in memory to implement or provide at least part of the described functionality of server which is an example embodiment of any server disclosed herein. Such code instructions can include program modules or software or firmware applications that implement specific tasks which can be accomplished through one or more of the methods described in the subject specification and that are associated at least in part with functionality or operation of control system and server s therein. Moreover in some embodiments the various components of server can be implemented as software or firmware applications that can reside in memory as one or more sets of code instructions that when executed by processor s implement such various components and the functionality thereof as described herein in various aspects. I O interfaces can enable exchange of information e.g. data resources and can be part of interface s .

In an aspect to provide at least part of functionality of server processor s can exploit bus to exchange data or any other information amongst functional elements e.g. components within server and memory or elements therein. Bus can be embodied in at least one of a memory bus a system bus an address bus a message bus or any other conduit protocol or mechanism for data or information exchange among components that execute a process or are part of execution of a process. The exchanged information can include at least one of code instructions code structure s data structures or the like.

With respect to HMIs or terminals that render control data two or more clients in visualization layer also can exchange data resource s e.g. graphical objects state information alarm conditions . . . in peer to peer mode. Thus data resource s available to or deployed in a specific HMI or terminal that renders control data can be replicated in one or more clients within visualization layer . Such peer to peer exchange or distribution is based on client client interaction as opposed to a server client interaction as it generally occurs in some conventional web based systems for access to remote data. In an aspect data resource s can be distributed amongst a plurality of HMIs or terminals in response to or triggered by addition of a HMI or a terminal within visualization layer . A client that resides within a HMI or terminal within visualization layer can deliver or receive an indication e.g. an instruction a data packet a light payload file e.g. a cookie an email communication an instant message a set of bits . . . a HMI or terminal has been added to the visualization layer . In response to reception of the indication the client in the HMI or the terminal can deliver one or more data resources to the added HMI or terminal identified in the indication. In one or more embodiments the indication that a HMI or terminal has been added to visualization layer can be generated and delivered e.g. broadcasted at least in part via a client that resides within the added HMI or terminal the indication can be delivered to at least one HMI or terminal within visualization layer the indication can include a logical address e.g. internet protocol IP address of the added HMI or terminal for identification thereof to its peers. In another aspect data resource s can be distributed amongst a set of HMIs or terminals within visualization layer in response to an update of one or more data resources available to a HMI or terminal as an example update of a control screen in HMI can trigger distribution of the updated control screen or graphic object s therein.

As indicate supra an exchanged data resource can include a control screen or one or more graphical objects that compose a control screen. In an aspect exchange of the control screen or graphical object s thereof also can include exchange of information such as metadata that identifies control data that is bound to the control screen or the graphical object s thereof. As an example if a client e.g. distributes to its peers e.g. and a graphical object that allows rendering of temperature in a control environment distribution of such graphical object also can include metadata that conveys a temperature value is bound to the graphical object. A client within a HMI or terminal the renders control data can retrieve or receive metadata that describes or otherwise characterizes control data from a controller e.g. or memory tag s or control project s therein.

Peer to peer distribution of control screen s allows a HMI or terminal within visualization layer to render control data generated by a controller associated with a disparate HMI or terminal that renders control data therefore increasing resilience of control system against functional failure. In addition peer to peer distribution of control screen s and other data resource s such as state information dramatically simplifies deployment and integration capabilities of a control environment. Furthermore peer to peer distribution of control screen s or data resource s can be regulated optimized or satisfactorily implemented based in part on at least one of dynamics of resource updated e.g. time dependence of state information alarm conditions criticality of controlled devices machines products and associated processes available network resource s control environment s network integration specification s e.g. control data is to be supplied to enterprise network devices or the like. As an illustration one or more clients in respective one or more HMIs within visualization layer can supply e.g. generate deliver or generate and deliver metadata that controls implementation of peer to peer exchange of data resource s e.g. the metadata can establish if peer to peer exchange amongst a cluster of nodes e.g. HMIs or terminals that render control data is to be terminated in view of rate of change of state information associated with control environment s linked to the cluster of nodes or the metadata can identify resources that are allowed to delivered and received through peer to peer exchange. A component not shown within a HMI or terminal that includes a client can issue the foregoing metadata wherein to issue metadata the component not shown can generate the metadata and add the metadata to a data resource. Further yet peer to peer distribution of control screens also enables automatic configuration of a visualization environment in an HMI or terminal employed to render control data within visualization layer . In an aspect automatic configuration of visualization environment s can be effected in response to an HMI or terminal being deployed e.g. configured to operate within visualization layer . In another aspect changes to configuration of a control screen in an HMI or terminal within visualization layer can result in automatic configuration of graphical environment s in at least one of disparate HMIs or terminals within visualization layer . As described supra in scenarios in which configuration of a control screen is updated a client e.g. within visualization layer can supply a specific data resource e.g. a data field a data structure a graphic object . . . associated with the update instead of supplying a complete updated control screen. The client can deliver e.g. broadcast or multi cast an indication an instruction a data packet a light payload file e.g. a cookie an email communication an instant message etc. that the control screen or a data resource thereof is updated and available for distribution a disparate client e.g. in a disparate peer HMI e.g. can receive the indication acknowledge it and receive at least one of the updated control screen or the updated data resource thereof. As an example a specific data field associated with a control screen update can be supplied to a peer client to update the control screen instead of delivering the full updated screen. Such update granularity avoids inefficient exchange of substantive volume of data in updated that entail a small volume of change also the updated granularity afforded by features of peer to peer exchange as described herein can reduce utilization of network resources e.g. channels in broadband network in access network s and thus improve overall performance of peer to peer exchange e.g. resource availability resource accessibility and resource replication capability within visualization layer . Moreover it should be appreciated that such update granularity is superior to conventional systems to update software components such systems commonly deliver complete files regardless the magnitude of specific updates introduced in the software component.

Peer to peer exchange of data resource s also can include exchange of analyzed e.g. aggregated or otherwise processed e.g. formatted control data. A client e.g. in a HMI e.g. that enable the analysis or processing of the control data can communicate e.g. broadcast or multi cast an indication that analyzed or processed control data is available for distribution a disparate client e.g. in a disparate peer HMI e.g. can receive the indication acknowledge it and receive at least a portion of the analyzed control data available for distribution. In an illustrative scenario if a data trend analysis is performed through tool s afforded through a HMI or terminal and rendered via the HMI or terminal such analysis and associated data can be distributed to at least one peer HMI. Such distribution of analyzed data does not originate in response to a network request e.g. a peer HMI request analyzed data and thus it provides increased network performance and control performance. For example in the foregoing scenario one or more operators that utilize the HMIs deployed in visualization layer are aware of operational trend s in a control environment.

Peer to peer exchange of data resource s as described herein is not domain specific Data resource s available to a client e.g. associated with a controller in a first control environment e.g. production area in manufacturing plant can be distributed to a disparate client e.g. associated with a disparate controller in a second control environment e.g. packaging area in manufacturing plant . Such distribution of data resource s increases robustness of control system against operational failure. It should be appreciated that based on granularity of data resource s distinct control environments can have common data resource s that can be exchanged in peer to peer manner. Accordingly such resources e.g. a graphical object employed in a control screen can be reused across the distinct control environment. Such reuse of data resource s can be implemented automatically or through human intervention. In one or more embodiments an HMI or terminal that renders control data can multi cast or broadcast e.g. via a client component such as a request for a specific data resource e.g. a graphical object or memory tag and in response receive at least one of i an indication the specific data resource is available in one or more disparate clients or ii the specific data resource.

While each layer in example control system operates as a single logical unit for data exchange purposes each layer can include one or more elements associated with disparate control environments and thus disparate portions of a single logical unit can operate under disparate requirement s or specification s . Accordingly in an aspect of the subject disclosure peer to peer distribution or exchange of a data resource e.g. a control screen or alarm condition within a service layer or visualization layer can be based in part on a set of performance criteria. In an aspect of the subject disclosure the set of performance criteria includes latency of access network s that enable exchange of the resource. Other performance criteria also can be employed such as access network s bandwidth or criticality of a controlled process as described supra. Performance criteria can be retained in at least one server within service layer at least one HMI or terminal that renders control data in visualization layer or one or more computing devices such as devices . As an illustration in one or more scenarios high latency network connectivity amongst two HMIs e.g. HMI 1 and HMI Q can prevent exchange of one or more resources in order to ensure control application s that generate control data rendered in at least one of the two HMIs are not prevented from proper execution For instance substantive communication intervals amongst the two HMIs can trigger an alarm and ensuing termination of control cycle in at least one of one or more controllers associated with at least one of the two HMIs. It should be appreciated that if access network latency is employed as a performance criteria that regulates peer to peer exchange of a resource a performance metric associated with such performance criteria and that is relevant to resource exchange regulation is the ratio amongst network latency and time scale of control process. Thus at various stages of a control process an HMI e.g. can fluctuate between exchange allowed and exchange disallowed conditions based on value of the foregoing ratio.

In one or more embodiments of a server in service layer e.g. embodiment illustrated in a server can include an assessment component that can generate list s that identifies a set of one or more clients that can exchange or distribute a resource within a predetermined response time. Assessment component also can produce list s of one or more servers that can exchange a resource within a specific response time interval. The resource for example can be a control screen and one or more graphical objects that compose the control screen. The list s can be retained in memory element within memory . In the alternative or in addition the list s or portion s thereof can be supplied to one or more HMIs or terminals that render control data within visualization layer respective client s in the one or more HMIs can receive the list s and at least one of the one or more HMIs can retain the list s . In an aspect list s or portion thereof can be provided to one or more HMIs in response to a request from at least one of the one or more HMIs. The at least one HMI that originates e.g. generates and delivers the request can exploit the requested list s or portion thereof to select at least one client for distribution of a data resource a client within the at least one HMI can generate and deliver the request e.g. an instruction a data packet a light payload file e.g. a cookie an email communication an instant message a set of bits . . . and receive the requested list s or portion thereof. In one or more embodiments to achieve its functionality assessment component can include one or more of learning and reasoning component selection component and tracking component .

In a scenario list s can be generated by a plurality of two or more servers in the set of servers . In such scenario respective assessment components in the plurality of two or more servers produce the list s in parallel mode. To generate the foregoing list s of clients for exchange or distribution of a resource e.g. a control screen a graphical object . . . assessment component can select one or more clients in a visualization layer e.g. and access e.g. retrieve receive a metric that gauges demand of the resource in at least one of the one or more clients in a scenario the metric can determine demand of the resource in each of the one or more clients. Such metric can prioritize a group of clients within the one or more clients with respect to demand of the resource. Prioritization can improve performance of the extraction of a group of clients that can exchange the resource within a predetermined response time by removing from the selected one or more clients those clients with a low demand e.g. below a configurable threshold for the resource. It should be appreciated that generation of list s of servers for exchange or distribution of a resource can be accomplished in substantially the same or the same manner as implemented for clients. In an aspect the predetermined response time can be a satisfactory time interval extracted from an objective function that determines response time in a set of clients within visualization layer. The satisfactory time interval can be below a configurable threshold however in one or more scenarios the satisfactory time interval can be an optimal or substantially optimal time period. In one or more embodiments a server e.g. can enable configuration of a satisfactory response time or threshold thereof for exchange or distribution of a data resource.

It should be appreciated that since downlink latency and uplink latency in a network can be asymmetric assessment component can produce a first list for a first set of clients that can supply the resource and a second list for a second set of clients that can receive the resource. In addition list of clients that can supply information e.g. data resource s can be disparate from a list of clients that can receive information because clients that can supply information have the information available whereas clients that receive the information need not have it available. It should further be appreciated that based on complexity computing power available computing time monitored control environment etc. of a HMI or terminal in visualization layer the HMI or terminal can include an assessment component that operates in substantially the same manner as assessment component and select clients or servers suitable for exchange or distribution of at least one or more data resources. Selection of clients or servers can be conveyed through list s which can be retained in memory of at least one HMI or terminal or at least one server.

Method s disclosed throughout the subject specification and annexed drawings are capable of being stored on an article of manufacture to facilitate transporting and transferring such method s to computers or chipsets with processing capability ies for execution and thus implementation by a processor or for storage in a memory. In an aspect one or more processors that enact method s described herein can be employed to execute code instructions retained in a memory or any computer or machine readable medium to implement method s described herein the code instructions when executed by the one or more processor implement or carry out the various acts in the method s described herein. The code instructions provide a computer executable or machine executable framework to enact the method s described herein.

In the subject specification and annexed drawings terms such as store data store data storage and substantially any term s that convey other information storage component s relevant to operation and functionality of a functional element or component described herein refer to memory components or entities embodied in a memory or components comprising the memory. The memory components described herein can be either volatile memory or nonvolatile memory or can include both volatile and nonvolatile memory.

By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory can include random access memory RAM which acts as external cache memory. By way of further illustration and not limitation RAM can be available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM . Additionally the disclosed memory components of systems or methods herein are intended to comprise without being limited to comprising these and any other suitable types of memory.

The various illustrative logics logical blocks modules and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. Additionally at least one processor may comprise one or more modules operable to perform one or more of the steps and or actions described above.

Further the steps and or actions of a method or algorithm described in connection with the aspects disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers a hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium may be coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. Further in some aspects the processor and the storage medium may reside in an ASIC. Additionally the ASIC may reside in a user terminal. In the alternative the processor and the storage medium may reside as discrete components in a user terminal. Additionally in some aspects the steps and or actions of a method or algorithm may reside as one or any combination or set of codes and or instructions on a machine readable medium and or computer readable medium which may be incorporated into a computer program product.

In one or more aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored or transmitted as one or more instructions or code on a computer readable medium. Computer readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage medium may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also any connection may be termed a computer readable medium. For example if software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs usually reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer readable media.

What has been described above includes examples of the disclosed innovation. It is of course not possible to describe every conceivable combination of components and or methodologies but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly the innovation is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

