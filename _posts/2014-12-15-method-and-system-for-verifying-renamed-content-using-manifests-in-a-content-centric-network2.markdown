---

title: Method and system for verifying renamed content using manifests in a content centric network
abstract: One embodiment provides a system that facilitates redistribution of content objects with a different name without requiring re-computation of the original authentication information. During operation, the system determines, by a content producing device, an original manifest which indicates at least an original name associated with a content object, wherein the name is a hierarchically structured variable length identifier (HSVLI) which comprises contiguous name components ordered from a most general level to a most specific level. The system renames the content object with a new name. The system also creates a new manifest which indicates the new name, wherein the new manifest includes original authentication information associated with the original manifest.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09536059&OS=09536059&RS=09536059
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09536059
owner_city: Palo Alto
owner_country: US
publication_date: 20141215
---
The subject matter of this application is related to the subject matter in the following applications 

This disclosure is generally related to distribution of digital content. More specifically this disclosure is related to verifying the original producer of content in a content centric network CCN by using manifests that rename objects and include authentication information for the original producer.

The proliferation of the Internet and e commerce continues to create a vast amount of digital content. Content centric network CCN architectures have been designed to facilitate accessing and processing such digital content. A CCN includes entities or nodes such as network clients forwarders e.g. routers and content producers which communicate with each other by sending Interest packets for various content items and receiving content object packets in return. CCN interests and content objects are identified by their unique names which are typically hierarchically structured variable length identifiers HSVLI . An HSVLI can include contiguous name components ordered from a most general level to a most specific level.

In addition to the identifying name and a payload CCN content objects can include a signature for the content producer. The signature binds the name payload and identity of the signer e.g. the producer . The name is used to match route and forward the content. In order to move or redistribute the content to serve the content from a location that is not reachable by the same name e.g. from a web cache location other than the one corresponding to the name a system can either update the routing information or rename the content. However updating the routing information can result in computational overhead due to modifying the routing tables e.g. Forwarding Information Bases at intermediate routers within a CCN. Furthermore renaming the content breaks the binding security association between the unique name of the content and the authentication information of the producer e.g. the signature and the identity leaving a receiving CCN entity with no way to authenticate the original producer of the content.

One embodiment provides a system that facilitates redistribution of content objects with a different name without requiring re computation of the original authentication information. During operation the system determines by a content producing device an original manifest which indicates at least an original name associated with a content object wherein the name is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level. The system renames the content object with a new name. The system also creates a new manifest which indicates the new name wherein the new manifest includes original authentication information associated with the original manifest.

In some embodiments the original authentication information indicates one or more of an identity of a producer of the original manifest and a digital signature of the producer of the original manifest.

In some embodiments the original authentication information is one or more of information embedded in the new manifest information derived from the original manifest and a linked object that is derived from the original manifest wherein the linked object is an object which is distinct from the original manifest.

In some embodiments renaming the content object involves one or more of adding a prefix to the original name replacing a part of the original name with a part of the new name and any function that creates a one to one mapping of the new name to the original name.

In some embodiments the original authentication information indicates a self certifying name based on the original name wherein the self certifying name uniquely identifies the content object.

In some embodiments the new manifest indicates a self certifying name based on the new name wherein the self certifying name uniquely identifies the content object.

In some embodiments the system receives by a content consuming device a new manifest which indicates at least a new name associated with a content object wherein the name is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level and wherein the new manifest includes original authentication information associated with an original manifest which indicates an original name associated with the content object. The system retrieves the content object based on the new name. The system also verifies the retrieved content object by replacing the new name with the original name and authenticating the content object with the original name using the original authentication information thereby facilitating redistribution of content objects with a different name without requiring re computation of the original authentication information.

In some embodiments the system retrieves the original manifest wherein the original authentication information indicates a self certifying name based on the original name and wherein the self certifying name uniquely identifies the content object.

In some embodiments the system verifies the original manifest by authenticating a digital signature of a producer of the original manifest based on a public key of the producer.

In some embodiments verifying the obtained content object further comprises calculating a self certifying name for the content object based on the original name comparing the calculated self certifying name with the self certifying name indicated in the original authentication information and responsive to determining that the calculated self certifying name matches the self certifying name indicated in the original authentication information authenticating the obtained content object.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a system that facilitates redistribution of content objects with a different name without requiring re computation of the original authentication information. This redistribution is achieved through the use of manifests and self certifying content objects. A manifest is a content object that describes a collection of content objects and can include a name a signature and the identity of the signer e.g. the content producer . A signed manifest can provide trust to a requesting application for the content objects described by the manifest. Signing and verifying aggregates of content objects through the use of a secure content catalog e.g. a manifest is described in U.S. patent application Ser. No. 14 231 515. A manifest can include a self certifying name for each content object described in its collection. Upon receiving and verifying the manifest a requesting application can trust the individual content objects by simply verifying the self certifying name. A self certifying name is a name that uniquely identifies the content and can include a cryptographic hash of the content a key name combination and a digest that is a last name component of the name. Because trust in the manifest has been established the requesting application can verify a content object described in the manifest by verifying the self certifying name e.g. by calculating the hash value of the received content object and comparing it to the self certifying name included in the manifest. Because content objects are verified and authenticated through the manifest based on their self certifying names e.g. the content object hash the content objects do not require a signature though the manifest can contain a signature in some embodiments.

When a content re publisher e.g. a content caching service such as Akamai wishes to re publish content that has been previously published by the original content producer e.g. a producer such as Netflix the re publisher can assign a new name to the content and at the same time preserve the security binding of the original content producer. For example an original content producer publishes content and creates an original manifest that describes the content objects by original names. The original manifest can include a digital signature for all the content names and each content name can include a hash for the corresponding content object. A content cache service wishes to re publish the same content under a new name so the content cache service encapsulates the original manifest under a new name. In addition the content cache service renames each content object of the original manifest with a new name. As a result each renamed content object has a new name the same payload and a different content object hash as the original content object hash. The content cache service also creates a new manifest that describes the content objects by their new names.

A user e.g. a content consumer who wishes to view the content can retrieve the content from the content cache service by first retrieving the new manifest and then retrieving the content objects described in the new manifest by the new name . As discussed above the content consumer can verify the content objects described in the new manifest by calculating the self certifying name e.g. by calculating a hash for the content object and comparing it to the self certifying name included in the manifest e.g. the hash value included in the original name as indicated in the original manifest . In order to verify the original producer the content consumer retrieves the encapsulated original manifest verifies the original manifest by authenticating the digital signature of the original producer and subsequently verifies each of the content objects described in the new manifest based on the hash included in each name. To verify each of the content objects described in the new manifest the consumer renames each of the content objects by replacing the new name as described in the new manifest with the original name as described in the original manifest . The consumer then authenticates the content object with the original name by calculating a hash for the content object and comparing that hash to the hash included in the original name indicated in the original manifest. Thus the system redistributes the content objects under a new name without the computational overhead required to re compute the original authentication information.

In addition to providing direct trust based on a digital signature by the producer a manifest can provide indirect trust when the original link to the manifest is a self certifying name e.g. a hash based name . A manifest can link to other manifests thus creating a hierarchical structure of manifests through which trust can be chained and established. In some embodiments the original producer manifest e.g. the original manifest produced by the original content producer is linked from the new publisher manifest e.g. the new manifest published by the content cache service . The original manifest can be embedded in the new manifest. In some embodiments the manifest contains a hash of the payload rather than a hash of the content object. In this case the name is not a part of the data being hashed so the name does not need to be re written.

The original producer can sign a link with a hash based name to a manifest rather than sign the entire manifest itself. Thus the new publisher manifest can include the link and the signature. Similarly the content objects described in a manifest may or may not include signature information. If the signature information is included in the content objects with the original names the signature information will not be valid under the new name. Note that the hash will still be valid as the content of the payload itself does not change. If the signature information is not included in the content objects with the original names the re publisher can include signature information on the content objects with the new names. The re publisher indicates accordingly to the content consumer that in order for the content consumer to verify the original producer based on the self certifying names in the original producer manifest the included publisher signature information is to be stripped. In addition if the re publisher signs the content objects under the new names the re publisher can include in the new manifest keyId based links to the content objects rather than the self certifying name links. For example the new manifest can include links to the content objects and the re publisher can include a private keyID for the links to the content objects that the content consumer can use to authenticate the content objects.

In examples described in this disclosure each piece of content is individually named and each piece of data is bound to a unique name that distinguishes the data from any other piece of data such as other versions of the same data or data from other sources. This unique name allows a network device to request the data by disseminating a request or an Interest that indicates the unique name and can obtain the data independent from the data s storage location network location application and means of transportation. The following terms are used to describe the CCN architecture 

A single piece of named data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name.

A name in a CCN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ccn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ccn test.txt. Thus the name parc home ccn can be a parent or prefix of parc home ccn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an information centric network which CCN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

The methods disclosed herein are not limited to CCN networks and are applicable to other architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175.

During operation content producer produces original content and creates original manifest to describe the original content. Original manifest contains a manifest name and a list of content objects by an original name . .. Original manifest can also contain an original hash value . .associated with each content object. In some embodiments the hash value . .can be part of a self certifying name which when hashed is a name which uniquely identifies the content object. In addition original manifest can contain an identity of a producer and a producer signature .

In order to republish the original content under a different name and at the same time maintain the security binding of the original content to content producer content publisher renames the content objects with new names and creates a new manifest which contains a manifest name and a list of content objects by a new name . .. New manifest can also contain new hash values . .associated with each content object. Similar to original hash values . .of original manifest new hash values . .can be part of a self certifying name which when hashed is a name which uniquely identifies the content object. The content objects with new names . .have different names than the original names . . result in new hash values . .that are different from original hash values . . but each contain the same data or payload as the corresponding content objects with original names . .. Additionally new manifest can contain an identity of a publisher a publisher signature and original authentication information which indicates information relating to original manifest .

Subsequently the content consumer verifies the original manifest based on the original authentication information which includes the identity and signature of the original producer operation . For example the content consumer can use a known signature verification function and a public key of the identified original producer to authenticate the original manifest. In some embodiments the content consumer does not require verification of the original producer and therefore does not perform the step described by operation .

The content consumer then verifies the retrieved content objects which are each associated with a new name. First the content consumer replaces the new name of each content object with the original name as indicated in the original manifest operation . In some embodiments the system replaces the new name based on a one to one mapping function such as replacing a part of the new name with a part of the original name or removing a part of the new name to obtain the original name. For example when creating the new name the content publisher can add a prefix to the old name such that when the consumer checks for trust e.g. verifies the original producer the original manifest and each content object described in the new manifest the consumer needs only remove the prefix in order to convert the content object name back to the original name. Second the content consumer calculates the self certifying name for the content objects associated with names that have been converted back to the original name operation . In some embodiments the system performs a hash function on the content object associated with the original name. Finally the content consumer compares the calculated self certifying name with the self certifying name indicated in the original authentication information as described in the original manifest operation . In some embodiments the system compares the calculated hash value from operation of the content object associated with the original name and compares that to the hash value of the originally named content object as described in the original manifest. If there is a match decision the method returns indicating that the retrieved content objects have been properly authenticated. If there is not a match the system will discard or ignore the content objects operation .

Similarly new manifest can contain a manifest name a new content base name content link items an identity of the publisher and a publisher signature . Content link items can include a final segment . .and a new hash value . .. New manifest can also include original authentication information which can include a new encapsulated original manifest name and an original manifest hash value . Exemplary original manifest depicts a manifest that includes a manifest name of akamai frozen manifest an original content base name of akamai frozen content content link items numbered 1 n where the name of the final segment of the content object numbered 1 is c 1 with a corresponding hash value of hash CO an identity of the publisher with a value of Akamai and a publisher signature with a value of Akamai Sig. Exemplary original manifest can also include original authentication information which includes a new encapsulated original manifest name of akamai frozen original manifest and an original manifest hash value of hash CO . 

In the original authentication information is depicted as including the new encapsulated original manifest name and the hash of the original manifest e.g. the original authentication information is information embedded in the new manifest . In some embodiments the original authentication information is information derived from the original manifest. The original authentication information can also be a linked object that is derived from the original manifest where the linked object is an object which is distinct from the original manifest e.g. a pointer to a separate object . In other embodiments the original authentication information indicates the hash of the content objects described by the manifest which are depicted in original manifest and new manifest of as part of content link items and respectively e.g. a self certifying name .

The use case below is based on the exemplary tables presented and described in relation to and the methods disclosed herein. A content producer e.g. Netflix creates exemplary original manifest that describes content objects associated with original names. The original names include an original content base name and a final segment . . e.g. netflix frozen content c 1 . Original manifest includes original authentication information which can indicate corresponding hash values for each content object e.g. hash CO . Netflix as the content producer authenticates original manifest by including its identity and signature Netflix and Netflix Sig respectively. A content publisher e.g. Akamai encapsulates original manifest by creating exemplary encapsulated original manifest with a new encapsulated original manifest name of akamai frozen original manifest. Akamai renames the content objects with new names comprised of a new content base name and a final segment . . e.g. akamai frozen content c 1 . Akamai creates exemplary new manifest with a manifest name of akamai frozen manifest where new manifest describes content objects by the new names and includes original authentication information from original manifest .

A consumer retrieves new manifest under new manifest name of akamai frozen manifest where new manifest includes original authentication information . The consumer retrieves the content objects described in new manifest e.g. content objects under the new name of akamai frozen content c 1 etc. . The consumer then retrieves encapsulated original manifest based on new encapsulated original manifest name e.g. akamai frozen original manifest included in original authentication information . The consumer now has a copy of original manifest and new manifest .

The consumer verifies original manifest based on the original authentication information. For example the consumer uses a regular signature verification based on a public key of identified original producer . The consumer then verifies the retrieved content objects described in new manifest . First for each retrieved content object the consumer replaces the new name that includes new content base name and final segment . e.g. akamai frozen content c 1 with the original name that includes original content base name and final segment . as indicated in the original manifest e.g. netflix frozen content c 1 . Next the consumer calculates the self certifying name for the content object based on the original name as derived from the new name e.g. hash CO . Finally the consumer compares the calculated self certifying name with the self certifying name indicated in the original authentication information e.g. original hash value . of hash 1 hash CO . A match authenticates the retrieved content object by confirming that the renamed content object contains the same data as the originally named content object. If there is no match the retrieved content object is not authenticated and the system can discard or ignore the content object.

Content processing system can include instructions which when executed by computer and communication system can cause computer and communication system to perform methods and or processes described in this disclosure. Specifically content processing system may include instructions for determining by a content producing device an original manifest which indicates at least an original name associated with a content object wherein the name is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level communication mechanism . Content processing system can include instructions for renaming the content object with a new name renaming mechanism . Content processing system can also include instructions for creating a new manifest which indicates the new name where the new manifest includes original authentication information associated with the original manifest manifest creation mechanism .

Content processing system can further include instructions for renaming the content object which involves one or more of adding a prefix to the original name replacing a part of the original name with a part of the new name and any function that creates a one to one mapping of the new name to the original name renaming mechanism .

Content processing system can additionally include instructions for receiving by a content consuming device a new manifest which indicates at least a new name associated with a content object wherein the name is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level and wherein the new manifest includes original authentication information associated with an original manifest which indicates an original name associated with the content object communication mechanism . Content processing system can include instructions for retrieving the content object based on the new name communication mechanism . Content processing system can include instructions for verifying the obtained content object by replacing the new name with the original name and authenticating the content object with the original name using the original authentication information content verification mechanism . Content processing system can also include instructions for calculating a self certifying name for the content object based on the original name content verification mechanism comparing the calculated self certifying name with the self certifying name indicated in the original authentication information content verification mechanism and responsive to determining that the calculated self certifying name matches the self certifying name indicated in the original authentication information authenticating the obtained content object authentication mechanism .

Content processing system can include instructions for retrieving the original manifest wherein the original authentication information indicates a self certifying name based on the original name and wherein the self certifying name uniquely identifies the content object communication mechanism . Content processing system can also include instructions for verifying the original manifest by authenticating a digital signature of a producer of the original manifest based on a public key of producer manifest verification mechanism .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least an original manifest which indicates at least an original name associated with a content object wherein the name is a hierarchically structured variable length identifier HSVLI which comprises contiguous name components ordered from a most general level to a most specific level a new manifest which indicates at least a new name associated with a content object an original name a new name a content object associated with the original name a content object associated with the new name an encapsulated original manifest an encapsulated original manifest name a manifest name a content base name a content link item a final segment name original authentication information associated with the original manifest an identity of a producer of the original manifest a digital signature of the producer of the original manifest a self certifying name based on the original name wherein the self certifying name uniquely identifies the content object a hash of the content object and a calculated self certifying name based on the original name as obtained from the original manifest.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules or apparatus. The hardware modules or apparatus can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs dedicated or shared processors that execute a particular software module or a piece of code at a particular time and other programmable logic devices now known or later developed. When the hardware modules or apparatus are activated they perform the methods and processes included within them.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

