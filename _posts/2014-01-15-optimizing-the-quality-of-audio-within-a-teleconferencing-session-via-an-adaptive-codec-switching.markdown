---

title: Optimizing the quality of audio within a teleconferencing session via an adaptive codec switching
abstract: A Voice over Internet Protocol (VoIP) session between computing devices can be identified. Each computing device can be associated with a communication link. Each of the computing devices can execute a VoIP application. Each application can include selectable codecs. The codecs can be an audio codec and a video codec. A unique list of the selectable codecs can be generated. The list can include sublists which can identify the codecs. A loss threshold with each sublist based on previously determined performance characteristics of the codecs can be associated. The threshold can be a packet loss threshold value of the link associated with the devices. A packet loss metric of the link can be evaluated. The link can be associated with a codec of the sublists. A programmatic action can be performed to select a different codec from the sublists responsive to the evaluating.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09231840&OS=09231840&RS=09231840
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09231840
owner_city: Armonk
owner_country: US
publication_date: 20140115
---
The present invention relates to the field of VoIP telephony and more particularly to optimizing the quality of audio within a teleconferencing session via an adaptive codec switching. Contemporary Voice Over IP VoIP systems typically negotiate a single codec for the entire VoIP session life time of a teleconference. For example during an initial setup of a VoIP conference call a VoIP server can select a VoIP audio video codec which can be utilized based on several criteria such as network conditions participant quantity and server settings. This approach provides simple call setup and teardown which can minimize server load. However as network conditions change call quality can decrease dramatically. For example when packet loss between a VoIP client device and the VoIP server increases the codec chosen by the server can perform poorly resulting in garbled audio which can be incomprehensible to participants using the client device. That is as different codecs can perform differently well under certain network conditions like delay jitter and or packet loss this can lead to a reduction of quality if network conditions change during the call.

While these codecs can adapt to a limited degree to changing network conditions such as available bandwidth network delay and or packet loss rate change in the meantime the VoIP clients e.g. VoIP application abide with their initial codec choice. Hence the clients often apply a codec that is not well suited for the present network situation although better codec choices can be available. Additionally when a teleconference session grows sufficiently large and the number of codecs required for each client device increases server computation demands can increase drastically. This can cause servers to become unresponsive and utilize lower quality codecs to improve decrease computation resulting in a poor end user experience of the call.

One aspect of the present invention can include a system an apparatus a computing device product and a method for optimizing the quality of audio within a teleconferencing session via an adaptive codec switching. A Voice over Internet Protocol VoIP session between computing devices can be identified. Each computing device can be associated with a communication link. Each of the computing devices can execute a VoIP application. Each application can include selectable codecs. The codecs can be an audio codec and a video codec. A unique list of the selectable codecs can be generated. The list can include sublists which can identify each of the selectable codecs. A loss threshold with each sublist based on previously determined performance characteristics of the codecs can be associated. The threshold can be a packet loss threshold value of the link associated with the devices. A packet loss metric of the link can be evaluated based on one of the selectable codecs. The link can be associated with a codec of the sublists. A programmatic action can be performed to select a different codec from the sublists responsive to the evaluating.

Another aspect of the present invention can include an apparatus a computing device product a method and a system for optimizing the quality of audio within a teleconferencing session via an adaptive codec switching. An optimization engine can be configured to perform adaptive codec switching based on a loss metric a participant metric and or a quality of experience metric. The codec switching can be performed on the communication links associated with a telephony session executing within a multi control unit MCU . Each of the links can be associated with a terminal device. Each of the terminal devices can be able to execute a Voice over Internet Protocol VoIP application. Each application can include an audio codec. A data store can be able to persist a link mapping a switching list and a telephony session data. The switching list can include a sublist of one codec associated with the VoIP application.

The present disclosure is a solution for optimizing the quality of audio within a teleconferencing session via an adaptive codec switching. In the solution a set of available audio video codecs for a teleconference session can be determined. The codecs can be organized into one or more sublists based on the known performance of the codecs. For example each codec can be evaluated during a set of network criteria to determine codec performance for the criteria. The sublists can be associated with performance characteristics which can be utilized to select a subset of the codecs based on network conditions during the teleconference session. It should be appreciated that the disclosure can function at a runtime level and or at a session level to adapt to runtime environment changes and or session changes.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing. Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions.

These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

Table can be a data structure for organizing codecs available within a call session . In one embodiment table can be a representation of a switching list within a telephony server . Table can include but is not limited to a sublist identifier a codec identifier a loss range value a participant quantity value and the like. For example table can permit one or more of a subset of available codecs e.g. C2 C10 C8 of Sublist B to be utilized when there are between two and twenty participants within the session . It should be appreciated that table can include an arbitrary quantity of sublists codecs within the sublists criteria conditions and the like. In one embodiment conditions can include network packet loss server load latency and the like.

In scenario the VoIP server can be communicatively linked to N number of devices where N 7. The server can utilize table to determine an appropriate codec e.g. Codec C1 which can be utilized for all links to devices e.g. Device A N . For example when network packet loss is at 0 the table can match the session packet loss e.g. loss metric to a packet loss criteria to determine an appropriate sublist e.g. Sublist A from which a codec e.g. C1 can be selected. When the match is successful the codec e.g. C1 can be selected for the session.

In scenario the VoIP server can be communicatively linked to N number of devices where N 7. The server can utilize table to determine an appropriate codec e.g. C7 which can be utilized for all links to devices e.g. Device A N . For example when network packet loss is at 1 the table can match the session packet loss e.g. loss metric to a packet loss criteria to determine an appropriate sublist e.g. Sublist A from which a codec e.g. C7 can be selected. When the match is successful the codec e.g. C7 can be selected for the session replacing the previously selected codec e.g. C1 .

In scenario the VoIP server can be communicatively linked to N number of devices where N 12. The server can utilize table to determine an appropriate codec e.g. C8 which can be utilized for all links to devices e.g. Device A N . For example when network packet loss is at 5 the table can match the session packet loss e.g. loss metric to a packet loss criteria to determine an appropriate sublist e.g. Sublist B from which a codec e.g. C8 can be selected. When the match is successful the codec e.g. C8 can be selected for the session replacing the previously selected codec e.g. C7 .

In scenario the VoIP server can be communicatively linked to N number of devices where N 40. The server can utilize table to determine an appropriate set of codecs e.g. C9 C4 C12 which can be utilized for each of the link to devices e.g. Device A N . For example when network packet loss is at a range from 11 16 the table can match the session packet loss e.g. loss metric to a packet loss criteria to determine one or more appropriate sublists e.g. Sublist A from which each codec e.g. C9 C4 C12 can be selected. That is server can select a codec C9 for links associated with Device A and Device C codec C4 for the link associated with Device B and a codec C12 for links associated with Device N.

It should be appreciated that codec selection data can be utilized to drive feedback processes which can improve subsequent selection of a codec during the session and or subsequent sessions. Upon termination of the call the server can teardown communication links to the devices A N.

It should be understood that the disclosure can utilize any number of criteria to perform the functionality described herein. In one instance the disclosure can utilize link quantity e.g. participants to determine codec sublist selection and codec selection.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. It should be appreciated that the disclosure can utilize traditional and or proprietary mechanisms to assess the call quality for link and an overall call quality for the teleconference session.

In step a VoIP session can be established between two or more computing devices. In step the number of devices links for the session can be determined. For example the number of participants can be determined based on the number of accepted invites to a session. In step a list of available codecs for the session can be determined. In step codecs can be organized into two or more sublists based on known performance under known network conditions. If a sublist exists the sublist can be updated. In step each sublist can be associated with a loss threshold. For example the threshold can be associated with a packet loss range such as a percentage range e.g. 2 5 . It should be appreciated that the loss threshold can include automatically generated values manually established values and the like. For example loss range can be associated with a fuzzy logic range of values.

In step codecs in each sublist can be organized based on one or more settings such as performance availability priority and the like. In step a link associated with the session can be selected. In step the call quality of the link can be estimated. The call quality can be estimated utilizing one or more traditional and or proprietary metrics. For example the call quality can be a Mean Opinion Score MOS associated with the session or link.

In step the call quality can be matched to a quality threshold of the sublist. In step the sublist associated with the quality threshold can be selected. In step a codec from the sublist can be selected for the link. In step the codec has been previously used during the session the method can proceed to step else continue to step . In step if there are more codecs in the list the method can return to step else proceed to step . In step an optimization notification failure can be optionally presented. For example the notification failure can be presented within an administrative interface of a VoIP server and can be logged within an error log file. In step the selected codec can be established for the link.

In step if there are more links within the session the method can return to step else continue to step . In step if the session is terminated the method can continue to step else return to step . In step the method can end.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. It should be appreciated that method can be performed in serial and or in parallel. Method can be a functionality of call optimization functionality within a VoIP client and or server. Method can be performed in real time or near real time. It should be appreciated that steps can be performed continuously during the lifetime of the session. Steps can be performed for each link in the session. In one embodiment steps can be automatically performed when a new link is established during a session. Steps can be performed for when a codec is unsuitable and or unavailable. When no codecs are available in a sublist the disclosure can select codecs from a different sublist which can be selected based on user preference historic settings and the like.

Telephony server can be a hardware software entity for executing an optimization engine . Server functionality can include but is not limited to basic call signaling session management encryption authentication and the like. Server can include but is not limited to optimization engine session switching list data store and the like. In one embodiment server can receive codec switch command from a computing device authorized to modify session settings. For example a coordinator of a teleconference meeting can manually elect to switch codecs to improve audio output quality during a session when one or more participants leave the session.

Optimization engine can be a hardware software element for dynamically optimizing session quality. Engine can include but is not limited to quality estimator codec manager signaling component settings and the like. Engine functionality can include but is not limited to feedback collection feedback analysis heuristic functionality and the like. In one embodiment engine can generate and or manage switching list . In one instance engine can be utilized to create link mapping . In the instance mapping can permit codec selection and or tracking based on link. In one embodiment engine can be a functionality of an IBM SAMETIME Unified Telephony software. It should be appreciated that engine can perform the functionality described herein in response to traditional and or proprietary telephony actions. For example engine can perform dynamic codec switching in response to a merge call action a forward call action a join call action and the like.

Quality estimator can be a hardware software entity for determining call quality during session . Estimator functionality can include but is not limited to metric collection metric analysis and the like. Estimator can determine the call quality of a link e.g. computing device communicating with server overall call quality and the like. In one embodiment estimator can evaluate a call link quality to determine a codec change event. In one instance estimator can automatically request metrics and or perform metric collection in response to changes in session settings participant number network conditions and the like. For example when network latency increases estimator can obtain metrics to determine if a codec switch is necessary e.g. high latency switch to more efficient codec .

Codec manager can be a hardware software element for organizing codec within one or more sublists of switching list . Manager functionality can include but is not limited to codec detection codec switching and the like. In one instance manager can be utilized to determine codec performance for organization within switching list . In one embodiment manager can utilize sublist metadata codec list and or list metadata to determine one or more appropriate codecs for each link e.g. network path for device during session .

Signaling component can be a hardware software entity for coordinating codec switching. Component functionality can include but is not limited to Session Initiated Protocol SIP signaling capabilities Real Time Transport Protocol RTP signaling functionality and the like. In one instance component can be utilized to interface with VoIP applications to trigger a codec change. In the instance component can convey command in response to metric evaluation by estimator and codec determination by manager . It should be appreciated that signaling component can utilize traditional and or proprietary protocols to communicate with open source and closed source e.g. proprietary VoIP applications.

Settings can be one or more options for configuring the behavior of system server and or engine . Settings can include but is not limited to an engine settings a quality estimator options a codec manager settings a feedback component options session settings and the like. Settings can be manually and or automatically established. In one instance settings can be heuristically determined from one or more historic settings.

Telephony session can be a semi permanent interactive information interchange between two or more computing devices . Session can include but is not limited to session data switching list and the like. In one embodiment session can be a video teleconference session. Session data can include but is not limited to a target quality metric a loss metric a quality of experience metric a participant metric a loss threshold a codec performance characteristic and the like.

Switching list can be a data structure for enabling dynamic codec switching in response to participant loss and or quality of experience metrics. Switching list can include but is not limited to sublist sublist metadata and the like. In one embodiment sublist can include a codec list which can delineate codecs available during the session in order of historic performance.

Data store can be a hardware software component able to persist switching list session data mapping and the like. Data store can be a Storage Area Network SAN Network Attached Storage NAS and the like. Data store can conform to a relational database management system RDBMS object oriented database management system OODBMS and the like. Data store can be communicatively linked to server in one or more traditional and or proprietary mechanisms. In one instance data store can be a component of Structured Query Language SQL complaint database.

Link mapping can be a data set for enabling dynamic codec switching within session . Mapping can include but is not limited to a link identifier a sublist identifier a codec identifier and the like. For example entry can be utilized to associate a Link A with a Codec A of a Sublist A to enable codec selection tracking per link. In one embodiment mapping can be dynamically generated at session inception. In the embodiment engine can manage mapping in real time or near real time to track audio codec selection and provide an optimized audio experience.

Computing device can be a hardware software permitting the execution of a VoIP application . Device can include but is not limited to input output components VoIP application settings interface and the like. Computing device can include but is not limited to a desktop computer a laptop computer a tablet computing device a PDA a mobile phone and the like. VoIP application can be communicatively linked with interface . In one instance interface can present and or receive audio input output to from components . In one embodiment interface can present settings mapping and the like. VoIP application can include but is not limited to codecs application settings and the like. Codecs can include but is not limited to SPEEX OPUS SILK H.263 H.264 H.323 G.722 G.711 and the like.

Network can be an electrical and or computer network connecting one or more system components. Network can include but is not limited to twisted pair cabling optical fiber coaxial cable and the like. Network can include any combination of wired and or wireless components. Network topologies can include but is not limited to bus star mesh and the like. Network types can include but is not limited to Local Area Network LAN Wide Area Network WAN VPN and the like.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. In one embodiment engine can be a functionality of an Application Programming Interface. Protocols associated with the disclosure can include but is not limited to Transport Control Protocol TCP Internet Protocol IP Hypertext Transport Protocol HTTP and the like.

In session configuration one or more options for establishing a switching list per session can be presented. Options can include but not limited to a session identifier a sublist identifier threshold values a codec identifier and the like. For example configuration can include a drop down list which can permit the selection of a session identifier. Selection of a session identifier can present the switching list associated with the session. For example sublists of the switching list for session 1035d5 can be presented within a drop down list. Selection of the sublist can permit the presentation of a loss threshold value for the sublist. For example when Sublist C is selected a loss threshold for a sublist C can be presented and or modified. In one instance configuration can permit the management of codecs within a sublist. In the instance interface elements e.g. interactive buttons can be utilized to add edit and or remove codecs from a selected sublist.

In runtime configuration one or more options for establishing a switching list per runtime environment can be presented. Options can include but is not limited to sublist identifier a threshold values a codec identifier and the like. Selection of the sublist can permit the presentation of a loss threshold value for the sublist. For example when Sublist A is selected a loss threshold for a sublist A can be presented and or modified. In one instance configuration can permit the management of codecs within a sublist. In the instance interface elements e.g. interactive buttons can be utilized to add edit and or remove codecs from a selected sublist.

Drawings presented herein are for illustrative purposes only and should not be construed to limit the invention in any regard. It should be appreciated that the interface options can be present within a drop down menu a context menu and the like. In one instance interface can be a screen of an IBM SAMETIME UNIFIED TELEPHONY.

The flowchart and block diagrams in the illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

