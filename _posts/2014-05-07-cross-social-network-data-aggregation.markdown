---

title: Cross social network data aggregation
abstract: Disclosed in some examples is a method of aggregating social networking data by receiving first authentication information for a first social networking service, the first authentication information being associated with a user and being received from a first social networking application, receiving second authentication information for a second social networking service, the second authentication information being associated with the user and being received from a second social networking application, requesting first information regarding the user from the first social networking service using the first authentication information, receiving the first information regarding the user from the first social networking service and storing the received first information, requesting second information regarding the user from the second social networking service using the second authentication information; and receiving the second information regarding the user from the second social networking service and storing the received second information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09210201&OS=09210201&RS=09210201
owner: Zynga Inc.
number: 09210201
owner_city: San Francisco
owner_country: US
publication_date: 20140507
---
This application is a continuation of and claims the benefit of priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 13 077 440 filed on Mar. 31 2011 and issued as U.S. Pat. No. 8 745 134 on Jun. 3 2014 which claims the benefit of priority under 35 U.S.C. Section 119 e to U.S. Provisional Patent Application Ser. No. 61 449 559 entitled CROSS SOCIAL NETWORK DATA AGGREGATION filed on Mar. 4 2011 to Scott Dale et al. which are hereby incorporated by reference herein in their entirety.

A portion of the disclosure of this patent document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent files or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings that form a part of this document Copyright Zynga Inc. 2011 All Rights Reserved.

A social networking service is an online service platform or site that allows members to build or reflect social networks or social relations among members. Typically members construct profiles which may include personal information such as name contact information employment information photographs personal messages status information links to web related content blogs and so on. Typically only a portion of a member s profile may be viewed by the general public and or other members.

The social networking site allows members to identify and establish links or connections with other members in order to build or reflect social networks or social relations among members. For instance in the context of a business networking service a person may establish a link or connection with his or her business contacts including work colleagues clients customers and so on. With a social networking service a person may establish links or connections with his or her friends and family. A connection is generally formed using an invitation process in which one member invites a second member to form a link. The second member then has the option of accepting or declining the invitation. If the second member accepts the invitation the first and second members are connected.

In general a connection or link may represent or may be otherwise associated with an information access privilege such that a first person who has established a connection with a second person is via the establishment of that connection authorizing the second person to view or access non publicly available portions of their profiles. Of course depending on the particular implementation of the business social networking service the nature and type of the information that may be shared as well as the granularity with which the access privileges may be defined to protect certain types of data may vary greatly.

A variety of different social networking services have gained popularity include FACEBOOK of Palo Alto Calif. MYSPACE of Beverly Hills Calif. and run by News Corp. LINKEDIN of Mountain View Calif. TWITTER of San Francisco Calif. and the like. These sites often allow for third party applications to utilize certain functionality provided by the host social networking service. In some examples these third party applications may utilize certain user interface UI elements of the social networking service access personal information about a user including profile information and send and receive social interactions such as messages to the user of the third party application or to their connections. FACEBOOK for example allows developers to create applications which are integrated into the FACEBOOK user interface and with the FACEBOOK social networking system. In some examples these applications may include games such as CITYVILLE FARMVILLE and MAFIA WARS all developed by ZYNGA Inc. of San Francisco Calif. These applications appear in a FACEBOOK page and make use of various features of FACEBOOK such as contacting friends to encourage them to join the game and play with the user and the like.

The social networking services integrate with these applications by providing to these applications an Application Programming Interface or API. In general an API is a particular set of rules and specifications that a software program may follow to access and make use of the services and resources provided by another particular software program that implements that API. The API serves as an interface between different software programs and facilitates their interaction.

In the drawings which are not necessarily drawn to scale like numerals may describe similar components in different views. Like numerals having different letter suffixes may represent different instances of similar components. The drawings illustrate generally by way of example but not by way of limitation various embodiments discussed in the present document.

Social networking applications derive some of their popularity from the social nature of their gameplay. Users may invite and participate in the games with their social networking service connections. However because individuals are often members of multiple social networking services social networking applications utilizing the APIs of the host social networking service only receive part of the picture about a given user of a social networking service. This is because the profiles of these users are often not the same across all their constituent social networking services. For example a given user may be connected to a first group of other users on one social networking site but may be connected to a second group of other users on another social networking site. The first and second groups may have some common members but may also have some different members. The social networking service may not know about the members included in one group but not the other. This represents a missed opportunity to enhance gameplay for the various users. Disclosed is a system method and machine readable medium for aggregating social networking information from multiple users and making it available to a social networking application.

Typically when a user accesses a third party application such as a game associated with one of the social networking services the user selects the application via the social networking service which then re directs the user to access the application on another server. In some examples this server may be located on a social networking application service . The user s browser connects to the application server downloads the application client then displays or executes the application. In some examples this social networking application may be or include HTML or XML JavaScript Adobe Flash Microsoft Silverlight and the like. The social network from which the user selected the content may be called the host social network. The user s browser then executes or displays this social networking application until the user decides to exit or the application closes or otherwise ends.

In some examples while the application executes it communicates with the host social networking service to which it is associated. Example communications include authenticating authorizing utilizing the user interface elements of the host social network obtaining social network information about user such as connections with other users sending messages to other users and the like.

In some examples social networking application may communicate with social networking application service . Social networking application service may include various functions to assist social networking application . In some examples social networking application service may include application module which stores and delivers to user terminals including user terminal social networking application from data store . In other examples application module may contain execution logic for social networking application . Examples of this execution logic include responding to user actions and inputs payment and purchasing information for purchasing the application or unlocking accelerating or making available various features in the application sending messages to and from various other users of the application storing application data in data store providing various media files such as graphics video and sound files and the like. While social networking application service is shown in as one system the components and the functionality of social networking application service could be distributed across multiple systems.

In some examples social networking application service includes a server authentication module which works with client authentication module to authenticate authorize social networking application with a variety of social networking services .

In some examples social networking application service includes social networking service D . Social networking service D is another social networking service that is associated with the social networking application service. In some examples social networking service D is run by social networking application service and thus is more tightly coupled to social networking application service than social networking services . In some examples social networking service D may provide a common framework for storing all the user s personal information that may be stored across social networking services in one central profile.

In some examples instead of social networking application contacting the various social networks for information regarding user or their connections social networking application may contact social networking service D . Social networking service D in some cases may aggregate all the known information regarding user that has been collected from social networking services by or on behalf of social networking application and also information collected by other social networking applications utilizing social networking service D . Multiple social networking applications running on different social networking services may interface with social networking service D passing it information about a particular user or users as well as authentication and authorization information. This authentication and authorization information allows social networking service D to obtain additional information about those users and to periodically update that information by request from the various social networking services. In some cases contacting social networking service D may be faster than contacting the host social networking service for the information and may provide more complete information about the user to the social networking application. In some examples the social networking service D creates a profile for these users and stores the aggregate information in the profile.

Synch module may maintain a queue of users whose profiles need to be updated by requesting updated information from the various social networking services . In some examples a user is placed on the queue the first time the system becomes aware of the user. In other examples a user is placed on the queue upon logging in to the social networking service D. In other examples a user is placed in the queue when the social networking service D learns that the user is a connection of another user. In other examples each user s profile may be refreshed after a certain amount of time. In other examples user may be utilizing social networking application for a long enough time period that the system will queue the information refresh in order to ensure that social networking service D has up to date information in case social networking application needs it.

The information obtained by social networking service D may include connection lists profile information such as name address phone number email photos message postings and any other information in the member s profile or associated with that member on the social networking service.

One example social networking application is shown in . A social networking application is any application which utilizes or is capable of utilizing the API of one or more social networking services. In some examples social networking application may contain an input output module . Input output module communicates with the user through user terminal . Input output module is responsible for causing the user interface of the social networking application to be displayed and for handling user inputs.

Application logic module in some examples is responsible for implementing the primary functions of the social networking application . For example in the case of a game the game logic and the game rules are implemented by application logic module . In some examples application logic module communicates with application module using communication module to communicate changes in application state user interactions and to receive instructions for processing application events. In other examples application logic module has all the logic necessary to process any application state changes user interactions and handling application events. In yet other examples application logic module has the logic necessary for handling some application state changes user interactions and application events while the remaining functionality is handled by application module .

Communication module communicates with social networking service and social networking application service . In some examples this communication may include network communication across network . A variety of methods of communication may be used including AJAX page loads other HTTP communications TCP sockets UDP datagrams and the like.

Social networking application may include a client authentication module for managing authentication with one or more social networking services . Client authentication module may work with server authentication module of social networking application service to authenticate and authorize with the various social networks . Authentication and authorization in some examples includes user authentication which informs the social networking service and the application associated with the social networking service the identity of the user authorization in which the user authorizes the social networking application to access certain personal information and take certain actions application authentication which allows the social networking service to verify that a trusted application is asking for access and to provide the requested level of access and the like. In some examples authentication and authorization with the social network are necessary to utilize the various APIs of the social networking services . In some examples when a user launches social networking application client authentication module authenticates and authorizes the social networking application with the host social networking service. The host social networking service may then pass back authentication information. In some examples this authentication information may be a token key that identifies a session. Client authentication module then passes this authentication information to server authentication module which stores this information for later use by other social networking applications including other social networking applications that are hosted on different social networking services and in some examples by social networking application service and social networking service D . In general the authentication information may include any information necessary to utilize an application programming interface on a social networking service.

Server authentication module of social networking application service receives this authentication information and in some cases it may store this in social networking service D in user s profile such that social networking service D may make API calls for the various social networking services that a user is associated with. In other examples authentication module may be part of social networking service D .

At operation the user s browser is directed by the social networking service to fetch or download an application from an application module on a social networking application service . In operation the application executes on a user s computer or terminal . In some examples the application is displayed in an IFRAME HTML element.

Turning now to at operation the social networking application client authentication module authenticates and authorizes with the host social networking service receiving authentication information in return.

In some examples this social networking application client authentication module validates the session information at operation by ensuring that the authentication information has not expired and is correctly formed. At operation the authentication information may then be passed to the social network application service server authentication module in order to store the session information in order to allow the social networking application service and the social networking service D to make API calls to other social networks and in return provide faster access to the social networking data.

At the social networking application service may attempt to locate a social networking service D profile for the user in order to store the authentication information in the profile for later use in making API calls to the host social networking service to update profile information. In order to locate the correct profile any piece of information stored in the profile may be compared to any identifying information sent from the social networking application about the user along with the social networking service authentication information. For example if user launches social networking application from FACEBOOK in some examples social networking application will pass the FACEBOOK id of user to the social networking service along with the authentication information. The social networking service D may then parse the member profiles to find a user that has that FACEBOOK id associated with it. In other examples social networking application service or social networking application may utilize the authentication information to query the host social networking service for information about the user .

Other identification information may be used to associate user with a profile. Some information may include member ID name social graphs common friends address phone number email address TWITTER account website links bank accounts credit card information and any other personal identifiable information. In yet other cases the social networking application may prompt user to associate himself or herself with the various profiles on the various social networking services to build this aggregated profile.

In still other examples social networking application may send a unifying id if known to social networking service D along with the authentication information. A unifying identification is an id assigned to the user by social networking service D when the user becomes associated with social networking service D . The unifying id allows the social networking application social networking application service and social networking service D to utilize one identification for a user such that the system may easily identify a particular member. This unifying id links to the user s profile on social networking service D that contains an aggregation of all the information collected from the various social networking services about the user including the various user identifications specific to those social networking services. For example the social networking data store may store the user s FACEBOOK member id a LINKEDIN member id and the like all tied together with a unifying id. Once the system either associates the user with a previous profile stored in social networking application service D or creates a new profile the user can subsequently be identified by the social networking application service and application by this identification.

At operation if a profile is found the social networking application service may send to the social networking application user s profile or a portion of it that social networking application is likely to use without social networking application having to separately request the information. In some examples this may include connection lists. In other examples social networking application service may store social networking application preferences describing the information that particular social networking application is interested in so that social networking application service may provide only the information necessary.

Turning now to when an item is taken off of the queue for processing or immediately processed for each social networking service that the system has associated with the user e.g. for each social networking service to which an id is present in the user s profile the synch module of social networking application service makes an API call to the social networking service to obtain the requested information at . In some examples the social networking service D may use the authentication information for the social networking services that was sent by a social networking application earlier and stored in the user s profile if available to utilize the requisite APIs. In other examples other user s authentication information may allow social networking service D access to the requested information e.g. if the social networking service may allow the application access to certain profile information of connections associated with the user whose authentication information is used authentication information for connections of the user whose profile is to be updated may be used. In some examples this may be a request for information from a user s profile including a list of connections for a user personal information postings or the like. At the system receives the reply and processes the reply at . This process may be repeated at for each social networking service to which the user is a member. While all social networking services to which the system has associated with the user may be contacted in yet other examples only certain social networking services may be contacted rather than all of the social networking services connected to that profile.

Turning now to a method for processing a reply or part of a reply is shown. Once the reply is obtained if the information is or includes a list of that user s connections each connection is searched at to determine if that connection has a social networking service D profile. The same methods and indicators utilized to search for a profile discussed with respect to may be utilized.

If a profile for that connection is not found at operation a profile is created and filled in based on the information known about the connection e.g. social networking service user id and the like at operation and the profile of the user on social networking service D is updated to reflect this connection at operation . At this time a unifying id is also created. The unifying id is a unique identification for that member on social networking service D .

If the profile was found at the system checks to see if that connection is already associated with the particular user whose profile is being updated. In some examples if the connections in the profiles of social networking service D are stored as unifying ids the system may simply compare the unifying id of the profile found in operation with the stored unifying ids of the connections of the user whose profile is being updated to determine if the connection is already present. In other examples the connections may be stored by the native social networking id of the social network to which the connection pertains. For example if the connection is a FACEBOOK connection the connection may be stored as a FACEBOOK user id in the connection section of the social networking service D profile. In this case the system may determine if the connection already exists by attempting to match any of the already stored connections in the social networking service D profile for the user whose profile is being updated with any identification information for any social networking services stored in the social networking service D profile of the reported connection. Thus if the reply indicates that the user is connected with a user with FACEBOOK userid 1234 the system may check all the connections stored in the profile of user on social networking service D and determine whether any of them regardless of what social networking service the connection is from are also associated with FACEBOOK userid 1234. For example user may be connected to another user via. LinkedIn with userid 5678. User 5678 on LinkedIn may also be user 1234 on FACEBOOK and thus user is already connected with this other user. The system can determine this by searching the social networking service D user profile which is associated with FACEBOOK id 1234 for any other social networking service identifications associated with that user and comparing all those with connections of user .

If the connection is not already made at operation that connection is associated with that user by noting the association in the user s social networking service D profile. Continuing on the system continues to parse the response. If more connections are present at then operations s may be repeated until no more connections are present. In this way the social networking service D may have up to date information on the list of a user s connections across multiple social networking services.

While showed one method of processing the response from each social networking service for connection information shows another example for profile information such as for example name contact info and the like. At operation each item in the reply is compared with the value stored in the social networking service D profile of the user. Thus for example an email address may be compared with the email address stored in the social networking service D profile. At operation if the information in the reply is different then what is stored in the profile the stored value may be updated with the reply value. The reply is checked for more items in operation and if more items are found operations are repeated for each item. In some examples the value stored in the profile may be replaced with the value in the reply but in other examples both may be stored. In some examples in which both information is stored an indication may also be stored as to which social networking service that particular piece of information was retrieved from.

Note that in some examples social networking service D may provide all the functionality of social networking services . This includes in some examples the ability for members to create and edit profiles view profiles view others profiles make connections post messages for other members and the like. In some examples social networking service D may provide an API for other social networking applications.

Disclosed in one example is a system for providing social networking data including a data store configured to store a user profile. The user profile may be associated with a first user and may include a user identification a first social networking user identifier associated with the first user for a first social networking service and a second social networking user identifier associated with the first user for a second social networking service. The data store also may store a first connection between a second user and the first user on the first social networking service and a second connection between a third user and the first user on the second social networking service. The system may include a response module configured to respond to a request for information from a social networking application. The request for information may request information relating to the first user and the response module may respond with at least a portion of the profile associated with the first user if it is present in the data store. If the profile is not present in the data store the response module may be configured to create a new profile associated with the first user and add it to the data store. The system may include a synchronization module to periodically request updated information from the first or second social networking services for the first user and to use the updated information to update the profile associated with the first user.

Disclosed in another example is a method to provide social networking data including storing a user profile. The user profile may be associated with a first user and may include a first social networking user identifier associated with the first user for a first social networking service a second social networking user identifier associated with the first user for a second social networking service a first connection between a second user and the first user on the first social networking service and a second connection between a third user and the first user on the second social networking service. The method may also include responding to a request for information from a social networking application with at least a portion of the profile associated with the first user based on a determination that the profile exists in the data store and creating a new profile associated with the first user and adding it to the data store based on a determination that the profile does not exist in the data store. The method may also include periodically requesting updated information from at least one of the first social networking service and the second social networking service for the first user and to use the updated information to update the profile associated with the first user.

Disclosed in another example is a machine readable medium that stores instructions which when performed by a machine causes the machine to store a user profile. The user profile may be associated with a first user and may include a first social networking user identifier associated with the first user for a first social networking service a second social networking user identifier associated with the first user for a second social networking service a first connection between a second user and the first user on the first social networking service and a second connection between a third user and the first user on the second social networking service. The instructions may also include instructions which cause the machine to respond to a request for information from a social networking application with at least a portion of the profile associated with the first user based on a determination that the profile exists in the data store and create a new profile associated with the first user and add it to the data store based on a determination that the profile does not exist in the data store. The instructions may also include instructions which cause the machine to periodically request updated information from at least one of the first social networking service and the second social networking service for the first user and to use the updated information to update the profile associated with the first user.

These examples maybe combined in any permutation or combination. This non limiting summary is intended to provide an overview of subject matter of the present patent application. It is not intended to provide an exclusive or exhaustive explanation of the invention. The detailed description is included to provide further information about the present patent application.

Certain embodiments are described herein as including logic or a number of components modules or mechanisms. Modules may constitute either software modules e.g. code embodied 1 on a non transitory machine readable medium or 2 in a transmission signal or hardware implemented modules. A hardware implemented module is tangible unit capable of performing certain operations and may be configured or arranged in a certain manner. In example embodiments one or more computer systems e.g. a standalone client or server computer system or one or more processors may be configured by software e.g. an application or application portion as a hardware implemented module that operates to perform certain operations as described herein.

In various embodiments a hardware implemented module may be implemented mechanically or electronically. For example a hardware implemented module may comprise dedicated circuitry or logic that is permanently configured e.g. as a special purpose processor such as a field programmable gate array FPGA or an application specific integrated circuit ASIC to perform certain operations. A hardware implemented module may also comprise programmable logic or circuitry e.g. as encompassed within a general purpose processor or other programmable processor that is temporarily configured by software to perform certain operations. It will be appreciated that the decision to implement a hardware implemented module mechanically in dedicated and permanently configured circuitry or in temporarily configured circuitry e.g. configured by software may be driven by cost and time considerations.

Accordingly the term hardware implemented module should be understood to encompass a tangible entity be that an entity that is physically constructed permanently configured e.g. hardwired or temporarily or transitorily configured e.g. programmed to operate in a certain manner and or to perform certain operations described herein. Considering embodiments in which hardware implemented modules are temporarily configured e.g. programmed each of the hardware implemented modules need not be configured or instantiated at any one instance in time. For example where the hardware implemented modules comprise a general purpose processor configured using software the general purpose processor may be configured as respective different hardware implemented modules at different times. Software may accordingly configure a processor for example to constitute a particular hardware implemented module at one instance of time and to constitute a different hardware implemented module at a different instance of time.

Hardware implemented modules may provide information to and receive information from other hardware implemented modules. Accordingly the described hardware implemented modules may be regarded as being communicatively coupled. Where multiple of such hardware implemented modules exist contemporaneously communications may be achieved through signal transmission e.g. over appropriate circuits and buses that connect the hardware implemented modules. In embodiments in which multiple hardware implemented modules are configured or instantiated at different times communications between such hardware implemented modules may be achieved for example through the storage and retrieval of information in memory structures to which the multiple hardware implemented modules have access. For example one hardware implemented module may perform an operation and store the output of that operation in a memory device to which it is communicatively coupled. A further hardware implemented module may then at a later time access the memory device to retrieve and process the stored output. Hardware implemented modules may also initiate communications with input or output devices and may operate on a resource e.g. a collection of information .

The various operations of example methods described herein may be performed at least partially by one or more processors that are temporarily configured e.g. by software or permanently configured to perform the relevant operations. Whether temporarily or permanently configured such processors may constitute processor implemented modules that operate to perform one or more operations or functions. The modules referred to herein may in some example embodiments comprise processor implemented modules.

Similarly the methods described herein may be at least partially processor implemented. For example at least some of the operations of a method may be performed by one or processors or processor implemented modules. The performance of certain of the operations may be distributed among the one or more processors not only residing within a single machine but deployed across a number of machines. In some example embodiments the processor or processors may be located in a single location e.g. within a home environment an office environment or as a server farm while in other embodiments the processors may be distributed across a number of locations.

The one or more processors may also operate to support performance of the relevant operations in a cloud computing environment or as a software as a service SaaS . For example at least some of the operations may be performed by a group of computers as examples of machines including processors these operations being accessible via a network e.g. the Internet and via one or more appropriate interfaces e.g. Application Program Interfaces APIs . 

Example embodiments may be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. Example embodiments may be implemented using a computer program product e.g. a computer program tangibly embodied in an information carrier e.g. in a machine readable medium for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers.

A computer program may be written in any form of programming language including compiled or interpreted languages and it may be deployed in any form including as a stand alone program or as a module subroutine or other unit suitable for use in a computing environment. A computer program may be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

In example embodiments operations may be performed by one or more programmable processors executing a computer program to perform functions by operating on input data and generating output. Method operations may also be performed by and apparatus of example embodiments may be implemented as special purpose logic circuitry e.g. a field programmable gate array FPGA or an application specific integrated circuit ASIC .

The computing system may include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other. In embodiments deploying a programmable computing system it will be appreciated that that both hardware and software architectures require consideration. Specifically it will be appreciated that the choice of whether to implement certain functionality in permanently configured hardware e.g. an ASIC in temporarily configured hardware e.g. a combination of software and a programmable processor or a combination of permanently and temporarily configured hardware may be a design choice. Below are set out hardware e.g. machine and software architectures that may be deployed in various example embodiments.

The example computer system includes a processor e.g. a Central Processing Unit CPU a Graphics Processing Unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a Liquid Crystal Display LCD or a Cathode Ray Tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a User Interface UI cursor controller e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device e.g. a transmitter .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or used by any one or more of the methodologies or functions illustrated herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The instructions may further be transmitted or received over a network via the network interface device using any one of a number of well known transfer protocols e.g. HTTP Session Initiation Protocol SIP .

The term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any of the one or more of the methodologies illustrated herein. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories and optical and magnetic medium.

Method embodiments illustrated herein may be computer implemented. Some embodiments may include computer readable media encoded with a computer program e.g. software which includes instructions operable to cause an electronic device to perform methods of various embodiments. A software implementation or computer implemented method may include microcode assembly language code or a higher level language code which further may include computer readable instructions for performing various methods. The code may form portions of computer program products. Further the code may be tangibly stored on one or more volatile or non volatile computer readable media during execution or at other times. These computer readable media may include but are not limited to hard disks removable magnetic disks removable optical disks e.g. compact disks and digital video disks magnetic cassettes memory cards or sticks Random Access Memories RAMs Read Only Memories ROMs and the like.

The above detailed description includes references to the accompanying drawings which form a part of the detailed description. The drawings show by way of illustration specific embodiments in which the invention may be practiced. These embodiments are also referred to herein as examples. Such examples may include elements in addition to those shown or described. However the present inventors also contemplate examples in which only those elements shown or described are provided. Moreover the present inventors also contemplate examples using any combination or permutation of those elements shown or described or one or more aspects thereof either with respect to a particular example or one or more aspects thereof or with respect to other examples or one or more aspects thereof shown or described herein.

All publications patents and patent documents referred to in this document are incorporated by reference herein in their entirety as though individually incorporated by reference. In the event of inconsistent usages between this document and those documents so incorporated by reference the usage in the incorporated reference s should be considered supplementary to that of this document for irreconcilable inconsistencies the usage in this document controls.

In this document the terms a or an are used as is common in patent documents to include one or more than one independent of any other instances or usages of at least one or one or more. In this document the term or is used to refer to a nonexclusive or such that A or B includes A but not B B but not A and A and B unless otherwise indicated. In this document the terms including and in which are used as the plain English equivalents of the respective terms comprising and wherein. Also in the following claims the terms including and comprising are open ended that is a system device article or process that includes elements in addition to those listed after such a term in a claim are still deemed to fall within the scope of that claim. Moreover in the following claims the terms first second and third etc. are used merely as labels and are not intended to impose numerical requirements on their objects.

The above description is intended to be illustrative and not restrictive. For example the above described examples or one or more aspects thereof may be used in combination with each other. Other embodiments may be used such as by one of ordinary skill in the art upon reviewing the above description. The Abstract is provided to comply with 37 C.F.R. 1.72 b to allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. Also in the above Detailed Description various features may be grouped together to streamline the disclosure. This should not be interpreted as intending that an unclaimed disclosed feature is essential to any claim. Rather inventive subject matter may lie in less than all features of a particular disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment and it is contemplated that such embodiments may be combined with each other in various combinations or permutations. The scope of the invention should be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

