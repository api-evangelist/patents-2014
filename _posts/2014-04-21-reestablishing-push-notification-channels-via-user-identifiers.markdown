---

title: Re-establishing push notification channels via user identifiers
abstract: Embodiments enable recovery of push notification channels via session information associated with user identifiers. A proxy service creates session information describing push notification channels (e.g., subscriptions) for a user and associates the session information with a user identifier. The session information is stored in a cloud service or other storage area separate from the proxy service. After failure of a user computing device or the proxy service, the session information is obtained via the user identifiers and the push notification channels are re-created with the session information. In some embodiments, the proxy service enables delivery of the same notification to multiple computing devices associated with the user identifier.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09185179&OS=09185179&RS=09185179
owner: Microsoft Technology Licensing, LLC
number: 09185179
owner_city: Redmond
owner_country: US
publication_date: 20140421
---
This application is a continuation of U.S. Pat. No. 8 713 365 issued Apr. 29 2014 the entirety of which is hereby incorporated by reference herein.

Existing push notification frameworks deliver notifications from application services to client devices via a proxy service. The proxy service maintains notification channels for delivering the notifications to applications executing on the client devices and stores session information describing the channels. If the client devices or proxy service reboots or fails the applications restart and attempt to re establish connections to the proxy service and to the application services.

While some existing systems allow applications to create notification channels without user intervention the session information is tied to the proxy service and or the client devices. After a reboot or failure the client devices still have to re establish the connections to the proxy service and to the application services.

Embodiments of the disclosure associate session information with a user. A proxy service receives from a user computing device in a push environment a request to establish at least one push notification channel to receive notifications from an application service. The request includes a user identifier. The proxy service obtains session information based on the user identifier and establishes the push notification channel based on the obtained session information. The proxy service delivers notifications from the application service to the user computing device via the established push notification channel.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Referring to the figures embodiments of the disclosure enable push notification channels to be re created based on user identifiers in the event of a failure. In some embodiments session information describing the push notification channels is associated with the user identifiers and stored in a memory area separate from a proxy service or other gateway. The proxy service receives notifications from application services for delivery to user computing devices .

Aspects of the disclosure further enable the user computing device after experiencing a failure of the notification session to reconnect to any server associated with a proxy service and present the user identifier to enable that server to re establish the notification session using information stored in a cloud service .

Referring next to an exemplary block diagram illustrates a proxy service delivering notifications from application services to user computing devices in a push environment. In the exemplary push environment illustrated in one or more of the application services generate notifications to be pushed to applications executing on the user computing devices . The notifications are pushed asynchronously and the notification flow is unidirectional in that the notifications are sent by the application services to the applications for consumption. Exemplary application services include web sites such as social networking web sites news web sites and financial web sites. Other application services are contemplated and include electronic mail and other messaging services. Exemplary notifications include updates to online social profiles weather and traffic conditions package delivery notifications text messages electronic mail messages voice messages images and video.

The proxy service represents any computing device or devices executing instructions e.g. as application programs operating system functionality or both to implement the operations and functionality associated with the proxy service . The proxy service may include any computing device such as a server cloud computing arrangement personal computer or the like. Additionally the proxy service may represent a group of processing units or other computing devices.

The proxy service has at least one processor and a first memory area . The processor includes any quantity of processing units and is programmed to execute computer executable instructions for implementing aspects of the disclosure. The instructions may be performed by the processor or by multiple processors executing within the proxy service or performed by a processor external to the proxy service . In some embodiments the processor is programmed to execute instructions such as those illustrated in the figures e.g. and .

The proxy service further has one or more computer readable media such as the first memory area . The first memory area includes any quantity of media associated with or accessible by the proxy service . The first memory area may be internal to the proxy service as shown in external to the proxy service not shown or both not shown .

The first memory area stores among other data one or more queues or other message buffers. In some embodiments each of the queues is associated with one of the applications executing on the user computing devices .

The memory area further stores one or more computer executable components. Exemplary components include a communications interface component a configuration component a lookup component and a rehydration component . Operation of the components is described below with reference to and .

The push environment further includes a second memory area . The second memory area represents for example the cloud service or other service providing storage functionality separate or remote from the proxy service . The second memory area may be accessible to the proxy service via a network. In the example of the second memory area includes a plurality of user identifiers such as user identifier 1 through user identifier M. Each of the user identifiers corresponds or maps to at least one session identifier and a set of user computing devices of a user associated with the user identifier . The session identifiers correspond or link to session information e.g. as in . The set of user computing devices represents the user computing devices that execute applications subscribed to receive notifications from the application services . In some embodiments the set of user computing devices is considered a part of the session information maintained in the second memory area . For example each device in the set of user computing devices is identified by a device identifier .

Exemplary session information stored in the second memory area includes subscription information user computing device information e.g. the device identifier state Internet Protocol IP address of the user computing device and information about the application such as an application identifier ID . In some embodiments a particular application has the same application identifier on multiple platforms e.g. mobile device laptop gaming console etc. .

The user computing devices include for example user computing device 1 through user computing device N. Each user computing device includes any computing device such as a mobile computing device or any other portable device. In some embodiments the user computing device includes a mobile telephone tablet laptop netbook gaming console and or portable media player. The user computing device may also include less portable devices such as desktop personal computers kiosks and tabletop devices. The user computing devices execute one or more of the applications . The applications when executed by the user computing devices operate to perform functionality on the user computing devices . Exemplary applications include mail application programs web browsers calendar application programs address book application programs messaging programs media applications location based services search programs and the like. The applications may communicate with counterpart applications or services such as web services accessible via a network. For example the applications may represent downloaded client side applications that correspond to server side services executing in a cloud.

In operation the proxy service receives the notifications from the application services and stores the received notifications in the queues . The notifications are stored in the queues based on the session information e.g. obtained from the second memory area or cached in the first memory area . Based on the session information the notifications are sent by the proxy service from the queues to the corresponding applications via the push notification channels . The push notification channels are communication channels established between the proxy service and the applications .

Referring next to an exemplary block diagram illustrates the second memory area storing session information relating to a push environment and corresponding to one of the user identifiers . The data stored in the second memory area may be organized and or stored in any form or format such as a relational database text files and hypertext links. Each user identifier corresponds to one or more of the session identifiers such as session identifier 1 through session identifier Y. Each session identifier has corresponding session information . The session information includes a description of one or more subscriptions. The subscriptions represented by subscription identifiers identify the applications e.g. via application identifiers that are subscribed to receive notification from particular application services . The session information also includes the device identifier corresponding to the particular user computing device associated with the session.

Referring next to an exemplary flow chart illustrates operation of the proxy service to create and persist session information corresponding to a user identifier . Each session corresponds to one of the user computing devices and the connection between the user computing device and the proxy service . Applications executing on the user computing devices desire to receive notifications from the application services . In response the user computing device e.g. a client stack executing thereon establishes or defines a session to be associated with the device identifier and the user identifier . The user computing device provides the device identifier and the user identifier to the proxy service . In some embodiments the application identifier of the requesting application is also sent to the proxy service .

If the proxy service receives the request to create one of the push notification channels at e.g. create the subscription the proxy service creates a session identifier for association with the device identifier and the user identifier provided by the user computing device . The proxy service then defines session information at associated with the session identifier to include for example a subscription identifier and the device identifier . The subscription identifier represents the requested subscription.

If a session identifier corresponding to the device identifier and the user identifier already exists the proxy service updates the session information associated with the session identifier to include the subscription identifier . In addition the proxy service adds the same subscription identifier to any other session identifiers associated with the user identifier . For example the user identifier may have three session identifiers associated therewith one for a mobile device one for a laptop and one for a gaming console.

The proxy service provides the subscription identifier to the requesting user computing device at . The proxy service persists the session information at by storing the session information linked to the user identifier in for example a cloud service .

In some embodiments the provided subscription identifier takes the form of a uniform resource location URL containing the domain name service of the proxy service the user identifier and the application identifier. The format of the URL may include for example http . The requesting application subsequently provides the URL to the corresponding application service . The corresponding application service uses the URL to push notifications to the proxy service for delivery to the intended user computing devices . For example as described below the proxy service extracts the user identifier from the URL finds the sessions associated with the extracted user identifier and for each active session queues the notification for delivery.

In some embodiments the operations illustrated in may be implemented by one or more of the computer executable components illustrated in . For example the communications interface component when executed by the processor causes the processor to receive from the user computing device a request to create a session including a push notification channel e.g. a subscription . The request includes for example the user identifier and the application identifier. In some embodiments the communications interface component includes a network interface card and or computer executable instructions e.g. a driver for operating the network interface card.

The configuration component when executed by the processor causes the processor to define the session information to establish the push notification channel from the proxy service to the user computing device and to store the session information in the cloud service . The session information includes a subscription identifier and a session identifier corresponding to the user identifier and to the application identifier. The communications interface component sends the subscription identifier to the user computing device .

After receiving the subscription identifier from the proxy service the user computing device e.g. an application executing on the user computing device registers the subscription identifier with the application service to which the application desires to subscribe to notifications. In such an example the application service is configured to push notifications to the application via the subscription identifier .

Referring next to an exemplary flow chart illustrates operation of the proxy service to re establish a push notification channel using session information corresponding to a user identifier . For example the proxy service and or user computing device may have experienced a reboot crash or other failure. Alternatively or in addition the session carrying the push notification channel e.g. subscriptions may have failed. If the server associated with the proxy service to which the user computing device is connected fails the user computing device may seek out another server associated with the proxy service to which to connect per the operations illustrated in . If the user computing device rebooted the user computing device after rebooting attempts to reconnect to the proxy service via the operations illustrated in .

The proxy service may receive a request from the user computing device to establish at least one push notification channel to receive notifications from the application service at . The request includes a user identifier associated with a user of the user computing device and the device identifier of the user computing device . If the proxy service receives the request at the proxy service obtains session information associated with the user identifier and the device identifier at . For example the proxy service provides the cloud service with the user identifier and the device identifier from the received request and receives the associated session information from the cloud service in response thereto. The session information includes the subscription identifier s for the applications associated with the user computing device identified by the user identifier .

In some embodiments the proxy service obtains a session identifier based on the user identifier and the device identifier obtains the session information from the cloud service . In such embodiments the proxy service may first communicate with the cloud service to obtain the session identifier e.g. if the cloud service stores a mapping between user identifiers device identifiers and session identifiers and then communicate with the cloud service or another cloud service to obtain the session information based on the session identifier . In embodiments in which the proxy service caches a mapping between the user identifiers device identifiers and the session identifiers the proxy service obtains the session identifier by accessing the cache then communicates with the cloud service to obtain the session information based on the session identifier .

The proxy service proceeds to re establish the session containing the push notification channel s at using the session information obtained from the cloud service . After re establishing the push notification channel the proxy service is able to deliver notifications received from the application service to the user computing device via the established push notification channel . Each of the notifications includes for example a globally unique identifier GUID that identifies the application to which the notification should be delivered. In some embodiments the GUID includes the user identifier .

In an example in which the user has two devices and one of them reboots the rebooted device sends a reconnect request to the proxy service including the device identifier of the rebooted device and the user identifier of the user. If the reconnect request is handled by a server associated with the proxy service that has cached session information about the user the server obtains the subscription identifiers for the relevant session e.g. using the device identifier and re establishes the subscriptions associated with the rebooted device. If the reconnect request is handled by a server associated with the proxy service that does not have cached session information about the user the server obtains the relevant session information from the cloud service using the user identifier and the device identifier . The server proceeds to re establishes the subscriptions associated with the rebooted device. In this manner only the subscriptions associated with the rebooted device are rehydrated while the sessions associated with other user computing devices of the user remain unaffected.

In some embodiments the user computing device establishes a plurality of push notification channels e.g. a plurality of applications executing on the user computing device subscribe to receive notifications . If an application on a particular user computing device was active e.g. executing before a failure of the user computing device and becomes non active e.g. not executing or no longer installed after the user computing device recovers from the failure the user computing device may provide the proxy service with this information. For example a client stack on the user computing device identifies a first set of the applications to the proxy service after recovering from the failure. The first set of the applications represents the applications that are currently active on the user computing device . The proxy service compares the first set of the applications to a second set of the applications associated with the session information to identify one or more non active applications. The second set of the applications represents the applications previously executing on the user computing device . The proxy service suppresses delivery of notifications to the identified non active applications.

In another embodiment the proxy service receives an error response from the user computing device if the intended recipient application of a notification is non active. The proxy service suppresses delivery of future notifications to the non active application . For example the session information associated with the user computing device is updated to reflect that the subscription associated with the non active application is suppressed. If the user subsequently installs or re activates the application the application send a subscription request including the application identifier of the application to the proxy service . In response the proxy service updates the session information to unsuppress the previously suppressed subscription e.g. via the application identifier associated with the user computing device . In some embodiments the proxy service returns a message to the user computing device that the existing subscription was unsuppressed.

In some embodiments the operations illustrated in may be implemented by one or more of the computer executable components illustrated in . For example the communications interface component receives the request from the user computing device to re establish the failed push notification channel . The lookup component when executed by the processor causes the processor to obtain from the cloud service the session information based on the user identifier . The rehydration component when executed by the processor causes the processor to re establish the session containing the push notification channel based on the session information obtained by the lookup service component using the user identifier .

Further the request received by the communications interface component may identify the set of active applications associated with the user computing device . The rehydration component when executed by the processor re establishes push notification channels for only the active applications identified in the set of active applications.

Referring next to an exemplary sequence diagram illustrates communication among the user computing device the proxy service and the cloud service to rehydrate a session in a push environment. In the example of the user computing device attempts to re establish push notification channels by sending a request to the proxy service via a function call Reconnect . This function call may be part of an application programming interface API provided by the proxy service . An argument for the Reconnect function call includes the user identifier in some embodiments. The proxy service obtains session information associated with the request by sending the user identifier to the cloud service as an argument in a function call LookupSession . Responsive to the LookupSession function call the cloud service determines and provides the session information to the proxy service . The proxy service rehydrates the sessions via RehydrateSession or another function call. Rehydrating the session results in session state being copied to the proxy service and or repopulated into memory associated with a session manager associated with the proxy service to re establish the push notification channels .

After rehydrating the session the proxy service informs the cloud service of session state via a function call UpdateState Connected for example. Other exemplary session states include disconnected and inactive. The proxy service also informs the user computing device of the rehydrating via a function call ReconnectResponse .

In some embodiments the proxy service represented in includes a session manager and a lookup service. In such embodiments the session manager executes the configuration component and the rehydration component from while the lookup service executes the lookup component .

Referring next to an exemplary flow chart illustrates operation of the proxy service to deliver notifications to user computing devices based on a user identifier determined from a session identifier . In the example of the push notification channels are established. If the proxy service receives a notification from one of the application services at for delivery to at least one of the user computing devices the proxy service determines a session identifier associated with the notification at . In some embodiments the received notification includes a user identifier e.g. part of the GUID or elsewhere in a header of the notification . The proxy service determines the session identifier based on the user identifier . For example the proxy service may communicate with the cloud service or the second memory area to obtain the session identifier .

Using the session identifier the proxy service obtains the session information associated with the notification at . For example the proxy service may communicate with the cloud service or the second memory area to obtain the session information . Using the session identifier and or other session information the proxy service stores the notification in the appropriate queue at for eventual delivery to the destined user computing devices .

The proxy service uses the obtained session information to determine how to deliver the received notification. Further at the proxy service identifies the user computing devices to receive the notification. For example the proxy service may communicate with the cloud service or the second memory area to determine a set of user computing devices associated with the user identifier or the session identifier .

The proxy service delivers the notification from the queue to the identified set of user computing devices at via the push notification channels as described by the session information .

At least a portion of the functionality of the various elements in may be performed by other elements in or an entity e.g. processor web service server application program computing device etc. not shown in .

In some embodiments the operations illustrated in and may be implemented as software instructions encoded on a computer readable medium in hardware programmed or designed to perform the operations or both. For example aspects of the disclosure may be implemented as a system on a chip.

While no personally identifiable information is tracked by aspects of the disclosure embodiments have been described with reference to data monitored and or collected from users. In such embodiments notice is provided to the users of the collection of the data e.g. via a dialog box or preference setting and users are given the opportunity to give or deny consent for the monitoring and or collection. The consent may take the form of opt in consent or opt out consent.

Exemplary computer readable media include flash memory drives digital versatile discs DVDs compact discs CDs floppy disks and tape cassettes. By way of example and not limitation computer readable media comprise computer readable storage media and communication media. Computer readable storage media store information such as computer readable instructions data structures program modules or other data. Computer readable storage media exclude propagated data signals. Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media.

Although described in connection with an exemplary computing system environment embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to mobile computing devices personal computers server computers hand held or laptop devices multiprocessor systems gaming consoles microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Embodiments of the invention may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. The computer executable instructions may be organized into one or more computer executable components or modules. Generally program modules include but are not limited to routines programs objects components and data structures that perform particular tasks or implement particular abstract data types. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

Aspects of the invention transform a general purpose computer into a special purpose computing device when configured to execute the instructions described herein.

The embodiments illustrated and described herein as well as embodiments not specifically described herein but within the scope of aspects of the invention constitute exemplary means for associating session information in the push environment with a user and exemplary means for the proxy service to re establish the push notification channels using session information corresponding to the user identifier said session information stored separately from the proxy service .

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Having described aspects of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of aspects of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

