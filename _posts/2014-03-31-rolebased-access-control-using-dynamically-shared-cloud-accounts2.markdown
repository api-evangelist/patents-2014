---

title: Role-based access control using dynamically shared cloud accounts
abstract: A server computer system within a network of an organization receives a request from a user to access a cloud account. The request includes a user identifier. The server computer system authenticates the user for access to the cloud account based on the user identifier, identifies one or more predetermined roles associated with the cloud account for the user, and identifies one or more pseudo accounts associated with the cloud account. The server computer system further maps the user to the one or more pseudo accounts, and provides user access to the cloud account based on the mapping and with access privileges corresponding to the one or more pseudo accounts.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09571479&OS=09571479&RS=09571479
owner: Symantec Corporation
number: 09571479
owner_city: Mountain View
owner_country: US
publication_date: 20140331
---
This application is a continuation of U.S. patent application Ser. No. 13 463 612 filed May 3 2012 which is related to and claims the benefit of U.S. Provisional Patent Application No. 61 482 189 filed May 3 2011 both of which are hereby incorporated by reference herein.

Embodiments of the present disclosure relate to cloud accounts and more particularly to a technique of role based access control using dynamically shared cloud accounts.

A business corporation and or company is commonly referred to as an Enterprise. Cloud computing is generally becoming the platform of choice for Enterprises that want to reduce operating expenses and be able to scale resources rapidly. Clouds may be provided by different cloud providers to provide Enterprises access of computing resources over a computer network. Clouds can provide Software as a service SaaS sometimes referred to as on demand software to various Enterprises. SaaS is a software delivery model in which software and its associated data are hosted centrally typically in a cloud and are accessed by user using for example a web browser over the Internet. SaaS has become a common delivery model for most business applications such as customer relationship management CRM .

Many SaaS providers price their services based on the number of Enterprise users accessing their various business applications e.g. CRM applications . With such a pricing model Enterprise may incur unwarranted costs if not all of the accounts that are being paid for are being used fully. For example in an Enterprise not all employees may use the travel application provided by a SaaS provide at the same time. Nonetheless many Enterprises pay for an account for each employee and the SaaS provider bills the Enterprise for all the active accounts regardless of use.

SaaS is a cloud service and has its own specification of roles and permissions. Application programming interfaces APIs associated with SaaS may not be generic and vary from provider to provider. As a result a setup on one particular SaaS may therefore be different than a setup on another SaaS. Therefore role based access control may be difficult to implement especially across multiple SaaS or cloud service platforms. In view of the foregoing it may be understood that there may be significant problems and shortcomings associated with conventional role based access control technologies as applied to SaaS infrastructure.

In one embodiment a system for providing role based access control using dynamic shared accounts is described. An exemplary system may include a memory and a processor that is coupled to memory. In one embodiment the system within a network of an organization receives a request from a user to access a cloud account. The request includes a user identifier of the user. The system authenticates the user for access to the cloud account based on the identifier. The system identifies one or more predetermined roles associated with the cloud account for the user. The system further identifies one or more pseudo accounts associated with the cloud account. The pseudo accounts define one or more slots associated with the one or more predetermined roles for the cloud account. Access privileges to the cloud account correspond to the one or more pseudo accounts. The system further maps the user to the one or more pseudo accounts. The mapping includes matching the one or more predetermined roles for the user with the one or more pseudo accounts. The system to provide the user access to the cloud account based on the mapping and with the access privileges corresponding to the one or more pseudo accounts.

In one embodiment the cloud account is a shared Software as a Service SaaS account. In one embodiment the user identifier includes a user password. In one embodiment authenticating the user includes providing a single sign on access to at least the cloud account wherein the single sign on access uses the user identifier.

In one embodiment mapping the user to the one or more pseudo accounts comprises a dynamic mapping wherein the dynamic mapping comprises performing an action in the event the one or more pseudo accounts are unavailable. In another embodiment the action includes at least one of notifying the user of the unavailability of the one or more pseudo accounts halting the mapping action or determining availability of one or more other pseudo accounts of equal or lesser access privileges and mapping the user to the one or more other pseudo accounts.

In one embodiment the system receives an additional request for access to an other cloud account. The request includes the user identifier. The system authenticates the user for access to the other cloud account based on a single sign on access to the other cloud account. The system further identifies one or more predetermined roles associated with the other cloud account for the user. The system identifies one or more pseudo accounts associated with the other cloud account. The access privileges to the other cloud account correspond to the one or more pseudo accounts. The system maps the user to the one or more pseudo accounts. The mapping includes matching the one or more predetermined roles associated with the other cloud account for the user with one or more pseudo accounts associated with the other cloud account. The system further to provide the user access to the cloud account based on the mapping and with the access privileges to the other cloud account corresponding to the one or more pseudo accounts associated with the other cloud account.

In additional embodiments methods for performing the operations of the above described embodiments are also implemented. Additionally in embodiments of the present disclosure a non transitory computer readable storage medium stores methods for performing the operations of the above described embodiments.

Embodiments of the invention are directed to a method and system for providing dynamically shared cloud accounts. A computing system identifies shared cloud accounts of a cloud that are created for an entity e.g. an organization . The computing system resides outside of the cloud. The number of shared cloud accounts is less than a number of users of the entity e.g. Enterprise that use the cloud. The computing system determines that one of the users is authorized to use any of the shared cloud accounts in response to a determination that identity information of the user is valid. The computing system receives a request from the user to access the cloud and determines whether one of the shared cloud accounts is available to be assigned to the user. The computing system adds the request to a queue based on a determination that none of the shared cloud accounts is available and assigns one of the cloud accounts to the user based on a determination that one of the shared cloud accounts is available.

Embodiments of the invention provide costs savings for an organization by providing an infrastructure to allow the organization to setup fewer cloud accounts at the cloud.

The user devices can be portable computing devices such as and not limited to laptop or tablet computers cellular telephones e.g. smartphones personal digital assistants PDAs portable media players netbooks and the like. The user devices can be non portable computing devices such as and not limited to desktop computers set top boxes associated with a television gaming consoles and so on. The user devices can be variously configured with different features to enable access to the various cloud services made available by the clouds . A user device can host a cloud access tool to access the clouds . Examples of a cloud access tool include and are not limited to a desktop web browser a mobile device web browser a mobile device application a cloud connector plugin e.g. cloud email connector plugin a link e.g. URL in an email etc.

A cloud can provide one or more cloud services to Enterprise environments using cloud computing. An enterprise as referred to herein can represent any organization including for example a business organization such as a corporation an educational institution such as a college and university etc. The cloud can use a Software as a Service SaaS model in which cloud computing companies provide software functionality for example to Enterprise users on a subscription basis. A cloud can include one or more server computing systems to implement the SaaS model. The server computing systems are controlled by a cloud service provider and not an enterprise. Examples of cloud services are business applications running on the cloud and including for example accounting collaboration customer relationship management CRM enterprise resource planning ERP invoicing human resource management HRM content management CM and service desk management.

Each enterprise environment can include a dynamic account provisioner to manage the dynamic sharing of shared cloud accounts amongst users in a corresponding Enterprise environment . In one embodiment the dynamic account provisioner includes an identity provider module to authenticate the identity of users for access to the cloud services . In one embodiment the dynamic account provisioner and identity provider module reside on the same machine e.g. server computers desktop computers etc. . In another embodiment the dynamic account provisioner and identity provider module reside on the separate machines e.g. server computers desktop computers etc. . The identity provider module may be maintained by an Enterprise e.g. business company . In another embodiment the identity provider module may be maintained by a third party. The identity provider module can be a Single Sign On SSO system. The SSO system can allow a user to login to a corresponding local Enterprise network using a single set of credentials and have access according to access policies to the cloud services provided by the clouds without having to individually login to each cloud service . The identity provider module can be configured to communicate with a provisioning interface e.g. SSO interface Security Assertion Markup Language SAML interface at the clouds .

The dynamic account provisioner can determine the number of shared cloud accounts to be created for an entity e.g. Enterprise at the cloud . A shared cloud account is a cloud account that can be assigned to different users at different times. For example there are two shared cloud accounts Account X and Account Y and there are six users User A User B User C User D User E and User F. When either Account X or Account Y is available the account can be assigned to any of the users. The number of shared cloud accounts is less than the number of Enterprise users for a corresponding Enterprise environment that use the cloud service . The dynamic account provisioner can use an allocation algorithm to assign a shared cloud account to a user based on the availability of the shared cloud accounts.

The creation module can determine the number of shared cloud accounts that should be created at a cloud for an entity e.g. Enterprise . The number of shared cloud accounts that should be created at the cloud is less than the number of entity users that use the cloud. The creation module can determine a user load representing the number of entity users that use the cloud. The user load can be represented as a percentage. The creation module can use heuristics to determine the number of shared cloud account that should be created. An example of a heuristics can include and is not limited to a ratio of n shared cloud accounts that should be created to the m number of entity users that use the cloud that is sufficient to handle the user load. For example n m c where c is the user load.

The creation module can create and store account data in a data store that is coupled to the dynamic account provisioner . The account data can indicate the shared cloud accounts that are created for a cloud. The account data can include data for any number of clouds and shared cloud accounts. The account data can include an account identifier for each shared cloud account. A data store can be a persistent storage unit. A persistent storage unit can be a local storage unit or a remote storage unit. Persistent storage units can be a magnetic storage unit optical storage unit solid state storage unit electronic storage units main memory or similar storage unit. Persistent storage units can be a monolithic device or a distributed set of devices. A set as used herein refers to any positive whole number of items.

The identity provider module can determine whether a user is validated to access a cloud based on whether the user can successfully login to an entity e.g. Enterprise network. The identity provider module can determine that if a user can successfully login to the entity network the user is authorized to use any of the shared cloud accounts to access a cloud. A user can log into the identity provider module via user credentials. The identity provider module can authenticate users via first factor credentials e.g. usernames passwords and or second factor credentials such as one time password OTP a digital certificate e.g. public key infrastructure PKI certificate a fingerprint etc. The identity provider module can manage the user credentials in an identity data store that is coupled to the identity authentication system for user authentication. The identity data store can be a directory e.g. Active Directory Lightweight Data Access Protocol LDAP directory that stores the user credentials for a corresponding enterprise environment.

The identity provider module can receive a request from a cloud to validate the identity of a user that is assigned to a shared cloud account. The identity provider module can validate the user identity and provide identity information indicating whether the user identity is valid and or the user identity itself to the cloud. The identity provider module can use a federated identity protocol such as and not limited to Security Assertion Markup Language SAML and OpenID to provide the identity information to the cloud. One embodiment of providing identity information of a user to a cloud via a federated identity protocol is described in greater detail below in conjunction with .

The assignment module can receive a request for access to a cloud and can assign an available shared cloud account to a user that has been authenticated by the identity provider module . The assignment module can provide a shared cloud account identifier to a cloud. In one embodiment the assignment module selects an available shared cloud account to assign to the user based on an allocation algorithm. An example of an allocation algorithm can include and is not limited to a round robin algorithm. The assignment module can place a request in a queue if there is not a shared cloud account that is available. In one embodiment the assignment module creates and stores assignment data in the data store . The assignment data can indicate which user is assigned to which shared cloud account. The assignment data can a user identifier mapped to a shared cloud account identifier and a corresponding access start time indicator and access end time indicator.

At block processing logic determines a user load representing the number of entity users that use the cloud. The user load can be represented as a percentage. Processing logic can receive user input indicating the user load. For example processing logic receives user input indicating a user load of 10 that represents a percentage of Enterprise users that may use an expense reporting cloud service. An Enterprise may have 200 employees. The number of employees that travel and may incur travel expenses may be 50 employees. Multiple administrative assistants may handle the expense reporting for more than one employee. The user load of 10 can be an estimate that represents the percentage of Enterprise users that use the expense reporting cloud service.

At block processing logic determines a number of shared cloud accounts to create at a cloud for an entity e.g. Enterprise based on the user load. The number of shared cloud accounts to create at the cloud is less than the number of entity users. For example if the Enterprise has 200 users and the user load is 10 processing logic may determine the number of shared cloud accounts that should be created in order to handle the user load of 10 . Processing logic may determine the number of shared cloud accounts that should be created is at least 20 and less than 200. At block processing logic requests the cloud to create the shared cloud accounts based on the number and stores account data for the shared cloud accounts at block . The account data can include an account identifier for each shared cloud account.

At block processing logic determines that a user is authorized to use any of the shared cloud accounts for the clouds. For example processing logic can determine that if a user can successfully login to the entity e.g. Enterprise network via user credentials the user is authorized to use any of the shared cloud accounts to access a cloud. At block processing logic receives a user request to access a cloud. For example a user logs into the Enterprise network and selects a user interface UI element e.g. button icon link etc. to request access to a particular cloud.

At block processing logic determines whether any of the shared cloud accounts for the requested cloud are available to be assigned to the user. Processing logic can be coupled to a data store that stores assignment data indicating the available shared cloud accounts for each cloud that can be assigned to a user. If none of the shared cloud accounts for the requested cloud are available block processing logic adds the request to a queue at block . Processing logic returns to block to determine whether any of the shared cloud accounts for the requested cloud are available to be assigned to the user.

In one embodiment processing logic monitors the time of each session for the assigned shared cloud accounts and ends the session for the shared cloud account that has the most time elapsed to make it available for the next request. In another embodiment if there is a request in the queue processing logic ends the session of a shared cloud account that satisfies a time threshold. The time threshold can be a configurable value. The time threshold can be user defined. For example the time threshold may be 30 minutes.

For example there are 10 shared cloud accounts for Cloud A. Processing logic has provisioned the 10 shared cloud accounts to 10 Enterprise users. Processing logic may receive a request from an 11Enterprise user requesting access to Cloud A. Processing logic can add the request for the 11Enterprise user to a queue. Processing logic can identify which of the 10 shared cloud accounts has the longest session and can end the identified session to make it available for the request in the queue.

If a shared cloud account is available block processing logic assigns the available shared cloud account to the user at block . Processing logic can use an allocation algorithm to assign the shared cloud account to the user. An example of an allocation algorithm is a round robin algorithm. At block processing logic creates and store assignment data indicating the user and the shared cloud account that is assigned to the user. The assignment data can include a user identifier a shared cloud account identifier an access start time indicator an access end time indicator.

At block processing logic receives a request from a cloud to validate the identity of a user that is assigned to a shared cloud account. The request can include a shared cloud account identifier. The request can include a user identifier. The request can be received via a federated identity protocol. A federated identity protocol can provide a framework for exchanging security information. Examples of a federated identity protocol can include and are not limited to Security Assertion Markup Language SAML and OpenID. At block processing logic validates the identity of the user based on the data in the request. Processing logic can use a federated identity protocol to validate the user. For example processing logic can provide a user a GUI requesting for user input of user credentials e.g. username and password . Processing logic can receive the credentials and verify whether the credentials are valid. If the credentials are valid processing logic provides an identity token indicating the validated identity of the user to the cloud at block . The identity token can be a Security Assertion Markup Language assertion or an OpenID identifier. The cloud can use the identity token to directly communicate with the user via the user device. If the credentials are not valid processing logic can provide the cloud a notification indicating the user is not validated.

With reference to computer system of cursor control device network interface device or some other method may be used to provide connectivity from one or more of client systems and to network . Client systems and may be able to access information on server A or B or one of storage devices A N B N and or N using for example a web browser or other client software not shown .

Networks and may be local area networks LANs wide area networks WANs the Internet cellular networks satellite networks or other networks that permit communication between clients servers and other devices communicatively coupled to networks and . Networks and may further include one or any number of the exemplary types of networks mentioned above operating as a stand alone network or in cooperation with each other. Networks and may utilize one or more protocols of one or more clients or servers to which they are communicatively coupled. Networks and may translate to or from other protocols to one or more protocols of network devices. Although networks and are each depicted as one network it should be appreciated that according to one or more embodiments networks and may each comprise a plurality of interconnected networks.

Storage devices A N B N and or N may be network accessible storage and may be local remote or a combination thereof to server A or B. Storage devices A N B N and or N may utilize a redundant array of inexpensive disks RAID magnetic tape disk a storage area network SAN an internet small computer systems interface iSCSI SAN a Fibre Channel SAN a common Internet File System CIFS network attached storage NAS a network file system NFS optical based storage or other computer accessible storage. Storage devices A N B N and or N may be used for backup or archival purposes.

According to some embodiments clients and may be smartphones PDAs desktop computers a laptop computers servers other computers or other devices coupled via a wireless or wired connection to network . Clients and may receive data from user input a database a file a web service and or an application programming interface.

Servers A and B may be application servers archival platforms backup servers network storage devices media servers email servers document management platforms enterprise search servers or other devices communicatively coupled to network . Servers A and B may utilize one of storage devices A N B N and or N for the storage of application data backup data or other data. Servers A and B may be hosts such as an application server which may process data traveling between clients and and a backup platform a backup process and or storage. According to some embodiments servers A and B may be platforms used for backing up and or archiving data. One or more portions of data may be backed up or archived based on a backup policy and or an archive applied attributes associated with the data source space available for backup space available at the data source or other factors.

According to some embodiments clients and or may contain one or more portions of software for providing role based access control using dynamically shared cloud accounts such as for example account management module . As illustrated one or more portions of account management module may reside at a network centric location. For example server A may be a server a firewall a gateway or other network element that may perform one or more actions to provide role based access control using dynamically shared cloud accounts. According to some embodiments network may be an external network e.g. the Internet and server A may be a gateway or firewall between one or more internal components and clients and the external network.

Account management module may provide among other things role based access control RBAC for Software as a Service SaaS or a cloud computing model for an enterprise. On the SaaS provider side at least one account may be setup. Each of the at least one accounts may be setup with specific permissions for a designated role in the organization. Furthermore each account may be pre configured with variable access rights for one or more users.

When a user logs in to access one or more features of one or more SaaS account management module may be responsible for single sign on user identification authentication and authorization for all the users. For example account management module may not only grant access to the user e.g. via single sign on but also provision a particular account to one or more SaaS providers associated with the account management module . Based on the role and responsibility of the user in an organization or company the user may be dynamically provisioned to any one of the preconfigured user accounts. Thus the access of the user on the SaaS application may be accessible and or restricted based on role and his permissions.

Accordingly account management module may integrate role based access control throughout an organization without dependency on the SaaS provider and or specific implementation requirements of the SaaS. By dynamically mapping each of a plurality of users to one or more accounts for one or more of the various roles created for one or more SaaS role based access control using dynamically shared cloud accounts may be provided to a SaaS applications on the cloud through federated identity management.

The description below describes network elements computers and or components of a system and method for providing role based access control using dynamically shared cloud accounts that may include one or more modules. As used herein the term module may be understood to refer to computing software firmware hardware and or various combinations thereof. Modules however are not to be interpreted as software which is not implemented on hardware firmware or recorded on a processor readable recordable storage medium i.e. modules are not software per se . It is noted that the modules are exemplary. The modules may be combined integrated separated and or duplicated to support various applications. Also a function described herein as being performed at a particular module may be performed at one or more other modules and or by one or more other devices instead of or in addition to the function performed at the particular module. Further the modules may be implemented across multiple devices and or other components local or remote to one another. Additionally the modules may be moved from one device and added to another device and or may be included in both devices.

Role based access control module may request creation of one or more accounts with one or more SaaS. Role based access control module may create one or more profiles. Each of the one or more profiles may provide permissions for either a specific object or a set of objects. For each role that represents a specific job function role based access control module may assign a specific set of permissions profile applicable to that role. For each role role based access control module may create at least one account on the SaaS provider. It should be appreciated that many accounts may be created for a particular role to enable multiple users to login at the same time. As used herein these accounts may be referred to as pseudo accounts. In effect one or more pseudo accounts may serve as one or more slots associated with a particular role for an account at the SaaS provider.

In some embodiments a user may have hold one role for a specific application. Here when the user switches application the user may assume a different role and may perform an action specific to that role. However this may not always be the case.

In some embodiments roles for each pseudo account may differ for each user across various applications. For example an employee may have employee level access in one SaaS application and may be a system administrator for another SaaS application.

One benefit with role based access control using dynamically shared cloud accounts across multiple applications may be that if any updates to the various roles needed to occur access privileges may be adjusted through adjustments in the pseudo account level. Any user associated with that particular role would receive a corresponding change in accessibility and privilege to their user account. This may provide greater flexibility efficiency and reliability.

Identity module may provide a user interface to a plurality of users in an organization. For example rather than directly logging in to an individual account at the SaaS application a user may log into via this user interface. Identity module may provide among other things various features including but not limited to single sign on user identification authentication and authorization and or role based verification.

One benefit with using identity module may be that users seeking access to one or more SaaS applications may be allowed e.g. via a single sign on procedure to access one or more accounts on a plurality of SaaS applications without logging in multiple times. Again this may provide greater flexibility and efficiency.

Dynamic account mapping module may map each user who logs in via identity module to one or more pseudo accounts. Mapping to these pseudo accounts may be dynamic. As described above since there may be a limited number of pseudo account created for each role at each SaaS dynamic account mapping module may be able to assign one or more users to access to each SaaS based on an availability of each pseudo account or take other priority measures.

Error logging and reporting module may produce logs reports or other information associated with providing role based access control using dynamically shared cloud accounts.

For example SaaS may be a sales service such as SalesForce.com SaaS may be an accounting service such as Concur Expense Reporting and SaaS N may be a GoogleDocs document service where N may be an integer. There may be accounts created at SaaS with the following corresponding roles R R and R . R may be directed to a sales manager role R may be directed to a sales representative role and R may be directed to public view role. There may be accounts created at SaaS with the following corresponding roles R R and R . R may be directed to a finance role R may be directed to a manager role and R may be directed to an employee role. There may be accounts created at SaaS with the following corresponding roles RN RN and R . RN may be directed to a full editor role RN may be directed to a partial editor role and RN n may be directed to read only role where n may be an integer.

When a user Ulogs in via the account management module user Umay have sales manager privileges at SaaS finance privileges at SaaS and full editor access at SaaS N. In this example user Umay be an executive at a particular corporation who has full or almost full access to all the SaaS applications.

User Umay also log in via the account management module . While user Umay have sales manager access to SaaS user Umay have only employee access in SaaS and partial editor access in SaaS N. As a result depending on an employee s role in an organization his or her user level access to one or more SaaS applications may be preconfigured accordingly in the accounts management module .

User Umay also log in at the same time that user Uand user Uare logged in. In one scenario Umay also have sales manager privileges to SaaS . However since user Uand user Uare already logged in to the only two pseudo accounts created for that role R user Umay not have access to SaaS as a sales manager at that time. In some embodiments user Umay be denied access. In other embodiments user Umay be asked to wait. In yet other embodiments user Umay be granted access to another role that would provide equal or lesser access privileges than R . For example user Umay be offered access to R instead. Here user Umay accept since user Umay only need to access information on SaaS that both sales managers and sales representatives can access. Therefore account management module may provide dynamic mapping to the one or more shared cloud accounts for each of the plurality of SaaS applications.

At block the method may begin. At block a request from a user may be received at the account management module . The request may be for access to one or more Software as a Service SaaS accounts. The request may include a user identifier password and or other identifier.

At block the account management module may authenticate the user using a variety of authentication techniques. For example the user may be authenticated based on one or more profiles associated with data associated with the user e.g. user identifier password and or other identifier. In addition authentication one or more predetermined roles associated with one or more accounts of the SaaS may be identified.

At block the account management module may identify one or more pseudo accounts corresponding to the one or more predetermined roles for mapping the user to the one or more pseudo accounts. In some embodiments availability of the one or more pseudo accounts may be determined . If for example the one or more pseudo accounts are not available for mapping e.g. because the one or more pseudo accounts are being accessed by other users in the organization at the time of the request mapping mapping the user to the one or more pseudo accounts may halt and continue at a later time. In some embodiments other available pseudo accounts corresponding to other equal or lesser roles may be made available to the user. In other embodiments the user may simply be denied access to the account and would try mapping later.

At block the account management module may map the user to the one or more pseudo accounts in the event the one or more pseudo accounts are available for mapping. As discussed above in some cases the account management module may map the user to another pseudo account with equal or lesser privileges if the pseudo account corresponding to the predetermined roles is unavailable.

At block the account management module may provide access to the one or more Software as a Service accounts based on the mapping of the user to the one or more pseudo accounts corresponding to the one or more predetermined roles of the user. At block the method may end.

At block one or more roles for the at least one account may be created. These roles may also have preconfigured rules and privileges based on needs of an organization s policies and roles of its users. In some embodiments this may be achieved using the account management module .

At block at least one pseudo account corresponding to each of the one or more roles may be created. In some embodiments this may be achieved using the account management module . At block at least one of the one or more roles may be assigned to a user for dynamically mapping the user to at least one pseudo account for access to the one or more SaaS account based on the one or more roles. In some embodiments this may be achieved using the account management module . At block the method may end.

The exemplary computer system includes a processing device processor a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM double data rate DDR SDRAM or DRAM RDRAM etc. a static memory e.g. flash memory static random access memory SRAM etc. and a data storage device which communicate with each other via a bus .

Processor represents one or more general purpose processing devices such as a microprocessor central processing unit or the like. More particularly the processor may be a complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor or a processor implementing other instruction sets or processors implementing a combination of instruction sets. The processor may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. The processor is configured to execute instructions for performing the operations and steps discussed herein.

The computer system may further include a network interface device . The computer system also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The data storage device may include a computer readable storage medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting computer readable storage media. The instructions may further be transmitted or received over a network via the network interface device .

In one embodiment the instructions include instructions for a dynamic account provisioner e.g. dynamic account provisioner of and or an account management module e.g. account management module of and or a software library containing methods that call the dynamic account provisioner and or account management module. While the computer readable storage medium machine readable storage medium is shown in an exemplary embodiment to be a single medium the term computer readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention. The term computer readable storage medium shall accordingly be taken to include but not be limited to solid state memories optical media and magnetic media.

In the foregoing description numerous details are set forth. It will be apparent however to one of ordinary skill in the art having the benefit of this disclosure that the present invention may be practiced without these specific details. In some instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring the present invention.

Some portions of the detailed description have been presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as identifying determining receiving adding assigning verifying providing or the like refer to the actions and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical e.g. electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

For simplicity of explanation the methods are depicted and described herein as a series of acts. However acts in accordance with this disclosure can occur in various orders and or concurrently and with other acts not presented and described herein. Furthermore not all illustrated acts may be required to implement the methods in accordance with the disclosed subject matter. In addition those skilled in the art will understand and appreciate that the methods could alternatively be represented as a series of interrelated states via a state diagram or events. Additionally it should be appreciated that the methods disclosed in this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methods to computing devices. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device or storage media.

Certain embodiments of the present invention also relate to an apparatus for performing the operations herein. This apparatus may be constructed for the intended purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions.

Reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. Thus the appearances of the phrase in one embodiment or in an embodiment in various places throughout this specification are not necessarily all referring to the same embodiment. In addition the term or is intended to mean an inclusive or rather than an exclusive or. Moreover the words example or exemplary are used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Rather use of the words example or exemplary is intended to present concepts in a concrete fashion.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. The scope of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

