---

title: Breach detection-based data inflation
abstract: A method and apparatus for deterring exfiltration of data from are provided. In the method and apparatus, it is determined that data is to be inflated. A request for access to data is received and data responsive to the request is retrieved. Spurious data is also generated and provided together with the responsive data in response to the request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09591023&OS=09591023&RS=09591023
owner: Amazon Technologies, Inc.
number: 09591023
owner_city: Seattle
owner_country: US
publication_date: 20141110
---
Computer systems can become subject to attacks where an unauthorized party attempts to gain access to data stored by a computer system. An attacker may seek to obtain data to be exfiltrated and used to the attacker s benefit. Attacks may target financial data such as credit card numbers or the attacks may be part of an industrial espionage operation where trade secrets design documents or specifications may be retrieved. Attacks on computer systems present challenges to operators of computer systems whereby despite advances in data security the attacks still occur with alarming frequency. Furthermore these attacks even when unsuccessful have adverse economic impacts on individuals and organizations alike. The attacks can force organizations to suspend their operations for periods of time. In addition attacks directed towards identity theft or the financial information of an organization s customer may be very costly to the organizations.

It is challenging to have a method for protecting data stored in a data storage system. Furthermore it is also challenging to protect that data while ensuring uninterrupted access to the data by parties having an authorization to access the data.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein include protecting data stored in a data store or another type of data vending system. Access to the data may be limited to parties such as users who have a privilege to access the data. For example access to the data store may be governed by an access policy that dictates an access privilege required to obtain the data or cause the data to be retrieved from the data store. The data store which may be one or more hard drives or solid state drives may be breached in the unlikely event that an attacker defeats security measures already in place. Due to the breach a party lacking a privilege to access the data store such as an attacker may be enabled to retrieve data from the data store.

In response to detecting the breach the data retained in the data store may be inflated. Inflating the data may include increasing the size of the data by adding additional data. The additional data also referred to herein as spurious data may be produced or manufactured to appear genuine or authentic while at the same time being phony or bogus . The spurious data may be generated to have attributes of the data retained by the data store. The spurious data may have the same data type or structure for example schema as that stored by the data store. For example if the data store stores geolocation data specifying a route between two geographic points the spurious data may be generated to represent a route between two geographic points. However both the route and the two geographic points of the spurious data may be selected randomly or based at least in part on an algorithm for the purpose of appearing genuine. Similarly if the data store stores credit card numbers of customers the spurious data may have the characteristics of a credit card number such as the number of digits and meeting a requisite validity check. However the generated credit card number may not have been issued by a financial institution and may not be usable as a payment instrument. Because the spurious data has the same characteristics as the data retained in the data store the spurious data may deceive an attacker and may become indistinguishable from the data the attacker seeks to obtain.

Following detecting that a data store has been breached the spurious data may be generated. Further if a request to access data retained by the data store is received both data that is responsive to the request and the spurious data may be provided. The responsive data may meet one or more criteria specified in the request. However certain attacks may seek to perform a data dump and retrieve all the data retained in a data store. In addition the size of the spurious data may be larger than the volume of the responsive data. For example the ratio of the size of the spurious data to the size of responsive data may be over ten one hundred or one thousand. Increasing the size of the spurious data lowers the likelihood that a randomly selected data record from the combination of responsive data and the spurious data is genuine.

The spurious data may be generated to have one or more distinguishing attributes. The attributes may be provided to parties having an authorization to access the data. The authorization may be as a result of the party having access privilege to retrieve data from the data store and may be used by the parties to filter out the spurious data. However if access privileges are illegitimately obtained for example as a result of stealing access credentials then the party using the access credentials may not be authorized to access the data. The spurious data may be generated such that the application of a hash function to the spurious data or data records thereof results in a hash value of a set of hash values. The hash function and the set of values may be provided to parties having an authorization to retrieve data from the data store and may be used to identify the spurious data and recover the responsive data. Accordingly if the party makes a request for data access when a breach of the data store is detected and the party is provided with responsive data and the spurious data the party may recover the responsive data.

If breach of the data storage system is detected an inflated data set is generated as described herein whereby the inflated data set may include spurious data. Furthermore if the data storage system is breached data that is responsive to a request for access may be retrieved from the data store and provided to the requestor in combination with the inflated data set . As described herein the combination of the inflated data set and the responsive data may it difficult for an attacker to make use of the received data.

The data storage system may further be dedicated to store data pertaining to a single organization. The organization may be a health care provider a retailer such as an ecommerce retailer a financial services organization or a social media service provider among many others. The data storage system may store data that is sought to seized and exploited by attackers. In the unlikely event that an attacker defeats security measures already in place the attacker may attempt to exploit the data to their benefit.

The data may include trade secrets design documents medical data or sales data among others. Furthermore if the organization maintains records about its customers the records may be sought to be exploited. Personally identifiable information PII including names contact information and government identification ID numbers and information about payment instruments including credit card numbers gift card numbers or bank account information may also be subject to exploitation by attackers. In addition the organization may provide social media services to customers or may be an ecommerce retailer. The organization may maintain browsing history click stream data or purchase history of the customers among others and attackers may seek to obtain the data. In another example the organization may sell media including ebooks or downloadable music movies television series or device applications. Attackers may attempt to obtain the organization s library of media. Furthermore financial data including sales volumes or profits may also be exploited.

A breach detection system of the environment may detect that the data storage system is subject to an attack or is likely to be subject to an attack. For example a system may be breached if a malicious user has gained access to the system whereby the malicious user may pose as a legitimate user. The breach detection system may identify the attacker for example by an identity used by the attacker. Alternatively the breach detection system may only identify that an attack is occurring but may not identify the source of the attack or an identity used by the attacker to gain access to the data storage system .

In various embodiments it may be undesirable to disable the vending of data from the data storage system in response to breach detection. Disabling the retrieval of data from the data storage system may disrupt the operation of the organization. For example an ecommerce retailer may be unable to serve its customer or its service to customers may be hindered due to disabling the retrieval of data from the data storage system . Furthermore if an identity of an attacker is identified it may be desirable not to immediately disable the attacker s access to the data storage system as that would deny the opportunity to study the attacker or learn a profile of the attacker including the techniques used by the attacker to infiltrate or breach the data storage system . Furthermore disabling the system may alarm or fend off the attacker which may result in losing an opportunity to track the attacker or an origin of the attacker or cause the attacker to find a more fruitful way to breach the system.

In the unlikely event that an attacker defeats security measures already in place the breach detection system detects a data breach. While actively determining how to stop the breach and terminate an attacker s access data inflation may be performed. Upon detecting a breach the breach detection system sends an indication of the breach to the data storage system or the spurious data generation entity . The indication may be an electronic message containing instructions to perform data inflation.

Receipt of the indication by the data storage system or the spurious data generation entity may cause the spurious data generation entity to generate spurious data . The spurious data may be provided in a response to a request for data by the requestor . The spurious data may be provided together with data retrieved from a data store of the data storage system . The retrieved data is responsive to the request and providing the retrieved data in response to the request may fulfill the request . The spurious data may be used to inflate the volume of data provided in response to the request and may be many times the size of data that is responsive to the request . The combination of the spurious data and responsive data may overwhelm an attacker and render the retrieved data unusable. For example if the ratio of responsive data to spurious data is on the order of one thousand to one it will be improbable that a randomly selected data record from the combination of the responsive data and spurious data will be real.

Because the volume of the spurious data is many times that of the responsive data it may be desirable to ensure that providing the spurious data does not strain the bandwidth resources or data storage resources of the data storage system or associated organization. The spurious data may not be pre generated prior to receiving the request for the data and may instead be generated in real time or on the fly in response to receipt of the request for the data or detecting a breach. Furthermore because of the increased volume of traffic due to the spurious data the spurious data may be routed to an entity that is as close as possible to the requestor . As shown in the spurious data is routed to an interface used to provide data to the requestor .

The requestor may be a legitimate requestor having an authorization to access the requested data. The requestor as a legitimate requestor may be configured filter out the spurious data and extract the responsive data. The requestor may retain characteristics of the spurious data. The characteristics may include a hash value of the spurious data whereby the hash value may be expected to be obtained as a result of applying a hash function to the spurious data. Further the characteristics may include a signature associated with the spurious data. A data filtering entity of the requestor may utilize the characteristics to identify the spurious data. The data filtering entity may be an application that runs on the underlying computing resources of the requestor . The computing resources may include computational resources such as those provided by a central processing unit CPU of the requestor . The data filtering entity may evaluate received data including spurious data and responsive data. The evaluation may include applying a hash function to data records and evaluating a resultant hash value to determine whether it corresponds for example matches the characteristics of the spurious data. If a record is found to correspond to the characteristics the record may be discarded. Data that is not found to correspond to the characteristics may be determined to be responsive to the request and may therefore be retained and used by the requestor .

An illegitimate requestor such as an attacker lacking requisite authorization for accessing the data storage system may not have access to the characteristics of the spurious data. Accordingly the illegitimate requestor may not be configured to distinguish between the responsive data and the spurious data. Because the ratio of spurious data to responsive data may be high for example in the tens hundreds or thousands the probability of a randomly selected data record being responsive may be low. Accordingly without distinguishing or discriminating between the responsive data and the spurious data the received data may be unusable by a party lacking access to the characteristics of the spurious data .

It is noted that characteristics of the responsive data may also be used to filter out the spurious data. The characteristics may include the location or placement of the responsive data in a combination of the spurious data and the responsive data. For example if a plurality of data records are provided in response to a request the data records may be ordered such that the responsive data has a specific placement order or location. Information about the ordering of the data may be communicated to legitimate users and used to filter the spurious data. The spurious data may be customized depending on the identity of the attacker. For example the attacker may be profiled and the generation of the spurious data maybe dependent on the identity of the attacker. Furthermore watermarks active content or other identifying information may be placed in the spurious data to enable tracking of attacker.

The data storage system then receives from a requestor a request to retrieve data from the data storage system. The request to retrieve the data may be received following breach detection. The request may be a database query among others and may identify the data sought to be retrieved or specify one or more criteria for the requested. The request may be fulfilled by providing one or more data records that are identified by the request or that meet the one or more criteria. In addition the request may be an application programming interface API function call made to the data storage system or an interface thereof such as the interface described with reference to . It is noted that in various embodiments the requested data may be dynamically generated and may not be stored in a data store. Furthermore the request for data may be any type of query such as a database query and data that is responsive to the request may meet criteria specified in the query. The data storage system retrieves from the data storage system the requested data. Depending on the request the data may be a single data entry such as a database table entry or a plurality of entries such as the entire database. For example the request for data may be a request to retrieve the names and address associated with customer accounts for an organization or only accounts of customers that meet certain criteria.

The spurious data generation entity then generates spurious data in response to detecting the breach and receiving the request to retrieve the data. The spurious data may preferably be fictitious yet imitative of the requested and likely to be perceived as genuine for example by an attacker . The data storage system then provides the responsive data and spurious data to the requestor. Combining the responsive data and spurious data together may render the provided data unusable by an attacker. For example if the ratio of spurious data to responsive data that is payment instruments is one thousand to one it may become impractical for the attacker to use the received data as a large amount of trial an error would be required to identify the responsive or genuine data. Furthermore it increases the likelihood of exposing the attacker due to the attempt.

If an attacker s purpose is data theft the spurious data may be produced and formatted to appear genuine. Generating the spurious data may depend on the type or structure of the requested data. For example if the requested data is names of individuals publicly available databases including the popularity associated with first names and last names in geographic regions may be consulted. The spurious data may be generated by selecting first names and last names from the database and pairing the names for example randomly to form an individual s names. The selection of the names may be biased based at least in part on the popularity of the name within a region such that more popular names are more likely to be selected than less popular names. Similarly if the requested data are street or mailing addresses publicly available databases including street names and building numbers may be used to form an authentic looking address. The address may then be pairs with an appropriate city and zip code to form the address. In addition fictitious email addresses may also be generated.

Furthermore if the requested data is a government ID number or a payment instrument number such as a credit card number or a gift card code the numbers or codes may be randomly generated. The fabricated numbers or codes may filtered to ensure that they pass an appropriate validity check such as the Luhn check for credit card numbers to ensure that they are not easily filtered by an attacker. It is noted that even if a randomly generated credit card number passes the Luhn check the credit card number may still not be valid. Even if the number is valid the credit card number may not be used as a payment instrument unless other criteria are satisfied. The other criteria may include a proper expiration data or associated zip code which if also randomly generated are highly improbable to make the credit card number valid as a payment instrument.

If the data sought to be imitated is behavioral data such as browse or purchase history a recommendations engine may be used to generate the spurious data. The recommendations engine may be seeded with a randomly selected data point such as a popular webpage address or a popularly purchased item to generate the forged behavioral data. Furthermore if the data is medical data including standardized codes for diagnoses and procedures the codes may be generated randomly or using a training algorithm.

Fabricated text data such as that generated for specifications design documents or books may be generated by training a Markov chain using the genuine text. Generation using a Markov chain is advantageous in that the size of the generated text will likely be much greater than the genuine text. Furthermore forgeries of digital content such as audio or video files may be randomly generated. In addition geolocation data may be generated to appear plausible. For example routes to popular destinations such as restaurants store arenas or museums in the vicinity of a fictitious address may be generated. The geolocation data associated with an address may be generated based at least in part on seeding the fictitious address to a generation algorithm in order to give the geolocation data an authentic appearance.

The data storage system identifies a type of the requested data. The type may be a category of the data. As described herein the requested data may be a name an address an identity number a payment instrument code or a media file among others. A spurious data generation entity such as the spurious data generation entity described with reference to generates spurious data having the same type. As described herein the generation may be performed in a manner such that the spurious data may be perceived as being authentic. Following generating the spurious data the data storage system or another entity provides the spurious data together with the requested data to the requestor. It is noted that whereas some systems limit the size of data that is provided when a set of security measures protecting data is breached or limit access to the data the techniques described herein increase the size of the data that is provided. The size of the data that is provided or the number of data entries thereof is increased due to the addition of the spurious data or data entries thereof . Whereas limiting access to data in response to a breach protects the data from access by authorized and unauthorized parties alike increasing the size of the data makes it unlikely that an unauthorized party is able to identify and select responsive non spurious data from a combination of responsive and spurious data.

The spurious data generation entity generates the spurious data having the one or more characteristics and the indicated type. The spurious data generation entity then provides the spurious data for fulfilling a request for data access. The one or more characteristics may be used by a requestor to filter out the spurious data. For example a legitimate requestor that makes a request for data when a system breach is detected may receive both the requested data as well as the spurious data in response to the request. The legitimate requestor may be provided with the one or more characteristics and may use the characteristics to distinguish between the spurious data and the requested data. For example the requestor may ignore or discard received data that has the one or more characteristics. The generation of the spurious data may be performed using a template for the data that specifies structured records of data entries. Entries for a data record may be generated and a data record may constructed as specified in the template. It is noted that spurious data may be generated in response to either detection of a breach or receipt of a request to access the data. When the spurious data is generated in response to breach detection the spurious data may be stored and used when responding to a request for data access. Furthermore the spurious data may be pre generated prior to detecting a breach and may be stored for use in the event of breach detection.

The requestor identifies the spurious data based at least in part on the one or more characteristics. For example the requestor or another entity may apply a specified hash function to various records of the received data. The spurious data may be identified as having a specified hash value. Data that is responsive to the request for example that is retrieved from a data store and that is not provided as a result of data inflation may not have the one or more characteristics. It is noted false positives may occur whereby responsive data is discarded because it meets the one or more characteristics. The requestor then filters out the spurious data based at least in part on the identification.

Following detection of the breach the data set stored by the data storage system is inflated . Inflating the data set may include increasing the size of the data set by adding manufactured forged or fake data to the data set. The proportion of the size of spurious data to the size of the data stored in the data storage system may be a function of the type or characteristics of the stored data. For example payment information data may be inflated by a factor of one thousand to one whereas phone number information may be inflated by a factor of one hundred to one. Further as described herein various data generation algorithms may be used to generate the spurious data which may depend on the type of the spurious data. The data storage system then uses the inflated data set to fulfill requests to retrieve data from the data storage system. As described herein data that is responsive to a request to access the data set and retrieved from the data storage system may be combined with the manufactured data to fulfill requests for access to the data storage system. Furthermore legitimate users may be provided with characteristics of the spurious data or the responsive data. The characteristics may be used to filter out the spurious data and retrieve the responsive data from the combination.

The computing resource service provider may provide various computing resource services to its customers. The services provided by the computing resource service provider in this example include a virtual computer system service a block level data storage service and one or more other services . It is noted that not all embodiments described herein include the services described with reference to and additional services may be provided in addition to or as an alternative to services explicitly described herein. As described herein each of the services may include one or more web service interfaces that enable the customer to submit appropriately configured API calls to the various services through web service requests. In addition each of the services may include one or more service interfaces that enable the services to access each other e.g. to enable a virtual computer system of the virtual computer system service to store data in or retrieve data from one or more block level data storage devices provided by the block level data storage service .

The virtual computer system service may be a collection of computing resources configured to instantiate virtual machine instances on behalf of the customer . The customer may interact with the virtual computer system service via appropriately configured and authenticated API calls to provision and operate virtual computer systems that are instantiated on physical computing devices hosted and operated by the computing resource service provider . The virtual computer systems may be used for various purposes such as to operate as servers supporting a website to operate business applications or generally to serve as computing power for the customer. Other applications for the virtual computer systems may be to support database applications electronic commerce applications business applications and or other applications. Although the virtual computer system service is shown in any other computer system or computer system service may be utilized in the computing resource service provider such as a computer system or computer system service that does not employ virtualization or instantiation and instead provisions computing resources on dedicated or shared computers servers and or other physical devices.

The computing resource service provider may detect that the computing resource service provider or associated services are breached. For example an attacker may have access to databases or data stores of the computing resource service provider . In response to detecting the breach the computing resource service provider may cause its data stores to be inflated. For example if an attacker queries the identities or other information about the virtual computer systems instantiated by the virtual computer system service an inflated response to the query may be provided such that the attacker may not be able to discern genuine query results from forged query results. Furthermore to prevent the inflated data set from overwhelming the computing resource service provider or associated computing entities the query responses may not be trafficked throughout the computing resource service provider and instead may be provided using a closest endpoint to the attacker. For example the closest endpoint may be the interface .

The block level data storage service may comprise one or more computing resources that collectively operate to store data for a customer using block level storage devices and or virtualizations thereof . The block level storage devices of the block level data storage service may for instance be operationally attached to virtual computer systems provided by the virtual computer system service to serve as logical units e.g. virtual drives for the computer systems. A block level storage device may enable the persistent storage of data used generated by a corresponding virtual computer system where the virtual computer system service may only provide ephemeral data storage. Data inflation for the block level data storage service may be enabled in response to detecting a breach of the block level data storage service or the computing resource service provider .

The computing resource service provider additionally maintains one or more other services based at least in part on the needs of its customers . For instance the computing resource service provider may maintain a database service for its customers . A database service may be a collection of computing resources that collectively operate to run one or more databases for one or more customers . The customer may operate and manage a database from the database service by utilizing appropriately configured API calls. This in turn may allow a customer to maintain and potentially scale the operations in the database. Other services include but are not limited to object level archival data storage services services that manage and or monitor other services.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. Servers as used herein may be implemented in various ways such as hardware devices or virtual computer systems. In some contexts servers may refer to a programming module being executed on a computer system. As used herein unless otherwise stated or clear from context the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed virtual or clustered environment. The application server can include any appropriate hardware software and firmware for integrating with the data store as needed to execute aspects of one or more applications for the client device handling some or all of the data access and business logic for an application. The application server may provide access control services in cooperation with the data store and is able to generate content including but not limited to text graphics audio video and or other content usable to be provided to the user which may be served to the user by the web server in the form of HyperText Markup Language HTML Extensible Markup Language XML JavaScript Cascading Style Sheets CSS or another appropriate client side structured language. Content transferred to a client device may be processed by the client device to provide the content in one or more forms including but not limited to forms that are perceptible to the user audibly visually and or through other senses including touch taste and or smell. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the web server using PHP Hypertext Preprocessor PHP Python Ruby Perl Java HTML XML or another appropriate server side structured language in this example. It should be understood that the web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein. Further operations described herein as being performed by a single device may unless otherwise clear from context be performed collectively by multiple devices which may form a distributed and or virtual system.

The data store can include several separate data tables databases data documents dynamic data storage schemes and or other data storage mechanisms and media for storing data relating to a particular aspect of the present disclosure. For example the data store illustrated may include mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as page image information and access rights information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. The application server may provide static dynamic or a combination of static and dynamic data in response to the received instructions. Dynamic data such as data used in web logs blogs shopping applications news services and other such applications may be generated by server side structured languages as described herein or may be provided by a content management system CMS operating on or under the control of the application server. In one example a user through a device operated by the user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser. It should be noted however that embodiments of the present disclosure are not necessarily limited to the context of web pages but may be more generally applicable to processing requests in general where the requests are not necessarily requests for content.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed and or virtual computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop laptop or tablet computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network. These devices also can include virtual devices such as virtual machines hypervisors and other virtual devices capable of communicating via a network.

Various embodiments of the present disclosure utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as Transmission Control Protocol Internet Protocol TCP IP User Datagram Protocol UDP protocols operating in various layers of the Open System Interconnection OSI model File Transfer Protocol FTP Universal Plug and Play UpnP Network File System NFS Common Internet File System CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network a satellite network and any combination thereof.

In embodiments utilizing a web server the web server can run any of a variety of server or mid tier applications including Hypertext Transfer Protocol HTTP servers FTP servers Common Gateway Interface CGI servers data servers Java servers Apache servers and business application servers. The server s also may be capable of executing programs or scripts in response to requests from user devices such as by executing one or more web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Ruby PHP Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM as well as open source servers such as MySQL Postgres SQLite MongoDB and any other server capable of storing retrieving and accessing structured or unstructured data. Database servers may include table based servers document based servers unstructured servers relational servers non relational servers or combinations of these and or other database servers.

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU or processor at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other memory technology Compact Disc Read Only Memory CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected when unmodified and referring to physical connections is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. The use of the term set e.g. a set of items or subset unless otherwise noted or contradicted by context is to be construed as a nonempty collection comprising one or more members. Further unless otherwise noted or contradicted by context the term subset of a corresponding set does not necessarily denote a proper subset of the corresponding set but the subset and the corresponding set may be equal.

Conjunctive language such as phrases of the form at least one of A B and C or at least one of A B and C unless specifically stated otherwise or otherwise clearly contradicted by context is otherwise understood with the context as used in general to present that an item term etc. may be either A or B or C or any nonempty subset of the set of A and B and C. For instance in the illustrative example of a set having three members the conjunctive phrases at least one of A B and C and at least one of A B and C refer to any of the following sets A B C A B A C B C A B C. Thus such conjunctive language is not generally intended to imply that certain embodiments require at least one of A at least one of B and at least one of C each to be present.

Operations of processes described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. Processes described herein or variations and or combinations thereof may be performed under the control of one or more computer systems configured with executable instructions and may be implemented as code e.g. executable instructions one or more computer programs or one or more applications executing collectively on one or more processors by hardware or combinations thereof. The code may be stored on a computer readable storage medium for example in the form of a computer program comprising a plurality of instructions executable by one or more processors. The computer readable storage medium may be non transitory.

The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for embodiments of the present disclosure to be practiced otherwise than as specifically described herein. Accordingly the scope of the present disclosure includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the scope of the present disclosure unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

