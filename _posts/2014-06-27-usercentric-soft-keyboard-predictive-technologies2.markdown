---

title: User-centric soft keyboard predictive technologies
abstract: An apparatus and method are disclosed for providing feedback and guidance to touch screen device users to improve text entry user experience and performance by generating input history data including character probabilities, word probabilities, and touch models. According to one embodiment, a method comprises receiving first input data, automatically learning user tendencies based on the first input data to generate input history data, receiving second input data, and generating auto-corrections or suggestion candidates for one or more words of the second input data based on the input history data. The user can then select one of the suggestion candidates to replace a selected word with the selected suggestion candidate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09613015&OS=09613015&RS=09613015
owner: Microsoft Technology Licensing, LLC
number: 09613015
owner_city: Redmond
owner_country: US
publication_date: 20140627
---
This application is a divisional of U.S. patent application Ser. No. 12 729 130 now U.S. Pat. No. 8 782 556 filed Mar. 22 2010 which claims the benefit of U.S. Provisional Patent Application No. 61 304 341 filed Feb. 12 2010 the disclosures of which are incorporated herein by reference in their entirety.

The present disclosure pertains to devices and methods for enhancing text entry using a touch screen device.

With the increasing popularity of mobile devices including cellphone devices handheld devices handheld computers smartphones PDAs etc. there is a need for improving the user interface experience by increasing user text input speed reducing text entry errors and improving the overall user experience.

Mobile devices with capacitive or resistive touch capabilities often utilize a touch screen keyboard a hardware keyboard speech recognition handwriting recognition or combination of the four for entry of text input. Touch screen keyboards enable larger displays for videos web pages email etc. without the requirement of a physical keyboard. Because touch screen keyboards are software based they can be easily adjusted for different languages touch screen orientation and key layouts. Furthermore touch screen keyboards can be augmented with widgets for word prediction and disambiguation candidates.

Users of devices with touch screens especially mobile devices have varying abilities and styles of entering text. A particular user may tend to use certain words including words not found in a system dictionary more or less frequently depending on the input scope. For example the frequency of word usage used may vary depending on whether the input scope is a message body subject lines or to from fields. Similarly the frequency of word usage or typing accuracy may also vary between individual users. Therefore there exists ample opportunity for improvement in technologies related to facilitating user input on electronic devices by learning user tendencies when entering text in order to accelerate user text entry and reduce user input error rates while taking into account input scope and the completion state of a given text entry.

An apparatus and method are disclosed for providing feedback and guidance to touch screen device users to improve the text entry user experience and performance.

The described techniques and tools for solutions for improving text entry user experience and performance can be implemented separately or in various combinations with each other. As will be described more fully below the described techniques and tools can be implemented on hardware that includes software touch screen keyboards or hardware keyboards. As will be readily apparent to one of ordinary skill in the art the disclosed technology can be implemented using various platforms coupled with a touch screen including but not limited to mobile devices cellphones smartphones PDAs tablet or laptop computers desktop computers and home theater systems. As used herein a touch screen includes a display coupled with touch sense capabilities for example displays using capacitive or resistive sensors .

According to a first embodiment a method comprises receiving first input data automatically learning user tendencies based on the first input data to generate input history data receiving second input data and based on the input history data and the second input data generating auto corrections or suggestion candidates for the second input data. In some examples the receiving first input data comprises receiving a completion event indicating that the first input data is complete such as the sending of a text message instant message or email. In some examples the automatically learning user tendencies comprises analyzing user specific web content associated with the user. In some examples the input history data can include touch position data data representing the last time a word of the first input data was used typing speed data or data representing the orientation of a touch screen while receiving data.

In some examples some or all of the receiving first input data and second input automatically learning user tendencies and generating auto corrections or suggestion candidates can occur in a cloud. In some examples the receiving second input data includes resizing one or more target areas associated with one or more associated keys on a touch screen keyboard based on one or more characters previously received in the second input data one or more characters of the second input data are determined at least in part using the resized target areas. In some examples resizing the one or more target areas includes using a generic touch model based on previously collected touch screen keyboard typing data for plural users the generic touch model including one or more child probability scores for one or more input data sequences for the typing data.

According to a second embodiment a method comprises receiving first input data comprising one or more words and associated with an input scope of a mobile device automatically learning user tendencies using the first input data to generate user specific input history data receiving second input data from a touch screen keyboard analyzing the second input data and at least a portion of the user specific input history data and based on the analyzing providing one or more user specific auto corrections or suggestion candidates for the second input data to the touch screen keyboard.

In some examples the user specific input history data includes data indicating that at least one input word of the first input data was previously auto corrected and the auto correction was undone. In some examples the user specific auto corrections comprise suppressing an auto correction based on comparing a threshold value to a score generated by combining first data comprising a weighted probability based on one or more candidate sources with second data comprising a weighted edit distance based on one more edit distance penalty categories. In some examples the analyzing comprises combining a weighted probability for at least one of the words based on one or more candidate sources with a weighted edit distance based on one or more edit distance penalty categories and at least one of the one or more candidate sources is based on user specific input history data.

In some examples receiving second input data includes resizing one or more target areas associated with one or more associated keys on the touch screen keyboard based on one or more characters previously received in the second input data and the resizing can be based at least in part on the user specific input history data.

In some examples some or all of the receiving first input data and second input automatically learning user tendencies and generating auto corrections or suggestion candidates can occur in a cloud.

According to a third embodiment a computer readable storage device stores computer readable instructions that when executed cause a computer to perform a method comprising using a touch screen keyboard coupled with a mobile device receiving first user input data associated with an input scope the first user input data comprising one or more characters receiving a completion event associated with the input scope using the text entry device after the receiving automatically analyzing the first user input data and storing user specific input history data including an indication of the input scope based on the analyzing using the touch screen keyboard receiving second user input data determining a weighted probability determined from one or more candidate source data selected from a group including at least one of the following the user specific input history data the second user input data dictionary probability data user specific touch model data and generic touch model data determining a weighted edit distance determined by calculating one or more edit distances selected from a group of penalty categories including at least one of the following insertion deletion transposition non fuzzy substitution fuzzy substitution case change and accent automatically determining one or more suggestion candidates based on a score determined by combining the weighted probability and the weighted edit distance and displaying the suggestion candidates on the touch screen keyboard.

Some embodiments include a computer readable storage device storing instructions that when executed cause a computer to perform one or more of the methods disclosed herein.

Some embodiments include a system for performing one or more of the method disclosed herein. In some examples the system can include a computing cloud.

The foregoing and other objects features and advantages of the invention will become more apparent from the following detailed description which proceeds with reference to the accompanying figures.

This disclosure is set forth in the context of representative embodiments that are not intended to be limiting in any way.

As used in this application and in the claims the singular forms a an and the include the plural forms unless the context clearly dictates otherwise. Additionally the term includes means comprises. Further the term coupled encompasses mechanical electrical as well as other practical ways of coupling or linking items together and does not exclude the presence of intermediate elements between the coupled items.

The described things and methods described herein should not be construed as being limiting in any way. Instead this disclosure is directed toward all novel and non obvious features and aspects of the various disclosed embodiments alone and in various combinations and sub combinations with one another. The disclosed systems methods and apparatus are not limited to any specific aspect or feature or combinations thereof nor do the disclosed things and methods require that any one or more specific advantages be present or problems be solved.

Although the operations of some of the disclosed methods are described in a particular sequential order for convenient presentation it should be understood that this manner of description encompasses rearrangement unless a particular ordering is required by specific language set forth below. For example operations described sequentially may in some cases be rearranged or performed concurrently. Moreover for the sake of simplicity the attached figures may not show the various ways in which the disclosed things and methods can be used in conjunction with other things and method. Additionally the description sometimes uses terms like produce generate select highlight and provide to describe the disclosed methods. These terms are high level abstractions of the actual operations that are performed. The actual operations that correspond to these terms will vary depending on the particular implementation and are readily discernible by one of ordinary skill in the art.

Theories of operation scientific principles or other theoretical descriptions presented herein in reference to the apparatus or methods of this disclosure have been provided for the purposes of better understanding and are not intended to be limiting in scope. The apparatus and methods in the appended claims are not limited to those apparatus and methods that function in the manner described by such theories of operation.

In the following description certain terms may be used such as up down upper lower horizontal vertical left right over on near and the like. These terms are used where applicable to provide some clarity of description when dealing with relative relationships. But these terms are not intended to imply absolute relationships positions and or touch screen orientations.

As used in this disclosure the term wait may be used to describe the action a device takes while waiting for particular value or type of input before proceeding with a particular operation. This waiting should not be construed as limiting the device to only waiting for the particular type of input rather the device may receive other input or perform other actions concurrently with the waiting.

As used in this disclosure the term automatically is used to describe actions that can proceed immediately without receiving further user input. As used in this disclosure the term immediately means that an action occurs within a short time period following a preceding action without needing to receive intervening user input. In some cases there may be intervening actions performed between or concurrently with the preceding action and the action occurring immediately for example screen refresh or redraw sound playback etc.

As used in this disclosure the term over is used to describe the positioning of objects for example a finger thumb or stylus over on or near a location on a touch screen. In some embodiments this object need not come into contact with the touch screen for the object s position to be determined. In other embodiments the object described as over the touch screen may be in contact with the surface of the touch screen. In some embodiments the object determined to be over a location of the touch screen may not actually be positioned directly over the touch screen location but determined to be over the location on the touch screen for example by a position correction module of the text entry device or touch screen.

The disclosed technology includes various approaches to improving typing accuracy or typing speed when using devices having a touch screen by using suggestion candidates to augment other input devices. These suggestion candidates are typically represented in a candidates area which need not be permanently reserved for that purpose or can appear in varying location on the touch screen. After entering one or more words to form a text entry the user can review the text entry by viewing the touch screen and deciding whether to select a word for suggestions. Once the user has selected the word one or more suggestion candidates are displayed on the touch screen. In some embodiments the suggestion candidates are presented as buttons which include a word related to the word selected by the user. Suggestion candidates can be determined to be related to the selected word using a candidate generation module which can use candidate sources including a dictionary a thesaurus a common speller application programming interface CSAPI an input history data source IHDS or other methods to determine suggestions. The user reviews the suggestion candidates and selects one of the candidates for replacement using a single touch screen input over the desired suggestion candidate on the touch screen.

As used in this disclosure a single touch screen input refers to the input received when a user positions an object over the surface of a touch screen such that the touch screen device can determine the position of the object. In some embodiments the object can be the user s finger or thumb. In other embodiments the object can be a stylus or puck. In some embodiments the single touch screen input is received after the user taps the touch screen over a word or suggestion candidates. In other embodiments the single touch screen input is received when the user presses the screen with a finger thumb or stylus. When a touch is detected over a touch screen surface touch position data is generated. Receiving touch position data for a single touch screen input is sufficient to determine which word or which suggestion candidate the user is indicating on the touch screen no additional keyboard input mouse input trackball input voice input or additional touches are necessary. Using a single touch screen input to determine user selections simplifies the input process and allows for the fast correction of text entries without the need to use submenus popup menus or additional input devices.

The illustrated mobile device can include a controller or processor e.g. signal processor microprocessor ASIC or other control and processing logic circuitry for performing such tasks as signal coding data processing input output processing power control and or other functions. An operating system can control the allocation and usage of the components and support for one or more application programs . The application programs can include common mobile computing applications e.g. email applications calendars contact managers web browsers messaging applications or any other computing application.

The illustrated mobile device can include memory . Memory can include non removable memory and or removable memory . The non removable memory can include RAM ROM flash memory a hard disk or other well known memory storage technologies. The removable memory can include flash memory or a Subscriber Identity Module SIM card which is well known in GSM communication systems or other well known memory storage technologies such as smart cards. The memory can be used for storing data and or code for running the operating system and the applications . Example data can include web pages text images sound files video data or other data sets to be sent to and or received from one or more network servers or other devices via one or more wired or wireless networks. The memory can be used to store a subscriber identifier such as an International Mobile Subscriber Identity IMSI and an equipment identifier such as an International Mobile Equipment Identifier IMEI . Such identifiers can be transmitted to a network server to identify users and equipment.

The memory can also be used for the candidate sources which are used for generating and suppressing auto corrections and generation suggestion candidates. Candidate sources can include but are not limited to a system dictionary a user dictionary a common speller application programming interface CSAPI touch models and an input history data source.

The mobile device can support one or more input devices such as a touch screen microphone camera physical keyboard and or trackball and one or more output devices such as a speaker and a display . Other possible output devices not shown can include piezoelectric or other haptic output devices. Some devices can serve more than one input output function. For example touch screen and display can be combined in a single input output device.

A wireless modem can be coupled to an antenna not shown and can support two way communications between the processor and external devices as is well understood in the art. The modem is shown generically and can include a cellular modem for communicating with the mobile communication network and or other radio based modems e.g. Bluetooth or Wi Fi . The wireless modem is typically configured for communication with one or more cellular networks such as a GSM network for data and voice communications within a single cellular network between cellular networks or between the mobile device and a public switched telephone network PSTN .

The mobile device can further include at least one input output port a power supply a satellite navigation system receiver such as a Global Positioning System GPS receiver an accelerometer and or a physical connector which can be a USB port IEEE 1394 FireWire port and or RS 232 port. The illustrated components are not required or all inclusive as any components can deleted and other components can be added.

In example environment various types of services e.g. computing services are provided by a cloud . For example the cloud can comprise a collection of computing devices which may be located centrally or distributed that provide cloud based services to various types of users and devices connected via a network such as the Internet. The implementation environment can be used in different ways to accomplish computing tasks. For example some tasks e.g. processing user input and presenting a user interface can be performed on local computing devices e.g. connected devices while other tasks e.g. storage of data to be used in subsequent processing including candidate sources can be performed in the cloud .

In example environment the cloud provides services for connected devices with a variety of screen capabilities. Connected device represents a device with a computer screen e.g. a mid size screen . For example connected device could be a personal computer such as desktop computer laptop notebook netbook or the like. Connected device represents a device with a mobile device screen e.g. a small size screen . For example connected device could be a mobile phone smart phone personal digital assistant tablet computer and the like. Connected device represents a device with a large screen. For example connected device could be a television screen e.g. a smart television or another device connected to a television e.g. a set top box or gaming console or the like. One or more of the connected devices can include touch screen capabilities. Devices without screen capabilities also can be used in example environment . For example the cloud can provide services for one or more computers e.g. server computers without displays.

Services can be provided by the cloud through service providers or through other providers of online services not depicted . For example cloud services can be customized to the screen size display capability and or touch screen capability of a particular connected device e.g. connected devices .

In example environment the cloud provides the technologies and solutions described herein to the various connected devices using at least in part the service providers . For example the service providers can provide a centralized solution for various cloud based services. The service providers can manage service subscriptions for users and or devices e.g. for the connected devices and or their respective users .

Although the operations of some of the disclosed methods are described in a particular sequential order for convenient presentation it should be understood that this manner of description encompasses rearrangement unless a particular ordering is required by specific language set forth below. For example operations described sequentially may in some cases be rearranged or performed concurrently. Moreover for the sake of simplicity the attached figures may not show the various ways in which the disclosed methods can be used in conjunction with other methods.

Any of the disclosed methods can be implemented as computer executable instructions stored on one or more computer readable media e.g. non transitory computer readable media such as one or more optical media discs volatile memory components such as DRAM or SRAM or nonvolatile memory components such as hard drives and executed on a computer e.g. any commercially available computer including smart phones or other mobile devices that include computing hardware . Any of the computer executable instructions for implementing the disclosed techniques as well as any data created and used during implementation of the disclosed embodiments can be stored on one or more computer readable media e.g. non transitory computer readable media . The computer executable instructions can be part of for example a dedicated software application or a software application that is accessed or downloaded via a web browser or other software application such as a remote computing application . Such software can be executed for example on a single local computer e.g. any suitable commercially available computer or in a network environment e.g. via the Internet a wide area network a local area network a client server network such as a cloud computing network or other such network using one or more network computers.

For clarity only certain selected aspects of the software based implementations are described. Other details that are well known in the art are omitted. For example it should be understood that the disclosed technology is not limited to any specific computer language or program. For instance the disclosed technology can be implemented by software written in C Java Perl JavaScript Adobe Flash or any other suitable programming language. Likewise the disclosed technology is not limited to any particular computer or type of hardware. Certain details of suitable computers and hardware are well known and need not be set forth in detail in this disclosure.

Furthermore any of the software based embodiments comprising for example computer executable instructions for causing a computer to perform any of the disclosed methods can be uploaded downloaded or remotely accessed through a suitable communication means. Such suitable communication means include for example the Internet the World Wide Web an intranet software applications cable including fiber optic cable magnetic communications electromagnetic communications including RF microwave and infrared communications electronic communications or other such communication means.

The disclosed methods apparatus and systems should not be construed as limiting in any way. Instead the present disclosure is directed toward all novel and nonobvious features and aspects of the various disclosed embodiments alone and in various combinations and subcombinations with one another. The disclosed methods apparatus and systems are not limited to any specific aspect or feature or combination thereof nor do the disclosed embodiments require that any one or more specific advantages be present or problems be solved.

The text entry device has a touch screen that displays a touch screen keyboard having several keys etc. Some of the keys including the backspace key return key and space key are also designated as delimiter keys. As shown the touch screen keyboard displays the keys etc. as images on the touch screen the touch screen including capacitive resistive inductive or other suitable means for determining the position of one or more touch inputs detected over the surface of the keyboard and converting this touch input into text input. In some embodiments the touch input is created using a stylus or puck while in other embodiments the touch input can be created using a finger or thumb. In other embodiments the touch screen keyboard can be implemented as a hardware keyboard including with mechanical keys.

The touch screen suggestion candidates area is depicted in showing three suggestion candidates mine mint and nine . As shown the suggestion candidates area includes widgets directly above the keyboard area containing word prediction and disambiguation candidates. Placing the suggestion candidates area close to the touch screen keyboard can improve typing speed and reduce errors by allowing users to maintain their focus of attention near the keyboard area while correcting a phrase in the text entry area . In other embodiments the suggestion candidates area can be placed nearby the phrase or selected word in the text entry area .

The location of the text entry area the keyboard etc. can be varied based on the particular implementation and design.

At process block the text entry device analyzes the first input data to learn user tendencies and generates input history data based on the first input data that represents learned user tendencies. In some embodiments the input history data includes a trigram which comprises a word a word preceding the word in the first input data and a word subsequent to the word in the first input data. In some embodiments the input history data includes data on word usage and input scope that one or more words have been used in. In some embodiments the input history data includes key press position data typing speed data correction data and touch screen orientation data.

At process block the text entry device receives second input data from a source such as a touch screen keyboard a hardware keyboard a handwriting recognition module or a speech recognition module.

At process block the text entry device analyzes the second input data and one or more candidate sources and determines if any auto corrections should be made or suggestion candidates should be presented for the second input data. For example if a system dictionary indicates that a word of the second input data should be designated as incorrect the text entry device can automatically correct the word with another word from the system dictionary. As another example if the input history data indicates that a word of the second input data should be designated as incorrect the text entry device can automatically correct the word with another word from the input history data. As another example if a system dictionary indicates that a word of the second input data should be designated as incorrect the input history data can be used to determine that the word should be designated as acceptable and therefore auto correction or highlighting a word as incorrect can be suppressed. As another example if a word is designated as incorrect the input history data source can be used to rank candidates appearing the IHDS as more probable than candidates or to generate candidates that appear in the IHDS but not in another candidate source. Thus using candidates sources including a input history data source the text entry device can automatically generate one or more suggestion candidates for the word using the input history data and allow the user to select one of the suggestion candidates to replace the word designated as incorrect.

After generating suggestion candidates or generating auto corrections for the second input data the text entry device can either complete receiving second input data by proceeding to process block or proceed to process blocks and or in order to receive additional second input data or generate additional auto corrections or suggestion candidates. Thus as additional input data is received by the text entry device additional auto correction or suggestion candidates can be generated based on all of the second input data or just the additional second input data. Process blocks and can be visited once or repeatedly in order to process any additional second input that is received.

At process block a text input device receives first input data from a source such as a touch screen keyboard a hardware keyboard a handwriting recognition module or a speech recognition module. In some embodiments the first input data includes text characters text words position data for key presses on a touch screen keyboard typing speed data correction data and or touch screen orientation data.

At process block the first input data is analyzed and compared against previously generated input history data including word probability data key probability data edit distance data touch model probability data dictionary probability data and or input history data. Based on this analysis auto correction is suppressed for one or more words of the first input data that would otherwise have been designated as incorrect by not auto correcting based on for example previously stored input history data. The acts of process blocks and can be repeated multiple times as more input data is added to the first input data.

At process block a completion event is received. In some embodiments a completion event can be a designated action performed with a text input device for example the act of sending an SMS text message e mail message instant message IM adding a contact to an address book or posting or receiving web content from a web page. Web content can include web queries clicks URLs as well as content available via the Web such as social networking data e.g. from Facebook LinkedIn MSN etc. sites and web directories.

After receiving a completion event the method proceeds to process block where the first input data is analyzed to determine any words of the first input history that were auto corrected and then undone. For example a user sending emails describing a delicious meal may intend to type the word yummy several times but by default this word is auto corrected to tummy. The user then needs to undo these auto corrections several times to enter the intended word yummy. Thus when analyzing the first input data at process block these undone auto corrections can be identified and data added to the input history data that represents these undone corrections.

At process block for each word in the first input data a usage count for each word can be incremented in the input history data. This data can be used to tailor subsequent auto correction or suggestion candidate generation for a specific user. For example a user enters yummy several times in the completed first input data and then sends messages emails or web posts. On subsequent entry of text input data a score generated for yummy will be higher based on the high frequency usage of this word by the user and thus subsequent auto correction or suggestions will be less likely to correct the word yummy. Thus by tracking word usage subsequent auto corrections and suggestions can be more accurate and require less intervention to correct unwanted auto corrections.

At process block subsequent second input data is received. This second input data can be received using similar techniques as described for the first input data at process block .

At process block the second input data and input history data are analyzed in order to generate auto corrections or suggestion candidates for the second input data. These auto corrections or suggestion candidates can be generated as a user enters the data or upon receiving a designated completion event. Thus input history data generated at for example process blocks and can be used to provide more accurate auto corrections or suggestion candidates. Process blocks can be visited once or repeatedly in order to process any additional second input data that is received.

At process block second input data is received using similar techniques as described for receiving input data at process blocks and in .

At process block previously generated input history data representing learned user tendencies is analyzed based on the second input data. In some embodiments the analysis is based on the second input data and can also include one or more words one or more individual characters position data of individual touch screen touches and typing speed data.

At process block results for the query are ranked based on whether the results are based on input history data or another source such as a system or user dictionary. A higher score or rank can be applied for those results that are based on input history data. More detailed examples of applying a score or rank to query results are described below at for example E and accompanying text.

At process block generic and or personalized touch model data is analyzed using a probability model to determine suggestions or auto corrections for the second input data on a character or word basis. More detailed examples of applying a score or rank to query results are described below at for example and accompanying text.

At process block word probability and edit distance data are analyzed using a probability model to determine further suggestions or auto corrections for the second input data on a word basis. More detailed examples of applying a score or rank to query results are described below at for example and accompanying text.

At process block the results of the analysis performed at process blocks and or are combined in order to determine whether suggestion candidates or auto corrections for one or more characters or words of the second input data should be generated. Based on this determination the method proceeds to one of process blocks or for each word of the second input data.

At process block based on the determination no suggestions auto corrections or other modifications are made for the word in the second input data.

At process block based on the determination auto correction is suppressed for the word and an auto correction that would have been performed on the second input data is not performed. For example a word that is missing from one or more dictionaries would normally be auto corrected but because the word appears in the input history data auto correction is suppressed.

At process block based on the determination for the word auto correction is applied to the word by replacing it with another word designated as correct.

At process block one or more suggestion candidates are generated for a word of the second input data. These suggestion candidates can come from one or more of the analysis steps at for example process blocks or . In some embodiments the suggestion candidates can be immediately displayed to the user on the display of a mobile device. In other embodiments the suggestion candidates are generated but not displayed until a user demands suggestion candidates for the word by for example making a touch input over the word on the display of the second input data. In some embodiments an indication is provided for one or more words of the second input data that have suggestion candidates generated. In some embodiments an indication is provided only for words that have been auto corrected or do not appear in a dictionary but suggestion candidates can still be generated and presented for words that do not have an indication by tapping on the word. For example highlighting an underline squiggle audio feedback or haptic feedback can be used to indicate to the user that suggestion candidates are available for the word.

At process block a determination is made whether all words of the second input data have been processed. If more words need to be processed the method proceeds to process block . Otherwise the method can proceed to process block where further input data is received.

Turning to the mobile device has replaced the word mint with the original word ming . Further the mobile device learns the word ming by adding the word ming to the input history data and also removes highlighting and places the carat after the replaced word . The replacing and learning acts depicted in correspond to process blocks and in the flow chart .

After receiving the touch input the method proceeds to process block where suggestion candidates for the word mint are determined using data from one or more sources including user specific input history data user dictionary probability system dictionary probability a generic touch model and or a user specific touch model.

At process block second input data is received using a mobile device. Previous input history data based on previously received input data is already stored in the input history data source. The second input data can be received from a source such as a touch screen keyboard a hardware keyboard a handwriting recognition module or a speech recognition module. As shown the second input data is handled on a per word instead of a per character basis.

At process block the mobile device queries the data sources for one or more query words in the second input data. A representation of the results is shown in table which has columns for from left to right system dictionary user dictionary CSAPI and IHDS. Words are represented in the tables and as symbols A A B etc. The best scoring query result for each source is shown in the top row i.e. the best scoring result for the system dictionary is the word A the best scoring result for the user dictionary is the word B and the best scoring result for the IHDS is the word B. For example the best scoring query for a source can be determined using a formula that assigns the best score to a word based on a combination that weights lower edit distances and higher usage frequency in a language model as better scoring. The number after the comma next to each word represents the edit distance between the query word and the query result word. For example word A has an edit distance of 3 while word B has an edit distance of 1. Also shown in the IHDS column is word usage data e.g. the number of times the word has been previously used. As shown the word B has been added to the IHDS 6 times while word B has been added 3 times. In some embodiments the IHDS is implemented similar to a priority queue in that only the N most recent words added to the IHDS are maintained. For example if N 1000 only the 1000 most recent IHDS additions are maintained and any older entries are deleted as new entries are added to the IHDS.

At process block the top item from each source is analyzed and any duplicate words are removed to produces a list of potential auto correction or suggestion candidates. At process block a score is calculated for each potential auto correction or suggestion candidate. In some embodiments this score is calculated using a fuzzy logic algorithm that looks at the probability of the query word being correct. In the embodiment shown the score is calculated using the following equation Score Edit Distance IHDS Count

where Wis a weight coefficient for the Edit Distance Edit Distance is the number of edits needed to change the query result word to the query word Wis a weight coefficient for the IHDS Count and IHDS Count is the number of times the word has been added to the IHDS. As indicated in table word B and word C have a tie low score.

At process block after a score has been calculated for each query result word the query result word having the lowest score is selected. In the event of a tie a tie breaking step can be used for example the query sources can have a priority order such that words in the user dictionary are selected before the system dictionary or the CSAPI. As shown the tie breaking step results in word B being selected over word C which has the same score because word B appears in the user dictionary.

At process block the method determines whether there are sufficient suggestion candidates selected based on for example a designated number of candidates limit or based on the amount of touch screen display space available for displaying suggestion candidates. If it is determined that a sufficient number of candidates have been selected the method proceeds to process block where the suggestion candidates are displayed to the user and further processing can occur as described above. If sufficient candidates have not yet been selected the method proceeds to block and where the data sources are queried again to generate more suggestion candidates.

A weighted edit distance technique can be used to compare two given words and determines how similar they are. A low total score indicates that two words are very similar and hence there is a high probability that when typing the first word i.e. a word of the input data the user actually meant to type the second word i.e. the word being considered for auto correction or as a suggestion candidate . On the other hand a high score indicates that words are dissimilar and that the second word i.e. the word being considered for auto correction or as a suggestion candidate is less applicable to the first word. As discussed below the weighted edit distance score can be determined by adding individual penalties and finding a set of penalties that results in a minimal total weighted edit distance score.

1. Insertion an input word is in the insertion category when a candidate word is the same as the input word plus one or more additional characters. An example of an insertion is when a user has typed input word wrd which is being compared to candidate word word. In some examples the insertion category is defined such that having exactly one additional character places a candidate word in the insertion category e.g. input word wrd vs. candidate word word . In other examples the insertion category is defined such that having one two or more additional characters places a candidate word in the insertion category e.g. Misisipi vs. Mississippi which is an edit distance of three insertions . In some examples an additional penalty can be applied depending on the number of additional characters between the input word and the candidate word e.g. Misisipi could have a higher penalty score than Mississipi .

2. Wildcard is a special case of insertion. An input word is in the wildcard category when a candidate word is the same as the input word plus one or more designated additional characters for example apostrophe or question mark. A lower penalty can be applied for the wild card so that input words are penalized less for the presence of designated wildcard characters. For example the wildcard penalty is implicated when comparing input words person s or persons to candidate word persons. Similar to the insertion category the wildcard category can be defined such that having exactly one additional wildcard character places a candidate word in the wildcard category or the wildcard category can be defined such that having one two or more additional wildcard characters places a candidate word in the wildcard category. In some examples an additional penalty can be applied depending on the number of additional wildcard characters.

3. Deletion an input word is in the deletion category when a candidate word is the same as the input word less an additional character. An example of a deletion is when a user has typed input word worrd which is being compared to candidate word word. Similar to the insertion category some examples may limit this category to the case where exactly one character has been deleted e.g. input word worrd vs. candidate word word . In other examples one two or more deleted characters can place a candidate word in the deletion category e.g. bannanna vs. banana . In some examples an additional penalty can be applied depending on the number of deleted characters between the input word and the candidate word e.g. bannanna could be assigned a higher penalty score than bannana .

4. Transposition an input word is in the transposition category when an input word has two consecutive characters reversed transposed compared to the candidate word. An example of a transposition is when a user has typed input word wrod which is being compared to the candidate word word i.e. the characters r and o are transposed in the input word . Similar to the insertion and deletion categories some examples may only consider a word with exactly one transposition to be in the transposition category while other examples may allow multiple transpositions with an optional additional penalty e.g. input word Mciroosft vs. candidate word Microsoft has two transpositions .

5. Non fuzzy substitution an input word is in the non fuzzy substitution category when the input word has one or more characters that are different than the candidate word and the different characters are not determined to be adjacent e.g. the keys for the characters are not physically adjacent on a touch screen keyboard. An example of a non fuzzy substitution is when the input word is woid which is being compared to candidate word word and the input was received using a QWERTY keyboard. Similar to the insertion and deletion categories some examples may only consider a word with exactly one character different to be in the non fuzzy substitution category while other examples may allow multiple characters to be different with an optional additional penalty e.g. input word binina vs. candidate word banana has two non adjacent characters substituted .

As described further below a determination whether two characters are adjacent is dependent on the input source. For example a QWERTY touch screen keyboard a Dvorak touch screen keyboard a DTMF keyboard i.e. a standard telephone keypad a hardware keyboard and non keyboard input sources e.g. from handwriting recognition or voice recognition can all have different keys designated as adjacent to each other. Further keyboards based on different languages e.g. English vs. French can also have different keys designated as adjacent to each other.

6. Fuzzy substitution an input word is in the fuzzy substitution category when an input word has one or more characters different than the candidate word and the keys for the characters are determined to be adjacent e.g. the different characters can be typed by adjacent keys on a touch screen keyboard . If the two words are in the fuzzy substitution category an error model is used to dynamically calculate a penalty. The error model can be based on real usage data collected on a physical device with a statistically significant set of keystrokes. The error model can contain different values or probabilities based on the language being used e.g. English vs. French . For example on a QWERTY touch screen keyboard the keys o and p are adjacent. A lower fuzzy substitution penalty can be assigned for the input word wprd and candidate word word because the characters o and p are adjacent and the error model indicates that wprd is often changed by users to word based on previously collected user data. A higher fuzzy substitution penalty can be assigned for the input word cave and candidate word cafe. This is because even though the keys v and f are adjacent based on previously collected user data the word cave is frequently not corrected at all. In some examples the fuzzy substitution determination can rely not only on input history data but also other candidate sources for example dictionaries thesauruses or a CSAPI. In these examples cave would be assigned a higher fuzzy substitution penalty than wprd because the word cave appears in a system dictionary while wprd does not.

7. Case change an input word is in the case change category when the input words has one or more characters that are different than the candidate words and the characters only differ based on being uppercase lowercase. For example the case change category is indicated when the input word is mrs. and is being compared to the candidate word Mrs. Similarly the case change category is indicated when the input word is microsoft and the candidate word is Microsoft. Similar to the insertion and deletion categories some examples may only consider a word with exactly one character case difference to be in the case change category while other examples may allow multiple characters to have case change differences with an optional additional penalty.

8. Accent an input word is in the case change category when the input word has one or more characters that are different than the candidate words and the characters only differ based on an associated accent mark. For example the accent category is indicated when the input word cafe is being compared to the candidate word caf i.e. the base character e differs from that in the candidate word character only by the accent . Similar to the insertion and deletion categories some examples may consider a word with exactly one accent character different to be in the accent category while other examples may allow multiple characters to have accent differences with an optional additional penalty.

At process block an input word is received e.g. from a mobile device and one or more candidate sources are searched for likely candidate words.

At process block one or more word probabilities are determined for the input word s over one or more likely candidate words. In some examples the candidate sources are only searched for single words unigrams . In other examples the candidate sources can be searched for two word combinations bi grams or three word combinations trigrams . For example the two word combination Happy Birthday is stored in a candidate source as a bi gram so that possible auto corrections or suggestion candidates can be determined more readily regardless of whether the first or second word is misspelled. Similarly a three word combination such as best of breed can be stored in a candidate source such that certain possible errors for example input words best or breed can be designated incorrect even though the word that is incorrect or appears in the system dictionary.

At process block a weighted edit distance score for the input word s over one or more likely candidate words is determined. In some embodiments the weighted edit distance score can be determined using a simple edit distance as described in and accompanying text above. In other embodiments the weighted edit distance score can be determined using a more complex edit distance technique such as that described in and accompanying text above. In some examples all eight penalty categories described above can be used while other examples may use additional or fewer categories.

At process block the weighted word probabilities from process block and the weighted edit distances from process block are combined into a combined score. In order to determine if auto correction should be suppressed or performed when given an input word e.g. a word received with a touch screen keyboard and a word suggested by the system a formula can be applied that combines the negative logarithm of the word probability with a weighted edit distance score 

At process block the combined score final result can be used to generate auto corrections suppress auto corrections determine suggestion candidates or rank suggestion candidates. The final result the right hand side of the inequality above can be compared against a flexible threshold value C . Adjusting the comparison threshold value Cdetermines the frequency and aggressiveness of auto correction or candidate generation. Similarly the above formula can also be used to rank suggestion candidates. For example instead of comparing the final result to a flexible threshold the final result is used to rank the order that suggestion candidates are presented to a user.

In some embodiments the target areas are not limited to simple zones but can include additional zones based on the proximity of zones to a given key boundary. For example three zones can be defined a first zone within the visual boundary of a key a direct hit associated with a 100 probability a second zone outside the visual boundary of a key by M pixels a near miss associated with a 50 probability and a third zone outside the boundary if a key by N pixels a barely hit with a 10 probability . The language model probability for the next key can be combined with the touch model probability to determine an overall probability for next keys.

In some embodiments the touch model is not limited to touch screen X Y location but can include input scope touch screen pressure typing speed touch screen orientation etc. For example one set of hit target areas can be used for the when the touch screen is in a landscape orientation and another used when the touch screen is in a portrait orientation. The hit target areas can be also varied based on input scope for example one set of hit target areas can be used for entering addresses and another set of target areas used for entering body text.

In some embodiments a generic touch model can be used to supplement or replace a learned user specific touch model. For example a data collection tool coupled with a soft keyboard device can prompt one or more users to enter a series of phrases to type using a touch screen keyboard device. As the user enters the phrases the data collection tool logs touch data e.g. X Y location pressure speed touch screen orientation etc. with the prediction feature turned off. The cursor position associated with the prompted phrase is advanced if the user hits either the exact next key in the phrase or any of the adjacent keys. By comparing the collected touch data with the prompted phrases it can be determined for any given touch data which key the user intended to hit.

By collecting this touch data for many users simulations can then be run which vary the touch model parameters and then replay the logged touch data in order to determine the impact that a given set of touch model parameters have on the accuracy of the touch model. For example a first simulation could be run with the default hit target locations shown in while a second simulation could be run with some of the keys shifted one pixel to the left a third simulation could be run with some the keys shifted one pixel to the bottom and so forth. After running several simulations the results can be analyzed to determine the set of parameters that produce the largest general reduction in keyboard error. Thus a generic touch model based on previously collected simulation data for plural users is generated. Typing error rate reductions as high as 50 have been observed using this technique.

The data collection tool can also be used to output a fuzzy set representing the probability of a given key press being correct. For example when the desired key is a q the probability of pressing a w or e accidently is known. These scores can be used to weight the child probability scored while traversing a language probability model data structure or user to calculate edit distance scores for sorting candidates. In some examples a general touch model is used for all keys of a soft keyboard. In other examples a key specific touch model is generated for each key. In some examples an individual user can be prompted to enter a series of training phrases the data can be logged and simulated using different touch model parameters and a user specific touch model generated.

The computing environment is not intended to suggest any limitation as to scope of use or functionality of the technology as the technology may be implemented in diverse general purpose or special purpose computing environments. For example the disclosed technology may be implemented with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. The disclosed technology may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

With reference to the computing environment includes at least one central processing unit and memory . In this most basic configuration is included within a dashed line. The central processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power and as such multiple processors can be running simultaneously. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software and candidate sources that can for example implement the technologies described herein. A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices one or more communication connections and one or more touch screens . An interconnection mechanism not shown such as a bus a controller or a network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs CD RWs DVDs or any other medium which can be used to store information and that can be accessed within the computing environment . The storage stores instructions for the software and candidate sources which can implement technologies described herein.

The input device s may be a touch input device such as a keyboard keypad mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . For audio the input device s may be a sound card or similar device that accepts audio input in analog or digital form or a CD ROM reader that provides audio samples to the computing environment . The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment . The touch screen can act as an input device receiving touch screen input and as an output device displaying the text entry area suggestion candidates area and or touch keyboard .

The communication connection s enable communication over a communication medium e.g. a connecting network to another computing entity. The communication medium conveys information such as computer executable instructions compressed graphics information or other data in a modulated data signal.

Computer readable media are any available media that can be accessed within a computing environment . By way of example and not limitation with the computing environment computer readable media include memory storage communication media not shown and combinations of any of the above.

Computer readable media are any available media that can be accessed within a computing environment . By way of example and not limitation with the computing environment computer readable media include memory and or storage . As should be readily understood the term computer readable storage media includes the media for data storage such as memory and storage and not transmission media such as modulated data signals.

The techniques and solutions described in this application can be used in various combinations to provide more efficient text entry and correction with text entry devices including mobile devices such as smart phones.

Any of the methods described herein can be performed via one or more computer readable media e.g. storage or other tangible media comprising e.g. having or storing computer executable instructions for performing e.g. causing a computing device to perform such methods. Operation can be fully automatic semi automatic or involve manual intervention.

Having described and illustrated the principles of our innovations in the detailed description and accompanying drawings it will be recognized that the various embodiments can be modified in arrangement and detail without departing from such principles. It should be understood that the programs processes or methods described herein are not related or limited to any particular type of computing environment unless indicated otherwise. Various types of general purpose or specialized computing environments may be used with or perform operations in accordance with the teachings described herein. Elements of embodiments shown in software may be implemented in hardware and vice versa.

In view of the many possible embodiments to which the principles of the disclosed invention may be applied it should be recognized that the illustrated embodiments are only preferred examples of the invention and should not be taken as limiting the scope of the invention. Rather the scope of the invention is defined by the following claims. We therefore claim as our invention all that comes within the scope and spirit of these claims.

