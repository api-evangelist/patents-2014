---

title: System for decomposing events from managed infrastructures using a topology proximity engine, graph topologies, and k-means clustering
abstract: An event clustering system includes an extraction engine in communication with an infrastructure. The extraction engine receives data from the infrastructure and produces events. An alert engine receives the events and creates alerts mapped into a matrix, M. A sigalizer engine includes one or more of an NMF engine, a k-means clustering engine and a topology proximity engine. The sigalizer engine determines one or more common steps from events and produces clusters relating to the alerts and or events.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09529890&OS=09529890&RS=09529890
owner: MOOGSOFT, INC.
number: 09529890
owner_city: San Francisco
owner_country: US
publication_date: 20140428
---
This application claims the benefit of 61 816 867 filed Apr. 29 2013 which application is fully incorporated herein by reference.

This invention relates generally to event message processing and more particularly to clustering messages events received from infrastructure.

The World Wide Web is increasingly becoming a more important and more frequently used form of communication between people. The primary form of web based communication is electronic mail. Other forms of communication are also used however such as news groups discussion groups bulletin boards voice over IP and so on. Because of the vast amount of information that is available on the web it can be difficult for a person to locate information that may be of interest. For example a person who receives hundreds of electronic mail messages events from infrastructure a day may find it impractical to take the time to store the messages events from infrastructure in folders of the appropriate topic. As a result it may be difficult for the person to later find and retrieve all messages events from infrastructure related to the same topic. A similar situation arises when a person tries to locate news groups or discussion groups of interest. Because there may be no effective indexing of these groups it can be difficult for the person to find groups related to the topic of interest.

Some attempts have been made to help the retrieval of information of interest by creating web directories that provide a hierarchical organization of web based information. The process of creating the directories and deciding into which directory a particular piece of information e.g. a news group should go is typically not automated. Without an automated approach it is impractical to handle the massive amounts of web based information that are being generated on a daily basis. Moreover because a person may not be fully aware of the entire web directory hierarchy or may not fully understand the semantics of information the person may place the information in a directory that is not the most appropriate making later retrieval difficult. It would be desirable to have an automated technique that would help organize such information.

The advent of global communications networks such as the Internet has provided alternative forms of communicating worldwide. Additionally it has increased the speed at which communications can be sent and received. Not only can written or verbal messages events from infrastructure be passed through the Internet but documents sound recordings movies and pictures can be transmitted by way of the Internet as well. As can be imagined inboxes are being inundated with countless items. The large volume can more than difficult to manage and or organize for most users.

In particular a few of the more common activities that a user performs with respect to email for example are sorting of new messages events from infrastructure task management of using messages events from infrastructure that can serve as reminders and retrieval of past messages events from infrastructure. Retrieval of recent messages events from infrastructure can be more common than older messages events from infrastructure. Traditional systems employed today support at least some aspect of these three activities using folders such as an inbox task oriented folders and user created folders respectively. However this as well as other existing approaches present several problems. The folders make stark divisions between the three activities which are not conducive or coincident with user behavior in general. For example tasks are not visible to the user or rather are out of sight out of mind and thus can be easily if not frequently neglected overlooked or forgotten. In addition in many current systems any given message can only be in one folder at a time. Hence the particular message cannot serve multiple activities at once. Other current systems have attempted to ease these problems however they fall short as well for similar reasons.

A user can communicate using one or more different messaging techniques known in the art email instant messaging social network messaging cellular phone messages events from infrastructure etc. Typically the user can accumulate a large collection of messages events from infrastructure using one or more of these different messaging techniques. This user collection of messages events from infrastructure can be presented as a large collection of messages events from infrastructure with limited options of grouping or clustering the messages events from infrastructure.

One way of grouping messages events from infrastructure is to group multiple emails into an email thread. An email thread is a collection of emails that are related based on the subjects of the emails. For example one user sends an email to one or more users based on a given subject. Another user replies to that email and a computer would mark those two emails as belonging to a thread. Another way for grouping messages events from infrastructure is put the messages events from infrastructure into folders. This can be done manually by the user or can be done automatically by the user setting up rules for message processing.

Document clustering and classification techniques can provide an overview or identify a set of documents based upon certain criteria which amplifies or detects certain patterns within its content. In some applications these techniques lead to filtering unwanted email and in other applications they lead to effective search and storage strategies. An identification strategy may for example divide documents into clusters so that the documents in a cluster are similar to one another and are less similar to documents in other clusters based on a similarity measurement. One refers to the process of clustering and classification as labeling. In demanding applications labeling can greatly improve the efficiency of an enterprise especially for storage and retrieval applications provided that it is stable fast efficient and accurate.

Users of information technology must effectively deal with countless unwanted emails unwanted text messages events from infrastructure and crippling new viruses and worms every day. This largely unnecessarily high volume of network traffic decreases worker productivity and slows down important network applications. One of the most serious problems in today s digital economy has to do with the increasing volume of spam. As such recipients of email as well as the service providers need effective solutions to reduce its proliferation on the World Wide Web. However as spam detection becomes more sophisticated spammers invent new methods to circumvent detection. For example one prior art methodology provides a centralized database for maintaining signatures of documents having identified attributes against which emails are compared however spammers now modify the content of their email either slightly or randomly such that the message itself may be intelligible but it evades detection under various anti spam filtering techniques currently employed.

At one time at least 30 open relays dominated the world bursting messages events from infrastructure at different rates and different levels of structural variation. Because certain types of email mutate or evolve as exemplified by spam spam filtering detection algorithms must constantly adjust to be effective. In the case of spam email for example the very nature of the spam corpus undergoes regime changes. Therefore clustering optimality depends heavily on the nature of the data corpus and the changes it undergoes.

Decomposing a traffic matrix has proven to be challenging. In one method a matrix factorization system is used to extract application dependencies in an enterprise network a cloud based data center and other like data centers using a temporal global application traffic graph dynamically constructed over time and spatial local traffic observed at each server of the data center. The data center includes a plurality of servers running a plurality of different applications such as e commerce and content delivery. Each of the applications has a number of components such as a web server application server and database server in the application s dependency path where one or more of the components are shared with one or more of the other applications.

Because such data centers typically host a large number of multi tier applications the applications requests are overlapped both in the spatial and temporal domains making it very difficult for conventional pairwise statistical correlation techniques to correctly extract these interleaved but independent applications. A matrix based representation of application traffic is used which captures both system snapshots and their historical evolution. The system and method decomposes a matrix representation of application graphs into small sub graphs each representing a single application.

The number of applications is usually unknown a priori due to interleaving and overlapping application requests which further imposes a challenge to discovery of the individual application sub graphs. In one prior method and system the number of applications is determined using low rank matrix estimation either with singular value decomposition or power factorization based solvers under complete and incomplete traffic data scenarios with theoretical bound guarantee.

Traffic tapping from switches is limited by the capability of switches as well as the monitoring hosts. A switch typically can mirror only a few ports at the same time. In addition monitoring data collected over multiple switches each with multiple ports may result in high volume aggregate network traffic and potentially packet loss. Both cases lead to significant loss in the monitoring data.

One system and method to overcome this problem utilizes historical data to provide redundancy and employs power factorization based techniques to provide resilience to data loss and estimation errors. In one system and method a distributed network monitors and centralizes data processing to determine application dependency paths in a data center.

The majority of current service management solutions are rule based. The concept behind rule based systems is that you start with the system you are monitoring analyze and model it turning it into a series of business logic rules that respond to events as they occur. For example in response to some logged text you apply logic that turns the text into a database record to which you apply more logic that turns it into an alert before applying again more logic to connect the alert to a trouble ticket.

The fundamental problem with this approach is that the rules are dependent on a point in time snapshot of what is out there that you are managing which is subject to continual change. So every time the infrastructure alters the business logic must be modified. Clearly the rule based approach is not a scalable way of running a business.

Another object of the present invention is to provide an event clustering system that includes a sigalizer engine.

A further object t of the present invention is to provide an event clustering system that determines one or more common steps from events and produces clusters relating to alerts and or events.

Yet another object of the present invention is to provide an event clustering system that utilizes a plurality that determines one or more common steps from events to produce clusters and utilizes hop and proximity of a source of the event.

Still another object of the present invention is to provide an event clustering system that utilizes a plurality that determines one or more common steps from events to produce clusters and uses graphing technology with vectors.

Another object of the present invention is to provide an event clustering system that uses events from infrastructure which is typically managed that includes computers network devices appliances mobile devices text or numerical values from which those text or numerical values indicate a state of any hardware or software component of the infrastructure.

Another object of the present invention is to provide an event clustering system that uses events from infrastructure that generates data which include attributes selected from at least one of time source a description of the event textural or numerical values indicating a state of the infrastructure.

These and other objects of the present invention are achieved in an event clustering system. An extraction engine is in communication with an infrastructure. The extraction engine receives data from the infrastructure and produces events. An alert engine receives the events and creates alerts mapped into a matrix M. A sigalizer engine includes one or more of an NMF engine a k means clustering engine and a topology proximity engine. The sigalizer engine determines one or more common steps from events and produces clusters relating to the alerts and or events.

In another embodiment of the present invention an event clustering system includes an extraction engine in communication with an infrastructure with the extraction engine receiving data from the infrastructure and producing events. An alert engine that receives the events and creates alerts and mapped into a matrix M. A sigalizer engine includes one or more of an NMF engine a k means clustering engine and a topology proximity engine. The sigalizer engine determines one or more common steps from events and produces clusters relating to the alerts and or events. The topology proximity engine uses a source address for each event to assign a graph coordinate to the event with an optional subset of attributes being extracted for each event and turned into a vector. The k means clustering engine using the graph coordinates to cluster the events using a k means algorithm to determine hop and proximity of the source of the event. An optional subset of attributes is extracted for each event and turned into a vector. A similarity measure is used to calculate distance between each of the vectors. Clusters are generated using the k means clustering engine to bring together events whose vectors are determined to be close. The NMF engine factors the matrix M into A and B where A is inspected and significant clusters are extracted and B is used to assign a start and end time to each cluster wherein an output of clusters is produced.

As used herein the term engine refers to software firmware hardware or other component that can be used to effectuate a purpose. The engine will typically include software instructions that are stored in non volatile memory also referred to as secondary memory and a processor with instructions to execute the software. When the software instructions are executed at least a subset of the software instructions can be loaded into memory also referred to as primary memory by a processor. The processor then executes the software instructions in memory. The processor may be a shared processor a dedicated processor or a combination of shared or dedicated processors. A typical program will include calls to hardware components such as I O devices which typically requires the execution of drivers. The drivers may or may not be considered part of the engine but the distinction is not critical.

As used herein the term database is used broadly to include any known or convenient means for storing data whether centralized or distributed relational or otherwise.

As used herein a mobile device includes but is not limited to a cell phone such as Apple s iPhone other portable electronic devices such as Apple s iPod Touches Apple s iPads and mobile devices based on Google s Android operating system and any other portable electronic device that includes software firmware hardware or a combination thereof that is capable of at least receiving a wireless signal decoding if needed and exchanging information with a server to send and receive cultural information data including survey data. Typical components of mobile device may include but are not limited to persistent memories like flash ROM random access memory like SRAM a camera a battery LCD driver a display a cellular antenna a speaker a BLUETOOTH circuit and WIFI circuitry where the persistent memory may contain programs applications and or an operating system for the mobile device.

As used herein the term computer is a general purpose device that can be programmed to carry out a finite set of arithmetic or logical operations. Since a sequence of operations can be readily changed the computer can solve more than one kind of problem. A computer can include of at least one processing element typically a central processing unit CPU and some form of memory. The processing element carries out arithmetic and logic operations and a sequencing and control unit that can change the order of operations based on stored information. Peripheral devices allow information to be retrieved from an external source and the result of operations saved and retrieved. Computer also includes a graphic display medium.

As used herein the term Internet is a global system of interconnected computer networks that use the standard Internet protocol suite TCP IP to serve billions of users worldwide. It is a network of networks that consists of millions of private public academic business and government networks of local to global scope that are linked by a broad array of electronic wireless and optical networking technologies. The Internet carries an extensive range of information resources and services such as the inter linked hypertext documents of the World Wide Web WWW and the infrastructure to support email. The communications infrastructure of the Internet consists of its hardware components and a system of software layers that control various aspects of the architecture.

As used herein the term extranet is a computer network that allows controlled access from the outside. An extranet can be an extension of an organization s intranet that is extended to users outside the organization in isolation from all other Internet users. An extranet can be an intranet mapped onto the public Internet or some other transmission system not accessible to the general public but managed by more than one company s administrator s . Examples of extranet style networks include but are not limited to 

As used herein the term Intranet is a network that is owned by a single organization that controls its security policies and network management. Examples of intranets include but are not limited to 

For purposes of the present invention the Internet extranets and intranets collectively are referred to as Network Systems .

For purposes of the present invention the term Infrastructure means information technology the physical hardware used to interconnect computers and users transmission media including telephone lines cable television lines and satellites and antennas and also the routers aggregators repeaters computers network devices applications and other devices that control transmission paths software used to send receive and manage the signals that are transmitted and everything both hardware and software that supports the flow and processing of information.

As used herein event message or event is defined as a change in state. An event is anything that happens or is contemplated as happening in message form or event form relating to infrastructure. An event can include a time stamp and a name for the entity changing state.

In one embodiment the system is an event clustering system that includes an extraction engine in communication with an infrastructure . As a non limiting example infrastructure includes computers network devices appliances mobile devices applications connections of any of the preceding text or numerical values from which those text or numerical values indicate a state of any hardware or software component of the infrastructure . The infrastructure generates data that includes attributes. As a non limiting example the data is selected from at least one of time source a description of the event textural or numerical values indicating a state of the infrastructure . The extraction engine breaks event messages into subsets of messages that relate to failures or errors in the infrastructure . The subsets of messages can be grouped into clusters.

In one embodiment the extraction engine includes a server. The extraction engine extracts text components from the event messages and converts them into words and subtexts. The extraction engine then reformats data from the event messages to create reformatted data. In one embodiment the reformatted data is received at a system bus.

The extraction engine receives infrastructure data and produces events and populates a database with a dictionary of event entropy. This can be achieved with a token counter as illustrated in . As a non limiting example the database can be a no SQL relational database .

In one embodiment an entropy database is generated with the word and subtexts. As a non limiting example the entropy database is generated using Shannon Entropy ln 1 NGen and normalizes the words and subtexts as follows log 

An entropy database can be provided. In one embodiment the entropy normalizes events across data datasets from the infrastructure . As a non limiting example normalized entropy for events is mapped from a common 0.0 and a non common 1.0 as discussed hereafter. Entropy is assigned to the alerts. The entropy for each event is retrieved from an entropy dictionary as it enters the system . This can be done continuously in parallel with other operation of the extraction engine or run non continuously.

In one embodiment illustrated in a dashboard associated with a situational room is included which allows entities and or people to manipulate messages events from infrastructure alerts or events.

An alert engine receives the events and creates alerts that are mapped into a matrix M of events as illustrated in and as more fully explained hereafter. As a non limiting example Mis the matrix of events.

A sigalizer engine includes a plurality of engines as illustrated in . As non limiting examples an NMF engine a k means clustering engine and a topology proximity engine are provided. Each signalizer engine includes a processor and an arithmetic logic unit ALU . Examples of suitable ALUs are found in EP 0171190 and EP 0271255 fully incorporated herein by reference. In one embodiment the sigalizer engine determines one or more steps from events and produces clusters relating to the alerts and or events.

The sigalizer engine determines sigalizer common steps to ascertain how many clusters to extract from events. Membership in a cluster indicates a common factor which can be a failure or an actionable problem in the infrastructure . The sigalizer engine generates clusters of alerts. In one embodiment an independent failure count detection engine is used for the production of common steps designated as k from events. The independent failure count detection engine can use SVD decomposition. The SVD decomposition is a continuation of a determination of sigalizer common steps.

K is the number obtained from the common sigalizer steps. As a non limiting example common sigalizer steps are designated as M where i are unique events and are the rows of M j represents the time buckets in M. A value for Mequals the number of occurrences of event i in time bucket j. This is the common input to the sigalizer engines .

The topology proximity creates a graph coordinate system . In one embodiment the topology proximity uses a source address for each event to assign a graph coordinate of a graph with nodes to the event with an optional subset of attributes being extracted for each event and turned into a vector. The topology proximity engine executes a graph topology and proximity algorithm.

Mundergoes K means decomposition . Each event is a transformed vector where Vis transformed time stamp V Vand so forth are transformed graph coordinates are grouped into k clusters such that d V V is minimized. In one embodiment the topology engine inputs a list of devices and a list of hops where hop is a connection between components or nodes in the infrastructure .

As a non limiting example the graph can be constructed of any number of points or nodes A B C and D which relate to the source of an event. The result is a connecting graph .

The topology proximity engine receives the coordinate s mapping and clusters are generated. V base nodes calculate a minimum hops to every other node which gives coordinate and the graph coordinates are mapped.

In one embodiment the k means clustering engine uses the graph coordinates to cluster the events using a k means algorithm to determine hop proximity of the source of the event.

B where a equals rows and b equals columns x defines the normal operation of matrix multiplication. M is the matrix as stated above and k is as recited above.

The NMF algorithm produces two matrices A and B . A represents by cluster a common failure and B represents time bucket by cluster a common failure . In one embodiment the NMF engine factors the matrix M into A and B where A are deemed to be significant and are extracted e.g clusters deemed significant are extracted. The system looks for significantly high values as compared to statistically significant values in the A and B matrix. If they are not statistically significant they are dropped. The statistically significant elements of M are used to determine a cluster. As a non liming example the determination of significance is based on high signatures in the matrix. As above those that are not high enough are dropped and not included in the output of clusters which is produced.

Each alert is mapped to a vector V V where Vis a time stamp t Vis an attribute of alert. In one embodiment attributes of an event are mapped to a vector V.

The vectors are grouped into k clusters using k means such that d V V is a minimum in its own cluster.

In one embodiment the grouping is executed also using a standard Euclidian distance. In one embodiment a weighting of components is supplied. The system transforms the alert attributes into a number value that is used as the components of the vector. As a non limiting example an alert attribute is a textual value. In one embodiment similar attributes are mapped to numbers that are also similar or close relative to the graph with the closeness being dynamic and can be predetermined changed modified set and the like.

In one embodiment of the matrix M columns are slices in time and the rows are unique alerts. A unique alert is received from the deduplication engine which eliminates duplications and creates unique alerts.

In one embodiment the matrix M is created with alert time and a fixed number of common alerts. The matrix M can be dynamic and change in time. The matrix M includes rows that can be unique alerts. The matrix includes columns that are time buckets and a number of occurrences are plotted.

Evaluated events are either discarded or passed to clusters with alerts are collected into time buckets and mapped in the matrix M. In one embodiment a bucket width is a parameter that can be an input to the signalizer engine .

Outputs from the sigalizer engines are received at a compare and merge engine . The compare and merge engine communicates with one or more user interfaces in the situation room . The three sigalizer algorithms are used with the comparison or merger engine and clusters are published on the a system bus for display in the situation room .

As a non limiting example the bus can be a publication message bus. As a non limiting example the bus processes anything that goes from A to B and from B to A. In one embodiment a data bus web server is coupled to user interfaces as illustrated in.

As illustrated in a plurality of link access modules are in communication with the data bus and receive messages events. Events are received by a coordinator that executes clustering of the events.

In one embodiment normalized words and subtexts are mapped to a common 0.0 and a non common 1.0 as illustrated in .

The alerts can be run in parallel with the activities of the system . The alerts are passed to the sigalizer engine .

In one embodiment a deduplication engine is used for event messages of data streams received from the client . The deduplication engine eliminates duplicate copies of repeating data. In one embodiment the deduplication engine reduces a number of bytes in network data transfers that need to be sent.

A computer scripting language script language can be included that alters the events or flow of events. As non limiting examples the scripting language can be Java C C C Objective C PHP VB Python Pearl Ruby Javascript and the like.

In one embodiment the NMF k means and or topology proximity algorithms are optionally repeated. The repeating can be performed by varying k from the previously performed common steps in the sigalizer engine and optionally along with the SVD decomposition.

Optionally generated clusters are tested against a quality function supplied by the system which evaluates a cluster s uniformity. In one embodiment the system selects a best set clusters against the quality clusters.

As a non limiting example clusters are examiner against a customer supplied configuration database for each source of an event. As a non limiting example the examining can be performed to determine a type of device impacted users relevant support experts and the like .

where W H are n k and k p non negative matrices respectively. In practice the factorization rank r is often chosen such that r

D is a loss function that measures the quality of the approximation. Common loss functions are based on either the Frobenius distance or the Kullback Leibler divergence.

R is an optional regularization function defined to enforce desirable properties on matrices W and H such as smoothness or sparsity.

Given a set of event vectors x x . . . x where each observation is a d dimensional real vector k means clustering aims to partition the n observations into k sets k n S S S . . . S so as to minimize the within cluster sum of squares WCSS 

In one embodiment of the situation room as illustrated in a system is provided for creating and displaying in a dashboard directed to the system from clustering messages received from the infrastructure also known as the dashboard system for the situation room .

In one embodiment the situation room has a display that can be interactive. The situation room can be coupled to or includes a dashboard design system display computer system and a data system .

In one embodiment the system includes dashboard converter logic data range determination logic dashboard component generator external interface logic graphic library and network interface logic . In one embodiment the system includes data processing computing systems.

In one embodiment the dashboard file converter logic converts the situations and alerts from system from clustering messages received from the infrastructure data structures and data to be compatible with or match with the interface logic .

In one embodiment the logic provides communication between the graphical dashboard and the problem walls from clustering messages received from the infrastructure

The problem walls from clustering messages received from the infrastructure are provided as disclosed above.

In one embodiment the logic dashboard component generator and the external interface logic are each used for designing the problem walls from clustering messages received from the infrastructure .

A dashboard or SWF file can be included that establishes a data range type of components and the external interface. In one embodiment the logic is used for a data range in a spreadsheet associated with the dashboard file used to generate a visual display.

In one embodiment a dashboard component generator is provided that allows a user to place problem walls from clustering messages received from the infrastructure components with various attributes onto a canvas. The canvas can be a space where various visual components are.

In one embodiment the user is able to choose components directed to problem walls from clustering messages received from infrastructure elements from a different components. These can be included in a panel and the user can then place them on the canvas in any way that the user desires.

In one embodiment the components are provided by the client by the system by third parties and from third parties. Examples of other components include but are not limited to graphs style of presentation additional information comparisons trends artistic elements text and the like. In some embodiments the user or client can select the background margins presentation of elements and the like.

In one embodiment an external interface logic is provided. The interface logic allows a dashboard to provide data ranges permutations trends activities and the like associated with problem walls from clustering messages received from the infrastructure . In one embodiment interface logic allows the business application software to export application data to be displayed in a dashboard in an interactive visual format.

In various embodiments a network interface logic and allows for connectivity of the dashboard design system display computer system and data system to each other or to public networks. In one embodiment a graphical file that has been configured by the computer system is stored in the data storage system . In one embodiment the graphic file is used for data mapping both during and after design time and can generate the display during a period of execution. The external adapter can be utilized for communication between the data storage system and the graphical file.

In one embodiment network interface logics and allow computer systems and to connect to each other and the other computer systems. As a non limiting example the network interface logic and can be one or more computers or web servers that provide a graphical user interface for clients or third parties that access the subsystems of system or through the internet or an intranet protocol. The network interface logic and can include other logics configured to provide interfaces for other types of devices including but not limited to mobile devices server based computing systems and the like.

As a non limiting example in one embodiment the display computer system includes network interface logic context viewer system data storage system and dashboard display system .

In another embodiment the dashboard display system is included in the context viewer system and be executed in a machine one or more display and other computers with machine readable storage media cache memory flash drive or internal or external hard drive or in a cloud computing environment non transitory computer readable media or non transmissible computer readable media with stored instructions executed by the machine to perform the operations. In one embodiment the context viewer system is a program product that performs various processing functions. As non limiting examples these functions can include receiving data from the data source preparing data by aggregating providing access to visualization capabilities and the like.

In one embodiment the data storage system stores data related to problem walls from clustering messages received from the infrastructure applications executed on the display computer system .

In one embodiment the data storage system stores problem walls from clustering messages received from the infrastructure data or statistical data. As a non limiting example the dashboard display system communicates with the display computer system to display problem walls from clustering messages received from infrastructure data in a dashboard in a visual manner or in visual components using graphics. Displaying problem walls from clustering messages received from infrastructure data graphically may include displaying bar graphs and or pie charts or other visual displays. In order to generate the dashboard display the client can map dashboard data fields to the problem walls from clustering messages received from infrastructure data fields. This allows access of data from problem walls from clustering messages received from infrastructure without data replication.

Embodiments of the data storage system may store a variety of information including application data in database . The application data database may receive data from the data system . The data storage system may provide data to the context viewer system . More specifically the data storage system may provide data to the data aggregation logic . The data storage system may receive appropriate data mapping instructions from the data mapping logic and query the data system to correlate the data from one mapped field in the dashboard tool to the mapped fields in the application data .

Embodiments of the dashboard display system may be provided on the display computer system . In an example embodiment the dashboard display system may transfer data from various data sources or data from various applications to external data ranges of the graphic file and display the graphical interface during runtime operations. The dashboard display system may include all of the features discussed above with regard to the dashboard design system . Also the dashboard display system also includes a dashboard execution logic and external interface logic . The external interface logic may have similar features as the external interface logic of the dashboard design system . The external interface logic may expose selected data ranges of the dashboard to the business software data. The external interface logic may allow the business application software to export application data to be displayed in the dashboard in a visual format instead of a textual format. During runtime when displaying the dashboard in the business application the dashboard execution logic is configured to receive the data from the business application and generate a Flash Island interactive display as designed by the dashboard design system or dashboard display system .

The data system includes an application logic and application data . The data system may be configured to provide data and communicate with the display computer system . The application logic is the server side of the application that provides back end information to the context viewer system . For example the application logic may comprise an Enterprise Resource Planning ERP Customer Relation Management CRM or Business Intelligence BI system. Business intelligence may refer to computer based techniques used to analyze business data such as sales revenue by products and or departments or associated costs and incomes. The application data may include relational or other types of databases. The application data includes various fields that may be mapped to the fields exposed by the external dashboard interface.

A business user may perform the other steps of by using the display computer system . In an example embodiment the business user s steps may be performed during runtime. In this embodiment runtime includes displaying of the dashboard in a business application using data from business application data sources. In another embodiment the business user may perform the steps described above with regard to the dashboard design user. At step the business user may open the context viewer system where the business user may select a chart view as shown in . In the chart view tab the business user may assign the dashboard or SWF file to a query view by specifying the location of the file. At step the dashboard data ranges that were determined at step may be mapped to query view fields. In an example embodiment the data from the data source or is placed in the mapped location in the dashboard. In another example embodiment the mapping between application data and graphical interface data may identify which application data may be shown in the reserved placeholder of the dashboard. After mapping the data ranges at step the dashboard may be displayed in the business application. In one embodiment the business application may be software applications that provide various functionalities such as customer relationship management enterprise resource management product lifecycle management supply chain management and supplier relationship management. In another embodiment the dashboard may be configured to receive data from the data system after the mapping has occurred or the data may be accessed during runtime.

In another embodiment the generic adapter may convert the Flash Island properties into dashboard structures. In an example embodiment the generic adapter may be used to load external dashboard ranges during the configuration stage at step . In this embodiment the generic adapter may push application data to the data ranges defined in step . In another embodiment the generic adapter may provide an application programming interface between the graphic player and the server . The generic adapter may load dashboard ranges automatically and the dashboard data ranges may be converted into XML strings. The XML string may be converted into Java or ABAP code which may be executed by the business application to display a dashboard. The server may include NetWeaver ABAP or Java language programming and the server may include various systems that are supported in the business software suit the runtime application database and business intelligence application . In another embodiment the functionality of the server may be implemented by the display computing system . In yet another embodiment the functionality of server may be divided between the display computing system and data system . In another embodiment the graphic player may be implemented on the dashboard design system . Additionally or alternatively the functionality of the graphic player may be implemented on the display computing system .

The embodiments refer to a dashboard that may be a web based or other technology based display on which real time data is collated processed and displayed from multiple data sources that belong to one or more businesses. Other terms that may be used to describe a dashboard include digital dashboard enterprise dashboard business dashboard executive dashboard operational dashboard BI dashboard database dashboard Web dashboard performance dashboard score card KPI dashboard metrics dashboard and so on. Dashboards may be designed to help any user monitor what s happening or has happened in the past visually or at a glance. Dashboards may provide the user a means to rapidly monitor the current status. Accordingly dashboards must be designed to take advantage of the strengths of visual perception cognition and work around or augment the user s weaknesses.

Embodiments can include a system for displaying data stored on computer readable non transitory media. The system configured to access one or more data fields within a file. The file having been configured using an external connection adapter. The system may include a display computer system configured to map the accessed one or more data fields to data from one or more data sources the mapping being performed based on a user input via a graphical user interface. In this embodiment the system may be configured to display on the display computer system a dashboard according to the configuration setting stored in the file the dashboard may show a graphical representation of the data from the one or more data sources and information from the one or more data fields.

In another embodiment the dashboard includes dashboard display system that processes the data from the one or more data sources and displays a visual representation of the data in a graph or chart form. Alternatively or additionally the dashboard includes a component that is modified by using a graphical user interface such that the dashboard display or components are modified.

In another embodiment the file is generated by a first software program located in the dashboard design system that is configured to generate the dashboard. The display computing system may further comprise executing a second software program on the display computer system to retrieve the data from the one or more data sources and displaying the dashboard. The display computing system may include converting using a generic adapter the data from the one or more data sources into data structures that are compatible with a format of the graphic file.

In another embodiment the data is converted from the one or more data sources into data structures that are compatible with a format of the file using the external connection adapter. The file can be a short web format file that exposes one or more data fields that may be mapped to fields in one or more data sources. In another embodiment the mapping may occur via a graphical user interface free of receiving textual programming code from the user.

In another embodiment a computer implemented method is stored on a computer readable media. Visualization software is integrated with a data processing application that includes configuring a dashboard display using a dashboard design system. The dashboard display can use one or more first data ranges from a spreadsheet as example data. An external connection adapter can be used to provide access to one or more first data ranges that are to be displayed in the dashboard display.

In other embodiments the dashboard display is exported in a graphic file format. In certain embodiments one or more first data ranges are accessed from the dashboard display using a display computing system. In one embodiment one or more first data ranges are connected to one or more second data ranges from one or more data sources. The dashboard can display using data from the one or more second data ranges.

In one embodiment the dashboard displays with the problem walls from clustering messages received from infrastructure data can use a graphical user interface that is free from receiving textual or textual programming code from the client. In this embodiment the method may include processing place problem walls from clustering messages received from managed infrastructure from the one or more data sources and displaying a visual representation of the data in a graph or chart form. This can include a method that includes a component that may be modified by using a graphical user interface that results in a modification of the dashboard display.

In one embodiment a method is provided that includes a dashboard display generated by a first software program that generates a visual display. This can include executing a second software program on the display computer system to retrieve the data from the one or more data sources and displaying the dashboard and the method may include converting using a generic adapter the data from the one or more data sources into data structures that are compatible with a format of the file.

In one embodiment the exporting can include converting the place problem walls from clustering messages received from infrastructure data from the one or more second data sources into data structures that are compatible with the graphic file format. In one embodiment this can include converting using an external interface adapter. A graphic file format can be a short web format that allows a software to access the one or more first data ranges.

In another embodiment a user interface system has an external connection adapter configured to provide access to one or more data fields within a file. As a non limiting example this can include a display computer system that maps using a graphical user interface the one or more data fields to data from one or more data sources. The display computer system can generate a dashboard display from a configuration in the file. In one embodiment the display includes place problem walls from clustering messages received from infrastructure data from one or more data sources and information from one or more data fields. A graphical user interface can be provided that is free of receiving textual programming code from the user.

In one embodiment a first software executed on a display computer system that generates the dashboard in a visual graphic display. A second software program can be included to execute on the display computer system and retrieve the data from the one or more data sources and display the dashboard display. A generic adapter can be utilized to convert the data from the one or more data sources into one or more data structures that are compatible with a format of the file.

In one embodiment a graphical user interface can modify a component and this can be used to modify the dashboard display.

In one embodiment an external connection adapter converts the data from the one or more data sources into data structures that are compatible with a format of the file using the external connection adapter.

The logics can be machine readable media for carrying or have machine executable instructions or data structures stored thereon. The machine readable media can be any available media that may be accessed by a general purpose or special purpose computer or other machine with a processor. As a non limiting example a variety of machine readable media can be utilized including but not limited to RAM ROM EPROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices non transitory computer readable media or non transmissible computer readable media or any other medium which may be used to carry or store desired program code in the form of machine executable instructions or data structures and which may be accessed by a general purpose or special purpose computer or other machine with a processor. With the dashboard system any such type of connection is termed a machine readable medium. It will be appreciated that the machine readable medium can include combinations of the preceding.

As non limiting examples with the dashboard system machine executable instructions can be instructions and data which cause a general purpose computer special purpose computer or special purpose processing machines to perform a certain function or group of functions and the like.

The dashboard system can be implemented by a program product including machine executable instructions such as program code. As a non limiting example this can be program modules executed by machines in networked environments. As non limiting examples the program modules can include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. As non limiting examples the dashboard system can utilize machine executable instructions associated data structures and program modules as program code for executing steps of the methods disclosed herein.

As non limiting examples the dashboard system can be executed in a networked environment using logical connections to one or more remote computers having processors. AS non limiting examples suitable network computing environments can be computers including personal computers mobile devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like.

In certain embodiments the dashboard system can be executed in distributed computing environments where tasks are performed by local and remote processing devices that are linked. As non limiting examples the linking can be by hardwired links wireless links combination of hardwired or wireless links and the like through a communications network. In one embodiment computing environment program modules may be located in both local and remote memory storage devices.

As a non limiting example one embodiment of a system for implementing the overall system or portions of the embodiments can include a general purpose computing computers in the form of computers including a processing unit a system memory or database and a system bus that couples various system components including the system memory to the processing unit. The database or system memory cam include read only memory ROM and random access memory RAM .

As a non limiting example the database can be a magnetic hard disk drive for reading from and writing to a magnetic hard disk a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media and the like.

As a non limiting example the drives and their associated machine readable media can be used to provide nonvolatile storage of machine executable instructions data structures program modules and other data for the computer. It should also be noted that the word terminal as used herein is intended to encompass computer input and output devices. User interfaces as described herein may include a computer with monitor keyboard a keypad a mouse joystick or other input devices performing a similar function.

Referring now to diagrams are provided illustrating embodiments of a mobile or computing device that can be used as infrastructure with system .

Referring to the mobile or computing device can include a display that can be a touch sensitive display. The touch sensitive display is sometimes called a touch screen for convenience and may also be known as or called a touch sensitive display system. The mobile or computing device may include a memory which may include one or more computer readable storage mediums a memory controller one or more processing units CPU s a peripherals interface Network Systems circuitry including but not limited to RF circuitry audio circuitry a speaker a microphone an input output I O subsystem other input or control devices and an external port. The mobile or computing device may include one or more optical sensors. These components may communicate over one or more communication buses or signal lines.

It should be appreciated that the mobile or computing device is only one example of a portable multifunction mobile or computing device and that the mobile or computing device may have more or fewer components than shown may combine two or more components or a may have a different configuration or arrangement of the components. The various components shown in may be implemented in hardware software or a combination of hardware and software including one or more signal processing and or application specific integrated circuits.

Memory may include high speed random access memory and may also include non volatile memory such as one or more magnetic disk storage devices flash memory devices or other non volatile solid state memory devices. Access to memory by other components of the mobile or computing device such as the CPU and the peripherals interface may be controlled by the memory controller.

The peripherals interface couples the input and output peripherals of the device to the CPU and memory. The one or more processors run or execute various software programs and or sets of instructions stored in memory to perform various functions for the mobile or computing device and to process data.

In some embodiments the peripherals interface the CPU and the memory controller may be implemented on a single chip such as a chip. In some other embodiments they may be implemented on separate chips.

The Network System circuitry receives and sends signals including but not limited to RF also called electromagnetic signals. The Network System circuitry converts electrical signals to from electromagnetic signals and communicates with communications networks and other communications devices via the electromagnetic signals. The Network Systems circuitry may include well known circuitry for performing these functions including but not limited to an antenna system an RF transceiver one or more amplifiers a tuner one or more oscillators a digital signal processor a CODEC chipset a subscriber identity module SIM card memory and so forth. The Network Systems circuitry may communicate with networks such as the Internet also referred to as the World Wide Web WWW an intranet and or a wireless network such as a cellular telephone network a wireless local area network LAN and or a metropolitan area network MAN and other devices by wireless communication.

The wireless communication may use any of a plurality of communications standards protocols and technologies including but not limited to Global System for Mobile Communications GSM Enhanced Data GSM Environment EDGE high speed downlink packet access HSDPA wideband code division multiple access W CDMA code division multiple access CDMA time division multiple access TDMA BLUETOOTH Wireless Fidelity Wi Fi e.g. IEEE 802.11a IEEE 802.11b IEEE 802.11g and or IEEE 802.11n voice over Internet Protocol VoIP Wi MAX a protocol for email e.g. Internet message access protocol IMAP and or post office protocol POP instant messaging e.g. extensible messaging and presence protocol XMPP Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions SIMPLE and or Instant Messaging and Presence Service IMPS and or Short Message Service SMS or any other suitable communication protocol including communication protocols not yet developed as of the filing date of this document.

The audio circuitry the speaker and the microphone provide an audio interface between a user and the mobile or computing device. The audio circuitry receives audio data from the peripherals interface converts the audio data to an electrical signal and transmits the electrical signal to the speaker. The speaker converts the electrical signal to human audible sound waves. The audio circuitry also receives electrical signals converted by the microphone from sound waves. The audio circuitry converts the electrical signal to audio data and transmits the audio data to the peripherals interface for processing. Audio data may be retrieved from and or transmitted to memory and or the Network Systems circuitry by the peripherals interface. In some embodiments the audio circuitry also includes a headset jack . The headset jack provides an interface between the audio circuitry and removable audio input output peripherals such as output only headphones or a headset with both output e.g. a headphone for one or both ears and input e.g. a microphone .

The I O subsystem couples input output peripherals on the mobile or computing device such as the touch screen and other input control devices to the peripherals interface. The I O subsystem may include a display controller and one or more input controllers for other input or control devices. The one or more input controllers receive send electrical signals from to other input or control devices. The other input control devices may include physical buttons e.g. push buttons rocker buttons etc. dials slider switches and joysticks click wheels and so forth. In some alternate embodiments input controller s may be coupled to any or none of the following a keyboard infrared port USB port and a pointer device such as a mouse. The one or more buttons may include an up down button for volume control of the speaker and or the microphone. The one or more buttons may include a push button. A quick press of the push button may disengage a lock of the touch screen or begin a process that uses gestures on the touch screen to unlock the device as described in U.S. patent application Ser. No. 11 322 549 Unlocking a Device by Performing Gestures on an Unlock Image filed Dec. 23 2005 which is hereby incorporated by reference in its entirety. A longer press of the push button may turn power to the mobile or computing device on or off. The user may be able to customize a functionality of one or more of the buttons. The touch screen is used to implement virtual or soft buttons and one or more soft keyboards.

The touch sensitive touch screen provides an input interface and an output interface between the device and a user. The display controller receives and or sends electrical signals from to the touch screen. The touch screen displays visual output to the user. The visual output may include graphics text icons video and any combination thereof collectively termed graphics . In some embodiments some or all of the visual output may correspond to user interface objects further details of which are described below.

A touch screen has a touch sensitive surface sensor or set of sensors that accepts input from the user based on haptic and or tactile contact. The touch screen and the display controller along with any associated modules and or sets of instructions in memory detect contact and any movement or breaking of the contact on the touch screen and converts the detected contact into interaction with user interface objects e.g. one or more soft keys icons web pages or images that are displayed on the touch screen. In an exemplary embodiment a point of contact between a touch screen and the user corresponds to a finger of the user.

The touch screen may use LCD liquid crystal display technology or LPD light emitting polymer display technology although other display technologies may be used in other embodiments. The touch screen and the display controller may detect contact and any movement or breaking thereof using any of a plurality of touch sensing technologies now known or later developed including but not limited to capacitive resistive infrared and surface acoustic wave technologies as well as other proximity sensor arrays or other elements for determining one or more points of contact with a touch screen.

A touch sensitive display in some embodiments of the touch screen may be analogous to the multi touch sensitive tablets described in the following U.S. Pat. No. 6 323 846 Westerman et al. U.S. Pat. No. 6 570 557 Westerman et al. and or U.S. Pat. No. 6 677 932 Westerman and or U.S. Patent Publication 2002 0015024A1 each of which is hereby incorporated by reference in their entirety. However a touch screen displays visual output from the portable mobile or computing device whereas touch sensitive tablets do not provide visual output.

A touch sensitive display in some embodiments of the touch screen may be as described in the following applications 1 U.S. patent application Ser. No. 11 381 313 Multipoint Touch Surface Controller filed May 12 2006 2 U.S. patent application Ser. No. 10 840 862 Multipoint Touchscreen filed May 6 2004 3 U.S. patent application Ser. No. 10 903 964 Gestures For Touch Sensitive Input Devices filed Jul. 30 2004 4 U.S. patent application Ser. No. 11 048 264 Gestures For Touch Sensitive Input Devices filed Jan. 31 2005 5 U.S. patent application Ser. No. 11 038 590 Mode Based Graphical User Interfaces For Touch Sensitive Input Devices filed Jan. 18 2005 6 U.S. patent application Ser. No. 11 228 758 Virtual Input Device Placement On A Touch Screen User Interface filed Sep. 16 2005 7 U.S. patent application Ser. No. 11 228 700 Operation Of A Computer With A Touch Screen Interface filed Sep. 16 2005 8 U.S. patent application Ser. No. 11 228 737 Activating Virtual Keys Of A Touch Screen Virtual Keyboard filed Sep. 16 2005 and 9 U.S. patent application Ser. No. 11 367 749 Multi Functional Hand Held Device filed Mar. 3 2006. All of these applications are incorporated by reference herein in their entirety.

The touch screen may have a resolution in excess of 1000 dpi. In an exemplary embodiment the touch screen has a resolution of approximately 1060 dpi. The user may make contact with the touch screen using any suitable object or appendage such as a stylus a finger and so forth. In some embodiments the user interface is designed to work primarily with finger based contacts and gestures which are much less precise than stylus based input due to the larger area of contact of a finger on the touch screen. In some embodiments the device translates the rough finger based input into a precise pointer cursor position or command for performing the actions desired by the user.

In some embodiments in addition to the touch screen the mobile or computing device may include a touchpad not shown for activating or deactivating particular functions. In some embodiments the touchpad is a touch sensitive area of the device that unlike the touch screen does not display visual output. The touchpad may be a touch sensitive surface that is separate from the touch screen or an extension of the touch sensitive surface formed by the touch screen.

In some embodiments the mobile or computing device may include a physical or virtual click wheel as an input control device. A user may navigate among and interact with one or more graphical objects henceforth referred to as icons displayed in the touch screen by rotating the click wheel or by moving a point of contact with the click wheel e.g. where the amount of movement of the point of contact is measured by its angular displacement with respect to a center point of the click wheel . The click wheel may also be used to select one or more of the displayed icons. For example the user may press down on at least a portion of the click wheel or an associated button. User commands and navigation commands provided by the user via the click wheel may be processed by an input controller as well as one or more of the modules and or sets of instructions in memory. For a virtual click wheel the click wheel and click wheel controller may be part of the touch screen and the display controller respectively. For a virtual click wheel the click wheel may be either an opaque or semitransparent object that appears and disappears on the touch screen display in response to user interaction with the device. In some embodiments a virtual click wheel is displayed on the touch screen of a portable multifunction device and operated by user contact with the touch screen.

The mobile or computing device also includes a power system for powering the various components. The power system may include a power management system one or more power sources e.g. battery alternating current AC a recharging system a power failure detection circuit a power converter or inverter a power status indicator e.g. a light emitting diode LED and any other components associated with the generation management and distribution of power in portable devices.

The mobile or computing device may also include one or more sensors including not limited to optical sensors. illustrates how an optical sensor coupled to an optical sensor controller in I O subsystem. The optical sensor may include charge coupled device CCD or complementary metal oxide semiconductor CMOS phototransistors. The optical sensor receives light from the environment projected through one or more lens and converts the light to data representing an image. In conjunction with an imaging module also called a camera module the optical sensor may capture still images or video. In some embodiments an optical sensor is located on the back of the mobile or computing device opposite the touch screen display on the front of the device so that the touch screen display may be used as a viewfinder for either still and or video image acquisition. In some embodiments an optical sensor is located on the front of the device so that the user s image may be obtained for videoconferencing while the user views the other video conference participants on the touch screen display. In some embodiments the position of the optical sensor can be changed by the user e.g. by rotating the lens and the sensor in the device housing so that a single optical sensor may be used along with the touch screen display for both video conferencing and still and or video image acquisition.

The mobile or computing device may also include one or more proximity sensors. In one embodiment the proximity sensor is coupled to the peripherals interface. Alternately the proximity sensor may be coupled to an input controller in the I O subsystem. The proximity sensor may perform as described in U.S. patent application Ser. No. 11 241 839 Proximity Detector In Handheld Device filed Sep. 30 2005 Ser. No. 11 240 788 Proximity Detector In Handheld Device filed Sep. 30 2005 Ser. No. 13 096 386 Using Ambient Light Sensor To Augment Proximity Sensor Output Ser. No. 13 096 386 Automated Response To And Sensing Of User Activity In Portable Devices filed Oct. 24 2006 and Ser. No. 11 638 251 Methods And Systems For Automatic Configuration Of Peripherals which are hereby incorporated by reference in their entirety. In some embodiments the proximity sensor turns off and disables the touch screen when the multifunction device is placed near the user s ear e.g. when the user is making a phone call . In some embodiments the proximity sensor keeps the screen off when the device is in the user s pocket purse or other dark area to prevent unnecessary battery drainage when the device is a locked state.

In some embodiments the software components stored in memory may include an operating system a communication module or set of instructions a contact motion module or set of instructions a graphics module or set of instructions a text input module or set of instructions a Global Positioning System GPS module or set of instructions and applications or set of instructions .

The operating system e.g. Darwin RTXC LINUX UNIX OS X WINDOWS or an embedded operating system such as VxWorks includes various software components and or drivers for controlling and managing general system tasks e.g. memory management storage device control power management etc. and facilitates communication between various hardware and software components.

The communication module facilitates communication with other devices over one or more external ports and also includes various software components for handling data received by the Network Systems circuitry and or the external port. The external port e.g. Universal Serial Bus USB FIREWIRE etc. is adapted for coupling directly to other devices or indirectly over a network e.g. the Internet wireless LAN etc. . In some embodiments the external port is a multi pin e.g. 30 pin connector that is the same as or similar to and or compatible with the 30 pin connector used on iPod trademark of Apple Computer Inc. devices.

The contact motion module may detect contact with the touch screen in conjunction with the display controller and other touch sensitive devices e.g. a touchpad or physical click wheel . The contact motion module includes various software components for performing various operations related to detection of contact such as determining if contact has occurred determining if there is movement of the contact and tracking the movement across the touch screen and determining if the contact has been broken i.e. if the contact has ceased . Determining movement of the point of contact may include determining speed magnitude velocity magnitude and direction and or an acceleration a change in magnitude and or direction of the point of contact. These operations may be applied to single contacts e.g. one finger contacts or to multiple simultaneous contacts e.g. multitouch multiple finger contacts . In some embodiments the contact motion module and the display controller also detect contact on a touchpad. In some embodiments the contact motion module and the controller detects contact on a click wheel.

Examples of other applications that may be stored in memory include other word processing applications JAVA enabled applications encryption digital rights management voice recognition and voice replication.

In conjunction with touch screen display controller contact module graphics module and text input module a contacts module may be used to manage an address book or contact list including adding name s to the address book deleting name s from the address book associating telephone number s e mail address es physical address es or other information with a name associating an image with a name categorizing and sorting names providing telephone numbers or e mail addresses to initiate and or facilitate communications by telephone video conference e mail or IM and so forth.

The foregoing description of various embodiments of the claimed subject matter has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the claimed subject matter to the precise forms disclosed. Many modifications and variations will be apparent to the practitioner skilled in the art. Particularly while the concept component is used in the embodiments of the systems and methods described above it will be evident that such concept can be interchangeably used with equivalent concepts such as class method type interface module object model and other suitable concepts. Embodiments were chosen and described in order to best describe the principles of the invention and its practical application thereby enabling others skilled in the relevant art to understand the claimed subject matter the various embodiments and with various modifications that are suited to the particular use contemplated.

