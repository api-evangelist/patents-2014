---

title: Digital identity management
abstract: One aspect relates to a process and associated device for managing digital ID lifecycles for application programs, and abstracting application programs for multiple types of credentials through a common Digital Identity Management System (DIMS) and Application Programming Interface (API) layer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09477832&OS=09477832&RS=09477832
owner: Microsoft Technology Licensing, LLC
number: 09477832
owner_city: Redmond
owner_country: US
publication_date: 20140825
---
This application is a continuation of and claims priority to U.S. patent application Ser. No. 13 410 173 which was filed Mar. 1 2012 which is a continuation of and claims priority to U.S. patent application Ser. No. 11 552 736 which was filed Nov. 25 2006 and that is a divisional of and claims priority to U.S. patent application Ser. No. 10 363 878 which was filed Feb. 13 2003 by Cross et al. now U.S. Pat. No. 7 703 128 the disclosure of both being fully incorporated by reference herein.

In operating systems and platforms various technologies exist that relate to managing digital identities such as certificates identities tokens keys assertions or credentials. Each developer of application programs often applies their own techniques for managing these certificates identities or credentials. Application programs therefore often manage and store their digital identities differently. This variation in techniques for managing the digital identities makes it more difficult for application programs to interface with the credentials. The individual application programs that store or interface with different digital identities often have difficulty interfacing with different types of digital identities associated with the different application programs.

Historically the operating system and application program developers have protected digital identities using different methods and have stored the digital identities in different locations. Networking aspects of the application programs make such protection of networked data and programs even more important and challenging since networked application programs typically have to be able to access data from certain prescribed locations. Application programs typically have to be aware of how to obtain data through the protection provided by digital identities and be able to prove their validity at different locations within the operating system.

This disclosure relates in general to management of digital identities IDs . One aspect of this disclosure relates to a method and associated apparatus for managing digital ID lifecycles of digital identities for application programs and abstracting application programs for multiple types of digital identities through a common digital identity management system DIMS and Application Programming Interface API layer.

The present disclosure relates to techniques that enable users novice and advanced to secure their documents files e mail messages communication sessions web sessions etc. and or collaborate with other individuals such as family members peers team members and business partners in a secure and easy to use manner. Authentication is crucial to secure communications. Users must be able to prove their identity to those with whom they communicate and must be able to verify the identity of others. Authentication of identity on a network is complex because the communicating parties do not physically meet as they communicate. Without authentication or encryption another person can intercept messages or impersonate another person or entity.

Certain embodiments of digital identities IDs and credentials as described herein have attributes associated with them. At a higher level multiple ones of these credentials or digital IDs can be somewhat interchangeable. Certain credentials and digital IDs have the same associated attributes such as an e mail address . Other credentials and digital IDs have different attributes and different expiration dates. The digital IDs include but are not limited to key pairs username and passwords licenses assertions certificates and the like.

A user name and password associated with a digital ID may depending on the application program and the associated secrecy have a useful life of e.g. several seconds or alternatively many months. Some shorter lasting digital IDs are used to obtain additional digital IDs having a longer duration or vice versa. The digital ID such as a certificate and key pair may have a useful life of e.g. 180 days. As such there exist a wide variety of digital IDs. Digital IDs allow one or more users to securely use a variety of their application programs. Digital IDs also allow a plurality of users to communicate securely.

In one embodiment a digital ID such as a certificate is a set of data that identifies an entity. Another embodiment is a digital ID that is an assertion or a set of claims regarding that identity. A trusted organization can assign a digital ID to an individual or an entity that associates a key or a set of claims with the individual. The individual or entity to whom the digital ID is issued is called the subject of that digital ID. The trusted organization sometimes known as a trusted third party that issues the digital ID is in different embodiments a security token service STS a Certification Authority CA or a key distribution authority such as a Kerberos key distribution center KDC . The trusted organization is considered the digital ID s issuer. Certain embodiments of the STS include a CA a key distribution center a license server or other trusted source that distributes digital IDs. A trusted organization such as the STS will only issue a digital ID after verifying the identity of the digital ID s subject.

The digital ID is a data structure that can be stored in a relational database a flat database files system key device or other computer memory device. One embodiment of the digital ID is described relative to . The digital ID store s data relating to the identity of a particular user such as certificates for a user and or a key pair .

There are a large variety of digital ID management systems DIMS that are described in this disclosure. In general DIMS provide processes for application programs to perform authentication authorization encryption and decryption using digital IDs. Many embodiments of DIMS are configured to perform credential management. Within this disclosure a digital identity management system DIMS refers to any system that manages one or more digital IDs. Digital IDs include such identities as certificates credentials tokens assertions claims and key pairs.

Certain embodiments of the DIMS as described within the disclosure manage such digital IDs as certificates that are used for data encryption and decryption in a variety of application programs. For example the DIMS could store their validity periods and indicate where the digital IDs originated so that the DIMS can manage the digital IDs on behalf of the user or on behalf of an application program as shown in . As such the DIMS is aware of the status of the various digital IDs and acts on behalf of the digital IDs so that the contained information is constantly fresh or serviceable to the application programs and to the user.

A user should be able to create a digital ID on demand by going to a user interface such as a management console and following the user interface prompts. The management console should provide the user interface to the DIMS. The generation of the digital ID should be easy to perform and seamless. The user interface may provide the user options to activate a key device such as a smartcard and smartcard reader. The management console could even prompt the user as to whether they want to associate their smartcard with a prescribed application program account to provide a secure login. The DIMS should be able to generate a self signed digital ID such as a certificate for all purposes on such key devices as smartcard readers.

The DIMS manages the generation of the digital ID data structures. Users of the DIMS only have to be concerned with whether they have a digital ID where they can obtain a digital ID the DIMS may help the user identify sources on the network or Internet that can provide digital ID services and what uses there are for the digital ID. If they so choose only advanced users system managers and troubleshooters have to focus on such encryption concepts as Public Key Infrastructure PKI certificates certificate chains trusts or other authentication specifics. Such encryption concepts are often complex confusing and difficult for many typical users to properly and effectively implement and use. For example the usage of many embodiments of virtual public networks VPN have decreased largely due to the difficulties in effectively managing the digital IDs.

Small businesses large businesses organizations and even individuals can easily sign up for managed services for PKI and DRM scenarios using the DIMS . Alignment with web services WS Security DRM and XRML license store s will enable DRM Digital Rights Management scenarios for content control within the DIMS as discussed in more detail below.

The DIMS can run on a variety of networked computer and stand alone computer configurations. For example illustrates one embodiment of computer environment including one or more servers a network and one or more clients that are arranged in a network configuration. The embodiment of DIMS shown in provides data communications between different instances of the client computers and or the server computers . In this disclosure the client computers are referred to as being configured as domain joined computers. The clients and the servers may be configured as distinct computers networked workstations mainframes embedded devices or physically small computing devices such as a PDA or cellular telephone arranged in a local area network LAN wide area network WAN wireless wired base or other networked configuration.

Not all users have access to enterprise network WAN or LAN services. Those computers that are connected to such networks as enterprise networks LANs and WANs are referred to as domain joined computers. Those computers that are not connected to enterprise networks LANs and WANs but are instead connected to the Internet are described as non domain joined computers. As described in this disclosure certain embodiments of the DIMS provide different security services for domain joined computers and non domain joined computers.

The DIMS can be applied to both domain joined computers and non domain joined computers. When the computer is domain joined all policy is obtained from a central repository such as a directory database server or in one embodiment the Active Directory published by Microsoft Corporation . When the computer is not joined to a domain DIMS will look for local policy for enrollment or renewal guidance. In one embodiment non domain joined computers rely on a life cycle management policy that exists in that computer while domain joined computers are configured as clients that rely on life cycle management policy that exists in the server. The auto enrollment is active when the computer is non domain joined or when the computer is domain joined and the policy is from the domain. The policy may include configuration rules or process instructions to be followed by the DIMS.

When a user account is created and the user first logs on a new digital ID is created for that local user in certain embodiments of DIMS . The digital ID is a multi purpose data structure that can be applied to many application programs. A digital ID can be immediately added to a trusted store of the computer as shown in . The trusted store can be provided on all non domain joined computers and domain joined computers. A personal user store is also provided on all non domain joined computers and all domain joined computers. Both the personal user store of a user and the trusted store of a user can be serviced by the DIMS in slightly different ways as described in this disclosure. Both the personal user store of a user and the trusted store of a user are included within the digital ID store s illustrated in .

Most current users have too many digital IDs for them to effectively use and or manage. For most users one or two digital IDs are acceptable to provide effectively secured communications. Having more digital IDs can lead to difficulty and confusion for the user. The more digital IDs that users have the harder time the users and the application programs have in discerning which digital ID they should use. Today certain users have public key certificates for each application program such as e mail client authorization and encrypting file system EFS .

Typically users can understand such security concepts as I can encrypt I can sign and I can authenticate . The DIMS keeps the user interface with digital IDs at this relatively simple level to allow the majority of users to be able to interface and to provide the users an understanding of what security actions they are performing One useful technique is to use fewer enhanced key usage EKU concepts and use more key usage concepts. Another technique is to use larger digital ID key sizes with longer lifetimes.

One aspect of certain embodiments of DIMS is the capability to map between digital IDs and their purpose in the application programs so the application programs do not have to provide the complex logic to determine which digital ID to use. As such application program developers do not have to focus on the complexities of the digital IDs to provide internal security for their application programs. In addition since DIMS manages the digital identities a controllable and a discernible amount of security can be provided to the application programs by even those application program developers that do not have experience and or exposure to digital IDs.

Users should be aware of when they receive a digital ID or when they generate a key. The digital ID may be considered as devalued because certain users have many digital IDs such as keys and certificates. If a higher value is placed on digital IDs users will be able to understand and use each one of them in more application programs. The DIMS provides an indication to the user of the number of digital IDs that they personally possess and can monitor to the user whether they should discard certain digital IDs and or use certain digital IDs for more than one application program. User digital ID generation user digital ID use and access can each be an auditable event within the DIMS . Security organizations can determine when a user receives a digital ID backs up a digital ID restores a digital ID or uses a digital ID.

In one embodiment the DIMS runs as a traditional operating system service and may be managed as a traditional service in the service component of the operating system architecture. The DIMS can be managed through centralized policy to reduce conflicts with third party communications. One embodiment of this management would be in the group policy capabilities in the active directory and or such operating systems as the Windows Server 2003 operating system. The DIMS may be triggered by automatic or manual events for example a logon notification a group policy pulse a network notification or a connection manager triggers such as exist in certain Windows operating systems. As such different embodiments of DIMS are provided by which users do not have to manage their digital IDs manually.

Application programs are shown as an additional component to the client computer as a portion of the computer environment . The application programs may however be either integrated as a portion of the client computer or alternatively accessible by the client computer.

A variety of communications can exist between the application programs the DIMS and the digital ID store s that involve the DIMS. These communications include communications and from the application program via the DIMS API and to the digital ID store s by which the application programs request that certain operations be performed on digital IDs. Different embodiments of the communications and are configured to perform find open delete modify operations on the credentials as well as provide handles to credentials for usage by security systems application programs etc.

Communications and are generated in response to communications and . Communications and act to return a handle from the digital ID store s via the DIMS API to the application program that indicates the operation has been performed. Using the communications and or some other embodiment of communications application programs can perform such lifecycle functions on the digital IDs as finding opening deleting and modifying credentials. Such lifecycle functions include an abstraction layer to various token stores as shown in .

Over a period of time digital IDs have the tendency to accumulate on a user s computer. The DIMS represents tools or mechanisms that are required to manage these digital IDs. The DIMS includes such API functions as storing retrieving deleting listing enumerating and verifying digital IDs.

In one embodiment the DIMS provides two main categories of functions to manage the digital IDs functions that manage digital ID store s and those that work with the digital IDs within those digital ID store s . The functions that manage digital ID store s include functions for working with logical or virtual stores remote stores external stores and relocatable stores.

Digital IDs can be kept and maintained in the digital ID store s . Digital IDs can be retrieved from the digital ID store s where they have been requested for use in authentication digital signature encryption decryption processes etc. The digital ID store s is central to all credential functionality. In one embodiment the digital ID store s is a linked list of certificates in which 

In certain embodiments digital IDs are normally kept in some kind of permanent storage such as a database disk file or the system registry in the digital ID store s . The digital ID store s can also be created and opened in a memory or in a virtual memory such as provided by such a key device as a smartcard reader. In certain embodiments a memory store provides temporary digital ID storage for working with digital IDs that do not need to be persisted. Additional store locations allow stores to be kept and searched in various parts of a local computer s registry. Alternatively with proper permissions set the stores can be maintained in the registry of a remote computer.

In one embodiment each user has a personal user store called My Store in computers running certain Windows Operating Systems where that user s digital IDs are stored. The personal user store can be at any one of many physical locations including the registry on a local or remote computer a disk file a database directory service a smart card or another location. While any digital ID can be stored in the personal digital ID store s this store should be reserved for a user s personal digital IDs particularly those digital IDs used for signing and decrypting that user s messages.

An Application Program Interface API as shown in can request access to a credential. During the calling down through the API the API uses the query write modify create or delete commands to perform actions on the credentials. A handle or returned token from the API services all requests from application programs generically and securely. The user can request to enumerate or open a credential delete a credential create a new credential and other basic management tasks. It is beneficial for the DIMS to be configured very generically and be able to return credentials or handles to credentials having various attributes.

The embodiment of digital ID store s shown in includes a token store . The token store includes one or more digital IDs including a primary key one or more records and a private key . Another embodiment of the digital ID is described in this disclosure relative to .

The lifecycle management component manages the lifecycle processes i.e. creating deleting of digital IDs. As such certain embodiments of the DIMS includes the lifecycle management component that further includes the auto enrollment service to perform such aspects of lifecycle management on digital IDs as enrollment renewal housekeeping backup archival recovery etc. Using the auto enrollment process organizations can mange the digital ID lifecycles for their users and employees. The DIMS can provide lifecycle management for digital IDs without interaction from the user or the application program.

The digital ID manager component the trusted store the trust provider the root or trusted STS the cache of tokens issued by the root or trusted STS the personal user store and the digital ID properties together provide the functions of storing retrieving and modifying data structures and other digital IDs for the auto encryption process. Within different embodiments of the DIMS each individual one of the security token services the lifecycle management component including the auto enrollment service the system notification portion the digital ID manager component the trusted store the trust provider the root or trusted STS the root or trusted STS the cache of tokens issued by the root or trusted STS the personal user store and the digital ID properties can be located in different locations among the client the network or the server as shown in or in the stand alone computer shown in . In other words the DIMS can be configured to run on a computer in any networked domain joined or any stand alone non domain joined configuration that is desired.

The system notification component provides an indication of user input changes in system configuration and other such features that would be useful for the operation of the DIMS . The Security Token Services are trusted sources of such digital IDs as the certificates or tokens for the user in this case the client computer or the stand alone computer that is connected to a network .

The digital ID manager component is able to obtain digital IDs from one or more of the components and to provide for the auto enrollment service .

The cache of tokens issued from the root or trusted STS includes one or more cached security tokens such as root x.509 certificate authority certificates that are in persisted in the trusted store . In one embodiment the cache of tokens issued from the root or trusted STS is configured as a pointer to an STS. The personal user store e.g. My Store in certain Windows Operating Systems is accessible on many user client operating systems. The digital ID properties define the status of many digital ID parameters.

The trust providers is considered to be a trusted third party like the cache of tokens issued from the root or trusted STS that provides a trust anchor trust decisions or trust information to the user. As such the DIMS can interact with central services such as the STS to obtain renew archive or recover digital IDs.

Trust management is a difficult to understand concept in PKI. Home users and few technical users understand PKI and even fewer understand all of the ramifications of how the PKI trust is and should be managed. As such the use of prior digital IDs were often confusing to novice users. Certain embodiments of DIMS will be expanded to alleviate the issues associated with the PKI trust.

In one embodiment the DIMS can be configured to operate in one of three modes simple trust managed trust and enterprise trust. These three trust models are described.

The Simple Trust model is designed to apply to home users that are not connected to any managed services. Computers that are installed and not joined to a domain use the simple trust model. The simple trust model is used for example in the Hotmail web based e mail service and MSN Messenger today. The client automatically obtains public root x.509 certificate trust from the operating system.

In one embodiment when an e mail application program encounters a signature on an e mail that does not chain to a trusted root security token can be service or has not been previously trusted the client will invoke a simple user interface UI asking the user whether they would like to add another user to their Trusted User List . When a contact and their digital IDs are added to the Trusted User List the user digital ID is added to the Trusted People store as shown in . This will allow digital IDs to be validated for a user without complex chain building and trust management for computers that are installed and not joined to a domain but which are required by the computers attached to certain enterprise networks LANs or WANs.

Through the simple trust application programs that do not call a program to yield the digital ID or certificate chain i.e. CertGetCertificateChain which is available in the Cryptographic API from Microsoft Corporation should now be able to do so. This model can be utilized for a PKI trust. When a user is trusted for one application program such as signed mail they should also be trusted for other application programs.

The DIMS unifies the trust placed in the user s contacts in the address book with the trust placed in x.509 root certificates user digital IDs XML trust stores DRM license stores etc. When a user adds another user to their contacts the first user has established a level of trust with that second user and the first user should be able to unify the PKI trust at the same time. The first user should not have to configure trust multiple times. Application programs also do not need to search for trust policy in multiple locations.

If a first user receives E mail from a second user multiple times using a prescribed E mail address and the E mail contains the same signing digital IDs each time a level of trust is established with that user. Some assumptions for the home user can be made if the digital ID is from a particular second user and the first user can explicitly trust that second user. Once the first user can explicitly trust the second user based on the digital ID the first user can now make rules based on that trust. For example the first user can choose to block mail from other untrusted users based on signed mail etc. The system therefore provides the trust decisions through the user for the application programs.

The Managed Trust model is designed to apply to home or small business users that are connected to a managed service like Microsoft Office or .NET service . The Managed Trust model is a hybrid of the Enterprise Trust model and the Simple Trust model. The Managed Trust model can be considered an installable revocation provider model so that a client may enlist in certain networked services to receive trust information. This would ideally be provided as an installable XML Key Management Specification XKMS or web services WS Security client component that allows a user to enlist in a service that will provide revocation and trust information to the client. When a signature or digital ID validation request is presented the client will contact the XKMS service to return the trust information. This assumes the client is always online and connected to the Internet.

Ideally services like .NET Passport can provide the very basic model of simple trust through the Windows Update root program. In certain embodiments services like .NET Passport can provide an extended cross digital ID program having federated corporations and other PKI hierarchies so that they may be simply trusted by the user as part of authenticating to .NET Passport. Different embodiments of DIMS can provide a combined root security token service trust management and XKMS style trust management all in one. Alternatively a managed trust can be provided through the active directory and the group policy for domain joined computers.

The Enterprise Trust model is intended to apply to corporate or business users operating computers that belong to an active directory environment. The Enterprise Trust model is maintained as defined in certain embodiments of operating systems such as Microsoft Windows .NET. When a client is joined to a domain the trust model is distributed and maintained by the domain. With the Enterprise Trust model the DIMS is located primarily at the server as shown in . In one embodiment when DIMS exists on the server the server can provide digital IDs and trust information across many machines simultaneously and in a consistent manner. A plurality of computers can be provided with a group identity and the DIMS can be configured to manage the digital identities for either the group identity or the individual identities. The DIMS utilizing such policies as provided by Microsoft Windows 2000 Group Policy will distribute trusted roots as well as digital ID usage policies to the client and application programs. The enterprise trust model as in Windows .NET will allow the option to control user individual trust as well.

The Enterprise Trust model should also allow connection to a managed trust model provider when the enterprise trust model cannot provide an answer for a given digital ID or signature validation. The client can be configured to contact the Managed Trust provider by default or as a fallback option.

The auto enrollment service of the lifecycle management component acts to automatically provide important digital IDs to the user. This applies to the Simple Trust Model the Managed Trust Model and the Enterprise Trust Model embodiments of the DIMS . In non domain joined computers the auto enrollment process is performed by a background process during runtime. One embodiment of the auto enrollment process will follow this order 

The embodiment of digital ID store s illustrated in corresponds to the combination of the digital ID manager component the trusted store the trust providers the cache of tokens issued from the root or trusted STS the personal user store and the digital ID properties as shown in .

The client computer shown in will support direct use of a key store that is separate from the digital ID store s . The DIMS can support raw key stores as digital IDs without being associated with x.509 certificates XML licenses etc.

The DIMS provides a mechanism by which a user s digital IDs can be renewed as shown relative to . The auto enrollment service of the lifecycle management component receives system notification that the user s digital ID is to be renewed. The auto enrollment service enumerates lists the personal user store of the user through the digital ID manager component . The auto enrollment service detects expiration revocation or possible security token services policy status. The security token service policy check would be to support superceding of the digital IDs.

In one embodiment the auto enrollment service of the lifecycle management component then determines whether renewal of the digital ID is necessary. The auto enrollment service contacts the security token service by finding property on the digital ID. The auto enrollment service enumerates the security token service for the latest information that can be used to renew the digital ID. The auto enrollment service then authenticates the user following which the auto enrollment performs the renewal of the digital ID.

The DIMS provides a mechanism for trust discovery in non domain joined computers as described relative to . The DIMS receives system notification requesting the auto enrollment component of the lifecycle management component to perform trust discovery. The auto enrollment service enumerates trust providers . The auto enrollment service contacts the trust provider requesting updated information. The trust provider thereupon provides the updated information that is received by the auto enrollment service .

Auto enrollment of user digital IDs provides a quick and simple technique to issue digital IDs to users and to enable PKI application programs including smartcard logon encrypting file system EFS SSL and S MIME . SSL and S MIME are considered to be general purpose encryption protocols because they do not place any limits on the size of the data being encrypted. Though the auto enrollment service of the lifecycle management component can be located in any location in a network or stand alone computer environment as shown in the present disclosure describes providing the auto enrollment service within the client computer .

The DIMS can focus on secrecy as well as authentication. Consider when a user wants to log on to a server to get for example E mail. The user can log on and be authenticated by e.g. the DIMS by providing a password. If a user has a key device such as a smartcard the user can use the key device as long as the application program knows how to interface with and use that key device. As such the DIMS has to provide the application program with an interface to interact with and utilize the key device. Additionally the DIMS is renewed separate from when the user retypes the password and login when the DIMS gets a new digital ID and authentication.

Some of the credentials and the digital IDs have to be renewed within the DIMS which is related to the life cycle of the credentials and the digital IDs. A user name or password may have to be renewed or changed. The life cycle manager of the DIMS can manage the life cycle of the credentials and the digital IDs.

A windows based operating system such as one of the Windows operating systems produced and distributed by Microsoft Corporation loaded within the client computer can include DIMS software providing the auto enrollment service . Providing the DIMS auto enrollment service within the client computer allows the operating system to control the generation of and the use of the digital IDs to be used by that user. User auto enrollment reduces the cost of normal PKI deployments and reduces the total cost of ownership for a PKI implementation by reducing the amount of digital ID management that requires human support involvement.

Additionally user auto enrollment increases the control that the users have over the security of their data communications and their stored data. Both domain joined and non domain joined computers can utilize auto enrollment but the auto enrollment is typically configured differently for domain joined and non domain joined computers. The DIMS can be applied to different embodiments of computers including non domain joined computers as well as domain joined computers . Non domain joined computers may participate in auto enrollment and renewal of the digital IDs by providing a structure to store security token service STS enrollment information that the auto enrollment service may use as described relative to . The structure would only contain a list of Security Token Services by their domain name service DNS name port number optional and template name s or profiles for that STS. In one embodiment this information would be stored in some location in the computer memory file system database system policy store etc. with a Security Token Service key for each STS to query and a value for template names. Various configuration services for internet service providers ISPs can configure this information.

In one aspect the auto enrollment service of the lifecycle management component will attempt enrollment for the templates listed as available to the Security Token Services if the user or computer does not have a digital ID corresponding to the template name s . The auto enrollment service contacts each Security Token Services with a request for a template to ask the Security Token Service for the specified template. The auto enrollment service will use the template information to generate the key format the request and submit the message etc. If the attempt to get a template fails the auto enrollment service will log an error. Renewal through the auto enrollment service will examine any template and information from the Security Token Service s that may be stored and compare to existing digital IDs requiring renewal. If a digital ID matches one associated with one of the Security Token Services defined in the registry the auto enrollment service will attempt to use information provided with the template to refresh the renewal information.

The concept behind auto enrollment of a user s digital ID such as managed by the DIMS is independent of cryptographic technologies which may include within the scope of the present invention and without limitation RSA algorithms the Diffie Hellman algorithms and any other encryption algorithm. Delivery of the digital IDs such as certificates key pairs and credentials may be provided under any format including again without limitation the formats of X.509 and its versions General Certificates GC Public Key Infrastructure PKI Simple Public Key Infrastructure SPKI XML Key Management Specification XKMS etc. Any applicable protocol may be employed in practice of the present invention including by way of example such protocols as Hyptertext Transport Protocol HTTP Multiple Internet Mail Exchange MIME S MIME Simple Mail Transfer Protocol SMTP SET SOAP web services WS Security XKMS etc. such protocols referring to a part or the whole of a communication session.

One embodiment of DIMS can be used in governmental and health care application programs that mandate rigid privacy and data protection controls for personal data such as data associated with the Health Insurance Portability and Accountability Act HIPAA . EFS and S MIME are platform solutions that can utilize the DIMS to help customers meet their data protection requirements without building complex and difficult to use infrastructures.

The DIMS includes the lifecycle management component which in turn includes the auto enrollment service . The auto enrollment service supports pending digital ID requests such as those that must undergo registration authority or workflow processes before issuance. For the digital ID requests a user of the DIMS can manually or automatically request a digital ID from a security token services located at a server see or another network or stand alone location. Once the digital ID has been approved or issued the auto enrollment process will install the digital ID into the users client computer automatically. The auto enrollment system also supports renewal of an expired user digital ID. Digital IDs are automatically renewed on behalf of the user machine or application service depending on the configuration of the digital ID template.

The DIMS performs lifecycle management of the digital IDs that allows for digital ID renewal superseding of digital IDs and multiple signature requirements. In one embodiment auto enrollment can occur in certain DIMS embodiments except where the user interaction is explicitly defined for example in a digital ID template in the active directory . The auto enrollment process is triggered for example by the local or interactive logon process. The operating system within the client computer queries the central repository or possibly the active directory to download a digital ID from the appropriate digital ID store s such as the trusted store shown in into the personal user store such as My Store that exists in certain embodiments of the Windows Operating Systems on the client computer . The digital ID properties are under the control of and can largely be set by the user in the client computer in or the stand alone computer shown in

In decision it is determined whether the client computer performing the digital information management process including auto enrollment process is a domain joined computer. If the answer to decision is no then the digital information management process including auto enrollment process continues to as described below and the client computer is handled as a non domain computer as described in the embodiment of DIMS described relative to .

If the answer to decision is yes then the digital information management process including auto enrollment process continues to and the client computer is considered to be a domain joined computer. In the central repository or the directory of the computer is checked. The digital information management process including auto enrollment process then continues to in which a template or profile for digital IDs is checked. The computer then performs a policy check in in which various policies relating to digital IDs and the DIMS are considered. Then in decision it is determined whether user interaction is requested. If the answer to decision is yes then the digital information management process including auto enrollment process continues to as described below. If the answer to decision is no then the process continues to as described below.

When the digital information management process reaches decision from decision the DIMS determines whether the non domain joined client computer is joined or subscribed to service providers. If the client computer is connected to a service provider then the digital information management process continues to in which profile information is received from the service provider. Following the process continues to in which the user interface is invoked so the user can provide input into the digital ID template.

If the answer to decision is no then the process continues to decision in which the client computer determines whether there is any security token service STS property on the digital ID. If the answer to decision is no then the process continues to in which the event is logged into the application log. If the answer to the decision is yes then the process continues to in which the client computer connects to the security token service. In the computer is bound to the security token services e.g. using remote procedure calls RPC DCOM or hypertext transfer protocol HTTP and the template information is received from the STS using eXtensible Markup Language XML WS Security SOAP messages XKMS etc. Following the process continues to in which the user interface is invoked and the user provides input into the digital ID request message.

Following the process continues to in which the enrollment Application Programming Interface enrollment API is called. Following the process continues to in which it is determined whether there is any key archival. and may be reached by both domain joined client computers and non domain joined client computers. If the answer to decision is no then the process continues to in which the event is logged into the application log. If the answer to decision is yes then the process continues to in which the user interface is invoked so the user can provide input into the digital ID request message. The process then continues to in which the event is logged in the application log.

The process therefore provides a technique by which both domain joined and non domain joined client computers can undergo auto enrollment using the DIMS . In general the DIMS allows both types of client computers to access the digital ID templates or profiles from the STS or the active directory store as necessary. The DIMS allows both types of client computers to invoke the user interface call the enrollment API archive the keys and log the event into the application log.

In one embodiment the templates used in association with the DIMS can use an Extensible Markup Language XML based schema. Using XML based templates decreases the need for more complex template APIs or a fixed schema that cannot be changed at a later date to meet new requirements. The XML schema typically results in a more flexible and self describing template configuration. The use of XML based templates also enables digitally signed templates for security and integrity purposes using for example XML based template signing programs such as XML digital signatures XMLDSig standard.

The DIMS is considered an application program that manages the digital IDs that can be provided by other application programs through a common service and API. As shown in one embodiment of the DIMS includes a service component that may be a life cycle manager and an abstraction layer component . The DIMS abstraction layer component includes a variety of known structures and types of credentials and indicates the type of security used by the DIMS.

The DIMS includes a total life cycle manager for all credentials. The DIMS thereby provides life cycle management as an abstraction. As such the life cycle manager and the abstraction layer component shown in may at least partially overlay within the DIMS .

The life cycle manager of the DIMS as shown in acts upon the various credentials and manages the credentials on behalf of the application program or the user without the knowledge of the application program and or the user . During this operation the life cycle manager does not have to provoke each application program .

In this disclosure biometric information is considered one embodiment of credential. Biometrics are automated methods of recognizing a person based on a physiological or behavioral characteristic. The features measured for Biometrics can include one or more of the face fingerprints hand geometry handwriting iris retinal vein and voice. Enterprise wide network security infrastructures government IDs secure electronic banking investing and other financial transactions retail sales law enforcement and health and social services are already benefiting from Biometric technologies.

The embodiment of abstraction layer component of the DIMS as shown in provides a mechanism by which the application programs can store different types of the digital IDs and credentials in a common manner can retrieve them in a common manner and can manage them in a common manner. The abstraction layer component is an Application Programming Interface API that can be established in a variety of configurations to perform a variety of processes and include a variety of properties. As a result of certain embodiments of the abstraction layer component different application programs do not have to be designed and or developed using specific digital IDs or digital ID types.

The abstraction layer component is an API interface composed of methods and properties. As such the abstraction layer component allows the digital IDs and credentials to be uniformly configured regardless of the particular operating environment or the application program . In general the abstraction layer component allows the application programs to be abstracted from underlying trust store structure of the DIMS . One embodiment of the underlying trust store structure is described in this disclosure relative to with the trust store s the trust providers the root or trusted STS and the cache of tokens issued by the root or trusted store .

The data included in the abstraction layer component includes security context or opaque data wherein trusted data is not included in the data provided from the application program. Examples of the security context or opaque data includes but is not limited to logon ID hash of user password credential verifier etc.

Due to the abstraction layer component the credentials and the digital IDs can be considered to function within an Active Directory domain environment and also in a stand alone environment . Alternatively the credentials and the digital IDs could be agnostic across different platforms and application programs . The application programs can be easier to develop since the developers do not have to focus on such authentication concepts as the digital ID and other credential management aspects while developing their application programs. As such in one aspect of the disclosure the credential and the digital IDs are developed as part of the abstraction layer component of the DIMS .

A user or application program can request a credential to be used for a particular purpose. Also a particular name can be associated with the credential. Alternatively a user could request a credential that is associated with a particular target i.e. including a domain name web service name server identifier etc . The requested credential could be used for a particular application program such as e mail. As such the API within the DIMS can open close access and retrieve data having a wide variety of attributes using the query write modify create or delete commands.

If each application program has its credentials or the digital IDs managed separately then a user could use their key device e.g. a smartcard to do certain operations. However when the user decides to use a different application program that is managed differently the second application program may not be aware of key devices. In such instances the digital IDs and credentials are managed and used separately in each particular application program .

As such each application program has to be informed about the digital ID and credentials of other application programs to allow for an effective interface between the application programs. In certain prior systems the management of the digital IDs and credentials becomes disjoined. The DIMS acts to make the management of the digital IDs and credentials more uniform with a more common user interface.

One embodiment of the digital ID which is shown in can include a user a user or other type of name to identify the digital ID a password raw data a key pair including a private key and a public key and an XML token a DRM license an eXtensible rights Markup Language XrML license or some other similar data identifier . The digital ID is a form of data structure. Digital IDs therefore are considered as a generic object which may contain certificates credentials key pairs licenses assertions and passwords the DIMS can thereupon manage embodiments of different digital IDs in a similar manner. The digital ID can be included as a portion of or an entire digital ID and private key pair or an XML license having various other types of credentials.

Within the DIMS all these credentials are actually stored in different ways using different memory locations or databases that are collectively called the digital ID store s or token store s . The different types of stores may include for example a credential store a key store a secure store a DRM Digital Rights Management license store and other such stores. The lower level of the DIMS includes a secure common store . The DIMS should be capable of determining the credentials of the application programs within the different stores as well. As such the DIMS can manage retrieve and renew licenses and the like for the DRM system on behalf of an application program.

Digital IDs such as credentials may be viewed like licenses. Digital Rights Management DRM produced and distributed by Microsoft Corporation provides a mechanism for content protection media and content management. The DIMS has to maintain licenses for digital IDs such as credentials and they need a way to manage them as well. The same concepts that apply to using the passwords digital IDs credentials certificates and the keys as shown in can be applied to the DIMS . The password gives a user the ability to log on until the password expires. Key pairs made of public keys and private keys and the digital ID give a user the ability to authenticate digitally sign encrypt or decrypt until that digital ID expires. DRM ticket and license credentials provide a user with the ability to interface with a server to access some service or content until that license assertion expires. The DIMS provides the same sort of entitlement concepts.

The DIMS can be applied to computer environment as described relative to that may include a client computer . The computer may include e.g. a desktop a work station a laptop a PDA a cellular telephone a peripheral device an embedded device or any other computer that can use the DIMS to provide considerable authentication capabilities. Since computers are often used in homes and small or large business environments it is important that the DIMS is capable of providing security widely and seamlessly. In one embodiment the DIMS is configured as a middleware service or component. As such the DIMS is implemented in the Application Programming Interface API associated interfaces could also be defined to integrate the DIMS with certain client services. The DIMS could be implemented as a technology to a client operating within the client server computer environment.

An operating system such as the Windows Operating System that is produced and distributed by Microsoft Corporation that integrates the DIMS could enable users from novice to advanced to secure their documents files data messages etc. As such users can securely collaborate with family members peers team members friends and business partners in a secure and easy to use manner.

For the use of digital IDs to be fully accepted and utilized home users who are not part of a greater corporate network and use local Internet Service Providers ISPs can obtain and utilize digital IDs with little or no interaction. The entire digital ID lifecycle should be managed by the DIMS located primarily in the client computer that is associated with each user. The user will not have to understand public key infrastructure PKI concepts how to manage a PKI trust DRM licensing cryptographic models or other authentication concepts of similar complexity.

The DIMS is simple for a user to interface with while providing a highly secure multi user security collaboration solution available for such computer environments and or computers as shown at in . Users can manually manage the life cycle of public key credentials in many network configurations outside of the domain enterprise environment. The DIMS therefore provides an increased differentiation on traditional Public Key Infrastructure PKI or conventional DRM capabilities in a desktop client.

Certain embodiments of the DIMS can solve several problems. The DIMS provides an effective user interface that can be accessed for security management or troubleshooting purposes. Since the DIMS can manage a wide variety of digital IDs the security as applied to the different application programs is consistent and comprehensible by users.

One embodiment of the DIMS can provide for smartcard PIN entry and caching. The DIMS can function as a Biometric Template store. As such an effective user interface UI securely accesses the application programs . DIMS stores tokens on behalf of application programs.

The auto enrollment process of the DIMS can be triggered by the logon process such as Winlogon in Windows Operating Systems . The user management console is described that treats all credentials and digital IDs in the same manner whether they are passwords keys x.509 certificates or XRML licenses. In those embodiments where the DIMS is contained within the client of or the stand alone computer in the user can configure and control the generation of the digital IDs by the DIMS to provide a consistent experience for the user. As such the user will be able to more consistently and effectively apply the digital identification as the user utilizes the application programs.

The application layer in general integrates the application programs as illustrated in . The logon screen allows the user to interface with the computer environment when they logon by providing a security context to DIMS. The credential user interface provides a user interface by which the user can generate store or retrieve credentials using the DIMS .

The life cycle manager and the DIMS abstraction layer is also described in general relative to . The DIMS abstraction layer provides a uniform interface between the credential manager API the cryptographic API the digital rights management API the XKMS client and the Kerberos ticket cache or one of many other token types as alluded to in this disclosure. The abstraction layer allows the general purpose computer of a user to decrypt encrypted data communications. As such one digital ID can be used by the DIMS to interface in a common manner with each API and client . The XKMS client and the digital rights management API can interface with the XML license store to obtain the necessary license to access the digital rights management system such as the Digital Rights Management system that is produced and supplied by Microsoft Corporation . The Kerberos ticket cache is a persisted store that contains Kerberos tickets that can be quickly retrieved and utilized by the DIMS abstraction layer .

The data protection API can interface with the DIMS abstraction layer through one or more of the credential managers API or the cryptographic API . The credential store provides access to the file system of the computer from the data protection API. The certificate stores and the key stores are in communication with and store data that can be accessed by the data protection API. As such the components and that may be considered a shell layer can all interface uniformly with the components e.g. APIs that are below the DIMS abstraction layer. The abstraction layer can contain a database table of all properties that applications or users can query to find the appropriate digital ID or token to use for a given purpose or situation.

One embodiment of the DIMS interfaces with and partially integrates a credential manager that is located within the credential store as shown in . The credential manager within the credential store can be password based smartcard based or private key based. One embodiment of the credential manager has data storage capabilities and it also has some ability to search for files. The credential manager acting by itself may not be capable of renewing digital IDs.

Many embodiments of the DIMS can be operationally located primarily within the client computer particularly those relating to non domain joined computers. Positioning the DIMS primarily in the client is preferred since this represents the location that most effectively does renewal within the lifecycle management as well as other functions performed by the DIMS . The DIMS can be applied to all levels of users of window based operating systems such as the Windows XP operating system that is produced and distributed by Microsoft Corporation and allows organizations to deploy the digital IDs more easily to client computers through auto enrollment service including those computers that are non domain joined.

Methods associated with the DIMS that are included within secure objects include private key signing private key encryption decryption secret key encryption decryption secret key hashing validation trusted digital IDs are protected authentication and authorization.

If an application program is configured or programmed with the DIMS as described in this disclosure the application program does not have to be configured or programmed by a developer to provide for a private key to be received from a user for authentication. In one embodiment all the DIMS requests from a user the application program or service target information. As such a developer can program an application program such that the user can search for a credential that has an associated prescribed usage name and or target criteria. Alternatively the user can search for a credential that includes a known Internet domain name. There may be different embodiments of credentials that may be associated with a given user name and password. Another credential may be associated with a smartcard or key device.

In one aspect the DIMS manages the digital IDs relative to each application program . Therefore each application program is able to readily interface with other application programs. In one aspect the application programs store the identity of the operating system to request and utilize the DIMS .

The DIMS addresses many issues including enhancing the acceptance of the deployment of Virtual Private Networks VPN . Such acceptance results from the ease of deploying home user digital IDs. Such protocols as Layer 2 Transport Protocol L2TP and Internet Protocol Security IPSEC require a digital ID such as a public key certificate to be deployed to home computers. The deployment of the public key digital ID is simplified by the use of the DIMS .

The DIMS is therefore designed to be very generic and can perform such processes as shown in and . The DIMS is intended to be relatively simple yet universal because when the digital IDs are managed by the DIMS application programs interfacing with the DIMS don t have to be programmed to provide a variety of different security properties and characteristics.

In one embodiment of the authentication process each one of and occurs in a general purpose computer as shown in . In the authentication process and may occur within the API layer. and can occur outside of the API layer within the application program.

The lifecycle management process continues to in which the DIMS uses housekeeping. Such housekeeping includes expiration of a digital ID matters of membership of a digital ID policy of a digital ID or end of life of a digital ID. The lifecycle management process continues to in which the rules and policies as calculated in are applied to the digital ID store s .

The lifecycle management process continues to decision in which the DIMS considers whether any further action is necessary. Depending upon the type of action such further action may involve interaction with other security token services or not. If the answer to the process is no then the process is terminated because no further action is necessary. If the answer to the process is yes then the process continues to decision in which the DIMS considers whether the further action involves interaction with another service such as a security token service.

If the answer to decision is yes then the lifecycle management process continues to in which the DIMS interfaces over the network with the security token service. Following the process logs the status change failure etc. in .

If the answer to decision is no then the further action involves such user input as a change in password etc. If the answer to decision is no then the lifecycle management process continues to in which the user is asked for the user input and the computer running the DIMS processes the user input such as change in password . Following the process logs the status change failure etc. in .

With the lifecycle management process the client computer running the DIMS can manage the lifecycle actions of the digital IDs such as creating destroying and modifying the digital IDs.

The housekeeping process continues to in which the policies and the membership of the housekeeping process is determined by the computer and the DIMS. The housekeeping process continues to decision in which it is determined whether there are any changes to the membership or other consideration of the DIMS. If the answer to decision is no then the process terminates because the current state of the policies and or membership are acceptable.

If the answer to decision is yes then the housekeeping process continues to in which the DIMS determines whether the changes have been archived. If the answer to is yes then the housekeeping process is terminated because all the changes that had to be made have been made. If the answer to decision is no then the housekeeping process continues to in which any changes are backed up or archived. As such the housekeeping process provides a mechanism by which the policies and memberships of the policies can be made more current.

Certain embodiments of the DIMS can provide for roaming and or replication of signing and encryption keys as well as tokens credentials or licenses. shows one embodiment of roaming process . The DIMS can provide a single user interface for an individual user over a variety of locations. As such a single user can interface with the DIMS to manage a digital ID over many networked locations such as over the network or Internet. The DIMS allows access to directly trusted digital IDs instead of using for example a rooted x.509 certificate hierarchy. The DIMS can share signing and encryption keys included in the digital ID collection representing all stores. As such the authentication and services provided by an operating system can be enhanced by the DIMS. This is a consideration for the server services scenarios where keys are shared across multiple servers.

As with other networked computer users it is important to provide some roaming capabilities for users of the DIMS. Supporting multiple keys and roaming profiles is difficult for customers of current enrollment systems such as an x.509 public key infrastructures PKI . Software based keys are viewed by many customers as not very portable or manageable. Smartcards are currently used in many companies as a unitary solution for key storage and employee badges.

The roaming process includes a system activation in . The roaming process like housekeeping process continues to in which the digital IDs in the digital ID store s as described relative to are enumerated listed and examined. During the current state of the digital ID store s is determined by the DIMS .

The roaming process continues to in which it is determined whether the user is attempting to roam data. Such an indication is typically derived by user input provided to the client computer from a remote computer. If the answer to decision is no the roaming process terminates since there is no desire by the user to use the roaming program.

If the answer to decision is yes the roaming process continues to in which the DIMS locates the remote data storage location from which the user is seeking to roam. The roaming process continues to in which the DIMS determines and follows the policy for the roaming process . For example roaming may not be permitted from certain locations and or times. The roaming process continues to in which the data is synchronized from the location from which the DIMS is located to the remote location at which the user is seeking to roam.

DIMS can be applied to many key device systems to provide security as well as an abstraction layer including smartcards. One of the issues with smartcards is the use of encryption keys and data persistence. If the key on a smartcard is used to encrypt files or email and the smartcard is subsequently damaged or lost the data in the files or email will no longer be accessible.

Auto enrollment and manual enrollment codes can interface with the cryptographic service provider CSP model and management layer to retrieve the key after key generation for the purpose of key archival. Certain embodiments of DIMS will support key archival when key generation is performed on the card or in a secure HSM device.

In one embodiment the CSP writes the keys and the digital IDs to the smartcard. There are two scenarios that are described. The smartcard can do the key generation or a Hardware Security Module HSM can do the key generation. In the first scenario the challenge is in securely communicating from the card module to the archival engine. In the second scenario HSM provides cryptographic functions for secure transactions such as transactions in financial networks. The software code is communicated from the HSM to the engine then to the smartcard module. The communication with the archival engine can be relatively simple since it is a system component.

Secure collaboration is becoming more important in network scenarios and configurations. Many encryption technologies such as the Encrypting File System EFS produced and distributed by Microsoft Corporation require the use of public key technology to implement a secure solution. One embodiment of such an encrypting file system is described in U.S. Pat. No. 6 249 866 which issued on Jun. 19 2001 to Brundrett et al. with the title Encrypting File System and Method assigned to the assignee of the present disclosure and is incorporated by reference herein in its entirety. Certificates enrollment and PKI trust management such as EFS and other current encryption algorithms utilize are far too complex for most users to understand. As such providing certain embodiments of the DIMS can simplify maintain the security of and thereby increase the acceptance of secure collaborative systems.

Assume that a computer system under the control of the user has a common store that includes the token store containing various files and or programs that need to expire retire and or be renewed. The user and the application programs are very likely unaware of these various schedules especially if a user has a large number of them. Consider that certain users often access a large number of different web sites that may require different digital IDs then it would benefit the DIMS to be an automated system. The user has to be aware of whether they should change a password login or if the password login should be renewed or requires a renewal process.

Allowing the DIMS to perform a digital identity management process without the user and or the application program being aware is desirable. If each of the users and application programs have to be aware of these DIMS considerations the digital identity management process becomes much more complex and less useful.

Current application programs provide for different store protocols and therefore a different way of protecting these credentials. An important aspect of the DIMS is the credentials that are stored have to be protected in some way. If the credentials are just sitting resident on a hard drive in a computer of a computer environment other application programs can steal them e.g. bad code or internet viruses could steal the credentials . The DIMS provides a mechanism to protect the credentials.

Operating systems and application programs have each protected credentials using different methods and by storing the credentials in different locations. One aspect of application programs is how they are protected. The application programs typically have to be able to access data from certain prescribed locations.

Application programs typically have to be aware of how to get through that protection to obtain data and run and also be able to prove that they are a valid application program at different locations within the operating system. The common store concept therefore represents a secure store that would store many types of secrets or credentials. The credentials of the application programs would be protected within the common store and in a form such that they would be searchable and so data within one application program could be readily used by another application program within the common store .

Within the common store only the secret or private portion of the field s are protected like the private key password symmetric key etc. Typically the private portions are encrypted with another token password biometric key etc. One of the more common problems for users especially in the case of the Encrypting File System EFS is that they often lose their certificates keys when they re install software into the computer crash the operating system etc. This common situation has ramifications for security. The auto enrollment service as part of its digital ID management functions detects new digital IDs that have been auto generated or automatically enrolled without key archival in the template. When auto enrollment detects such a digital ID the auto enrollment indicates to the user over a user interface e.g. on the computer display that they have a new digital ID that is not backed up and would they like to back it up now. The dialogue will display a selectable list of those digital IDs that have not been backed up and are new.

Considering the secure store concept in one example the DIMS stores tokens and their attributes in a relational database based on the SQL server engine. Each credential could be stored as a distinct record. This record is maintained within the API of the client. As with relational databases there will be n number of fields that store various attributes associated with that credential. Some of those fields are protected including the sensitive fields and some are not protected. The attributes could even be stored in a flat database so that various aspects are protected against other users from enumerating them. Some of the attributes would be encrypted such as would be the case with a private key of a PKI key pair.

The common store that stored various attributes can have a variety of configurations. The common store can be extensible. The common store can store data relating to multiple users in such a manner that the users should be able to protect their data from each other in a common manner. The application programs should all have a known way to access data and prove their identity and indicate for whom they are acting.

A user may use multiple computers while using the same credentials. Suppose a user wishes to securely access and use a website at different locations. Users want to access their e mail securely at different locations. A user may want to sign mail wherever he is and therefore the user needs his credentials wherever he accesses the network. As the user travels to different locations across the network the store has to be available for that user. Conversely the store has to follow the user to his different locations. As such in one aspect of the disclosure the store has to be transportable in a secure way so that it can be accessed over the network using a media like a key device such as a smartcard. The common store has to be protected should it be intercepted or attacked in transport. As such if a user logs onto a network the network accesses the user s digital ID store s . The stores of the users are available wherever they travel.

A user can store the data associated with the DIMS on one smartcard if the smartcard has enough storage and processing capabilities . Alternately the data associated with the DIMS could be stored on a floppy disk or other transportable memory device or the data could be stored on a server. A store associated with the DIMS could be routed to a user over the network. One embodiment of the DIMS can be configured so a user can import a store export a store and or unlock a store. The data protected with DIMS can be protected with the smartcard or protected with a password. A user can move that data around as they see fit or back it up.

One embodiment of DIMS provides for a common API and common store . There are a variety of implementations of this that are within the scope of the present disclosure. Since small businesses large businesses and individuals can easily sign up for managed services for Public Key Infrastructure PKI and the Digital Rights Management DRM scenarios it is important to ensure that the DIMS has the same ease of access. Alignment between the DRM and the eXtensible Rights Markup Language XRML license store will enable the DRM scenarios for content control.

The computer environment illustrated in is a general computer environment which can be used to implement the techniques described herein. The computer environment is only one example of a computer environment and is not intended to suggest any limitation as to the scope of use or functionality of the computer and network architectures. Neither should the computer environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary computer environment .

The computer environment includes a general purpose computing device in the form of a computer . The computer can be for example one or more of a stand alone computer a networked computer a mainframe computer a PDA a telephone a microcomputer or microprocessor or any other computer device that uses a processor in combination with a memory. The components of the computer can include but are not limited to one or more processors or processing units optionally including a cryptographic processor or co processor or other type of security processor or co processor a system memory and a system bus that couples various system components including the processor and the system memory .

The system bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. By way of example such architectures can include an Industry Standard Architecture ISA bus a Micro Channel Architecture MCA bus an Enhanced ISA EISA bus a Video Electronics Standards Association VESA local bus and a Peripheral Component Interconnects PCI bus also known as a Mezzanine bus.

The computer typically includes a variety of computer readable media. Such media can be any available media that is accessible by the computer and includes both volatile and non volatile media and removable and non removable media.

The system memory includes the computer readable media in the form of non volatile memory such as read only memory ROM and or volatile memory such as random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within the computer such as during start up is stored in the ROM . The RAM typically contains data and or program modules that are immediately accessible to and or presently operated on by the processing unit .

The computer may also include other removable non removable volatile non volatile computer storage media. By way of example illustrates a hard disk drive for reading from and writing to a non removable non volatile magnetic media not shown a magnetic disk drive for reading from and writing to a removable non volatile magnetic disk e.g. a floppy disk and an optical disk drive for reading from and or writing to a removable non volatile optical disk such as a CD ROM DVD ROM or other optical media. The hard disk drive magnetic disk drive and optical disk drive are each connected to the system bus by one or more data media interfaces . Alternatively the hard disk drive magnetic disk drive and optical disk drive can be connected to the system bus by one or more interfaces not shown .

The disk drives and their associated computer readable media provide non volatile storage of computer readable instructions control node data structures program modules and other data for the computer . Although the example illustrates a hard disk within the hard disk drive a removable magnetic disk and a non volatile optical disk it is to be appreciated that other types of the computer readable media which can store data that is accessible by a computer such as magnetic cassettes or other magnetic storage devices flash memory cards CD ROM digital versatile disks DVD or other optical storage random access memories RAM read only memories ROM electrically erasable programmable read only memory EEPROM and the like can also be utilized to implement the exemplary computer environment .

Any number of program modules can be stored on the hard disk contained in the hard disk drive magnetic disk non volatile optical disk ROM and or RAM including by way of example the OS one or more application programs other program modules and program data . Each OS one or more application programs other program modules and program data or some combination thereof may implement all or part of the resident components that support the distributed file system.

A user can enter commands and information into the computer via input devices such as a keyboard and a pointing device e.g. a mouse . Other input devices not shown specifically may include a microphone joystick game pad satellite dish serial port scanner and or the like. These and other input devices are connected to the processing unit via input output interfaces that are coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB .

A monitor flat panel display or other type of computer display can also be connected to the system bus via an interface such as a video adapter . In addition to the computer display other output peripheral devices can include components such as speakers not shown and a printer which can be connected to the computer via the input output interfaces .

Computer can operate in a networked environment using logical connections to one or more remote computers such as a remote computer device . By way of example the remote computer device can be a personal computer portable computer a server a router a network computer a peer device or other common network node game console and the like. The remote computer device is illustrated as a portable computer that can include many or all of the elements and features described herein relative to the computer .

Logical connections between the computer and the remote computer device are depicted as a local area network LAN and a general wide area network WAN . Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When implemented in a LAN networking environment the computer is connected to a local network via a network interface or adapter . When implemented in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the wide network . The modem which can be internal or external to the computer can be connected to the system bus via the input output interfaces or other appropriate mechanisms. It is to be appreciated that the illustrated network connections are exemplary and that other means of establishing communication link s between the computers and can be employed.

In a networked environment such as that illustrated with the computer environment program modules depicted relative to the computer or portions thereof may be stored in a remote memory storage device. By way of example remote application programs reside on a memory device of the remote computer . For purposes of illustration application programs and other executable program components such as the operating system are illustrated herein as discrete blocks although it is recognized that such programs and components reside at various times in different storage components of the computer and are executed by the data processor s of the computer . It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used.

Various modules and techniques may be described herein in the general context of the computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs control objects components control node data structures etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

An implementation of these modules and techniques may be stored on or transmitted across some form of the computer readable media. Computer readable media can be any available media that can be accessed by a computer. By way of example and not limitation computer readable media may comprise computer storage media and communications media. 

 Computer storage media includes volatile and non volatile removable and non removable media implemented in any process or technology for storage of information such as computer readable instructions control node data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by a computer.

 Communication media typically embodies computer readable instructions control node data structures program modules or other data in a modulated data signal such as carrier wave or other transport mechanism. Communication media also includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.

Although the systems processes and scenarios have been described in language specific to structural features of the DIMS and or performing processes associated with the DIMS it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather the specific features and steps are disclosed as preferred forms of implementing the claimed invention.

