---

title: Method, system, and apparatus for detecting malicious code
abstract: A method, a system, and an apparatus for detecting malicious code to solve the problem that detection efficiency is low and that more resources are occupied. The method includes: monitoring execution of an instruction in a virtual machine supervisor of a host computer, where the instruction is generated in escape mode when a read-write request generated during execution of program code in a virtual machine of the host computer is delivered to the virtual machine supervisor; obtaining execution characteristics of the program code according to execution of the instruction; and comparing the obtained execution characteristics with pre-stored execution characteristics of known malicious code, and determining that the program code is malicious code when the obtained execution characteristics and the pre-stored execution characteristics are the same. This improves the detection efficiency, and saves the storage resources and the processing resources in the host computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09465941&OS=09465941&RS=09465941
owner: HUAWEI TECHNOLOGIES CO., LTD.
number: 09465941
owner_city: Shenzhen
owner_country: CN
publication_date: 20140123
---
This application is a continuation of International Application No. PCT CN2012 075380 filed on May 11 2012 which claims priority to Chinese Patent Application No. 201110226659.5 filed on Aug. 9 2011 both of which are hereby incorporated by reference in their entireties.

The present invention relates to the field of computer security technologies and in particular to a method for detecting malicious code a host computer an apparatus for detecting malicious code and a system for detecting malicious code.

The hardware virtualization technology is widely applied to fields such as software testing and parallel computing. One or more virtual machines are created on one physical host by using the hardware virtualization technology so that several or even tens of virtual machines share hardware resources of one physical host. Therefore the physical host is also called a host computer.

Cloud computing centralizes data processing tasks of terminal devices and delivers the tasks to a network for execution so that the network provides data services for users using a plurality of different terminal devices. In this way differences of terminal devices are overcome. Distributed computing at the network side in the cloud computing becomes a new important application scenario of the hardware virtualization technology. Virtual machines on the same host computer may generate data interaction only by using a public host computer other than using a network device. Therefore when the cloud computing is implemented by using the hardware virtualization technology a virtual machine infected by a virus easily infects through the host computer other virtual machines on the same host computer. Therefore the cloud computing is easily subject to computer viruses and network attacks.

Regarding how to detect malicious code Malware including the virus in the above scenario the prior art proposes respectively installing antivirus software on each of the virtual machines on the same host computer and detecting and removing the malicious code on the virtual machines by using the antivirus software installed in the virtual machines.

During the implementation of the present invention the inventors find that the prior art has at least the following disadvantages when the malicious code is executed damage is actually caused to physical hardware such as the memory and CPU of the host computer instead of logical virtual machines. However in the solution of the prior art it is required that all virtual machines on the same host computer be installed with antivirus software respectively and that malicious code detection be performed on the virtual machines. Consequently this solution has the following problems the efficiency of detecting malicious code is low and more storage resources and processing resources of the host computer are occupied.

Embodiments of the present invention provide a method for detecting malicious code to solve the problem that detection efficiency is low and that more resources are occupied in the prior art.

Correspondingly the embodiments of the present invention further provide a host computer an apparatus for detecting malicious code and a system for detecting malicious code.

A method for detecting malicious code includes monitoring execution of an instruction in a virtual machine supervisor of a host computer where the instruction is generated in escape mode when a read write request generated during execution of program code in a virtual machine of the host computer is delivered to the virtual machine supervisor obtaining execution characteristics of the program code according to execution of the instruction and comparing the obtained execution characteristics with pre stored execution characteristics of known malicious code and determining that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same.

A method for detecting malicious code includes receiving program code sent by a host computer executing the program code in a pre constructed first sandbox for simulating an environment of a virtual machine supervisor and obtaining a security state report of the first sandbox after the program code is executed and or executing the program code in a pre constructed second sandbox for simulating an environment of a virtual machine and obtaining a security state report of the second sandbox after the program code is executed determining according to values of preset parameters in the security state report and a set of preset determination rules whether the program code is malicious code where the determination rules include a threshold determination range for at least one of the preset parameters and sending a determination result to the host computer.

A host computer includes a virtual machine supervisor and at least one virtual machine and further includes an apparatus for detecting malicious code where the apparatus for detecting malicious code is configured to monitor execution of an instruction in the virtual machine supervisor of the host computer where the instruction is generated in escape mode when a read write request generated during execution of program code in a virtual machine of the host computer is delivered to the virtual machine supervisor obtain execution characteristics of the program code according to execution of the instruction and compare the execution characteristics obtained by the obtaining unit with pre stored execution characteristics of known malicious code and determine that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same.

An apparatus for detecting malicious code includes a monitoring unit configured to monitor execution of an instruction in a virtual machine supervisor of a host computer where the instruction is generated in escape mode when a read write request generated during execution of program code in a virtual machine of the host computer is delivered to the virtual machine supervisor an obtaining unit configured to obtain execution characteristics of the program code according to execution of the instruction and a determining unit configured to compare the execution characteristics obtained by the obtaining unit with pre stored execution characteristics of known malicious code and determine that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same.

An apparatus for detecting malicious code includes a first receiving unit configured to receive program code sent by a host computer an executing unit configured to execute the program code in a pre constructed first sandbox for simulating an environment of a virtual machine supervisor and obtain a security state report of the first sandbox after the program code is executed and or execute the program code in a pre constructed second sandbox for simulating an environment of a virtual machine and obtain a security state report of the second sandbox after the program code is executed a determining unit configured to determine according to values of preset parameters in the security state report and a set of preset determination rules whether the program code is malicious code where the determination rules include a threshold determination range for at least one of the preset parameters and a first sending unit configured to send a determination result obtained by the determining unit to the host computer.

A system for detecting malicious code includes at least one host computer and at least one cluster antivirus device where the host computer is configured to capture an instruction in a virtual machine supervisor of the host computer where the instruction is generated in escape mode when a read write request generated during execution of program code in a virtual machine of the host computer is delivered to the virtual machine supervisor obtain execution characteristics of the program code according to execution of the instruction compare the obtained execution characteristics with execution characteristics of known malicious code in a blacklist in a local database and determine that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same when the obtained execution characteristics and the pre stored execution characteristics are different send the program code to the cluster antivirus device and receive a determination result returned by the cluster antivirus device about whether the program code is malicious code and the cluster antivirus device is configured to receive the program code sent by the host computer execute the program code in a pre constructed first sandbox for simulating an environment of a virtual machine supervisor and obtain a security state report of the first sandbox after the program code is executed and or execute the program code in a pre constructed second sandbox for simulating an environment of a virtual machine and obtain a security state report of the second sandbox after the program code is executed determine according to values of preset parameters in the security state report and a set of preset determination rules whether the program code is malicious code where the determination rules include a parameter value range for at least one of the preset parameters and send the determination result to the host computer.

By using the method for detecting malicious code according to the embodiments of the present invention the instruction generated in escape mode is monitored in the virtual machine supervisor of the host computer and the execution characteristics of the program code are obtained according to the instruction the obtained execution characteristics are compared with the pre stored execution characteristics of known malicious code and it is determined whether the program code is malicious code according to the comparison result. This improves the detection efficiency and saves the storage resources in the host computer that are occupied by installing antivirus software in each virtual machine repeatedly and the processing resources in the host computer that are occupied by running the antivirus software in each virtual machine.

When malicious code is executed on a virtual machine both the operation of reading and writing the memory of a host computer by the malicious code and the operation of accessing the CPU are forwarded by a virtual platform to physical hardware of the host computer. Therefore when the malicious code is executed damage is actually caused to physical hardware such as the memory and the CPU of the host computer instead of logical virtual machines. However in the prior art the solution for detecting malicious code on a virtual machine requires that all virtual machines on the same host computer be installed with antivirus software respectively and that malicious code detection be performed on the virtual machines respectively. Consequently the prior art has the following problems the detection efficiency is low and more resources of the host computer are occupied.

In addition during antivirus software upgrade antivirus software needs to be synchronously upgraded on all virtual machines. Otherwise a virtual machine with the antivirus software of a lower version may still be infected by malicious code. Therefore the prior art has the problem that management upgrade and maintenance are complex.

Embodiments 1 to 5 of the present invention describe a method for detecting malicious code from the perspective of a host computer. Embodiments 6 and 7 describe a method for detecting malicious code from the perspective of a cluster antivirus device.

The following describes major principles implementation modes and benefits of the technical solutions provided in the embodiments of the present invention with reference to the accompanying drawings.

Referring to a process of a method for detecting malicious code according to this embodiment of the present invention is described in detail.

Specifically when program code is executed on a virtual machine and a read write request directed to all types of physical hardware devices is delivered to the virtual machine supervisor the read write request will be formed in escape mode into an instruction executed in the virtual machine supervisor of the host computer where the virtual machine is located and the physical hardware devices are accessed by using the virtual machine supervisor.

The operation in escape mode is a function of the existing virtual machine supervisor. In the operation in escape mode the access of the virtual machine to virtual hardware devices is converted into access of the virtual machine supervisor to physical hardware devices. It is an indispensable step during execution of the program code in the virtual machine. The technical details are not described herein.

It should be noted that according to this embodiment of the present invention the monitoring execution of the instruction in the virtual machine supervisor of the host computer refers to monitoring execution of an escaped instruction in the virtual machine supervisor but not execution of the program code before escaping in the virtual machine.

The execution characteristics of the program code include the content of the instruction generated in escape mode from the read write request generated during execution of the program code a behavior characteristic of the instruction in the virtual machine supervisor or a behavior characteristic of the instruction during access to the physical hardware device.

The behavior characteristic of the instruction in the virtual machine supervisor includes modification of the content of a system file in the virtual machine supervisor modification of the storage location of a system file in the virtual machine supervisor or modification of parameter information of a system file in the virtual machine supervisor. The file parameter information includes a name identifier generation time a version number and access rights to the system file.

The behavior characteristic of the instruction during access to the physical hardware device includes duration when access to storage space of a storage device such as a memory a hard disk or a flash memory exceeds a first preset threshold duration when CPU usage exceeds a second preset threshold or whether to read and write an input output interface within a specified range. Optionally the first preset threshold may be obtained by collecting statistics of access to the storage device by the instruction generated in escape mode from the known malicious code in advance and the second preset threshold may be obtained by collecting statistics of CPU usage during execution of the instruction generated in escape mode from the known malicious code in advance.

With reference to the example illustrated in the following describes the specific process of obtaining the execution characteristics of the program code.

A read write request set generated during execution of program code a1.exe in the virtual machine is formed into an instruction set a1 in escape mode. The instruction set a1 includes 10 instructions including cmd0 cmd9.

The content shown in Table 1 of the instruction generated in escape mode from the read write request during the execution of the program code may be obtained by reading the content of the monitored instruction. Optionally a part of the content may be read. For example the read content of cmd1 is 0x195fd3 and the read content of cmd6 is 0x13457e .

Optionally the behavior characteristic of the instruction generated in escape mode in the virtual machine supervisor or the behavior characteristic of the instruction during access to the physical hardware device may be obtained in the following way 

Monitor whether a predetermined application programming interface API in the virtual machine supervisor for example a file system API or an input output operation API is invoked by the instruction generated in escape mode if the API is invoked by any instruction of cmd1 cmd9 generated in escape mode obtain the behavior characteristic of the instruction generated in escape mode in the virtual machine supervisor or the behavior characteristic of the instruction during access to the physical hardware device according to a parameter input when the API is invoked by the instruction. The input parameter includes file parameter information such as a file path and a file identifier or the identifier of an interface to be read or written or the data of an interface to be read or written. For example it may be acquired according to the parameter input when the file system API is invoked by cmd2 that cmd2 is to modify the content of a system file named xen.gz in the path boot .

In addition the usage of storage resources or processing resources on the host computer is obtained by monitoring the predetermined API during execution of the instruction. In this way the behavior characteristic of the instruction during access to the hardware is obtained for example the size of storage space of the storage device and CPU usage.

Step Compare the obtained execution characteristics with pre stored execution characteristics of known malicious code and determine whether the program code is malicious code according to the comparison result.

The specific comparison mode may be set based on a comprehensive consideration of factors such as the requirement on the security level and processing performance of the host computer. For example if the requirement on the security level is high the comparison mode may be set as follows as long as at least one execution characteristic of the obtained execution characteristics is the same as one execution characteristics of the known malicious code the execution characteristics are considered to be the same as those of the known malicious code and the program code is determined as malicious code. For example as long as the identifier of the program code is the same as the identifier of the known malicious code the program code is determined as malicious code. Or if the processing performance of the host computer is low the comparison mode may be set as follows only execution characteristics that are easily obtained are compared with the execution characteristics of the known malicious code and if the execution characteristics that are easily obtained are the same as the execution characteristics of the known malicious code the execution characteristics of the program code are considered to be the same as the execution characteristics of the known malicious code and the program code is determined as malicious code otherwise the execution characteristics of the program code are considered to be different from the execution characteristics of the known malicious code and the program code is not determined as malicious code. For example only the identifier of the program code digital signature and issuer identifier are compared and execution characteristics that are hard to obtain are not compared for example the behavior characteristic during access to the physical hardware device. The details are not exhaustively described here.

Process 1 The host computer stores a blacklist in a local database where the blacklist includes execution characteristics of known malicious code.

The host computer compares the obtained execution characteristics of the program code with execution characteristics of known malicious code in the blacklist in the local database. If the obtained execution characteristics are the same as the execution characteristics of the known malicious code in the blacklist the host computer determines that the program code is malicious code otherwise the host computer determines that the program code is not malicious code.

For example the blacklist includes execution characteristics of known malicious code malware1.exe malware2.exe and malware3.exe. The host computer compares the obtained execution characteristics of program code a1.exe with the execution characteristics of the three malicious codes in the blacklist one by one. Comparison of the execution characteristics of the program code a1.exe with those of malware1.exe is used as an example for description.

 1 The content of cmd1 in an instruction set malware1 generated in escape mode is 0x195fd3 and the content of cmd6 is 0x13457e .

 2 A behavior characteristic of an instruction generated in escape mode in the virtual machine supervisor is modifying the content of a system file named xen.gz in the path boot .

The contents of cmd1 and cmd6 in the instruction set a1 generated in escape mode during execution of the program code a1.exe are compared with the contents of cmd1 and cmd6 in the instruction set malware1 and the behavior characteristic of an instruction in the instruction set a1 in the virtual machine supervisor is compared with the behavior characteristic of an instruction in malware1 in the virtual machine supervisor the comparison result indicates that the contents of cmd1 and cmd6 are the same as the contents of cmd1 and cmd6 in the instruction set malware1 and that the behavior characteristic of the instruction in the instruction set a1 in the virtual machine supervisor and the behavior characteristic of the instruction in malware1 in the virtual machine supervisor are both modifying the content of a system file named xen.gz in the path boot . Therefore the comparison result is that the execution characteristics of program code a1.exe are the same as the execution characteristics of malicious code malware1.exe which indicates that program code a1.exe is malicious code.

Optionally when the comparison result indicates that the execution characteristics are different the user may be prompted to determine whether to run the program code.

By using the method for detecting malicious code according to the embodiment of the present invention the instruction generated in escape mode is monitored in the virtual machine supervisor of the host computer and the execution characteristics of the program code are obtained according to the instruction the obtained execution characteristics are compared with the pre stored execution characteristics of malicious code and it is determined whether the program code is malicious code according to the comparison result. In this way antivirus software does not need to be installed on each virtual machine thereby improving the detection efficiency reducing the storage resources in the host computer that are occupied by installing antivirus software repeatedly and the processing resources in the host computer that are occupied by running the antivirus software in each virtual machine.

To improve accuracy of detecting malicious code this embodiment provides another process of determining whether the program code is malicious code in step according to Embodiment 1. A whitelist is further stored in the local database of a host computer. The host computer determines whether the program code is malicious code according to comparison using the blacklist and whitelist. When failing to determine whether the program code is malicious code according to the comparison result using the local database the host computer sends the execution characteristics or the program code to the cluster antivirus device for determination and receives a determination result returned by the cluster antivirus device. The details are shown in .

Both a blacklist and a whitelist are stored in the local database of a host computer. The whitelist contains execution characteristics of known normal code.

Step The host computer compares the obtained execution characteristics of the program code with execution characteristics of known malicious code in the blacklist in the local database for the first time. If the execution characteristics are the same the host computer determines that the program code is malicious code otherwise step is performed.

Step If the first comparison result indicates that the execution characteristics are different the host computer compares the obtained execution characteristics with execution characteristics of known normal code in the whitelist in the local database for a second time.

If the second comparison result indicates that the execution characteristics are the same the host computer determines that the program code is not malicious code.

If the second comparison result indicates that the execution characteristics are different step or step is performed.

Step The host computer sends the obtained execution characteristics to the cluster antivirus device and step is performed.

Step The host computer receives the determination result returned by the cluster antivirus device about whether the program code is malicious code where the determination result is determined after the cluster antivirus device compares the characteristics with the execution characteristics of the known malicious code in an extended database of the cluster antivirus device.

Compared with the host computer the cluster antivirus device is capable of comparing the execution characteristics sent by the host computer with the execution characteristics of the known malicious code in the blacklist in an extended database by using the advantage of computing performance of the distributed computing technology or the advantage of the storage capacity of the distributed storage to obtain the determination result. The specific comparison mode is similar to that used by the host computer and is not repeatedly described herein.

Step The host computer receives the determination result returned by the cluster antivirus device about whether the program code is malicious code where the determination result is determined according to an execution result after the cluster antivirus device executes the program code by using the sandboxing technology or other technologies similar to sandboxing.

The sandboxing or referred to as the sand table technology is an existing virtualized security isolation technology. This technology restricts the execution environment of program behaviors according to a security policy. The program code running in the sandbox cannot modify or view the user system. The cluster antivirus device executes suspicious code by using the sandboxing technology and provides a determination result indicating whether the suspicious code is malicious code according to the execution result.

Optionally the above steps may be performed by an apparatus for detecting malicious code in the host computer.

Further in steps and the apparatus for detecting malicious code may instruct the virtual machine executing the program code to send the program code to the cluster antivirus device. For example the apparatus for detecting malicious code may send a notification message to an antivirus proxy in the virtual machine to instruct the virtual machine to send the program code to the cluster antivirus device. The apparatus for detecting malicious code may also obtain the program code from the virtual machine and send the obtained program code to the cluster antivirus device. For example the apparatus for detecting malicious code may send a request message to the antivirus proxy in the virtual machine and obtain the program code from a corresponding response message received.

In addition to the comparison solutions for the host computer provided in Embodiment 1 and this embodiment other comparison solutions may also be used. For example the host computer first compares the obtained execution characteristics of the program code with the execution characteristics in the whitelist and compares the obtained execution characteristics of the program code with the execution characteristics in the blacklist for a second time when the first comparison result indicates that the execution characteristics are different or concurrently compares the execution characteristics of the program code with the execution characteristics of the known malicious code in the blacklist and the execution characteristics of the known normal code in the whitelist respectively. The details are not exhaustively described.

In addition in this embodiment of the present invention the whitelist may not be stored in the local database or the execution characteristics may not be compared with those in the whitelist. When the comparison result in step indicates that the execution characteristics are different step may be skipped and step or step is directly performed. In this way storage space occupied by the local database is reduced. However this may result in that more messages are exchanged between the host computer and the cluster antivirus device. In practice a proper solution may be flexibly selected according to factors such as storage resources of the host computer and network transmission resources.

By using the method for detecting malicious code according to this embodiment of the present invention when failing to determine according to the comparison result using the local database whether the program code is malicious code the host computer sends the execution characteristics or the program code to the cluster antivirus device for determination and receives a determination result returned by the cluster antivirus device. Whether the program code sent by the host computer is malicious code is determined by using the performance advantage of a distributed computing system of the cluster antivirus device and according to the extended database or the sandbox which improves accuracy of detecting malicious code.

In Embodiment 2 compared with the determination mode using the sandbox in steps and the determination mode using the distributed behavior characteristic in steps and has high processing efficiency. However in this mode new malicious code that has not appeared cannot be identified. In the determination mode using the sandbox in steps and new malicious code that has not appeared can be identified but the processing efficiency is low. To ensure high processing efficiency and a capability of identifying new malicious code by combining the advantages of the two determination modes this embodiment further provides a method of comparing the execution characteristics of the program code with pre stored execution characteristics of known malicious code and determining whether the program code is malicious code according to the comparison result. The detailed process is illustrated in .

Step The host computer compares the obtained execution characteristics of the program code with execution characteristics of known malicious code in the blacklist in the local database for the first time. If the execution characteristics are the same the host computer determines that the program code is malicious code otherwise step is performed. For the specific comparison mode in this embodiment reference may be made to Embodiment 1.

Step If the first comparison result indicates that the execution characteristics are different the host computer compares the obtained execution characteristics with execution characteristics of known normal code in the whitelist in the local database for a second time.

If the second comparison result indicates that the execution characteristics are the same the host computer determines that the program code is not malicious code.

If the second comparison result indicates that the execution characteristics are different step is performed.

Step The host computer receives the determination result about whether the program code is malicious code or not malicious code or an identifier indicating that the program code fails to be identified which is returned by the cluster antivirus device. If the host computer receives the identifier indicating that the program code fails to be identified step is performed.

If the cluster antivirus device determines that the received execution characteristics are the same as the execution characteristics of known malicious code in the blacklist in an extended database the cluster antivirus device determines that the program code is malicious code and returns the determination result indicating that the program code is malicious code.

If the cluster antivirus device determines that the received execution characteristics are the same as the execution characteristics of known normal code in the whitelist in the extended database the cluster antivirus device determines that the program code is not malicious code and returns the determination result indicating that the program code is not malicious code.

If the cluster antivirus device determines that the received execution characteristics are different from both the execution characteristics of the known malicious code in the blacklist in the extended database and the execution characteristics of the known normal code in the whitelist in the extended database the cluster antivirus device returns the identifier indicating that the program code fails to be identified.

Step The host computer receives the determination result returned by the cluster antivirus device about whether the program code is malicious code where the determination result is determined according to an execution result after the cluster antivirus device executes the program code by using the sandboxing technology.

Referring to the method for detecting malicious code according to this embodiment of the present invention may be adjusted as follows Steps illustrated in are replaced by steps .

Step The host computer sends the program code and the obtained execution characteristics to the cluster antivirus device.

The cluster antivirus device may first compare the received execution characteristics with the execution characteristics of the known malicious code in the blacklist in the extended database. If the comparison result indicates that the execution characteristics are the same and it can be determined that the program code is malicious code the cluster antivirus device directly returns the determination result indicating that the program code is malicious code. If the comparison result indicates that the execution characteristics are different the cluster antivirus device further executes the program code in the sandbox and determines whether the program code is malicious code according to the execution result.

In Embodiments 1 3 when the host computer determines according to the local database or the determination result returned by the cluster antivirus device that the program code is malicious code the method further includes impeding execution of the instruction generated in escape mode from the read write request of the program code.

Optionally the instruction generated in escape mode from the read write request of the program code may also be isolated or the user is prompted to delete the program code.

When it is determined that the program code is not malicious code the method further includes continuously executing the instruction generated in escape mode from the read write request of the program code.

According to this embodiment of the present invention after the host computer detects the malicious code execution of the instruction generated in escape mode from the read write request may be impeded. This solves the problem that the malicious code is transmitted between multiple virtual machines in the host computer and enhances the security.

Referring to in Embodiments 1 4 if the host computer determines according to the local database or the determination result returned by the cluster antivirus device that the program code is malicious code the method further includes 

Step Record an identifier of the program code and count the number of times that the identifier of the program code is detected within a preset period where the preset period may be determined according to factors such as a history record of the detection frequency of the malicious code or the performance of the host computer.

Step Periodically or aperiodically send the recoded identifier of the program code and the number of times that the program code is recorded within the preset period to the cluster antivirus device.

Step Receive a database content returned by the cluster antivirus device where the received database content is determined by the cluster antivirus device according to the identifier of the program code and the number of times that are sent by the host computer.

Step Replace the content of the local database according to the received database content to update the local database.

Optionally the received database content is updated by the cluster antivirus device according to a preset geographic region or the identifier of the program code and the recorded number of times that are sent by the host computers in a network region for example a local area network the network of a university or the network of a city .

By using the above solution the local database of the host computer is timely updated. This in one aspect improves the accuracy of detecting malicious code according to Embodiment 1 and in another aspect increases the probability that the host computer determines that the program code is malicious code by comparing the obtained execution characteristics of the program code with the execution characteristics of the malicious code in the blacklist in the local database. In this way the network transmission resources consumed by frequently sending the program code or the execution characteristics of the program code by the host computer to the cluster antivirus device in Embodiments 2 and 3 and therefore the detection efficiency is improved.

The local database of the host computer according to this embodiment of the present invention may be used to detect whether the program code in the virtual machines is malicious code. In this way utilization of the data in the local database is improved and additionally the update and upgrade solution is more convenient. Therefore the problem that update and maintenance are complex in the prior art because antivirus software is installed in each of the virtual machines is prevented.

Referring to this embodiment of the present invention describes the method for detecting malicious code from the perspective of a cluster antivirus device.

Step The cluster antivirus device receives program code or execution characteristics of the program code sent by a host computer if the program code is received step is performed if the execution characteristics of the program code are received step is performed.

Step The cluster antivirus device executes the program code by using the sandboxing technology or other technologies similar to sandboxing and obtains an execution result and step is performed.

Step The cluster antivirus device determines according to values of preset parameters in the execution result and a set of preset determination rules whether the program code is malicious code where the determination rules include a threshold determination range for at least one of the preset parameters.

Specifically the preset parameters may be environment parameters of the sandbox for example some parameters in a registry or the number of files within a predetermined range for example a folder in a predetermined path a file size a file link and read write rights to a file. For example one preset rule is R1 if path boot xen.gz operation writing or changing link then Malware that is during execution of program code if an operation of modifying the file content or changing the file link is performed for a file named xen.gz in the path boot the program code is malicious code . After the program code is executed in the sandbox if the execution result complies with rule R1 it indicates that the program code is malicious code.

Optionally the preset rule is obtained by analysis according to the execution result of the known malicious code.

Step The cluster antivirus device sends the determination result obtained in step to the host computer.

Step The cluster antivirus device compares the execution characteristics sent by the host computer with execution characteristics of known malicious code in the blacklist in an extended database if the execution characteristics are the same as the execution characteristics of the known malicious code in the blacklist step is performed if the execution characteristics are different step is performed.

Step The cluster antivirus device returns a determination result indicating that the program code is malicious code.

Step The cluster antivirus device compares the execution characteristics sent by the host computer with execution characteristics of known normal code in the whitelist in the extended database if the execution characteristics are the same as the execution characteristics of the known normal code in the whitelist step is performed if the execution characteristics are different step is performed.

Step The cluster antivirus device returns a determination result indicating that the program code is not malicious code.

Step The cluster antivirus device returns an identifier indicating that the returned program code fails to be identified.

It should be noted that the solution disclosed in steps of determining whether the program code in the host computer is malicious code by using the sandboxing technology may be implemented independently of the solution disclosed in step and steps of determining whether the program code in the host computer is malicious code by querying the extended database.

Referring to the method for detecting malicious code illustrated in according to this embodiment of the present invention may also be adjusted as follows 

Step The cluster antivirus device receives program code and execution characteristics of the program code that are sent by the host computer.

Step The cluster antivirus device compares the received execution characteristics with execution characteristics of known malicious code in the blacklist in an extended database if the execution characteristics are the same as the execution characteristics of the known malicious code in the blacklist step is performed if the execution characteristics are different step is performed.

Step The cluster antivirus device returns a determination result indicating that the program code is malicious code.

Step The cluster antivirus device compares the execution characteristics sent by the host computer with execution characteristics of known normal code in the whitelist in the extended database if the execution characteristics are the same as the execution characteristics of the known normal code in the whitelist step is performed if the execution characteristics are different step is performed.

Step The cluster antivirus device returns a determination result indicating that the program code is not malicious code.

Step The cluster antivirus device executes the program code by using the sandboxing technology and obtains an execution result step is performed.

Step The cluster antivirus device determines according to values of preset parameters in the execution result and a set of preset determination rules whether the program code is malicious code where the determination rules include a parameter value range for at least one of the preset parameters.

Step The cluster antivirus device sends the determination result obtained in step to the host computer.

In the solution illustrated in the data volume in single transmission between the host computer and the cluster antivirus device is small but the number of interactions is large. In the solution illustrated in the data volume in single transmission between the host computer and the cluster antivirus device is large but the number of interactions is reduced. During implementation a solution may be selected flexibly according to the actual network conditions.

Optionally in step illustrated in or step illustrated in the cluster antivirus device executes the program code by using the sandboxing technology. The specific mode for obtaining the execution result includes but is not limited to any one or combination of the following modes 

Mode 1 The program code is executed in the pre constructed first sandbox for simulating an environment of a virtual machine supervisor and a security state report of the first sandbox is obtained after the program code is executed. According to mode 1 behaviors of transmitting malicious code by the virtual machine using the host computer may be detected.

Mode 2 The program code is executed in the second sandbox pre constructed for simulating an environment of a virtual machine and a security state report of the second sandbox is obtained after the program code is executed. According to mode 2 the running status of the malicious code in the virtual machine or hardware devices corresponding to the virtual machine may be obtained.

The method for detecting malicious code according to this embodiment of the present invention is capable of using the performance advantage of a distributed computing system of the cluster antivirus device and comparing the execution characteristics of the program code sent by the host computer with the execution characteristics of known malicious code in an extended database to determine whether the program code is malicious code or executing the program code sent by the host computer by using the sandboxing technology in a virtualization manner and determining whether the program code sent by the host computer is malicious code according to the execution result. In this way the detection accuracy is improved.

Step After determining according to an execution result by using the sandboxing technology whether program code sent by a host computer is malicious code update a database of a cluster antivirus device according to the determination result.

The cluster antivirus device adds the identifier of the program code and the corresponding execution characteristics to a blacklist in the database when determining that the program code is malicious code.

Optionally the cluster antivirus device adds the identifier of the program code and the corresponding execution characteristics to a whitelist in the database when determining that the program code is not malicious code.

Step Receive the identifier of the program code and the number of times that the identifier of the program code is detected within a preset period which are sent by the host computer.

Step Filter out a part of contents from the database according to a predetermined filter rule and the received identifier of the program code and the number of times where the filter rule includes a statistical indicator determination threshold and the value of the statistical indicator may be determined according to the identifier of the program code and the number of times that the identifier of the program code is detected within the preset period.

This embodiment of the present invention further provides a specific architecture of a database in the cluster antivirus device as shown in . The database of the cluster antivirus device includes an update rule library an extended database and a basic database where at least one update rule is stored in the update rule library. shows the process of forming an extended database and a basic database.

Step The cluster antivirus device executes the program code sent by the host computer by using the sandboxing technology and updates the extended database after determining according to the execution result whether the program code is malicious code for the specific implementation of executing the program code by using the sandbox and determining according to the execution result whether the program code is malicious code reference may be made to the description in Embodiment 6 .

Optionally the cluster antivirus device adds the identifier of the program code and the corresponding execution characteristics to a blacklist in the extended database when determining that the program code is malicious code.

Optionally the cluster antivirus device adds the identifier of the program code and the corresponding execution characteristics to a whitelist in the extended database when determining that the program code is not malicious code.

Step Receive an identifier of the program code and the number of times that the identifier of the program code is detected within a preset period which are sent by the host computer periodically or aperiodically.

Optionally the cluster antivirus device may also obtain additional information such as an identifier of the host computer and sending time from the header of a data packet that is sent by the host computer and carries the identifier of the program code and the number of times that the identifier of the program code is detected.

Step The cluster antivirus device calculates preset statistical indicator values of all program code in the extended database according to the identifier of the program code and the number of times that are sent by the host computer.

Optionally the statistical indicator includes the total number of times that the malicious code is detected by the host computers which may also be understood as the total number of times that the malicious code infects the virtual machines or the speed at which the malicious code is detected by the host computers which may also be understood as the speed at which the malicious code infects the virtual machines the details about detection of the malicious code by different host computers which may also be understood as the universality of infection of the virtual machines by the malicious code that is a transmission range the time when the malicious code is detected by the virtual machines and the time when the malicious code is detected by the first host computer which may also be understood as the time when the malicious code infects the virtual machines for the first time .

Step The cluster antivirus device filters according to the predetermined filter rule an identifier and corresponding execution characteristics of malicious code that comply with the filter rule from the extended database and adds the identifier and the execution characteristics to the basic database where the filter rule includes at least one statistical indicator determination threshold.

1. Filter rule R11 set according to the total number of times that the malicious code is detected by the host computers if the total number of times that the malicious code is detected exceeds 1000 the identifier and execution characteristics of the malicious code are added to the basic database.

2. Filter rule R12 set according to the speed at which the malicious code is detected by the host computers if the speed at which the malicious code is detected exceeds 500 times per day the identifier and execution characteristics of the malicious code are added to the basic database. Using this filter rule the cluster antivirus device can filter out the malicious code transmitted at a high speed.

3. Filter rule R13 set according to the details about detection of the malicious code by different host computers if the malicious code is detected by over 80 of the host computers the identifier and execution characteristics of the malicious code are added to the basic database. Using this filter rule the cluster antivirus device can filter out the malicious code transmitted within a large range.

4. Filter rule R14 set according to the time when the malicious code is initially detected by the host computer if the duration between the time when the malicious code is initially detected and the current time exceeds one month that is the malicious code has infected the host computer for over one month the identifier and execution characteristics of the malicious code are added to the basic database. Using this filter rule the cluster antivirus device can filter out the malicious code that has infected the host computer for a long time.

Step The cluster antivirus device sends the content of the basic database to the host computers so that the host computers update local databases.

Optionally to effectively control capacities of the local databases of the host computers and save storage resources of the host computers before step the method further includes 

Step Delete according to a predetermined update rule the identifier and execution characteristics of the program code that comply with the update rule from the basic database where the update rule includes at least one statistical indicator determination threshold.

1. Update rule R21 set according to the severity that the virtual machines are infected recently by the malicious code if the number of times that the malicious code infects the virtual machines within a recent preset period is smaller than the preset number of times for example 10 or 100 times the identifier and corresponding execution characteristics of the malicious code are deleted from the blacklist in the basic database.

2. Update rule R22 set according to the range where the virtual machines are infected recently by the malicious code if the number of virtual machines infected by the malicious code within a recent preset period is smaller than the preset number for example 10 or 100 the identifier and corresponding execution characteristics of the malicious code are deleted from the blacklist in the basic database.

The number of virtual machines infected by the malicious code within the recent preset period may be determined according to the time when the program code and the number of times that are sent by the host computer and the identifier of the host computer.

3. Update rule R23 set according to the duration when the malicious code is in the inactive state if the malicious code does not appear again in any virtual machine within a recent preset period for example three months or one year the identifier and corresponding execution characteristics of the malicious code are deleted from the blacklist in the basic database.

According to the update solution provided in this embodiment of the present invention the database content with a high detection rate is selected from the database of the cluster antivirus device and the local database of the host computer is updated according to the filtered database content. In this way the probability that the host computer is capable of determining whether the program code executed in the virtual machine is malicious code according to the local database is increased the number of times that the program code or the execution characteristics of the program code are sent to the cluster antivirus device for determination is reduced. This reduces the occupied transmission bandwidth between the host computer and the cluster antivirus device shortens the determination time and enhances the determination efficiency.

Referring to this embodiment of the present invention provides a host computer including a virtual machine supervisor and at least one virtual machine and further including an apparatus for detecting malicious code.

The apparatus for detecting malicious code is configured to monitor execution of an instruction in the virtual machine supervisor of the host computer where the instruction is generated in escape mode when a read write request generated during execution of program code in the virtual machine of the host computer is delivered to the virtual machine supervisor obtain execution characteristics of the program code according to execution of the instruction and compare the execution characteristics obtained by the obtaining unit with pre stored execution characteristics of known malicious code and determine that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same.

Correspondingly an embodiment of the present invention further provides an apparatus for detecting malicious code whose schematic structural diagram is shown in . The apparatus includes a monitoring unit an obtaining unit and a determining unit .

The monitoring unit is configured to monitor execution of an instruction in a virtual machine supervisor of a host computer where the instruction is generated in escape mode when a read write request generated during execution of program code in a virtual machine of the host computer is delivered to the virtual machine supervisor.

The obtaining unit is configured to obtain execution characteristics of the program code according to execution of the instruction obtained by the monitoring unit .

The determining unit is configured to compare the execution characteristics obtained by the obtaining unit with pre stored execution characteristics of known malicious code and determine that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same.

The apparatus for detecting malicious code further includes a first sending unit configured to when the determining unit determines that the execution characteristics are different send the obtained execution characteristics to a cluster antivirus device or send the program code to the cluster antivirus device and a first receiving unit configured to receive a determination result returned by the cluster antivirus device about whether the program code is malicious code according to the execution characteristics sent by the first sending unit where the determination result is determined after the cluster antivirus device compares the execution characteristics with execution characteristics of known malicious code in a database of the cluster antivirus device or receive a determination result returned by the cluster antivirus device about whether the program code is malicious code according to the program code sent by the first sending unit where the determination result is determined according to an execution result after the cluster antivirus device executes the program code by using the sandboxing technology.

Optionally the determining unit in specifically includes a first determining subunit configured to compare the obtained execution characteristics with execution characteristics of known malicious code in a blacklist in a local database and determine that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same and a second determining subunit configured to when the first determining subunit determines that the execution characteristics are different compare the obtained execution characteristics with execution characteristics of known normal code in a whitelist in the local database for a second time and if the second comparison result indicates that the execution characteristics are the same determine that the program code is not malicious code.

The first sending unit is further configured to when the second determining subunit determines that the execution characteristics are different after the second comparison send the obtained execution characteristics to a cluster antivirus device or send the program code to the cluster antivirus device.

Optionally referring to the apparatus for detecting malicious code in further includes a recording and counting unit configured to when the determining unit determines that the program code is malicious code record an identifier of the program code and count according to a record result the number of times that the identifier of the program code is detected within a preset period a second sending unit configured to send the identifier of the program code and the number of times that are obtained by the recording and counting unit to the cluster antivirus device and a second receiving unit configured to receive a database content returned by the cluster antivirus device and replace a content of a local database according to the received database content where the received database content is determined by the cluster antivirus device according to the identifier of the program code and the number of times and the received database content includes the execution characteristics of known malicious code.

Optionally the first sending unit specifically includes a notifying subunit configured to instruct by sending a notification message to an antivirus proxy in a virtual machine the virtual machine to send the program code to the cluster antivirus device.

Or the first sending unit specifically includes a first sending subunit a first receiving subunit and a second sending subunit where the first sending subunit is configured to send a request message to the antivirus proxy in the virtual machine the first receiving subunit is configured to receive a response message returned by the antivirus proxy in the virtual machine according to the request message and the second sending subunit is configured to obtain program code from the response message and send the obtained program code to the cluster antivirus device.

The apparatus for detecting malicious code according to the embodiment of the present invention may be integrated in a virtual machine supervisor of a host computer or implemented using independent hardware or software modules.

This embodiment of the present invention provides a host computer and an apparatus for detecting malicious code in the host computer. The apparatus monitors the instruction generated in escape mode in the virtual machine supervisor of the host computer obtains the execution characteristics of the program code according to the instruction compares the obtained execution characteristics with the pre stored execution characteristics of known malicious code and determines whether the program code is malicious code according to the comparison result. Compared with the solution of the prior art where antivirus software is installed in each virtual machine to detect malicious code the solution provided in this embodiment improves the detection efficiency reduces the storage resources in the host computer that are occupied by installing antivirus software in each virtual machine repeatedly and the processing resources in the host computer that are occupied by running the antivirus software in each virtual machine.

Referring to this embodiment of the present invention provides an apparatus for detecting malicious code. The apparatus for detecting malicious code may be a cluster antivirus device. The apparatus includes a first receiving unit an executing unit a determining unit and a first sending unit .

The executing unit is configured to execute by using the sandboxing technology the program code received by the first receiving unit and obtain an execution result.

The determining unit is configured to determine according to values of preset parameters in the execution result and a set of preset determination rules whether the program code is malicious code where the determination rules include a threshold determination range for at least one of the preset parameters.

The first sending unit is configured to send the determination result obtained by the determining unit to the host computer.

Optionally the executing unit is specifically configured to execute the program code in a pre constructed first sandbox for simulating an environment of a virtual machine supervisor and obtain a security state report of the first sandbox after the program code is executed and or execute the program code in a pre constructed second sandbox for simulating an environment of a virtual machine and obtain a security state report of the second sandbox after the program code is executed.

Optionally the cluster antivirus device further includes a database including a blacklist where the blacklist is used to store an identifier of known malicious code and corresponding execution characteristics where optionally a whitelist in the database is used to store an identifier of known normal code and corresponding execution characteristics and a first updating unit configured to add the identifier of the program code and the corresponding execution characteristics to the blacklist in the database when the determining unit determines that the program code is malicious code.

Optionally to improve the detection effect the cluster antivirus device may further include a second updating unit configured to add the identifier of the program code and the corresponding execution characteristics to the whitelist in the database when the determining unit determines that the program code is not malicious code.

To timely update a local database of the host computer the cluster antivirus device further includes a second receiving unit configured to receive the identifier of the program code and the number of times that the identifier of the program code is detected within a preset period which are sent by the host computer a filtering unit configured to filter out a part of contents from the database according to the identifier of the program code and the number of times received by the second receiving unit and a predetermined filter rule in the cluster antivirus device where the filter rule includes a statistical indicator determination threshold and the value of the statistical indicator is determined according to the identifier of the program code and the number of times and a second sending unit configured to send the contents filtered out by the filtering unit to the host computer to update a local database.

The cluster antivirus device provided in this embodiment of the present invention is capable of using the performance advantage of a distributed computing system and comparing the execution characteristics of the program code sent by the host computer with the execution characteristics of known malicious code in an extended database to determine whether the program code is malicious code or executing the program code sent by the host computer by using the sandboxing technology and determining whether the program code sent by the host computer is malicious code according to the execution result. In this way the detection accuracy is improved.

Referring to this embodiment of the present invention provides a system for detecting malicious code including at least one host computer described in Embodiment 8. Each host computer is configured to capture an instruction in a virtual machine supervisor of the host computer where the instruction is generated in escape mode when a read write request generated during execution of program code in a virtual machine of the host computer is delivered to the virtual machine supervisor obtain execution characteristics of the program code according to the instruction and compare the obtained execution characteristics with pre stored execution characteristics of known malicious code and determine that the program code is malicious code when the obtained execution characteristics and the pre stored execution characteristics are the same.

The host computer is further configured to compare the obtained execution characteristics with execution characteristics of known malicious code in a blacklist in a local database and when the execution characteristics are different send the program code or the execution characteristics to the cluster antivirus device and receive a determination result returned by the cluster antivirus device about whether the program code is malicious code where the determination result is determined after the cluster antivirus device compares the characteristics with execution characteristics of known malicious code in a database of the cluster antivirus device or determined according to an execution result after the cluster antivirus device executes the program code by using the sandboxing technology.

Specifically when the comparison result indicates that the execution characteristics are different the host computer may compare the obtained execution characteristics with execution characteristics of known normal code in a whitelist in the local database for a second time if the comparison result indicates that the execution characteristics at the second time are the same the host computer determines that the program code is not malicious code and if the execution characteristics at this time are different the host computer sends the program code or the execution characteristics to the cluster antivirus device or when the first comparison result indicates that the execution characteristics are different the host computer may directly send the program code or the execution characteristics to the cluster antivirus device .

The cluster antivirus device is configured to receive the program code sent by the host computer execute the program code by using the sandboxing technology and obtain an execution result determine according to values of preset parameters in the execution result and a set of preset determination rules whether the program code is malicious code where the determination rules include a parameter value range for at least one of the preset parameters and send the determination result to the host computer .

For the process in which the cluster antivirus device executes the program code by using the sandboxing technology and obtains the execution result reference may be made to the description in Embodiments 6 and 9.

The system for detecting malicious code according to the embodiment of the present invention uses the performance advantage of a distributed computing system of the cluster antivirus device to improve accuracy of detecting malicious code in the host computer.

Persons of ordinary skill in the art may understand that all or a part of steps of the method according to the embodiments may be implemented by a program instructing relevant hardware. The program may be stored in a computer readable storage medium such as a read only memory ROM random access memory RAM a magnetic disk or a compact disc ROM CD ROM .

It will be apparent to persons skilled in the art that various modifications and variations can be made to the present invention without departing from the scope or spirit of the invention. In view of the foregoing it is intended that the present invention cover modifications and variations of this invention provided they fall within the scope of the following claims and their equivalents.

