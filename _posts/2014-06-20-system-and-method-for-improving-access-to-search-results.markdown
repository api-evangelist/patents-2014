---

title: System and method for improving access to search results
abstract: Aspects of the disclosure provide a system and method for prerendering of search result pages. A search engine may process search queries received from a client. The search engine may determine one or more search results in response to the search query. One or more of the search results may be associated with prerender instructions, such that when the search results are received by the client, the client prerenders the search results associated with the prerender instructions. Prerender instructions may be associated with the search results in various manners, including ranking the search results based on relevance, or ranking the search results based on the likelihood of selection. Metrics and analytical data may be collected from the client to improve the search result prerendering process.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483562&OS=09483562&RS=09483562
owner: Google Inc.
number: 09483562
owner_city: Mountain View
owner_country: US
publication_date: 20140620
---
The present application is a continuation of U.S. patent application Ser. No. 13 353 626 filed Jan. 19 2012 the disclosure of which is incorporated herein by reference.

The advent of the World Wide Web has placed more information at the fingertips of today s users than ever before. Various websites cater to nearly every need and interest providing access to reference information business and financial documents social networking and more. Widespread broadband Internet access provides faster access to these sites than ever before.

However as fast as current high speed Internet services are the act of browsing the web is not instantaneous. When a user selects a link on a page or enters a uniform resource locator URL in a text field there is a delay while data is requested from the host sent to the client and rendered in the browser. The user is typically idle while waiting for their requested site to load. While high speed Internet access may limit this delay to a few seconds even this short delay can add up to thousands of man hours of lost productivity each year.

Aspects of the disclosure provide a system and method for prerendering of search result pages. An Internet search engine may process search queries received from a client. The Internet search engine may determine one or more search results in response to the search query. One or more of the search results may be associated with prerender instructions such that when the search results are received by the client the client prerenders the search results associated with the prerender instructions. Prerender instructions may be associated with the search results in various manners including ranking the search results based on relevance or ranking the search results based on the likelihood of selection. Metrics and analytical data may be collected from the client to improve the search result prerendering process. For example statistics associated with whether or not a user selected a link that was associated with a prerender instruction may be captured to improve prerender predictions.

Metrics and analytical data may be captured via a process that requires the user to opt in to providing said metrics and analytical data. The system and method may provide privacy protections for the client data including for example anonymization of personally identifiable information aggregation of data filtering of sensitive information encryption hashing or filtering of sensitive information to remove personal attributes time limitations on storage of information and or limitations on data use or sharing. Data can be anonymized and aggregated such that individual client data is not revealed. A user may also be provided with an opportunity to opt in out to enable the collection and sharing of data.

Aspects of the disclosure describe a computer implemented method for prerendering using a search result page. The method may include determining using a processor at least one search result responsive to a search query generating a search result page comprising the at least one search result identifying at least one prerender candidate among the at least one search result the at least one prerender candidate indicating a search result that is likely to be selected embedding prerender instructions for the at least one prerender candidate in the search result page and providing the search result page to a client device that provided the search query. The at least one prerender candidate may be identified using at least one signal wherein the at least one signal is a frequency with which the search result is selected an amount of traffic flowing from the search engine to the search result a location of the client device or a size of one or more resources associated with the search result. The prerender instructions may be embedded within a hypertext markup language tag associated with the at least one search result. The prerender instructions may be provided to the client device via client side scripting. The method may further include receiving metrics from the client device indicating whether the prerender candidate was selected when displayed and using the metrics to identify future prerender candidates in response to subsequent search queries. The metrics may be at least one of whether a selected link was prerendered or a load time of the selected link. The method may further include embedding an experiment identifier in the search result page the experiment identifier corresponding to a particular method used to identify the at least one prerender candidate using one or more redirection operations associated with the search result page to identify the experiment identifier associated with a selection operation and whether the at least one prerender candidate was selected.

Aspects of the disclosure also describe a computer implemented method for prerendering using a search result page. The method may include sending a search query to a search engine receiving a set of search results responsive to the search query the set of search results comprising at least one prerender instruction indicating at least one of the search results is a candidate for prerendering identifying the at least one prerender instruction and prerendering the at least one search result associated with the at least one prerender instruction. The method may further include monitoring for a selection operation performed on a selected search result from the set of search results and swapping the at least one search result into an active browser instance if the selected search result is the at least one search result. The method may include storing metrics associated with a selection of a selected search result from the set of search result and transmitting the metrics to provide statistical data to improve selection of prerendering candidates in response to subsequent search queries. The metrics may be at least one of the selected search result whether the selected search result is the at least one search result and a page load time to access the selected search result. The method may further include executing the prerender instruction to insert a prerender tag into a hyperlink associated with at least one search result. The metrics may further include an experiment identifier embedded in the set of search results the experiment identifier indicating a methodology for choosing the at least one of the search results as a candidate for prerendering.

Aspects of the disclosure may provide a non transitory computer readable storage medium comprising instructions. When executed by a processor the instructions may perform a method including sending a search query to a search engine receiving a set of search results responsive to the search query the set of search results comprising at least one prerender instruction indicating at least one of the search results is a candidate for prerendering identifying the at least one prerender instruction and prerendering the at least one search result associated with the at least one prerender instruction. The instructions may include monitoring for a selection operation performed on a selected search result from the set of search results and swapping the at least one search result into an active browser instance if the selected search result is the at least one search result. The instructions may include storing metrics associated with a selection of a selected search result from the set of search result and transmitting the metrics to provide statistical data to improve selection of prerendering candidates in response to subsequent search queries. The metrics may be at least one of the selected search result whether the selected search result is the at least one search result and a page load time to access the selected search result. The metrics may further include an experiment identifier embedded in the set of search results the experiment identifier indicating a methodology for choosing the at least one of the search results as a candidate for prerendering.

Aspects of the disclosure may provide a processing system for prerendering using a search result page. The processing system may include a memory coupled to at least one processor and the at least one processor. The processor may be configured to determine at least one search result responsive to a search query generate the search result page the search result page comprising the at least one search result identify at least one prerender candidate among the at least one search result the at least one prerender candidate indicating a search result that is likely to be selected embed prerender instructions for the at least one prerender candidate in the search result page and provide the search result page to a client device that provided the search query. The at least one prerender candidate may be identified using at least one signal wherein the at least one signal is a frequency with which the search result is selected an amount of traffic flowing from the search engine to the search result a location of the client device or a size of one or more resources associated with the search result. The prerender instructions may be embedded within a hypertext markup language tag associated with the at least one search result. The prerender instructions may be provided to the client device via client side scripting. The processor may be further configured to receive metrics from the client device indicating whether the prerender candidate was selected when displayed and use the metrics to identify future prerender candidates in response to subsequent search queries. The metrics may be at least one of whether a selected link was prerendered or a load time of the selected link. The processor may be further configured to embed an experiment identifier in the search result page the experiment identifier corresponding to a particular method used to identify the at least one prerender candidate and use one or more redirection operations associated with the search result page to identify the experiment identifier associated with a selection operation and whether the at least one prerender candidate was selected.

The aspects features and advantages of the present disclosure will be appreciated when considered with reference to the following description of preferred embodiments and accompanying figures. The following description does not limit the disclosure rather the scope is defined by the appended claims and equivalents.

While certain processes in accordance with example embodiments are shown in the figures as occurring in a linear fashion this is not a requirement unless expressly stated herein. Different processes may be performed in a different order or concurrently.

The disclosure describes systems and methods for providing search results pages with prerender instructions. Aspects of the disclosure minimize the delay between a user s selection of a navigation event e.g. clicking on a search result hyperlink and display of the content associated with the navigation event by prerendering content associated with the navigation event prior to the user s selection of the event. For example the method and system may predict a likely next uniform resource locator during web browsing to preemptively request content from the network before the user selects the corresponding link thus minimizing the wait time when a user selects a hyperlink on a web page. Various methods for performing the prerendering operation configuring the prerendering operation and managing the prerendering operation are described. For the purposes of this application the term prerendering generally refers to the act of requesting resources e.g. any executable code scripting language files and or interactive objects necessary to load the content of a web address and loading the content in a web browser instance. Prerendering includes the process of rendering a page including interpreting scripts laying out the page and rendering it in an invisible browser instance.

When a user performs a search query in a browser using an Internet search engine the Internet search engine may flag one or more of the search results provided in response to the search query with prerender instructions. These prerender instructions may be embedded within the web page itself e.g. via hypertext markup language HTML tags in the page source or indicated to the browser in another manner such as via asynchronous JAVASCRIPT AJAX . Although various exemplary embodiments are discussed with respect to a web browser the term browser may be construed broadly to also include any application that fetches content using Internet addresses. For example the browser may be an application executing on a smartphone a web browser displaying an Internet search engine executing on a laptop or desktop computer a search toolbar integrated within a web browser a search application included in a computer operating system or the like.

High traffic sites such as Internet search engines may have unique problems with prerendering. For example if a search engine mislabels a search result for a popular search query as a good prerender candidate but users do not frequently choose that search result then the web server hosting the mislabeled search result will experience additional traffic without additional page views. This may result in wasted bandwidth for the hosting page and wasted system resources for the user s computer as the prerendered page is downloaded over the network and executed in a hidden browser instance. As such it is desirable to monitor system metrics for use in improving the selection of links to associate with prerendering operations. Aspects of the system and method may provide these metric monitoring functions using data provided by clients that opt in to voluntary data gathering for the purpose of improving the prerendering experience.

The client device may be a computing device as known in the art. For example the client device may be a laptop computer a desktop computer a netbook a rack mounted server a smartphone a cellular phone or any other device containing programmable hardware or software for executing instructions. The computing device may include a processor a memory and other components typically present in general purpose computers. The memory may store instructions and data that are accessible by the processor . The processor may execute the instructions and access the data to control the operations of the client device .

The processor may be any suitable processor such as various commercially available general purpose processors. Alternatively the processor may be a dedicated controller such as an application specific integrated circuit ASIC or a field programmable gate array FPGA .

The memory may be any type of tangible memory operative to store information accessible by the processor including a computer readable medium or other medium that stores data that may be read with the aid of an electronic device such as a hard drive memory card read only memory ROM random access memory RAM digital versatile disc DVD or other optical disks as well as other write capable and read only memories. The system and method may include different combinations of the foregoing whereby different portions of the instructions and data are stored on different types of media.

Although functionally illustrates the processor and memory as each being within a single block respectively it should be understood that the processor and memory may actually comprise multiple processors and memories that may or may not be stored within the same physical housing. Accordingly references to a processor computer or memory will be understood to include references to a collection of processors computers or memories that may or may not operate in parallel.

The instructions may be any set of instructions to be executed directly such as machine code or indirectly such as scripts by the processor . For example the instructions may be stored as computer code on a non transitory computer readable medium. In that regard the terms instructions and programs may be used interchangeably herein. The instructions may be stored in object code format for direct processing by the processor or in any other computer language including scripts or collections of independent source code modules that are interpreted on demand or compiled in advance. Functions methods and routines of the instructions are explained in more detail below see .

In order to facilitate the operations of the client device the instructions may comprise a browser . The browser provides an interface by which the client device may perform a search operation and receive search results such as for example a web browser rendering an Internet search engine landing page. The browser may function to render search results received in response to the search query in a web search results page . The browser may also operate to prerender a prerendered page to allow for instant navigation if the user selects a navigation operation associated with the prerendered page . The browser may also track metrics associated with the display and navigation operations performed by the browser . As described above any metrics gathered by the browser is maintained in an anonymous fashion with protections in place to maintain user privacy and anonymity. As described above the browser may be any application suitable for receiving search results and displaying said search results to the user. The browser may maintain multiple sets of content in various instances such as browser tabs. Prerendering may be performed by rendering the prerendered page in a browser instance that is invisible to the user and swapping the invisible browser instance to a visible browser instance upon selection of a navigation operation associated with the prerendered page .

Data may be retrieved stored or modified by the processor in accordance with the instructions. For instance although the architecture is not limited by any particular data structure the data may be stored in computer registers in a relational database as a table having a plurality of different fields and records Extensible Markup Language XML documents or flat files. The data may also be formatted in any computer readable format such as but not limited to binary values or Unicode. The data may comprise any information sufficient to identify the relevant information such as numbers descriptive text proprietary codes references to data stored in other areas of the same memory or different memories including other network locations or information that is used by a function to calculate the relevant data.

The data may store the web search results page the metrics and the prerendered page as described above. The web search results page and the prerendered page may be stored as rendered pages in browser instances associated with the browser . The metrics may be stored locally and periodically transmitted to the server or calculated and stored on the server directly.

The server may function perform search operations using a search query provided by the client device . The server may also embed one or more prerender tags within a search results web page provided to the client device . The server may identify candidate links within search results provided to the client device by multiple factors. For example the server may identify the most relevant link in a set of search results as the best candidate for prerendering. The server may also function to gather metrics such as the metrics provided by the client device in order to improve prerendering operations. For example the server may receive metrics regarding the amount of time saved by the user due to prerendering operations the hit and miss rate for prerendering operations e.g. how frequently the prerendered search result is selected from the list of search results or various other features.

The server may be configured similarly to the client device with a processor coupled to a memory . The memory may comprise a set of instructions and data to facilitate the operations of the server . The instructions may include a search engine and a prerender application . The search engine operates to provide search results to the client in response to a search query. For example the search engine may be an Internet search engine. The prerender application operates to identify search results from search results generated by the search engine as candidates for prerendering. The prerender application includes prerender instructions with the search results to create a set of search results with embedded instructions . The search results and search results with embedded instructions may be stored in the data . When received by the client device the client device processes the embedded instructions to identify which search results to prerender.

The prerender application may embed the instructions within the search results by adding one or more HTML tags to links associated with the prerender candidate search results. For example the HTML for a link to an example website example.com may be modified from example to example by the prerender application in response to the prerender application detecting that the search result associated with Wikipedia is a good candidate for prerendering.

The client device and the server may each be at separate nodes of a network and be operative to directly and indirectly communicate with other nodes of the network . For example the client device may comprise a mobile phone that is operative to communicate with the server via the network .

The network and the intervening nodes between the client device and the server may comprise various configurations and use various protocols including the Internet World Wide Web intranets virtual private networks local Ethernet networks private networks using communication protocols proprietary to one or more companies cellular and wireless networks e.g. Wi Fi instant messaging hypertext transfer protocol HTTP and simple mail transfer protocol SMTP and various combinations of the foregoing. It should be appreciated that a typical system may include a large number of connected computers. For example the functionality of the server may be spread across multiple nodes with separate nodes hosting the search engine and the prerender application .

Although certain advantages are obtained when information is transmitted or received as noted above other aspects of the system and method are not limited to any particular manner of transmission of information. For example in some aspects information may be sent via a medium such as an optical disk or portable drive. In other aspects the information may be transmitted in a non electronic format and manually entered into the system.

At stage the client determines a next navigation event within a web browser. The next navigation event may be identified via prerender instructions embedded within a search results page by the server . For example a search engine may embed a tag within a set of search results to indicate that a particular link associated with the most relevant result should be prerendered by the web browser. A method for embedding prerendering tags within a web page is described below see .

At stage the client requests the content associated with the navigation event identified at stage . The request may comprise a hypertext transfer protocol HTTP GET request a file transfer protocol FTP request or any other network data access request as known in the art. A first set of web content may be provided in response to a HTTP GET request which may then lead to additional HTTP GET requests in accordance with the first set of web content. For example a HTTP GET request may result in a base web page being sent to the web browser which may trigger other page loading operations such as additional GET requests. The base web page may have multiple embedded images which are then fetched and rendered using HTTP GET requests for each image. The prerendering process as described may request the full web page including associated scripts and then execute those scripts. In response to the request the web content associated with the navigation event is sent to the web browser. For example the server may send the content to the web browser. To return to the search engine example upon receiving a web page with an embedded prerender tag the client requests and renders the web page associated with the URL associated with the top search result in a hidden browser instance as identified by the search engine.

At stage the client renders content associated with the navigation event determined at stage . The content may be rendered in an alternate instance of the web browser that is hidden from the user. For example the content may be rendered by an alternate process or in a hidden web browser tab. In some aspects the client may render content associated with multiple navigation events. For example the navigation events may be associated with a priority value with higher or lower values associated with more likely navigation events. As such the client may render the top n most likely events depending upon the capabilities of the client see .

In some aspects the rendered content may include a redirection operation. An example of a redirection operation is when the act of loading a first page for instance www.a.com causes the browser to load a second page such as www.b.com. Redirection may occur in response to a HTML tag a JAVASCRIPT navigation command or the like. In the case a prerendered page requests a redirection operation said redirection operation would also occur in the alternate instance.

In some aspects a first redirection operation may lead to subsequent redirections. For example www.a.com may lead to www.b.com which leads to www.c.com. Aspects of the system and method may account for this fact such as by storing a history of redirection operations and prerendering the last page in a series in response to a first page being identified to prerender. In some aspects the method may short circuit redirection operations by not prerendering intermediate pages when the destination result page i.e. the page at the end of the redirection operations is known and only prerendering the final page in the series.

At stage the client may determine whether the user has selected the link identified at stage within a particular time period. For example the method may wait for 10 seconds 20 seconds 30 seconds one minute 5 minutes or any other time frame. In some aspects the time frame may be configurable within an options menu associated with the web browser. The time frame may also be specified by the server . For example the server may embed a timeout value within a prerender tag indicating the length of time the content associated with the tag should be held before being discarded. If the user has selected the link within the time period the method proceeds to stage . Otherwise the method proceeds to stage .

At stage the client discards the prerendered content. The prerendered content is allowed to expire in this manner in order to free up system resources associated with the prerender operation and prevent the user from being presented with stale data. In some aspects a different expiration period may be specified for different types of data. For example data that is likely to rapidly change such as breaking news articles stock quotes syndication feeds and the like is more likely to grow stale quickly and might be associated with a shorter expiration timer such as 10 seconds 20 seconds or one minute. Data that is less likely to change such as reference articles archives box scores and the like might be associated with a longer expiration timer such as an hour 6 hours 24 hours a week or the like. In some aspects the wait time is based on a page type. For example if the user is viewing a lengthy news article a longer wait time may be specified when prerendering a next page of the article to provide the user time to read the current page of the article before selecting the next page. In some aspects the wait time is determined by a time to live TTL parameter embedded within the page. In some aspects the wait time is hard coded within the browser. The method then ends after the prerendered content is discarded though in some aspects the method may repeat indefinitely as the user browses web content.

At stage the client swaps the alternate instance containing the prerendered content into the current user instance in response to the user selecting the navigation event determined at stage . In this manner the client displays the content associated with the navigation event instantly without a delay while the data is requested from and received from the host server. To return to the search results example if the user selects the most relevant result the associated page is already loaded in the alternate instance and thus is available instantly as soon as the user clicks the link. In some aspects the user may select the navigation event prior to the prerendering operation completing. In such cases the partially loaded page would be swapped into the current user instance. The partially loaded page would then continue to load in the current user instance as normal. The method then ends after making the prerendered content available to the user.

At stage the server identifies one or more links within a hosted web page. For example the server may generate a list of web sites in response to a query from the client . Each search result may be associated with a particular link on the page that is to be provided in response to the query.

At stage the server selects one or more links to prerender chosen from the links identified at stage . The links to prerender may be chosen by a variety of methods for a variety of purposes such as by examining a user navigation history an aggregate navigation history a most relevant link and the like. In some aspects the links are chosen by a search engine analyzing the links most frequently clicked in response to a particular query. For example the search engine may collect click through data indicating which links are clicked on in response to a particular query and select one or more links to prerender based upon the frequency with which the particular links are selected. To continue the search engine example the server might identify the top search result or the top n search results as optimal links to prerender. In some aspects the server may further identify a ranking of links to prerender with the most optimal link to prerender being ranked number 1 the next most optimal link being ranked number 2 and so on. The server may also identify a likelihood that each link will be selected rather than a rank. For example the server may indicate that a particular link has a 50 likelihood a 25 likelihood or a 80 likelihood of being selected by a user. Prerender operations performed by the client may elect to prerender links associated with a threshold level of likelihood for example such as at least 50 likelihood at least 80 likelihood or any other threshold value.

At stage the server embeds one or more prerender tags with the one or more links identified at stage . For example the server may include a hypertext markup language HTML tag for identifying the optimal link or links to prerender. As described above the prerender tag may also include a ranking value and a TTL value specifying a time to keep the prerender. To continue the search engine example the server may identify each search result with a prerender tag along with ranking the prerender order of the results by the relevance of the search result.

At stage the page with the embedded prerender tags is sent to the client that requested the page. The method then ends after sending the page.

At stage the server receives a prerender request from a computing device such as the client . In some aspects the prerender request may be identified using a scripting application programming interface API such as by the client indicating the content request is for a prerender operation via a JAVASCRIPT API transmitted with the content request. The prerender request may also be accompanied by a modified HTTP header indicating that the request is a prerender request. In some aspects the server is configured to receive an event notification from the client as provided by the API such as by registering for the event notification using an application executing on the server . In some aspects the server may elect to not send content in response to a prerender request such as in instances where the server is bandwidth constrained or otherwise does not wish to allow prerendering. Providing notification of the prerender request in this manner also allows for the server to opt out of processing the prerender request. For example the server may be bandwidth constrained and thus need to focus on hosting non prerendered content. In some aspects the server may also opt out by including a HTML metatag indicating as such or an entry in a robots.txt file hosted on the server to prevent prerendering of content by a search engine such as indicated in a list of search results.

At stage the server may send a partial web page with the certain content redacted. For example the server may not provide images associated with advertisement content in response to a prerender request as in many instances advertisement impressions are determined based upon the number of times the advertisement image is sent. A similar method may apply to advertisements provided in other manners such as via scripting or executable content. As an example the server might respond to a prerender request by providing a base web page. The base web page may result in the client initiating one or more additional HTTP GET requests for content identified by the base web page. The server may opt not to send content in response to HTTP GET requests for ad images identified within the base web page.

In some aspects the redacted version of the content may include a special HTTP error code associated with redacted images scripts and the like indicating to the receiving computing device that certain content has been redacted. In this manner the client may be informed that certain content has been redacted and will be supplied later rather than that the content is unavailable. As such the client may opt to indicate redacted content with a particular graphic or temporary display while the content loads upon access or the redacted content may appear blank.

In some cases the client may not be aware of how to properly display redacted content in which case the client may abort the prerender operation. Furthermore when the user accesses the content the client may notify the server that the prerendered page has been viewed. In response the server may send the redacted content to the client .

At stage the server receives confirmation that the prerender of the content was viewed by the user. As above the server may be notified of the viewing of the content via an API provided through the web browser. For example a script may communicate an event notification to the server . If the server is registered for such an event notification it may take appropriate action such as sending the redacted content to the client . By informing the server that the prerender content was viewed the server knows to send any redacted content and update the impression statistics associated with any advertisements.

At stage the server sends the content that was redacted at stage . The content can now be sent because the server has ensured that the user has accessed the content. For example the server may send images associated with advertisements scripting code or the like.

At stage the server updates the impression statistics associated with the content as sent at stage . In some aspects stages and occur simultaneously as the act of hosting the image sending an advertisement automatically updates the page impression statistics. In this manner the server maintains accurate reporting of website analytics data while also allowing the client to perform prerender operations.

Some web pages have embedded audio or video content that begins to play as soon as the page loads. In some implementations the prerender method and system as described herein can allow such content to begin playing before the user navigates to the content thus when the user begins viewing the page the content is already playing. Some web pages may include additional content that might not be suitable for prerendering such as pop up pages scripted programs downloads authentication prompts translation bars and the like. As such the prerender module may employ a method such as the method for managing these special cases.

At stage the client requests and receives prerender content from a server such as the server . As described above the request may be presented in or accompanied by an API call indicating to the server that the request is a prerender request. The page is prerendered based on a response received from the server. During the prerendering process the client monitors for several particular cases as described below. Although presented in a particular order these cases could be encountered in any order such as by identifying an embedded video prior to experiencing a cookie state change for example.

At stage the client determines whether the requested prerender content includes a cookie state change or another special case. For example if a user is accessing a banking web page if an account page is prerendered and then the user logs out of their account selecting the prerender link would incorrectly report data as if the user was still logged in. As such the prerender would be invalid as soon as the user has logged out. The client therefore monitors the state of any cookies associated with prerender content and may take appropriate action. Appropriate action may include attempting to properly propagate cookie state changes ignoring cookie state changes and continuing with the prerender operation or giving up and aborting the prerender operation. The client further determines if the prerender content includes a special case such as a pop up page a scripted application a download an authentication menu or a translation bar. If a cookie state change has occurred or the prerender page includes a special case the method proceeds to stage . Otherwise the method continues to stage .

At stage the client may abort the prerender operation. The client may abort the prerender operation because the cookie state change or special case identified at stage makes the data associated with the prerendered page stale or otherwise unviewable to the user. In some aspects the client may ignore the cookie state change. The method then ends.

As an alternate method of managing cookie data the client may track any cookie state change associated with the prerendered content and apply the state change when the prerendered content is accessed by the user. In some aspects the client may also monitor for conflicts in cookie state change and abort the prerendering operation in the event of a conflict. For example a cookie state change may occur after the prerender operation is complete thus causing a conflict. In such a case the prerendered version of the page could be discarded to avoid presenting incorrect page data to the user.

At stage if the prerender content does not contain a special case and has not had a cookie state change the client determines whether there is multimedia content on the page such as audio or video. For example the page may include an embedded video programmed with ADOBE FLASH HTML5 media or another type of embedded media. In such a situation it may be desirable to pause the multimedia until the user actually navigates to the page thus saving bandwidth and ensuring the user may view the entire multimedia file. If the page contains embedded multimedia the method proceeds to stage . Otherwise the method proceeds to stage .

At stage the client has determined that the content contains no multimedia content cookie state changes or special cases and thus the client prerenders the page. The prerendering process may be performed by receiving the page from the server and rendering the page in an application instance that is hidden from the user. Rendering the page generally relates to loading all of the data received from the server and executing any instructions contained therein as they would otherwise be executed when viewing the page in a non hidden application instance.

At stage the client has determined that the content contains multimedia content. Thus the client prerenders the content of the page other than the multimedia content and may pause playback of the multimedia content or defer the instantiation of a plug in associated with the content. For example the client might pause an embedded audio or video file after prerendering the rest of the page or a FLASH video might not execute until the prerender content is shown to the user.

At stage the client determines whether the user has accessed the prerendered content. If the user accesses the prerendered content the content is displayed as described above and the method proceeds to stage . If the user does not access the prerendered content for example if a prerender timer expires as described above with respect to then the method ends.

At stage the client sends notification that the user accessed the prerender to the server . As described above the notification may be sent using a scripted API from which the server is configured to receive event notifications. Providing notification in this manner allows for the management of website impressions by the server see .

At stage the client conducts a measurement of system capabilities. For example the client may query the operating system for the amount of free system memory the client may request the processor speed from the basic input output system BIOS or the client may conduct a network speed test to determine free bandwidth.

At stage the client determines a maximum number n prerenders based upon the capabilities as determined at stage . In some aspects the client may determine a set of system requirements to support a single prerender instance. For example a single prerender instance may require 10 percent processor utilization 16 megabytes of system memory at least 10 kilobytes second of network bandwidth or the like. The system requirements may also include multiple capabilities associated with different system components such as each of a minimum memory requirement a processor utilization and a network bandwidth. These system requirements may be determined by measuring the system utilization of a single prerender instance executing on the client .

For example the client may determine that each prerender operation is likely to require the system processor while prerendering. Such processor use may be bursty in that the entire processor is needed when the page is first loading with reduced processor need thereafter. In such cases the client may assign a lower processor priority to the prerender instance to ensure that prerendering of a page does not impact the user s browsing experience. In some aspects the client may monitor a system memory to determine a number of prerender instances. The client may determine an amount of memory used by a prerender instance and then compare this amount to the total available memory capacity. In some aspects the client may reserve a particular amount of system memory for prerendering and generate prerender instances until the reserved memory is filled. In some aspects a maximum network bandwidth of the system is determined and prerender instances are generated based on the percentage of available bandwidth. In some aspects the client may request a bandwidth measurement from a remote server to identify a local maximum bandwidth and use the measurement to determine a prerender setting.

At stage the client is configured to perform as many simultaneous prerenders as the system capabilities can support as determined at stage . In some instances the number of prerenders may be configurable by the user such as in an options menu.

At stage a search query is sent to the server . As described above the search query may be a text string a file an image a video or any other method of identifying content with the expectation of receiving search results.

At stage search results are received. The search results are responsive to the search query sent at stage . The search results may be presented to the user as a series of text links sorted by relevancy such as described above see .

At stage prerender instructions are identified for association with the search results received at stage . For example the prerender instructions may be included in HTML tags associated with each result or the prerender instructions may be transmitted to the client by other means such as by AJAX or another messaging protocol. For example prerender tags may be dynamically inserted by the client into HTML tags on the search result page based on prerender instructions received by the messaging protocol. The prerender instructions may identify multiple links as prerender candidates. In the event multiple prerender candidates are identified the prerender instructions may further indentify a ranking of the prerender candidates such that the results with the highest ranking are to be prerendered by the client. The client may identify a particular number n links to prerender based on the prerender instructions and available system resources of the client see . At stage the pages associated with the prerender instructions identified at stage are prerendered. The client may be aware of other data when determining whether to perform prerendering. For example the client may be aware that the user has selected a link and then pressed the back button in the web browser. As such it is unlikely the user will select the same result they just left. Therefore the client may instead prerender the next most likely prerender candidate search result instead of the search result that the client just left.

At stage a selection operation is performed on one of the search results. The selection operation does not necessarily need to be on a link prerendered by the client . For example the user may select a link other than the link identified by the prerender instructions. The user may wish to select a non prerendered link for a variety of reasons as the results provided in response to a search query may relate to a variety of subject matter and the user may not always wish to view the most commonly selected search result.

At stage metrics are stored relating to the selection of the search result. These metrics allow for the browser to track data identifying the accuracy of the prerender operation. For example in an optimal circumstance the user always selects the link associated with the prerender instruction. By collecting metrics associated with whether the user selected a prerendered link the system may determine whether the criteria for prerendering are appropriate in that they maximize selection of prerendered content while minimizing prerendering where the user is not likely to select the prerendered content. Mispredicted prerender operations may result in content being requested but not accessed. This results in wasted bandwidth and processing power. However in order to maximize the benefit to the user and provide a consistent user experience prerendering may be used on as many search results as practical. The stored metrics may be transmitted to the server for analysis and processing or the metrics may be stored on the local client and periodically uploaded. Metric data stored in this manner is anonymized to remove personal user data before upload. A method for capturing metrics associated with prerender operations is described further below see .

At stage a search query is received. The search query may include any criteria sufficient to institute a search operation such as a text string image or video. The search engine may identify one or more results that are relevant to the search query. These results may include hyperlinks to pages containing relevant content a brief description of the contents of the linked pages or any other data commonly provided in response to a search query.

At stage prerender candidates are determined among the search results. Prerender candidates may be determined based on the relevance of each result to the search query e.g. a more relevant result is more likely to be a prerender candidate based on statistical data of which link users typically select in response to the query or via other criteria. The search engine may also identify links as prerender candidates based on web analytics data such as the amount of traffic going to the search result whether the host of the search result has opted out of prerendering or the amount of content associated with the search result e.g. a file size of the search result page or the amount of data stored on the search result page and linked content . The amount of traffic that the search result is experiencing may be determined based on the number of users selecting the search result when provided the search result by the search engine. In some aspects the server may be aware of the network connection speed of the client and indicate an appropriate number of links to prerender based on the client connection speed.

The prerender candidates may be determined using one or more factors or signals. These may include but are not limited to relevancy to the search query frequency of selection by the user when included as a prerender candidate the amount of traffic associated with the search result the location of the user the user s connection speed whether the search result has opted out of the prerender process and the size of the web page associated with the search result. These factors or signals may be assigned weights and used to generate a score where the results associated with the highest scores are identified as prerender candidates and associated with prerender instructions. All search results with a score higher than a particular threshold may be identified as prerender candidates or only a set number of search results may be identified as prerender candidates.

At stage the prerender instructions are embedded within the search results page such as for example adding a prerender HTML tag to the appropriate search results. At stage these results with embedded prerender instructions are provided to the client .

Mispredicted selections result in wasted system resources for the page hosting the search result and for the client performing the prerendering. However coverage should also be high enough to provide a consistent user benefit and an optimal user experience. The browser may be aware when a prerendered page is swapped into a visible browser instance so it is possible to record the time between when the swap in occurred and the time when the page is fully loaded. This value indicates how much time was saved by the prerender operation.

The control group provides a baseline to track the amount of time between the selection of a search result and the display of the selected result in the browser. This result may be compared against the amount of time it takes for a prerendered page to be displayed in the browser to determine the overall benefit to users performing the prerendering operation. By determining the amount of time saved by enabling prerendering operations for various links links that save an optimal amount of time may be selected for prerendering. Links that frequently generate a false positive or otherwise sub optimal prerender performance may be specifically identified as bad candidates for prerendering. In this manner the method provides metrics that may be used to fine tune the prerendering operation to ensure maximum accuracy and coverage.

At stage the client receives a set of search results along with a set of prerender instructions associated with those search results. If the client is a test client then the search results associated with the prerender instructions may be prerendered in a hidden browser instance. If the client is a control client then the search results may not be prerendered. The test clients may further be divided into sub groups. For example each of the test clients may be included in a sub group numbered 1 through 9. These sub groups may employ different prerender techniques e.g. different search result selection methods different thresholds for prerendering to determine performance benefits associated with each prerender technique. A particular test identifier may be specified to the client in an address of the search results page such as by appending a link prerender experiment LPE term to the address of the search results page. The LPE term may be associated with a value such as 1 through 9 for the particular prerender experiment with which the provided search results are associated. The client may track the LPE term when storing metrics to improve the prerender process.

At stage user interactions with the client are monitored for a selection of a particular search result such as via a mouse click touch screen event or keyboard press on a particular result.

At stage any redirection identifiers associated with the selected result are identified. Search engines frequently use redirection when displaying search results a hyperlink in a search results page may link to a search engine redirect page which points to the actual content being prerendered. When a page with a redirection operation is selected using a control client the method may identify the redirection page as the result instead of the result to which the redirection page redirects. The target address of the redirection page may be specified within the prerender instructions to ensure that the metrics properly relate to the load time of the actual destination page rather than the redirection page. In this manner the client can know when such a redirection happens on a search result page and thus maintain a record for the address in the search result that would have been prerendered and thus correctly record the page load time of the actual destination page.

Where the test clients are separated into sub groups for experimental purposes redirection identifiers may be utilized to track the results of the experiment. For example a set of search results may be associated with a given set of prerender instructions and a given test identifier e.g. specifying a particular algorithm for choosing links to prerender . When the user selects one of the presented links the redirection link associated with the selected link may indicate the experiment sub group e.g. 1 through 9 the selected link the search query and whether the selected link was prerendered.

At stage the load time of the selected result page is measured. This load time relates to the time from when the user selects the search result to the time the search result is fully loaded in the browser. In a control client this load time includes the acts of requesting the content associated with the search result over the network from a server hosting the content and rendering that content in the browser. In the test client the load time includes the time it takes to request any content not received during the prerender operation and display that content in the browser. Typically the load time associated with a test client should be less than the time associated with a control client since the test client gets a head start on the network content request part of the transaction. Comparison of the load time for test clients and control clients gives a broad picture of how much time is saved for users by prerendering.

At stage the search result selection whether the search result selection was prerendered the LPE number and the load time of the search result selection are stored as metrics. These metrics may provide data that indicates the accuracy of prerender instructions e.g. whether the prerendered search result was selected and the amount of time saved by the prerender operations e.g. the difference between load times in the control clients and test clients . The metrics may be uploaded to the server immediately for analysis or stored on the client for upload to the server periodically. The server may perform automatic processing on the metrics to identify particular results to prerender such as removing prerender instructions from search results that have a low prerender accuracy.

The stages of the illustrated methods are not intended to be limiting. The functionality of the methods can exist in a fewer or greater number of stages than what is shown and even with the depicted methods the particular order of events may be different from what is shown in the figures.

The systems and methods described herein advantageously provide for an improved method and system for prerendering of search result pages. By embedding prerender instructions within search result pages the user experience may be improved by reducing wait times for search results the user is likely to select. A search engine is well suited for providing prerender instructions in this manner as it may take into account variables such as site traffic result relevance the particular search query historical navigation data and other metrics to provide prerender instructions that maximize coverage and accuracy and minimize false positives and wasted bandwidth. The search engine may also communicate with client devices that gather metrics used for improving the prerender experience.

As these and other variations and combinations of the features discussed above can be utilized without departing from the disclosure as defined by the claims the foregoing description of the embodiments should be taken by way of illustration rather than by way of limitation of the disclosure as defined by the claims. It will also be understood that the provision of examples of the disclosure as well as clauses phrased as such as e.g. including and the like should not be interpreted as limiting the disclosure to the specific examples rather the examples are intended to illustrate only some of many possible embodiments.

