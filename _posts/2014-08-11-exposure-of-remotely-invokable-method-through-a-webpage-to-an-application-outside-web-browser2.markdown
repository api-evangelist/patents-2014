---

title: Exposure of remotely invokable method through a webpage to an application outside web browser
abstract: Web browsing environments are commonly used to facilitate user interaction with data over the Internet. A web browser is a tool used to view and interact with a webpage. A webpage may interface with a web service to provide remote functionality that the webpage does not locally provide. An effective method for specifying and consuming remote functionality that an application invokes outside of the web browser is disclosed herein. A webpage exposes remote functionality (e.g., web service) that a web browser and/or browser extensions may discover through browsing the webpage. A browser extension associated with an application determines whether the application is compatible with the remote functionality. Once a compatible application is determined, it may be executed so as to connect to and invoke the remote functionality outside of the web browser. The application may provide a more robust experience with the remote functionality compared to the web browsing environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09552240&OS=09552240&RS=09552240
owner: Microsoft Technology Licensing, LLC
number: 09552240
owner_city: Redmond
owner_country: US
publication_date: 20140811
---
This application claims priority to and is a continuation of U.S. patent application Ser. No. 13 669 141 filed on Nov. 5 2012 now issued U.S. Pat. No. 8 806 515 titled EXPOSURE OF REMOTELY INVOKABLE METHOD THROUGH A WEBPAGE TO AN APPLICATION OUTSIDE WEB BROWSER which is a divisional of U.S. patent application Ser. No. 12 199 814 filed on Aug. 28 2008 now issued U.S. Pat. No. 8 316 387 titled EXPOSURE OF REMOTELY INVOKABLE METHOD THROUGH A WEBPAGE TO AN APPLICATION OUTSIDE WEB BROWSER at least some of which may be incorporated herein.

A web browsing environment enables users to share and view information over the Internet. A web browser is a tool that provides a user interface and functionality e.g. searching displaying etc. for interacting with information over the Internet e.g. webpage . Much advancement such as web services and browser extensions has been made to provide a more immersive user experience when interacting with information within a web browsing environment. A drawback to interacting with information within a web browsing environment often comprises limitations to privacy configurability and overall user functionality. In contrast a desktop environment facilitates applications that may have a more enhanced user interface configurability user functionality and or security than a web browsing environment.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

As provided herein a remote functionality is exposed through a webpage but can be invoked by an application outside of the webpage. This allows additional features e.g. improved security performance customization etc. that may provide an enriched a user experience to be made selectively available to a user where such features may not be available through a web browsing environment alone . An application may invoke the remote functionality within a desktop environment for example.

A webpage may expose remote functionality by specifying a web service a remotely invokable function a remote file etc. The webpage may specify the remote functionality within an HTML file e.g. HTML header tag HTML body tag etc. associated with the webpage. For example the webpage may specify information comprising a web service requirements for invoking the web service compatible applications capable of invoking the web service the location of the web service and or additional security or configuration parameters needed for the interaction with the web service. This allows a webpage to expose data and or functionality that are located remotely from the webpage.

A web browser is merely one tool that may be used to discover exposed remote functionality. Browser extensions are another tool that may be used to discover remote functionality determine a compatible application and or execute the compatible application to invoke the remote functionality. When a user browses a webpage with a web browser the web browser and or browser extensions may identify the exposed remote functionality within the webpage. When one or more remote functionalities are identified a browser extension may determine whether an application associated with the browser extension is compatible with the remote functionality e.g. the application is able to invoke the remote functionality outside of the web browser . A notification comprising the remote functionality and or compatible applications may then be presented to a user.

The application e.g. a browser extension desktop application executing outside of the web browser a locally installed proxy to another web service etc. is invoked based upon a user confirmation that the application is to be invoked. The application is invoked to connect to the remote functionality and consume the data provided by the remote functionality. This allows the user the ability to interact with the data from the remote functionality through the application where the application may provide a richer user experience and more control than interacting with the remote functionality through the webpage.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

Web browsers are commonly used to search view and interact with information available over the Internet. A web browser may receive and display information comprised within a webpage. The webpage may implement web services to provide additional functionality that is located remotely to the webpage. For example a news webpage may provide data and or functionality that are local to the news webpage e.g. current news previous articles sports scores etc. . The news webpage may also provide data and or functionality that are not local to the news webpage such as a remote weather search functionality. When a user inputs a zip code into the news webpage the zip code and or a weather search request may be sent to a weather web service located remotely to the news webpage. The weather web service executes the weather search request and sends a result e.g. the current weather corresponding to the zip code to the news webpage to display for the user. Techniques for including data from other services in a webpage are often referred to as mashups .

Much advancement has been made to facilitate and enrich user interaction within a web environment. Web browsers may display up to date information that get updated in real time. Users may upload information and data files to share with other users. The web browser may allow a user to interact with the information comprised within the webpage e.g. execute a web application . Many web browsers host browser extensions that provide additional functionality that the web browser may not provide e.g. a music player file viewer video player etc. . However only functionality explicitly programmed into web pages is available to end users. There is no discovery mechanism for the remote functionality e.g. a web service exposed through the webpage that would allow browser extensions or outside applications to interact independently with the data in a way not provided by the webpage creator.

A drawback to using a web environment for facilitating user interaction with information over the Internet is the limited ability to provide a rich user experience within the web browser. Web browsers may comprise various design technical and or security restraints. For example as security features are enabled within a web browser functionality may be disabled to accommodate the security features. The disabled functionality may have provided a more interactive rich and immersive user experience of the data and or functionality.

As an alternative to a web browsing environment a desktop environment e.g. operating system environment may provide a more robust user experience than a web browsing environment. Desktop applications may provide a rich user interface that is easily customizable. Desktop applications may provide a high level of security without restraining functionality provided to a user. Many desktop applications integrate with a remote data provider e.g. e mail server online help etc. but may be limited to a specific configuration for connecting to the remote data provider.

The term application configured to execute outside a web browser as used herein is intended to encompass applications that execute application functionality that is not explicitly programmed into a webpage and or web browser e.g. remote functionality from a web service that is invoked outside of a web browser . The application may execute inside and or outside the web browser process. Examples of web browser functionality are interpreting HTML executing embedded scripts invoking controls etc. An example of application functionality not programmed into a webpage and or web browser is a browser extension or standalone application exposing its own user interface and communicating directly with a web service that provides remote functionality.

As provided herein data resident behind a webpage can be connected to an application outside of the web browser. The data behind a webpage may be a data file e.g. an XML configuration file and or a remotely invokable method e.g. functionality that may be invoked through a web service functionality that is not programmed into the webpage etc. .

A web browser may be used to facilitate the discovery of a remotely invokable method that a webpage exposes. The web browser may comprise one or more browser extensions that are associated with an application. When a user browses a webpage with the web browser the web browser may request the webpage from a web server. The web server may respond by transmitting an HTML file representing the webpage to the web browser. The transmitted HTML file may specify a remotely invokable method that an application e.g. browser extension or desktop application may execute outside of the web browser. The webpage may expose additional information such as for example the location of the remotely invokable method compatible applications input requirements for invoking the remotely invokable method etc.

The specification of the remotely invokable method may be within an HTML header tag an HTML body tag and or any other appropriate location within the HTML file. It may be appreciated that the specification is not limited to a location within an HTML file but may be located within a programming language file an XML file or any other location. A single webpage may specify multiple remotely invokable methods representing different ways of accessing the data as appropriate. RSS services are one example of a service embedded into the HTML of a webpage. Upon browsing to a webpage with embedded RSS services data for example the RSS services data can connect to a browser feed functionality that can pass the data to a desktop service outside of the browser.

Once the HTML file is received the web browser and or a browser extension identify the remotely invokable method. The browser extensions make a determination as to whether the associated application is compatible with the remotely invokable method. An application may be compatible if the application is able to invoke e.g. execute and consume the result of the remotely invokable method. To accurately determine compatibility the webpage may specify additional information regarding the remotely invokable method. The webpage may specify a compatible application list a description of functionality the remotely invokable method provides and or any other information that may be used in determining application compatibility.

Once an application compatibility is determined e.g. a list of compatible applications is complied a notification may be presented to a user. The notification may comprise the identified remotely invokable method and or at least one compatible application. If the user confirms an application is to be invoked then the application is executed e.g. invoked to invoke the remotely invokable method and provide a result of the invocation of the remotely invokable method. The application may invoke the remotely invokable method by sending a request with input data to the remotely invokable method for execution. If the remotely invokable method is comprised within a web service then the application may send a request for the web service to execute the remotely invokable method and return the result of the execution. The remotely invokable method may be invoked one or more times depending on the application functionality. The remotely invokable method reference may be stored for later use. The method may be invoked periodically. If the webpage exposes multiple remotely invokable methods the application may invoke one or more remotely invokable methods in any order. The result of the invocation s may comprise a control image text file data stream set of executable instructions user interface etc.

Connecting data behind a webpage to an application allows the remote functionality to reside behind the web page e.g. independent of the webpage and or web browsing environment without being explicitly programmed into the webpage. The application may execute outside the browser e.g. inside or outside the web browser process wherein the application provides the remote functionality that is not explicitly programmed into the webpage.

The ability to expose remote functionality residing behind the webpage relieves a webpage creator from providing all possible functionality directly on the webpage. Users that are interested in a special functionality e.g. complex search queries may invoke the special functionality through applications installed on the user s machine. The ability to interact with the remote data through a chosen application gives more power to an end user. End users have the choice to use applications that are best suited for the user s operating environment performance level and or user interface design. Because the application can connect automatically to the remote functionality residing behind the webpage users may use familiar web searching browsing metaphors to find the data then seamlessly effortlessly switch to an application of the user s choice for a richer data interaction.

An application that executes within a desktop environment may provide a more secure environment for interacting with the result from the invocation of a remotely invokable method because the received data may not comprise executable code. The application code which is assumed to be secure is executed on the client machine but the remote functionality is executed at a remote source e.g. web service host server . This mitigates security issues arising from executing code from an untrusted webpage through a web browser and or web application.

Executing remote functionality through an application configured to execute within a desktop environment may provide a rich user interface high performance easy customization and or high level of security. The application may provide more control over how the user interacts with the remote functionality in comparison to a web browsing environment. The user may use the application as a comprehensive tool to interact and invoke multiple remotely invokable methods from one or more web services.

One embodiment of exposing a remotely invokable method through a webpage to an application outside a web browser is illustrated by an exemplary method in . The method may be performed on a server machine e.g. web server by transmitting HTML to a client machine e.g. web browser . At the method begins. At a webpage specifying at least one remotely invokable method invokable by at least one application configured to execute outside a web browser is transmitted to the web browser. The webpage may specify the remotely invokable method by specifying a web service a webpage address a server that comprises the remotely invokable method and or any other identification of a remotely invokable method. A webpage may specify multiple remotely invokable methods. For example a photo album webpage may specify a photo album web service that comprises an add photo remove photo search photos and share photos methods.

A webpage may specify the remotely invokable method within an HTML file an HTML header tag an HTML body tag a programming language file e.g. code behind a control event and or a XML file. The webpage may specify additional information regarding the remotely invokable method that may provide information used in determining if an application is compatible with the remotely invokable method. For example the webpage may specify a compatible application list a communication protocol and or an interface exposed by the remotely invokable method the actual type of data provided by the remotely invokable method and or any other information that may be used in determining whether an application compatibility. The specified remotely invokable method and or additional information may be consumed e.g. identified interpreted etc. by a web browser and or browser extensions. The specified remotely invokable method may also be invoked e.g. executed by an application.

An example of the method is where a photo viewing application is installed by a user onto a user machine e.g. client machine . During installation a photo viewing browser extension is incorporated into a web browser on the user machine. When the user browses with the web browser to a photo album webpage a request is sent by the web browser to a server hosting the photo album webpage. The server responds with an HTML file corresponding to the photo album webpage. The HTML file comprises an HTML header tag that specifies a photo album web service and a compatible application list. When the web browser receives the HTML file the specified photo album web service is identified and the photo viewing browser extension makes a determination whether the photo viewing application is compatible with the specified photo album web service e.g. the photo viewing application is specified within the compatible application list . If the photo album application is compatible then the photo album application is invoked. The user is able to invoke through the photo album application the remote functionality of the specified album web service.

In an alternative example the webpage may specify the photo album web service and functionality that the photo album web service provides e.g. photo management functionality add photo method remove photo method etc. . The photo viewing browser extension makes a determination whether the photo viewing application is compatible with the specified photo album web service based upon the ability of the photo viewing application to invoke the specified functionality and consume the result of the invocation.

One embodiment of invoking outside a web browser a remotely invokable method through an application is illustrated by an exemplary method in . At the method begins. At a webpage to be displayed through a web browser is received. A web browser may receive the webpage e.g. an HTML file representing the webpage in response to an HTTP request to a web server for the webpage. The web server may respond by sending an HTML file representing the webpage to the web browser.

At a remotely invokable method associated with the webpage is identified. The web browser a browser extension and or any other web environment component may perform the identification. For example when an HTML file is received the web browser may search within the HTML file to identify a specified e.g. exposed remotely invokable method. The web browser may search with the HTML file for a web service webpage address server address and or any other specification of a remotely invokable method.

At upon identifying one or more remotely invokable methods associated with the webpage a determination is made as to whether an application is compatible with the remotely invokable method. The web browser browser extensions and or any other web environment components may perform the determination. An example of determining compatibility is where the web page requests browser extensions to determine if the application associated with the browser extension is compatible with the remotely invokable method based upon information e.g. compatible application list functionality of the remotely invokable method etc. specified by the webpage. Another example of determining compatibility is where one or more browser extensions identify the remotely invokable method. The browser extensions without a request form the webpage make a determination whether the application associated with a browser extension is compatible based upon the information specified by the webpage.

At upon determining an application is compatible with the remotely invokable method the application is invoked e.g. the application may execute inside or outside of the web browser process but provides functionality outside of the web browser functionality based upon the remotely invokable method . The web browser browser extension and or any other component many invoke the application. Once the application is invoked the application invokes outside of the web browser the remotely invokable method and provides a result of the invocation of the remotely invokable method.

The application that is to be invoked may be selected based upon user confirmation. A user may be presented with a notification comprising the remotely invokable method and or at least one application compatible with the remotely invokable method. The notification may be presented as a menu within the web browser as a control rendered within the webpage as a user interface outside of the web browser and or as any other manifestation of a notification. The user may confirm an application that is to be invoked through to notification.

Once the application is invoked the application may send a function invocation request e.g. a command requesting the execution of the remotely invokable method and a result of the execution and or input data e.g. input information consumed by the remotely invokable method during execution . In one example an application may open a communication channel e.g. bi directional data channel with a remotely invokable method. Upon receiving an invocation request the remotely invokable function processes e.g. executes functionality the invocation request. The remotely invokable function sends a result e.g. output of the executed functionality to the application wherein the result is provided outside of the web browser e.g. the result is a product of some functionality provided outside of the functionality provided by a web browser .

The application may retain the communication channel and or make further invocation requests to the remotely invokable function to provide the user with a seamless user experience with the data provided by the remotely invokable function. For example a photo album desktop application during execution may make multiple calls allowing a user to execute operations at different times to add photos remove photos and share photos.

The web browser comprises a browser extensions list . The browser extensions list comprises browser extensions which may be associated with applications e.g. the application configured to execute remote functionality outside of the web browser . The web browser is configured to receive a webpage e.g. HTML file and present the webpage within the web browser . The web browser receives an HTML file that represents the webpage . The HTML file specifies the web service .

The system comprises a browser extension component and an application execution component . The browser extension component is configured to perform an identification of one or more remotely invokable methods e.g. the web service exposed through a webpage e.g. the webpage . The browser extension component performs the identification of the web service by searching the HTML file for a specification of a remotely invokable method e.g. a web service a data file etc. .

The browser extension component is further configured to perform a determination of an application compatibility for the web service . Upon identifying the web service the browser extension component performs the determination of the application compatibility. An example of determining the application compatibility is where the browser extension component sends a request to the browser extensions within the browser extensions list . The request may comprise information regarding the web service e.g. compatible application list functionality of the web service etc. and an instruction for the browser extensions to make a determination as to whether the application associated with the browser extension is able to invoke the web service and provide a result from the web service .

Once the application compatibility is created e.g. a list of applications compatible with the web service then the application execution component presents a notification of the application compatibility. The application execution component may be configured to present the notification outside of the web browser within the web browser and or rendered within the webpage. A user through the notification may select an application to be invoked based. Upon receiving the application that is selected to be executed the application execution component invokes e.g. executes the application . The application execution component may send information regarding the web service to the application . The application execution component and or the application may create a communication channel outside of the web browser between the application and a source of the web service .

The application may invoke functionality e.g. remotely invokable methods of the web service . The application may send requests and or input data to the web service and the web service may send results to the application through the communication channel . The functionality provided by the web service through the application may be interpreted as an application executing outside of a web browser. The application may provide the user with a rich user interface a secure environment and a set of highly customizable features for interacting with the remote functionality e.g. result from the web service . In contrast the user may interact with the remote functionality through the webpage which may provide a limited user experience.

When the web browser browses to the photo sharing webpage a request may be sent by the web browser to a server hosting the photo sharing webpage . The server may respond by sending an HTML file that represents the webpage . The HTML file specifies a photo album web service that provides remote functionality e.g. a set of remotely invokable methods . Upon receiving the HTML file the web browser identifies the photo album web service specified within the HTML file . The web browser requests the photo album viewer extension to make a determination whether the photo album viewer is compatible with the photo album web service .

The photo album viewer extension makes the determination that the photo album viewer is compatible with the photo album web service . The photo album viewer extension may for example make the determination by determining if the photo album viewer is able to invoke and provide the result of the photo album web service . Another example of making the determination is where the photo album viewer extension compares the photo album viewer with a compatible application list. Yet another way of determining compatibility is by receiving information that a majority of files in a file collection are in fact photos.

Upon determining the photo album viewer is compatible with the photo album web service the photo album viewer extension performs an invocation of the photo album viewer . The photo album viewer invokes outside of the web browser the photo album web service . The photo album web service may be invoked by the creation of the communication channel . It may be appreciated that a remotely invokable method e.g. web service may be invoked without the creation of a communication channel.

Invoking the photo album web service outside of the web browser provides the ability for a desktop application e.g. photo album viewer to provide functionality e.g. full screen slide show that the photo sharing webpage and or the web browser do not natively provide e.g. functionality not explicitly programmed into the webpage and or web browser .

The invocation by the photo album viewer may comprise a request to the photo album web service located at a remote source e.g. a web service host server to execute one or more remotely invokable methods . The photo album web service sends a result of the invocation e.g. output of the executed remotely invokable methods to the photo album viewer . A user by interacting with the photo album viewer is able to interact with the remote functionality of the photo album web service . For example the user may use the photo album viewer to get share and update photos by invoking the photo album web service .

Example illustrates the discovery of remote functionality by browsing a webpage with a web browser. The webpage exposes the remote functionality that may be invoked outside of the web browser by an application. A notification may be presented wherein the user has the ability to select a desired application to invoke the remote functionality. The desired application may provide a rich user interface to the remote functionality that the web browser may not provide.

The web browser comprises the bank extension . A user may use the web browser to browse to a merchant webpage . The user may select items e.g. shirt pants socks to purchase from the merchant webpage by interacting through the web browser . The user has the option to invoke a proceed to check out button that may request the user to input personal bank information for the merchant to use in completing the transaction. The user may not trust the merchant webpage to a level where the user is willing to input personal bank information directly through the web browser into the merchant webpage .

Alternatively the user may circumvent inputting personal information into the merchant webpage . If a webpage exposes a web service e.g. remotely invokable methods that provides additional functionality e.g. merchant account information transaction details information etc. for completing a transaction then the user may have the ability to complete the transaction through a trusted application that may execute within a desktop environment of the user s machine. The trusted application uses the exposed information to complete the transaction by connecting a merchant bank server and a user bank server. The connection may allow the user bank server to provide a payment authorization and the merchant bank server to provide a confirmation wherein the transaction is completed outside of a web browsing environment.

For example the merchant webpage comprises an HTML file . The HTML file exposes remote functionality by specifying the merchant web service . The merchant web service may provide functionality such as merchant account information methods transaction details information methods transaction confirmation methods etc. When the web browser receives the HTML file and identifies the merchant web service the bank extension makes a determination that the bank application is compatible with the merchant web service e.g. the bank application is able to invoke the merchant web service . The bank application is invoked. The bank application provides the user with an interface in which the user may complete the purchase transaction outside of the web browser . The user may input or load a configuration comprising connection information for the bank web service .

Upon invoking the bank application the bank application may request e.g. invoke from the merchant web service information regarding the merchant account transaction details and or any other information relevant to completing the purchase transaction. Once the user approves the transaction within the bank application the bank application may invoke the bank web service by sending a payment authorization to the bank web service . The payment authorization may comprise the merchant bank account information transaction details and or information regarding the merchant web service . Using the information within the payment authorization the bank web service may establish the data connection outside of the web browser between the bank web service and the merchant web service . The bank web service may invoke functionality e.g. web service remotely invokable method etc. within the merchant web service or send data to the merchant web service over the data connection . The merchant web service may send data and or invoke functionality from the bank web service e.g. invoke the bank web service functionality the bank application e.g. send confirmation data and or the web browser e.g. send confirmation HTML . The bank application facilitates data and functionality execution between the merchant web service and the bank web service by connecting two web services together.

Another example of connecting two web services to complete a transaction is where the user browses the merchant webpage . Upon the web browser receiving the HTML file and identifying the merchant web service the bank extension determines the bank application is compatible with the merchant web service . The bank application is invoked. The user may enter bank information into the bank application and confirm the transaction e.g. transfer of payment through the bank application . The bank application invokes e.g. sends the payment authorization the bank web service to authorize payment. The bank web service establishes the data connection outside of the web browser between the bank web service and the merchant web service . Upon determining the payment is to be authorized the bank web service sends outside of the web browser an execute transfer signal to the merchant web service . The merchant web service completes the transaction and sends the confirmation data to the bank application and the web browser .

Another example of connecting two web services is to create recurring transaction requests. The merchant webpage may represent a service that requires periodic payments e.g. a webpage of a utility company . A user may issue through the bank application the payment authorization for the recurring payments from the bank web service to the merchant web service . The authorization will be in force even after the bank application is closed. In effect it creates a custom connection between the bank web service and the merchant web service wherein the bank web service periodically gets the latest invoice from the merchant web service and delivers a payment on the user s behalf. A similar connection could be created by inputting merchant data into a bank webpage or bank data into a merchant webpage . The advantage of using bank application is that the correct data is accessed and transmitted electronically thus simplifying the interaction at the user interface level and avoiding any mistakes associated with mistyping URL strings and or bank account numbers.

The desktop e mail application may retrieve and configure an Internet mail account accessible outside of the web browser from the desktop e mail application . Once the desktop e mail application is configured with the Internet mail configuration data e.g. remote XML file the desktop e mail application may provide a user interface for the user to interact with remote e mail functionality of the Internet mail account without using the web browser .

In example the web browser receives an HTML file in response to a user browsing the Internet mail website . The web browser identifies the Internet mail configuration data specified within the HTML file . A desktop e mail extension determines the desktop e mail application is compatible with the Internet mail configuration data e.g. the desktop e mail application is able to configure the Internet mail account from the Internet mail configuration data . The desktop e mail application is invoked and performs a request outside of the web browser for the Internet mail configuration data from the Internet mail server . The desktop e mail application configures the Internet mail account based upon the Internet mail configuration data .

Upon configuration the desktop e mail application is able to invoke an e mail functionality from the Internet mail server . It may be appreciated that the e mail functionality may be invoked from a different source based upon the Internet mail configuration data and is not limited to the source of the Internet mail configuration data . A user is able to access the e mail functionality outside of the web browser from the desktop e mail application . The desktop e mail application may provide a rich user interface with comprehensive security and configuration options whereas the Internet mail website provides a limited user interface for interacting with the e mail functionality.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method such as the exemplary method of for example. In another such embodiment the processor executable instructions may be configured to implement a system such as the exemplary system of for example. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

