---

title: Providing configurable workflow capabilities
abstract: Techniques are described for providing clients with access to functionality for creating, configuring and executing defined workflows that manipulate source data in defined manners, such as under the control of a configurable workflow service that is available to multiple remote clients over one or more public networks. A defined workflow for a client may, for example, include multiple interconnected workflow components that are specified by the client and that each are configured to perform one or more types of data manipulation operations on a specified type of input data. The configurable workflow service may further execute the defined workflow at one or more times and in one or more manners, such as in some situations by provisioning multiple computing nodes provided by the configurable workflow service to each implement at least one of the workflow components for the defined workflow.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09184988&OS=09184988&RS=09184988
owner: Amazon Technologies, Inc.
number: 09184988
owner_city: Reno
owner_country: US
publication_date: 20140909
---
As the amount of data that is generated and used by software programs has grown the complexity of managing and analyzing such data has also increased in at least some situations. In addition as software programs increasingly execute in online and other networked environments the data to manage and analyze is increasingly accessible in disparate locations and manners which may increase the complexity of managing and analyzing such data. Thus various problems exist in managing and analyzing data that is generated and used by software programs.

Techniques are described for providing clients with access to functionality for creating configuring and executing defined workflows that manipulate source data in defined manners such as under the control of a configurable workflow service that is available to multiple remote clients. In at least some embodiments a remote client may interact with a configurable workflow service over one or more public networks in order to create and configure a defined workflow that is provided by the configurable workflow service for use by the client such a defined workflow may for example include multiple interconnected workflow components that each are configured to perform one or more specified types of data manipulation operations on a specified type of input data. After a client has configured such a defined workflow the configurable workflow service may further execute the defined workflow at one or more times and in one or more manners such as in some situations by provisioning multiple computing nodes provided by the configurable workflow service to each implement at least one of the workflow components for the defined workflow and by retrieving defined types of source data and providing it to workflow components in defined manners. Thus in at least some embodiments some or all of the described techniques are automatically performed by embodiments of a configurable workflow service such as may be implemented by one or more software modules executing on one or more configured computing systems as described in greater detail below.

As noted above a defined workflow may include multiple workflow components which may be of multiple types in at least some embodiments including to have one or more data source workflow components that correspond to input data for the defined workflow one or more data manipulation workflow components that correspond to defined data transformations or other manipulations to be performed on data and one or more data destination workflow components that correspond to providing output data from the defined workflow. In addition interconnections may be defined between workflow components that correspond to data flows between workflow components such that data output from a first component may be supplied as input to a second component with that relationship being represented as a connection from the first component to the second component. In at least some embodiments and situations the configurable workflow service may provide a group of predefined workflow components that a client may select and use in a defined workflow of the client optionally after being configured in one or more manners. Furthermore in at least some embodiments and situations the configurable workflow service may enable a client to supply or otherwise define some or all workflow components to be used in a defined workflow of the client.

Each data source workflow component that is defined for a workflow may correspond to obtaining data from an indicated data source and may include information such as a storage location for the data and optionally additional access information related to the storage location e.g. login information associated with the client a particular search or other information to use to identify data to be used such as related to metadata and or data contents etc. . In some embodiments the configurable workflow service may provide internal storage locations for use by clients in storing their source data with a particular data source corresponding to such an internal storage location while in other embodiments and situations a particular data source may be external to the configurable workflow service such as one or more network accessible storage systems that are provided by or otherwise controlled by the client one or more online storage services one or more online data generation services etc. A non exclusive list of examples of online storage services that may be used include the following Amazon Simple Storage Service S3 that stores object data of various types Amazon Relational Database Service RDS that provides relational database functionality Amazon SimpleDB that provides functionality to store key value pairs Amazon DynamoDB service that provides NoSQL database functionality Amazon Elastic Block Store EBS that provides access to raw block storage devices including to enable mounting a virtual local block storage device on a target computer system etc. A non exclusive list of examples of online data generation services includes an RSS feed the Amazon Cloudwatch Service that provides monitoring functionality for executing applications and services and generates corresponding information etc. Data sources may thus be of various forms such as a relational or other database e.g. the HBase open source distributed database the BigTable distributed database the MongoDB database system the Apache Cassandra distributed database management system etc. a hash table a file system an object store etc. optionally implemented in a distributed manner and a non exclusive list of examples of data groups that may be obtained from a data source includes a file e.g. a Web server log a database row or other record a stored data object a streamed group of data etc.

Thus in some situations and embodiments a particular defined workflow may obtain and use data from multiple data sources with some or all of the data sources optionally being external to the configurable workflow service. In addition the configurable workflow service may optionally predefine one or more types of data source workflow components such as to correspond to a particular internal storage mechanism of the configurable workflow service to correspond to one or more particular online storage services e.g. online storage services that are integrated with or otherwise affiliated with the configurable workflow service or that instead are unaffiliated with the configurable workflow service etc. Similarly a client may optionally define one or more data source workflow components such as to correspond to a client specific storage location to an online storage service without a predefined data source workflow component etc.

Each data manipulation workflow component that is defined for a workflow may correspond to performing one or more defined data transformations or other manipulations on data that is input to the data manipulation workflow component. In addition the output from a data manipulation workflow component may be provided to a data destination workflow component to be provided to a client or instead may be intermediate data that is provided to a next data manipulation workflow component such as via one or more electronic messages by storing the intermediate data in a storage location accessible to the next data manipulation workflow component e.g. using one or more storage locations provided by the configurable workflow service etc. Defined data manipulations may be of various forms including to perform a defined type of calculation on one or more groups of input data to aggregate multiple groups of input data in one or more manners to select a subset of one or more groups of input data to move data from one storage location to another etc. A non exclusive list of example data manipulations includes performing a distributed data copy performing one or more SQL Structured Query Language transforms performing one or more map and or reduce functions within a map reduce architecture e.g. for use within the Amazon Elastic MapReduce service using a scientific or mathematics package e.g. MatLab Mathematica etc. executing a client supplied script or other program etc. Thus in some situations and embodiments a particular defined workflow may perform multiple data manipulation operations via multiple defined data manipulation workflow components using predefined and or client defined data manipulation workflow components.

Each data destination workflow component that is defined for a workflow may correspond to providing output data from the defined workflow to one or more storage locations and or in one or more manners. The types of storage locations used by data destination workflow components and corresponding information stored for such data destination workflow components may be similar to or the same as for data source workflow components in at least some embodiments including to use storage locations that are internal to and or external from the configurable workflow service. In addition in at least some embodiments and situations particular data destination workflow components may include preparing and providing output data in particular manners such as to generate particular types of reports to send output data via one or more types of defined electronic communications etc. Thus in some situations and embodiments a particular defined workflow may provide multiple types of output data in multiple manners via multiple defined data destination workflow components using predefined and or client defined data destination workflow components.

In addition a client may define a workflow in various manners in various embodiments. For example an embodiment of a configurable workflow service may provide one or more interfaces for use by a client such as a defined GUI graphical user interface a defined API application programming interface and or a defined CLI command line interface . When using a provided GUI a user representative of a client may for example use a visual editor to specify particular workflow components for a workflow being defined and may further specify interconnections between particular workflow components corresponding to data flows in at least some such embodiments the configurable workflow service may represent the defined workflow as a graph that logically represents the workflow with various graph nodes corresponding to particular workflow components. provides additional illustrative details with respect to an example of such a workflow graph.

The configurable workflow service may further implement a defined workflow for a client in various manners and at various times. In some embodiments each time that a defined workflow is to be used the configurable workflow service instantiates a physical copy of the logical graph representing the defined workflow such as by using multiple computing nodes that each implement at least one workflow component for the defined workflow. In particular in at least some embodiments some or all of the computing nodes are provisioned by the configurable workflow service to configure those computing nodes to implement particular workflow components e.g. to load corresponding software and or data on those computing nodes such as to each execute a workload worker process corresponding to each such implemented workflow component. The computing nodes may have various forms in at least some embodiments including to each be a separate physical computer system a separate virtual machine e.g. one of multiple virtual machines hosted on a physical computer system a group of multiple physical computer systems that are operating in a distributed manner etc. Some or all such computing nodes used for a defined workflow may in some embodiments be selected from a plurality of computing nodes provided by the configurable workflow service for use by clients. In addition some or all such computing nodes may be provided by or otherwise controlled by the client and or may be provided by one or more online execution services whether instead of or in addition to computing nodes provided by the configurable workflow service. A non exclusive list of example online execution services that may be used include the Amazon Elastic Compute Cloud EC2 program execution service the Amazon Elastic MapReduce service for performing distributed map reduce operations e.g. by using a cluster of computing systems from the service to represent or implement a computing node for the configurable workflow service etc. In addition when a particular defined workflow is to be implemented multiple times the configurable workflow service may in some embodiments maintain the provisioning and availability of some or all computing nodes for the defined workflow between two or more such times of implementing the defined workflow e.g. in accordance with instructions from the client based on an automated determination by the configurable workflow service etc. while in other embodiments may release some or all such computing nodes to be available after an implementation and provide the same types of provisioning of computing nodes optionally different computing nodes for a next implementation.

A defined workflow may further have additional types of associated information in at least some embodiments and situations. For example a client may specify information that indicates when to implement a defined workflow such as based on a client instruction for immediate implementation by scheduling future implementation at one or more defined future times by scheduling one or more future implementations when one or more defined criteria are satisfied e.g. based at least in part on availability of particular source data etc. Defined criteria may be specified in various manners such as to be associated with particular workflow components or instead with the defined workflow as a whole. For example a particular workflow component may have defined precondition criteria to evaluate to determine when to execute the workflow component and or may have defined post condition criteria to evaluate when to complete execution and or provide data that is produced e.g. to a next workflow component to an intermediate storage location etc. . In some embodiments and situations a defined workflow may further have one or more associated alarms that may be used to provide notification to a client or to perform other activities when one or more specified criteria are satisfied or are not satisfied e.g. if a defined workflow is not implemented at a particular time such as if particular source data is not available .

The configurable workflow service may further be a fee based service in at least some embodiments such that clients of the configurable workflow service are customers that pay fees to the configurable workflow service for at least some of the functionality provided by the configurable workflow service. In addition when one or more online storage services and or online execution services are used by the configurable workflow service as part of implementing a particular defined workflow for a particular client such other services may also optionally charge fees for such use whether via the configurable workflow service or directly to the client.

Thus use of the configurable workflow service may provide various benefits in various embodiments and situations including to enable a client to schedule gathering data from multiple sources at particular times or otherwise when particular criteria are satisfied to perform defined types of data manipulation operations on the source data and to provide output data produced by the defined workflow in various manners. Additional benefits are discussed elsewhere herein and will otherwise be appreciated by those skilled in the art.

For illustrative purposes some embodiments are described below in which specific instances of defining and implement workflows are provided in specific ways including with respect to specific types of data specific types of data manipulation operations and specific types of storage services and execution services. These examples are provided for illustrative purposes and are simplified for the sake of brevity and the inventive techniques can be used in a wide variety of other situations some of which are discussed below and the techniques are not limited to use with particular types of data storage or other devices computing systems or computing system arrangements.

In some embodiments the configurable workflow service may provide one or both of a GUI not shown and or an API not shown such as to enable clients to perform various interactions with the service . For example a user representative not shown of a particular client may locally interact with one of the client computing systems to cause further interactions to occur with the configurable workflow service over the network . The user may for example interact with a workflow editor module of the configurable workflow service via which the user may define one or more workflows of interest for the client. As part of the interactions with the user the configurable workflow service may store various client information regarding the client and optionally the user representative and may store a particular definition of a newly defined workflow for the client as part of information . In some embodiments the defining of a particular workflow may include actions by the user in selecting one or more defined workflow components and specifying the interactions between those workflow components such as by using one or more predefined system provided workflow component definitions in other embodiments the configurable workflow service may not provide any such system provided predefined workflow components. As part of defining a new workflow the user may further specify one or more source locations at which source data is to be retrieved and used for the workflow definition and one or more destination locations to which data that is produced by the defined workflow will be provided. The various information and used by the configurable workflow service may further be stored on one or more systems that support or provide the configurable workflow service such as a database of the configurable workflow service although such systems are not illustrated with respect to .

In addition the user representative of the client may optionally in some embodiments define one or more new workflow components as part of defining a new workflow and if so such client defined workflow components may further have definition information stored in information in at least some embodiments. While a client defined workflow and any client defined workflow components may in some embodiments be treated as private unless otherwise specified by the client e.g. to be accessible or otherwise visible only to that client unless other specified in other embodiments and situations at least some such client specific information may instead be made available to other clients in specified circumstances such as to enable other clients to use some or all of the client s defined workflow components and or workflows e.g. for a fee or for other benefits provided to the client who defined such information if the client who defined such information approves use by others etc. . In a similar manner source data used by a client s defined workflow and final output data produced by a client s defined workflow may in at least some embodiments be treated as private to that client unless otherwise specified although in other embodiments some or all such source data and or final output data may instead be made available to other clients in specified circumstances e.g. for a fee or for other benefit to the client with which that data is associated if the client associated with such information approves use by others etc. .

When a client indicates one or more storage locations from which source data may be obtained and or to which final output data may be provided for a defined workflow such storage locations may have various forms in various embodiments as discussed in greater detail elsewhere. As one example in at least some embodiments the configurable workflow service may be integrated with or otherwise affiliated with one or more particular optional online storage services such as to form a single system e.g. a single system that is operated by a single entity . If so interactions with such optional online storage services may be performed to retrieve source data and or to store final output data. Furthermore in at least some embodiment intermediate data results that are generated during execution of a workflow may similarly be stored in such online storage services such as to be produced by a first part of the defined workflow and to be later accessed and used by a second defined part of the workflow whether in addition to or instead of one or more optional storage nodes . Moreover in at least some embodiments and situations one or more online storage services are available over the network to the client computing system and to the configurable workflow service and may be used in a similar manner over the network s whether in addition to or instead of some or all of the optional online storage services . In addition in at least some embodiments and situations a particular client may provide one or more client specific storage systems or other storage locations using one or more other computing systems which may similarly be used over the network s .

After a client has interacted with the configurable workflow service to define a workflow the client may further interact with a workflow engine module of the configurable workflow service to initiate execution of the defined workflow. The execution of a particular workflow may be initiated in various manners such as to be performed immediately upon a corresponding instruction from the client to occur at a specified future time or when other specified criteria such as for one or more defined preconditions are satisfied that will initiate execution of the workflow etc. As with the workflow editor module the workflow engine module may in some embodiments provide a GUI interface and or and API interface for use by clients. When the execution of a defined workflow is initiated the workflow engine module in the example embodiment retrieves workflow definition information for that defined workflow from the information and initiates the execution of the defined workflow on one or more computing nodes. In particular the workflow definition may be constructed with various logical nodes that each correspond to defined operations and are interconnected in various manners and the workflow engine module may select particular computing nodes to use to perform particular such operations as well as to further perform activities to provision and initiate execution of corresponding workflow worker processes on each such selected computing node. As part of provisioning such computing nodes and or of executing workflow worker processes on the computing nodes additional interactions with one or more storage locations may be performed to obtain input data to be used and or to store results data that are produced including for intermediate results data for use by other workflow worker processes of the defined workflow.

Some or all of the computing nodes used to implement a defined workflow may for example be selected from optional computing nodes provided by the configurable workflow service if present and workflow worker processes may be executed on those computing nodes to implement the defined operations. In other embodiments the workflow engine module may use computing nodes that are not provided by the configurable workflow surface whether instead of or in addition to the optional computing nodes . For example in some embodiments and situations a particular client may provide or otherwise control one or more other computing systems and the workflow engine may configure and use such other computing systems as computing nodes for use in executing that client s defined workflow. In addition in some embodiments one or more online program execution services and or may be available for use in executing programs in various manners and if so may be used to provide computing nodes not shown to execute some or all of a particular client s defined workflow for example the workflow engine module may provision and initiate execution of particular workflow worker processes on particular computing nodes provided by such online program execution services. As one example in at least some embodiments the configurable workflow service may be integrated with or otherwise affiliated with one or more particular optional online program execution services whether in addition to or instead of one or more optional storage services such as part of a single system as described above. If so interactions with such optional online program execution services may be performed to provision computing nodes initiate execution of particular workflow components receive output data produced by particular workflow components etc.

In other embodiments the configurable workflow service may perform additional techniques such as to generate and provide particular types of source data for defined workflows to perform additional activities with respect to managing final output data produced by clients defined workflows etc. In addition the configurable workflow service may be implemented in some embodiments based on software instructions that execute on one or more server computing systems to program or otherwise configure the server computing system s to perform some or all of the described techniques such as to program one or more hardware CPU processors not shown of the server computing system s such software instructions may for example be used to implement the modules and or or instead the functionality of the configurable workflow service may be provided using other types of modules.

In this manner the configurable workflow service provides various benefits to various external clients including to enable the clients to define workflows that may be executed using computing and storage resources of the configurable workflow service in part or in whole to interact with various types of online data sources to obtain data to be manipulated and to provide output data that is produced for storage or other use. Additional details related to particular operations of the configurable workflow service are included elsewhere herein.

Although the foregoing example embodiment of is described with respect to a configurable workflow service that provides various types of functionality in conjunction with one or more client systems that each may have one or more associated users it will be appreciated that various other embodiments may exist. For example in at least some embodiments and situations a client may represent an organization or other group e.g. a company that has multiple people instead of an individual person . Thus a client entity may have various forms in various embodiments.

In some embodiments the configurable workflow service and optionally any online storage services and or online program execution services that are used may each operate according to one or more fee based structures or agreements. For example access to some or all of the described techniques from the configurable workflow service may in some embodiments be provided in a fee based or other paid manner to a provider or operator of the configurable workflow service and or to at least some client systems that use described techniques of the configurable workflow service . As one example clients of the configurable workflow service may pay one time fees periodic e.g. monthly fees and or one or more types of usage based fees to use functionality provided by the configurable workflow service . Such fees may be based on one or more factors and activities such as indicated in the following non exclusive list based on a quantity and or type of interactions performed to define a particular workflow a size and or type of a defined workflow and or of some or all of its defined workflow components based on usage of a defined workflow such as a measure of computing resources used in executing a defined workflow e.g. a quantity of computing nodes used a measure of processor capability used e.g. CPU cycles an amount of time that occurs during the execution of the defined workflow activities in provisioning computing nodes for a defined workflow amount of time during which computing nodes that are provisioned for a defined workflow are unavailable for other use such as while those computing nodes wait for source data to be available or other preconditions to be satisfied based on a quantity of data that is stored and or transferred such as based on a size of the data an amount of time of the storage etc. based on content or other characteristics of particular data groups that are stored manipulated and or produced etc.

In particular with respect to a particular client of the configurable workflow service referred to in this example as Customer C has defined a new workflow that includes various nodes and interconnections such as based on various interactions with a workflow editor module of the configurable workflow service or instead by performing one or more programmatic interactions with a defined API of the configurable workflow service to provide information about the defined workflow in a defined manner e.g. by uploading a file or otherwise specifying one or more data structures to represent the defined workflow . In this example the defined workflow is represented with a logical graph that includes various nodes.

In the Customer C has defined two data source nodes to represent two types of sources of data for the defined workflow. The first data source corresponds to the Weblog data that becomes available periodically which in this example is stored by an online storage service . In particular in this example the online storage service stores various data groups and e.g. files and the node that corresponds to the Weblog data source includes information to use to select one or more particular data groups from the online storage service that represent the Weblog data for the client. The node may include various criteria to use to identify particular data groups such as a file name or other metadata associated with a particular data group one or more specified criteria with respect to content of the data groups e.g. a time frame corresponding to Weblog data to be used to extract records from a database that correspond to a time period of interest etc. The node may further include various access information to be used to obtain the data groups from the online storage service such as account information or other access information for Customer C at the online storage service with which the data groups are associated. In addition in this example the Customer C has defined one or more preconditions as part of node that are associated with the data source node such as to indicate that the execution of node and then the rest of the workflow is to begin when the data groups that satisfy the specified criteria for the node are available. In other embodiments the preconditions or other configuration information for the execution of the defined workflow may have other forms such as to indicate that the workflow is to be executed at a particular time or after a particular amount of time has passed since the last execution of the defined workflow. Thus the preconditions may for example be implemented in a worker process that interacts with the online storage service to determine when the data groups are available and then initiates execution of a worker process corresponding to node in at least some embodiments the configurable workflow service may wait to implement some or all nodes of the workflow other than a precondition node until those preconditions are satisfied such as to provision a computing node to execute the worker process corresponding to node after the preconditions have been satisfied.

In addition to the Weblog data source node the Customer C has also defined a data source node that corresponds to a database of the client such as may be stored on one or more storage systems not shown under control of the client or instead that are available via an online database storage service not shown . In this example the database of the Customer C includes various data groups and e.g. database records with the data groups storing clickstream data that has been previously generated for the Web site of the client whether by previous executions of this or a similar workflow or instead in other manners. In this example the node does not include any defined preconditions such as based on the database data being known to be present or instead based on the database data being optional for the execution of the defined workflow e.g. so that the current Weblog data will be added to and aggregated with any previously stored clickstream data but will generate new clickstream data to be stored even if such existing clickstream data does not exist .

In addition to the data source nodes the Customer C has further defined various data manipulation nodes that are part of the defined workflow. The defined nodes of the workflow each specify one or more data manipulation operations to be performed on specified source data and to perform particular activities with the results of those defined data manipulation operations. In particular in this example the Customer C has defined a first node that is interconnected with the data source node with the node being configured to perform data manipulation operations that involve extracting clickstream data for various users from the Weblog data that is provided by the data source node . As discussed in greater detail elsewhere the data manipulation operations may be specified in various manners including with particular program code to be executed database operations to be performed e.g. specified in SQL or in another defined database manipulation format via use of defined mathematical or scientific libraries or functions etc. Furthermore particular data manipulation operations may be specified in other manners in other embodiments such as to combine some or all of the defined nodes in a fewer number of nodes e.g. one and or to separate the data transformation operations of node into multiple distinct nodes.

In this example after the data manipulation node performs its data manipulation operations the intermediate results of those data manipulation operations are configured to be provided to a next data manipulation node which in this example is configured to associate each group of clickstream data that is extracted by node with a particular user. For example the clickstream data provided by node may be grouped and associated with a unique identifier for each user but may lack further identifying information about the corresponding users. The data manipulation operations of node may include identifying particular users and determining corresponding information for those users. For example an age of each user may be obtained and used in node to be associated with the user s corresponding clickstream data that was extracted in block . Accordingly the intermediate results output data from block includes a group of clickstream data corresponding to particular users that are identified by age and are configured in this example embodiment to be provided a next data manipulation node that is defined for the workflow. While not illustrated in this example the data manipulation node may further in some embodiments obtain user related data from another data source node not shown to enable its operations such as from one of the illustrated source locations or or instead from a different source location not shown .

The data manipulation node is defined in this example embodiment to aggregate the various clickstream data and associated users from node by defined groups of ages such as to aggregate clickstream data for users in age groups 18 25 26 50 51 65 and 66 . Thus the intermediate results from the data manipulation operations of node may include summary information for one or more clickstream measures for each defined age group such as number of pages viewed amount of time spent per page or per site particular types of activities performed etc. These intermediate data results produced by the node are configured in the illustrated example to be provided to a data manipulation node that combines this new clickstream data with other preexisting clickstream data if available.

In addition while the nodes of the defined workflow are illustrated in the example of in a logical manner that shows interconnections between the nodes in an abstract manner in some embodiments the defined workflow may further include additional details about how the implementation of the defined workflow is to occur during execution. For example some or all of the nodes of the defined workflow may include details about particular storage locations from which to obtain the data that the node is to use and or particular storage locations in which the results of the node are to be stored. Thus with respect to data manipulation node the node may further be defined to optionally store the intermediate data results that it produces in a particular specified storage location which is illustrated in as optional intermediate storage . Such intermediate storage may for example correspond to one or more of optional storage nodes of optional online storage services of online storage services of etc. As one specific example the intermediate storage may be the online storage service and the node may be configured to store its results as one or more particular data groups not shown on the online storage service such as by specifying a particular data group name or other storage location of the online storage service in which the intermediate results from node will be stored. In a similar manner if such an intermediate storage location is specified for node the next node in the node graph may include a defined input storage location that is that same storage location from which to obtain those intermediate data results produced by the node . Additional details of the user of such intermediate storage locations are described in further detail with respect to the example of . In other embodiments the configurable workflow service may manage the transfer of data between workflow components whether by using one or more intermediate storage locations that are automatically selected by the configurable workflow service by performing message passing etc.

In addition as previously noted the Customer C has in this example previously generated data groups on the database that correspond to previously existing clickstream data for the client. Such clickstream data may for example include some or all of the types of clickstream data that is aggregated with respect to node and may further include various other types of clickstream data that does not correspond to node such as with respect to other data groups of the database . In addition the data source node was previously defined to extract those data groups that correspond to the clickstream data of interest for this defined workflow. Accordingly the Customer C further defines a data manipulation node that is configured to receive those data groups from the clickstream data source node and to retrieve particular clickstream data of interest corresponding to the defined age groups and types of clickstream data of node . The data manipulation operations of node may include for example extracting particular data records from the database or may include additional types of operations e.g. performing one or more database join operations to combine data from multiple database tables of the database performing one or more database select operations to select a subset of data from a database table etc. . Thus the intermediate data results provided by the data manipulation of node include the same types of clickstream data and the same types of defined age groups as were previously noted with respect to node . In other embodiments one or more of the nodes may instead manipulate the new clickstream data to match the database record structure of the data groups .

Thus the data manipulation node is configured to receive intermediate data results that are produced by node and is further configured to receive intermediate data results produced by node . When both types of data are available the node is configured to combine the clickstream data of the defined types by the defined age groups. The intermediate data results produced by the node are then configured to be used in two distinct manners in this example. In particular the Customer C has further defined two data destination nodes that correspond to two defined destinations to which the data produced by the defined workflow will be provided. In particular a first data destination node is defined to correspond to the database of the Customer C and in particular to correspond to the same set of data groups as does the data source node . Thus when the intermediate data results of node are produced and made available to the data destination node those data results are configured to be sent to the database as final output of the defined workflow and to be stored as part of the data groups such as by adding additional data records to the database to supplement the previously existing data that was retrieved by node or to instead replace some or all of the previously retrieved data with new updated data that further includes the information from the most recent set of Weblog data.

In addition to storing the updated clickstream data in the database the Customer C further defines a data destination node that corresponds to communicating a generated report to the Customer C via one or more electronic communications sent to a mailbox of the Customer C. Thus the defined workflow further includes a data manipulation node that is defined to take the intermediate results from the node and to perform data manipulation operations that include generating a report in a defined manner that includes some or all of the clickstream data from node e.g. optionally just the new clickstream data output by node . The intermediate data results generated by the node which in this example are configured to include one or more defined reports that present information in a structured manner are provided to the data destination node which is configured to provide that final output of the defined workflow to the mailbox of the Customer C via one or more electronic communications.

Thus in the illustrated example of the Customer C client of the configurable workflow service has defined a workflow that when implemented combines data of different types from different sources to produce multiple types of output data of interest to the client which is automatically made available to the client in multiple specified manners.

As discussed in greater detail elsewhere the computing nodes may come from one or more sources including by using one or more computing nodes provided by the configurable workflow service by using one or more computing nodes made available by the Customer C client and or by using one or more computing nodes provided by each of one or more external online execution services. When accessing computing nodes made available by the Customer C client the configurable workflow service may optionally use access information supplied by the Customer C client to enable interactions with those computing nodes e.g. to provision the computing nodes to execute software on the computing nodes etc. . When accessing computing nodes from an external online execution service for use on behalf of the client the configurable workflow service may in some embodiments and situations use information for the client as part of interactions with the online execution service such as information for an existing account of the client with the online execution service if so the computing nodes from the online execution service that are being used by the configurable workflow service may in at least some such situations also be accessible to the client via interactions between the client and the configurable workflow service. Alternatively when accessing computing nodes from an external online execution service for use on behalf of the client the configurable workflow service may in some embodiments and situations use an account of the configurable workflow service with the online execution service such that the online execution service considers those computing nodes to be associated with the configurable workflow service rather than the client if so those computing nodes from the online execution service that are being used by the configurable workflow service on behalf of the client may in at least some such situations not be accessible or possibly even visible to the client including based on any interactions between the client and the configurable workflow service.

The worker processes and may in some embodiments and situations execute at different times on different types of computing nodes e.g. if the computing node E is provided by the configurable workflow service and the computing node A is provided externally to the configurable workflow service in different manners e.g. with worker process executing on a single physical computing system that provides computing node E and with worker process executing in a distributed manner on multiple physical computing systems that provide computing node A etc. Thus while a particular worker process such as worker process is illustrated as a single process in the example of it will be appreciated that actual worker processes may be implemented in various manners in various embodiments including by using one or more physical computing systems to represent the computing node that executes the worker process whether provided by the configurable workflow service or instead by one or more online program execution services that are external to the configurable workflow service.

In the illustrated example after the worker process receives the source data via interactions and performs the data manipulation operations described with respect to node of the worker process generates intermediate data results that are stored in online storage service via one or more interactions with the online storage service. While the particular intermediate results are not illustrated in the example of the results may be stored in various manners as described with respect to the intermediate storage of including in a particular storage location that is configured as part of the node and or the worker process

After the intermediate results have been stored via the interactions a worker process executing on computing node B performs more interactions with the online storage service to obtain those intermediate data results for use optionally based on the use of one or more preconditions not shown that are satisfied when those intermediate data results are available. In particular in this example the configurable workflow service has selected computing node B to execute worker processes and that correspond to the nodes and of respectively. Thus with respect to the worker process the process performs one or more data manipulation operations previously described with respect to node of the . In this example because the computing node B is executing multiple worker processes the intermediate data results produced by the worker process are not stored in the online storage service but are instead passed directly via interactions to the worker such as via in memory access or instead via one or more other types of electronic communications. In other embodiments the worker process may instead store such intermediate data results with the online storage service even if the next worker process in the dataflow will later retrieve and use those same intermediate data results.

In this example the executing worker process next performs the data manipulation operations previously described with respect to node of including to use the intermediate data results produced by the worker process and to generate its own intermediate data results which in this example are stored in the online storage service via one or more interactions . While the online storage service is used to store the intermediate data results of multiple distinct worker processes in this example in other embodiments the intermediate data results of the various worker processes may be stored in other manners including to store intermediate data results of different worker processes in different online storage services or instead in other manners.

In addition to the online storage service of also illustrates the database of the Customer C client although the example data groups and of are not illustrated in . In this example the configurable workflow service has further selected a computing node C to execute a worker process that corresponds to the node of the workflow of . Thus the worker process of performs one or more data manipulation operations previously described with respect to node including to perform interactions with the database to obtain the data groups defined with respect to the data source node . In this example the worker process similarly stores its intermediate data results in the online storage service via one or more interactions although in other embodiments may store such intermediate results in other manners.

After the intermediate data results are available from the worker processes and a worker process of computing node D performs one or more interactions with the online storage service to obtain both of those sets of intermediate data results and to generate corresponding combined data by performing one or more data manipulation operations previously described with respect to node of . In particular in this example the configurable workflow service has selected computing node D to execute the worker process as well as a worker process that corresponds to node of . Thus after the worker process produces its results the process performs one or more interactions to store those results in the database such as in a manner specified with respect to destination node of . In addition in this example the worker process obtains those intermediate data results from worker process via one or more interactions and generates one or more reports in the manner configured with respect to node of . The worker process further proceeds to perform one or more interactions to send those reports to a mailbox of Customer C such as in a manner specified with respect to destination node of .

Thus in this manner the logical defined workflow graph of is implemented via a physical instantiation of that defined workflow using the computing nodes illustrated with respect to as well as using intermediate storage to manage the transfer of some or all intermediate data results between workflow worker processes.

It will be appreciated that the examples of are provided for illustrative purposes and that the invention is not limited by the details discussed with respect to those examples.

In addition the illustrated client computer systems have components similar to those of computer system including a CPU I O components although particular components are not illustrated storage and memory . The other systems and may also each include similar components to some or all of the components illustrated with respect to computer system but such components are not illustrated in this example for the sake of brevity. The client computer systems each includes a browser program executing in memory such as to enable a user of such a client computer system to interact with a Web based GUI provided by the configurable workflow service system and also optionally stores information about client specific workflow components on the local storage although in other embodiments one or both of these components may not be present on some or all client systems. Furthermore a particular client computer system may have more or less components than are illustrated.

An embodiment of a configurable workflow service system is executing in memory of computer system such as to include software instructions that when executed by the CPU program or otherwise configure the computer system to perform automated operations to provide some or all of the described techniques. While not illustrated in the system may include one or more modules optionally corresponding to modules and or of . In addition the server computer system may further optionally execute one or more online storage services and or one or more online program execution services in memory such as to correspond to situations in which the configurable workflow service system is integrated with or otherwise operates in conjunction with such services and or although the system may instead operate independently of any such other systems in some embodiments. In other embodiments any such online storage services and or online program execution services that are used by the configurable workflow service system may be accessed over the network such as with respect to optional systems and or .

In this example embodiment the configurable workflow service system includes functionality related to managing workflow related functionality for supported client systems and is further optionally configured to interact with client computer systems and or other systems and devices over the network e.g. via the Internet and or the World Wide Web via a private cellular network etc. . The other systems and or may also each be executing various software as part of interactions with the system . Various information related to the operation of the configurable workflow service system and optionally services and or may be stored in storage or instead remotely such as information about particular client systems and or users information about one or more particular defined workflows for clients and information about any defined workflow components such as in a manner similar to that of information of or as described elsewhere herein. Additional details regarding operations of the system in particular embodiments are described in greater detail elsewhere.

It will be appreciated that systems and are merely illustrative and are not intended to limit the scope of embodiments of the present disclosure. For example system may instead be executed by multiple interacting computing systems or devices and computing system may be connected to other devices that are not illustrated including through one or more networks such as the Internet via the World Wide Web Web or other electronic communications network e.g. cellular based network public switched telephone network . More generally a computer system or computing system or computing node may comprise any combination of hardware that can interact and perform the described types of functionality optionally when programmed or otherwise configured by particular corresponding software instructions including without limitation desktop or other fixed location computers laptops and tablets and other mobile computers database servers network storage devices and other network devices PDAs smart phones and other cell phones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate communication capabilities. In addition the functionality provided by the illustrated system may in some embodiments be distributed in various modules.

It will also be appreciated that while various items are illustrated as being stored in memory or on storage while being used these items or portions of them may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computer systems via inter computer communication. Thus in some embodiments some or all of the described techniques may be performed by hardware means that include one or more processors and or memory and or storage when configured by one or more software programs e.g. by the system and or data structures e.g. defined workflow information and or defined workflow component information such as by execution of software instructions of the one or more software programs and or by storage of such software instructions and or data structures. Furthermore in some embodiments some or all of the systems and or modules may be implemented or provided in other manners such as by using means e.g. specialized electronics that are implemented at least partially or completely in firmware and or hardware including but not limited to one or more application specific integrated circuits ASICs standard integrated circuits controllers e.g. by executing appropriate instructions and including microcontrollers and or embedded controllers field programmable gate arrays FPGAs complex programmable logic devices CPLDs etc. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on non transitory computer readable storage media such as a hard disk or flash drive or other non volatile storage device volatile or non volatile memory e.g. RAM a network storage device or a portable media article to be read by an appropriate drive e.g. a DVD disk a CD disk an optical disk etc. or via an appropriate connection. The systems modules and data structures may also in some embodiments be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission media including wireless based and wired cable based media and may take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

In the illustrated embodiment the routine begins at block where an instruction is received related to managing workflow related functionality. The routine continues to block to determine if the instruction received in block is to define a new workflow on behalf of a client of the configurable workflow service. If so the routine continues to blocks to obtain and store information about a defined workflow for the client. As described in greater detail elsewhere in some embodiments and situations the configurable workflow service may provide a user interface via which a user representative of the client interactively specifies information for the new workflow being defined while in other embodiments the information to use to define a new workflow may instead be received via one or more programmatic interactions from one or more executing programs on behalf of the client.

In the illustrated embodiment the routine in block optionally provides information to the client about options for defining the new workflow including system defined workflow components that are available to be selected and used by the client such information may be provided for example via a GUI of the configurable workflow service by displaying corresponding information and functionality to the user. After block the routine continues to block to receive configuration information to define the workflow for the client. In some embodiments such configuration information may be received via programmatic interactions with an API of the configurable workflow service while in other embodiments and situations the information received in block may be provided via a user representative of the client via a user interface of the configurable workflow service. It will be appreciated that the definition of a workflow via a user interface of the configurable workflow service may involve multiple successive interactions by a user representative of the client with the configurable workflow service optionally updating and providing additional or alternative information to the user via a user interface based on prior selections that have been made. Thus the functionality of blocks and may include multiple iterative activities by the configurable workflow service in some embodiments and situations. After block when the definition of the new workflow has been completed the routine continues to block to store workflow definition information for the client for later use such as by using a database or other storage location internal to the configurable workflow service. In some embodiments the client may further provide an instruction to initiate execution of the workflow at this time such as may be handled with respect to blocks of the routine .

If it is instead determined in block that the instruction received in block is not to define the new workflow the routine continues instead to block to determine if the received instruction is to execute an existing workflow such as an instruction received from a client to initiate current execution e.g. with respect to a newly defined workflow as discussed with respect to blocks an indication that a scheduled time that was previously specified for such execution has arrived etc. If so the routine continues to block to retrieve stored workflow definition information for the client such as from an internal database or other storage location associated with the configurable workflow service. After block the routine continues to block to select computing nodes to use to execute worker processes for the workflow and to provision those selected computing nodes for those worker processes. As discussed in greater detail elsewhere the computing nodes that are selected to be used may have various forms in various embodiments including computing nodes provided by the configurable workflow service for use by the various clients of the configurable workflow service computing nodes provided by one or more external optionally affiliated program execution services computing nodes that are provided by or otherwise under the control of the client etc. In addition the provisioning of the selected computing nodes may include for example loading software to be executed for one or more particular worker processes on each selected computing node optionally loading data to be used by such worker processes on each selected computing node etc. After block the routine continues to block to initiate the execution of the worker processes for the workflow being executed on the selected computing nodes. illustrates additional details of one example embodiment of provisioning and executing a worker process on a selected computing node.

If it is instead determined in block that the instruction received in block is not to execute a defined workflow the routine continues instead to block to determine if the instruction received is to check preconditions for one or more defined workflows such as for workflows that are configured to execute when their preconditions are satisfied. If so the routine continues to block to retrieve information about preconditions for any such defined workflows and to determine if those retrieved preconditions are currently satisfied. The routine then continues to block to determine if sufficient preconditions have been satisfied for any defined workflows to initiate their implementation and if so returns to block to initiate execution of each such defined workflow. The instruction to check pre conditions at a particular time may be initiated in various manners in various embodiments such as on a periodic basis in response to indications of events that have occurred e.g. new arrival or availability of data etc.

If it is instead determined at block that the instruction received in block is not to currently check workflow preconditions for any defined workflows the routine continues instead to block to perform one or more other indicated operations as appropriate. The operations performed with respect to block may have various forms in various embodiments and at various times including to modify or remove defined workflows for clients stop or otherwise modify current or scheduled executions for defined workflows for clients check for alarm conditions with respect to any defined workflows and take corresponding action as appropriate etc.

After blocks or or if it is instead determined in block that no defined workflows have preconditions that are currently satisfied the routine continues to block to determine whether to continue such as until an explicit indication to terminate is received. If it is determined to continue the routine continues to block and otherwise continues to block and ends.

In this example embodiment of the routine the actions of the routine are illustrated with respect to a single worker process although it will be appreciated that a particular computing node may execute multiple worker processes in particular embodiments and situations and that a particular worker process may in some embodiments and situations be executed on multiple computing nodes or other computing systems e.g. in a distributed manner such as simultaneously and or serially on those computing systems . In addition it will be appreciated that particular workflow component worker processes may perform different operations e.g. more or less than are illustrated in accordance with particular configurations for their corresponding workflow components.

The illustrated embodiment of the routine begins at block where configuration information is received for a worker process of a defined workload to be executed and execution of the worker process is initiated. In some embodiments and situations the configuration information and execution initiation are received based on one or more interactions with the routine of an embodiment of the configurable workflow service such as with respect to blocks and of . As discussed in greater detail elsewhere each worker process may have various associated information including to be of a defined type to have defined software code to be executed to implement the worker process to have one or more defined data sources from which the worker process will receive input to have one or more defined data destinations to which data results produced by the worker process will be provided to optionally have other data associated with the worker process e.g. configuration information related to how the worker processes will perform one or more specified data manipulation operations to optionally have one or more preconditions and or post conditions to optionally have one or more associated alarms etc. Thus while not illustrated with respect to the example embodiment of routine in other embodiments the routine may further receive additional information in block or at other times including configuration data to be used by the worker process.

After block the routine continues to block where it optionally performs any pre processing activities for the worker process such as to prepare the worker process to perform its specified data manipulation operations or other operations. After block the routine continues to block where it obtains source data to be used by the worker process from one or more specified source locations. For example in some embodiments and situations preconditions may be used that are based at least in part on determining availability of such source data. After block the routine continues to block to perform one or more specified data manipulation activities for the worker process on the obtained source data. As discussed in greater detail elsewhere such specified data manipulation activities may have various forms in various embodiments and situations including to move data from one location to another location to modify or otherwise transform data in various manners etc.

After block the routine continues to block to provide the results from the specified data manipulation activities of block to one or more specified destination locations. As discussed in greater detail elsewhere such activities in providing the results data may include storing some or all of the results data in a specified storage location sending one or more electronic communications that include some or all of the specified results data generating a particular report or other format that includes some or all of the results data for presentation etc.

After block the routine continues to block to determine whether to continue such as until an explicit indication to terminate is received. If it is determined to continue the routine returns to block and otherwise continues to block and ends. In the illustrated embodiment a given worker process may thus perform the activities of blocks multiple times if so configured such as to perform one or more specified data manipulation activities on different groups of source data at different times including in situations in which the computing node s executing the worker process are operated for extended periods of time such as for multiple implementations of the defined workflow. In other embodiments the worker process may further at times receive additional configuration information that modifies future performance of the worker process and or may perform other pre processing activities at times and thus in such situations the routine may return from block to blocks and or if appropriate.

It will be appreciated that in some embodiments the functionality provided by the routines discussed above may be provided in alternative ways such as being split among more routines or consolidated into fewer routines. Similarly in some embodiments illustrated routines may provide more or less functionality than is described such as when the amount of functionality that is provided is altered. In addition while various operations may be illustrated as being performed in a particular manner e.g. in serial or in parallel and or in a particular order in other embodiments the operations may be performed in other orders and in other manners. Similarly the data structures discussed above may be structured in different manners in other embodiments such as by having a single data structure split into multiple data structures or by having multiple data structures consolidated into a single data structure and may store more or less information than is described e.g. when other illustrated data structures instead lack or include such information respectively or when the amount or types of information that is stored is altered .

Additional details are included below related to a particular example embodiment of a configurable workflow service although it will be appreciated that the described techniques are not limited by such details.

In this example embodiment configurable workflow service CWS workflows also referred to as pipelines in this example embodiment are defined via a configuration language that enables description of nodes also referred to as objects in this example embodiment that form a pipeline. There are 5 general types of objects one can describe in an CWS pipeline in this example embodiment as follows 

A Pipeline is composed of objects and objects consist of attributes. Attributes have the form tag value.

Objects have a name attribute and type attribute. In addition to name and type objects may have any number of other attributes depending on the type of the object. In the example below the object Invoice Logs describes a data object stored in an example online storage service SSS referred to as and has path attribute in addition to name and type 

An attribute may optionally be repeated within an object. In the example below input is repeated and the values for each input attribute are treated as an ordered list 

Consider an example of concatenating 5 minute logs into an hourly log. Here is a simple Pipeline that concatenates 5 minute logs into an hourly log in online storage service SSS on a recurring basis. This Pipeline consists of 

First let s describe our 5 minute click logs in additional detail which are the input to our Pipeline. The following 2 objects define 1 a Schedule FiveMinPeriod and 2 a Data Source Five Minute Logs that is associated with FiveMinPeriod 

Each such online storage service SSS file can be thought of as an instance of Five Minute Logs . Each one is distinct from the others based on the time period they represent and the data that they include.

The type attribute identifies this as an DataNode source object. The name can be anything but in this example embodiment may be unique for this Pipeline definition. Data Source objects such as DataNodes may also have a dimension attribute in this example embodiment which describes different ways an object can be materialized into occurrences. One common example of dimension is time period which can be expressed as minutes hours days weeks or months. Another example dimension is one based on geographic regions such as to correspond to different locations of data source systems.

In addition time periods may be specified by schedule objects in this example embodiment. In particular we define a schedule object that specifies a 5 minute period as follows 

Notice Five Minute Logs s dimension attribute refers to the schedule object FiveMinPeriod . Now let s looks at the path attribute 

The sequence describes an expression. In this case the expression to be evaluated is interval.end. Because Five Minute Logs has a schedule associated with it it contains an attribute called interval which itself has a start and end value. In this way interval.start . . . interval.end describes a specific time interval of a schedule 

The path attribute is evaluated as an file name using the end of each 5 minute interval per the schedule object in this case.

Next let s describe an activity that reads an hour s worth of 5 minute clicks and concatenates them into an hourly output file. These 3 objects define 1 a Schedule HourPeriod 2 a CopyTransform Concatenate that is associated with HourPeriod and 3 an Alarm CopyFailedAlarm that will be invoked the event of failure 

CWS schedules and runs Concatenate when an hour s worth of input Five Minute Logs is available. When all 20 5 minute files for a given hour are ready each will be copied into output Hourly Logs . If the Concatenate process encounters a failure condition the Alarm object CopyFailedAlarm will run and send an email.

In particular Concatenate is an object of type CopyTransform which is a built in Activity provided by CWS in this example embodiment. The CopyTransform takes an input Data Source and an output Data Source. Activities CopyTransform is a type of Activity may have a Schedule dimension associated with them just like a Data Source. In this case Concatenate is associated with the Schedule object Hour Period which describes an hourly time interval. This can be thought of as the following Concatenate processes 1 hour s worth of data .

The Schedule of the input in this case Five Minute Logs describes a 5 minute interval while the schedule of Concatenate is hourly. CWS infers that 20 5 minute input files map to the hourly interval of processing Concatenate is configured for. An Alarm object such as CopyFailedAlarm can be associated with any number of Activities. The body attribute in this case contains the following expressions Error for interval node.interval.start . . . node.interval.end. Alarms have a node attribute that at runtime evaluates to the object the Alarm is reporting on. In this case the node would refer to the object Concatenate if the alarm was fired due to a failure with Concatenate .

Each file may be thought of as an instance of Hourly Logs . Each one is distinct from the others based on the time period they represent and the data that they include.

Like the Five Minute Logs Data Source described above Hourly Logs is associated with a Schedule which in this case is an hourly Schedule. The path attribute is evaluated as an file name using the end of each hourly interval per the schedule object in this case.

The Concatenate Activity specifies Hourly Logs as the output Data Source. When CWS schedules and runs Concatenate it also will give rise to an file corresponding to the ending time range of the hourly schedule period for the current run.

With respect to object references an attribute can refer to another Pipeline object by name. This useful in forming certain types of expressions 

With respect to expressions an expression occurs within this construct expression . Expressions can be

With respect to string literals an attribute can have a string literal value such as this is a string literal . Also a string literal can contain an expression which is evaluated as a string 

As noted above these details of these example embodiments are provided for the purpose of illustration and are not intended to limit the scope of the described techniques with respect to other embodiments.

From the foregoing it will be appreciated that although specific embodiments have been described herein for purposes of illustration various modifications may be made without deviating from the spirit and scope of the invention. Accordingly the invention is not limited except as by the appended claims and the elements recited therein. In addition while certain aspects of the invention are presented below in certain claim forms the inventors contemplate the various aspects of the invention in any available claim form. For example while only some aspects of the invention may currently be recited as being embodied in a computer readable medium other aspects may likewise be so embodied.

