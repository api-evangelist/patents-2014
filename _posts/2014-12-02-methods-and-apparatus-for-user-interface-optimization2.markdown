---

title: Methods and apparatus for user interface optimization
abstract: The invention provides in one aspect a method that includes identifying one or more rules for execution by a rules engine in order to generate a user interface. The method further includes executing, on a digital data processing system that comprises one or more digital data processors, a step of determining whether one or more aspects of the user interface generated as a result of execution of at least one of those rules is in conformity with one or more requirements. The system responds to a negative such determination, according to the method, by identifying modifications to generate a conforming user interface from those one or more rules, modifying one or more of those rules to generate a conforming user interface from (e.g., based directly or indirectly on) those one or more rules, and/or generating a conforming user interface from those one or more rules. The method further calls for storing to and/or generating as an output from the digital data processing system a result those step(s).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09658735&OS=09658735&RS=09658735
owner: Pegasystems Inc.
number: 09658735
owner_city: Cambridge
owner_country: US
publication_date: 20141202
---
This application is a continuation of U.S. patent application Ser. No. 13 031 109 filed Feb. 18 2011 entitled Methods and Apparatus for User Interface Optimization which is a continuation in part of U.S. patent application Ser. No. 12 174 624 filed Jul. 16 2008 entitled Methods and Apparatus for Implementing Multilingual Software Applications which claims the benefit of priority of U.S. Patent Application Ser. No. 61 063 269 filed Jan. 31 2008 entitled Digital Data Processing Methods and Apparatus for Business Process Management. This application is also a continuation in part of U.S. patent application Ser. No. 12 035 682 filed Feb. 22 2008 entitled User Interface Methods and Apparatus for Rules Processing which is a continuation in part of U.S. patent application Ser. No. 11 396 415 filed Mar. 30 2006 entitled User Interface Methods and Apparatus for Rules Processing. The teachings of all of the forgoing are incorporated herein by reference.

The invention relates to digital data processing and more particularly for example to more to the optimization of user interfaces generated by digital data processing systems.

Computer systems that facilitate business operations based on information specific to an industry or enterprise are well known in the art. These typically rely on rules identifying situations that are expected to arise during enterprise operation and the applicable responses. Such systems have been used in a range of applications from health care to automotive repair. The rules on which they rely come from experts in the field from the collective experience of workers on the front line or a combination of these and other sources.

Though many computer systems of this sort incorporate application specific knowledge directly into source code using for example a sequence of if . . . then . . . else statements or the like more complex systems store that knowledge separately from the programs that access it. Some use rules bases that store application specific information in tables database records database objects and so forth. An example of a system of this type is disclosed in commonly assigned U.S. Pat. No. 5 826 250 entitled Rules Bases and Methods of Access Thereof the teachings of which are incorporated herein by reference.

These and other rules based business process management BPM applications are commonly used in enterprise computing for example where they facilitate a range of business operations from marketing to manufacturing to distribution to technical support. By way of example a BPM application can implement data processing workflows to support the handling of customer service requests received by retail and banking enterprises. By way of further example BPM applications can be used in health care and insurance enterprises to support the automated routing and resolution of claims.

With increasing frequency these applications are implemented with architectures that permit their use over the Internet wide area networks local area networks and the like. A common such architecture provides a rules engine that executes on a server e.g. co located with the rules base at enterprise headquarters and that processes requests entered by support personnel via web browsers executing on remotely disposed client devices e.g. personal computers and personal digital assistants .

Other software applications are evolving similarly. Those that traditionally ran solely on the desktop are now increasingly being executed over the Internet or other networks. Word processing is one example. Though core functions are still supported by software resident on each user s computer higher end functionality may be delivered on demand from an enterprise or other server.

Unfortunately the architectural evolution of BPM and other applications has not been accompanied by commensurate changes in their user interfaces. Customers must increasingly rely on those interfaces for everything from opening inquiries to making purchases and entering into other transactions to obtaining customer assistance. Enterprise employees and managers must likewise increasingly rely on them for everything from account inquires to report generation to customer and account support. Though the quantity of information pouring into and out of these user interfaces is on the rise their efficiency and ease of use is not. An object of this invention is to correct that.

More generally an object of the invention is to provide improved systems and methods for digital data processing.

A yet more particular object is to provide such improved user interface systems and methods for use with rules engines.

A still yet more particular object is to provide such improved user interface systems and methods for use in business process management BPM applications.

A yet still further object is to provide such improved user interface systems and methods as are optimized for user interaction.

The foregoing are among the objects attained by the invention which provides in some aspects methods and systems for user interface optimization. In one such aspect the invention provides such a method that includes identifying one or more rules for execution by a rules engine in order to generate a user interface. The method further includes executing on a digital data processing system that comprises one or more digital data processors a step of determining whether one or more aspects of the user interface generated as a result of execution of at least one of those rules is in conformity with one or more requirements. The system responds to a negative such determination by generating a notification indicative thereof identifying modifications to generate a conforming user interface from those one or more rules modifying one or more of those rules to generate a conforming user interface and or generating a conforming user interface from e.g. based directly or indirectly on those one or more rules. The method further calls for storing to and or generating as an output from the digital data processing system a result those step s .

Further aspects of the invention provide methods e.g. as described above wherein one or more of the rules comprises any of metadata and one or more programming language statements.

Further aspects of the invention provide methods e.g. as described above wherein aspects of the user interface in regard to which the determination of conformity is made pertain to a language syntax of the user interface including any of grammar spelling usage punctuation and style accessibility of the user interface by disabled users amenability of the user interface to localization globalization the need for localizing globalizing the user interface security and or layout.

Thus by way of non limiting example methods according to related aspects of the invention can make a determination of whether the user interface provides tooltips in conformity with specified accessibility requirements. And by way of further non limiting example such methods can make a determination of whether the user interface obfuscates one or more fields e.g. input and or display fields in accord with specified security requirements.

By way of still further example methods according to related aspects of the invention can make a determination of whether the user interface meets specified layout requirements in regard to priority of fields color contrast whitespace alignment field and or element labels redundancy progress indicators usability unused area and or display resolution.

Further aspects of the invention provide methods e.g. as described above wherein one or more of the requirements from which the conformity determination is made are defined by one or more further rules e.g. from a rules base and or another user interface generated thereby one or more transactional data e.g. from one or more enterprise databases relating to the user interface or otherwise a context in which the user interface is any of transmitted displayed and or viewed by the user a collection e.g. database rules base or otherwise defining any of grammar spelling usage punctuation style of the user interface.

Still further aspects of the invention provide methods e.g. as described above wherein one or more of the user requirements are defined in accord with transactional data relating to a field associated with the user interface. According to such aspects for example the conforming user interface can include a field that has a modified display characteristic vis a vis a non conforming user interface which would otherwise result from the rule s upon which the determination of non conformance is made.

Related aspects of the invention provide methods e.g. as described above wherein the modified display characteristic is based on a requirement defined in accord with transactional data relating to correlation between transactional data associated with that field and transactional data associated with another field. The modified display characteristic can be for example position size color and or other attribute.

Further aspects of the invention provide methods e.g. as described above wherein a field in a conforming user interface includes a field that is repositioned vis a vis the non conforming user interface which would otherwise result from the rule s upon which the determination of non conformance is made. According to related aspects of the invention a location of that repositioned field is based on a location of another field in the user interface. Alternatively or in addition according to related aspects of the invention that location can be based on a preferred position for the repositioned field e.g. as defined in one or more other rules and or a context in which the user interface is any of transmitted displayed and or viewed by a user all by way of example.

Further aspects of the invention provide methods e.g. as described above wherein a field of a conforming user interface is any of added to and removed from the user interface vis a vis the non conforming user interface which would otherwise result from the rule s upon which the determination of non conformance is made.

Yet still further aspects of the invention provide methods e.g. as described above wherein a conforming user interface includes a field that that has a modified display characteristic vis a vis the non conforming user interface which would otherwise result from the rule s upon which the determination of non conformance is made.

Other related aspects of the invention provide methods e.g. as described above wherein the requirement pertains to an alignment characteristic and wherein the conforming user interface includes an altered alignment characteristic vis a vis the non conforming user interface which would otherwise result from the rule s upon which the determination of non conformance is made.

Still other related aspects provide methods e.g. as described above wherein the requirement pertains to a security trait and wherein the conforming user interface includes a feature that obfuscates at least one display or input field vis a vis the non conforming user interface which would otherwise result from the rule s upon which the determination of non conformance is made.

Likewise for example wherein the requirement pertains to the display of breadcrumbs tabs or other navigational indicators of user interfaces the conforming user interface can include a feature reflecting such indicators vis a vis the non conforming user interface which would otherwise result from the rule s upon which the determination of non conformance is made.

These and other aspects of the invention are evident in the drawings and in the description that follows.

The illustrated client digital data processors and are conventional desktop computers workstations minicomputers laptop computers tablet computers PDAs or other digital data processing apparatus of the type that are commercially available in the marketplace and that are suitable for operation in the illustrated system as described herein all as adapted in accord with the teachings hereof. Here those digital data processors are of the type and configuration used in a corporate or enterprise environment however the invention may be practiced in any variety of other computing environments networked or otherwise.

The digital data processors comprises central processing memory storage and input output units and other constituent components not shown of the type conventional in the art that are configured to form application respectively which in the illustrated embodiment comprise software suitable for i displaying user interfaces generated by server and transmitted to the respective processors via network and preferably for also ii generating requests for those interfaces and transmitting them to server again via network .

In the illustrated embodiment those applications comprise web browsers of the type commercially available in the marketplace and operative on the respective devices for by way of example retrieving web pages or other markup language streams presenting those pages and or streams visually aurally or otherwise executing scripts controls and other code on those pages streams accepting user input with respect to those pages streams e.g. for purposes of completing input fields issuing HTTP requests with respect to those pages streams or otherwise e.g. for submitting to a server information from the completed input fields and so forth. The web pages or other markup language can be in HTML or other conventional forms including embedded XML scripts controls and so forth again per convention in the art. In other embodiments applications may perform fewer of these functions and may perform other functions as well or instead.

Thus by way of non limiting example one or more of applications may comprise embedded rules engines e.g. for executing rules transmitted respectively to them by server e.g. as part of the web pages markup streams or otherwise. While in some embodiments such rules engines are architected and operated similarly to rules engine of server discussed below in other embodiments they incorporate a subset of the functionality of engine e.g. suited to the processing resources and or demands of the digital data processors upon which they operate.

While the forgoing functions attributed to applications are described here in the context of web pages it will be appreciated that in other embodiments one or more of the foregoing functions may be performed on the respective devices other than by web browser software.

The central processing memory storage and input output units of client digital data processors may be configured to form and or may be supplemented by other elements of the type known in the art desirable or necessary to support applications respectively in accord with the teachings hereof as well as to support other operations of the digital data processor . These can include by way of non limiting example peripheral devices such as keyboards and monitors operating systems database management systems and network interface cards and software e.g. for supporting communications with server digital data processor and other devices over network .

Although digital data processors are depicted and described in like manner here it will be appreciated that this is for sake of generality and convenience in other embodiments these devices may differ in architecture and operation from that shown and described here and or from each other all consistent with the teachings hereof. Moreover it will be appreciated that although only three closely positioned client devices are shown other embodiments may have greater or fewer numbers of these devices disposed near and or far from one another collocated behind one or more common firewalls or otherwise.

Like client digital data processors the server digital data processor is a digital data processing apparatus of the type commercially available in the marketplace suitable for operation in the illustrated system as described herein as adapted in accord with the teachings hereof. Though the server is typically implemented in a server class computer such as a minicomputer it may also be implemented in a desktop computer workstation laptop computer tablet computer PDA or other suitable apparatus again as adapted in accord with the teachings hereof .

Server digital data processor too comprises central processing memory storage and input output units and other constituent components not shown of the type conventional in the art that are configured in accord with the teachings hereof to form rules engine rules base transaction database language database and context registry one or more of which may be absent in various embodiments of the invention.

Although only a single server digital data processor is depicted and described here it will be appreciated that this other embodiments may have greater or fewer numbers of these devices disposed near and or far from one another collocated behind one or more common firewalls or otherwise. Those other servers may differ in architecture and operation from that shown and described here and or from each other all consistent with the teachings hereof. Still further although server of the illustrated embodiment is depicted as being remotely disposed from the client digital data processors and in other embodiments one or more of the client devices may be disposed in vicinity of the server and indeed may be co housed with it.

Rules base comprises a conventional rules bases of the type known in the art albeit configured in accord with the teachings hereof for storing digitally encoded rules and other application related information in tables database records database objects and so forth. Such stored rules are likewise formatted and stored in the conventional manner known in the art albeit configured in accord with the teachings hereof . Here rules base is configured and contains rules for use in business process management applications though in other embodiments it may be configured and used for other applications. A preferred such rules base is of the type described in the aforementioned incorporated by reference U.S. Pat. No. 5 826 250 entitled Rules Bases and Methods of Access Thereof and U.S. Pat. No. 7 640 222 entitled Rules Base Systems and Methods with Circumstance Translation though a rules base that is architected and or operated differently may be used as well.

Some embodiments may utilize multiple rules bases e.g. an enterprise wide rules base on the server and domain specific rules bases on one or more of client devices all by way of example. To the extent that multiple rules bases are provided in any given embodiment they may be of like architecture and operation as one another though they be disparate in these regards as well. Utilization of multiple rules bases may be accomplished in the manner described in copending commonly assigned U.S. patent application Ser. No. 13 031 097 entitled Systems and Methods for Distributed Rules Processing filed this same day herewith the teachings of which are incorporated heron by reference.

Transactional data base comprises a conventional data base of the type known in the art albeit configured in accord with the teachings hereof for storing corporate personal governmental or other data that may be any of generated stored retrieved and otherwise processed hereinafter collectively referred to as processed by rules in rules base and or rules stored executed elsewhere. The data may of financial data customer records personal data run time data related to an application or other type of data and it may be stored in tables database records database objects and so forth.

As above some embodiments may utilize multiple transactional database bases e.g. an enterprise wide data base on the server and branch office specific data bases on the client devices all by way of example. To the extent that multiple transactional data bases are provided in any given embodiment they may be of like architecture and operation as one another though they be disparate in these regards as well. Utilization of multiple transactional databases may be accomplished in the manner described in incorporated by reference U.S. patent application Ser. No. 13 031 097 entitled Systems and Methods for Distributed Rules Processing filed this same day herewith.

Language base encodes information regarding the syntax of the language or languages in which user interfaces generated by server are presented on devices and more particularly in the illustrated embodiment by applications . That syntax can include one or more of grammar spelling usage punctuation and or style. The language base may comprise a language database of the variety commercially available in the marketplace e.g. in the manner of spelling and grammar dictionaries provided with conventional word processors which dictionaries often include usage punctuation and or style related entries . Alternatively the language syntax information may be embodied in one or more rules of the rules base or otherwise.

Context registry is a store registry that includes information related to the respective contexts or circumstances in which the requested user interfaces e.g. web pages are and or will be communicated to and executed on the respective client devices . That context or circumstance can include by way of non limiting example user properties or business attributes e.g. security permissions disability settings market segment behavioral segment age locale and so forth client device properties e.g. processor speed display size keyboard capabilities locale and so forth and communication channel properties e.g. the speed and type of connection between server and the respective client devices . That context or circumstance can further include by way of non limiting example the language country and or other locale settings and preferences of the user of device to which the web page is to be displayed. Still other variations in the possible range of values stored in the context registry are possible.

Illustrated digital data processor also includes rules engine of the type conventionally known in the art albeit configured in accord with the teachings hereof for use in processing rules from a rules base in order to process data e.g. in and or for storage to a transactional database for example in connection with events signaled to and or detected by the engine. In the illustrated embodiment the rules engine is of the type used for business process management applications though in other embodiments it may be of the type used for other applications. Preferred such rules engines are of the type described in the aforementioned incorporated by reference U.S. Pat. No. 5 826 250 entitled Rules Bases and Methods of Access Thereof and U.S. Pat. No. 7 640 222 entitled Rules Base Systems and Methods with Circumstance Translation and or U.S. patent application Ser. No. 11 681 269 filed Mar. 2 2007 entitled Proactive Performance Management For Multi User Enterprise Software Systems the teachings too of which are incorporated by reference herein all as adapted in accord with the teachings hereof.

The rules engine may be implemented in a single software program or module or a combination of multiple software modules programs. Moreover it may comprise programming instructions scripts rules e.g. rules stored in rules base and or a combination of thereof. And even though the rules engine of the illustrated embodiment is depicted as executing on just server digital data processor in other embodiments the engine may execute on or across multiple digital data processors e.g. and . Executing the engine over multiple digital data processors may be accomplished in the manner described in incorporated by reference U.S. patent application Ser. No. 13 031 097 entitled Systems and Methods for Distributed Rules Processing filed by one or more of the same inventors hereof on this same day herewith the teachings of which are incorporated herein by reference.

In a preferred embodiment the rules may comprise meta information structures. These are structures that can include data elements and or method elements. The latter can be procedural or declarative. In the former regard for example such a structure may be procedural insofar as it comprises one or more of a series or ordered steps e.g. in a workflow . In the latter regard such a structure may be declarative for example insofar as it sets forth declares a relation between variables values and so forth e.g. a loan rate calculation or a decision making criterion or it declares the desired computation and or result without specifying how the computations should be performed or the result achieved. By way of non limiting example the declarative portion of a meta information structure may declare the desired result of retrieval of a specified value without specifying the data source for the value or a particular query language e.g. SQL CQL .QL etc. to be used for such retrieval. In other cases the declarative portion of a meta information structure may comprise declarative programming language statements e.g. SQL . Still other types of declarative meta information structures are possible.

While some rules may comprise meta information structures that are wholly procedural and others may comprise those that are wholly declarative the illustrated embodiment also contemplates rules that comprise both procedural and declarative meta information structures i.e. rules that have meta information structure portions that are declarative as well as meta information structure portions that are procedural e.g. a rule that includes one portion defining one or more steps of a workflow and another portion that defines a decision making criterion .

Rules of the illustrated embodiment that comprise meta information structures may also reference and or incorporate other such rules which themselves may in turn reference and or incorporate still other such rules. As a result editing such rule may affect one or more rules if any that incorporate it.

Continuing the above example a meta information structure based rule may include a procedural portion that defines a workflow process as well as a reference to another meta information structure based rule that specifies a decision making criterion for one of the steps in that workflow. If the meta information structure containing that decision making criterion is edited it may affect the rule that references it and therefore affect processing of the workflow that referencing rule defines.

In another example a rule that includes a meta information structure for generating a web page may reference another rule with a meta information structure portion that defines how social security numbers SSNs are displayed. If the latter rule is edited e.g. to cause all SSNs to be partially blurred or blocked on display entry i.e. obfuscated this may affect the former rule i.e. causing the web page generated upon execution of the former rule to display the SSNs in an obfuscated format. Similarly if several other meta information based rules for generating other web pages reference the social security displaying rule all of those respective web pages may be similarly affected.

An advantage of rules that comprise meta information structures over conventional rules is that they provide users with the flexibility to apply any of code based and model driven techniques in the development and modification of software applications and or computing platforms. Particularly like models in a model driven environment meta information structures comprise data elements that can be used to define any aspect of a complex system at a higher level of abstraction than source code written in programming languages such as Java or C . On the other hand users may also embed programming language statements into meta information structures if they deem that to be the most efficient design for the system being developed or modified. At run time the data elements of the meta information structures along with programming language statements if any are automatically converted into executable code by the rules engine.

Thus in some embodiments rules may be the primary artifacts that get created stored e.g. in a rules base or otherwise manipulated to define and or modify the overall functionality of rules based applications that may automate and or manage various types of work in different business domains at run time. By way of non limiting example a plurality of rules stored in a rules base e.g. may be configured to define all aspects of a software application. Such a software application may include specialized software that is used within a specific industry or a business function e.g. human resources finance healthcare telecommunications etc. or it may include a cross industry application e.g. a project management application issue tracking application etc. or any other type of software application. As the software application executes on a digital data processor e.g. any of and any portion of the plurality rules that define the application may be retrieved from a rules base e.g. and processed executed e.g. using a rules engine in response to requests events signaled to and or detected by the engine at run time.

Client devices of the illustrated embodiment execute web browsers respectively that display web pages and or other markup language streams collectively web pages or alternatively streams markup streams HTML streams and so forth in the discussion that follows unless otherwise evident therefrom received from server via network s . These are typically web pages presented by the server to the respective users of devices e.g. as part of respective online sessions although they can be presented on other occasions and for other reasons as well.

The aforementioned web pages include can include conventional elements such as display text headers links still and moving images and other display fields as well as input fields for entry of data in text numeric and or alphanumeric collectively text formats enumeration selection e.g. dropdown lists checkboxes radio buttons etc. upload download file selection submit buttons e.g. to signify that a page is ready for submission to the server other controls and so forth. These fields or elements may be supplemented and or replaced by aural presentation fields e.g. music files and the like again in the conventional manner known in the art.

In the illustrated embodiment those web pages or more generally markup streams are generated by the server and transmitted to the respective client devices as a result of execution by rules engine of rules typically in response to signaling from the client digital data processors e.g. by way of HTTP requests . However those pages can also be generated by the server and transmitted to client devices as a result of execution of rules in response to other events e.g. asynchronously generated web pages or portions thereof signaling completion of previously requested batch jobs signaling notifications or other messaging from administrative functions in the system other users and so forth.

In this regard it will be appreciated that rules base of the illustrated embodiment can comprise multiple types of rules. Some if not all of the rules may be user interface rules that are directed to generation of web pages or other mark up streams via which users of client devices communicate with server and vice versa. Execution of these rules for example may directly or indirectly lead to one or more of the following by way of non limiting example i establishing of online sessions with the respective client devices and more particularly the users of applications executing thereon ii generation of web pages or more generally markup streams in response to requests from those users or as noted above in response to other events and or iii accepting and or processing input from those users e.g. in response to the web pages all by way of non limiting example. Others of the rules in rules base may be directed to other features or tasks attendant to business process management e.g. collaboration between users rule work management optimization simulation batch processing of transactions exchanging data with other computer systems report generation and so forth all by way of example. Still other rules may execute on the central processing unit or other resources of the server to provide one or more of the rules engine function itself again in the conventional manner known in the art. Yet still other rules may define requirements for user interfaces generated by the user interface rules e.g. in regard to language syntax including for example grammar spelling usage punctuation and style accessibility disabled users amenability to and or necessity of localization globalization security and or layout.

Thus for example in response to a request for a loan validation web page by the web browser of client digital data processor the rules engine retrieves one or more of the rules implicated by that request from the rules base if it has not already done so . Which of those rules is implicated may be determined by the request itself the context the state of currently executing rules for that user and so forth. A markup language generator contained in rules engine then processes those implicated rules e.g. in view of that context to select which input fields output fields submit buttons display elements etc. to include in the requested web page and how to configure those elements.

Operation of the generator of the illustrated embodiment is shown in . As shown there the illustrated generator accepts the I.D. e.g. name key etc. of the implicated rule as an input and determines if a Java class for HTML stream generation already exists in the Java cache not shown for that rule. See step . If so processing proceeds to step where that class is executed in order to generate the HTML stream. If not processing proceeds to step where the generator retrieves the XML code defining the identified rule from rules base . Processing proceeds to step where the generator generates Java source code for the selected rule and any other rule it references. In step the generator compiles that source code into a class file and in step it loads that file into the Java cache. In step the generator executes that file thereby generating the appropriate markup language stream. Of course it will be appreciated that the operation of generator described here is merely an example and that other embodiments may generate markup streams from rules in other ways. Furthermore even though the illustrated embodiment utilizes an XML data structure and Java source code other embodiments may utilize other programming languages and or utilize other data formats.

In the illustrated embodiment such contextual selection and configuration is embedded in the rules themselves and or forms part of the systematic processing of markup language streams as discussed in incorporated by reference U.S. patent application Ser. Nos. 12 174 624 and 12 035 682. As noted above as used herein context refers to the context in which the requested web page will be communicated to and executed on the client device. That context can include by way of non limiting example user properties e.g. security permissions disabilities market segment behavioral segment or other business related attributes age locale and so forth client device properties e.g. processor speed display size keyboard capabilities disability settings and so forth and communication channel properties e.g. the speed and type of connection between devices and .

Based on the aforesaid selection and configuration the engine constructs a markup language stream e.g. in HTML or other conventional format or protocol. That stream is transmitted by the server per convention to the requesting client digital data processor e.g. for response by the user e.g. completion of any input fields on the web page.

In the illustrated embodiment the engine constructs and forwards the markup stream to the browser of device substantially concurrently with its request for the corresponding web page i.e. during the same online session on which that request was made and or within the conventional time periods expected for response to a web page though these are not requirements of the invention. The browser of device likewise substantially concurrently executes that stream for display to the user e.g. within that same online session and or within the conventional time periods expected for execution of a web page though again this is not a requirement of the invention.

Rules engine responds similarly to requests from the web browser or other application of client digital data processor as well as to those from web browser or other application of digital data processor .

In view of the foregoing and by way of non limiting example it will be appreciated that the illustrated embodiment facilitates access to web applications and generation of web pages by disabled and non disabled users alike. For example the rules engine can generate markup language streams representing the same substantive web page e.g. a loan validation page albeit with different user accessibility features in response requests for that same page by client devices with different disability settings e.g. settings reflecting that the respective users of the client devices have limited hand use mobility vision impairments or conversely no impairments at all. An appreciation of the operation of the illustrated system in these regards may be attained by reference to aforementioned incorporated by reference U.S. patent application Ser. No. 12 035 682 filed Feb. 22 2008 entitled User Interface Methods and Apparatus for Rules Processing. 

By way of a still further non limiting example the rules engine of the illustrated embodiment can provide access to web applications and web pages that are differentiated in accord with models that represent user customer behaviors attributes and goals. Server can thereby deliver otherwise substantively similar web pages that differ to fit the needs of the particular model to which each user fits. Such contextual selection and configuration of user interface elements allow the server to deliver such solutions without the need for coding of multiple web pages e.g. for each model to which users may belong. An appreciation of the operation of the illustrated system in these regards may be attained by reference to aforementioned incorporated by reference U.S. patent application Ser. No. 11 396 415 filed Mar. 30 2006 entitled User Interface Methods and Apparatus for Rules Processing. 

By way of yet a still further non limiting example the rules engine of the illustrated embodiment can facilitate globalization of user interfaces. Thus server can generate markup language streams representing the same substantive web pages e.g. loan validation page albeit in different languages for delivery to customers in different countries. It can effect such globalization or localization not only with respect to the language for example of text fields but also formatting of numeric and other fields e.g. to reflect different currency formats . An appreciation of the operation of the illustrated system in these regards may be attained by reference to aforementioned incorporated by reference U.S. patent application Ser. No. 12 174 624 filed Jul. 16 2008 entitled Methods and Apparatus for Implementing Multilingual Software Applications. 

In addition to utilizing rules to generate web pages making up user interfaces as described above the server optimizes those interfaces and more particularly those web pages. Referring back to the server and more particularly the rules engine utilizes an analyzer to that end. The analyzer may be implemented in a single software program or module or a combination of multiple software modules programs. Moreover it may comprise programming instructions scripts rules e.g. some of the rules stored in rules base and or a combination of thereof. Even though the analyzer executes on server digital data processor as part of the engine in the illustrated embodiment in in other embodiments the analyzer may execute separately on one or more digital processors in communication with server and the other illustrated components installed thereon.

In the illustrated embodiment that analyzer is coupled to the generator and operates in an online mode e.g. at production time to analyze user interface rules that are selected for execution from rules of rules base and or to analyze the HTML stream generated from those rules by the generator to determine if they are in conformity with one or more requirements. In other embodiments the analyzer may operate instead or in addition in an offline mode e.g. at design time wherein it determines whether one or more user interface rules that are for example being designed tested or otherwise optimized are in conformity with those requirements. In the offline mode the user interface rules being analyzed may not necessarily be executed by the engine to generate a user interface at the time of analysis. Instead the analyzer may simply retrieve one or more of the user interface rules from the rules base and introspect their underlying data structure e.g. scripts code logic instructions meta data etc. to determine conformity with the requirements. For sake of simplicity and without loss of generality in the discussion that follows a user interface rule that is being analyzed by the analyzer is referred to as a rule being executed or a selected rule regardless of whether the analyzer is processing that rule in online or offline mode.

It will be appreciated that in both online and offline modes the analyzer may work in conjunction with the rules engine to any of manage track and implement analysis by the analyzer. The operation of the rules engine and or analyzer in these regards may be governed by workflow s and other business process management BPM features e.g. user collaboration work management etc. that may be defined by some of the rules in rules base . For example as was previously mentioned a plurality of rules in rules base may define a project management and or issue tracking application that is executed by engine at run time. The analyzer may communicate the results of the analysis in either offline or online mode to any of such applications that may in turn use the results data to generate and or process one or more user interface optimization tasks associated with the results. An advantage of using such rules based applications in conjunction with the analyzer to manage and or implement the results of the analysis may be that all user interface optimization tasks may be performed in one single unified environment using a common underlying rules based data structure rather having to learn and or convert data formats between different tools technologies for various stages of the optimization tasks. Furthermore performing all user interface optimization tasks in a unified environment may obviate the need for complex integration between digital data processing system and disparate tools applications using for example enterprise application integration EAI middleware or other integration technologies that enable linkages between systems and or applications. The communication between analyzer and other applications is further discussed in connection with .

The requirements are defined in the illustrated embodiment by some of the rules contained in rules base though in other embodiments they may be defined in one or more other collections such as a data base. Those requirement defining rules set forth requirements for aspects of the user interface. In one embodiment such aspects include language syntax including for example grammar spelling usage punctuation and or style accessibility to disabled users amenability to and or necessity of localization globalization security and or layout. In other embodiments the requirements may relate to only some of these aspects or for other additional aspects. In some other embodiments the requirements can be defined relative to other of the rules and particularly for example other user interface rules in the rules base to data in the transactional database syntax information in the language database and or context information maintained in context registry .

Operation of the analyzer in these regards is illustrated in and discussed below. The analyzer accepts as input the rule being executed and or the markup language stream generated from that rule. In additional embodiments the analyzer accepts the corresponding Java class file instead or in addition to the rule and or markup language stream. However for sake of simplicity and without loss of generality in the discussion that follows analysis of the rule and or stream is treated as tantamount to analysis of the class file. Though the analyzer of some embodiments operates only at the level of granularity of a web page analyzing only those rules whose execution when combined with that of referenced rules will result in generation of an entire web page a preferred analyzer operates at larger and smaller levels of granularity. Such an analyzer can examine rules whose execution will result in generation of sequences of web pages as well as those which will result in individual web pages and or portions thereof all in accord with the teachings hereof.

In embodiments where the analyzer is configured to operate at the level of granularity of individual web pages UIs users of client devices e.g. and may be given an option to execute the analyzer by pressing a button e.g. entitled Optimize My Form on the web page that is to be analyzed. This button may be presented to some or all users of the client devices e.g. as determined by the relevant context e.g. user role and or security privilege settings at time of web page generation. By way of non limiting example the button may be displayed on the web page for a user of the client device that requested that page if the relevant context at the time of web page generation specifies user s role as a developer administrator as opposed to an end user of the application that the web page is associated with. Such context based generation of web pages and or elements included therein is discussed in incorporated by reference U.S. patent application Ser. Nos. 11 396 415 and 12 035 682.

Upon execution or launch of the analyzer e.g. by pressing a button or otherwise the user may then be shown a list of options e.g. list of aspects which enables the user to select all or some of the aspect of the web page UI to be analyzed. The list of options may be displayed in a portion of the user interface web page being analyzed or it may be displayed in a separate user interface e.g. a pop up window . Once the user makes the selections and the analysis is complete the analyzer may likewise present the results of the analysis in the user interface web page being analyzed or in a separate user interface. The possibilities with regard to the outcome of the analysis are discussed in further detail below.

In other embodiments the analyzer may be implemented as a software wizard or otherwise such that users of client devices e.g. and are able to make a plurality of selections related to for example the desired level of granularity of the analysis i.e. analyze one or more user interfaces rules and or portions thereof the aspects to be analyzed the priority e.g. user interfaces associated with certain applications analyzed before user interfaces for other applications and or timing e.g. certain user interfaces and or portions thereof analyzed automatically upon triggering of an event or at pre determined intervals of the analysis tasks.

By way of non limiting example the analyzer may be launched for multiple user interfaces and or corresponding rules that pertain to one or more applications wherein the user selects a certain combination of aspects e.g. security accessibility format etc. to be analyzed for each of the user interfaces. Alternatively the user may simply select an aspect of a single field or a section of a user interface to be analyzed. Where certain selections are not made by a user the analyzer may perform the analysis based on default settings e.g. analyzer configured to analyze all aspects of all the user interfaces for an application once every three months unless a user selects otherwise . Still other ways of configuring and or implementing the analyzer are possible. Regardless of the various embodiments of the analyzer the discussion that follows provides a description of the operation of analyzer related to different aspects of the rule being executed.

In step the analyzer analyzes language syntax aspects of the rule being executed combined with any referenced rules depending upon the level of granularity of the analysis and or the markup language stream generated therefrom. In the illustrated embodiment it performs this task by comparing the display text specified in that rule and or markup stream against the language database to identify grammar spelling usage punctuation and or style errors. Such comparison can be formed using techniques normally employed in the word processing arts to identify syntax errors in word processing documents.

If the analyzer detects syntax non conformance as a result of the analysis in step it performs one or more of the following steps 

Though the discussion above focuses on the analyzer s use of the language database for syntax analysis in other embodiments the analyzer may instead or in addition access the rules base the transactional data base and or the context registry for like comparisons and or for further information that may inform analysis of conformance of the user interface rule and or stream with the language syntax requirements. Thus by way of non limiting example reference to requirement defining rules among rules in the rules base may inform the analyzer that the spelling requirements are to be relaxed for certain display text fields of the interface thereby allowing for example the use of contractions abbreviations and the like. And by way of further example reference to the context registry may inform the analyzer of specific users preferred languages thus affecting the analyzer s choice of access to the language database for the appropriate language.

In step the analyzer analyzes the user interface rule being executed combined with any referenced rules depending upon the level of granularity of the analysis and or the markup language stream generated therefrom in regard to accessibility to disabled users. In the illustrated embodiment it performs this task by analyzing the various defining characteristics e.g. type content size and or location of display fields input fields and other elements specified in the rule and or markup language stream to determine if they need to be reconfigured or modified to be more suitably rendered for disabled users. In a preferred embodiment requirements in this regard are defined by some of the rules in the rules base and ensure that the resulting user interface can be generated with proper user accessibility features e.g. in accord with the teachings of aforementioned incorporated by reference U.S. patent application Ser. No. 12 035 682 filed Feb. 22 2008 entitled User Interface Methods and Apparatus for Rules Processing. 

By way of non limiting example a requirements defining rule among rules can specify that tooltip texts must be provided with all controls e.g. input elements and control elements as well as for all non text display fields in the user interface defined by a user interface rule being executed and or corresponding markup stream. By way of further non limiting example such a requirement defining rule may prohibit the use of multiple icons on a user interface such that the initial focus is placed on the first input field when the user interface is first displayed as opposed to an icon. Still further the same or one or more other requirement defining rules may require that all user interface elements utilize color schemes that will allow accessibility features e.g. of the type specified in the aforementioned U.S. patent application Ser. No. 12 035 682 to function properly.

If the analyzer detects accessibility non conformance as result of the analysis in step it performs one or more of the following steps 

Though the discussion above focuses on the analyzer s use of the requirement defining rules in the rules base for accessibility analysis in other embodiments the analyzer may instead or in addition access the transactional data base the language database the context registry and or other rules in the rules base for information that may inform analysis of conformance of the user interface rule and or stream with the accessibility requirements. Thus by way of non limiting example reference to the transactional database and the context registry may inform the analyzer that certain groups of disabled users consistently enter incorrect data in certain required input fields thus causing the analyzer to vary the conformity requirements e.g. embodied in requirement defining rules among rules for interfaces generated on behalf of those groups of users e.g. so that the misused fields are highlighted placed on separate web pages varied in format and so forth.

By way of further non limiting example one or more other rules in the rules base may embody use cases for an application with which the user interface rule being executed and or stream is associated. Such use cases may suggest that the application will be used by U.S. government users. Reference to these other use case rules in conjunction with rules that embody federal accessibility standards for user interface elements associated with U.S. government applications will allow the analyzer to determine conformance of the rule being executed and or stream with the federal accessibility standards.

In step the analyzer analyzes the user interface rule being executed combined with any referenced rules depending upon the level of granularity of the analysis and or the markup language stream generated therefrom in regard to its amenability to and or necessity of localization a k a globalization . In the illustrated embodiment it performs this task by analyzing the various defining characteristics e.g. type content size and or location of display fields input fields and other elements specified in the rule and or markup language stream to ensure that they can be suitably localized and or to perform that localization depending upon the demands of a particular application. In a preferred embodiment requirements in this regard are defined by some of the rules in the rules base . These ensure that the resulting user interface can be generated for the appropriate locales e.g. in accord with the teachings of aforementioned incorporated by reference U.S. patent application Ser. No. 12 174 624 filed Jul. 16 2008 entitled Methods and Apparatus for Implementing Multilingual Software Applications. 

If the analyzer detects localization non conformance as result of the analysis in step it performs one or more of the following steps 

Though the discussion above focuses on the analyzer s use of the requirement defining rules in the rules base for localization analysis in other embodiments the analyzer may instead or in addition access the transactional data base the language database the context registry and or other rules in the rules base for information that may inform analysis of conformance of the user interface rule and or stream with the localization requirements. Thus by way of non limiting example reference to the transactional database and or the context registry may inform the analyzer that users in a geographic region of a country consistently enter monetary values use spellings etc. that differ from the recognized norm of that country thus causing the analyzer to vary the localization requirements for interfaces generated on behalf of those users e.g. to ensure proper conversion and or checking of values they enter and or to display prompts that best match the expected form of input by those users.

By way of further non limiting example one or more other rules in the rules base may embody use cases for an application with which the user interface rule being executed and or stream is associated. Such use cases may suggest that the application may be used in five different countries including Germany. Reference to these other use case rules in conjunction with a requirement defining rule that mandates higher maximum lengths for user interface elements to be localized in German will allow the analyzer to accurately determine conformance of the rule being executed and or stream with the appropriate localization requirements i.e. including Germany . On the contrary analysis results output by the analyzer without referencing the other use case rules could be markedly different if the maximum lengths for user interface elements are in compliance with the applicable requirements for all other locales.

In certain embodiments a user interface rule being analyzed for localization may be designed such that all display elements included therein are translated from a base locale e.g. American English or en US to other locales based upon corresponding translated values of the display elements that are included in other referenced rules e.g. stored in rules base that are configured for each such other locale e.g. de DE or German speaking German locale . In such embodiments a requirement defining rule may specify that the display elements included in the user interface rule being analyzed need to be localized for the de DE locale and the analyzer may determine non conformance by searching for the referenced rule e.g. in the rules base that includes the corresponding translated values for the de DE locale. If the search is unsuccessful the analyzer may simply generate notification s of localization non conformance according to steps a and or b listed above. If the search is successful the analyzer may still detect non conformance in step for example due to an improper link reference between the user interface rule being analyzed and the referenced rule for the de DE locale. In this case the analyzer may modify the user interface rule to fix reference link according to step c and or modify the markup according to step d by executing the referenced rule along with the user interface rule.

In step the analyzer analyzes the user interface rule being executed combined with any referenced rules depending upon the level of granularity of the analysis and or the markup language stream generated therefrom in regard to security e.g. whether one or more elements of the user interface require special treatment in connection with their display and or entry via the client applications . In the illustrated embodiment it performs this task by analyzing defining characteristics e.g. the ID. s formats and or content of display fields input fields and other elements specified in the user interface to determine if they necessitate application of security requirements defined by one or more requirement defining rules among rules in the rules base .

By way of non limiting example a requirements defining rule can specify that all fields in the user interface defined by a user interface rule being executed and or corresponding markup stream containing social security numbers passwords financial account numbers or other such confidential information must be partially or fully obscured a k a obfuscated upon display by and or entry via an application on a client device.

If the analyzer detects security non conformance as result of the analysis in step it performs one or more of the following steps 

Though the discussion above focuses on the analyzer s use of requirement defining rules in the rules base for security analysis in other embodiments the analyzer may instead or in addition access the transactional data base the language database the context registry and or other rules in the rules base for information that may inform analysis of conformance of the user interface rule and or stream with the security requirements. Thus by way of non limiting example reference to the transactional database may inform the analyzer that certain groups of users commonly enter social security numbers as user i.d. s when setting up accounts thus causing the analyzer to vary the display format prompting or validation requirements for interfaces generated on behalf of those users e.g. warning them not to use such i.d. s blocking their acceptance as proper user names or obfuscating them upon entry where the user i.d. s of other groups of users are not obfuscated.

In step the analyzer analyzes the user interface rule being executed combined with any referenced rules depending upon the level of granularity of the analysis and or the markup language stream generated therefrom in regard to formatting and layout collectively layout . In the illustrated embodiment it performs this task by analyzing the defining characteristics e.g. i.d. s formats locations etc. of display fields input fields and other elements specified in the rule and or markup language stream to determine whether they meet formatting requirements defined by some of the rules in the rules base .

By way of non limiting example a requirements defining rule among rules can specify that all fields that appear on user interfaces generated by one set of rules for presentation by applications run by an enterprise s employees that also appear on a user interface generated e.g. by another set of user interface rules for presentation by like applications run by an enterprise s CEO must appear at the top of any web pages generated for the employees hence ensuring that what is important to the CEO is of priority to the employees . Similarly a requirement defining rule may specify that any field that is included or not included in a user interface presented displayed to managers within a company should also be included or not included on user interfaces that are used by the direct reports of those managers within that company.

By way of further non limiting example a requirements defining rule among rules can specify arrangement of field types in the user interface defined by a user interface rule being executed and or corresponding markup stream e.g. prohibiting ordering of field types that would cause the user to have to jump excessively between input devices e.g. a drop down control atop a text field atop another drop down control . Such a requirements defining rule can help avoid interfaces that degrade performance by forcing the user to go from mouse to keyboard and back again excessively.

By way of still further non limiting example a requirements defining rule among rules can specify color contrast of field in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. ensuring that colors of web page backgrounds fields images and so forth meet specified branding and or aesthetic requirements.

By way of still further non limiting example a requirements defining rule among rules can specify whitespace in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. ensuring consistency across columns sections and other regions of the user interface. Such a requirements defining rule can likewise define a quantity of unused area on web pages in the user interface e.g. ensuring that such web pages are not on the one hand overloaded with text or images and on the other hand overly devoid of such elements.

By way of yet still further non limiting example a requirements defining rule among rules can specify alignment in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. again ensuring consistency across columns sections and other regions of the user interface as well as ensuring proper visual hierarchy through indenting.

By way of still yet further non limiting example a requirements defining rule among rules can specify labeling requirements in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. ensuring that buttons columns and other elements of the user interface bear consistent and appropriate labels.

By way of yet still further non limiting example a requirements defining rule among rules can avoid redundancy in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. checking for columns buttons and other fields with the same name.

By way of further non limiting example a requirements defining rule among rules can require tooltips on certain or all input and non text display elements in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. ensuring ease of navigation.

By way of yet still further non limiting example a requirements defining rule among rules can require breadcrumbs tabs and other navigational aids in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. ensuring that users of the interface know where they are in a sequence of web pages or process.

By way of yet still further non limiting example a requirements defining rule among rules can require accord between the actual or likely resolution of user display e.g. on device and width or length of columns and other elements in a user interface defined by a user interface rule being executed and or corresponding markup stream e.g. ensuring that there are not too many columns in a grid or list view too many columns in a section etc. that would cause or necessitate horizontal and vertical scrolling.

If the analyzer detects layout non conformance as result of the analysis in step it performs one or more of the following steps 

Though the discussion above focuses on the analyzer s use of the requirement defining rules in rules base for layout analysis in other embodiments the analyzer may instead or in addition access the transactional data base the language database the context registry and or other rules in the rules base for information that may inform analysis of conformance of the user interface rule and or stream with the layout requirements.

Thus by way of non limiting example reference to the transactional database and context registry may inform the analyzer that a given input field is used a high percentage of times by a certain group of users thus causing the analyzer to update the rule s being executed and or stream to impose the layout requirements for that field to effect its higher placement on any web pages on which it appears for those group of users. While such a positioning requirement for that field could potentially be imposed directly by a layout requirement defining rule placed in the rules base at development time the field s frequent usage might not be apparent until production time when actual users of applications begin entering data into that field.

Similarly reference to the transactional database may inform the analyzer that there is a correlation between two fields e.g. a required and non required field on a user interface such that a particular field e.g. a non required field is populated 85 of the time when another field e.g. a required field is populated. This may cause the analyzer to update the rule s being executed and or stream generated therefrom to impose the layout requirements for those two fields to be positioned next to each other on a user interface. While such a positioning requirement for those fields could potentially be imposed directly by a layout requirement defining rule placed in the rules base at development time the correlation between the two fields usage might not be apparent until production time when actual users of applications begin entering data into those fields.

By way of non limiting example reference to and or introspection of one or more other rules in a rules base may inform the analyzer that a given input field or display field appears on a report that is defined by those rules and is viewed daily by the CEO. This again may cause the analyzer to update the rule s being executed and or stream to impose the layout requirements for that field to effect its higher placement on any user web pages on which it appears. Again while such a positioning requirement for that field could potentially be imposed directly by a layout requirement defining rule placed in the rules base at development time the field s appearance on the CEO s daily report might not be evident to the designers of the rule s being executed during their development.

Similarly reference to and or introspection of one or more other workflow and or decisioning rules in rules base may inform the analyzer that the value for a given input field is used as part of a decision making criteria in a workflow defined by the other rules. This again may cause the analyzer to update the rule s being executed and or stream to impose the layout requirements for that field to effect its marking editing as a required field on any user web pages on which it appears. Again while such a formatting requirement for that field could potentially be imposed directly by a layout requirement defining rule placed in the rules base at development time the use of the field s value in the workflow and or decision making might not be evident to the designers of the rule s being executed during their development.

It will be appreciated that even though the discussion above focuses on the analyzer s use of any of rules rules base transactional data base the language database and the context registry for information that may inform analysis for aspects in steps of the rule being executed and or stream in other embodiments the analyzer may instead or in addition access log files or other data e.g. stored on digital data processors on any of and related to the results of previous analyses performed by the analyzer . By way of non limiting example if a particular field was previously deemed to be a high priority and or a required field in a particular context the analyzer may log and or store that result in any of steps i ii and . Thus the analyzer can simply refer to that previously stored logged result and the context registry for any subsequent analyses of rule s being executed and or stream that include that field.

It will also be appreciated that the occurrence of any of the alternatives a d after the analysis in any of steps will depend upon a variety of factors. By way of non limiting example step d may be performed without step c in situations where a user is testing and or developing a user interface in the off line mode discussed above. In this scenario a user may only want to modify the markup language stream and examine the result e.g. in a web browser before modifying the rule that is being analyzed. Step d can thus be performed iteratively e.g. sometimes in combination with steps a and or b without step c to allow a developer to make changes to the markup stream examine the result s of those changes make further changes to the markup examine the new changes etc. After the user developer has fined tuned the changes through this iterative process the user developer may then decide to make and store the rule change s which reflect the fine tuned markup via step c .

Other factors that may influence the occurrence of any of the alternatives a d after the analysis in any of steps include security privileges permissions related to viewing notifications making modifications and or access to other workflows applications that are in communication with the analyzer . For example the security permissions privileges of a user may only allow that user to see whether there are any notifications of non conformance via step a and or identified modifications via step b but not to implement some or all of such identified modifications through steps c and or d . Alternatively a user may have permission to make markup modifications pursuant to step d but not to authorize rule changes via step c or vice versa.

In another embodiment a user may have the appropriate security privileges permissions to perform any of steps c and d but may still be unable to do so due to various reasons. For example the rule and or markup being analyzed may be at least temporarily not modifiable due to it being reviewed executed modified or otherwise used by another user at the time that the user is attempting to perform any of modification steps c and d . In some such cases a task list of modifications pursuant to the notifications in step b may be created and placed in a queue for implementation when the rule becomes available for modification or some time afterwards .

As previously mentioned such task list generation and or performance of any of steps a d may be performed by the analyzer in conjunction with another application s e.g. issue tracking or project management application that is in communication with the analyzer . By way of non limiting example such an application s may comprise workflows processes e.g. defined by some of the rules that would allow for routing reviewing authorizing implementing and otherwise managing any of the modification tasks generated in the application as a result of steps c and or d . Still other variations in the type of functionality of such applications in conjunction with the analyzer are possible.

