---

title: Privacy setting metadata for application developers
abstract: Privacy setting metadata for application developers is described, including receiving, from a user, a request to submit an application; requesting, from the user, identification of one or more permissions and information associated with the one or more permissions; receiving the application, the one or more permissions, and the information associated with the one or more permissions, wherein the one or more permissions are associated with one or more functions of the application; storing the application, the permissions, and the information associated with the permissions; receiving a request to install the application to a device of another user; providing the application, the one or more permissions, and the information associated with the one or more permissions to the device; and receiving, from the device, one or more consents to the one or more permissions, the one or more consents indicate activation of the one or more functions of the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09230134&OS=09230134&RS=09230134
owner: GOOGLE INC.
number: 09230134
owner_city: Mountain View
owner_country: US
publication_date: 20140117
---
The subject matter discussed herein relates generally to providing an application and more particularly to privacy setting metadata for application developers.

A software developer writes or develops for example an application also referred to as an app for associating users having a common interest. The app needs to access a wide variety of data about users of the app such as a user s name phone number location profile info etc. which are crucial for making the associate between the users. However there is no mechanism for the developer to tell users who install the app why the data are needed and to obtain meaningful permissions or consents from the users to gather and or use the data.

In some development platforms such as but not limited to the Android platform a developer may describe the functionality and requirements of an application using predefined categories provided in that platform e.g. using the Manifest.permission class . When the application is compiled a separate file e.g. AndroidManifest.xml is generated. At installation both the app and the associated AndroidManifest.xml need to be present. The predefined categories selected by the developer at the time of development are presented to users who install the app.

However the predefined categories may be too broad and it may not be possible for the installing user to be informed that only a portion of the category is applied. For example even if the application needs to only take screenshots and applies filters to the screenshots a predefined category may indicate that the app needs to Access all of your data on the web which includes more than the screenshots. A prospective user may be influenced by such a broad category and refrain from installing or using the application.

The subject matter includes methods for implementing privacy setting metadata for application developers including receiving from a user a request to submit an application requesting from the user identification of one or more permissions and information associated with the one or more permissions receiving the application the one or more permissions and the information associated with the one or more permissions wherein the one or more permissions are associated with one or more functions of the application storing the application the permissions and the information associated with the permissions receiving a request to install the application to a device of another user providing the application the one or more permissions and the information associated with the one or more permissions to the device and receiving from the device one or more consents to the one or more permissions the one or more consents indicate activation of the one or more functions of the application.

The methods are implemented using one or more computing devices and or systems. The methods may be stored in computer readable media.

The subject matter described herein is taught by way of example implementations. Various details have been omitted for the sake of clarity and to avoid obscuring the subject matter. The examples shown below are directed to structures and functions for implementing privacy setting metadata for application developers.

A process of releasing an application e.g. application to app provider may include the app developer issuing a request e.g. via a website of app provider to submit the application to app provider e.g. app developer may be registered as a user to app provider before submitting application . App provider may provide a user interface UI for app developer to provide information and . Information may include one or more fields e.g. first name and a description of what the fields are intended to be used by the application . Information may describe or identify the permissions or consents sought or requested. An example of UI is shown in .

In some implementations there may be other types of consents or permissions such as per use permissions conditional permissions time based permissions etc. For example information which identifies consent types and may include a per user consent not shown which means the user of application may be asked for permission again each time a certain event occurs e.g. each time the user s first name is shared with another new user . Information may include a conditional permission not shown which means the consent is valid only if one or more conditions are met. Information may include a time based permission which means the permission is only valid within one or more time periods. One or more of the time periods may be defined by the app developer or user of application .

The labels of fields and may refer to atomic information a subcategory of information and or a category of information. As used herein the term atomic information refers to a piece of information that is in the smallest form based on use by an application. For example a person s name e.g. a field labeled name may be an atomic information if an application that uses and or generates collectively referred to as uses the name field uses it as a whole and does not break down the name into parts such as first name and last name i.e. this application does not use just a first name or a last name of the name . In another application that may use a first name and or a last name of a user the name field with respect to that application may be a subcategory of information or a category of information because a name includes a first name and a last name that may be used separately.

The atomic information in some fields e.g. the fields labeled network access and camera etc. may be defined by the description of the fields e.g. description and or . For example a camera of a device has many uses e.g. capture images for storage detecting light capturing text capturing codes etc. . The description describes a limited use e.g. to read a product identifier and or a use under a condition e.g. when the Get Info button is pressed for the field of Device camera . The description defines the field as atomic information or subcategory of information.

When the user of UI e.g. app developer selects the submit button or the like identification of one or more permissions e.g. and and information associated with the one or more permissions e.g. and is sent to app provider as metadata . Metadata is data of or about permission s e.g. P P . . . Pn and information e.g. I I . . . In . App developer may use UI to provide updated information . For example a different version of application may need one or more new consents. App developer app developer when requests to upload the new version of application may provide the updated information associated with the new version of application .

Referring back to UI sends information metadata to app provider . If application has not been sent or uploaded to app provider it may be done so at this time or at any time e.g. before during or after metadata is sent to app provider . App provider store the application and associated metadata .

App provider may be a service provider that provides one or more applications to users for a fee or no fee. If fees are collected e.g. for application a portion or all of the collected fees may be provided to the developers e.g. app developer . When a prospective user or an existing user referred here as app user requests to view or download application e.g. for installing on device app provider provides metadata to device for presenting to app user .

Device may present metadata in a UI . UI is described further in below. Consent or permission information e.g. consent types and may be presented using widgets e.g. check boxes for Yes No permissions for app user to provide or enter his or her consents or permission. Device may not need to provide consents to all information described in metadata . When one or more consents that are necessary are to be given by device e.g. checking the check boxes the consents e.g. C C . . . Cn are transmitted or sent to app provider . App provider determines that all the necessary consents are received from and then provides application to device e.g. for installation .

In some implementations application may be provided earlier e.g. when metadata is sent to device . Metadata may indicate the necessary consents. Device may determine that the necessary consents are entered by app user before installing application . In some implementations application may provide functionalities based on the given consents. For example one or more functions of application may be enabled or disabled based on the present or absent of consents associated with the functions.

In some implementations app provider may include a database that stores information that indicates which applications and which versions of the applications have been provided to which users and or which devices. Database may include which consents have been given by which users for which devices features list of devices etc. Information stored in database may be used to determine that some installations are subsequent installations installation in additional devices or update installations collectively referred to as subsequent installations . In subsequent installations app provider may provide a subset of the metadata based on or catered to a subsequent installation.

For example database may indicate that device is a second device of app user who has previously installed application to another device not shown . Device has a new feature e.g. additional processor a different processor a camera additional camera a new capability such as communication capability etc. that another device does not have. Since the another device does not have for example a camera when metadata was sent to the another device the field of Device camera and corresponding description and consent type were not sent to the another device and were not presented to app user to request his or her consent to using the camera of the another device because it does not have a camera.

However when a subsequent installation request is received by app provider which may receive indication of a camera or determine that device has a built in camera metadata sent to device includes the field of Device camera and corresponding description and consent type . If consent to the use of the camera is necessary the consent is provide and returned e.g. in consents to app provider before application can be installed on device granting application to use the built in cameral of device for the purpose described in .

Referring back to a user e.g. app user may use another device e.g. a device that application may not have been developed to run on such as a laptop device to view information about application provide consents for device application and or store application for installing on device through for example a link or path . When a request for application or information about application is received by app provider from device metadata may be provided. Application may also be provided depending on implementations.

If device is implemented to allow user app user to provide consents UI e.g. similar to UI may be presented with metadata . Likewise widgets may be to allow app user to enter consents which are sent to app provider . Before providing metadata to device input describing device or another device on which application is intended to be installed may be requested by and or provided to app provider app provider so that appropriate set of metadata may be provided to device e.g. providing information about a device camera and gather consent to use the device camera if the device intended to install application has a camera .

In other implementations as described herein app provider at block may provide UI to gather or request from app developer identification of one or more permissions and information associated with the one or more permissions e.g. information or . At block app provider receives the application the one or more permissions and the information associated with the one or more permissions. In some implementations application may be sent or uploaded to app provider separately from the information .

One or more permissions may be associated with one or more functions of the application . If a function is necessary function e.g. no option to disable or not use the function then a permission or consent to operate that function is necessary. If the necessary consent is not given to a user e.g. app user application is not made available to download not allowed to be installed or not allowed to be executed until the necessary consent is given and received e.g. by app provider . If a function is not a necessary function e.g. the function may be enabled or disabled the presence or absence of a permission or consent to operate that function renders the function available enabled or not available disabled respectively.

At block app provider may store the application the one or more permissions and the information associated with the one or more permissions. In some implementations app provider may manage application without storing the application. For example when all necessary consents are received app provider may indicates to app developer or another party not shown to provide application to app user .

In some examples process may be implemented with different fewer or more blocks. Process may be implemented as computer executable instructions which can be stored on a medium loaded onto one or more processors of one or more computing devices and executed as a computer implemented method.

In some examples process may be implemented with different fewer or more blocks. Process may be implemented as computer executable instructions which can be stored on a medium loaded onto one or more processors of one or more computing devices and executed as a computer implemented method.

An example of one or more devices may be computing device described below in . Devices may include but are not limited to a computer e.g. a laptop computing device a mobile device e.g. smartphone or tablet a television a device associated with a vehicle a server computer computing devices storage devices and .

In some implementations devices may be considered user devices e.g. devices used by app developer and or app user . Devices may be devices associated with service providers e.g. used by service providers to provide services provide applications and or store applications and data such as application metadata records consents etc. . Devices may be used by app developer and or app provider .

For example device may be device in . A user e.g. app user may use device to request application from app provider using one or more devices . App provider may provide application to app user on device as described above.

Computing device can be communicatively coupled to input user interface and output device interface . Either one or both of input user interface and output device interface can be a wired or wireless interface and can be detachable. Input user interface may include any device component sensor or interface physical or virtual that can be used to provide input e.g. buttons touch screen interface keyboard a pointing cursor control microphone camera braille motion sensor optical reader and or the like . Output device interface may include a display television monitor printer speaker braille or the like. In some example implementations input user interface and output device interface can be embedded with or physically coupled to the computing device . In other example implementations other computing devices may function as or provide the functions of input user interface and output device interface for a computing device .

Examples of computing device may include but are not limited to highly mobile devices e.g. smartphones devices in vehicles and other machines devices carried by humans and animals and the like mobile devices e.g. tablets notebooks laptops personal computers portable televisions radios and the like and devices not designed for mobility e.g. desktop computers other computers information kiosks televisions with one or more processors embedded therein and or coupled thereto radios and the like .

Computing device can be communicatively coupled e.g. via I O interface to external storage and network for communicating with any number of networked components devices and systems including one or more computing devices of the same or different configuration. Computing device or any connected computing device can be functioning as providing services of or referred to as a server client thin server general machine special purpose machine or another label.

I O interface can include but is not limited to wired and or wireless interfaces using any communication or I O protocols or standards e.g. Ethernet 802.11x Universal System Bus WiMax modem a cellular network protocol and the like for communicating information to and or from at least all the connected components devices and network in computing environment . Network can be any network or combination of networks e.g. the Internet local area network wide area network a telephonic network a cellular network satellite network and the like .

Computing device can use and or communicate using computer usable or computer readable media including transitory media and non transitory media. Transitory media include transmission media e.g. metal cables fiber optics signals carrier waves and the like. Non transitory media include magnetic media e.g. disks and tapes optical media e.g. CD ROM digital video disks Blu ray disks solid state media e.g. RAM ROM flash memory solid state storage and other non volatile storage or memory.

Computing device can be used to implement techniques methods applications processes or computer executable instructions in some example computing environments. Computer executable instructions can be retrieved from transitory media and stored on and retrieved from non transitory media. The executable instructions can originate from one or more of any programming scripting and machine languages e.g. C C C Java Visual Basic Python Perl JavaScript and others .

Processor s can execute under any operating system OS not shown in a native or virtual environment. One or more applications can be deployed that include logic unit application programming interface API unit input unit output unit app management permission management device management and inter unit communication mechanism for the different units to communicate with each other with the OS and with other applications not shown . For example app management permission management and device management may implement one or more processes or UI shown and described in . The described units and elements can be varied in design function configuration or implementation and are not limited to the descriptions provided.

In some example implementations when information or an execution instruction is received by API unit it may be communicated to one or more other units e.g. logic unit input unit output unit app management permission management and device management . For example when app management detects a request to upload an application e.g. application from information receive through input unit permission management is called by API unit to provide UI to gather metadata . When device management receives a request to view download or install application through input unit device management though output provides information about application and metadata . Device management may wait for consents to be received before providing application device. In some implementations device management may determine that consents are all the necessary consents before providing application to the requesting device.

In some instances logic unit may be configured to control the information flow among the units and direct the services provided by API unit input unit output unit app management permission management and device management in some example implementations described above. For example the flow of one or more processes or implementations may be controlled by logic unit alone or in conjunction with API unit .

In situations in which the systems discussed here collect personal information about users or may make use of personal information the users may be provided with an opportunity to control whether programs or features collect user information e.g. information about a user s social network social actions or activities profession a user s preferences or a user s current location or to control whether and or how to receive content from the content server that may be more relevant to the user. In addition certain data may be treated in one or more ways before it is stored or used so that personally identifiable information is removed. For example a user s identity may be treated so that no personally identifiable information can be determined for the user or a user s geographic location may be generalized where location information is obtained such as to a city ZIP code or state level so that a particular location of a user cannot be determined. Thus the user may have control over how information is collected about the user and used by a content server.

Although a few example implementations have been shown and described these example implementations are provided to convey the subject matter described herein to people who are familiar with this field. It should be understood that the subject matter described herein may be implemented in various forms without being limited to the described example implementations. The subject matter described herein can be practiced without those specifically defined or described matters or with other or different elements or matters not described. It will be appreciated by those familiar with this field that changes may be made in these example implementations without departing from the subject matter described herein as defined in the appended claims and their equivalents.

