---

title: Mobile device based proxy for browser-originated procedures
abstract: An example method of facilitating communication between a mobile device positioned within an internal network and a target peer includes intercepting, at a proxy executing on a mobile device, a communication to initiate a real-time communication connection with a target peer. The mobile device is coupled to a cellular network, and the internal network is separated from one or more external networks by network address translation (NAT). The example method also includes determining whether the target peer is reachable via the cellular network. The example method further includes when it is determined that the target peer is reachable via the cellular network, sending over the cellular network to the target peer a request to communicate in a first protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09516575&OS=09516575&RS=09516575
owner: QUALCOMM INCORPORATED
number: 09516575
owner_city: San Diego
owner_country: US
publication_date: 20140612
---
This application claims the benefit of priority from U.S. Provisional Patent Application No. 61 877 914 filed Sep. 13 2013 which is incorporated by reference.

The present disclosure generally relates to network communications and more particularly to network communications at a mobile device.

WebRTC Web Real Time Communications is an open project that aims to add real time communications capabilities to Web browsers via a JavaScript Application Programming Interface API . WebRTC offers web application developers the ability to write rich real time multimedia applications on the Web without requiring plugins downloads or installs. For example WebRTC may enable peer to peer real time communication between browser based applications regardless of the relative location of the target peers e.g. on the same device in the same private network both behind distinct firewalls etc. .

WebRTC adopts a technique called Interactive Communication Establishment ICE which allows for target peers in an Internet Protocol IP based communications session to discover the best possible media path between them. This may be useful in the sense that an ICE implementation is a turnkey solution for Network Address Translation NAT traversal that requires no prior knowledge of the type of NATs or firewalls that may lie between the two target peers.

ICE leverages the Session Traversal Utilities for NAT STUN and Traversal Using Relays Around NAT TURN protocols. STUN is an IP based protocol by which a target peer can discover whether it is behind a NAT traversal box. By contacting a known server in the open Internet and receiving a response back the target peer can compare its own IP address with the IP address that the STUN server detected as the originating IP address for the STUN message. In this manner the target peer can quickly determine if it is behind a NAT.

In an example a STUN request message is sent by one of the target peers also known as a peer to a known STUN server on the public Internet. The STUN server s IP address may be known a priori by the peer or is discoverable e.g. with the help of a Domain Name System DNS service . When the STUN server receives the STUN request from the peer the STUN server sends back a STUN response message that includes the originating IP address. If a NAT was present between the peer and the STUN server e.g. the peer is on a private network the IP address in the STUN response message will not match the peer s IP address on its private network. This kind of messaging only partly solves the problem of NAT traversal. A NAT may be server reflexive in that a one to one mapping exists between the peer s private IP address and the IP address provided by the NAT on behalf of the peer to all destinations in the public Internet. Many NATs however are symmetric there is a unique IP address mapping for the peer for each of its destination IP addresses on the public Internet. Therefore a mechanism that moved beyond simple IP address discovery was needed. As a result the TURN protocol was developed.

TURN solves the problem of a NAT ed peer receiving traffic from any other target peer on the Internet by setting up a TURN server on the public Internet that relays traffic to and from the NAT ed peer. For example the originating peer initially sends a TURN Allocate request usually without necessary fields to ensure message integrity. In response the TURN server sends an Allocate Error message with necessary values for future messaging e.g. nonce for hashing after which the originating peer can resend the TURN Allocate message with the necessary message integrity and receive a TURN Allocate response where the NAT ed peer can not only determine its presence behind a NAT but also be allocated a relayed IP address from the TURN server that can be used to set up communication with other peers.

ICE provides a framework around the use of STUN and TURN so that two peers can negotiate the best possible media path between them in the presence of NATs. Based on each peer s detection of IP addresses and ports that can be used to contact them candidate pairs of IP addresses ports are tested and ranked in terms of ICE client specified priority. The ICE standard provides an example algorithm for prioritization. As a result ICE defines an offer answer mechanism for negotiating the parameters of the communication session between peers based on a protocol e.g. Session Description Protocol SDP .

This disclosure relates to network communications. Methods systems and techniques for facilitating communication for a mobile device are provided.

According to an embodiment a method of facilitating communication between a mobile device positioned within an internal network and a target peer includes intercepting at a proxy executing on a mobile device a communication to initiate a real time communication connection with a target peer. The mobile device is coupled to a cellular network and the internal network is separated from one or more external networks by network address translation NAT . The method also includes determining whether the target peer is reachable via the cellular network. The method further includes when it is determined that the target peer is reachable via the cellular network sending over the cellular network to the target peer a request to communicate in a first protocol.

According to another embodiment a system for facilitating communication between a mobile device positioned within an internal network and a target peer includes an intercept module executable on a mobile device. The internal network is separated from one or more external networks by network address translation NAT and the mobile device is coupled to a cellular network. The intercept module intercepts a communication to initiate a real time communication connection with a target peer. The system also includes a communication module executable on the mobile device. The communication module determines whether the target peer is reachable via the cellular network and when it is determined that the target peer is reachable via the cellular the communication module network sends over the cellular network to the target peer a request to communicate in a first protocol.

According to another embodiment a computer readable medium has stored thereon computer executable instructions for performing operations including intercepting at a proxy executing on a mobile device a communication to initiate a real time communication connection with a target peer the mobile device being coupled to a cellular network determining whether the target peer is reachable via the cellular network and when it is determined that the target peer is reachable via the cellular network sending over the cellular network to the target peer a request to communicate in a first protocol.

According to another embodiment an apparatus for facilitating communication between a mobile device positioned within an internal network and a target peer includes means for intercepting a communication from an originating peer at a mobile device to initiate a real time communication connection with a target peer. The mobile device is coupled to a cellular network and the internal network is separated from one or more external networks by network address translation NAT . The apparatus also includes means for determining whether the target peer is reachable via the cellular network. The apparatus further includes means for when it is determined that the target peer is reachable via the cellular network sending over the cellular network to the target peer a request to communicate in a first protocol.

It is to be understood that the following disclosure provides many different embodiments or examples for implementing different features of the present disclosure. Some embodiments may be practiced without some or all of these specific details. Specific examples of components modules and arrangements are described below to simplify the present disclosure. These are of course merely examples and are not intended to be limiting.

The WebRTC technology currently being standardized enables web developers to establish real time communications in a peer to peer sense between browsers. WebRTC is an application that provides two way real time communications capability between two peers. The current WebRTC specification has a dependency on the ICE standard for traversal of NATs. Given a deployment scenario on a cellular network an ICE session in the context of WebRTC may result in inefficiencies that may affect mobile device battery life and result in unnecessary over the air transactions.

In particular ICE can potentially be problematic particularly when operating in a cellular context and more specifically when interoperating with an IP Multimedia Subsystem IMS enabled core network. For example a potential issue is that the SDP based offer answer mechanism can result in a significant number of over the air messaging transactions that have their own associated costs in terms of cellular network capacity both over the air and within the radio access network RAN . Another potential issue is that many existing Voice over IP VoIP target peers including IMS do not support ICE. Another potential issue is that ICE allows for keep alive mechanisms based on the STUN binding procedure. Application based keep alive mechanisms are well known to have not only network efficiency costs but also can potentially limit the battery life of a mobile device. Another potential issue is that with respect to WebRTC if the user for any reason shuts down the application e.g. the browser then the ICE context may be potentially lost and the offer answer exchange may have to begin afresh. Another potential issue is that ICE offers no efficiencies when both peers are not behind firewalls which is common for handset to hand set communications. Further ICE may still implement a media check even if there is essentially only a single candidate pair. This is a list of non limiting potential issues.

The present disclosure provides techniques for using a proxy executable on a mobile device and associated functionality that intermediates browser originated ICE procedures and leverage services offered by an operator deployed network e.g. presence to ensure efficient communication between WebRTC peers.

For brevity the disclosure may describe WebRTC as being the technology that enables real time communication between applications and ICE as being the technology that connects remote peers using NAT traversal technologies e.g. STUN and TURN but this is not intended to be limiting and it should be understood that other technologies that provide these capabilities are within the scope of this disclosure.

Internal network may be for example a cellular network. Internal network is separated from one or more external networks by network address translation NAT . Mobile devices and are coupled to internal network and may communicate with each and or a target peer located in an external network. Examples of mobile devices are a smartphone personal digital assistant PDA tablet and laptop. Other mobile devices are within the scope of the present disclosure.

System includes a firewall that can be implemented in hardware software or a combination of both. A target peer is illustrated as being behind firewall . A firewall is frequently used to prevent unauthorized Internet users from accessing private networks such as intranets that are connected to for example network .

Network may include various configurations and use various protocols including the Internet World Wide Web intranets virtual private networks wide area networks local networks private networks using communication protocols proprietary to one or more companies cellular and other wireless networks Internet relay chat channels IRC instant messaging simple mail transfer protocols SMTP Ethernet WiFi and HTTP and various combinations of the foregoing. Network may support SIP. In an example network includes a Long Term Evolution LTE network. An LTE network is a wireless broadband technology and has its architecture based on IP.

Firewall is configured to permit or deny network transmissions e.g. to target peer based upon a set of rules and other criteria. All messages entering or leaving the intranet pass through firewall which inspects each message and blocks those that do not meet the specified security criteria. Firewall may have functionality to protect hosts behind the network by implementing NAT functionality. The firewall provides private addresses as defined in RFC 1918 to the hosts protected behind a firewall.

System includes mobile device capable of executing a client application such as a browser and a proxy . Browser may be capable of accessing and displaying webpages on a display of mobile device . Browser may also be capable of voice and video coding and establishing communications in real time with a target application executing on a mobile device. In an example browser and the target application are each browsers executing on a mobile device and the browsers communicate with each other in real time. In such an example the user of mobile device may point the browser to a webpage that enables the user to click on an option provided by the webpage to place a call. A user may point the browser to a webpage by for example typing a uniform resource location URL of the webpage in the address bar of the browser or selecting a hyperlink that causes a server to provide the webpage. The browser may place the call without using a phone line. Rather the browser may establish a connection over network with a target peer to place the call. In an example network is the Internet and browser sets up an IP connection via the Internet to place the call.

In an embodiment browser uses WRTC technology to place the call. As discussed above WRTC uses ICE which may have disadvantages. For example ICE is a heavy protocol and entails the use of multiple back and forth messaging to establish a connection. Proxy may be used to facilitate the communication between mobile device and the target peer such as to optimize the communication to better suit a cellular connection. For example proxy in the WebRTC context may be used to intermediate ICE messaging originating from browser while at the same time establishing connectivity to other target peers that proxy has already detected as being within the operator firewall. Proxy is capable of determining whether mobile device on which proxy is executing is separated from one or more external networks by NAT. In an example proxy does not use ICE to determine whether mobile device is separated from one or more external networks by NAT. Rather proxy may be preconfigured to know that mobile device is separated from one or more external networks by NAT. As such it may be unnecessary for ICE messages to be sent back and forth between mobile device and the target peer.

In an example browser is executing on mobile device and a user points the browser to a website that hosts a WebRTCJavaScriptApp . WebRTCJavaScriptApp may be a JavaScript application that is configured to detect whether proxy is executing on mobile device and to communicate with proxy . In a call Call origination Target s SIP URI is generated from WebRTCJavaScriptApp to proxy and may use the minimum amount of connectivity provided by the browser. For example the browser may provide a pipe with base connectivity to enable WebRTCJavaScriptApp to place the origination call using for example WebSocket or XMLHttpRequest to proxy . Browser may allow WebRTCJavaScriptApp to send packets to and receive packets from proxy and inform WebRTCJavaScriptApp whether the packets were successfully received by proxy .

In an example a website provider is provided with WebRTCJavaScriptApp from a third party e.g. a provider of proxy to enable the functionality of proxy to be realized. If the user of mobile device wants to place a call the user may point browser to the website or be redirected to the website that hosts WebRTCJavaScriptApp . In another example WebRTCJavaScriptApp is preinstalled on mobile device .

WebRTCJavaScriptApp may send the call Call origination Target s SIP URI to detect whether proxy is installed on mobile device . In an example proxy is assigned a pre specified IP address. The pre specified IP address may be an IP address that is reserved for local use on a device e.g. mobile device . In an example the IP address is 127.0.0.1. Proxy may receive a communication requesting whether the proxy resides on mobile device and may send a communication indicating that the proxy resides on mobile device .

In an example when WebRTCJavaScriptApp detects that proxy is installed on mobile device WebRTCJavaScriptApp directly contacts proxy to request its services. WebRTCJavaScriptApp may instruct browser to establish a connection to proxy and to communicate with proxy . In an example WebRTCJavaScriptApp does not inform browser that proxy is executing on the same device as browser . In response to calls received from browser proxy may imitate a valid endpoint as far as browser is concerned as discussed below.

Whether or not proxy is installed on mobile device WebRTCJavaScriptApp may send a call New RTCPeerConnection iceServers url stun 127.0.0.1 3478 to browser to initialize an RTCPeerConnection object. Once the RTCPeerConnection object has been initialized WebRTCJavaScriptApp may send another call createOffer to browser . Browser may then use ICE to negotiate the best possible media path between mobile device and the target peer in the presence of NATs.

As illustrated in a circle browser sends a call TurnAllocateRequest no message integrity to proxy and proxy receives the call TurnAllocateRequest no message integrity . Proxy sends a response TurnAllocateError includes nonce to browser and browser receives the response TurnAllocateError includes nonce . Browser sends another call TurnAllocateRequest incl.message integrity to proxy and proxy receives call TurnAllocateRequest incl.message integrity . Proxy sends a response TurnAllocate sever reflexive address Relayed IP and port and browser receives the response TurnAllocate sever reflexive address Relayed IP and port .

When browser performs the ICE messaging calls in circle browser expects valid return signaling responses from proxy . The calls in circle illustrate wasteful TURN messaging that can be masked by proxy . In an embodiment proxy receives the TURN messages but does not send them over the air. Proxy may send the minimum amount of information over the air to set up the call. In an embodiment proxy receives calls in the TURN protocol from browser to send to the target peer and discards one or more of these calls. Rather proxy may determine to send the target peer a SIP invite to initiate real time communication with the target peer.

In an example proxy sends a request to have the WebRTC session point to proxy so that it may eliminate the wasteful signaling by for example sending a SIP invite to the target peer and communicating with the target peer using SIP. The user may invoke an API in browser to set up the WebRTC connection e.g. peer connection in standards and have the WebRTC session point to for example IP address 127.0.0.1 so that the ICE messaging goes through proxy . This may be advantageous because proxy provides optimizations that browser may be unable to provide. For example browser may be unable to determine how mobile device is coupled to the network e.g. via a cellular connection or WiFI and also may be unable to determine whether mobile device is behind a NAT. Thus rather than use ICE so that two peers can negotiate the best possible media path between them proxy may send from the originating peer a SIP invitation to the target peer.

Proxy may intercept a communication from browser to the target peer to initiate a real time communication connection. Proxy may listen on mobile device for these types of communications. Proxy may determine whether the target peer is reachable via cellular network . In an example the target peer is a subscriber to cellular network and proxy may be able to determine whether the target peer is reachable via cellular network because proxy is on the cellular network and an operator of the cellular network has a presence service that proxy uses. When it is determined that the target peer is reachable via the cellular network proxy may send over the cellular network to the target peer a request to communicate using a protocol different from ICE. In an example the protocol is SIP although other signaling communications protocols may be used.

When WebRTCJavaScriptApp detects that proxy is installed on mobile device WebRTCJavaScriptApp may want to set up a call using WebRTC with the target peer. In an example WebRTCJavaScriptApp has the target peer s number and sends the number through the web socket using the Call origination call. Proxy may detect whether the target peer is on network . If target peer is on network proxy may route messages directly to the target peer. As discussed proxy may communicate with the target peer using SIP rather than sending the target peer the TURN messages illustrated in circle .

In an embodiment proxy registers with a SIP registry. An operator SIP registrar can be leveraged to provide an early call acceptance rejection and can be used to trigger network initiated paging of the target peer if it is currently unregistered. The call origination can leverage operator provided peer credentials e.g. SIP uniform resource identifier URI . As discussed proxy may mimic a TURN server and as a result prevent unnecessary TURN signaling or ICE connectivity checks from going over the air. In this way proxy may avoid sending unnecessary data over the air thus optimizing the battery life of the battery powering mobile device .

Further periodic ICE connectivity checks can also be used as a keep alive mechanism. Application enabled in this case browser enabled keep alive mechanisms on mobile devices have known issues based on their implementation. Proxy may modulate and even block ICE based keep alive data. In an example proxy determines a rate of keep alive messages being sent to the target peer and modulates the rate of keep alive messages being sent to the target peer. Modulating the rate may include intercepting one or more keep alive message and discarding one or more of the intercepted keep alive messages.

The target peer may respond to proxy by accepting or rejecting the SIP invitation. The target peer may or may not be running a proxy similar to proxy . If the target peer is not running a proxy similar to proxy messages may be routed to the application running on the target peer and proxy may communicate with the application running on the target peer. If the target peer is running a proxy proxy and the other proxy running on the target peer may communicate directly with each other and may drop almost all messages coming out of their corresponding browsers. The two proxies may communicate via SIP messaging.

Proxy may discard messages based on the information it has about the target peer. For example when the target peer is located outside of the firewall proxy may not be able to provide as much efficiency as that described above. When the target peer is located outside of the firewall proxy may not know how to reach the target peer directly. Accordingly proxy may send TURN messages to determine how to reach the target peer e.g. determine what IP address is being broadcast outside of the firewall to that target peer and set up a relay channel outside of the firewall to reach the target peer. At worst proxy may simply pass along ICE messaging to peers which may occur if the target peer is outside of the operator firewall. Inefficiencies exist with ICE such that IMS core network capabilities e.g. peer presence detection can be leveraged while limiting the browser originated traffic going over the air.

Further when it is determined that the target peer is not reachable on the cellular network proxy sends to the target peer a request to communicate using ICE. For example the target peer may be roaming.

In another example when WebRTCJavaScriptApp detects that proxy is not installed on mobile device WebRTCJavaScriptApp establishes a WebRTC connection with browser without taking advantage of any proxy to facilitate communications. In such an example browser may send the particular noted calls and receive the particular noted calls as illustrated in circle . WebRTCJavaScriptApp may receive a message from browser that WebRTCJavaScriptApp is unable to set up a connection with an object at for example IP address 127.0.0.1 and based on this message WebRTCJavaScriptApp may determine that proxy is not installed on mobile device .

As discussed above and further emphasized here are merely examples which should not unduly limit the scope of the claims.

Method includes blocks . In a block at a proxy executing on a mobile device a communication to initiate a real time communication connection with a target peer is intercepted the mobile device being coupled to a cellular network. In an example proxy is executing on mobile device and intercepts a communication to initiate a real time communication connection with a target peer where mobile device is coupled to a cellular network.

In a block it is determined whether the target peer is reachable via the cellular network. In an example proxy determines whether the target peer is reachable via the cellular network. In a block when it is determined that the target peer is reachable via the cellular network a request to communicate in a first protocol is sent over the cellular network to the target peer. In an example when it is determined that the target peer is reachable via the cellular network proxy sends over the cellular network to the target peer a request to communicate in a first protocol.

It is also understood that additional processes may be performed before during or after blocks discussed above. It is also understood that one or more of the blocks of method described herein may be omitted combined or performed in a different sequence as desired

In an embodiment input device and a power supply are coupled to system on chip device . Moreover in an embodiment as illustrated in display input device speaker microphone wireless antenna and power supply are external to system on chip device . Each of display input device speaker microphone wireless antenna and power supply may be coupled to a component of system on chip device such as an interface or a controller. The user of wireless device may communicate with another user by speaking into microphone or seeing the other user via display .

Those of skill would further appreciate that the various illustrative logical blocks configurations modules circuits and steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks configurations modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present disclosure.

The steps of a method described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in random access memory RAM flash memory read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM registers hard disk a removable disk a compact disc read only memory CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an application specific integrated circuit ASIC The ASIC may reside in a computing device or a user terminal. In the alternative the processor and the storage medium may reside as discrete components in a computing device or user terminal.

The previous description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the disclosed embodiments. Various modifications to these embodiments will be readily apparent to those skilled in the art and the principles defined herein may be applied to other embodiments without departing from the scope of the disclosure. Thus the present disclosure is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope possible consistent with the principles and novel features as defined by the following claims. Thus the present disclosure is limited only by the claims.

