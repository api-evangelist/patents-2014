---

title: Systems and methods for detecting component rotation within a communication assembly
abstract: Systems and methods for detecting component rotation within a communication assembly are provided. In certain embodiments, a system includes a module; an adapter block that includes multiple front ports and multiple rear ports configured to receive an optical connector; a managing entity configured to control port identification for the front and rear ports; and a circuit board mounted to the adapter block, wherein the circuit board comprises multiple front contact assemblies and multiple rear contact assemblies, wherein each front port is associated with a front contact assembly and each rear port is associated with a rear contact assembly, wherein when a rear contact assembly is electrically coupled to a connector, the connector generates an event that is sent to the managing entity, whereupon the managing entity remaps the port identification for the front and rear ports.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09578401&OS=09578401&RS=09578401
owner: CommScope Technologies LLC
number: 09578401
owner_city: Hickory
owner_country: US
publication_date: 20140523
---
This application claims the benefit of U.S. Provisional Patent Application Ser. No. 61 857 850 filed on Jul. 24 2013 which is hereby incorporated herein by reference.

Telecommunications networks typically include numerous logical communication links between various items of equipment. Often a single logical communication link is implemented using several pieces of physical communication media. For example a logical communication link between a computer and an inter networking device such as a hub or router can be implemented as follows. A first cable connects the computer to a jack mounted in a wall. A second cable connects the wall mounted jack to a port of a patch panel and a third cable connects the inter networking device to another port of a patch panel. A patch cord or cable cross connects the two together. In other words a single logical communication link is often implemented using several segments of physical communication media.

Various types of physical layer management PLM systems can be used to track connections made at patch panels and other types of equipment used to make connections in communication networks. Generally such PLM systems include functionality to track what is connected to each port of such equipment trace connections that are made using such equipment and provide visual indications to technicians at such equipment for example by illuminating an LED that is associated with a patch panel or a port thereof .

One exemplary type of PLM system makes use of an Electrically Erasable Programmable Read Only Memory EEPROM or other storage device that is integrated with or attached to a connector on a cable fiber or other segment of communication media. The storage device is used to store information about the connector or cable along with other information. The port or other connector into which the associated connector is inserted is configured to read the information stored in the EEPROM or other storage device when the connector is inserted at that port. One example of such technology includes the QUAREO family of products that are commercially available from TE Connectivity.

Another type of PLM system makes use of so called ninth wire technology. Ninth wire technology makes use of special cables that include an extra conductor or signal path also referred to here as the ninth wire conductor or signal path that is used for determining which port each end of the cables is inserted into. Ninth wire technology can be used with various types of cables such as twisted pair copper cables and optical cables in the latter case using hybrid optical cables that include one or more copper wires that serve as the ninth wire . One example of ninth wire technology includes the AMPTRAC family of products that are commercially available from TE Connectivity.

Another type of PLM system makes use of radio frequency identification RFID tags and readers. With this type of RFID PLM system an RFID tag is attached to or integrated with a connector on a cable fiber or other segment of communication media. The RFID tag is used to store information about the connector or segment of communication media along with other information. The RFID tag can be read after the associated connector is inserted into a corresponding jack or other port using an RFID reader.

PLM systems typically include management software that aggregates the captured information and stores it in one or more databases. One example of such management software is the Infrastructure Configuration Manager ICM software that is commercially available from TE Connectivity.

In addition to information about the connections and cabling used to make them these databases also typically store information about the other equipment used to make the connections. Examples of such equipment include patch panels distribution frames and active networking devices such as switches routers and gateways. Examples of information that is stored in the database about such equipment include information about the make and model of the equipment and where it is installed in the network.

Typically information about where such equipment is installed in the network must be manually entered. This is commonly the case even for intelligent equipment that can be automatically discovered by the PLM management software and queried for its identification information for example serial number and make and model .

For example in one common usage scenario a frame is installed in an equipment room or data center of an enterprise or in a central office of a telecommunication service provider. The frame is designed to house multiple sub assemblies that are used to make connections between cables. One example of such a frame is an optical distribution frame ODF into which multiple chassis can be inserted. In this example each chassis is designed to hold multiple adapter packs on one or more trays that slide in and out of the chassis. Each adapter pack comprises multiple optical adapters where each of the optical adapters is configured to optically connect an optical cable terminated with an optical connector such as an LC or SC connector with another optical cable terminated with a corresponding optical connector.

Each optical adapter in each adapter pack can be designated as a port in the adapter pack. When an adapter pack is installed in a chassis there is a chance that the adapter pack may be installed in a reversed position because in certain applications one side of an adapter pack that connects to optical connectors may be indistinguishable from an opposite side that likewise connects to optical connectors. When an adapter pack is in a reversed position the management software may incorrectly identify the different ports in the adapter pack.

As noted above even when the frame includes some type of PLM intelligence that enables the frame to be discovered by PLM management software and queried for identification information associated with that frame for example a serial or other identification number and a make and model location information for that frame typically must be manually entered into the PLM management system for example using a Web interface or mobile application . This is because the frame is typically not aware of where it is located. The PLM management system is then able to associate the manually entered location information with the identification information that the PLM management software was able to automatically discover.

Also whenever a sub assembly for example an optical chassis of the type noted above is installed in the frame location information for that sub assembly must also be manually entered into the PLM management system. The location information for each sub assembly includes where that sub assembly is located for example a physical location and or which frame the sub assembly has been inserted into as well as which slot or position within the frame into which the sub assembly has been inserted.

The location information for each such sub assembly typically must be manually entered even if the sub assembly otherwise includes PLM intelligence that enables the sub assembly to be discovered and queried by the PLM management software for its identification information. This is because the sub assembly typically is not aware of where it is located. The need to manually enter location information for the sub assembly adds an additional manual step to the work flow associated with installing the sub assembly which increases the time required to complete the work flow and which can result in incorrect data being manually entered. Moreover it is common that when a frame is initially deployed less than the maximum number of sub assemblies that could be housed in that frame are actually installed in the frame during the initial deployment. As a result location information for the various sub assemblies in a given frame might be manually entered by different people at different times.

In accordance with common practice the various described features are not drawn to scale but are drawn to emphasize specific features relevant to the exemplary embodiments.

In the exemplary embodiment described here in connection with the assembly comprises an optical distribution frame also referred to here as the optical distribution frame or simply the frame . Also in this exemplary embodiment the sub assemblies comprise chassis that are configured to hold multiple fiber optic modules for example in a 4 Rack Unit RU sized chassis . The sub assemblies are also referred to here as the chassis . The optical distribution frame comprises a frame structure that is configured to have a plurality of positions where a chassis can be inserted into each of the positions. For ease of explanation the frame is shown in as being configured to house up to four chassis and each chassis is shown as being configured to house up to two fiber optic modules however it is to be understood that the frame can be configured to house any number of chassis and each chassis can be configured to house any number of fiber optic modules .

Each optical module is implemented as an optical tray that is configured to hold at least one multiple adapter pack . Each adapter pack comprises multiple optical adapters where each of the optical adapters is configured to optically connect an optical cable not shown terminated with an optical connector such as an LC SC or a Multi fiber Push On MPO connector with another optical cable not shown terminated with a corresponding optical connector. Again for ease of explanation in each module is shown as holding two adapter packs and each adapter pack is shown in as holding up to two adapters however it is to be understood that each module can be configured to hold any number of adapter packs and each adapter pack can be configured to hold any number of optical adapters . Also it is to be understood that the techniques described here can be used for other types of connection devices including for example ones where a single cable or a single cable bundle is broken out in order to be connected to multiple cables or cable bundles such as for example MPO splitter or cassette type devices .

In the exemplary embodiment described herein connection with each of the connectors includes a respective non volatile storage device such as an EEPROM that is used to gather information about the connector or the cable for example identification information for the cable or connector such as serial number or other identifier and make and model . Each module includes a respective module controller . Each module and the corresponding adapter packs and optical adapters are configured so that the module controller for that module can determine whether a connector is inserted into each optical adapter and read the storage device associated with that inserted connector if there is one . For example each optical adapter includes one or more contacts or terminals that come into electrical contact with corresponding contacts or terminals on any connector that is inserted into the adapter where such contacts or terminals are used to electrically couple the storage device for that connector to the corresponding module controller so that the module controller can determine if a connector is inserted into each optical adapter and read information from a storage device attached to such a connector if any . In some applications the data read from the storage device is used to track connections made at the frame . In some applications connectors that include such storage devices are not used and instead connections are tracked by inferring connections using the functionality that determines whether a connector is inserted in each adapter or port. In some applications a combination of the foregoing approaches is used.

Examples of such chassis modules adapter packs and optical adapters are described in the following United States Provisional Patent Applications U.S. Provisional Patent Application Ser. No. 61 761 048 filed on Feb. 5 2013 titled Optical Assemblies with Managed Connectivity U.S. Provisional Patent Application Ser. No. 61 761 034 filed on Feb. 5 2013 titled Optical Assemblies with Managed Connectivity U.S. Provisional Patent Application Ser. No. 61 761 042 filed on Feb. 5 2013 titled Optical Assemblies with Managed Connectivity U.S. Provisional Patent Application Ser. No. 61 761 009 filed on Feb. 5 2013 titled Slidable Telecommunications Tray with Cable Slack Management and U.S. Provisional Patent Application Ser. No. 61 763 347 filed on Feb. 11 2013 titled Slidable Telecommunications Tray with Cable Slack Management . All of the preceding applications are incorporated herein by reference.

Each of the adapter packs contains multiple adapters also known as ports. For example an adapter pack such as adapter pack may have 24 ports divided between two opposing sides of the adapter pack . The adapter pack provides connectivity between optical connectors that may have LC SC Multiple Push On MPO type connectors. In certain implementations for example when the adapter pack provides an LC LC connection an SC SC connection an LC SC connection an MPO MPO connection or the like the opposite sides of the adapter pack may appear identical. Due to the same appearance of the opposite sides of the adapter pack a user may install the adapter pack in a normal position and a reversed position.

To determine whether an adapter pack is installed in a normal position or a reversed position each port in the adapter pack includes at least one general purpose input output GPIO pin. On opposing sides of the adapter pack the GPIO pins in the ports are tied to different voltage levels such that the connectors can determine which side of the adapter pack is connected to the adapters. For example on one side of the adapter pack the GPIO pins are tied to a relatively high voltage level while on the opposite side of the adapter pack the GPIO pins are tied to a low voltage. When a connector connects to a port in the adapter pack the connector uses the voltage level of the GPIO pin to determine if the adapter pack is in a normal position or reversed position.

In at least one exemplary implementation when the adapter pack is in a normal position the connector is connected to a port in the adapter pack where the GPIO pin is providing a high voltage level. As the adapter pack is in the normal position the connector connects to the port in the adapter pack and functions according to normal operations. In contrast when the adapter pack is in a reversed position the connector connects to a port in the adapter pack where the GPIO pin is providing a low voltage level. Because the GPIO pin is providing a low voltage the connector notifies a management entity . For example a connector generates an event that is transmitted to the management entity . Where the management entity reverses the port numbering of the different ports in the adapter pack . Further the GPIO pin can be part of adapter packs in the frame structure .

In a further exemplary implementation a module may be installed in the chassis in either a normal position or a reverse position. Like the adapter packs a module may include a GPIO pin that indicates whether a module is installed in the normal or reverse position. When the module is installed in a normal position there are no events generated through the module GPIO pin that are communicated to the management entity . However when the module is installed in a reverse position the module GPIO pin raises a module event that is communicated to the management entity . Upon receiving a module event indicating that a module is installed in a reverse position the management entity may indicate that the module is in a reverse position to a user or an administrator of the frame . However in at least one exemplary implementation in contrast to the adapter packs the management entity does not remap ports when a module is installed in the reverse position.

In the exemplary embodiment shown in each chassis includes a respective master controller that is electrically coupled to the module controller for each module that is included in that chassis for example using a respective flex circuit interconnect . In this exemplary embodiment the master controller and its associated module controllers are configured to use a master slave scheme for communicating with one another. In such a scheme the master controller serves as the master and each of the module controllers serves as a slave. For example in one implementation of such a scheme each module controller determines when a connector has been inserted into an optical adapter associated with that module controller and reads information from the storage device attached or otherwise associated with that connector. When prompted to do so by the associated master controller each module controller informs the master controller of any state changes for any of the optical adapters associated with that module controller for example that a connector has been inserted or removed from an optical adapter and forwards to the master controller information read from storage devices inserted into optical adapters associated with that module controller .

In the exemplary embodiment shown in each chassis includes an at least one management network interface that can be used to couple the master controller to an IP network that is used for communicating the PLM information described below to a management entity . In an example implementation of such an embodiment the management network interface for each chassis is implemented using an ETHERNET network interface and associated RJ 45 port so that the corresponding master controller can be coupled to the IP network using a CAT 5 or CAT 6 twisted pair copper cable. It is to be understood however that the management network interface can be implemented in other ways.

It is noted that for ease of explanation the IP network is shown using a separate cloud symbol but it is to be understood that the frame chassis and cabling described here can be used to implement a part of the IP network over which the PLM information is communicated. Alternatively the IP network over which the PLM information is communicated can be kept separate from the network that the frame chassis and cabling are a part of.

The management entity is typically implemented as software that runs on a computer that is coupled to the IP network . The management entity is configured to receive information pertaining to various devices and media used to implement the physical layer in the network including but not limited to the chassis and frame and the cables and connectors that make connections there . The physical layer information PLI that is communicated to the management entity includes information about various devices in the network also referred to here as device information as well as information about any segments of physical communication media attached to the ports of those devices also referred to here as media information . The device information includes for example an identifier for each device a type identifier that identifies the device s type and port information that includes information about the device s ports. The media information includes information that is read from storage devices that are attached to various segments of physical communication media.

Examples of media information that can be stored in such storage devices include without limitation an identifier that uniquely identifies that particular segment of physical communication media similar to an ETHERNET Media Access Control MAC address but associated with the physical communication media and or connector attached to the physical communication media a part number a plug or other connector type a cable or fiber type and length a serial number a cable polarity a date of manufacture a manufacturing lot number information about one or more visual attributes of physical communication media or a connector attached to the physical communication media such as information about the color or shape of the physical communication media or connector or an image of the physical communication media or connector and other information used by an Enterprise Resource Planning ERP system or inventory control system. In other embodiments alternate or additional data is stored in such storage devices. For example testing media quality or performance information can be stored in such storage devices. The testing media quality or performance information for example can be the results of testing that is performed when a particular segment of media is manufactured or installed.

The information provided to the management entity can also include information that is manually entered for example using a Web interface that is implemented by the management entity or a mobile application .

The management entity includes or uses a database or other data store not shown for storing the information provided to it. The management entity also includes functionality that provides an interface for external devices or entities to access the physical layer information maintained by the management entity . This access can include retrieving information from the management entity as well as supplying information to the management entity . In this example the management entity is implemented as middleware that is able to provide such external devices and entities with transparent and convenient access to the information maintained by the management entity . Because the management entity aggregates information from the relevant devices in the network and provides external devices and entities with access to such information the external devices and entities do not need to individually interact with all of the devices in the network that provide information to the management entity nor do such devices need to have the capacity to respond to requests from such external devices and entities.

The management entity in this example implements an application programming interface API by which application layer functionality can gain access to the physical layer information maintained by the management entity using a software development kit SDK that describes and documents the API.

More information about physical layer information and the aggregation point can be found in U.S. Provisional Patent Application Ser. No. 61 152 624 filed on Feb. 13 2009 titled MANAGED CONNECTIVITY SYSTEMS AND METHODS and U.S. patent application Ser. No. 12 705 497 filed on Feb. 12 2010 titled AGGREGATION OF PHYSICAL LAYER INFORMATION RELATED TO A NETWORK both of which are hereby incorporated herein by reference.

In the exemplary embodiment shown in the master controller in each chassis is configured to interact with monitor and or control the operation of the components of the chassis for example any buttons or other input components and any light emitting diodes LEDs or other visual indicators incorporated into the body of the chassis itself as well as the module controllers . Also the master controller in each chassis is configured to interact with external entities via the IP network . For example each master controller is configured to implement appropriate functionality and protocols for the master controller to obtain an IP address for example a static IP address that is manually assigned to the master controller via a Web or mobile app interface that is implemented by the master controller or a dynamic IP address that is assigned to the module controller via a Dynamic Host control Protocol DHCP server for the IP network . Also each master controller is configured to implement appropriate functionality and protocols for the master controller to be discovered by and to discover the management entity . This discovery of and by the managing entity can be done manually for example by manually providing an address for the master controller to the managing entity and by manually providing an address for the managing entity to the master controller using for example a Web or mobile app interface implemented by the master controller and the managing entity or automatically for example using a suitable discovery protocol such as the Universal Plug and Play UPnP discovery protocol .

In the exemplary embodiment shown in the frame includes a frame controller unit that is attached to the structure that implements the frame. For example in one implement of such embodiment the frame controller unit is attached to the top of such structure. In other implementations the frame controller unit is located elsewhere in the frame for example on the bottom of the frame structure .

In this embodiment the frame controller unit includes a frame controller and an ETHERNET switch . The frame controller is configured to interact with monitor and or control the operation of the components of the frame controller unit for example the ETHERNET switch as well as any buttons or other input components and any light emitting diodes LEDs or other visual indicators incorporated into the frame controller unit and the frame for example any LEDs that are mounted to the frame itself . Also the frame controller is configured to interact with external entities via the IP network . For example the frame controller is configured to implement appropriate functionality and protocols for the frame controller to obtain an IP address for example a static IP address that is manually assigned to the frame controller via a Web or mobile app interface that is implemented by the frame controller or a dynamic IP address that is assigned to the frame controller via a DHCP server for the IP network . Also the frame controller is configured to implement appropriate functionality and protocols for the frame controller to be discovered by and to discover the management entity . This discovery of and by the managing entity can be done manually for example by manually providing an address for the frame controller to the managing entity and by manually providing an address for the managing entity to the frame controller using for example a Web or mobile app interface implemented by the frame controller and managing entity or automatically for example using a suitable discovery protocol such as the UPnP discovery protocol .

The ETHERNET switch includes two sets of ports and . One set of ports are standard ETHERNET ports in which ETHERNET cables can be easily inserted and removed in connection with the normal operation of the frame . These ports are also referred to here as standard ports . In the exemplary embodiment shown in the ETHERNET switch includes two standard ports one of which is used to connect the ETHERNET switch and the other devices coupled to the other ports and of the switch to the IP network . This standard port is also referred to here as the upstream port . The other standard port is an auxiliary port that can be used for example to couple a wireless access point to the IP network or to daisy chain two or more frames and their associated frame controllers together for example as described further in more detail below .

The ETHERNET switch also includes a second set of ports that are configured so that the ETHERNET cables inserted into those ports cannot be easily removed from the ports in connection with the normal operation of the frame . In the following description these ports are also referred to here as the fixed ports . This can be done using a suitable connector or attachment mechanism.

For each of the fixed ports an ETHERNET cable is inserted into that fixed port that is configured to be inserted into the management network interface of a chassis that is inserted at one particular position in the frame and is configured so that the cable cannot be inserted into the management network interface of a chassis inserted into any of the other positions in the frame . This can be done for example by routing and attaching each ETHERNET cable to the frame so that there is only enough slack at the chassis end of that ETHERNET cable to be able to physically reach the management network interface of a chassis inserted into only one predetermined chassis position in the frame and not be able to physically reach the management network interfaces of chassis inserted into the other chassis positions in the frame .

In this way a relationship between each of the fixed ports and a particular chassis position in the frame is maintained. This relationship can be used to associate any chassis that is directly coupled to that fixed port with that particular chassis position in that particular frame . This relationship can be used to automatically associate location information with a chassis inserted into the frame . This location information for the chassis includes for example the location of the frame and the chassis position within the frame that the chassis is inserted into. The management entity can do this. Also this can be done by the frame controller .

The frame controller is communicatively coupled to the ETHERNET switch so that it is able to communicate with the managing entity via the IP network . Also as is described in more detail below the frame controller is configured to retrieve from the ETHERNET switch information that maps each of the ports and of the switch to MAC addresses that can be accessed via that switch port for example by retrieving the port map table that is maintained by an automatic translation unit ATU or lookup engine in the ETHERNET switch .

In exemplary embodiment shown in power can be supplied to the active components of the chassis and the modules included therein using Power over Ethernet POE . In this embodiment the ETHERNET switch is configured to source POE power over the ports and the and is coupled to a 48 Volt Direct Current DC power source in order to do so. This 48V DC power can also be used to power the active components of the frame including the frame controller unit and any LEDs attached to the frame . It is to be understood however that power can be supplied in other ways.

The auxiliary port can also be used to connect multiple frames and the associated frame controller units in a daisy chain configuration. In such a configuration the upstream port for a first frame is connected directly to the IP network that is is not connected to the IP network through another one of the frames . The upstream port of a second one of the frames is connected to the auxiliary port of the first frame the upstream port of a third one of the frames is connected to the auxiliary port of the second frame and so on. The auxiliary port of the last frame in the daisy chain is not used for implementing the daisy chain and can be used for other purposes for example for connecting a wireless access point to the IP network . The techniques for automatically associating location information with chassis inserted into a frame can be used with such a daisy chain configuration.

Method comprises communicatively coupling the frame controller in the frame to management entity block . In one common usage scenario the frame is installed in an equipment room or data center of an enterprise or in a central office of a telecommunication service provider. In this example the frame controller is connected to the IP network by connecting one of the standard ports of the ETHERNET switch included in the frame controller unit to the IP network using an appropriate cable for example a CAT 5 or CAT 6 cable . Then as described above the frame controller obtains an IP address either manually or automatically using for example DHCP and discovers and is discovered by the management entity again either manually or automatically using UPnP .

Method further comprises automatically providing identification information for the frame to the management entity block . In this example the management entity automatically obtains identification information for the frame for example a serial number and or another identifier assigned to the frame and or make and model information for the frame by using the IP network to query the frame controller for such information. Although the identification information is described here as being provided automatically to the management entity it is to be understood that such information could be provided manually. Also as a part of the information that is provided to the management entity information that identifies which of the fixed ports is associated with which chassis position in the frame is also to be provided to the management entity .

Method further comprises providing location information for the frame to the management entity block . In this example location information for the frame is manually entered and provided to the management entity for example using a Web or mobile app interface implemented by the management entity . This location information can include for example information that specifies a physical location for the frame for example GPS coordinates an address for the building in which the frame is installed and or a number or other identifier for the floor room and or row where the frame is installed . This location information can be specified in any suitable away for example using absolute and or relative coordinates or addresses .

Method further comprises when a chassis is installed in the frame in one of the chassis positions block connecting the management network interface of that chassis to the predetermined fixed port of the ETHERNET switch that is associated with that chassis position block . In this example the master controller obtains an IP address either manually or automatically using for example DHCP and discovers and is discovered by the management entity again either manually or automatically using UPnP . When a chassis is not installed in the frame block the master controller waits for a chassis to be installed in the frame.

Method further comprises automatically providing identification information for the chassis to the management entity block in connection with the chassis being inserted into the frame . In this example the management entity automatically obtains identification information for the chassis for example a serial number and or other identifier assigned to the chassis and module adapter packs and adapters housed within the chassis and any connectors or cables attached thereto and or make and model information for any of the foregoing by using the IP network to query the master controller for that chassis for such information. Also in this example a media access control MAC address associated with the management network interface is also communicated to the management entity .

Method further comprises automatically providing MAC address to port mapping information from the frame controller to the management entity block . In this example the frame controller reads the routing tables maintained by the ATU or lookup engine in the switch in order come up with the MAC address to port mapping information. This MAC address to port mapping information is provided to the management entity via the IP network .

Method further comprises automatically associating location information with the chassis that has just been inserted into a chassis position in the frame block . In this example the management entity does this by using the MAC address for the management network interface of that chassis to determine which frame and which chassis position within that frame the chassis is inserted into. The frame that the chassis is inserted into is the one whose MAC address to port mapping information includes the MAC address for the management network interface . Then the management entity associates the location information for that frame which was manually entered in connection with block with that chassis and module adapter packs and adapters in that chassis and any connectors or cables attached thereto . Also the management entity determines the chassis position within that frame by using MAC address for the management network interface of that chassis and the MAC address to port mapping information to determine which fixed port that chassis is connected to.

In this way location information can be associated with the chassis automatically that is without having to manually enter such location information . This eliminates the manual data entry step that would otherwise be needed each time a chassis is inserted into the frame and the need for such information to be manually entered by different people at different times when the frame is initially deployed with less than all of the chassis positions filled with chassis .

In at least one implementation the adapter block assembly includes a first adapter block A a second adapter block B a joining member and a circuit board . The joining member physically couples the first and second adapter blocks A B together. The circuit board couples to the joined first and second adapter blocks A B. Contact assemblies and circuit board components e.g. memory are mounted to the circuit board . The contact assemblies face towards the adapter blocks A B. The cover extends over at least some of the components of the circuit board .

In a further example a contact assembly is disposed between the adapter block and the circuit board . A front contact assembly corresponds with the front ports and a rear contact assembly corresponds with the rear ports . Contacts of the contact assembly extend through apertures in the adapter block . The contacts are positioned and oriented so that the contact sections align with the contact region of optical connectors received at corresponding ports and . In at least one implementation the contact assembly includes a GPIO for each of the front ports and rear ports . In certain implementations the GPIOs associated with the front ports are tied to a high voltage and the GPIOs associated with the rear ports are tied to a low voltage. When the connector is inserted into a front port the contact region of the connector comes into contact with the GPIO pin in the contact assembly that is associated with a front port . When the connectors are connected to front ports the assembly block is in a normal position. However the assembly block may be placed within a frame assembly in a reversed position such that the connectors are connected to rear ports . When the connector is inserted into a rear port the contact region of the connector comes into contact with a GPIO pin in the contact assembly that is associated with a rear port . When the connectors are connected to rear ports the assembly block is in a reversed position and the connector generates an event that is communicated to a managing entity of the frame assembly that contains the adapter block assembly .

In certain exemplary embodiments when the managing entity receives an event from the connector the managing entity reverses the numbers assigned to the different ports. For example in an adapter block having 24 ports a connector connected into the first front port will cause the managing entity to identify the port as port and incrementally assign numbers to the rest of the ports. However if the adapter block is installed in a reverse position the first port would be port if the adapter block were in the normal position. As described above when the connector is connected to the first rear port the connector sends an event to the managing entity that causes the managing entity to reassign the numbers that identify the ports. When there are 24 ports the managing entity re assigns port to port port to port port to port port to port port to port and so forth. Thus the adapter block may be installed in either the normal position or the reverse position without affecting the identification of the ports. As shown here the adapter block may include different configurations. For example the terms rear and front are merely intended to differentiate the location of the ports on the adapter block assembly.

Method comprises placing a module within a chassis block . In one common usage scenario the module may be a slidable tray that is placed within the chassis . In certain implementations it may be difficult for a user to differentiate the front side of the module from the rear side of the module as the two opposing sides of the module may appear identical. Due to the difficulty in differentiating the different sides of the module the module may be installed in either a reverse position or a normal position within the chassis .

Method also comprises determining if a module event is generated block . In this example the module may include a GPIO pin. When the module is installed in the reverse position the GPIO pin may make contact in such a way that a signal is transmitted to the managing entity where the managing entity interprets the reception of the signal as a generated module event. When the module is installed in the normal position no signal is generated or transmitted to the managing entity. In at least one exemplary implementation method includes notifying the user of the position of the module when a module event is generated block .

Further method comprises placing an adapter block within the module block . In one common usage scenario an adapter block is placed within a module located within the chassis . In certain implementations it is difficult for a user to differentiate the front side of an adapter block from the rear side of an adapter block as the two opposing sides of the adapter block may appear and function substantially identical. Due to the difficulty in differentiating the different sides of the adapter block the adapter block may be installed in either a reverse orientation or a normal orientation.

Method further comprises coupling a connector to a port in the adapter block block . In this example an optical connector is connected to one of the ports in the adapter block . When the adapter block is in the normal position the connector is connected to one of the front ports . In contrast when the adapter block is in the reverse position the connector is connected to one of the rear ports . In certain implementations to correctly route information through the correct connector a managing entity accurately identifies to which port the connector is connected. However if the adapter block is installed in a reverse position the port mappings will be incorrect

Method further comprises determining if an adapter event is generated block . In this example the ports on the adapter block each include a GPIO pin. In the front ports the GPIO pins may be tied to a logically high voltage. In contrast in the rear ports the GPIO pins may be tied to a logically low voltage. When the connector is connected into a front port the connector connects to a GPIO pin that is tied to logical high and does not generate an event. However when the connector is connected into a rear port the connector connects to a GPIO pin that is tied to logical low and generates an event. The connector then transmits the generated event to a managing entity over the chassis.

When an event is generated method further comprises remapping identification of the port block . When a managing entity receives an event due to the adapter block being installed in a reverse position the managing entity remaps the identification for the front ports and rear ports . In at least one example where there are 12 front ports and 12 rear ports ports are front ports and ports are rear ports . When the managing entity receives the generated event the managing entity remaps the ports such that ports are rear ports and ports are front ports . Thus after remapping the ports the managing entity is able to identify the location of the ports within the chassis . When no event is generated block method comprises maintaining the identification of the port block . Thus the managing entity remaps the ports upon the reception of an event when no event is received the managing entity maintains the original port identification.

Example 1 includes a system for detecting component rotation the system comprising a module an adapter block installed in the module the adapter block comprising a plurality of front ports and a plurality of rear ports configured to receive an optical connector a managing entity configured to control port identification for the plurality of front ports and the plurality of rear ports and a circuit board mounted to the adapter block wherein the circuit board comprises a plurality of front contact assemblies and a plurality of rear contact assemblies wherein each front port in the plurality of front ports is associated with a front contact assembly in the plurality of front contact assemblies and each rear port in the plurality of rear ports is associated with a rear contact assembly in the plurality of rear contact assemblies wherein when a rear contact assembly is electrically coupled to a connector the connector generates an event that is sent to the managing entity whereupon the managing entity remaps the port identification for the plurality of front ports and the plurality of rear ports.

Example 2 includes the system of Example 1 wherein the rear contact assembly includes a rear general purpose input output GPIO pin and the front contact assembly includes a front GPIO pin where the rear GPIO pin produces a different signal from the front GPIO pin.

Example 3 includes the system of Example 2 wherein the front GPIO pin produces a logically high voltage and the rear GPIO pin produces logically low voltage.

Example 4 includes the system of any of Examples 1 3 wherein remapping the port identification for the plurality of front ports and the plurality of rear ports comprises reversing the number order of the ports.

Example 5 includes the system of any of Examples 1 4 wherein the managing entity notifies a user that the port identification has been remapped.

Example 6 includes the system of any of Examples 1 5 wherein the managing entity manages a frame assembly containing the adapter block.

Example 7 includes the system of any of Examples 1 6 wherein the adapter block is at least one of the following an LC LC adapter an SC SC adapter and an MPO MPO adapter.

Example 8 includes the system of any of Examples 1 7 wherein the module generates a module event for transmission to the managing entity when the module is installed within a chassis in a reversed position.

Example 9 includes the system of Example 8 wherein the managing entity notifies a user that the module is installed in a reversed position upon the reception of the module event.

Example 10 includes an optical distribution frame comprising a frame structure defining a plurality of positions into which a plurality of chassis can be inserted and a frame controller unit attached to the frame structure the frame structure comprising a frame controller and at least one chassis wherein the at least one chassis includes at least one module including at least one adapter block wherein the adapter block comprises a plurality of front ports and a plurality of rear ports configured to receive an optical connector and a circuit board mounted to the adapter block wherein the circuit board comprises a plurality of front contact assemblies and a plurality of rear contact assemblies wherein each front port in the plurality of front ports is associated with a front contact assembly in the plurality of front contact assemblies and each rear port in the plurality of rear ports is associated with a rear contact assembly in the plurality of rear contact assemblies wherein when a rear contact assembly is electrically coupled to a connector the connector generates an event that is sent to the frame controller a switch communicatively coupled to the frame controller at least one cable attached to the switch and routed and attached to the optical distribution frame so that the at least one cable can be attached to the at least one chassis inserted into a predetermined one of the plurality of positions in the optical distribution frame wherein the frame controller is configured to communicate port mapping information and the event to a management entity that is communicatively coupled to the frame controller whereupon the managing entity remaps the port identification for the plurality of front ports and the plurality of rear ports when the event is received.

Example 11 includes the system of Example 10 wherein the rear contact assembly includes a rear general purpose input output GPIO pin and the front contact assembly includes a front GPIO pin where the rear GPIO pin produces a different signal from the front GPIO pin.

Example 12 includes the system of Example 11 wherein the front GPIO pin produces a logically high voltage and the rear GPIO pin produces logically low voltage.

Example 13 includes the system of any of Examples 10 12 wherein remapping the port identification for the plurality of front ports and the plurality of rear ports comprises reversing the number order of the ports.

Example 14 includes the system of any of Examples 10 13 wherein the managing entity notifies a user that the port identification has been reassigned.

Example 15 includes the system of any of Examples 10 14 wherein the management entity associates location information with the plurality of rear ports and the plurality of front ports.

Example 16 includes the system of any of Examples 10 15 wherein the adapter block is at least one of the following an LC LC adapter an SC SC adapter and an MPO MPO adapter.

Example 17 includes the system of any of Examples 10 16 wherein the at least one module generates a module event for transmission to the managing entity when the at least one module is installed within the at least one chassis in a reversed position.

Example 18 includes the system of Example 17 wherein the managing entity notifies a user that the at least one module is installed in a reversed position upon the reception of the module event.

Example 19 includes a method for detecting component rotation the method comprising placing a module within a chassis placing an adapter block within the module coupling a connector to a port in the adapter block determining whether the module generates a module event determining whether the connector generates an adapter event and when the connector generates the adapter event remapping identification of the port.

Example 20 includes the method of Example 19 wherein the adapter block comprises a plurality of front ports and a plurality of rear ports configured to receive optical connectors and a circuit board mounted to the adapter block wherein the circuit board comprises a plurality of front contact assemblies and a plurality of rear contact assemblies wherein each front port in the plurality of front ports is associated with a front contact assembly in the plurality of front contact assemblies and each rear port in the plurality of rear ports is associated with a rear contact assembly in the plurality of rear contact assemblies wherein when a rear contact assembly is electrically coupled to a connector the connector generates adapter events for transmission to a managing entity.

Example 21 includes the method of Example 20 wherein the rear contact assembly includes a rear general purpose input output GPIO pin and the front contact assembly includes front GPIO pin where the rear GPIO pin produces a different signal from the front GPIO pin.

Example 22 includes the method of Example 21 wherein the front GPIO pin produces a logically high voltage and the rear GPIO pin produces logically low voltage.

Example 23 includes the method of any of Examples 19 22 wherein remapping identification of the port comprises transmitting the adapter event to a managing entity and reversing the order of the ports.

Example 24 includes the method of Example 23 wherein the managing entity notifies a user that the port identification has been reassigned.

Example 25 includes the method of any of Examples 19 24 wherein determining whether the module generates a module event comprises detecting when the module is installed in a reverse position and when the module is installed in a reverse position generating a module event for transmission to a managing entity.

Example 26 includes the method of Example 25 wherein the managing entity notifies a user that the module is installed in the reverse position.

A number of embodiments have been described. Nevertheless it will be understood that various modifications to the described embodiments may be made without departing from the spirit and scope of the claimed invention. Also combinations of the individual features of the above described embodiments are considered within the scope of the inventions disclosed here.

