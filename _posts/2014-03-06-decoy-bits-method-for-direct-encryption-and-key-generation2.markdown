---

title: Decoy bits method for direct encryption and key generation
abstract: A new cryptographic technique is disclosed, called decoy bits method, which can be used to obtain near ideal information theoretic security in both quantum and classical key generation and data encryption, not only for raw security but also under known-plaintext attacks. The technique relates to a method of data encryption by insertion of random bits, called decoy bits, into a data sequence whereby the decoy bits are discarded upon decryption. The positions of the decoy bits are determined by a decoy position determining mechanism. This method can be used in conjunction with other standards of encryption to increase security.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09608802&OS=09608802&RS=09608802
owner: Quantum Advance Technology, Inc.
number: 09608802
owner_city: Glenview
owner_country: US
publication_date: 20140306
---
This application claims the benefit of U.S. Provisional Application No. 61 776 299 filed Mar. 11 2013 which is incorporated by reference in its entirety.

This invention was made with government support under grant number FA9550 09 1 0593 awarded by the Air Force Office of Scientific Research. The government has certain rights in the invention.

In current practice of data encryption and key generation which is based on mathematical properties of classical data there is no information theoretic security ITS under known plaintext attacks KPA by an adversary Eve or even just for raw security before the generated key K is used in public key systems. Instead security is based on the computational complexity of obtaining the correct answer on a mathematical problem related to the cryptographic protocol employed. Such complexity based security CBS may be insecure against future development of computational power and algorithms and improvement on such security predicament is sought for a variety of applications.

New development in physical cryptography that utilizes either classical noise or quantum effect show some promise of obtaining ITS but is beset with fundamental security issues and efficiency problems. In particular there are serious efficiency and security issues in connection with the quantum key distribution QKD protocol BB84. The KCQ keyed communication in quantum noise approach has been experimentally developed to a less extent and generally security proof is yet to be obtained. A most serious difficulty for such proof in both QKD and KCQ is the correlations between bits in the cryptosystem as it is in classical and conventional mathematical cryptography.

Therefore there is a need for cryptographic methods that yield quantifiable general security for almost any classical or quantum protocol of data encryption and key generation.

The present invention overcomes the limitations of the prior art by providing a cryptographic method that yields quantifiable general security for classical and quantum data encryption and key generation.

In one embodiment the method includes the following steps receiving a sequence of data bits generating a sequence of decoy bits and embedding the sequence of data bits among the sequence of decoy bits based on a decoy position determining mechanism to produce an embedded data sequence. In said embodiment the sequence of data bits is the input and the embedded data sequence is the output.

In one implementation the embedded data sequence is produced by first generating a pseudorandom number sequence based on an encryption key and an encryption mechanism and then embedding the sequence of data bits among the sequence of decoy bits based on the pseudorandom number sequence.

In one embodiment the sequence of decoy bits is generated in a pseudorandom manner. In another embodiment the sequence of decoy bits is generated in a true random manner.

In one embodiment the received sequence of data bits is an encrypted data sequence which is encrypted using a separate encryption key and a separate encryption mechanism. In another embodiment the embedded data sequence is further encrypted using a distinct encryption key and a distinct encryption mechanism. Each of the encryption keys may be a sequence of true random numbers. The running keys may be pseudorandom numbers generated through the true random number keys. In one approach the running keys can be obtained by using Advanced Encryption Standard AES . In another approach the running keys can be obtained by using Linear Feedback Shift Register LFSR or nonlinear combinations thereof.

The ratio of data bits to total bits in the ciphertext is defined as the data rate. The ratio of decoy bits to total bits in the ciphertext is defined as the decoy rate. Generally the data rate is adjustable between 0 and 1 and so is the decoy rate. In one embodiment the method includes using a data rate of 90 or higher. In another embodiment the method includes using a data rate of 50 or lower. In yet another embodiment the method includes using a data rate of 0.1 or lower.

In one embodiment the method may be implemented for data storage. In another embodiment the method may be implemented for medical data. In yet another embodiment the method may be implemented for financial data.

Other aspects of the invention include methods devices systems applications variations and improvements related to the concepts described above.

The figures depict embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

The figures and the following description relate to preferred embodiments by way of illustration only. It should be noted that from the following discussion alternative embodiments of the structures and methods disclosed herein will be readily recognized as viable alternatives that may be employed without departing from the principles of what is claimed. To facilitate understanding identical reference numerals have been used where possible to designate identical elements that are common to the figures.

This disclosure relates to a novel cryptographic technique called the decoy bits method DBM which yields quantifiable general security for almost any classical or quantum protocol of data encryption and key generation when it is deployed on top. At the expense of a small reduction in data rate it offers tremendous provable security gain.

In one embodiment the DBM comprises embedding the original data among decoy bits whose bit positions are determined through a pseudorandom number generator PRNG driven by a shared secret key between the users. The bits in the decoy positions are filled from a true random number generator TRNG . In other embodiments PRNG can also be used to fill the bits in the decoy positions albeit with less security. In the quantum case ITS is obtained for both TRNG and PRNG even under KPA. In the classical case only CBS of different levels can be so obtained under KPA but the levels are exponential in a proper key length. This DBM achieves ITS directly in the quantum case but also indirectly for the classical situation. In particular classical key generation can be so obtained which is more secure than all known public key techniques.

A classical randomized encrypter on data sequence x with ciphertext y can be generally represented as follows 1 where E is the overall encryption map k the overall shared secret key and r a randomizer only the transmitter user A may or may not know. Unique decryption means 2 for an openly known function D that gives the correct x without knowing r. We call this classical direct encryption CDE . If the cryptosystem is a quantum one so that density operators take the place of classical probability distributions it is called quantum direct encryption QDE a typical example of which is the PSK Y00 or Alpha Eta cryptosystem. The term raw security for direct encryption refers to the situation when the eavesdropper Eve has access only to the ciphertext random variable sequence Y and has no information on X the plaintext random variable which is the uniformly random variable U to her. In that case it is typical that the ciphertext leaks no information about k to Eve. The ciphertext is always openly known. In KPA some subsequence of x is known to Eve so that she could try to gain information or even determine k with the known ciphertext say in the conventional symmetric key ciphers AES or standard stream ciphers from PRNG and then decrypt the rest of x. We will not need to distinguish the situation where Eve only has statistical knowledge on X and let KPA stand for the case where some specific subsequence of x is known exactly to Eve.

One can do key generation from direct encryption in that case privacy amplification can be employed to help improve security. In quantum key generation QKG a shared secret key Kis to be generated between the users A and B which possesses ITS that is probabilistic uncertainty to Eve even when she has unlimited computational power. This uncertainty may not be dependent from that of k shared by the users i.e. Kis a fresh key. Such fresh key generation cannot be so obtained with certainty classically as a consequence of the Shannon limit and it turns out it cannot be obtained in QKD or KCQ either due to the necessity of a shared secret key for open message authentication during protocol execution in the former and the explicit use of a shared secret key K in the latter. However it is possible to generate a fresh key with a practically certain probability i.e. obtaining a key that has whatever obtainable ITS level with near or practical certainty.

It is important to note that while no KPA can be launched against Kduring the key generation process KPA can be launched with Eve s probe set when Kis used. Thus defense against KPA is necessary for QKG as in QDE or CDE. For CBS the security criterion is the number of computational steps needed to get the data or the key. In QKG the operational criteria have been given in terms of Eve s sequence success probabilities and her position averaged bit error rate BER in estimating various parts of K. It is these criteria that we will use in evaluating the DBM performance.

Before moving onto DBM proper we note that an exponential CBS in terms of a controllable security parameter is basically as good as ITS. This is because with an ITS security level of n uniform key bits it just means there are 2possibilities at Eve s hand. If she can try that one by one it takes a trial complexity of 2to guarantee success which is no different from the same level of CBS. Indeed one can formalize the success probability of any m n trials including a single one and get similar guarantee as ITS for exponential CBS from a general trial complexity.

The key new feature of the DBM is the introduction of decoy bits in two different possible ways among the bits in a sequence of data bits or among the bits in an encrypted data sequence. After decryption the decoy bits are usually discarded. In one embodiment a PRNG with proper statistical property which is offered by LFSR is used to determine which bit positions are the decoy ones.

In one embodiment the encrypted data sequence is generated using AES. In another embodiment the encrypted data sequence is generated using LFSR or nonlinear combinations thereof. In some cases the encrypted data sequence is generated using a stream cipher. Alternatively the encrypted data sequence is generated using a block cipher.

In one embodiment the decoy bit sequence represented by r is a sequence of true random numbers generated independently of other system components. The decoy bits are inserted into the encrypted data sequence to produce a ciphertext sequence represented by y . The positions of the decoy bits are in general determined by a decoy position determining mechanism. In the embodiment depicted in the positions of the decoy bits are determined by a pseudorandom number sequence generated from a pseudorandom number generator with a seed key Kand its own encryption mechanism. The seed keys Kand Kare independent of each other. In addition the PRNG employs an encryption mechanism that is also independent of the encryption mechanism in the encryption step . The resulting ciphertext sequence has a length n which is greater than the length n of the encrypted data sequence due to the insertion of decoy bits. The data rate is commonly defined as n n and the decoy rate 1 n n .

The ciphertext sequence is transmitted through a communication channel . The communication channel may include but is not limited to audio visual electrical and electromagnetic communication channels. For example the communication channel may be an optical fiber an electrical cable or free space. In one embodiment classical signals are modulated by the ciphertext sequence transmitted through the communication channel and demodulated back into the ciphertext sequence at the receiving end of the communication channel. In another embodiment quantum signals are modulated by the ciphertext sequence transmitted through the communication channel and demodulated back into the ciphertext sequence . The modulation and demodulation modules are not depicted in for the sake of simplicity.

If there is no error in the transmission process the received ciphertext sequence is exactly the same as the transmitted ciphertext sequence . A pseudorandom number generator is employed to disembed the decoy bits from the ciphertext sequence resulting in an encrypted data sequence . In general the positions of the decoy bits are determined from the same decoy position determining mechanism used to embed the decoy bits. In the embodiment depicted in the PRNG shares the same seed key Kand the same encryption mechanism as the PRNG . The decoy positions are determined from the PRNG and the decoy bits are discarded. The encrypted data sequence is then decrypted by using the shared seed key K and the shared encryption mechanism as the encryption step to obtain a data sequence . This decryption step may be omitted if the encryption step is omitted for simpler implementation.

The embedded data sequence is further encrypted by a seed key K with its running key k and its own encryption mechanism resulting in a ciphertext sequence which typically has the same length n as the embedded data sequence . The seed keys Kand Kare independent of each other. In addition the encryption mechanism in the encryption step is also independent of the encryption mechanism employed by the PRNG . In this embodiment the data rate is defined as n n and the decoy rate 1 n n . In some cases the encryption step may be omitted for simpler implementation. The ciphertext sequence represented by y can be written as 5 where r simply represents the possibility of randomized encryption for y and is just included for generality. In alternative embodiments the randomizer r may be omitted. In one embodiment the seed key Kis a sequence of true random numbers.

In one embodiment the ciphertext sequence is generated using AES. In another embodiment the ciphertext sequence is generated using LFSR or nonlinear combinations thereof. In some cases the ciphertext sequence is generated using a stream cipher. Alternatively the ciphertext sequence is generated using a block cipher.

The ciphertext sequence is transmitted through a communication channel . The communication channel may include but is not limited to audio visual electrical and electromagnetic communication channels. For example the communication channel may be an optical fiber an electrical cable or free space. In one embodiment classical signals are modulated by the ciphertext sequence transmitted through the communication channel and demodulated back into the ciphertext sequence at the receiving end of the communication channel. In another embodiment quantum signals are modulated by the ciphertext sequence transmitted through the communication channel and demodulated back into the ciphertext sequence . The modulation and demodulation modules are not depicted in for the sake of simplicity.

If there is no error in the transmission process the received ciphertext sequence is exactly the same as the transmitted ciphertext sequence . The ciphertext sequence is decrypted by using the shared seed key K and the share encryption mechanism of the encryption step to obtain an embedded data sequence . This decryption step may be omitted if the encryption step is omitted for simpler implementation. A pseudorandom number generator is employed to disembed the decoy bits from the embedded data sequence resulting in a data sequence . In general the positions of the decoy bits are determined from the same decoy position determining mechanism used to embed the decoy bits. In the embodiment depicted in the PRNG shares the same seed key Kand the same encryption mechanism as the PRNG . The decoy positions are determined from the PRNG and the decoy bits are discarded.

In Eq. 6 the map j i is the bit position of the data sequence which is equal numerically to the number of k 1 positions that have occurred up to the iplace in the pseudorandom number sequence . Similarly the map l i is the bit position of the decoy bit sequence which is equal numerically to the number of k 0 positions that have occurred up to the iplace in the pseudorandom number sequence . In this embodiment what is done is simply to fill in random numbers from the decoy bit sequence at the decoy positions determined by the k 0 positions in the k sequence and fill in successively the x sequence bits in the non decoy or message positions determined by the k 1 positions in the k sequence .

Note that when there is no encryption map E involved and no error correcting code ECC is used there is no difference between the ciphertext decoy mode and the data decoy mode . In this scenario the embedded data sequence containing data bits and decoy bits is the ciphertext which may modulate classical signals or quantum signals before being transmitted down the communication channel. In general the embedded data sequence can have an adjustable data rate ratio of data bits to the total bits in the embedded data sequence between 0 and 1. For example a data rate as high as 90 or higher may be obtained in certain cases. On the other hand a data rate as low as 0.1 or lower may be obtained in other cases.

Our DBM is a totally new cryptographic technique that has never been discussed in either classical or quantum cryptography. The proposed methodology is different from the clock controlled or shrinking generator exactly due to the use of decoy bits with corresponding data rate reduction. The DBM is also different from decoy quantum states. The use of decoy quantum states was first described in the problem of quantum bit commitment where such states serve in a role similar in a weak sense not essentially similar to decoy bits in the present DBM. The different use of decoy quantum states to detect Eve s presence has become a common quantum key distribution technique for multi photon sources which is very different from DBM other than the word decoy . Note also that one needs to control the decoy states characteristics for the purpose of checking Eve s presence in contrast to DBM.

We will make basic use of the following property of a LFSR than can be chosen to yield m sequences in its output corresponding to different input seed key K with its running key k which have a period of 2 1 for an K stage LFSR with primitive polynomial generator. Note that we would use an n bit m sequence only for n far less than such period which always holds since such K 100 in practice. Also each m sequence has ideal two level autocorrelation and different k just translates the output sequence. These imply the following 

The number of different bit positions between two L bit m sequences L 2 1 from the same LFSR is L 2 for even L and 1 L 2 for odd L when averaged over K.

Theorem 1 has the following implication. Let the bit position average bit error rate BER pfor estimating the l bits in an l bit sequence be the total number of bit errors divided by l. Let be the paveraged over the seed key of the LFSR.

If one guess an l bit LFSR m sequence incorrectly by another of such sequence the is for even l and 1 2l for odd l.

This implies the following significant fact that is not given in the cryptography literature. If one uses LFSR m sequence as the running key in a stream cipher the raw security BER from a ciphertext only attack CTA on the data is given by Corollary 1 if Eve guesses at the seed key K. Thus with a very high probability 1 2which is practical certainty for K 100 we obtain perfect K averaged security for any l bit ciphertext sequence. Eve would get p bit by bit if she guesses randomly. Eve s sequence error rate for an arbitrary subset of the data X is not quantified except it is uniformly random for K consecutive positions. Thus the n bit data x is actually quite secure information theoretically despite the Shannon limit. When the data is a priori uniform to Eve the key is fully protected in stream cipher mode at least. The usual security weakness of conventional symmetric key ciphers lies in KPA where typically the key is fully determined by K known data bits and only CBS can be obtained.

Let us examine the use of DBM in CDM given by Equations 3 4 . For raw data security we see that if Eve simply guesses at the n encrypted data positions among the n ciphertext positions without using the fact that they are generated from the m sequence of a LFSR with a seed key K she will have error probability p i at each iposition of getting the correct encrypted bit. If she guesses kwith the LFSR structure Corollary 1 shows that with practical certainty she still gets for each bit position. The DBM adds to that with p for each specific kalso other than a few starting bits because the decoy positions are filled with true random numbers. For Eve s sequence success probabilities there is compound security from the additional DBM key Kin addition to the E key K. All this is expected and raw security is stronger than just Kin the expected way.

The very major difference occurs in the crucial KPA security. Without decoy bits the non random ciphers are broken information theoretically in KPA with rather short known data length typically just same length as the key size. In the DBM case there is exponential security where each of the possible n bit m sequence from the LFSR with a seed key Khas to be tried one by one. This is because the known data to Eve has nothing to do with the decoy position fixing m sequence. She would need to guess at a correct K run of 1 s in the correct data position sequence x since there is no longer runs of l s than K . Her probability of estimating Kcorrectly for getting at the unknown data bits is 2 since K consecutive data positions are needed to determine the seed key K. If she guesses incorrectly the sequence error on Kwould lead to a and thus circumflex over X that is different from the correct one with a probability in each position. This is because true random numbers decoy bits are used and the other ciphertext bits are also independent uniform bits when an additive stream cipher is used on uniform original data x. Indeed this holds more broadly for known x and a variety of E when E s seed key K unknown to Eve is taken into account. In any event as long as Kis incorrectly estimated the DBM succeeds in that no match of the given ciphertext could be obtained from Eve s generation of it from the known x and guessed K thus ensuring each Khas to be tried one by one. Now we can consider the best strategy from Eve s viewpoint against a PRNG that determines the decoy positions with a pseudorandom number sequence r that satisfies the three Golomb randomness postulates which is the case for m sequences generated from a LFSR. In one embodiment we let the 0 bits in r determine the decoy positions. The following is obtained when no Kis employed. The strengthening of security with Kdepends on the exact E used in Eq. 3 or Eq. 5 .

Note that it is quite possible a matching Kin KPA may be found which matches x and the ciphertext even though it is not the correct K due to the many random elements involved. In such a case Eve is misled and gets a wrong estimate of Kas if it is correct. This can be formalized by the concept of unicity distance the data length required for a KPA to pin down the seed key uniquely. While residual information theoretic security may remain even for very long known data length it appears that for long enough n Eve can indeed determine Kin principle in a KPA.

Note that the security considered here arises entirely from K. The use of Kis not essential classically but is used in conjunction with the KCQ approach.

The above use of LFSR gives a decoy rate of . The corresponding data rate is 50 . In general the decoy rate and the corresponding data rate are adjustable. One can vary the decoy rate by using a PRNG to determine what positions to insert decoy bits at any decoy rate. If the decoy rate is higher than 50 the corresponding data rate would become less than 50 . Furthermore one can choose a decoy position determining mechanism that would ensure that at least one decoy bit is included in any K consecutive bits. The quantitative CBS security level against KPA and ITS security level for raw security depend on the exact decoy position determining mechanism. The DBM can also be used with far less decoy bits for comparable CBS security against KPA as given by Theorem 2. This would result in a data rate as high as 90 or even higher. This is important when the data rate reduction is to be kept as small as possible for a given security level. Alternatively more decoy bits can be used for increased security effectively decreasing the data rate to as low as 0.1 or even lower.

For ease of implementation pseudorandom numbers can be used for the decoy bits in lieu of true random numbers. The quantitative security level for pseudorandom numbers decoy bits would remain the same as that for true random numbers decoy bits when less than K or K data bits are known to Eve where Kis the seed key for generating the sequence of pseudorandom decoy bits.

Theorem 2 shows the CBS security level of DBM in classical direct encryption as well as classical key generation. In addition to possible residual ITS level remaining for any finite sequence of known data there is a sense in which ITS is still obtained in any case by the meaning of Corollary 2. Indeed the provable exponential complexity of key generation even against KPA shows the use of DBM is superior to public key cryptography as far as security goes for the purpose of key distribution. There is no proved security in such asymmetric key ciphers in addition to their reliance on complexity assumptions for raw security which are also weaker than exponential complexity.

There is a very significant application of DBM to data storage via classical direct encryption to which it is immediately applicable in conventional mathematics based ciphers in contrast to physical and especially quantum cryptography. DBM is CBS secure against KPA also offering security guarantee that is not compromised by future development of computational power including quantum computers or algorithm development. In another embodiment the DBM may be implemented for medical data. In yet another embodiment the DBM may be implemented for financial data.

In this section we first review some salient points on QKG and QDE using the two different approaches of QKD and KCQ. We will then explain how DBM can be used in each approach. The case of classical randomization and noise is similar because it is the quantitative advantage creation by the users that is relevant in key generation and even direct encryption. Quantum cryptography is distinguished only in that quantum effects with no classical analog are used for such advantage creation.

In QKD which involves intrusion level estimation only key generation is possible with no direct encryption. In a QKD protocol the presence of Eve s attack is checked by a separate sequence of quantum signals. If the intrusive level is below a certain design threshold the users would conclude that a net key can be obtained after error correction typically by use of an error correcting code ECC and then privacy amplification typically from a privacy amplification code PAC that is drawn from linear universal hashing.

In a KPA on such QKD protocols Eve keeps her quantum probe set during the protocol execution. Then she learns part of the final generated key Kwhen it is used say in one time pad form and tries to estimate the other data from the one time pad ciphertext her knowledge of the Ksegment from KPA and the measurement result of her choice of quantum measurement made with all her then available information. Proper advantage creation would hopefully entail that the users could derive more information on the input data from their ciphertext signals than that by Eve from her ciphertext signals. Note that the ciphertext signals in the two cases are different always in active attacks but often so even in a passive attack in which Eve just takes in a portion of each transmitted ciphertext signal by beam splitting. It is a difficult task to prove any general security against joint coherent attacks with serious quantitative problems at several turns. In the next section it will be shown how provable ITS is readily obtained with our DBM.

There is another approach to QKG and QDE called KCQ keyed communication in quantum noise . In this approach the optimal quantum receiver principle for M ary quantum detection is used which is one form of no cloning in that the optimal quantum measurement depends on the specific signal set. There is no universal measurement that is optimal for different signal sets in contrast to the classical case. This KCQ underlying principle is evidently stronger than the usual no cloning in several ways. As a consequence intrusion level estimation can be dispensed with entirely and large energy signals can be used thereby greatly improving the efficiency of the cryptosystem and as it turns out its security also. The key point for the possible secure use of LFSR lies in our theorems 1 2 and corollaries 1 2 above which are new. Only security against collective attacks can be quantified similar to the QKD case although in QKD it is erroneously but widely believed otherwise.

Now let us examine DBM in QKG and QDE. The DBM can be directly applied to quantum signals modulated by the original data bits. User A just inserts random numbers into the decoy positions instead. Demodulation decoding and decryption would go forward as usual. The raw ITS security of DBM from corollary 1 is already ideal without quantum advantage creation.

The crucial point for DBM quantum cryptography is that Eve could only make one measurement on her probe. In both QKD and KCQ the correct measurement which varies from qubit to qubit or qumode is needed to extract data information with no distortion. In a KPA Eve needs to make a measurement upon her guess of the seed key Kfor all the qubits and has a probability of success 2 or she could try K run of 1 s. In such case she would not have the same probability of success 2 in each trial with a small increase from the decrease of the 2 1 sample space size after m trials by just m. This is because during the first trial the quantum measurement already fixes the Kpositions and Eve could try only n K cases instead of n K 1 in the classical situation the other ones do not have the necessary quantum freedom . Here nis the length of the known consecutive data bits. The encryption of the data bits by E of Equations 1 2 which involve measurement choice by Eve in this situation decreases the success probability by a lot but which we ignore since she is already bound 2 without taking that into account.

The above shows that Eve could not try all the 2 cases as in the classical situation thus gaining ITS in QDE. The only remaining general way is to make a universal measurement on the qubits or qumodes that would render the whole situation a classical one. We will now give the ITS KPA security for QDE under such a universal measurement. We have the following 

The advantage over Eve from Eq. 7 is to be obtained from the KCQ approach which involves encryption over a K. To get true ITS in QKG such Kuse is necessary in contrast to the classical case where Kmay be dispensed with for CBS or its induced ITS.

In a direct QKG approach one may bound Eve s overall average probability of identifying the whole data n sequence and then employ PAC on top dealing with ECC separately. The corresponding general case is complicated and will be presented elsewhere. However under universal measurement the usual theory for QKD as well as KCQ can be directly applied for key generation with ITS.

Note that DBM is well suited to QKD by using Kto choose the sifted key and the remaining for checking the quantum bit error rate QBER . For instance the qubits to be checked for QBER may be selected from the decoy positions determined by PRNGs with a shared secret seed key K . In this case the qubits in the selected decoy positions serve an additional useful purpose of checking QBER prior to being discarded. The qubits in the non decoy positions are thus maximally preserved to generate the sifted key. Note also that loss effect and all system imperfection problems are automatically resolved in DBM from the decoy bits.

We have described a very powerful new cryptographic technique the decoy bits method which is widely applicable to different media of transmission and storage in various cryptographic functions classical or quantum. Most significantly it allows rigorous general security proofs for the first time ever in cryptography other than one time pad.

Some portions of this description describe the embodiments in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are commonly used by those skilled in the data processing arts to convey the substance of their work effectively to others skilled in the art. These operations while described functionally computationally or logically are understood to be implemented by computer programs or equivalent electrical circuits microcode or the like. Furthermore it has also proven convenient at times to refer to these arrangements of operations as modules without loss of generality. The described operations and their associated modules may be embodied in software firmware hardware or any combinations thereof.

Any of the steps operations or processes described herein may be performed or implemented with one or more hardware or software modules alone or in combination with other devices. In one embodiment a software module is implemented with a computer program product comprising a non transitory computer readable medium containing computer program instructions which can be executed by a computer processor for performing any or all of the steps operations or processes described.

Embodiments may also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes and or it may comprise a general purpose computing device selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a tangible computer readable storage medium which includes any type of tangible media suitable for storing electronic instructions and coupled to a computer system bus. Furthermore any computing systems referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.

Although the detailed description contains many specifics these should not be construed as limiting the scope of the invention but merely as illustrating different examples and aspects of the invention. It should be appreciated that the scope of the invention includes other embodiments not discussed in detail above. For example the DBM can be used at many different data rates which are suitable for different kinds of applications such as financial medical internet military etc. Various other modifications changes and variations which will be apparent to those skilled in the art may be made in the arrangement operation and details of the method and apparatus of the present invention disclosed herein without departing from the spirit and scope of the invention as defined in the appended claims. Therefore the scope of the invention should be determined by the appended claims and their legal equivalents.

