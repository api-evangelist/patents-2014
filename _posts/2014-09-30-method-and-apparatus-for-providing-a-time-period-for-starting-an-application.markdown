---

title: Method and apparatus for providing a time period for starting an application
abstract: Disclosed are methods and systems for determining the time for a remote computer to begin executing an application downloaded over a network. A portion of the application to begin execution of the application is determined. The portion is less than the entirety of the application. The time to start the application on a remote computer is calculated and displayed. The time to start can be calculated based on an obtained a speed of the network to the remote computer, a time to transmit the portion of the application to the remote computer based on the portion of the application and the obtained connection speed, and a loading time for the portion of the application to load on the remote computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09395970&OS=09395970&RS=09395970
owner: SONY INTERACTIVE ENTERTAINMENT AMERICA LLC
number: 09395970
owner_city: San Mateo
owner_country: US
publication_date: 20140930
---
This disclosure relates generally to data processing and more specifically to methods and systems for acquiring new software applications.

Software traditionally was distributed on disk. Acquiring additional software required either a trip to the store or waiting for a package with a disk to be delivered. Then the disk would be inserted into the computer and after a few clicks an installation process would begin. Depending on the number of disks and other factors the installation process could be long and annoying.

With the rise of the Internet software increasingly is distributed electronically over the Internet. In particular mobile devices have made installing software very convenient with mobile manufacturers mandating relatively small installation packages so that consumers could quickly go from ordering software in the application store to running the software.

However there are applications that require more storage. Download times for games and other content rich media software can be far larger than say a weather application. For instance a large game can require 10 50 Gigabytes of file installs. On a low grade Internet connection this can require a download lasting hours or even days. Thus the delay between ordering a large application and the time to start using the application becomes increasingly long and annoying to the user.

To minimize this annoyance the downloading and installation of applications has been moved to the background so that use of the device can continue while a new large application is being delivered and installed.

Hiding the installation does not solve one concern of the customer which is when will I be able to play this game or use this application If a consumer wants to play a game in twenty minutes and the acquisition process takes five hours they will be unhappy if they sit around and start waiting.

As games and other large applications have grown larger than our Internet connections have increased in speed the problem of delays before start of play has also increased. Today many expensive games or applications can take hours from the time they are purchased to the time that a user can start to play the desired game or use the application.

One solution is for large application makers to modify their applications so that only a part the first part must be downloaded and installed before the end user can start to use that application. This solution leads to interesting situation. Two applications both of the same size say fifty gigabytes can have very different times to start use if one application is modified to be split into functional parts and the other is not. If the modified application first functional part is only one gigabyte then it may take only one fiftieth as long to start using that one versus the un modified application.

For the end user eager to begin using an application this time savings is important and may influence their purchasing decision somewhat analogous to how movie watchers may choose certain movies based on when they are starting that evening or how long the movie will run. That is a consumer s desire may be based on how long before the consumer must wait to have that desire fulfilled.

As happy end users are important to any business we wish to show end users how long they will have to wait to use an application if they determine to acquire that application.

The disclosure describes an apparatus and methods for providing an estimate of the time it would take to start using an application if that consumer ordered that application now thus kicking off the download and install process and is a time period less than an estimate of time to download the entire application. The phrase used in this application for this time estimate is Playgo Playgo time or Playgo rating. That is the Playgo time is for an application that does not need to completely download to start running and is the amount of time from the start of downloading the application until that application can start running. This PlayGo rating could be displayed along with the price and other information about the game to enable the consumer to make an appropriate buying decision.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

The PlayGo time could be represented in hours minutes or minutes seconds for instance 1 33 or visually as a clock bar etc. This time could be displayed near the purchase or download button. If a download install process is in progress the representation of the Playgo time could be updated to reflect progress made so far or could show an estimate left till the application can begin to run.

One factor is the size of initial download required to start using the application. This size could be calculated in a variety of methods for instance counting the download size until the application actually starts in a test environment or simply stored as metadata about the game package.

What is initially downloaded might vary based on language English Mandarin etc. or resolution 720p 1080p and other settings. If this is the case then the PlayGo time could be recalculated based on the end user choices or system settings in effect at the time that the PlayGo time needs to be displayed for a particular product.

The expected speed of the download is also a factor in the Playgo time. The expected speed could be based on a brief speed test or based on the previous downloads to the connected machine and location or based on other downloads from similar or nearby locations. As the download proceeds the PlayGo time remaining could be adjusted by both the download size remaining and the recent speed of the connection from store to end user equipment. That is the Playgo time can be dynamically recalculated as the download process is occurring to provide for example an estimate of the time remaining till the application can begin to run.

Once both the size and speed are known it is straightforward to calculate download time. These time calculations can be verified on test machines or by any means known in the art.

An additional factor is the time to install the downloaded package. For a console or other known set of hardware this install time can either be calculated or measured by installs on a known or standard machine. If end user machines vary in installation speed then as with downloading the application discussed above the installation time could be calculated based on a brief speed test based on previous downloads or based on similar machines elsewhere. As the install proceeds the PlayGo time remaining could be adjusted by the amount of application remaining to be installed and the current speed of the end user machine.

As downloading and installation may proceed in parallel this effect can be measured on test machines or calculated based on known speeds and sizes.

If information about specific download speed to or installation speed for an end user machine is unavailable the system could use an average based on the region or machines of that type.

In accordance with one embodiment of the disclosure a system for indicating how much time it would take before an application can start to be used on an end user machine is provided. The system may comprise a processor and a database. The processor may be configured to register an application with application store to create a downloadable ready application. Additionally the processor may be configured to register a user with the application store to create a user account.

When the application is registered with the application store the application may be measured for the time required to download and install on a standard machine with standard connectivity. This can become the default PlayGo time. That is the Playgo time comprises the time to download at least a portion of the application sufficient to start the application to run plus the time for the portion of the application to be installed.

When users register with the application store their machine s may also measured for download or installation speed. If their machines are faster or slower than normal this factor is stored in the database and used to calculate a more precise PlayGo time to be presented as necessary to the user. In this embodiment the Playgo time presented to a registered user is a function of the registered user s information stored in the database. That is the Playgo time for each user can be different.

To the accomplishment of the foregoing and related ends the one or more embodiments comprise the features hereinafter fully described and particularly pointed out in the claims. The following description and the drawings set forth in detail certain illustrative features of the one or more embodiments. These features are indicative however of but a few of the various ways in which the principles of various embodiments may be employed and this description is intended to include all such embodiments and their equivalents.

The following detailed description includes references to the accompanying drawings which form a part of the detailed description. The drawings show illustrations in accordance with exemplary embodiments. These exemplary embodiments which are also referred to herein as examples are described in enough detail to enable those skilled in the art to practice the present subject matter. The embodiments can be combined other embodiments can be utilized or structural logical and electrical changes can be made without departing from the scope of what is claimed. The following detailed description is therefore not to be taken in a limiting sense and the scope is defined by the appended claims and their equivalents.

The approaches and principles disclosed herein relate to computer implemented methods and systems for processing of the time to begin using or playing an Application delivered online through for example an online application store or other network connected provider.

The application may include a game for a PC mobile device or a game console such as Sony s PlayStation PS4 an expansion pack add on patch or map for a game or a non game application.

The application PlayGo data may include information on the application or application package what application code data or patches have already been requested downloaded or installed and what is left to download and install what map or screen resolutions or languages have been requested downloaded or installed how to divide up the application into smaller components and how to sequence the installation of these additional components.

The user PlayGo data may include information about the user s hardware and preferences including free hard disk space type of connection speed of connection level of subscription preferences about language multiplayer etc.

The application metadata data may include additional information about the application or application package or download including package size and download and disk rate information which languages or screen resolutions are available how many packages are available and what size etc.

The PlayGo display may include how much time remains before the user can begin playing. This display can be represented digitally or in an analog fashion. It may include suggestions to reduce this time e.g. by changing languages or resolution . If no time remains the PlayGo display can be used to start or cancel the start of the application.

The store graphical user interface and store application programming interface may be associated with a server system for processing PlayGo time calculations enabling accurate display of the time to start an application associated with an application store . The store graphical user interface is for communicating with individuals whereas the store application programming interface is for communicating with networked computers. User may access an online resource associated with the application via a network through a user device .

The network may include the Internet or any other network capable of communicating data between electronic devices.

The user device may include a mobile telephone a computer a laptop a smart phone a tablet PC and so forth. The user in some embodiments may be a person interacting with the graphical user interface GUI via one of the user devices . The user may be registered with the system for processing of PlayGo time calculation and have information on available sizes and times of the applications in the application store stored in a database of the system for calculating PlayGo time .

As shown in the method may commence at operation with registering an application with an application store to add the application to the application store. Then the process system analyzers the just added application to determine the number and size of its discrete parts and any dependency from part to part at operation . Users must also register with the Application store in order to access digital products in the store at operation . When the user sign into the Application store the store can send a request to the user s machine to determine how fast the connection is to that machine at operation and any other information related to calculating download or installation speed. Once the properties of both the application and end point hardware and connectivity are know then the PlayGo calculator can do the math to determine the expected download and install speed assuming there are no other changes at operation and then calculate the PlayGo time based at operation and finally send the PlayGo estimated time to the User s GUI at operation .

As shown in the method may commence at operation as the user begins to download and install their new application. The system begins to check if the actual progress speed matches the estimated progress speed at operation . If the download rate is below previous estimates the estimated time is increased proportionally or if the download rate exceeds previous estimates the estimated time is decreased proportionally at respectively. These revised estimates are displayed at operation . This monitoring process continues at operation or terminates upon completion of the download and install at operation .

The example machine includes a processor or multiple processors e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD . The computer system may also include one or more devices such as a keyboard a cursor control device such as a mouse a voice recognition or biometric verification unit not shown a disk drive unit an output signal generation device e.g. a speaker and a network interface device . The machine may further include a data encryption module not shown to encrypt data.

The disk drive unit includes a computer readable medium on which is stored one or more sets of instructions and data structures e.g. instructions embodying or utilizing any one or more of the methodologies or functions described herein. The instructions may also reside completely or at least partially within the main memory and or within the processors and or static memory during execution thereof by the machine . The main memory and the processors may also constitute machine readable media.

The instructions may further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. Hyper Text Transfer Protocol HTTP . While the computer readable medium is shown in an example embodiment to be a single medium the term computer readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term computer readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that causes the machine to perform any one or more of the methodologies of the present application or that is capable of storing encoding or carrying data structures utilized by or associated with such a set of instructions. The term computer readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals. Such media may also include without limitation hard disks floppy disks flash memory cards digital video disks random access memory RAM read only memory ROM and the like. The example embodiments described herein may be implemented in an operating environment comprising software installed on a computer in hardware or in a combination of software and hardware.

Thus a system and method for processing of calculating time to start play have been described. Although embodiments have been described with reference to specific example embodiments it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the system and method described herein. Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. Other embodiments are within the scope of the following claims.

