---

title: Disabling header compression over point-to-point protocol (PPP)
abstract: A system and method for disabling header compression during an establishment and configuration of a communication protocol and communication channel between a pair of correspondents. The system comprises an initiating correspondent transmitting at least one PPP negotiation packet having at least one acceptable TCP/IP header compression option type. A software module of a responding correspondent intercepts and examines said at least one PPP negotiation packet before said at least one PPP negotiation packet reaches a PPP layer of the responding correspondent and modifies said acceptable TCP/IP header compression option type to an unacceptable TCP/IP header compression option type and transmits same to said PPP layer of the responding correspondent. The responding correspondent rejects said unacceptable TCP/IP header compression option type. Said software module receiving said modified PPP negotiation packet modifies same to said acceptable TCP/IP header compression option type, and transmitting said PPP negotiation packet to said initiating correspondent.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09629024&OS=09629024&RS=09629024
owner: Certicom Corp.
number: 09629024
owner_city: Mississauga
owner_country: CA
publication_date: 20140827
---
This application is a continuation of U.S. patent application Ser. No. 11 668 617 filed on Jan. 30 2007 which is a continuation of U.S. patent application Ser. No. 09 918 646 now U.S. Pat. No. 7 257 116 filed on Aug. 1 2001 both incorporated herein by reference.

The present invention relates to communications networks more particularly it relates to the processing of data packets within a protocol stack.

Compressing protocol headers has traditionally been attractive for conserving bandwidth over low speed links including those in wireless systems by minimizing header overheads. Typically the header overhead associated with the protocol stacks used is prohibitive on low bit rate links where compression down to a few dozen bytes per real time information packet is often desirable. Generally data link header compression reduces the size of a header at the data link layer of the protocol stack while network layer header compression reduces the size of the header at the network layer of the protocol stack. One of the known schemes is the Van Jacobson TCP IP header compression algorithm which reduces the size of the TCP IP headers to as few as three bytes. This can be a significant improvement on slow serial lines particularly for interactive traffic especially between devices with substantially limited computing power or having reduced bandwidth. This form of TCP IP header compression is described in RFC 1144 Compressing TCP IP Headers for Low Speed Serial Links . The protocol describes a maximal compression algorithm that relies on knowledge of the fields in the TCP IP headers and how they are likely to change from packet to packet

The Van Jacobson compression of TCP IP headers is usually negotiated during the establishment and configuration of the network layer protocol. However on some operating systems such as PALM OS it may not be feasible to intercept Internet protocol IP packets at the network layer due to the system architecture.

However this functionality can optionally be implemented in the Point To Point Protocol PPP . This may be the case where a software module such as a driver is placed below the PPP layer to analyze or perform a certain operation on IP packets. One such operation may be implementation of IP Security Architecture IPSec which provides data confidentiality and authentication services to IP data packets. Therefore the driver below the PPP layer needs to either examine or modify IP packets as they are passed to and from the PPP layer. However since the driver cannot access the compression parameters inside the PPP layer it is therefore is unable to translate compressed TCP IP headers.

In one of its aspects a method for modifying a parameter included in a negotiation packet during an establishment and configuration of a communication channel between an initiating correspondent and a responding correspondent is provided. The method includes the steps of substituting at least one instruction set associated with the parameter prior to the responding correspondent receiving the negotiation packet the at least one instruction set being used to establish the communication channel between the correspondents the method of substituting the at least one instruction set comprising the steps of a software module disposed between the initiating correspondent and a layer of a protocol stack at the responding correspondent intercepting the negotiation packet sent from the initiating correspondent prior to the negotiation packet being received by the layer at the responding correspondent the software module examining the negotiation packet to determine whether a first instruction set associated with a first option type is present in the negotiation packet if the first instruction set is present the software module substituting the first instruction set with a second instruction set associated with a second option type for the parameter and the software module sending a response packet to the initiating correspondent wherein the initiating correspondent receives the second instruction set and transmits subsequent packets utilizing the second option type to the responding correspondent in accordance with the second instruction set.

In one aspect there is provided a system for disabling header compression of TCP IP headers during an establishment and configuration of a communication protocol and communication channel between a pair of correspondents said system comprising an initiating correspondent and a responding correspondent the responding correspondent further comprising a software module said initiating correspondent and said responding correspondent being configured to perform operations comprising the initiating correspondent transmitting at least one PPP negotiation packet having at least one acceptable TCP IP header compression option type said acceptable TCP IP header compression option type being associated with a first instruction set for said establishment and configuration of said communication protocol and communication channel the software module of the responding correspondent intercepting and examining said at least one PPP negotiation packet before said at least one PPP negotiation packet reaches a PPP layer of the responding correspondent the software module modifying said acceptable TCP IP header compression option type to an unacceptable TCP IP header compression option type to establish a modified PPP negotiation packet and transmitting said modified PPP negotiation packet to said PPP layer of the responding correspondent said PPP layer of the responding correspondent receiving said modified PPP negotiation packet and rejecting said unacceptable TCP IP header compression option type said software module receiving said modified PPP negotiation packet having said unacceptable TCP IP header compression option type and said software module modifying said unacceptable TCP IP header compression option type to said acceptable TCP IP header compression option type and transmitting said PPP negotiation packet to said initiating correspondent.

In another aspect there is provided a system for disabling header compression of TCP IP headers during an establishment and configuration of a communication protocol and communication channel between a pair of correspondents said system comprising an initiating correspondent and a responding correspondent the initiating correspondent further comprising a software module coupled to a PPP layer of the initiating correspondent said initiating correspondent and said responding correspondent being configured to perform operations comprising the initiating correspondent transmitting at least one PPP negotiation packet having at least one acceptable TCP IP header compression option type said acceptable TCP IP header compression option type being associated with a first instruction set for said establishment and configuration of said communication protocol and communication channel the software module intercepting and examining said at least one PPP negotiation packet before said at least one PPP negotiation packet is transmitted to said responding correspondent said software module modifying said acceptable TCP IP header compression option type to an unacceptable TCP IP header compression option type to establish a modified PPP negotiation packet and transmitting said modified PPP negotiation packet to a PPP layer of the responding correspondent said PPP layer of the responding correspondent receiving said modified PPP negotiation packet and rejecting said unacceptable TCP IP header compression option type said software module receiving said modified PPP negotiation packet having said unacceptable TCP IP header compression option type and said software module modifying said unacceptable TCP IP header compression option type to said acceptable TCP IP header compression option type and transmitting said PPP negotiation packet to said PPP layer of the initiating correspondent.

In yet another aspect there is provided a computer readable medium having stored thereon computer readable instructions for disabling header compression of TCP IP headers during an establishment and configuration of a communication protocol and communication channel between an initiating correspondent and a responding correspondent said computer readable instructions comprising instructions for the initiating correspondent transmitting at least one PPP negotiation packet having at least one acceptable TCP IP header compression option type said acceptable TCP IP header compression option type being associated with a first instruction set for said establishment and configuration of said communication protocol and communication channel a software module coupled to the responding correspondent intercepting and examining said at least one PPP negotiation packet before said at least one PPP negotiation packet reaches a PPP layer of the responding correspondent the software module modifying said acceptable TCP IP header compression option type to an unacceptable TCP IP header compression option type to establish a modified PPP negotiation packet and transmitting said modified PPP negotiation packet to said PPP layer of the responding correspondent said PPP layer of the responding correspondent receiving said modified PPP negotiation packet and rejecting said unacceptable TCP IP header compression option type said software module receiving said modified PPP negotiation packet having said unacceptable TCP IP header compression option type and said software module modifying said unacceptable TCP IP header compression option type to said acceptable TCP IP header compression option type and transmitting said PPP negotiation packet to said initiating correspondent.

In one aspect there is provided a computer readable medium having stored thereon computer readable instructions for disabling header compression of TCP IP headers during an establishment and configuration of a communication protocol and communication channel between an initiating correspondent and a responding correspondent said computer readable instructions comprising instructions for the initiating correspondent transmitting at least one PPP negotiation packet having at least one acceptable TCP IP header compression option type said acceptable TCP IP header compression option type being associated with a first instruction set for said establishment and configuration of said communication protocol and communication channel a software module coupled to a PPP layer of the initiating correspondent intercepting and examining said at least one PPP negotiation packet before said at least one PPP negotiation packet is transmitted to said responding correspondent said software module modifying said acceptable TCP IP header compression option type to an unacceptable TCP IP header compression option type to establish a modified PPP negotiation packet and transmitting said modified PPP negotiation packet to a PPP layer of the responding correspondent said PPP layer of the responding correspondent receiving said modified PPP negotiation packet and rejecting said unacceptable TCP IP header compression option type said software module receiving said modified PPP negotiation packet having said unacceptable TCP IP header compression option type and said software module modifying said unacceptable TCP IP header compression option type to said acceptable TCP IP header compression option type and transmitting said PPP negotiation packet to said PPP layer of the initiating correspondent.

In a further aspect said communication channel is selected from the group consisting of a local area network LAN a wide area network WAN the Internet and a wireless system using a wireless application protocol WAP .

In yet a further aspect at least one of said initiating correspondent and said responding correspondent is a handheld device.

In yet a further aspect said protocol stack is based on a 7 layer open systems interconnection OSI model.

Reference is first made to which is an overview of a system for manipulating packet header compression parameters shown generally by the numeral in a preferred embodiment. This manipulation is achieved by substituting at least one instruction set associated with a PPP negotiation packet ai the PPP layer of a protocol stack . The instruction set is used in establishing a communication channel between a pair of correspondents and . It will be appreciated by persons skilled in the art that the communication channel may be any network such as a local area network LAN a wide area network WAN the Internet or a wireless system using for example a wireless application protocol WAP may be used. The correspondents and are typically computing devices that are but not limited to personal computers handheld devices cell phones pagers and microprocessor based wireless information devices.

The correspondents and include a processing unit computer readable medium including ROM flash memory non volatile RAM magnetic disk optical disk IC memory card or magnetic tape. Also the correspondents and execute an operating system such as Microsoft Windows 2000 Windows CE UNIX EPOC Pocket PC OS or PALM OS .

In the preferred embodiment the correspondents and are handheld devices such as Palm or Handspring Visor executing the PALM OS operating system from Palm Inc California USA. Looking at showing the network protocols in the PALM OS environment the protocol stack is based on the 7 layer OSI model. Thus the stack includes an applications layer for applications such as web browsers and other application programs a network library coupled to the applications layer via a network library application programming interface API . The network library includes a transport TCP and UDP layer a network IP layer and a data link PPP and SLIP layer for negotiating a set of communication and configuration parameters. These layers and are integrated to substantially optimize performance such as speed and space especially in a handheld environment. The protocol stack and the application programs may be stored in the computer readable medium or may be embedded in the computer readable medium.

The Point to Point Protocol PPP provides a standard method of encapsulating Network Layer protocol information over point to point links. PPP also defines an extensible Link Control Protocol and proposes a family of Network Control Protocols NCPs for establishing and configuring different network layer protocols

In order to establish compression of IP datagrams sent over a PPP link each end of the link must agree on a set of configuration parameters for the compression. The process of negotiating link parameters for network layer protocols is handled in PPP by a family of network control protocols NCPs . Typically this is accomplished before any PPP link is established for data flow over that link.

As mentioned above Van Jacobson TCP IP header compression reduces the size of the TCP IP headers to as few as three bytes. This can be a significant improvement on slow serial lines particularly for interactive traffic. The Van Jacobson IP Compression Protocol Configuration Option is used to indicate the ability to receive compressed packets. Therefore each of the correspondents and must separately request this option if bi directional compression is desired. shows an example of an IP Compression Protocol configuration option format to negotiate Van Jacobson TCP IP header compression.

The PPP negotiation occurs prior to exchanging standard routing information and data traffic over PPP datalinks. In order to establish the communication protocol and the channel a compression option such as X Y or Z is negotiated by the pair of correspondents and . Once an acceptable compression option type has been chosen it is included in the Compression Request packet and the compression response packet. For example the negotiation packets may include instruction sets associated with a plurality of options such as X Y or Z. Once PPP negotiations are completed the IP packets are sent using the agreed upon compression options. If either correspondent or does not accept a compression option then this compression option will not be used.

The Van Jacobson TCP IP Header Compression negotiation is a series of negotiation packets exchanged between PPP correspondents and to negotiate a set of options and option values when sending data. Typically the negotiation involves two separate dialogs between two correspondents and . Generally the dialog begins with correspondent asking negotiating and then receiving confirmation of the compression options that are used when sending data to correspondent . This dialog starts with correspondent sending a Compression Request message and ends when correspondent sends a Compression Ack message. Similarly correspondent asks negotiates and then receives confirmation of the compression options that are used when sending data to correspondent . This dialog starts with correspondent sending a Compression Request message and ends when correspondent sends a Compression Ack message.

However when correspondent or sends its initial Compression Request the response is any of the following a Compression Nack message because one or more options have unacceptable values a Compression Reject message because one or more of the options are unknown or not negotiable or a Compression Ack message because all of the options have acceptable values. Typically when a correspondent or receives a Compression Nack message or Compression Reject message in response to its Compression Request message it sends a new Compression Request message with modified options or option values. When a Compression Ack message is received the initiating correspondent or is ready to send data.

However as shown in in the preferred embodiment at least one of the correspondents and includes a software module placed at the PPP layer of the protocol stack . The software module is used to intercept data packets up and down the protocol stack in order to examine or modify the IP packets. Such modification may include implementation of IP Security Architecture IPSec which provides data confidentiality and authentication services to IP data packets. The software module may be implemented as a driver. The negotiation process for between a pair of correspondents and will now be described with reference to . By way of example the process starts off with step in which correspondent sends a Compression Request message requesting a compression option X for the TCP IP header and upon receiving the Compression Request the driver sends a Compression Reject message since the option type X is not negotiable. Similarly should the PPP layer of correspondent send a new Compression Request message in step the driver intercepts that Compression Request message and sends a Compression Reject message back to the PPP layer of correspondent .

Therefore each time the correspondent sends a new Compression Request message the driver issues a Compression Reject message thus effectively disabling the Van Jacobson TCP IP header compression.

In another embodiment the method of disabling Van Jacobson TCP IP header compression by manipulating the header compression parameters is described as shown in . This method is especially useful in instances where the driver cannot send packets in the direction opposite to the direction in which the packet was received while the driver is processing packets. From the PPP layer of the remote correspondent sends a Compression Request message in step the driver modifies the acceptable compression option type X to an unacceptable type A and passes the modified Compression Request packet up to the PPP layer of Correspondent . The PPP layer of correspondent rejects this illegal type as being unacceptable and sends it back to the driver as a Compression Reject packet. In step the driver intercepts the Compression Reject packet and modifies the unacceptable option type such as option type A back to the original compression option type X and sends it to the correspondent . Similarly when the driver intercepts a Compression Request packet sent by a PPP layer of correspondent to the correspondent the driver modifies the compression option type to an unacceptable option type A and sends the packet to the correspondent . Since the option type is not acceptable the correspondent responds with a Compression Reject message and the driver modifies the unacceptable option type A back to the original compression type X and sends it to the PPP layer of the correspondent .

Therefore each time the correspondent sends a new Compression Request message the driver issues a Compression Reject message thus effectively disabling the Van Jacobson TCP IP header compression.

The above described embodiments of the invention are intended to be examples of the present invention and alterations and modifications may be effected thereto by those of skill in the art without departing from the scope of the invention which is defined solely by the claims appended hereto.

