---

title: Multi-publisher routing protocol for named data networks
abstract: A multi-publisher routing system facilitates forwarding an Interest to multiple publishers associated with a namespace. During operation, network devices across a computer network can perform distance-vector routing with one or more network neighbors to determine a network topology. Also, one or more network devices may receive a namespace-join message from one or more publishers that are to provide content objects for the namespace. These network devices that receive the namespace-join message can construct an acyclic graph that includes one or more publishers for the namespace, and includes one or more forwarder nodes that form network paths between the one or more publishers. Then, when a network node in the acyclic graph receives an Interest message that specifies a name prefix associated with the namespace, this network node can forward the Interest message along the acyclic graph to one or more publishers associated with the namespace.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09363179&OS=09363179&RS=09363179
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09363179
owner_city: Palo Alto
owner_country: US
publication_date: 20140326
---
This disclosure is generally related to named data networking NDN . More specifically this disclosure is related to a multi publisher routing protocol for forwarding Interests to a plurality of publishers associated with a name prefix specified by the Interest.

In custodian based routing a node that is an authoritative source for a namespace creates two bindings one binding from the namespace to an identifier for the node and another binding from the node s identifier to one or more network addresses for the node. Other network nodes can cache data in the same namespace and can return this cached data to satisfy an Interest to this namespace. However they are not authoritative sources for the namespace so they cannot create the binding to the namespace such as by advertising themselves as a source for the namespace.

To make matters worse in custodian based routing an authoritative source floods an advertisement for a namespace over the network such as by using the CCN sync protocol. This allows the network peers to know all the bindings in the computer network. However managing all namespace to device bindings across all nodes in a computer network does not scale well when namespaces have a large set of authoritative sources especially as some of these authoritative sources may only be sources for short periods of time.

In link state advertising a publisher advertises a set of names that map to the publisher s node and advertises the connectivity of the publisher s node. For example a publisher with a node z may advertise a set of names sweet tart z and a node connectivity z w x. There are two common versions of LSA Optimized Link State Routing Protocol OLSR and Named data Link State Routing Protocol NLSR . NLSR performs LSA by specifying adjacency information e.g. a a b a c c c d c a and specifying content available from each node e.g. a c c d c . Hence a node p adjacent to nodes b d can obtain cfrom node d and a node b adjacent to nodes a d p can obtain cfrom node a or node d. The link state advertisements are written as content centric networking CCN content objects and are synchronized using the CCN sync protocol between the nodes. Hence NLSR requires using CCN for routing messages across the network. Also NLSR suffers from similar scalability issues to custodian based routing given that NLSR creates a mapping of names to nodes and advertises node addresses.

OLSR on the other hand uses its own messaging format between nodes. OLSR does not require using CCN sync to exchange messages between network nodes. For example OLSR uses its own messaging format to carry information about the names instead of sending out information about IP addresses. Also OLSR supports one path to nearest content. For example the network nodes can flood their content information across the network. Each node receives a digest of the content provided by the other nodes and connectivity information for the other nodes. Hence each node can perform Dijkstra s algorithm to compute the shortest paths to nodes and to content. These nodes can also determine other possible paths by deleting a link for this shortest path and recomputing a second shortest path using the remaining network graph. The end result is that the network node can determine various shortest paths to a named content object.

Unfortunately the above mentioned routing protocols require all publishers to flood the network with their information. For example multiple network nodes may each generate different content for a given namespace. In order for network clients to be able to obtain content from these various publishers each of these publishers needs to flood the network with information that maps them to the namespace. This allows an Interest message from a network client to reach any of the publishers in the network. However flooding the network with information from every publisher in the network can require the network nodes to include an undesirably large repository of namespace to device mappings. Also each time a publisher enters or leaves a namespace the publisher and the other network nodes will need to flood changes to the namespace to device mappings to reflect the publishers that have entered or left the network.

One embodiment provides a multi publisher routing system that facilitates forwarding an Interest to multiple publishers associated with a namespace. During operation the network devices across a computer network can perform distance vector routing with one or more network neighbors to determine a network topology for a computer network. Also one or more network devices may receive a namespace join message from one or more publishers in the computer network that are to provide content objects for the namespace. These network devices that receive the namespace join message can construct an acyclic graph that includes one or more publishers for the namespace and includes one or more forwarder nodes that form network paths between the one or more publishers. Then when a network node in the acyclic graph receives an Interest message that specifies a name prefix associated with the namespace this network node can forward the Interest message along the acyclic graph to one or more publishers associated with the namespace.

In some embodiments a network node can receive a core election for a multi publisher namespace such that the core election specifies a namespace and specifies a publisher in the acyclic graph that is to function as a core network node for the namespace. The network node can store the core election in association with the namespace. This network node can be a node in the acyclic graph such as a forwarder or a publisher or can be a node outside the acyclic graph. Then when the network node receives the Interest the network node can forward the Interest message to at least the elected core.

In some variations to these embodiments the one or more network devices can construct the acyclic graph by forwarding the namespace join message toward the elected core to activate the network paths in the acyclic graph that include the forwarder nodes between the publisher and the elected core.

In some variations to these embodiments a network node can receive an election of one or more publishers in the acyclic graph that are each to function as a core network node for the namespace.

In some variations to these embodiments after receiving the core election from a first neighbor in the acyclic graph a network node can forward the core election to a second neighbor in the acyclic graph.

In some variations to these embodiments a network device can receive a first core advertisement from a first neighbor in the acyclic graph such that the first core advertisement specifies a first publisher in the acyclic graph that is to function as a core for the namespace. If the network device also receives a second core advertisement from a second neighbor in the acyclic graph which specifies a second publisher in the acyclic graph that is to function as a core for the namespace the network device compares information on the first and second core network nodes to elect a core for the namespace. Then if the network device elects the first network node as the core for the namespace the network device forwards the first core advertisement to at least the second neighbor.

In some variations to these embodiments the acyclic graph includes a directed acyclic graph DAG topology.

In some variations to these embodiments during distance vector routing a network device can receive network neighborhood information from the one or more network neighbors. The network device then updates local network neighborhood information to include the network neighborhood information from the one or more network neighbors and sends the local network neighborhood information to the one or more network neighbors. The network device can determine a set of network nodes in the network topology and can determine an interface and a distance to a respective network node in the network topology. This distance can indicate for example a cost to reach the respective network node. The network device then stores the direction and distance to the respective network node.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide a multi publisher routing protocol that solves the problem of forwarding an Interest to multiple content publishers over a named data network. For example in a typical named data network NDN network nodes forward an Interest toward one content producer that can return content that satisfies the Interest. If a network client desires to obtain content from multiple content producers the client may need to include additional information in the Interest s name to guide the Interest toward a different content producer.

However using the multi publisher routing protocol the network nodes can bifurcate an Interest to multiple publishers that have joined the namespace. This allows a group of computers to establish a shared session such as a video conference or chat session by each computer becoming a publisher for the session. A member of the session can obtain content from all other members by disseminating an Interest with a namespace for the session and nodes of the computer network can bifurcate the Interest to the various other members of the session. Hence using the multi publisher routing protocol a computer can receive content generated by multiple publishers without having to request content from each publisher directly.

To configure the multi publisher routing protocol for a given namespace a computer network can elect one or more network nodes to be a core for the namespace. This allows any device in the network to forward Interests for the namespace toward the core. Also various producers can join the namespace which constructs an acyclic graph that forms paths from these producers to the one or more cores. When a network client disseminates an Interest for the namespace the network nodes can forward the Interest toward a core until the Interest reaches any node of the acyclic graph. A forwarder node of the acyclic graph can bifurcate the Interest toward multiple publishers that have joined the namespace.

In some embodiments the network clients network nodes e.g. forwarders and publishers communicate over an information centric network ICN . In ICN each piece of content is individually named and each piece of data is bound to a unique name that distinguishes the data from any other piece of data such as other versions of the same data or data from other sources. This unique name allows a network device to request the data by disseminating a request or an Interest that indicates the unique name and can obtain the data independent from the data s storage location network location application and means of transportation. Named data network NDN or a content centric network CCN are examples of ICN architecture the following terms describe elements of an NDN or CCN architecture 

Content Object A single piece of named data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name.

Unique Names A name in an ICN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ndn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ndn test.txt. Thus the name parc home ndn can be a parent or prefix of parc home ndn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814 entitled ORDERED ELEMENT NAMING FOR NAME BASED PACKET FORWARDING by inventor Ignacio Solis filed 20 Mar. 2013 which is hereby incorporated by reference. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

Interest A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an information centric network which CCN NDN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

In some embodiments the ICN system can include a content centric networking CCN architecture. However the methods disclosed herein are also applicable to other ICN architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference.

In some embodiments network uses a core based acyclic graph to establish multicast routing of Interests to multiple publishers. Acyclic graph can include a directed acyclic graph DAG topology that forwards Interests toward an elected core for acyclic graph . For example network nodes in acyclic graph can elect a publisher as a core for the graph e.g. core such that the elected core can receive Interests for the acyclic graph and can dispatch the Interests toward the other publishers. When an Interest is disseminated for the acyclic graph s name prefix the Interest can flow to the acyclic graph s core who then bifurcates the Interest to the other member nodes of the acyclic graph. Hence the core can allow Interests to multicast to the group of publishers for the graph s namespace.

Acyclic graph can also include a set of forwarders and that form directed paths from one or more publishers to the core for the acyclic graph. A publisher that is not a core can send a period join message toward the acyclic graph s core. This join message activates the paths in the acyclic graph that include the forwarders between the publisher and the core.

Also in some embodiments the publishers in acyclic graph can participate in a multicast group such as by disseminating an Interest with the namespace to obtain content from the other publishers in the group. For example a group of users may be interested in engaging in a conversation on a topic apple pie. These users may configure publishers and to establish a chat session or video conference by joining the namespace apple pie. This allows publishers and to generate content for the namespace and to disseminate Interests for this namespace to receive content from the other nodes in the namespace.

During the session publisher can generate an Interest for the apple pie namespace and multicasts the Interest to publishers and . The forwarder nodes in network e.g. forwarders and then forward the Interest to both publishers and but not to other nodes that have not joined the namespace. For example when forwarder receives the Interest from publisher forwarder may bifurcate the Interest toward publisher and forwarder . Forwarder then forwards the Interest to publisher . Publishers and can both respond to the Interest to return new data for the session. This ensures that each participant of the session can receive content e.g. video streams or chat messages published by all other participants of the session.

It is also possible for other nodes in acyclic graph to bifurcate the Interest. For example client device can receive data from the namespace apple pie by disseminating an Interest for the namespace. Note that the routers and other network nodes in network can include routing information for the apple pie namespace that routes the related Interests toward core . In a custodian based networking protocol for example the network nodes in network e.g. forwarders and may include information that establishes core as the custodian for the namespace. This allows client device and or any other network device to disseminate Interests for this namespace toward acyclic graph . In some occasions the Interest can reach forwarder node forwarder before the Interest reaches core . Forwarder node can bifurcate the Interest to send one copy to core and to send another copy to forwarder . Forwarder can send the Interest to publisher and core can send the Interest to publisher via forwarder .

In some embodiments one or more publisher network nodes in the network can be a core for a namespace in a named data network. A core can advertise itself as a source for content within the namespace which allows NDN forwarder nodes to forward Interests for this content toward the core. Other publishers for the namespace can also provide content to satisfy Interests associated with the namespace without having to be a core by sending a join that propagates across the network toward a core for the namespace.

The network node can receive one or more join messages for the namespace operation and can use these join messages to construct or update an acyclic graph for the namespace operation . For example the local network node can analyze the join message to determine a network node that is joining the namespace as a publisher registers this network node as a publisher for the namespace and stores an interface to this publisher. The local network node can also forward the join message toward a core to allow other nodes along a path to the core to register the publisher with the namespace. By the time the join message reaches the core the network nodes along the path to the core would have created a directed path from the publisher to the core. These network nodes in a path between a publisher and a core are hereinafter referred to as forwarder nodes. Once the publishers have joined the namespace the forwarder nodes can use the acyclic graph to forward Interests for the namespace to the core and can also forward the Interests toward the publishers that have joined the namespace operation .

The local network node can use the network neighborhood information to generate a distance vector to a set of other network nodes in the network topology. For example the local node can identify a set of network nodes in the network topology operation and determines an interface and a distance to each respective network node in the network topology operation . The local node can store the direction and distance to each network node in a flat data structure for example in a vector or array operation .

The network device can also receive a join message from a publisher that is to provide content for the namespace operation . If the network device receives a join message for the namespace the network device can store routing information for the publisher in association with the namespace operation and forwards the join message toward the one or more elected cores for the namespace operation . Storing the publisher s routing information and forwarding the join message to the elected cores causes the local network node to join the acyclic graph for the namespace and to become a forwarder in the acyclic graph. Once the publisher s join message reaches an elected core the forwarder nodes between the publisher and the elected core form a directed path to the core in the acyclic graph for the namespace.

In some embodiments a system administrator can elect one or more cores for an acyclic graph. This allows the system administrator to use any persistent publishers for the namespace to bifurcate Interests to other publishers that may join the namespace intermittently. For example the system administrator can select multiple publishers to use as cores and can configure all nodes in the acyclic graph to recognize these multiple publishers as elected cores. Alternatively the system administrator can configure these publishers to advertise themselves as administrator elected cores that were elected by the system administrator. This way when a forwarder of the acyclic graph receives multiple core advertisements the forwarder can determine that the multiple publishers have been elected as simultaneous cores. Either of these two techniques produces a deterministic mapping of a namespace to a set of elected cores.

In some embodiments the acyclic graph includes one core that is elected by the other nodes in the acyclic graph based on the core s reachability and or performance. For example each publisher for a namespace can elect itself as a core for the namespace and disseminates a core advertisement which elects the local publisher as a core for the namespace to its neighbors. When the publisher s neighbors or other network nodes receive the core advertisement these nodes proceed to elect the publisher as the core for the namespace. However when a network node receives multiple core advertisements the network node analyzes performance metrics for the advertised cores to elect one core for the acyclic graph. Eventually all nodes in the acyclic graph agree upon a core for the acyclic graph as these nodes have all received the same publisher s core advertisement and they have each elected this publisher as the core.

It is possible for the network device to receive to receive other core advertisements at a future time. If the network device receives a core advertisement Afrom a neighbor Nfor the same namespace as core advertisement A operation the network device can select a core from advertisements Aand A. For example the network device can determine information for a network device Dspecified in the core advertisement A operation and compares metric information on devices Dand Dto elect a core for the namespace operation . This metric information can be provided by the publishers themselves in their core advertisements. For example the metric information can include an IP address a node centrality measurement a node performance measurement e.g. available bandwidth responsiveness etc. and or any other network performance metric now known or later developed. In some embodiments a publisher can compute its node centrality based on a number or percentage of nodes across the network for which the publisher knows its identity and based on the publisher s reachability to these nodes.

If the local network device decides to keep device Das the elected core operation the network device can forward the core advertisement Dto neighbor Nthat had provided advertisement A operation . When neighbor Nreceives core advertisement A neighbor Ncan perform the same election process between core advertisements Aand Ato elect device Das the core for the namespace. Also in some embodiments the local network device and neighbor Ncan retain core advertisement Afor device D as a backup core election which can be used as the primary core on the occasion that device Dgoes offline or becomes unreachable.

On the other hand if the local network device decides to elect device Das the core for the namespace operation the local network device proceeds to elect device Das the core operation and forwards core advertisement Ato neighbor N and to any other neighbors that have not elected device Das the core for the namespace operation . In some embodiments the local network device and neighbor Ncan store core advertisement Afor device Das a backup core election which can be used as the primary core on the occasion that device Dgoes offline or becomes unreachable.

In some embodiments the elected core does not need to be a persistent publisher for the namespace given that the acyclic graph can accommodate cores that go off line by electing a new core for the acyclic graph or by reverting to a backup core for the acyclic graph. For example when a network node receives multiple core advertisements the network node can store the core advertisements for the publishers that it does not elect as a core. This way if a core network device fails stop advertising itself or becomes unreachable the local network node can perform core failover by electing a new core based on the stored core advertisements. Also if a network node elects a new core via core failover the network node can forward the core advertisement for the new core to its neighbors so that they too may use this core advertisement while performing core failover.

In some embodiments the nodes in the computer network need to know who the cores are for a given namespace and how to reach the cores. For example a set of nodes outside an acyclic graph for the namespace can use link state advertisement LSA to forward an Interest toward a core. Once the Interest reaches nodes in the acyclic graph these nodes can use the multi publisher routing protocol to forward the Interest to all publishers associated with the Interest s name prefix.

During operation the network device can receive an Interest for the namespace operation and can determine whether the device is a core for the namespace operation . If the device is not a core for the namespace the network device can perform a lookup operation to identify a core operation and forwards the Interest toward the core operation . This allows a node outside the acyclic graph to forward the Interest to reach any node of the graph and also allows a forwarder of the acyclic graph to forward the Interest toward a nearest core for the namespace.

In some embodiments if the local network device that receives the Interest is a forwarder or a core of the acyclic graph the network device may have received a join message from one or more publishers for the namespace. If so the device can forward the Interest directly to the publisher without requiring the Interest to first reach the core. For example the device can perform a lookup operation to identify one or more publishers associated with the namespace operation . Recall that the network device stores each publisher in association with the namespace and in association with an interface to use to forward packets to the publisher. If the device identifies at least one publisher operation the device can forward the Interest using an interface associated with each identified publisher operation .

In some embodiments if the network device is a core for the namespace the core may not need to forward the Interest to another core e.g. operations and . Hence the network device can proceed to operation to forward the Interest toward one or more publishers without searching for other cores to forward the Interest to.

Also once the Interest from the client device reaches a publisher that can return data to satisfy the Interest s name this publisher can return a content object that includes the data for the client device. The content object propagates across the network via a path traversed and established by the Interest. In some embodiments the client device receives one content object for each Interest that it disseminates. This is because the network nodes establish a temporary path by including an entry in a pending Interest table PIT for the Interest. Once the content object is returned to satisfy the Interest the network nodes e.g. forwarders perform a lookup operation in the PIT to determine an interface to use to return the content object and return the content object via this interface. If another publisher returns a second content object to satisfy the Interest and the PIT entry was removed by a network node after returning the first content object the network node can cache the content object in association with the Interest without returning the content object toward the client device.

The client device can obtain multiple content objects from the various publishers by disseminating additional Interests for the namespace. A publisher that returns a content object to satisfy an Interest can also include additional information that can be used by the client to generate follow up Interests to receive additional content objects. For example a publisher can generate a content object to include the data requested by the client and to also include e.g. in the name or in the payload a list of other publishers that can also provide content to the client. Also if the publisher can return a content object but does not have any additional data to return to the client the additional information can inform the client that the publisher does not have additional content for the namespace. Then after the client device receives the content object the client device can generate a follow up Interest which excludes this publisher as a target for the Interest and or may specify the other publishers toward which the Interest is to be forwarded. This way the forwarders in the acyclic graph can forward the Interest toward the other publishers based on the inclusion list and or based on the exclusion list. The client device can also generate the follow up Interest to specify a list of received content objects which the publishers can use to determine which other content objects to return to the client.

It is possible that the follow up Interest can arrive at a forwarder that has cached a content object for the namespace due to the namespace being removed from the PIT by another content object. In some embodiments the forwarder can return this cached content object to satisfy the Interest. The forwarder can also remove the cached content object after returning the content object to the client for example to avoid returning duplicate content objects if the client disseminates additional Interests for the same namespace. Alternatively the forwarder can retain the content object in the cache to satisfy Interests from other clients. In this case the forwarder returns the cached content object if the Interest s list of received content object does not specify the cached content object and or if the Interest s list of excluded publishers doesn t include the cached content object s publisher.

In some embodiments communication module can receive a namespace join message from a publisher that is to provide content for the namespace and can receive Interest messages from clients or other publishers that desire to receive data associated with the namespace. Routing module can perform distance vector routing with one or more network neighbors to determine a network topology for a computer network. Graph constructing module can construct an acyclic graph that includes multiple publishers for the namespace. Interest processing module can forward the Interest message along the acyclic graph to one or more publishers associated with the namespace in response to the communication module receiving an Interest message that specifies a name prefix associated with the namespace.

Routing system can include instructions which when executed by computer system can cause computer system to perform methods and or processes described in this disclosure. Specifically routing system may include instructions for receiving a namespace join message from a publisher that is to provide content for the namespace and for receiving Interest messages from clients or other publishers that desire to receive data associated with the namespace communication module . Routing system can include instructions for performing distance vector routing with one or more network neighbors to determine a network topology for a computer network routing module and for constructing an acyclic graph that includes multiple publishers for the namespace graph constructing module . Routing system can also include instructions for forwarding the Interest message along the acyclic graph to one or more publishers associated with the namespace in response to receiving an Interest message that specifies a name prefix associated with the namespace Interest processing module .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

