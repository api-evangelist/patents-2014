---

title: Trusted hardware for attesting to authenticity in a cloud environment
abstract: Apparatuses, computer readable media, methods, and systems are described for storing a first measurement of a virtualization platform, storing a second measurement of a measured virtual machine, generating a quote using a key, wherein the quote is based on the first measurement and the second measurement, and providing the quote for attesting to authenticity of the virtualization platform and of the measured virtual machine. In a further example, the quote may be generated based on a third measurement of a secure tunnel.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09184918&OS=09184918&RS=09184918
owner: Bank of America Corporation
number: 09184918
owner_city: Charlotte
owner_country: US
publication_date: 20140616
---
This application is a continuation of U.S. patent application Ser. No. 13 422 751 entitled Trusted Hardware for Attesting to Authenticity in a Cloud Environment filed Mar. 16 2012 which claims the benefit of and priority to U.S. Provisional Patent Application No. 61 492 612 entitled Hardware Based Root of Trust for Multitenant Cloud Environments filed Jun. 2 2011 and U.S. Provisional Patent Application No. 61 476 747 entitled IAAS Cloud Architecture filed Apr. 18 2011. Each of the foregoing applications is incorporated herein by reference in their entirety.

Cloud computing is becoming increasingly popular. In cloud computing a cloud may be an aggregation of resources provisioned on demand. Cloud computing may involve cloud resources performing computations instead of or in addition to a user s computer. Cloud computing has been compared to a utility where computing is the service being provided.

Cloud computing however may present issues with information security and integrity. Use of cloud computing requires trusting the computers that make up the cloud the network with which the cloud is connected the individuals and organizations that operate the cloud and the physical environment in which cloud resources are placed. Trusting these computers in existing clouds however is not an acceptable risk for many. In view of such issues improvements in cloud computing environments are needed.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the disclosure. The summary is not an extensive overview of the disclosure. It is neither intended to identify key or critical elements of the disclosure nor to delineate the scope of the disclosure. The following summary merely presents some concepts of the disclosure in a simplified form as a prelude to the description below.

According to aspects of example embodiments apparatuses computer readable media methods and systems are described for providing hardware based root of trust in a cloud environment.

In some aspects. apparatuses computer readable media methods and systems are described for generating and communicating a create measured virtual machine VM request the request comprising a network address of a boot server initiating establishment of a secure tunnel with a measured VM receiving a quote from the measured VM and determining by a processor whether the measured VM is authentic based on the quote.

In some aspects apparatuses computer readable media methods and systems are described for generating a first measurement of a virtualization platform receiving a create measured virtual machine request comprising authentication information in response to the request creating a measured virtual machine based on the authentication information generating a second measurement of the measured virtual machine and communicating a quote generated based on the first measurement and the second measurement for attesting to authenticity of the virtualization platform and of the measured virtual machine.

In some aspects apparatuses computer readable media methods and systems are described for storing a first measurement of a virtualization platform storing a second measurement of a measured virtual machine generating a quote using a key wherein the quote is based on the first measurement and the second measurement and providing the quote for attesting to authenticity of the virtualization platform and of the measured virtual machine. In a further example the quote may be generated based on a third measurement of a secure tunnel.

Aspects of the embodiments may be provided in at least one computer readable medium and or memory storing computer executable instructions that when executed by at least one processor cause a computer or other apparatus to perform one or more of the process steps described herein.

These and other aspects of the embodiments are discussed in greater detail throughout this disclosure including the accompanying drawings.

In the following description of the various embodiments reference is made to the accompanying drawings which form a part hereof and in which is shown by way of illustration various embodiments in which the disclosure may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope and spirit of the present disclosure.

With reference to the computing system environment may include a computing device having a processor for controlling overall operation of the computing device and its associated components including random access memory RAM read only memory ROM communications module and memory . Computing device may include a variety of computer readable media. Computer readable media may be any available media that may be accessed by computing device may be non transitory and may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions object code data structures program modules or other data. Examples of computer readable media may include random access memory RAM read only memory ROM electronically erasable programmable read only memory EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store the desired information and that can be accessed by computing device .

Although not required various aspects described herein may be embodied as a method a data processing system or as a computer readable medium storing computer executable instructions. For example a computer readable medium storing instructions to cause a processor to perform steps of a method in accordance with aspects of the disclosed embodiments is contemplated. For example aspects of the method steps disclosed herein may be executed on a processor on computing device . Such a processor may execute computer executable instructions stored on a computer readable medium.

Software may be stored within memory and or storage to provide instructions to processor for enabling computing device to perform various functions. For example memory may store software used by the computing device such as an operating system application programs and an associated database . Also some or all of the computer executable instructions for computing device may be embodied in hardware or firmware. Although not shown RAM may include one or more are applications representing the application data stored in RAM while the computing device is on and corresponding software applications e.g. software tasks are running on the computing device .

Communications module may include a microphone keypad touch screen and or stylus through which a user of computing device may provide input and may also include one or more of a speaker for providing audio output and a video display device for providing textual audiovisual and or graphical output. Computing system environment may also include optical scanners not shown . Exemplary usages include scanning and converting paper documents e.g. correspondence receipts and the like to digital files.

Computing device may operate in a networked environment supporting connections to one or more remote computing devices such as computing devices and . The computing devices and may be personal computing devices or servers that include many or all of the elements described above relative to the computing device . Computing device may be a mobile device e.g. smart phone communicating over wireless carrier channel .

The network connections depicted in may include a local area network LAN and a wide area network WAN as well as other networks. When used in a LAN networking environment computing device may be connected to the LAN through a network interface or adapter in the communications module . When used in a WAN networking environment computing device may include a modem in the communications module or other means for establishing communications over the WAN such as the Internet or other type of computer network. It will be appreciated that the network connections shown are illustrative and other means of establishing a communications link between the computing devices may be used. Various well known protocols such as TCP IP Ethernet FTP HTTP and the like may be used and the system can be operated in a client server configuration to permit a user to retrieve web pages from a web based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.

The disclosure is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the disclosed embodiments include but are not limited to personal computers PCs server computers hand held or laptop devices smart phones multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

Referring to an illustrative system for implementing example embodiments according to the present disclosure is shown. As illustrated system may include one or more workstation computers . Workstations may be local or remote and may be connected by one of communications links to computer network that is linked via communications links to server . In system server may be any suitable server processor computer or data processing device or combination of the same. Server may be used to process the instructions received from and the transactions entered into by one or more participants.

Computer network may be any suitable computer network including the Internet an intranet a wide area network WAN a local area network LAN a wireless network a digital subscriber line DSL network a frame relay network an asynchronous transfer mode ATM network a virtual private network VPN or any combination of any of the same. Communications links and may be any communications links suitable for communicating between workstations and server such as network links dial up links wireless links hard wired links as well as network types developed in the future and the like.

The steps that follow in may be implemented by one or more of the components in and or other components including other computing devices.

Each of the systems in may include a tenant data center and a cloud provider data center . A cloud provider may be an organization that creates a cloud platform used by one or more tenants to execute computational workloads. A tenant may be a user or an organization that uses the cloud platform to execute its computational workloads. The tenant data center may include computer hardware e.g. one or more computing devices and software controlled by a tenant. The cloud provider data center may include computer hardware e.g. one or more computing devices and software controlled by the cloud provider. The cloud provider data center may provide a computational service permitting one or more tenants to execute computational workloads using virtual machines VMs . A cloud provider may also be one of the tenants.

In an example a VM may be a software implementation of a computer that executes computer programs as if it were a standalone physical machine. Tenants may initiate creation of VMs within the cloud environment for execution of their workloads. The tenant may request that the cloud environment instantiate a new instance of a VM that may be completely empty without any executable code in which case the executable code such as for example a bootloader may be supplied by the tenant over a network. The bootloader may include instructions informing the VM of how the VM is to operate and may for example facilitate loading of an operating system. The bootloader may be the operating system itself may include a workload or both. An ordinary VM may not be trusted but the process described below may permit a tenant to verify integrity and authenticity of a VM as well as the hardware and software running the VM prior to forwarding the bootloader and the workload.

Each of the systems shown in may include a tenant controlled cloud demilitarized zone DMZ which may be part of the cloud provider data center see or part of the tenant data center see depending on a desired implementation. The tenant controlled cloud DMZ may be trusted physical space over which the tenant has physical and logical control. This space may include dedicated communication storage and computer components used for checking integrity authenticity and correctness of the cloud environment and optimizing operation of cloud nodes. The tenant may use the cloud DMZ as the basis from which to extend trust into the cloud environment.

The tenant data center may include a cloud orchestrator and an internal database coupled to a tenant network . The cloud orchestrator may be a combination of hardware software and processes that provide automation and ensure authorization and entitlement of an instance of a VM. The cloud orchestrator may also track state and disposition of each VM instance throughout its entire life cycle.

The tenant data center may include a firewall to control communication between tenant network and router and router may communicate with a router of cloud provider data center . When tenant controlled cloud DMZ is included in cloud provider data center see and to protect against threats tenant controlled cloud DMZ may include an internal firewall and an external firewall . The firewalls and may regulate types of data and communications that may enter and leave tenant controlled cloud DMZ . The external firewall may be coupled to a cloud virtual local area network VLAN .

The VLAN may be dedicated to a single tenant and all VMs attached to this VLAN may belong to the same tenant. A VM may be considered a Measured VM when running in a cloud environment whose authenticity has been verified using the process described herein by remotely attesting to an virtualization platform and hardware on which the VM is running depicts three Measured VMs A C however any number of virtual machines may be used. Virtual private cloud may represent VMs instantiated for a particular tenant. The VLAN may also be connected to virtual provide clouds for other tenants . The virtual private clouds for other tenants may represent the VMs instantiated for other tenants. As such the systems in are multitenant environments as each may instantiate one or more VMs for each tenant.

The router may be coupled to cloud infrastructure at a cloud platform physical infrastructure that provides a cloud platform . The cloud infrastructure may include the hardware and software to implement the measured VMs . The cloud platform physical infrastructure may be the hardware on which the cloud platform runs. The cloud platform may be software that provides the cloud environment. Cloud platform physical infrastructure may be coupled to virtualization platform physical infrastructure that provides the virtualization platform running the measured VMs . Any physical network link e.g. link created by physical connection such as network cable or fiber cable represented by a line between components in optionally may be encrypted for security measures. For example links between components depicted in as dashed lines e.g. element may represent encrypted links links between components depicted as solid lines e.g. element may represent links that may be encrypted or unencrypted and links between components depicted as including both a dashed line overtop of a solid line e.g. element may represent virtual encrypted links. A virtual encrypted link may be for example a link created by software on top of an encrypted or unencrypted physical link. In other examples some links described above as being encrypted may be unencrypted.

The systems depicted in have similar components to the system of but the location of tenant controlled cloud DMZ differs in each as well as what components are included in the DMZ . For example depicts cloud orchestrator and internal database being part of tenant controlled cloud DMZ and included in cloud provider data center . in contrast depicts tenant controlled cloud DMZ being located entirely within tenant data center . Tenant controlled cloud DMZ of includes cloud orchestrator internal database and Secure Trusted boot server . These system configurations as well as other configurations may be used to provide hardware based root of trust in a cloud environment.

It is noted that in the description provided herein some operations are attributed to a certain device component software and the like. It is within the scope of the example embodiments that operations performed by one element may be performed by another element. Further multiple elements may be combined into a single apparatus that performs the operations of the different elements and operations described as being performed by a single element may be performed by multiple subelements.

An issue with using conventional cloud environments is that a tenant may not trust the cloud infrastructure that provides the cloud environment nor the virtual environment it provides. To permit attestation of integrity and authenticity of the hardware and software running a VM the cloud provider may incorporate a trusted protection module TPM into each virtualization platform physical infrastructure so that the hardware and software running the VMs as well as a configuration of the VMs can be confirmed by the tenant to be reliable. For example the infrastructure may be a collection of servers and each server may include at least one TPM .

TPM technology was conventionally designed to be anonymous and to protect the privacy of the TPM owner. TPM keys and TPM quotes were not uniquely tied to an individual piece of hardware. In the example embodiments rather than providing privacy tenants may determine which piece of TPM hardware has a particular key and produced a particular TPM quote. Since TPM technology prevents creating such an association in an automated fashion the cloud provider may be responsible for creation and correctness of an association between a particular TPM and a TPM quote. This responsibility could be further enforced by binding legal agreements between tenant and cloud provider.

In an example the cloud provider may create and maintain a trusted and verifiable inventory of valid attestation identity keys AIK . AIKs may be a public private key pair. The inventory may identify which public key is associated with which TPM. The inventory may also identify which physical infrastructure contains a particular TPM having a particular AIK public key. The cloud provider may provide each tenant with the inventory using a trusted verifiable process so that the tenant is aware of valid public keys e.g. AIK TPM transport session key and which TPM corresponds to a particular physical infrastructure . For example the tenant may store the key inventory in internal database .

To permit a tenant to confirm the authenticity of the key inventory the cloud provider may sign the inventory using a cloud provider private key which any tenant may verify by confirming the signature using a cloud provider public key. Also a cryptographic hash of the current inventory for example may be made available in other manners e.g. on a cloud provider website or over the phone with appropriate cloud provider personnel . The cloud provider may also support a method to verify authenticity of the AIK public keys using for example Privacy CA PrivacyCA or Direct Anonymous Attestation DAA Protocol. The tenant may use such a method to validate received AIK public keys to ensure that these are in fact generated by a particular TPM .

The cloud provider may update the inventory every time new physical infrastructure containing a TPM is added or removed from the cloud infrastructure . At that time the cloud provider may provide to the tenant an updated key inventory with an updated list of keys. The keys may by audited by physically interrogating a specific physical infrastructure e.g. by booting the physical infrastructure from trusted media and querying the TPM directly to verify the keys in the inventory associated with the physical infrastructure . The tenant may store validated keys as well as keys which fail validation in internal database for use during a process of remote attestation of a Measured VM .

At this point the tenant may trust two things first what the tenant has physical and logical control over e.g. the cloud DMZ tenant data center and second TPMs and computer chips within the cloud environment incorporating core root of trust measurement CRTM technology. TPMs may be trusted as they may be provided by trusted vendors and the authenticity of the keys of the TPM has been verified and audited by the cloud provider. Active Management Technology AMT for example may be used as a CRTM for TXT architecture. Since the tenant is remote from a TPM the attestation of the integrity and authenticity of the cloud infrastructure has to be performed remotely and is thus referred to as remote attestation. Conventional TPMs may provide support for remote attestation such as a TPM transport session but this support might not be complete and might not address all possible threats such as for example MiM attack and Relay Masquerading attack. The example embodiments provide for establishing a secure channel between tenant data center and a TPM to perform remote attestation while protecting against these and other types of attacks. The following describes a remote attestation process for establishing using a TPM trust across a cloud environment between the tenant data center and the cloud infrastructure .

With reference to element 0 of prior to instantiating a new measured VM the TPM may store measurements of some or all binaries configuration settings and or other related information of the virtualization platform and store these values within platform configuration registers PCR registers of the TPM . In an example a TPM may be a specialized hardware chip that is designed to hold keys perform cryptographic and attestation operations and is tamper evident e.g. if the TPM is tampered with the TPM will allow detection of such tampering .

In an example TPM may store attestation identity keys AIKs . AIKs may be a public private key pair that may be used during an attestation process in which the TPM provides a TPM quote that is a function of the stored measurement values and the private key. The private key may be stored by the TPM and kept unrevealed in some examples. The private key may be unique to the TPM and the TPM may store one or more public private key pairs. The public key may be publicly available and used to decrypt the TPM quote to confirm that the TPM is the device that actually created the quote. Because the private key is unique to the TPM the tenant knows that only TPM and not some other device could have created the TPM quote. Public and private keys stored by the TPM may be trusted as the authenticity of these keys may have been verified for example using Privacy Certification Authority PrivacyCA or Direct Anonymous Attestation DAA protocol.

The physical infrastructure may incorporate Dynamic Root of Trust Measurement DRTM technology to work with the TPM . The DRTM technology may be implemented by a central processing unit CPU and chipset of the physical infrastructure . Examples of CRT technology are known in the art such as the TXT technology. DRTM technology may provide protection and support for secure computing. DRTM technology may include extensions to microprocessors and chipsets for establishing hardware based trust and control in a cloud environment. DRTM technology may measure various environment elements without the need to restart hardware of the TPM and also may provide protection against unauthorized access to memory of the physical infrastructure that implements DRTM technology.

The TPM may store measurements of some or every software element participating in a startup process for a measured VM e.g. including but not limited to CPU Firmware Basic Input Output System BIOS BIOS Option Modules bootloader virtualization platform loadable modules configuration information and the like hardware that makes up the physical infrastructure and software and configuration information of the virtualization platform . In an example a measurement may be of at least one of a configuration parameter e.g. software version hardware and the like of a device or software or of a configuration that the tenant may wish to authenticate prior to communicating with the device. The measurement may also be of a binary code e.g. CPU microcode firmware BIOS bootloader operating system component virtualization platform component device driver application and the like that the tenant may wish to authenticate. For example the tenant may wish to confirm that a device is running a particular software version using a particular piece of hardware.

In an example a measurement may be a cryptographic hash e.g. using a secure hash algorithm SHA of one or more of a binary BIOS code firmware of each device in the physical infrastructure bootloader each binary module of the virtualization platform including virtual BIOS and device firmware of the virtual machines created by this virtualization platform and the like. Example requirements of measurements for a PC platform are defined by TCG PC Client Specific Implementation Specification For Conventional BIOS Version 1.20 Final Jul. 13 2005 For TPM Family 1.2 Level 2 the contents of which are incorporated herein by reference in its entirety. The measurements stored within TPM as part of element 0 of may be tenant independent and therefore may apply to all tenants that use the virtualization platform .

In an example physical infrastructure may include a code segment that is trusted and in which trust in other code segments may be established. The trusted code segment may be hard coded into the processor for example. The processor e.g. processor may execute the trusted code segment to measure a first initially untrusted code segment to verify its integrity and pass the measurement value to the TPM for storage. TPM may add the measurement value to a value stored in the PCR register. The measurement may be information e.g. a cryptographic hash that may uniquely describe another piece of information e.g. a segment of binary code or data . The TPM may combine the measurement value with an existing value stored by a PCR register to prevent spoofing of specific values.

Once integrity of the first initially untrusted code segment is confirmed that code segment may be considered trusted. Control may be passed to the newly trusted code segment for measuring a second initially untrusted code segment and storing that measurement value in the TPM . Once integrity of the first initially untrusted code segment is confirmed that code segment may be considered trusted and control may be passed to the second newly trusted code segment. This code segment by code segment process of making and storing measurement values may establish a chain of trust back to the trusted code segment to confirm integrity and authenticity of a desired number of code segments. As such root of trust may move from one segment of computer code to a next segment of code stored within the physical infrastructure when making measurements on each code segment.

In a more detailed example BIOS boot code of the physical infrastructure may be a code segment that is trusted. The processor may execute the BIOS boot code segment to make a measurement of a next code segment e.g. bootloader and then store the measurement value of bootloader code segment in the TPM . The BIOS boot code segment may pass control to the bootloader code segment. The processor may execute the bootloader code segment to make a measurement of a next code segment e.g. operating system and store the measurement value of the operating system code segment in the TPM . This process may continue until a desired number of code segments have been measured and measurement values stored in the TPM . In an example a CRTM is established. The CRTM is measured and the measurement is stored in the TPM for a next software element in the stack e.g. BIOS which does the same for the next element e.g. bootloader and so on until the measurements for the elements of the virtualization platforms are established and stored in the TPM . Physical infrastructure may similarly measure the virtual platform and a VM.

With reference to element 1 in when the tenant desires to have a Measured VM created cloud orchestrator may create and store within a data store e.g. internal database a reservation R with unique authentication code U and specific networking settings including a virtual internet protocol VIP address I. The cloud provider may assign the VIP address I as the network address for a newly created VM. The Secure Trusted boot server may subsequently expect to receive a request to download a bootloader from VIP address I. The authentication code U may serve as a nonce for associating a request to create a Measured VM with a request that the Measured VM later sends to the tenant s Secure Trusted boot server to download the bootloader. A nonce may be an arbitrary number for example used only once to prevent replay attacks that may be used by the TPM to generate a TPM quote. The authentication code U may be used to confirm that cloud orchestrator was the device that sent the create Measured VM request and not some other device.

With reference to element 2 cloud orchestrator may send a create Measured VM request to an application programming interface API of cloud platform . The request may include the networking settings e.g. VIP address I the unique authentication code U tenant specified configurations as well as any additional details required by the cloud provider to create the virtual machine such as VM configuration e.g. VM size disk size and the like .

With reference to element 3 cloud platform may forward the request to the virtualization platform . For example cloud platform may invoke a software application programming interface API instructing the virtualization platform to instantiate a measured VM based on at least one of the provided network settings e.g. a VIP address I authentication code U and VM configuration tenant specified configurations additional details from the cloud provider and the like.

With reference to element 4 the virtualization platform may be dedicated to a single Measured VM and hence may perform remote attestation for one Measured VM at a time. The virtualization platform might not allow any other measured VM or software to use the TPM while the TPM is being used for remote attestation of the current Measured VM. In some examples the TPM may not be virtualized. For the current Measured VM the TPM may store measured binaries e.g. VM specific firmware BIOS and loadable modules and a configuration of the Measured VM in a set of PCR registers dedicated for VM measurements.

For example the virtualization platform may reserve 1 n PCR registers in the TPM for storing measurements of the configuration of the Measured VM . The measurements may include a certificate authority of the Secure Trusted boot server from which the Measured VM is to boot as well as a network address e.g. VIP address I a uniform resource locator URL and the like of the boot server . At least some of the measurements may be tenant specific since they may include configuration information specified by the tenant. From this point until a secure boot sequence for the Measured VM is completed or aborted the TPM may be dedicated to this Measured VM and the TPM may be queried by the tenant that requested instantiation of the Measured VM. The TPM may release the PCR registers when the Measured VM completes a secure trusted boot sequence and receives a bootloader from a configured Secure Trusted boot server or when the boot sequence fails as described in further detail below.

To ensure that environment issues such as network connectivity incorrectly configured Measured VM or incorrectly behaving Secure Trusted boot server cannot block creation of Measured VMs indefinitely the virtualization platform configuration may specify a time threshold within which a Measured VM may be required to complete an attestation sequence and receive its bootloader. If the Measured VM doesn t receive the bootloader in the allotted time the virtualization platform may destroy the Measured VM .

With reference to element 5 the virtualization platform may create and initialize an instance of a Measured VM with VIP address I and authentication code U. Upon creation the Measured VM may be an empty shell without any software or operating system. The Measured VM may also contain a fully encrypted operating system or other software which cannot be executed until it is unlocked decrypted by the tenant by providing an appropriate key or decrypting software once the integrity and authenticity of the Measured VM has been confirmed.

With reference to element 6 a basic input output system BIOS of the Measured VM may initiate a preboot execution environment PXE networking stack using networking settings including VIP address I specified by the virtualization platform during creation of the Measured VM . Also the PXE networking stack may dynamically obtain a network address instead of or in addition to Virtual IP address I using dynamic host configuration protocol DHCP protocol. The PXE may be an environment and process for booting computers of virtual machines using a boot loader and or an entire operating system received from the tenant over a network.

Upon initiation the BIOS may start a PXE boot sequence by sending a PXE boot request to the Secure Trusted boot server specified by the virtualization platform . The boot server may be configured to remotely attest to the authenticity of a Measured VM and to upload a workload to the Measured VM if authentic. As noted above remote attestation may refer to a process of remotely verifying the integrity and authenticity of the virtualization platform and the infrastructure on which the platform is running as well as the integrity and authenticity of the Measured VM . Measured VM may include the unique authentication code U specified by the virtualization platform in the PXE boot request. The PXE boot request may be considered as an initial request of a handshake to establish a secure tunnel e.g. using a transport layer security TLS protocol between the Measured VM and the Secure Trusted boot server .

With reference to element 7 upon receiving the PXE boot request the boot server may query the cloud orchestrator for a reservation R corresponding to information provided in the PXE boot request in an attempt to associate the PXE boot request with the original request to create the Measured VM sent by the cloud orchestrator described above in elements 1 2.

With reference to element 8 cloud orchestrator may attempt to extract at least one of the VIP address I unique authentication code U or any other identifiers from the PXE boot request and use this information for querying the internal database to determine if there is a reservation R having matching information. If a reservation R having matching information cannot be located cloud orchestrator may deny the boot request and instruct the virtualization platform to terminate the Measured VM . For instance if the VIP address I or the authentication code U are incorrect and or there is no such reservation in the internal database the boot request may fail. If a matching reservation is located cloud orchestrator may pass the reservation R to the Secure Trusted boot server to continue establishment of the secure tunnel.

As such attempting to match a unique authentication code U specific VIP address I and or other information from the original reservation R to create the Measured VM with information extracted from the PXE boot request permits cloud orchestrator to authenticate each PXE boot request and therefore protect against low effort attacks such as accidentally or intentionally starting a measured VM in the cloud without a corresponding reservation.

With reference to element 9 upon being informed that a matching reservation R has been found Secure Trusted boot server may complete the handshake to establish the secure tunnel e.g. using transport layer security TLS protocol with the Measured VM . As part of the handshake Secure Trusted boot server may send to the Measured VM a certificate signed by a specific certificate authority CA of the tenant. Upon receipt the Measured VM may verify that the certificate provided by the Secure Trusted boot server matches the constraints of its configuration information as specified by the virtualization platform . An example constraint may be that a certificate provided by the Secure Trusted boot server was signed by a Certificate Authority. If the certificate is acceptable Secure Trusted boot server and the Measured VM may agree on a session key that will be used to encrypt traffic over the secure tunnel. From this point forward any communication between the Secure Trusted boot server and Measured VM may be conducted using encrypted communications sent via the secure tunnel. Also there may be additional layers of encryption to secure this tunnel. The encryption scheme described above is just one example and does not limit use of other layers.

Advantageously the secure tunnel may protect against a Man in the Middle MiM attack on any future communications between the Secure Trusted boot server and Measured VM . A MiM attack is an attack in which an intruder eavesdrops on and or tampers with communications between two parties. Rather than communicating with each other directly each of the two parties unknowingly communicates with the intruder which controls the connections and relays messages between the communicating parties.

The secure tunnel by itself may not guarantee that the Measured VM is authentic e.g. that the measured VM is running on a virtualization platform that is authentic not tampered with and backed by a TPM . Cloud orchestrator and or Secure Trusted boot server may not send a workload to the Measured VM for execution until after attesting to its authenticity. To do so cloud orchestrator and or Secure Trusted boot server may confirm that code of an authentic not tampered Measured VM BIOS function operates in an expected manner and may allow TLS connections with servers having a certificate issued by particular certificate authority CA as specified in configuration information of the virtualization platform .

With reference to element 10 once the virtualization platform notices or is notified that a secure tunnel has been established between Measured VM and Secure Trusted boot server virtualization platform may retrieve from the Measured VM a measurement of a secure tunnel session. For example the Measured VM may make a measurement of a TLS session key that can be provided to the virtualization platform . The process of how a session key is derived and agreed upon may depend on a specific protocol used to establish the secure channel. For example the TLS protocol describes how a session key may be derived.

Rather than letting the Measured VM call an exposed API of the underlying virtualization platform to provide the secure tunnel session measurement the virtualization platform may access a known memory location of the Measured VM upon detecting that the secure tunnel has been established to obtain the measurement. The Measured VM may also notify the virtualization platform that the secure tunnel has been established e.g. so that virtualization platform doesn t have to monitor all received traffic and the virtualization platform may then retrieve the secure tunnel session measurement from the Measured VM e.g. rather than the Measured VM pushing the measurement to the virtualization platform .

With reference to element 11 the virtualization platform and the infrastructure may then update one or more PCR registers within the TPM with the secure tunnel session measurement e.g. measurement for a TLS session key used to encrypt the traffic within the secure tunnel . Below is an example of updating a PCR register.

By including the secure tunnel session measurement in the TPM the endpoint of the secure tunnel may be tied to the virtualization platform and the infrastructure on which the platform runs. The virtualization platform may be measured and therefore may be verified to be authentic. An authentic virtualization platform may be configured in one example to only allow a Measured VM locally launched by the platform to provide the secure tunnel session measurement established with the Secure Trusted boot server . An authentic virtualization platform might not allow some remote entity e.g. other software remote VM remote hypervisor to interact with its hypervisor which may manage the Measured VM. An authentic virtualization platform may only allow a Measured VM locally created on the physical infrastructure to use APIs of the hypervisor to work with the TPM on the physical infrastructure . In other words the hypervisor attestation TPM related API may be local only and might not be used remotely.

At this point the established secure tunnel may not extend all the way to the TPM . Instead the network communication endpoint may be the BIOS of the Measured VM which is part of the virtualization platform that runs on top of the virtualization platform physical infrastructure containing the TPM . For the TPM to attest the authenticity and integrity of the Measured VM and further protect communication between the tenant and the TPM communication may be established between the cloud DMZ all the way to the TPM .

To do so a TPM transport session may be established and used as an information exchange mechanism to allow software running in the cloud DMZ to specify requests in such a way that only a specific TPM may execute them. Such requests may be encrypted using a shared secret established using a private key in the TPM and a public key of the cloud DMZ . The boot server may initiate establishment of a TPM transport session by sending an encrypted request to the Measured VM using the secure tunnel.

With reference to element 12 the Secure Trusted boot server may establish a TPM transport session via the established secure tunnel and send a remote attestation request to the Measured VM . This request may be used to verify the authenticity of the virtualization platform on which the Measured VM is running including some or all binaries configuration settings and other software hardware or configuration elements that are used to run the Measured VM. The remote attestation may be executed by sending a request to the Measured VM to retrieve a TPM quote accompanied by a randomly generated nonce N. In an example the authentication code U from reservation R may serve as the nonce. The TPM quote may incorporate the nonce N to protect against replay attacks. To further increase the security the TPM quote request may be performed within the TPM transport session bound to a TPM incorporated into the underlying infrastructure .

In an example the TPM may encrypt data sent via the TPM transport session using a TPM bound key. The TPM bound key may be tied to the AIK key of the TPM e.g. by nature of this encryption key being generated and certified by the AIK key . The TPM bound key may be specified by the cloud provider and included in the TPM inventory stored in the internal database . In another example migration keys may be used to encrypt data of the TPM transport session. Migration keys for example may be generated by the tenant and then migrated and loaded to the TPM dedicated to the Measured VM. A migration key may be a key migrated from the tenant to the TPM using features provided by TPM . An example process of key migration is described in the TCG PC Client Specific Implementation Specification For Conventional BIOS Version 1.20 Final Jul. 13 2005 For TPM Family 1.2 Level 2 referenced above. Key migration may allow use of tenant provided keys to encrypt the TPM transport session rather than using key generated by a vendor cloud provider or some other entity. The TPM Bound key or migration key may be used to establish a TPM transport session between the tenant and TPM to encrypt the communication to retrieve the TPM quote.

With reference to element 13 the Measured VM may locally forward requests to establish the TPM transport session and any request received in the session to the virtualization platform . Locally forwarding may refer to forwarding by means other than network communication so that the request is executed on the same host on which it was forwarded. Examples of local forwarding may include using interprocess communication shared memory interrupt and the like. In an example the Measured VM may locally send a request to the virtualization platform requesting a TPM quote for verifying the integrity and authenticity of the virtualization platform the Measured VM and the infrastructure . An authentic not tampered with virtualization platform may accept such requests only from the Measured VM which was created on the virtualization platform and to which the TPM is currently dedicated. The virtualization platform may send the request directly to the TPM and only the TPM to which the request was directed may execute the request.

An authentic non tampered with virtualization platform may guarantee that only the VM that it created and is therefore local can issue such request. Such a virtualization platform may prevent any other VM or other software running on the same or other computer to issue such request to protect against Relay Masquerading attacks. If other software or non local VM could issue such request it would be potentially possible that some remote piece of software pretending to be an authentic virtualization platform would retrieve the TPM quote and then forward it to the tenant as if the quote was produced on the platform running this malicious software.

With reference to element 14 the TPM may produce a TPM quote using at least some of the measurements stored in its PCR registers. The TPM quote may uniquely attest to the authenticity and integrity of one or more of the virtualization platform the configuration of platform underlying software and hardware elements of platform the Measured VM configuration and any related binary elements of the Measured VM the established secure tunnel and the like. The TPM quote may also be based on nonce N. As noted above the nonce may be a random number and the authentication code U generated by the tenant may serve as the nonce.

In an example the TPM may create the TPM quote as a function of a nonce a set of one or more of the measurement values e.g. software version binary code configuration information hardware type and the like stored in the PCR registers and the private key. The TPM may combine the set of one or more stored measurements with the nonce and then cryptographically sign the result of the combination with the private attestation identity private key AIKpriv to produce the TPM quote.

In a more detailed example the TPM may produce the TPM quote based on one or more core root of trust measurements CRTM BIOS e.g. option ROMs firmware boot loader virtualization platform including any loadable or third party modules VM BIOS e.g. option ROMs firmware configuration files measurements of configurations specific to the Measured VM including for example the certificate certificate authority and network address e.g. URL of the Secure Trusted boot server and a measurement of the secure tunnel e.g. TLS session key established between the Measured VM and the Secure Trusted boot server . If a TPM transport session is used the Measured VM may forward the local request to the virtualization platform for encrypting the TPM quote using the TPM session key. The TPM may also digitally sign the quote and nonce using its private attestation identity key AIKpriv .

With reference to element 15 the Measured VM may then forward to the boot server via the secure tunnel the TPM quote and the public attestation identity key AIKpub corresponding to AIKpriv of the TPM used to sign the quote.

With reference to element 16 Secure Trusted boot server may forward the received TPM quote to cloud orchestrator for authentication.

With reference to element 17 cloud orchestrator may retrieve expected measurements from the internal database as well as expected AIKpub of the TPM . Cloud orchestrator may verify that the received AIKpub matches expected AIKpub stored in the internal database . As noted above the cloud provider may identify an expected AIKpub for the TPM as part of the key inventory stored in the internal database . Expected AIKpub may be for example pre validated to ensure this key is TPM backed using standard processes to verify authenticity of AIKpub e.g. using PrivacyCA DAA and the like .

After verifying that received AIKpub matches expected AIKpub cloud orchestrator may decrypt the TPM quote using AIKpub of the TPM to obtain the set of one or more measurements combined with the nonce e.g. authentication code U . Because the cloud orchestrator knows the nonce cloud orchestrator may remove the nonce to obtain the set of one or more measurements. Cloud orchestrator may then compare expected values for the set of one or more measurements with the values derived from the TPM quote. If the AIKpub nonce and measurements match cloud orchestrator may deem the Measured VM the virtualization platform and the infrastructure on which the platform is running to be authentic not tampered with and configured as expected and may indicate that a workload may be delivered from the tenant to the Measured VM using the established secure tunnel. If mismatch is detected cloud orchestrator may abort the boot request and request the virtualization platform to terminate the measured VM .

Cloud orchestrator may deem the Measured VM the virtualization platform and the infrastructure to be authentic because the Measured VM may not communicate with anybody else but tenant s Secure Trusted boot server as proven by the measurements. Further Secure Trusted boot server may ensure that there is only one secure tunnel per VIP address I authentication code U reservation R and secure tunnel measurement e.g. measurement of TLS session key . Moreover a signed measurement of the secure tunnel is part of the TPM quote received from the Measured VM which means the Measured VM runs on a TPM that produced that signature as there may not be a way to inject the value of the secret key e.g. TLS session key for the TLS session into an authentic TPM running and authentic platform. As the last step of the PXE boot sequence the boot server may deliver the tenant s bootloader and workload to the verified Measured VM using the established secure tunnel.

With reference to element 18 once the Measured VM is deemed to be authentic the Secure Trusted boot server may deliver using the established secure tunnel a bootloader and a workload to the Measured VM for execution.

With reference to element 19 once the bootloader is delivered and the Measured VM is ready to boot the Measured VM may notify the virtualization platform about handing over control to the delivered bootloader. Measured VM may then start executing instructions specified in the bootloader. After the Measured VM boots the virtualization platform may release the TPM so that is it no longer exclusive to this Measured VM instructing the TPM to reset all the PCR registers that are populated with values specific to this Measured VM . From this time forward the TPM and the virtualization platform may be used to start and attest to another Measured VM. Release of the TPM may be related to the TPM being physically based and not virtual. If the TPM is virtual releases might not be required.

Since there are many Measured VMs A C and the TPM is not virtualized the creation of Measured VMs may be serialized until authenticity of the virtualization platform is confirmed or denied. When Measured VM creation with VM BIOS set to secure boot is initialized no other such VM may use TPM or be created until the TPM quote for this Measured VM is obtained to ensure that the TPM is in a known state e.g. VM related TPM resources are exclusively allocated to this Measured VM . Once VM creation is complete e.g. the boot loader is delivered the PCR storing measurements of a particular VM state can be reset the TPM may be released and a next Measured VM requiring secure booting may be created. To ensure that a malicious boot server or technical difficulties do not prevent permanent block on creation of VMs with secure boot a configurable timer may be used. If the time expires before the Measured VM virtualization platform and infrastructure have been authenticated cloud orchestrator may determine that the virtualization platform is not authentic and abort the boot request.

As such the example embodiments provide for using a PXE boot mechanism as an communication channel between a virtualization platform and a tenant for attestation of the virtualization platform . Further inclusion of a secure tunnel measurement as part of measurements of the virtualization platform may solve the problem of associating particular physical infrastructure to a specific TPM to protect against Man in the Middle and Relay attacks. This approach may also provide a novel approach to the issue of limited TPM resources and support multiple tenants by not requiring virtualization of the TPM. The virtualization platform may be the only element that needs access to the TPM and may use the TPM efficiently by sequentializing the creation of Measured VMs.

The example embodiments further provide protection against introduction of public keys of a rogue TPM e.g. valid non tampered TPM belonging to a platform owned by an attacker . A TPM may provide anonymity and the keys presented by the TPM cannot be directly tied to physical infrastructure that contains the TPM. The risks introduced by this design are mitigated by two factors. As discussed herein the cloud provider may maintain a listing of valid AIK keys and their corresponding physical infrastructure in a key inventory which is shared with the tenant. To introduce a rogue TPM to the physical infrastructure an attacker may have to physically interconnect the rogue TPM with the platform physical infrastructure and introduce keys belonging to the rogue TPM to the key inventory maintained by the cloud provider.

The second mitigating factor is based on the measurements of software and configuration information. Even if such rogue TPM but otherwise valid not tampered with correctly functioning TPM is introduced to the physical infrastructure a tenant may refuse to use the physical infrastructure unless it runs authentic not tampered with and correctly configured software. A correctly functioning TPM is expected to provide measurements that can be trusted. Measurements would either prove that the physical infrastructure incorporating a rogue TPM runs authentic correctly configured software and therefore the rogue TPM most likely has not been included in the inventory provided to the tenant or is running modified or misconfigured software. The rogue TPM therefore would fail authentication either by not being included in the inventory or by running modified or misconfigured software.

In an example embodiment the Measured VM might be prevented from migrating to different physical structure than the physical infrastructure on which the Measured VM is running. As noted above a specific TPM integrated in the physical infrastructure running a virtualization platform that created the Measured VM may attest to the authenticity of the Measured VM. Because attestation of the Measured VM is tied to a specific TPM the Measured VM might be prevented from migrating to different physical infrastructure. This is because a measurement of the different physical infrastructure would differ from a measurement of the physical infrastructure .

Further a Measured VM may only be attested to a single time during a PXE boot sequence e.g. before tenant s workload is delivered to the Measured VM . Because there might not be a follow up attestation once the Measured VM is running the virtualization platform and physical infrastructure hosting the Measured VM might not be permitted to change at all. For example the following might not be permitted to change any binaries configuration loadable modules firmware certificates and the like. To change any of the elements of the virtualization platform used to run the Measured VM the Measured VM on that platform may have to be shutdown prior to making any change to the virtualization platform. Otherwise authentication of the Measured VM may be revoked.

The software operating in the cloud environment may be grouped into three main categories. The first category may include software providing the virtualization platform used to run workloads in the cloud. This software may be supplied by a software vendor independent from the cloud provider and may be deployed reviewed and tested independently from the cloud environment. The second category may include software providing and managing the access to the cloud environment mainly to the virtualization platform and resources on which the platform runs. Software in the second category may be supplied and developed internally by the cloud provider may be proprietary and might not be available for examination outside of the cloud environment. The third category may include software deployed by tenants to run as a workload on the cloud.

Protection against software based attacks may be based on any modification to the software used to execute a workload. Such modifications may be manifested in measurements of the software and the modifications may be detected outside of the cloud environment by measuring of the virtualization platform by the tenant. The expected measurements for a trusted virtualization platform can be established during such in house testing. If an attacker either modifies the software or includes unauthorized software as part of the virtualization platform e.g. as a loadable module measured by its trusted loader a measurement representing the platforms will differ from an expected measurement. The remote attestation protocol discussed herein may deliver these invalid measurements as part of the TPM quote and tenant s Secure Trusted boot server may prevent use of such altered virtualization platform.

The configuration parameters used by the virtualization platform may have an impact on security. Each Measured VM is configured to verify the authenticity of a certificate presented by the Secure Trusted boot server against a preconfigured certificate certificate authority. In addition each Measured VM is configured with specific network address e.g. URL at which it should contact the Secure Trusted boot server .

Additional parameters specific to the virtualization platform e.g. list of loadable modules may have security implications as well. For instance an attack based on configuration information might be based on changing configuration information to let the virtualization platform connect to an impostor rather than to an expected tenant. The example embodiments may provide protection against a configuration based attack similar to how protection is provided against a software based attack. Configuration information may affect trustworthiness and security parameters may be included in measurements used for attestation of authenticity of the virtualization platform . Once measurements have been received from the TPM the tenant may determine measurements of a configuration of the virtualization platform match an expected configuration in the manner provided above to determine whether to authenticate the platform .

One way to access resources provided by the cloud platform is over a computer network. Lack of physical access to the platform physical infrastructure represents a significant challenge for a tenant to establish trust in a virtualization platform . To execute an attack over the network an intruder may have to first gain access to the network. Several approaches described herein limit unauthorized access to the network between the tenant and the platform physical infrastructure 

First the cloud provider and the tenant may deploy a network access control mechanism e.g. based on an IEEE 802.1X standard where each device connecting to the network may be authenticated e.g. using a digital certificate issued by the network owner . Second the tenant may operate within the cloud environment on a dedicated VLAN. Third a tenant s internal as well as the virtual environments are protected by physical and virtual firewall. Since a tenant controls what resources are active within the cloud environment at any given moment dynamically modified firewall rules can tightly control exactly what devices e.g. IP addresses MAC addresses may communicate at any given moment and how e.g. protocol . Lastly the tenant and the cloud provider may use a private encrypted connection e.g. private circuit site to site VPN with strict filtering and authentication rules to cross connects the tenant data center and the cloud provider data center .

If the intruder still manages get access to the cloud provider data center two additional mechanisms may be used to protect communication between the tenant and the cloud infrastructure when establishing trust in the virtualization platform .

A first type of attack that the example embodiments may protected against is referred to as a Man in the Middle attack. The Man in the Middle attack may be an attack in which an intruder eavesdrops and or tampers with communication between two parties. Rather than communicating with each other directly each of the two parties unknowingly communicates with the intruder which controls the connections and relays the messages between the communicating parties.

To execute a Man in the Middle attack on the above embodiments the intruder would have to eavesdrop and control the connection between the Secure Trusted boot server and the Measured VM . The example embodiments protect against such an attack by using a secure tunnel e.g. TLS between the communicating parties where the channel is established after certificates of the communicating parties have been validated. Executing a Man in the Middle attack on a TLS protected connection used for online commerce is highly unlikely. In addition the example embodiments may utilize another encrypted tunnel e.g. TPM transport session within the secure tunnel established using TLS protocol. The inner encrypted tunnel may be established using a TPM transport session mechanism and is established directly between the Secure Trusted boot server and the TPM executing the commands used to produce the TPM quote.

A second type of attack that the example embodiments may protect against is referred to as a Relay attack. A Relay attack is attack in which intruder poses as a valid cloud provider system potentially by relaying responses from a valid cloud provider system. A Relay attack can be viewed as special type of MiM attack. To execute a relay attack on the example embodiments an intruder would have to relay the results provided by the valid virtualization platform to the Secure Trusted boot server to make the Secure Trusted boot server release the tenant s bootloader code to the intruder. The example embodiments may protect against this type of attack by using the two mechanisms already mentioned in the discussion on MiM attacks. Further by making measurements of the outer secure tunnel e.g. TLS between the Secure Trusted boot server and the Measured VM part of the measurements of the Measured VM the example embodiments may verify that the cloud endpoint of the secure tunnel e.g. the virtualization platform physical infrastructure does in fact incorporate the TPM .

A second type of attack that the example embodiments may protect against is referred to as a Combined attack. A Combined attack may include a combination of the network attack and the configuration based attack discussed above. To execute a Combined attack an intruder would have to modify tamper with or misconfigure software of the virtualization platform . Modification of code or configuration of the virtualization platform would be detectable by the tenant since the modification would be present within the TPM quote. Correct measurements may be obtained only on unmodified and correctly configured virtualization platform that would not communicate with the intruder.

In block the method may include initiating creation of a Measured VM. For example cloud orchestrator may initiate creation of a Measured VM as described above in elements 1 2 of .

In block the method may include initiating establishment of a secure tunnel for communication with the measured VM. For example the cloud DMZ including the cloud orchestrator and the boot server may establish a secure tunnel with the Measured VM as described above in elements 6 9 of .

In block the method may include receiving a quote generated based on a measurement of the Measured VM. For example the cloud DMZ including the cloud orchestrator and the boot server may receive a TPM quote from the Measured VM as described above in element 15 of .

In block the method may include determining whether the Measured VM is authentic based on the quote. For example the cloud DMZ including the cloud orchestrator and the boot server may process a TPM quote to determine whether Measured VM is authentic as described above in elements 16 17 of . The method may end or may return to any of the preceding steps.

In block the method may include generating a first measurement of a virtualization platform. For example the virtualization platform may store various measurements values in a TPM as described above in element 0 of .

In block the method may include receiving a create measured virtual machine request comprising authentication information. For example the virtualization platform may receive a request which includes an authentication code U to create a Measured VM as described above in elements 2 4 of .

In block the method may include in response to the request creating a measured virtual machine based on the authentication information. For example the virtualization platform may create a Measured VM based on the authentication code U as described above in element 5 of .

In block the method may include generating a second measurement of the measured virtual machine. For example the virtualization platform may generate measurement values based on measuring the Measured VM as described above in element 4 of .

In block the method may include communicating a quote generated based on the first measurement and the second measurement for attesting to authenticity of the virtualization platform and of the measured virtual machine. For example virtualization platform may instruct the TPM to generate a TPM quote based on one or more measurements stored in the PCRs and may cause the TPM and Measured VM to deliver the TPM quote to the boot server as discussed in elements 14 15 of . The TPM quote may be used for attesting to integrity and authenticity of the virtualization platform of the Measured VM and optionally of the physical infrastructure . The method may end or may return to any of the preceding steps.

In block the method may include storing by trusted hardware a first measurement of a virtualization platform. For example virtualization platform may communicate one or more measurement values of platform to the TPM for storage in one or more PCRs as described above in element 0 of . In a further example the first measurement of the virtualization platform may be of at least one of physical hardware low level software e.g. BIOS boot loader and the like tenant independent platform binaries and configuration.

In block the method may include storing a second measurement of a measured virtual machine. For example virtualization platform may make and communicate one or more measurement values of a Measured VM to the TPM for storage as described above with reference to element 4 of . The second measurement of the virtualization platform may include for example a measurement of at least one of a binary configuration information a cryptographic key a digital certificate a driver a module as well as of other information. In a further example the second measurement may be of tenant dependent platform binaries and configuration. TPM may also store additional measurements such as for example a third measurement of a secure tunnel e.g. a measurement of a symmetric encryption key used by TLS . In a further example the third measurement may also serve as the nonce.

In block the method may include generating a quote using a key wherein the quote is based on the first measurement and the second measurement. For example the TPM may generate a TPM quote as described above with reference to element 14 of . In a further example TPM may generate the quote based on the third measurement of a secure tunnel.

In block the method may include providing the quote for attesting to authenticity of the virtualization platform and of the measured virtual machine. For example the TPM may generate provide a TPM quote to the Measured VM that delivers the quote to the boot server as described above with reference to element 15 of . The method may end or may return to any of the preceding steps.

Aspects of the embodiments have been described in terms of illustrative embodiments thereof. Numerous other embodiments modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure. For example one of ordinary skill in the art will appreciate that the steps illustrated in the illustrative figures may be performed in other than the recited order and that one or more steps illustrated may be optional in accordance with aspects of the embodiments. They may determine that the requirements should be applied to third party service providers e.g. those that maintain records on behalf of the company .

