---

title: Method for using error correction codes with factorial or CCI extension
abstract: System, methods and apparatus are described that facilitate transmission of data over a multi-wire data communications link, particularly between two devices within an electronic apparatus. A data payload may be converted to a set of transition numbers, the transition numbers may be converted to a sequence of symbols and an error correction code (ECC) may be calculated from symbols in the sequence of symbols. The ECC corresponds to the data payload and the ECC may be appended to the data payload such that the set of transition numbers includes transition numbers corresponding to the ECC. The sequence of symbols is then transmitted on a plurality of signal wires. Clock information is encoded in the sequence of symbols. The clock information may be encoded by ensuring that each pair of consecutive symbols in the sequence of symbols includes two symbols that produce different signaling states on the plurality of signal wires.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09319178&OS=09319178&RS=09319178
owner: QUALCOMM Incorporated
number: 09319178
owner_city: San Diego
owner_country: US
publication_date: 20140314
---
The present disclosure relates generally to an interface between a host processor and a peripheral device such as a camera and more particularly to improving error correction processes on an N factorial or camera control communication interface bus.

Manufacturers of mobile devices such as cellular phones may obtain components of the mobile devices from various sources including different manufacturers. For example an application processor in a cellular phone may be obtained from a first manufacturer while the display for the cellular phone may be obtained from a second manufacturer. The application processor and a display or other device may be interconnected using a standards based or proprietary physical interface. For example a display may provide an interface that conforms to the Display System Interface DSI standard specified by the Mobile Industry Processor Interface Alliance MIPI .

In one example a multi signal data transfer system may employ multi wire differential signaling such as 3 phase or N factorial N low voltage differential signaling LVDS transcoding e.g. the digital to digital data conversion of one encoding type to another may be performed to embed symbol clock information by causing a symbol transition at every symbol cycle instead of sending clock information in separate data lanes differential transmission paths . Embedding clock information by transcoding is an effective way to minimize skew between clock and data signals as well as to eliminate the necessity of a phase locked loop PLL to recover the clock information from the data signals.

In another example a camera control interface CCI defined by MIPI standards uses a two wire bi directional half duplex serial interface configured as a bus connecting a master and one or more slaves. Conventional CCI is compatible with a protocol used in a variant of the Inter Integrated Circuit I2C bus and is capable of handling multiple slaves on the bus with a single master. The CCI bus may include Serial Clock SCL and Serial Data SDA lines. CCI devices and I2C devices can be deployed on the same bus such that two or more CCI devices may communicate using CCI protocols while any communication involving an I2C bus uses I2C protocols. A CCI extension CCIe bus may be used to provide higher data rates for devices that are compatible with CCIe bus operations. Such devices may be referred to as CCIe devices and the CCIe devices can attain higher data rates when communicating with each other by encoding data as symbols transmitted on both the SCL line and the SDA line of a conventional CCI bus.

There exists an ongoing need for optimized communications in general and improved reliability of data transfer on multi signal wire communication links.

Embodiments disclosed herein provide systems methods and apparatus related to multi wire interfaces. In an aspect of the disclosure a method of data communications includes converting a data payload to a set of transition numbers converting the set of transition numbers to a sequence of symbols calculating an error correction code ECC from symbols in the sequence of symbols that correspond to the data payload appending the ECC to the data payload such that the set of transition numbers includes transition numbers corresponding to the ECC and transmitting the sequence of symbols on a plurality of signal wires.

In an aspect of the disclosure converting the set of transition numbers to the sequence of symbols includes using a transition number to select a next symbol relative to a current symbol. A value of the transition number may represent a separation between the current symbol and the next symbol in a table of available symbols.

In an aspect of the disclosure clock information is encoded in the sequence of symbols. The clock information may be encoded by ensuring that each pair of consecutive symbols in the sequence of symbols includes two symbols that produce different signaling states on the plurality of signal wires.

In an aspect of the disclosure an error correction code may be calculated for each of a plurality of signals transmitted on the plurality of signal wires. The plurality of signals may correspond to the sequence of symbols. The error correction codes calculated for the plurality of signals may be appended to the data payload. Each of the plurality of signals may correspond to a bit in each symbol in the sequence of symbols.

In an aspect of the disclosure the plurality of signal wires is provided in a CCIe bus. The data payload may include two CCIe words.

In an aspect of the disclosure transmitting the sequence of symbols includes transmitting each symbol in the sequence of symbols on differential signals carried on different combinations of two signal wires selected from the plurality of signal wires. Each of the differential signals may correspond to a bit of each symbol. The ECC may be calculated by calculating an error correction code for each differential signal. In one example error correction logic can correct one error in each differential signal for each sequence of symbols.

In an aspect of the disclosure an apparatus for data communications includes means for converting a data payload to a set of transition numbers means for converting the set of transition numbers to a sequence of symbols means for calculating an ECC from symbols in the sequence of symbols that correspond to the data payload means for appending the ECC to the data payload such that the set of transition numbers includes transition numbers corresponding to the ECC and means for transmitting the sequence of symbols on a plurality of signal wires.

In an aspect of the disclosure the means for converting the set of transition numbers is configured to encode clock information in the sequence of symbols by ensuring that each pair of consecutive symbols in the sequence of symbols includes two symbols that produce different signaling states on the plurality of signal wires.

In an aspect of the disclosure a transmitter includes a plurality of line drivers configured to transmit a plurality of signals on an N wire interface and a processing circuit configured to convert a data payload to a set of transition numbers convert the set of transition numbers to a sequence of symbols calculate an ECC from symbols in the sequence of symbols that correspond to the data payload append the ECC to the data payload such that the set of transition numbers includes transition numbers corresponding to the error correction code and transmit the sequence of symbols on the plurality of signal wires.

In an aspect of the disclosure a processor readable storage medium has one or more instructions stored thereon. The instructions when executed by a processing circuit cause the processing circuit to convert a data payload to a set of transition numbers convert the set of transition numbers to a sequence of symbols calculate an ECC from symbols in the sequence of symbols that correspond to the data payload append the ECC to the data payload such that the set of transition numbers includes transition numbers corresponding to the ECC and transmit the sequence of symbols on a plurality of signal wires.

In an aspect of the disclosure a method of data communications includes receiving a sequence of symbols from a plurality of signal wires calculating a first ECC from a plurality of symbols in the sequence of symbols the plurality of symbols corresponding to a data payload carried in the sequence of symbols converting the sequence of symbols to a set of transition numbers converting the set of transition numbers to obtain a data packet that includes the data payload and a second ECC the second ECC having been calculated by a transmitter of the sequence of symbols determining whether one or more errors are present in the sequence of symbols based on a comparison of the first ECC with the second ECC and providing the data payload as receiver output data.

In an aspect of the disclosure at least one error in the sequence of symbols is corrected using the first ECC and the second ECC. First ECCs and second ECCs calculated for different bits in a symbol and or first ECCs and second ECCs calculated for different signals may be encoded and transmitted in the sequence of symbols. Accordingly multiple errors may be corrected in the sequence of symbols. For example a plurality of first and second ECCs can be used to correct multiple errors occurring in a sequence of symbols when two or more signals corresponding to different bits of the symbols each have a single error.

In an aspect of the disclosure the sequence of symbols is converted to the set of transition numbers by deriving a transition number as a value that represents a separation between occurrences of a current symbol and an immediately preceding symbol in a table of available symbols.

In an aspect of the disclosure a receive clock is extracted from the sequence of symbols. Clock information may be embedded in changes in signaling state associated with symbols in the sequence of symbols. Each pair of consecutive symbols in the sequence of symbols may include two symbols that are associated with different signaling states on the plurality of signal wires.

In an aspect of the disclosure a plurality of first error correction codes may be calculated from the sequence of symbols. Each error correction code may correspond to a bit in each symbol of the sequence of symbols. It may be determined whether one or more errors are present in the sequence of symbols by comparing each of the plurality of first error correction codes with corresponding second error correction codes appended to the data packet. Errors in individual signals of a plurality of signals may be detected or corrected based on the comparison of the first error correction codes with corresponding second error correction codes. In one example one error per signal per symbol per word can be corrected.

In an aspect of the disclosure the plurality of signal wires is provided in a CCIe bus. The data payload may include two CCIe words.

In an aspect of the disclosure each symbol in the sequence of symbols is received as a set of differential signals carried on different combinations of two signal wires selected from the plurality of signal wires. Each differential signal in the set of differential signals corresponds to a bit of the each symbol. The first ECC may be calculated by calculating an ECC for each differential signal.

In an aspect of the disclosure an apparatus includes means for receiving a sequence of symbols from a plurality of signal wires means for calculating a first ECC from a plurality of symbols in the sequence of symbols the plurality of symbols corresponding to a data payload carried in the sequence of symbols means for converting the sequence of symbols to a set of transition numbers means for converting the set of transition numbers to obtain a data packet that includes the data payload and a second ECC the second ECC having been calculated by a transmitter of the sequence of symbols means for determining whether one or more errors are present in the sequence of symbols based on a comparison of the first ECC with the second ECC and means for providing the data payload as receiver output data. In one example one error per signal per symbol per word can be corrected.

In an aspect of the disclosure the apparatus includes means for extracting a receive clock from the sequence of symbols. Clock information may be embedded in changes in signaling state associated with symbols in the sequence of symbols. Each pair of consecutive symbols in the sequence of symbols may include two symbols that are associated with different signaling states on the plurality of signal wires.

In an aspect of the disclosure a receiver includes a processing circuit configured to receive a sequence of symbols from a plurality of signal wires calculate a first ECC from a plurality of symbols in the sequence of symbols the plurality of symbols corresponding to a data payload carried in the sequence of symbols convert the sequence of symbols to a set of transition numbers convert the set of transition numbers to obtain a data packet that includes the data payload and a second ECC the second ECC having been calculated by a transmitter of the sequence of symbols determine whether one or more errors are present in the sequence of symbols based on a comparison of the first ECC with the second ECC and provide the data payload as receiver output data.

In an aspect of the disclosure a processor readable storage medium has one or more instructions stored or maintained thereon. The instructions when executed by at least one processing circuit may cause the at least one processing circuit to receive a sequence of symbols from a plurality of signal wires calculate a first ECC from a plurality of symbols in the sequence of symbols the plurality of symbols corresponding to a data payload carried in the sequence of symbols convert the sequence of symbols to a set of transition numbers convert the set of transition numbers to obtain a data packet that includes the data payload and a second ECC the second ECC having been calculated by a transmitter of the sequence of symbols determine whether one or more errors are present in the sequence of symbols based on a comparison of the first ECC with the second ECC and provide the data payload as receiver output data.

Various aspects are now described with reference to the drawings. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of one or more aspects. It may be evident however that such aspect s may be practiced without these specific details.

As used in this application the terms component module system and the like are intended to include a computer related entity such as but not limited to hardware firmware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a computing device and the computing device can be a component. One or more components can reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. In addition these components can execute from various computer readable media having various data structures stored thereon. The components may communicate by way of local and or remote processes such as in accordance with a signal having one or more data packets such as data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems by way of the signal.

Moreover the term or is intended to mean an inclusive or rather than an exclusive or. That is unless specified otherwise or clear from the context the phrase X employs A or B is intended to mean any of the natural inclusive permutations. That is the phrase X employs A or B is satisfied by any of the following instances X employs A X employs B or X employs both A and B. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from the context to be directed to a singular form.

Certain aspects of the invention may be applicable to communications links deployed between electronic devices that are subcomponents of a mobile apparatus such as a telephone a mobile computing device an appliance automobile electronics avionics systems etc. Examples of a mobile apparatus include a cellular phone a smart phone a session initiation protocol SIP phone a laptop a notebook a netbook a smartbook a personal digital assistant PDA a satellite radio a global positioning system GPS device a multimedia device a video device a digital audio player e.g. MP3 player a camera a game console a wearable computing device e.g. a smartwatch a health or fitness tracker etc. an appliance a sensor a vending machine or any other similar functioning device.

The communication link may include multiple channels and . One or more channels may be bidirectional and may operate in half duplex and or full duplex modes. One or more channels and may be unidirectional. The communication link may be asymmetrical providing higher bandwidth in one direction. In one example described herein a first communications channel may be referred to as a forward link while a second communications channel may be referred to as a reverse link . The first IC device may be designated as a host system or transmitter while the second IC device may be designated as a client system or receiver even if both IC devices and are configured to transmit and receive on the communications link . In one example the forward link may operate at a higher data rate when communicating data from a first IC device to a second IC device while the reverse link may operate at a lower data rate when communicating data from the second IC device to the first IC device .

The IC devices and may each have a processor or other processing and or computing circuit or device . In one example the first IC device may perform core functions of the apparatus including maintaining wireless communications through a wireless transceiver and an antenna while the second IC device may support a user interface that manages or operates a display controller . The first IC device or second IC device may control operations of a camera or video input device using a camera controller . Other features supported by one or more of the IC devices and may include a keyboard a voice recognition component and other input or output devices. The display controller may include circuits and software drivers that support displays such as a liquid crystal display LCD panel touch screen display indicators and so on. The storage media and may include transitory and or non transitory storage devices adapted to maintain instructions and data used by respective processors and and or other components of the IC devices and . Communication between each processor and its corresponding storage media and and other modules and circuits may be facilitated by one or more bus and respectively.

The reverse link may be operated in the same manner as the forward link and the forward link and reverse link may be capable of transmitting at comparable speeds or at different speeds where speed may be expressed as data transfer rate and or clocking rates. The forward and reverse data rates may be substantially the same or differ by orders of magnitude depending on the application. In some applications a single bidirectional link may support communications between the first IC device and the second IC device . The forward link and or reverse link may be configurable to operate in a bidirectional mode when for example the forward and reverse links and share the same physical connections and operate in a half duplex manner. In one example the communication link may be operated to communicate control command and other information between the first IC device and the second IC device in accordance with an industry or other standard.

In one example forward and reverse links and may be configured or adapted to support a wide video graphics array WVGA 80 frames per second LCD driver IC without a frame buffer delivering pixel data at 810 Mbps for display refresh. In another example forward and reverse links and may be configured or adapted to enable communications between with dynamic random access memory DRAM such as double data rate synchronous dynamic random access memory SDRAM . Encoding devices and or can encode multiple bits per clock transition and multiple sets of wires can be used to transmit and receive data from the SDRAM control signals address signals and so on.

The forward and reverse links and may comply or be compatible with application specific industry standards. In one example the MIPI standard defines physical layer interfaces between an application processor IC device and an IC device that supports the camera or display in a mobile device. The MIPI standard includes specifications that govern the operational characteristics of products that comply with MIPI specifications for mobile devices. The MIPI standard may define interfaces that employ complimentary metal oxide semiconductor CMOS parallel busses.

In one example the communication link of may be implemented as a wired bus that includes a plurality of signal wires denoted as N wires . The N wires may be configured to carry data encoded in symbols where clock information is embedded in a sequence of the symbols transmitted over the plurality of wires.

A termination impedance typically resistive couples each of the N wires to a common center point in a termination network . It will be appreciated that the signaling states of the N wires reflects a combination of the currents in the termination network attributed to the differential drivers coupled to each wire. It will be further appreciated that the center point is a null point whereby the currents in the termination network cancel each other at the center point.

The N encoding scheme need not use a separate clock channel and or non return to zero decoding because at least one of the Csignals in the link transitions between consecutive symbols. Effectively the transcoder ensures that a transition occurs between each pair of symbols transmitted on the N wires by producing a sequence of symbols in which each symbol is different from its immediate predecessor symbol. In the example depicted in N 4 wires are provided and the 4 wires can carry C 6 differential signals. The transcoder may employ a mapping scheme to generate raw symbols for transmission on the N wires . The transcoder may map data bits to a set of transition numbers. The transition numbers may then be used to select a raw symbol for transmission based on the value of the preceding symbol such that the selected raw symbol is different from the preceding raw symbol. In one example a transition number may be used to lookup a data value corresponding to the second of the consecutive raw symbols with reference to the first of the consecutive raw symbols. At the receiving device a transcoder may employ a mapping to determine a transition number that characterizes a difference between a pair of consecutive raw symbols in a lookup table for example. The transcoders operate on the basis that every consecutive pair of raw symbols includes two different symbols.

The transcoder at the transmitter may select between the N 1 symbols that are available at every symbol transition. In one example a 4 system provides 4 1 23 signaling states for the next symbol to be transmitted at each symbol transition. The bit rate may be calculated as log available states per transmit clock cycle. In a system using double data rate DDR clocking whereby symbol transitions occur at both the rising edge and falling edge of the transmit clock two symbols are transmitted per transmit clock cycle. The total available states in the transmit clock cycle is C 1 23 529 and the number of data bits that can transmitted per symbol may be calculated as log 529 9.047 bits.

A receiving device receives the sequence of symbols using a set of line receivers where each receiver in the set of line receivers determines differences in signaling states on one pair of the N wires . Accordingly Creceivers are used where N represents the number of wires. The Creceivers produce a corresponding number of raw symbols as outputs. In the depicted N 4 wire example the signals received on the four wires are processed by 6 receivers C 6 to produce a state transition signal that is provided to a corresponding CDR and deserializer . The CDR may produce a receive clock signal that can be used by the deserializer . The receive clock signal may be a DDR clock signal that can be used by external circuitry to receive data provided by the transcoder . The transcoder decodes a block of received symbols from the deserializer by comparing each next symbol to its immediate predecessor. The transcoder produces output data corresponding to the data provided to the transmitter .

In an N interface signals received from N wires are initially processed by a number C of receivers which produce a corresponding number of raw signals as outputs. In the illustrated example N 4 wires are processed by C 6 receivers that produce a first state transition signal SI signal that includes 6 raw signals representative of the received symbol. For each raw signal output from each different receiver there may be a setup time provided between symbols S S and S during which the state of the corresponding signal is undefined indeterminate transient or otherwise unstable. Level latches a comparator set reset latch a one shot circuit an analog delay element and bused level latches may be configured to generate a level latched signal S signal representative of a delayed instance of the SI signal where the delay before the SI signal is captured by the level latches to provide an updated S signal may be selected by configuring a delay element Delay S .

In operation the comparator compares the SI signal with the S signal and outputs a binary comparison signal NE signal . The set reset latch may receive the NE signal from the comparator and output a signal NEFLT signal which is a filtered version of the NE signal . The operation of the set reset latch can be configured to remove any transient instability in the NE signal where the transient instability is exhibited as spikes in the NE signal . The NEFLT signal can be used to control the output latches that capture the S signal as output data signal .

The one shot circuit receives the NEFLT signal and produces a fixed width pulse which may then be delayed by the delay element to produce a clock signal SDRCLK . In some instances the SDRCLK signal may be used by external circuitry to sample the data output of the CDR . In one example the SDRCLK signal may be provided to decoder or deserializer circuits. The level latches receive the SI signal and output the S signal where the level latches are triggered or otherwise controlled by the SDRCLK signal .

In operation the comparator compares the SI signal with the S signal which is output from the level latches . The comparator drives the NE signal to a first state e.g. logic low when the SI signal and the S signal are equal and to a second state e.g. logic high when the SI signal and the S signal are not equal. The NE signal is in the second state when the SI signal and the S signal are representative of different symbols. Thus the second state indicates that a transition is occurring.

As can be appreciated from the timing diagram the S signal is essentially a delayed and filtered version of SI signal in which transients or glitches have been removed because of the delay between the SI signal and the S signal . Multiple transitions in the SI signal may be reflected as spikes in the NE signal but these spikes are masked from the NEFLT signal through the operation of the set reset circuit. Moreover the SDRCLK is resistant to line skew and glitches in the symbol transitions based on the use of the delays provided in the feedback path to the level latch and set reset circuit whereby the SDRCLK signal controls the reset function of the set reset circuit .

At the commencement of a transition between a first symbol value S and a next symbol value S the SI signal begins to change state. The state of the SI signal may be different from S due to the possibility that intermediate or indeterminate states during the transition between S and S. These intermediate or indeterminate states may be caused for example by inter wire skew over under shoot cross talk etc.

The NE signal becomes high as soon as the comparator detects a difference in values between the SI signal and the S signal and the transition high of the NE signal asynchronously sets the set reset latch output driving the NEFLT signal high. The NEFLT signal is maintained in its high state until the set reset latch is reset by a high state of the SDRCLK signal . The SDRCLK signal is a delayed version of the NE1SHOT signal which is a limited pulse width version of the NEFLT signal . The SDRCLK signal may be delayed with respect to the NE1SHOT signal through the use of the analog delay circuit for example.

The intermediate or indeterminate states on SI may represent invalid data. These intermediate or indeterminate states may contain a short period of the previous symbol value S and may cause the NE signal to return low for short periods of time. Transitions of the SI signal may generate spikes on the NE signal . The spikes are effectively filtered out and do not appear in the NEFLT signal .

The high state of the NEFLT signal causes the SDRCLK signal to transition high after a delay period caused by the delay circuit . The high state of SDRCLK signal resets the set reset latch output causing the NEFLT signal to transition to a low state. The high state of the SDRCLK signal also enables the level latches and the SI signal value may be output on the S signal .

The comparator detects that the S signal for symbol S matches the symbol S value present on the SI signal and switches its output the NE signal low. The low state of the NEFLT signal causes the SDRCLK signal to go low after a delay period caused by the analog delay . This cycle repeats for each transition in the SI signal . At a time after the falling edge of the SDRCLK signal a new symbol S may be received and may cause the SI signal to switch its value in accordance with the next symbol S.

The transceiver may include a receiver a transmitter and common circuits including timing logic and storage circuits and or devices. In one example the transmitter encodes and transmits data based on timing provided by a clock generation circuit . A conventional imaging device may not have access to a clock that has a high enough frequency to permit the device to achieve the indicated bit rate of the CCIe bus because sensor devices typically do not need or use a 125 MHz or higher clock. According to certain aspects disclosed herein however a receiver may be configured or adapted to extract a receive clock from the CCIe bus by generating a clock signal directly from the received transmission using analog delay circuits that can eliminate the need for a high frequency clock and thereby conserve power during idle periods.

In the example of a CCIe system the transmitter may be configured or adapted to transcode data into ternary base 3 transition numbers . The ternary transition numbers may be encoded in a sequence of symbols to be transmitted on the signal wires which may correspond to the SCL and SDA wires illustrated in . Each data element of the input data may include 20 bit words. A transcoder may receive the input data and produce a sequence of ternary transition numbers for each data element. The ternary transition numbers may be encoded in two bits and there may be 12 ternary transition numbers in each ternary sequence . An encoder produces a stream of 2 bit symbols that are transmitted through line drivers . In one example the line drivers may include open drain output transistors. In another example the line drivers may include push pull drivers. The output stream of 2 bit symbols generated by the encoder has a transition in the state of at least one of the signal wires between each pair of consecutive symbols by ensuring that no pair of consecutive symbols include two identical symbols. The availability of a transition of state in at least one of the signal wires permits a receiving circuit to extract a receive clock from the stream of data symbols .

In a CCIe system the receiver includes line interface circuits that provide a stream of raw 2 bit symbols to a CDR . The CDR extracts a receive clock from the raw symbols and provides a stream of 2 bit symbols and the receive clock to other circuits and of the receiver . In some instances the CDR may produce multiple clocks in its output . A decoder may use the receive clock to decode the stream of symbols into sequences of 12 ternary transition numbers . The ternary transition numbers may be encoded using two bits. A transcoder may then convert each sequence of 12 ternary transition numbers into 20 bit output data elements .

According to certain aspects disclosed herein the three available transitions are assigned a transition number T for each Ps symbol . The value of T can be represented by a ternary number. In one example the value of transition number is determined by assigning a symbol ordering circle for the encoding scheme. The symbol ordering circle allocates locations on the circle for the four possible symbols and a direction of rotation between the locations . In the depicted example the direction of rotation is clockwise. The transition number may represent the separation between the valid current symbols and the immediately preceding symbol . Separation may be defined as the number of steps along the direction of rotation on the symbol ordering circle required to reach the current symbol Cs from the previous symbol . The number of steps can be expressed as a single digit base 3 number. It will be appreciated that a three step difference between symbols can be represented as a 0. The table in summarizes an encoding scheme employing this approach.

At the transmitter the table may be used to lookup a current symbol to be transmitted given knowledge of the previously generated symbol and an input ternary number which is used as a transition number . At the receiver the table may be used as a lookup to determine a transition number that represents the transition between the previously received symbol and the currently received symbol . The transition number may be output as a ternary number.

The use of a transcoder that embeds clock information in a sequence of symbols can disassociate data received by a transmitter from the sequence of symbols transmitted on signal wires . Consequently a received raw symbol cannot be decoded to obtain a corresponding transmission data bits without consideration of at least one previously transmitted symbol. This disassociation can render conventional error correction techniques ineffective. For example a conventional system may append an error correction code ECC to data where the ECC is calculated from a predefined block size of input data or a packet length. The ECC may be used to identify and or correct occurrences of errors during transmission where the errors may include one or more bit errors.

The ECC may be generated using any suitable algorithm or technique that may be used for forward error correction FEC . FEC permits a receiver to correct certain transmission errors that may affect one or more bits of a symbol transmitted on the N wires . Transmission errors may occur due to noise or crosstalk other electromagnetic interference and so on. The transmitter may include a module or circuit that appends an ECC to the transmission data to obtain a data packet . The data packet may be transcoded to obtain a sequence of symbols that encodes the transmission data the ECC and clock information related to a transmit clock . In one example the transmitter may include a first converter that converts the data packet to transition numbers and a second converter that converts the transition numbers to a sequence of symbols that may be transmitted over the N wires using the line drivers .

At the receiver a CDR is provided to extract symbols and a receive clock from sequences of raw symbols in signals received from the N wires using line receivers . A first converter may convert the sequence of symbols to transition numbers . The transition numbers are converted by a second converter to provide a received data packet . The received data packet is provided to an ECC generation circuit or module that generates a receiver ECC from data bits in the received data packet . An error detection and or correction circuit or module may compare the receiver ECC to ECC bits in the received packet ECC that correspond to the ECC generated by the ECC generator in the transmitter . The error correction circuit may attempt to use the ECCs and to correct errors in the received packet ECC in order to generate a reliable copy of transmission data to be output as received data .

A Hamming code may be used to configure the ECC generators and . The Hamming code is used to provide a block parity scheme that can correct at least a single bit error and reliably detect two bit errors per transmitted data packet . A Hamming rule may be used to calculate the number of parity or error check bits in the ECC required to accurately detect two bit errors and to allow a single bit error to be corrected. The Hamming rule may be expressed as 1 2 where

In the example shown in transmission errors exhibited as one or more errors in the received symbols may not have a direct correlation with a corresponding number of affected bits in the received data packet when the transmitter embeds clock information with transmission data in transmitted the sequences of symbols . In some instances a single symbol error occurring on an N or CCIe multiple symbol word can cause multiple bit errors after reverse transcoding. For example the table in illustrates the effect of single symbol errors in a CCIe system that uses an encoding scheme similar to that illustrated in . The first row of the table illustrates an error free transmission and decoding of a 12 symbol sequence S. . . S 0 3 2 1 0 3 2 1 0 3 2 1 which encodes a 20 bit binary number having all bits set to logic 0 value 0 . The remaining rows illustrate the effects of an erroneous received symbol circled on the transition numbers and resultant errors in decoded hexadecimal values and corresponding decoded bits . It can be seen from the table that a single transmission error can result in multiple bit errors that can defeat an error correction scheme that is based on an ECC calculated directly from transmission data .

Certain aspects disclosed herein provide an error detection and or correction scheme that can be more reliably used with N interfaces CCIe interfaces and other interfaces that embed clock information in sequences of symbols. For example an ECC may be calculated from symbol values to be transmitted a multi wire communication link. Accordingly one or more symbol errors may be corrected at the receiver using the ECC.

A transmitter includes combining logic that is configured to append ECC bits to transmission data to obtain a transmission data packet . A first converter converts the transmission data packet to transition numbers which are converted to a sequence of symbols by a second converter . The sequence of symbols is transmitted on the N wires using suitably configured line drivers . An ECC generation circuit generates the ECC bits based on the values in the sequence of symbols that encode the transmission data . The ECC bits appended to the transmission data packet are encoded in symbols which are transmitted in the sequence of symbols on the N wires .

At the receiver a CDR is provided to extract symbols and a receive clock from sequences of raw symbols received from the N wires using line receivers . The extracted symbols are provided to ECC generation logic and error correction logic . The ECC generation logic generates a receiver ECC from the received symbols . The error correction logic may compare the receiver ECC with an ECC word decoded from the received symbols . Accordingly the error correction logic may detect and or correct errors in the received symbols . A first converter may generate transition numbers from corrected symbols received from the error correction logic . These transition numbers may then be converted by a second converter to provide received data .

The ECC generator calculates the ECC information from the sequence of symbols . The number of bits used to encode the ECC information may be calculated according to the Hamming rule d p 1 2. illustrates one example in which ECC information is appended to a 24 bit camera serial interface CSI2 packet header . Here the CSI2 packet header is d 24 bits in length. Accordingly p 25 2to permit 1 bit error correction and two bit error detection and any value of p 5 satisfies the Hamming rule. ECC information for each pair of wires may be transmitted in three 8 bit words for a total of 24 bits.

In this latter example the ECC information includes an ECC calculated for each differential signal transmitted on the 3 interface. For example the 3 wires may be labeled A B and C and three differential signals and may be transmitted over the available pairs AB BC and CA respectively. In this example each of the ECCs has a length of 8 bits. The 24 bit CSI2 packet header and the ECC information may be transmitted in three sequences of 7 symbols and .

The receiver may receive the three sequences of symbols and using differential receivers . A set of three deserializers provides a set of 7 symbols corresponding to each of the three sequences of symbols and . The receiver may process each of three sets of 7 symbols to extract transmitter ECC and may independently generate receiver ECC information . Accordingly an ECC generator may be configured to generate the receiver ECC information from the symbols that encode the CSI2 packet header which may be found in two of the three sets of 7 symbols . Concurrently the symbols that carry the ECC code information are decoded to obtain the a decoded ECC corresponding to the transmitter ECC information . The symbols carrying the ECC code information may be found in two of the three sets of 7 symbols . Error correction logic may be configured to compare the receiver ECC information to the decoded transmitter ECC information and to identify and or correct bit errors in the two of the three sets of 7 symbols that encode the CSI2 packet header . The output of the error correction logic is provided as receiver output data .

The ECC generator calculates the ECC information from the sequence of symbols . The number of bits used to encode the ECC information may be calculated according to the Hamming rule d p 1 2. In one example the ECC information is calculated for a single 12 bit CCIe word and consequently p 13 2to permit 1 bit error correction and two bit error detection and any value of p 5 satisfies the Hamming rule. In another example the ECC information is calculated for two 12 bit CCIe words p 25 2to permit 1 bit error correction and two bit error detection and again any value of p 5 satisfies the Hamming rule. Accordingly it may be more efficient to add ECC information to two word transmissions than to single word transmissions.

The receiver may receive symbols from the pair of wires using receivers . A CDR may provide a receive clock and a sequence of symbols from the raw symbols received by the line receivers . The sequence of symbols is provided to error correction logic and an ECC generator . The error correction logic may compare an ECC provided by the ECC generator with a version of the transmitter ECC that is decoded from the sequence of symbols . Based on this comparison the error correction logic may identify and or correct bit errors in the sequence of symbols . The output of the error correction logic may be provided to the transcoder logic to produce receiver output data .

At step the set of transition numbers is converted to a sequence of symbols. The set of transition numbers may be converted to the sequence of symbols by using a transition number to select a next symbol relative to a current symbol. A value of the transition number may represent a separation between the current symbol and the next symbol in a table of available symbols.

At step an ECC is calculated from symbols in the sequence of symbols that correspond to the data payload.

At step the ECC is appended to the data payload such that the set of transition numbers includes transition numbers corresponding to the ECC.

In accordance with certain aspects disclosed herein an error correction code may be calculated for each of a plurality of signals transmitted on the plurality of signal wires. The plurality of signals may correspond to the sequence of symbols. The error correction codes calculated for the plurality of signals may be appended to the data payload. Each of the plurality of signals may correspond to a bit in each symbol in the sequence of symbols.

In accordance with certain aspects disclosed herein ECCs calculated for different bits in a symbol and or calculated for a plurality signals that are encoded with the sequence of symbols may be used to correct multiple errors in the sequence of symbols. For example a plurality of ECCs can be used to correct multiple errors occurring in a sequence of symbols when two or more signals corresponding to different bits of the symbols each have a single error.

At step the sequence of symbols is transmitted on a plurality of signal wires. In one example the plurality of signal wires may be provided in a CCIe bus and the data payload may include two CCIe words. In another example the sequence of symbols may be transmitted by transmitting each symbol in the sequence of symbols on differential signals carried on different combinations of two signal wires selected from the plurality of signal wires. Each of the differential signals may correspond to a bit of the each symbol and an error correction code may be calculated for each differential signal.

In accordance with certain aspects disclosed herein clock information may be encoded in the sequence of symbols. The clock information may be encoded by ensuring that each pair of consecutive symbols in the sequence of symbols includes two symbols that produce different signaling states on the plurality of signal wires.

The processor is responsible for general processing including the execution of software stored on the computer readable storage medium . The software when executed by the processor causes the processing circuit to perform the various functions described supra for any particular apparatus. The computer readable storage medium may also be used for storing data that is manipulated by the processor when executing software including data decoded from symbols transmitted over the connectors . The processing circuit further includes at least one of the modules and . The modules and may be software modules running in the processor resident stored in the computer readable storage medium one or more hardware modules coupled to the processor or some combination thereof. The modules and or may include microcontroller instructions state machine configuration parameters or some combination thereof.

In one configuration the apparatus for wireless communication includes modules and or circuits configured to convert a data payload to a set of transition numbers and further configured to convert the set of transition numbers to a sequence of symbols modules and or circuits configured to calculate an ECC from symbols in the sequence of symbols that correspond to the data payload modules and or circuits configured to append the ECC to the data payload such that the set of transition numbers includes transition numbers corresponding to the ECC and modules and or circuits configured to transmit the sequence of symbols on a plurality of signal wires . In one example the circuits illustrated in provide logic which implement the various functions performed by the apparatus .

At step a sequence of symbols is received from a plurality of signal wires. The plurality of signal wires may be provided in a CCIe bus in one example and in an N interface in another example.

At step a first ECC is calculated from a plurality of symbols in the sequence of symbols. Each symbol in the sequence of symbols may be received as a set of differential signals carried on different combinations of two signal wires selected from the plurality of signal wires. Each differential signal in the set of differential signals may correspond to a bit of the each symbol. The first ECC may be calculated by calculating an ECC for each differential signal. The plurality of symbols may correspond to a data payload carried in the sequence of symbols. The data payload may include two CCIe words.

At step the sequence of symbols may be converted to a set of transition numbers. The sequence of symbols may be converted to the set of transition numbers by deriving a transition number as a value that represents a separation between occurrences of a current symbol and an immediately preceding symbol in a table of available symbols.

At step the set of transition numbers may be converted to obtain a data packet that includes the data payload and a second ECC. The second ECC may have been calculated by a transmitter of the sequence of symbols.

At step it may be determined whether one or more errors are present in the sequence of symbols based on a comparison of the first ECC with the second ECC. Based on the determination at least one error in the sequence of symbols may be corrected using the first ECC and the second ECC.

In accordance with certain aspects disclosed herein a receive clock is extracted from the sequence of symbols. Clock information may be embedded in changes in signaling state associated with symbols in the sequence of symbols. Each pair of consecutive symbols in the sequence of symbols may include two symbols that are associated with different signaling states on the plurality of signal wires.

In accordance with certain aspects disclosed herein a plurality of first error correction codes may be calculated from the sequence of symbols. Each error correction code may correspond to a bit in each symbol of the sequence of symbols. It may be determined whether one or more errors are present in the sequence of symbols by comparing each of the plurality of first error correction codes with corresponding second error correction codes appended to the data packet. Errors in individual signals of a plurality of signals may be detected or corrected based on the comparison of the first error correction codes with corresponding second error correction codes.

The processor is responsible for general processing including the execution of software stored on the computer readable storage medium . The software when executed by the processor causes the processing circuit to perform the various functions described supra for any particular apparatus. The computer readable storage medium may also be used for storing data that is manipulated by the processor when executing software including data decoded from symbols transmitted over the connectors . The processing circuit further includes at least one of the modules and . The modules and may be software modules running in the processor resident stored in the computer readable storage medium one or more hardware modules coupled to the processor or some combination thereof. The modules and may include microcontroller instructions state machine configuration parameters or some combination thereof.

In one configuration the apparatus for wireless communication includes modules and or circuits configured to receive a sequence of symbols from a plurality of signal wires modules and or circuits configured to calculate a first ECC from a plurality of symbols in the sequence of symbols the plurality of symbols corresponding to a data payload carried in the sequence of symbols modules and or circuits configured to convert the sequence of symbols to a set of transition numbers and further configured to convert the set of transition numbers to obtain a data packet that includes the data payload and a second ECC modules and or circuits configured to determine whether one or more errors are present in the sequence of symbols based on a comparison of the first ECC with the second error correction code and modules and or circuits configured to provide the data payload as receiver output data. In one example the circuits illustrated in and provide logic which implement the various functions performed by the apparatus .

It is understood that the specific order or hierarchy of steps in the processes disclosed is an illustration of exemplary approaches. Based upon design preferences it is understood that the specific order or hierarchy of steps in the processes may be rearranged. The accompanying method claims present elements of the various steps in a sample order and are not meant to be limited to the specific order or hierarchy presented.

The previous description is provided to enable any person skilled in the art to practice the various aspects described herein. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects. Thus the claims are not intended to be limited to the aspects shown herein but is to be accorded the full scope consistent with the language claims wherein reference to an element in the singular is not intended to mean one and only one unless specifically so stated but rather one or more. Unless specifically stated otherwise the term some refers to one or more. All structural and functional equivalents to the elements of the various aspects described throughout this disclosure that are known or later come to be known to those of ordinary skill in the art are expressly incorporated herein by reference and are intended to be encompassed by the claims. Moreover nothing disclosed herein is intended to be dedicated to the public regardless of whether such disclosure is explicitly recited in the claims. No claim element is to be construed as a means plus function unless the element is expressly recited using the phrase means for. 

