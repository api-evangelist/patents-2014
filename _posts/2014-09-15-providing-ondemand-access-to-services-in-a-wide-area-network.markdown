---

title: Providing on-demand access to services in a wide area network
abstract: An integration services network is described which is operable to facilitate access to a composite service by a plurality of users having associated client machines. Each of the users is associated with one of a plurality of independent enterprises. At least one data store has a directory stored therein which maps an identity for each of the users to a policy framework which defines access information relating to a plurality of services. At least one computing device is operable to set up the composite service by integrating operation of the plurality of services. The plurality of services are associated with and controlled by a plurality of independent service providers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09197694&OS=09197694&RS=09197694
owner: salesforce.com, inc.
number: 09197694
owner_city: San Francisco
owner_country: US
publication_date: 20140915
---
The present application is a continuation of and claims priority under 35 U.S.C. 120 to commonly assigned U.S. patent application Ser. No. 12 753 709 now issued as U.S. Pat. No. 8 838 833 on Sep. 16 2014 for PROVIDING ON DEMAND ACCESS TO SERVICES IN A WIDE AREA NETWORK SALE filed on Apr. 2 2010 which is a continuation of U.S. patent application Ser. No. 11 016 566 now issued as U.S. Pat. No. 7 725 605 on May 25 2010 for PROVIDING ON DEMAND ACCESS TO SERVICES IN A WIDE AREA NETWORK filed on Dec. 16 2004 which claims priority under 35 U.S.C. 119 e to U.S. Provisional Patent Application No. 60 599 394 for METHODS AND APPARATUS FOR PROVIDING ON DEMAND ACCESS TO SERVICES IN A WIDE AREA NETWORK filed on Aug. 6 2004 the entire disclosures of both of which are incorporated herein by reference for all purposes.

The present application is also related to U.S. patent application Ser. No. 09 820 964 for SYSTEM AND METHOD FOR MAPPING OF SERVICES filed Mar. 30 2001 U.S. patent application Ser. No. 09 820 965 now issued as U.S. Pat. No. 7 516 191 for SYSTEM AND METHOD FOR INVOCATION OF SERVICES filed Mar. 30 2001 U.S. patent application Ser. No. 09 820 966 for SYSTEM AND METHOD FOR ROUTING MESSAGES BETWEEN APPLICATIONS filed Mar. 30 2001 U.S. patent application Ser. No. 10 727 089 now issued as U.S. Pat. No. 7 305 454 for APPARATUS AND METHODS FOR PROVISIONING SERVICES filed Dec. 2 2003 U.S. patent application Ser. No. 10 728 356 now issued as U.S. Pat. No. 7 249 195 for APPARATUS AND METHODS FOR CORRELATING MESSAGES SENT BETWEEN SERVICES filed Dec. 3 2003 and U.S. patent application Ser. No. 10 742 513 for APPARATUS AND METHODS FOR MEDIATING MESSAGES filed Dec. 19 2003 the entire disclosures of all of which are incorporated herein by reference for all purposes.

The present invention relates to techniques for providing interoperability between and among disparate entities applications and services in a network environment. More specifically embodiments of the invention provide techniques which provide on demand access to different combinations of applications and or services in such a network environment.

Corporate reliance on technology has become more complex and pervasive. Increasingly companies are identifying opportunities to extend their core business or cut costs using the Internet. Both trends have put increasing priority on integrating the operation of disparate business applications that exist in different enterprises. As a result the enterprise application integration EAI and business to business B2B industries have emerged to provide solutions for unifying enterprise legacy systems that may span corporate boundaries and may include the applications of business partners and customers. Ideally this unification does not require sweeping changes to the underlying applications and data structures.

EAI and B2B solution providers typically offer end point solutions for managing business process interactions between end points. This can take place within an enterprise on a local network or in the case of B2B across the Internet. Although a specific enterprise software package may be designed to transparently handle diverse business processes carried out by two or more end nodes each specific enterprise software package requires releasing implementing or building customized connectors or adapters to connect to different legacy systems which will work for the specific business processes and applications used by the specific end nodes. As a result these enterprise solutions are not easily scalable. Additionally scores of connectors are needed for each vendor e.g. Oracle SAP and Peoplesoft . As each supplier releases new versions of their software EAI and B2B vendors find themselves unable to gain traction under the burden of supporting existing connectors.

Notwithstanding the benefits of EAI and B2B solutions the software costs and resource investments required often prevent small to medium enterprise SME customers from embracing EAI and B2B solutions. For SMEs reliance on web services technology providers represents an increasingly attractive alternative.

The application service provider ASP market is one of the fastest growing segments of the software industry. ASPs make enterprise applications e.g. human resources administration recruiting travel and expense management sales force automation available to customers over the web on a subscription basis. These applications are fully managed and hosted by the provider providing significant cost savings to enterprises and eliminating many of the issues requiring EAI solutions.

Some ASPs merely host and manage third party packaged software for their customers i.e. managed hosters . Others build new applications from the ground up to take advantage of the benefits and cost savings of the ASP model. ASPs enjoy the profit margins and operational scalability of consumer Web companies like eBay and Yahoo while at the same time offering the feature sets of complex enterprise software applications such as PeopleSoft and Siebel.

Although the ASP approach allows a business and its partners to use third party or custom applications this approach does not allow the configuring and dismantling of complex arrangements between business partners. Specifically the ASP approach requires custom configurations when business partners use different data formats for their messages or different communications protocols. Using these custom configurations business partners specify the format of outgoing messages to comport with the recipient s format requirements. These messages can then be delivered to a recipient in a format understandable to the recipient. According to this approach business entities must keep track of formatting and integration requirements of each of their recipient business partners in order to achieve interoperability. This can be costly and time consuming.

None of these ad hoc approaches to interoperability can practically provide a single solution for facilitating the consumption of the wide array of disparate services employed by the typical enterprise. Moreover none of these approaches is well suited to deliver such an array of services in the personalized manner to which so many users of the World Wide Web have become accustomed.

In view of the above there is a need for facilitating communications between and among diverse business entities processes and services in a scalable manner.

According to the present invention an interoperability network is provided which mediates technology issues between disparate entities communicating via the network. According to a specific embodiment an integration services network is provided which is operable to facilitate access to a composite service by a plurality of users having associated client machines. Each of the users is associated with one of a plurality of independent enterprises. At least one data store has a directory stored therein which maps an identity for each of the users to a policy framework which defines access information relating to a plurality of services. At least one computing device is operable to set up the composite service by integrating operation of the plurality of services. The plurality of services are associated with and controlled by a plurality of independent service providers. The at least one computing device is further operable to connect with the client machines and each of the services and to selectively facilitate interaction among the client machines and the services with reference to the directory and the policy framework thereby enabling each of the users to access the plurality of services as an integrated solution.

According to another embodiment a computer implemented method for facilitating access to a composite service by a plurality of users having associated client machines is provided. Each of the users is associated with one of a plurality of independent enterprises. Access is provided to a network having a directory associated therewith which maps an identity for each of the users to a policy framework. The policy framework defines access information relating to a plurality of services associated with the network. The network also has the composite service associated therewith operation of the plurality of services having been integrated to enable the composite service. The services are associated with and controlled by a plurality of independent service providers. The client machines are enabled to connect with the network and selectively interact with the services in accordance with the directory and the policy framework thereby enabling each of the users to access the plurality of services as an integrated solution.

A further understanding of the nature and advantages of the present invention may be realized by reference to the remaining portions of the specification and the drawings.

Reference will now be made in detail to specific embodiments of the invention including the best modes contemplated by the inventors for carrying out the invention. Examples of these specific embodiments are illustrated in the accompanying drawings. While the invention is described in conjunction with these specific embodiments it will be understood that it is not intended to limit the invention to the described embodiments. On the contrary it is intended to cover alternatives modifications and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims. In the following description specific details are set forth in order to provide a thorough understanding of the present invention. The present invention may be practiced without some or all of these specific details. In addition well known features may not have been described in detail to avoid unnecessarily obscuring the invention.

Embodiments of the present invention are implemented in an interoperability network which is a message platform having a loosely coupled service oriented architecture SOA . One of the main advantages of such an architecture is that it allows communication e.g. the consumption of services between network end points and processes to transcend technology or protocol mediation issues. An end point e.g. a user or a process e.g. a service simply connects to the network and that one connection implicitly connects that end point or process at some level to every other entity on the network.

As used herein the term service may represent any computer application process entity or device accessible to other applications processes entities or devices through an interface such as an application programming interface API user interface or Internet web user interface by any of a variety of protocols over a network within an entity or over the Internet. A service may also comprise multiple methods or applications on a single device or distributed across multiple devices.

According to various specific embodiments of the invention an interoperability network is provided which facilitates interoperability using a wide variety of Web Services technologies and standards including for example SOAP Web Services Description Language WSDL WS Security WS Policy and Business Process Execution Language BPEL . The interoperability network mediates the technology differences in data formats communications protocols and business policies through a set of established and defined processes and policies.

In general the term Web Services refers to a collection of technology standards which enable software applications of all types to communicate over a network. A Web Service typically facilitates a connection between two applications or services in which queries and responses are exchanged in XML over HTTP. More specifically the term Web Services implies the implementation of a stack of specific complementary standards.

Although not specifically tied to any transport protocol Web services build on Internet connectivity and infrastructure to ensure nearly universal reach and support. In particular Web services take advantage of HTTP the same connection protocol used by Web servers and browsers. XML is a widely accepted format for exchanging data and its corresponding semantics. It is a fundamental building block for nearly every other layer in the Web Services stack.

The Simple Object Access Protocol SOAP is a protocol for messaging between applications. It is based on XML and uses common Internet transport protocols like HTTP to carry its data. Web Services Description Language WSDL is an XML based description of how to connect to and communicate with a particular Web service. A WSDL description abstracts a particular service s various connection and messaging protocols into a high level bundle and forms a key element of the UDDI directory s service discovery model. Finally Universal Description Discovery and Integration UDDI represents a set of protocols and a public directory for the registration and real time lookup of Web services and other business processes. Various embodiments of the invention employ these and similar technologies.

Referring now to the exemplary diagram of user platforms which may be part of an enterprise network connect with a interoperability network via intervening networks . Interoperability network e.g. using one or more computing devices such as server facilitates access to selected ones of associated services which may be sponsored or provided by network or may comprise application services from third parties. These services may actually reside in the network or be connected via intervening networks e.g. . As mentioned above network provides transparent connections to and interoperability with a wide variety of services and applications. Interoperability network has a directory capability represented by database which facilitates management of user identities e.g. including role and group membership application service identities and policies which control which entities in the network can interact and the manner in which they can interact.

According to some implementations the interoperability network employs the directory to manage interactions among the services associated with many independent organizations each with different access authentication and encryption technologies. Differences in organizational security policies are handled using a policy framework which mediates the differences. According to some embodiments each organization is able to configure and enforce access rights with multiple methods of authentication being supported.

According to some implementations the interoperability network supports WS Policy a flexible mechanism which enables enterprises to govern access to the services they have deployed on the interoperability network. Such a mechanism may be employed for example to ensure that data are exchanged over encrypted connections to the interoperability network that user and service identities are verified using the directory and that access to a particular service is limited and controlled. According to various implementations such capabilities are supported using industry standards such as for example SSL IPSEC VPNs and X.509 digital certificates.

Thus interoperability network provides a hosted open and shareable environment in which related and unrelated entities may provide and consume services using heterogeneous technology.

One approach to facilitating connection to and the consumption of services via such an interoperability network involves separating the messaging function into two different aspects message delivery and message posting. Message delivery relates to how messages are delivered from the network to a service and requires only that the service provider specify how the service expects to receive messages i.e. the message format and communication protocol. Message posting relates to how depending on its type a service is required to post messages to the network and identify services to be consumed. By decoupling these two aspects of messaging a consumer of a service need only be able to identify the service to be consumed for the network to successfully mediate the interaction.

Additional examples of computer networks in which the techniques of the present invention may be implemented are described in the copending patent applications incorporated herein by reference above. However it should be understood that the networks described herein and in these copending applications are merely exemplary and not meant to limit the scope of the present invention.

The present invention is generally related to techniques for providing on demand access to combinations of services within a computer network such as for example the interoperability network described above or the networks described in the above referenced patent applications. Several of these embodiments are described below as being implemented within an interoperability network which may also be referred to as Grand Central. Grand Central provides an interoperability network which allows users to set up or register multiple entities to share information applications and services efficiently and reliably. It should be noted that the details relating to the Grand Central network are not intended to limit the scope of the invention. Rather any suitable interoperability network may be enhanced according to the techniques described herein. It should also be noted that any of the features specified in the above referenced patent applications may be integrated and used with the techniques of the present invention.

The Integrated Application Suite IAS solution implemented according to specific embodiments of the invention enables the effective deployment aggregation integration and maintenance of any combination of the various services applications and tools available on an interoperability network. According to such embodiments a powerful cost effective ASP solution with all applications seamlessly integrated is delivered in an on demand model. The IAS solution provides fully integrated suites of business tools and applications and enables an easy to use yet powerful set of system capabilities including the auto provisioning of application and tool suites all of which may be pre wired with the necessary adapters connectors and integrated critical business processes.

The various elements of the IAS solution are aggregated and integrated by the interoperability network platform. The interoperability network enables the effective aggregation distribution and integration of business processes of both data and services. All of the required registrations provisioning synchronization and reconciliation are accomplished maintained and monitored via the network.

The IAS solution allows small business to have access to integrated business processes that are delivered as a service. These business processes enable such businesses to have a single integrated view into standard business tools that can be deployed seamlessly across their enterprise. In addition the integrated applications and corresponding business processes delivered by the IAS solution reduce the amount of data entry and other duplicated activities thus ensuring greater efficiencies and fewer errors. Because the entire solution is delivered as a service the small business has no hardware and software to manage purchase or maintain thereby significantly reducing costs.

According to a specific embodiment illustrated in the components of the Integrated Application Suite IAS solution include a Registration and Administration Portal RAP an IAS Toolbar an IAS Dashboard and Composite Processes all deployed in and enabled by an Interoperability Network .

The RAP is the first interface that a prospective user encounters and facilitates signing up the user and establishing the initial relationship. It may include any of the following service provider branding registration pages service package selections payment management documentation on particular IAS offerings support information etc. The RAP also includes a link for download of the IAS Toolbar.

By using the RAP users of composite services will be able to establish an identity on the network and select business applications from pre defined packages. This identity is propagated to the selected enterprise applications. For each package selected there is a stated System of Record SOR . The SOR is used via its standard web interface to enter initial user or corporate information. This information will be delivered and replicated to the other applications by the IAS solution. All other updates to the SOR from that point on are propagated in a similar fashion.

In order to simplify access to the IAS solution the IAS Toolbar which is deployable from a link in the RAP may be installed on the user s web browser. This toolbar performs several functions including for example Single Sign On SSO of the user for enterprise applications single click access to native web interfaces for enterprise applications IAS Dashboard launch administration mode allows configuration of SSO and toolbar configuration and various ancillary functions e.g. search help etc. .

The IAS Dashboard is launched from the IAS Toolbar and provides a web browser environment for initiating composite processes from a palette of predefined services and composite processes. These will form the pre plumbed aspect of the IAS solution and provide a library of business functions that span multiple enterprise applications from the selected package. By using these composite processes the user will enter required information into the IAS Dashboard and the composite process will perform the dissemination of messages to the associated systems. The interoperability network performs all the complex integration requirements on demand such as mediation of security format protocol and enables the transformation orchestration and delivery of all messages included in the composite processes for all applications. The IAS Dashboard may also incorporate service provider branding role based content presentation general user administration etc. diagnostic reporting based on services executed and application administration and help pages.

According to a specific embodiment the interoperability network provides the functional and data integration capabilities as well as business process engines security management directory services and graphical interface support. Hence all the complexity of connecting a many to many environment is handled by defining the application on the interoperability network one time. According to some embodiments the IAS solution employs a rich client infrastructure. This is a downloadable web browser plug in that supports the interoperability network and permits graphical components to interact with the services and processes deployed on the network.

For development purposes a rich client provides a development environment e.g. environment which also runs from within a browser as an automatically downloadable plug in.

The IAS solution eases integration between systems by moving the complexity usually required at the edge into the network. This allows simple connections with the network taking care of interoperability between each node. The network adapts to the communications protocols and data formats used by customer applications so that minimal additional software is required at the customer site. Using this loosely coupled approach the interoperability network is able to on board customers in a matter of minutes or hours instead of the weeks and months it can take to conduct traditional integration products with software and hardware.

The IAS solution may be implemented in the interoperability network described above. Additional characteristics of a specific interoperability network in which an embodiment of the IAS solution may be implemented will now be described. It should be noted that embodiments of the invention may be implemented in networks which do not include all of the characteristics and functionalities described. Rather the details of the following description are only being provided by way of example.

A powerful shared directory lies at the heart of the interoperability network which enables disparate entities to easily discover access reuse and share services and business processes in the network. The Business Services Directory simplifies and accelerates the creation and extension of Business Solutions. The public directory of services enables services to be categorized e.g. by category and provider and published so that they can easily be woven into solutions. Any third party can easily expand the reach of their services by publishing them in the directory. A private directory of services provides comprehensive access control on an individual user role or group basis.

Differences in technology implementations such as connectivity standards and data formats are mediated by the interoperability network in contrast with the conventional approach of hardwiring them. This loose coupling provides the flexibility for services and applications to change in the future without breaking the solution. The IAS solution can use whatever standards based technology is preferred today and very simply migrate to new standards and policies as they emerge. In addition the network can rapidly and inexpensively react to customer needs and respond to emerging business opportunities with little or no additional investment.

The interoperability network provides secure reliable messaging with connectivity options e.g. protocol handling services that range from traditional file and batch based systems such as FTP to evolving standards such as EDI AS2 XML HTTP and Web services protocols. A wide range of legacy applications and connectors for existing enterprise systems are supported as well as web portals application servers desktop applications and handheld devices any software designed for Web services.

The interoperability network provides a comprehensive suite of data mapping network services for mediating differences between data formats. An industry standard XSLT service performs mapping between XML based data formats with maps being easily created through a wide variety of readily available XML tools.

Security policy mediation in the network ensures that trusted relationships can be managed between many organizations each with different access authentication and encryption technologies without unnecessary exposure of data and applications resident behind corporate firewalls. Differences in corporate security policies are mediated through a policy framework. The solution provider is in complete control of configuring and enforcing access rights and multiple levels of authentication are supported. A complete permissions model is provided for configuring and enforcing access rights. Authentication methods supported include VeriSign certificates to validate identity of business partners. Connections between enterprises and the interoperability network are secured at 128 bit encryption.

A full suite of on boarding options simplifies the process of connecting partners and customers so that valuable time is not lost engaging new business relationships. Each partner can choose the appropriate technology and the preferred connection method.

Automating business processes between applications and services is not a single event but an ongoing process that can require the orchestration of multiple many to many interactions with tens if not hundreds of other organizations. The interoperability network provides a rich open standards based process development environment which enables the creation and deployment of many to many business processes in the network. It provides the fundamental building blocks and platform services required to rapidly create combine clone and customize business process solutions and share them with others without having to buy and deploy expensive and complex enterprise software. Commonly used processes and services can be published in the services directory for reuse. Simple and flexible message routing for performing basic process orchestration gives the ability to chain together services from multiple parties to form business processes.

In some implementations BPEL Version 1.1 is delivered in an open service based model allowing a variety of endpoints to feed into and out of a business process from traditional EDI or FTP enabled endpoints to SOAP enabled endpoints. Because the BPEL service gains all the benefits of the network s service based model including it s extensibility flexibility visibility and control the execution of BPEL scripts is done without the need to deploy costly hardware or software within the enterprise.

Message Routes and BPEL services can be wrapped as services and published and shared publicly or privately providing an open and reusable model for integrating and building business processes between partners. Of course it will be understood that BPEL is just an example of how business processes may be implemented. Other tools and approaches to business process design may be employed such as for example process design tools from Grand Central Communications Inc. of San Francisco Calif.

Monitoring reporting and exception management features e.g. of the interoperability network improve the quality and scope of services that can be delivered by providing shared context and end to end visibility of all business processes that flow through the network. Services can take actions based on real time events using event based notifications combined with business process management tools.

The loosely coupled Services Oriented Architecture of the interoperability network allows changes in connectivity data format and security choices as well as providing expanded services without negatively impacting other participants. The policy framework ensures that any negative changes such as a customer or service provider dropping to a lower level security are trapped and flagged for remediation without compromising the integrity of the interaction.

The interoperability network provides shared visibility into a number of aspects of interactions on the network. Customizable reports on the status and history of any service business process or data relationship provides the ability to trace correlated messages and transactions. Event handling mechanisms can be configured by partners with rules to route a wide range of exceptions.

Alerts can easily be programmed into business processes enabling those processes to effectively operate automatically unless a problem is encountered. Once activated alerts can be directed to other services on the network external endpoints for integration into enterprise management systems or converted to e mails pages or faxes.

A unique tracking ID is issued for each interaction spanning individual point to point data exchanges as well as long lived multiple message exchanges. Message audit trails and transaction information is collected persisted and validated to help resolve transaction disputes by providing proof of who sent a message proof of submission and proof that the message has been given to the intended recipient.

In general the interoperability network addresses user on boarding and ongoing management issues by moving mediation and management of connectivity and integration into the network. It is the network that adapts to each enterprise s environment instead of the enterprise needing to adapt to the network.

A specific embodiment of the IAS solution provides for the offering and subsequent provisioning of integrated application suites. A list of services and the options for consuming them are presented to a potential user in an email or web interface. A link to a Business Solution Center is also presented where the user can choose the integrated application suite they require along with any optional services. Offers can be very detailed including information on data formats SLAs and terms of use in addition to basic service information. When the user accepts the offer the interoperability network provisions an account configures any connectors permissions services to be consumed and then enables the user to set security policies.

Conventionally integration preparedness is limited to either 1 an EAI vendor providing an infrastructure you can work with or 2 an application vendor exposing APIs for use in integration. Given these two starting points it is up to the developer to derive a working system and to bear the consequent costs. And yet the effort has often been done before meaning that the applications of such vendors have been integrated repeatedly with the same problems being encountered and resolved.

To address these issues embodiments of the invention employ Pre Plumbed Applications. That is using the interoperability network as the EAI infrastructure the required applications are integrated function and data and the resulting services deployed. These services can be combined to form composite services through the use of process definitions which can span multiple integrated applications. These services may then be consumed either programmatically or through the IAS Dashboard.

According to the invention the interoperability network allows the loose coupling of applications into sets of composite processes. For every class of application that is added the network creates a normalized view of the application within the directory. As an example with Customer Relationship Management CRM although there are several packages capable of doing this the interactions are standard for example add salesperson delete salesperson post closed sale to accounting etc. The interfaces into the applications will be defined and the business processes between them will be a set of standard processes that will require minimal modification when new packages are added.

These processes are controlled either through the applications themselves if they have the appropriate customization tools available or through the IAS Dashboard which is customized to the business process that will provide a set of tasks to users with the correct permissions. The IAS Dashboard may be configured to provide business level reports on the interactions between applications such as 

 Shopping Cart Sold Item XXXX to customerID XXXX transferred to accounting system on XX XX XX at XX XX 

In addition the IAS Dashboard may be configured to provide simple escalation rule configuration e.g. when an error of type X happens either call e mail page or IM user XXX.

According to a specific embodiment the interoperability network is operable to leverage wherever possible existing and evolving standards to ensure that these business processes conform to the needs of customers. This approach enables customers and service providers to easily extend solutions using a commonly understood non proprietary framework. For example the Universal Business Language is an effort currently being conducted under the auspices of OASIS to simplify business interactions. The purpose of the OASIS UBL Technical Committee is to develop a standard library of XML business documents e.g. purchase orders invoices etc. by modifying an already existing library of XML schemas to incorporate the best features of other existing XML business libraries. The Technical Committee will then design a mechanism for the generation of context specific business schemas through the application of transformation rules to the common UBL source library. UBL is intended to become an international standard for electronic commerce freely available to everyone without licensing or other fees. The interoperability network is designed to take advantage of such developments.

According to specific embodiments a wide variety of applications and or services deployed in or accessible via an interoperability network are integrated or bundled in various combinations. Three exemplary combinations corresponding to different suites of services are described below. It will be understood that these are merely examples of the virtually unlimited combinations of services enabled by the present invention.

According to one embodiment an eCommerce solution is provided which enables individuals and small businesses to quickly and easily set up an online commercial presence. This solution supports scenarios such as completion of eCommerce sales sequences shopping carts shipping options tax calculations and so forth with sales orders and purchase orders and payment. Online storefront capabilities are provided by Miva Corporation www.miva.com . Financial management tools i.e. QuickBooks are provided by Intuit Inc. http quickbooks.intuit.com . Online payment processing capabilities are provided by PayPal Inc. www.paypal.com .

According to another embodiment a Customer Relationship Management CRM solution is provided for small and medium sized enterprises SMEs . In addition to full CRM and financial capabilities this suite supports end to end sales event expense management as well as the other financial implications of doing business which traditionally impact several systems. In addition to providing the financial management tools of QuickBooks and the storefront capabilities of Miva this solution provides the CRM tools of Salesforce.com www.salesforce.com and the expense management tools of Gelco Information Network Inc. www.gelcoexpense.com .

According to yet another embodiment a Human Resource HR management solution is provided which enables SMEs to efficiently manage their human resources and employee benefits. This suite provides a library of predefined processes that impact multiple enterprise applications every day for example hiring employees setting up payroll change management etc. . HR management tools are provided by Employease Inc. www.employease.com . Payroll processing tools are provided by Automatic Data Processing ADP Inc. www.adp.com . Expense management and financial management tools are provided by Gelco and Intuit respectively.

The details of integrating with each of the applications or services mentioned above are described below. It should again be noted that these descriptions are provided for exemplary purposes only and that the present invention is not limited to the identified services applications or integration techniques.

With over 8 million users of the QuickBooks financial management solution Intuit has released a well defined Software Development Kit SDK which enables integration of QuickBooks with 3.sup.rd party systems. The QuickBooks SDK provides a common methodology for integrating an application with QuickBooks regardless of QuickBooks version. At the core of this methodology is qbXML a version of XML designed for QuickBooks. In addition to the innovation around qbXML the SDK is compatible with many different development environments.

Developers leveraging the QuickBooks SDK start with a standards based foundation for creating their integrations. The SDK includes required software libraries XML schema definitions and utilities to accelerate development.

 1 the qbXML Request Processor which requires the developer to create and parse documents written in qbXML and

 2 the QuickBooks Foundation Class QBFC Library which is a library of COM objects that implement the qbXML specification. This API eliminates the need to create and parse qbXML directly in the code.

Basic communication to QuickBooks is based on a client server model shown in . The application sends a request message to QuickBooks and QuickBooks sends back a response message. There is a one to one correspondence between request and response messages.

The qbXML Request Processor and QBFC API provides the following COM methods for communications with QuickBooks 1 OpenConnection 2 BeginSession 3 ProcessRequest 4 EndSession and 5 CloseConnection.

Integrating via the qbXML Request Processor requires the construction of a qbXML document. qbXML follows normal XML convention with the definition of elements and attributes. A qbXML document must include the name of the QuickBook Object QuickBook Operation and request data in the body of the XML document. With a properly constructed qbXML document the qbXML Request Processor will initiate the call to QuickBooks.

QuickBook Objects are used when making requests to QuickBooks. Objects are divided into two categories lists and transactions. Lists correspond to lists of information i.e. Account List Entity List etc. . . . . Transactions correspond to basic accounting entities i.e. Accounts Receivable Transactions Sales Receipts etc. . . . .

Whereas the Objects are the nouns of the request an Operation is the verb. QuickBooks supports 5 Operations Query Add Modify Delete and Void.

In addition to specifying an Object and Operation a qbXML request document must be included as part of the request. Listed below is a sample qbXML request document that adds a customer to QuickBooks 

In the above example a Customer Object is used in conjunction with the Add operation. The corresponding qbXML response document to this request is 

Unlike the qbXML Request Processor integration accomplished with the QBFC Library requires no construction and parsing of a qbXML document. QBFC is implemented as a COM library that can be manipulated with various programming languages. The QBFC library 1 employs standard COM concepts such as data types BSTR long error handling and method signatures 2 Supplies data type objects that provide the ability to enforce the qbXML data types 3 Matches object and element names to the underlying qbXML specification and 4 Maintains the request response model.

The QBFC COM objects are grouped into several categories namely 1 Session Management 2 High Level Request Information 3 High Level Response Information 4 Message Data and 5 Data Types. A detailed description of the functionality and implement of all QBFC COM Objects can be found in the QuickBooks SDK incorporated herein by reference for all purposes.

Integration of QuickBooks to the interoperability network of the present invention is accomplished with a QuickBooks connector. The QuickBooks connector is responsible for managing communication security transactions and data translation with the network. The QuickBooks connector is able to support synchronous and asynchronous communication to the network. Transformation between 3d party data formats and qbXML is centralized in the network. The connector facilitates Single Sign on between the interoperability network and QuickBooks. All transactions are managed by the network to guarantee transactional integrity of all business processes.

As one of the most popular SMB storefront applications in the marketplace today Miva Merchant is architected from the ground up for an internet environment. Miva Merchant documents a well defined application integration framework for integrating and extending the Miva Merchant application.

The Miva Merchant integration framework includes a scripting language virtual machine vendor developed business functions and a well defined database schema. By creating programs authored in the Miva Script Language developers can rapidly and easily integrate the Miva Merchant suite to 3rd party applications. The Miva Virtual Machine acts as a run time environment for the custom programs. When interacting with Miva Merchant Data developers have the option of interacting directly with the database or through the vendor developed business functions Miva Database Functions.

Miva Script is a server side scripting language that is implemented by the Miva Virtual Machine. Miva Script is based on XML tags corresponding to typical programming language constructs such as assignment statements conditional expressions loops and input output statements. Listed below is a sample snippet of a Miva Script 

Miva Script programs are compiled by the Miva Script Compiler then run under the Miva Virtual Machine.

Extending functionality of the Miva Merchant Suite is accomplished through Miva Modules. Miva Modules are self contained programs that developers create to supply additional functionality to the Miva Merchant Suite. A Miva Module is programmed using Miva Script and contains a set of Miva Functions. There are 13 types of Miva Modules and each type requires specific Miva Functions to be implemented. The 13 types of Miva Modules are listed below 

A custom Miva Module is created by extending one of the standard modules listed above. For example a SalesforceExport Module would extend the Miva EXPORT module. This Module would be programmed in Miva Script and implement the required functions for an EXPORT module.

In addition to interacting with the Database directly developers may also use the pre packaged Miva Database Functions. The Miva Database Functions are a set of well tested and pre defined Miva Functions for common database tasks such as finding data and reading writing data. The Miva Database Functions are incorporated in custom Miva Modules. Listed below is the current set of Miva Database Functions 

Interacting with the Miva database directly is accomplished through Miva Script. The Miva Script language defines a syntactic language for manipulating data with the Miva database.

The recommended practice for integrating a Miva Merchant application with external systems is via a Miva Script Commerce Library. A Miva Script Commerce Library is an extension of the Miva Script language. The Miva Script Commerce Library acts as a communication link between an external system and a Miva Script. The Library is written in the C programming language.

Miva provides a well defined API for creating custom Miva Script Commerce Libraries. The APIs define functional interfaces which must be implemented by the developer to create a custom Commerce Library. The interfaces may be broken down into four categories memory allocation variable manipulation networking and file. In addition to handling connectivity to an external system it is recommend that all data normalization be handled by the Commerce Library. Examples of custom Commerce Libraries developed in the past have integrated Miva Merchant with Payment Gateways i.e. PayPal Authorize.net etc. . . . Finanical Packages i.e. Quickbooks Great Plains etc. . . . and Trading Networks i.e. Ariba Commerce One etc. . . . .

Integrating Miva Merchant to the interoperability network of the present invention involves the creation of a Grand Central Miva Merchant Module GCMM . The GCMM is responsible for managing connectivity security and transactions with the network. For connectivity the GCMM exposes a WSDL for the network to register as an endpoint. In addition the GCMM is able to interact with the network in a synchronous or asynchronous fashion. The security required to enable single sign on is managed by the network. For cases when transaction context is important to the business process the GCMM manages the coordination of the transactional process.

Most PayPal members currently use the PayPal website to manage their PayPal transactions. Members additionally can use PayPal merchant tools such as PayPal Shopping Cart and Instant Payment Notification for more advanced payment functions.

PayPal now extends this flexibility with the introduction of PayPal API. The API is based on web services standards such as SOAP and WSDL. PayPal merchants can use web services technology to create applications that work directly and automatically with PayPal. PayPal API calls can automate certain PayPal functions that normally would require a person to manually enter information. For example the PayPal Refund API allows merchants to automate refunds to buyers. This is especially useful for large merchants who make hundreds of refunds each month. PayPal API calls are accessible by qualified Business and Premier accounts.

Currently PayPal provides two API calls RefundTransaction and GetTransactionDetails. More API calls for bulk processing will be available soon.

In addition to the API PayPal can also send payment alerts called Instant Payment Notifications IPNs to applications when a payment has been made on PayPal. Grand Central has implemented an IPN handler that can accept an IPN validate with PayPal that the IPN is a genuine IPN not a spoof message and trigger the next step in the business process e.g. shipping packaging etc. 

Employease supports application integration through the Employease WebAPI a web services toolkit supporting SOAP XML HR XML and ebXML. The WebAPI provides On Demand services import and export for the exchange of information over HTTPS as illustrated in .

Employease On Demand sevices can be used by applications external to the Employease Network EN to create new and modify existing employee records in the EN. Multiple services have been created and each is limited to specific transaction types. The table below defines the employee provisioning services that are currently available.

Each of the employee provisioning web services supports multiple types of employee data including demographic work earnings and user information.

Employease web services are based upon the Employease Automated Exchange Architecture and messaging specification EConnectXML an extension of ebXML.

The ebXML specification allows for a variety of message processing scenarios from asynchronous where the requests replies and acknowledgements are sent over separate channels to synchronous messaging where all operations are carried over a single HTTPS connections. In this specification messaging is conducted over HTTPS. The Request sent by the MP and the Response returned by EConnectXML is all handled on a single HTTPS Post method. The diagram below illustrates the message processing involved. The MP executes a HTTPS POST method with the necessary ebXML MIME structure and EConnectXML responds with an ebXML Response message over the same HTTPS connection.

This process is then repeated for further Request Response cycles. shows the possible contents of the ebXML Request and Response. As shown the entire business process is encapsulated within a single HTTPS method. The MP waits on the HTTPS Post for a response to be returned from EConnectXML. Appropriate timeout constraints must be accounted for on both sides of the HTTPS connection. EConnectXML has a default timeout of 30 minutes.

1 Document Data export type business processes where the Messaging Partner is requesting payload to be returned. A document of arbitrary size can be returned. It can be XML ASCII or potentially other formats.

2 Document Data import type business processes where the MP is sending a payload document of arbitrary size for consumption by EConnectXML.

3 Simple method invocation type operations. In this mode the payloads in the Request and Response function as arguments and return values respectively.

Every unique business process supported and published to an MP by EConnectXML has a defined ebXML MIME structure that must conform to a Request and Response signature as depicted in the diagram above.

Salesforce.com enables customers who have subscribed to the Enterprise Edition of their CRM system to access and manage their data through the sforce SOAP API. The latest version is 3.0. The sforce API calls represent specific operations that client applications can invoke at run time to perform certain tasks. For example one can query an organization s data add update and delete information obtain metadata about the organization s data and run utilities to perform administration tasks.

The client application prepares and submits a service request to the sforce Web service the sforce Web service processes the request and returns a response and the client application handles the response as appropriate. Once the API call is invoked the client application waits until it receives a response from the service. Asynchronous calls are not supported. Every operation that writes to a salesforce.com table is committed automatically. This is analogous to the AUTOCOMMMIT setting in SQL. For create update and delete calls that attempt to write to multiple rows in a table the write operation for each row is treated as a separate transaction. For example if a client application attempts to create two new accounts they re created using mutually exclusive insert operations that succeed or fail individually not as a group.

For each sforce API call a client application typically 1 Prepares the request by defining request parameters if applicable 2 Invokes the call which passes the request with its parameters to the sforce Web service for processing 3 Receives the response synchronously from the sforce Web service and 4 Handles the response either by processing the returned data for a successful invocation or by handling the error for a failed invocation .

In order to embed sforce API calls in a larger process there is a requirement for a component to handle this login and session management. The interoperability network creates a process wrapper for the sforce API that serves this purpose. The client only needs to authenticate to the network and submit a request to the process which then logs in using the appropriate SFDC credential obtains a session and makes the relevant call.

Another interesting feature of the sforce API is that the login operation redirects a client from the SOAP server published in the WSDL file to a geographic back end server for subsequent operations. The interoperability network s process wrapper can handle that redirect transparently so that the client doesn t need to know that any redirect is taking place.

ADP Pay eXpert supports application integration through importing of employee data and pay data. If employee data is created using an external source such as a human resources system e.g. Employease the data can be imported into the Pay eXpert database without rekeying the data. After importing the employee data the data can be treated like any other data that were entered directly into Pay eXpert. The employee data that is imported must be in an ADP specified format and assigned an ADP specified filename. According to specific embodiments the importing of Employease employee data into ADP is automated using HTTPS FTP gateways. According to a more specific embodiment this employee data import can become a routine part of every payroll cycle.

Pay eXpert supports importing data files prepared in the comma separated value CSV file format. There are many products such as Microsoft Excel dBASE and FoxPro that can help prepare a file in CSV format. A CSV file can also be prepared using a basic text editor. Each employee data import file comprises multiple records where a record is one line of data in the file. The items in a record are separated from each other by a comma or tab. The end of a record is indicated by a carriage return and line feed. An employee data import file must contain at least two types of records Header and Data. Similarly pay salary data can be imported into ADP Pay expert using CSV files.

The details of integrating the data associated with each of the applications or services mentioned above are described below. It should again be noted that these descriptions are provided for exemplary purposes only and that the present invention is not limited to the identified services applications or integration techniques.

Developing integration to QuickBooks requires an understanding of the QuickBooks data format. Since all data interactions with QuickBooks may be transformed to qbXML integrating the qbXML data format to other 3.sup.rd party data formats may be accomplished by using common XML transformation technology such as XSL style sheets.

Developing integration to the Miva Merchant suite requires an understanding of the Miva Merchant Data Format. Since all interactions with the Miva Merchant Database is accomplished through the XML based Miva Script language all inputs and outputs to the Miva Merchant Database are performed through an XML data format.

The Miva Merchant Database Schema is available for viewing over the internet http www.miva.cmn docs api db HTML MMdb4x.html . Because the database schema is well understood and all interactions with the database are accomplished through XML transforming results to a different XML Schema is executed with an XSL style sheet.

For data integration PayPal publishes an eBL PayPal schema. The eBL schema library leverages existing business component schema models such as Universal Business Language UBL ebXML and EDI to re use and customize common industry definitions of core business message components to meet specific business needs of eBay applications such as buying selling payment cataloguing and product search. illustrates what needs to go into the SOAP envelope. Approval is implicit in the response.

AbstractRequestType Base type definition of request payload that can carry any type of payload content with optional versioning information and detail level requirements.

AbstractResponseType Base type definition of a response payload that can carry any type of payload content with following optional elements 1 The timestamp of the response message 2 An application level acknowledgement and 3 Application level errors and warnings.

Data integration with PayPal requires contructing AbstractRequestType messages and parsing AbstractResponsetType messages based on the eBL PayPal schema.

For Employease employee synchronization data is transmitted in an XML file format developed by Employease. Version 1.0 supports the standard PersonName and PostalAddress objects approved by the HR XML Consortium. Future releases will strive to incorporate additional HR XML industry standards as they become available. Employee synchronization currently supports three transaction types Insert Update and Delete.

Each Employee Synchronization transaction shares a common element a Key that is used to uniquely identify each individual employee in the Employease Network. In addition the Insert and Update transactions share a common set of fields that are always sent with each individual transaction.

For data integration with external applications such as ADP Pay eXpert a mapping software such as Contivo can be used to normalize and transform the Employease XML format into ADP compliant CSV file format.

For data integration the sforce SOAP API uses its own XML data format. The latest version of the published schema is sforce API 3.0. In the sforce API objects are data entities that represent an organization s information. For example the Account object represents accounts companies and organizations involved with a business such as customers partners and competitors. To describe a particular occurrence of an object such as a specific account that is represented by an Account object sforce uses the term object instance. An object instance is analagous to a row in a database table.

According to a specific embodiment the Salesforce.com objects shown in the following table are supported 

Additionally Salesforce.com provides a sforce Object Query Language SOQL and a sforce Object Search Language SOSL . The sforce Object Query Language SOQL is used to construct simple but powerful query strings for the queryString parameter in the query call. Similar to the SELECT command in SQL SOQL allows you to specify the source object such as Account a list of fields to retrieve and conditions for selecting rows in the source object. The sforce Object Search Language SOSL is used to construct simple but powerful text searches for the search call. SOSL allows one to specify the text expression the scope of fields to search the list of objects and fields to retrieve and the maximum number of objects to return.

ADP Pay eXpert uses CSV file format for employee and pay data integration. Each employee data import file comprises multiple records where a record is one line of data in the file. The items in a record are separated from each other by a comma or tab. The end of a record is indicated by a carriage return and line feed. An employee pay data import file contains at least two types of records e.g. Header and Data. shows the components of an employee data import file.

For all data sets that need to be persisted a system of record SOR is defined. This is typically either where the data ends up or where it is entered into the system. There should never be more than one SOR for any data set as this will lead to confusion and high support costs. The flow of all data entered into the system is managed by the interoperability network. This provides reliable delivery of all transactions between applications and when an application is unavailable beyond a specific window there is a defined escalation procedure that if appropriate will result in human intervention. The key is that even in the event of an error the system is in a known state and there is a defined corrective action.

For Suite 1 i.e. the eCommerce solution the SOR is in Quicken with the interoperability network managing all transactions between MIVA and PayPal to ensure that at any point in time the customer can obtain a unified view of payments and inventory. Payment transactions flow from PayPal to Quicken and similarly refund transactions flow from Quicken to PayPal. Inventory flows from Quicken to MIVA and corresponding sales information flows from MIVA to Quicken.

Suite 2 i.e. the CRM solution introduces another SOR to manage sales leads. When leads turn into completed sales the interoperability network manages transactions that update Quicken. Also as new customers that are not in SalesForce come in through MIVA they are added to SalesForce to ensure that the Lead System has a complete record of all past and present sales and leads. This is necessary as the Sales professional will not typically have access to the accounting system i.e. Quicken. Keeping both systems up to date allows the business to be aligned and operating with current information.

Suite 3 i.e. the HR solution adds another SOR for human resource data and other systems to feed this data into and from. The HR system is Employease this system captures human resource data entered into it. The employee data is transferred on a scheduled basis to ADP for payroll processing and the resulting transaction is routed to QuickBooks to update cash flow. Expense tracking is also available in this suite. The Gelco expense tracking application captures expenses and the workflow around reporting and management. The interoperability network manage the transactions to update the cash flow in QuickBooks and ensures there is a consistent view of the business.

The interoperability network of the present invention also provides web based administrative capabilities that enable an entity having access to the network to monitor manage and customize its own Business Services Network including end to end visibility policy and permission management change management exception handling and notification and administration and reporting. The reporting interface is customizable and extensible to enable integration into in house management tools to provide a single view of the virtual business network.

All messages sent into the interoperability network are uniquely identified and the sender has a receipt sent back to them synchronously to acknowledge receipt of the transaction. Within the receipt is a unique token that is unique for every message. Using this token all parties to the transaction can track and audit the process of any message through the reporting interface.

For entities setting up Business Services Networks to interact with customers the interoperability network acts as a neutral third party in all interactions providing the ability for all parties to quickly resolve delivery issues. Rules can be defined around delivery to allow for escalation procedures to be initiated in the cases when messages are unable to be delivered or where they are not responded to within a mutually agreed time window. The interoperability network provides the critical infrastructure to ensure no matter what happens messages are never lost and they are always in a state that is known to all parties in the transaction.

The secure infrastructure of the interoperability network enables companies to safely deploy mission critical enterprise class business initiatives while leveraging their existing investments. For example the interoperability network is configured to ensure that enterprises can manage trusted relationships between many organizations each with different access authentication and encryption technologies without unnecessary exposure of applications behind corporate firewalls. Differences in corporate security policies are handled through a policy framework which mediates the differences. Each enterprises is in complete control of configuring and enforcing access rights and multiple methods of authentication are supported.

By acting as a buffer between the world and each enterprise or user the interoperability network provides added security against direct attacks. By polling for messages from the interoperability network each enterprise or user does not need to provide in bound HTTP or HTTPS access through firewalls allowing each to avoid unnecessary firewall changes.

According to a particular implementation the underlying security architecture of the interoperability network is based on WS Policy an extremely flexible mechanism for companies to mutually govern access to the services deployed on the network. This mechanism ensures that partners exchange data over encrypted connections to network their identities are verified and access to each service is limited and controlled. These capabilities are further supported through industry standards such as SSL IPSEC VPN s and X.509 digital certificates. The interoperability network is also fully extensible to cover other widely adopted standards.

The interoperability network is built as a highly scalable distributed architecture. The distributed nature of the architecture allows for scaling in multiple dimensions. This ability to scale individual parts of the network independently allows new hardware to be added to meet any performance needs. The network was built from the ground up as a loosely coupled Service Oriented Architecture SOA . The complete capabilities of a standards based integration technology platform are available for the first time in a simple to use self service web based interface enabling business processes to be rapidly built and deployed in the network. A comprehensive set of services can be woven together to provide the connectivity security process execution policy mediation and visibility required to deploy transactional business processes.

Referring now to a computer system suitable for implementing various aspects of the present invention e.g. server of includes one or more central processing units CPUs one or more blocks of memory input and output interfaces and a bus e.g. a PCI bus . Alternatively computer systems employing point to point infrastructures instead of buses may also be employed. When acting under the control of appropriate software or firmware CPU is responsible for implementing various portions of the techniques of the present invention. It preferably accomplishes all these functions under the control of software including an operating system and any appropriate applications software. CPU may include one or more processors. In a specific embodiment some portion of memory such as non volatile RAM and or ROM also forms part of CPU . However there are many different ways in which memory could be coupled to the system. Memory block may be used for a variety of purposes such as for example caching and or storing data program code etc.

The input and output interfaces typically provide an interface to various I O devices such as mouse keyboard display as well as providing an communication interface with other computer systems over a computer network. Among the communication interfaces that may be provided are Ethernet interfaces frame relay interfaces cable interfaces DSL interfaces token ring interfaces and the like. In addition various very high speed interfaces may be provided such as fast Ethernet interfaces Gigabit Ethernet interfaces ATM interfaces HSSI interfaces POS interfaces FDDI interfaces and the like. Generally these interfaces may include ports appropriate for communication with the appropriate media. In some cases they may also include an independent processor and in some instances volatile RAM.

It will be understood that the system shown in is an exemplary computer system and is by no means the only system architecture on which the various aspects of the present invention can be implemented.

Regardless of system s configuration it may employ one or more memories or memory modules such as for example memory block configured to store data program instructions for the general purpose network operations and or the inventive techniques described herein. The program instructions may control the operation of an operating system and or one or more applications for example. The memory or memories may also be configured to store information in a repository directory.

Because such information and program instructions may be employed to implement the systems methods described herein the present invention also relates to machine readable media that include program instructions state information etc. for performing various operations described herein. Examples of machine readable media include but are not limited to magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROM disks and DVDs magneto optical media such as floptical disks and hardware devices that are specially configured to store and perform program instructions such as read only memory devices ROM and random access memory RAM . The invention may also be embodied in a carrier wave traveling over an appropriate medium such as airwaves optical lines electric lines etc. Examples of program instructions include both machine code such as produced by a compiler and files containing higher level code that may be executed by the computer using an interpreter.

While the invention has been particularly shown and described with reference to specific embodiments thereof it will be understood by those skilled in the art that changes in the form and details of the disclosed embodiments may be made without departing from the spirit or scope of the invention. It should also be noted that while some of the examples herein are described with reference to SOAP messages the techniques described herein apply to a wide variety of message formats and protocols including for example FTP EDI generic HTTP XML text files etc. The invention should therefore not be limited to any specific message format or protocol.

In addition embodiments of the invention have been described herein with reference to a toolbar interface which facilitates access to the IAS solution. It will be understood however that such a toolbar and the various interface described herein are merely exemplary and that the basic functionalities of the present invention may be provided in a wide variety of ways without departing from the scope of the invention. For example the functionalities of the present invention may be provided through the use of a role based portal framework running in a user s browser which manages navigation and authentication to the integrated systems of the invention. Such a portal framework is described in U.S. patent application Ser. No. 10 820 650 for TECHNIQUES FOR PROVIDING INTEROPERABILITY AS A SERVICE filed Apr. 7 2004 now issued as U.S. Pat. No. 7 590 685 the entire disclosure of which is incorporated herein by reference for all purposes.

In addition although various advantages aspects and objects of the present invention have been discussed herein with reference to various embodiments it will be understood that the scope of the invention should not be limited by reference to such advantages aspects and objects. Rather the scope of the invention should be determined with reference to the appended claims.

