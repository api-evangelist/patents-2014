---

title: Process control systems and methods
abstract: Process control system and methods are disclosed. An example method includes operating a first cluster including first virtual machines and first servers and operating a second cluster including second virtual machines and second servers. The example method also includes storing first data from the first virtual machines at a first data store of the first cluster and storing a replica of the first data at a second data store of the second cluster. The example method also includes storing second data from the second virtual machines at the second data store and storing a replica of the second data at the first data store and identifying a failure of the first cluster. The method also includes, in response to the failure, restarting the first virtual machines using the second servers and the replica of the first data at the second data store.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483352&OS=09483352&RS=09483352
owner: FISHER-ROSEMONT SYSTEMS, INC.
number: 09483352
owner_city: Round Rock
owner_country: US
publication_date: 20140923
---
This patent claims priority to U.S. Provisional Patent Application No. 61 883 748 filed Sep. 27 2013 which is hereby incorporated herein by reference in its entirety.

A typical control system includes a network of many workstations servers controllers and I O subsystems. The setup and maintenance of multiple systems needed for development testing training and on line production can be expensive and time consuming.

An example method includes operating a first cluster including first virtual machines and first servers and operating a second cluster including second virtual machines and second servers. The method also includes storing first data from the first virtual machines at a first data store of the first cluster and storing a replica of the first data at a second data store of the second cluster. The method also includes storing second data from the second virtual machines at the second data store and storing a replica of the second data at the first data store. The method includes identifying a failure of the first cluster and in response to the failure restarting the first virtual machines using the second servers and the replica of the first data at the second data store.

Another example method includes selecting a first mode to operate a first cluster including first virtual machines and first servers and operating the first cluster in the first mode including writing to a cache of a first data store to store the first data from the first virtual machines. The method includes selecting a second mode to operate the first cluster and operating the first cluster in the second mode including circumventing the cache and writing directly to a disk of the first data store to store first data from the first virtual machines.

The figures are not to scale. Wherever possible the same reference numbers will be used throughout the drawing s and accompanying written description to refer to the same or like parts.

Virtual environments may be implemented in companies to reduce datacenter space improve security reduce cost and or reduce energy consumption. In some example virtual environments virtual machines VMs operate on a single server where the loss of the single servers causes the loss and or inoperativeness of the associated VMs.

In some example process control systems to substantially prevent against the loss of the VMs when a corresponding server becomes inoperative the example virtualization architecture disclosed herein enables the replication of VMs to other hosts to enable the VMs to be relatively quickly restarted after a sudden loss of the corresponding server or other components.

In other example process control systems example support hosts are clustered in an example cluster environment where the VMs are run and or the data from each of the VMs is centrally stored and or generally accessible. In some such examples the cluster environment is configured and or setup to automatically restart VMs in the cluster using saved data from the data store if one of the hosts is lost on which the VMs was running

In other example process control systems example support hosts are clustered in an example cluster environment and an additional server is used for replication e.g. used to store data associated with the VMs and or the hosts . In such examples if the cluster is lost the VMs may be relatively quickly restarted on the additional and or replication server using the data saved thereon.

In other example process control systems two separate clusters of support hosts may be used to enable replication between the clusters. In some such examples data from both the first cluster e.g. the VMs of the first cluster and the second cluster e.g. the VMs of the second cluster are replicated and stored in separate data bases associated with the respective clusters. In some examples by running some of the first VMs on the first cluster and the second VMs on the second cluster if the first cluster or second cluster fails the VMs associated with the failed cluster can be relatively easily restarted and or run on the operable cluster. Thus control of the plant is maintained using the remaining operable cluster. Additionally or alternatively in examples in which the first VMs are redundant of the second VMs by running the first VMs on the first cluster and the second VMs on the second cluster if the first cluster or the second cluster fails the VMs associated with the operable cluster can still be used to control the process e.g. the secondary VMs can be used to run the plant . Having multiple clusters with replication enables high availability.

In operation virtual machines VMs and operate on the servers and data associated with actions performed by the VMs and or is stored at the data store . Thus if one of the servers fails the VMs and or that were running on the failed server and or will be restarted on the still operating servers and or using data associated with that VM and or stored at the data store . In examples in which the cluster includes a first node of servers operating VMs and a second node of servers operating VMs if the first node fails the VMs associated with the first node will be restarted using the second node.

The examples disclosed herein can support up to approximately 64 nodes per cluster and up to approximately 4 000 VMs. The disclosed examples enable the clusters to be automatically updated e.g. Cluster Aware Updating and for substantially simultaneous live migration of one or more of the clusters and or the associated nodes. The examples disclosed herein can support Hyper V Replica Broker to enable and or support Hyper V Replica in a clustered environment virtual machine application monitoring and or cluster validation tests. The examples disclosed herein enable cluster upgrade and or migration cluster shared volumes 2.0 and or VM failover prioritization. In some such examples VM health and location can are integrated into DeltaV diagnostics to enable users not to have to move to other environments to diagnose their system. In some examples failover prioritization enables critical VMs first e.g. Batch Executive .

In some examples the replication engine includes a module that tracks and or writes within a virtual hard disk file used by all of the VMs and or generates a log file. By enabling the replication to occur at a virtual hard disk VHD level the ease of replication of any one of the VMs is increased. In some examples the replication of the VMs occurs periodically and or asynchronously through a connection e.g. a HTTP connection an HTTPS connection etc. .

In operation the VMs operate on servers and data associated with and or actions performed by the VMs is stored at data stores and a replica of the same is stored at the replication server and or another location. Thus if the cluster and or all the servers fail the VMs that were running on the failed cluster and or the failed servers will be restarted on and or using the replication server from data associated with the VMs stored at the replication server and or another location. Thus the example process control system enables the VMs to continue to run and or operate after a failure thereby being compliant with substantially all disaster recovery programs.

In some examples the data from the VMs is replicated conveyed and or transmitted to the replication server using a network module e.g. data compression and or optimization which optimizes the workload by working in slow network connections e.g. WANs . In some examples to implement the example process control system of two or more servers are used that are connected by a network connection where at least one of the servers is the replication server . In some such examples the two or more servers run an application such as Hyper V and no other third party hardware software applications and or shared storage are needed. In some examples the example process control system includes recovery points to enable any one or more of the VMs and to be restarted at substantially any point in time. In some examples by using such recovery points database corruption and or virus replication is reduced substantially eliminated and or eliminated.

In some examples the example process control system and or Hyper V Replica enables and or provides small and or medium sized companies with a full disaster recovery infrastructure solution for their virtualized environments using few components at a reasonable cost. In some examples DeltaV Primary and or Secondary networks may be added to the replication server to enable the VMs to be more quickly started at and or using the replication server .

In operation virtual machines VMs operate on the servers and VMs operate on the servers . In some examples VMs are replicas of the VMs . In some examples the VMs are partially or wholly different from the VMs .

In examples in which the VMs are replicas of the VMs data associated with and or the actions performed by the VMs is stored at data stores of the first cluster and a replica of the data is stored at data stores of the second cluster . Thus if the first cluster and or all the servers fail the VMs that were running on the failed cluster and or the failed servers will be restarted on and or using the replication servers from data associated with the VMs stored at the data stores . Thus the example process control system enables the VMs to continue to run and or operate after a failure.

In examples in which the VMs are different from the VMs data associated with and or the actions performed by the VMs is stored at the data stores of the first cluster and a replica of the data is stored at the data stores of the second cluster and data associated with and or the actions performed by the VMs is stored at the data stores of the second cluster and a replica of the data is stored at the data stores of the first cluster . Thus if the first cluster or the second cluster fails the VMs that were running on the failed first cluster or the failed second cluster will be restarted on and or using the servers or the replication servers from data associated with the respective VMs stored at the data stores and or . Once the failed first cluster or the failed cluster has been recovered the VMs can be replicated and or migrated to their original cluster or to resume normal operation.

A flowchart representative of an example method for implementing the process control systems of is shown in . In this example the method may be implemented using machine readable instructions that comprise a program for execution by a processor such as the processor shown in the example processor platform discussed below in connection with . The program may be embodied in software stored on a tangible computer readable storage medium such as a CD ROM a floppy disk a hard drive a digital versatile disk DVD a Blu ray disk or a memory associated with the processor but the entire program and or parts thereof could alternatively be executed by a device other than the processor and or embodied in firmware or dedicated hardware. Further although the example program is described with reference to the flowchart illustrated in many other methods of implementing the example process control systems of may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed eliminated or combined.

As mentioned above the example method of may be implemented using coded instructions e.g. computer and or machine readable instructions stored on a tangible computer readable storage medium such as a hard disk drive a flash memory a read only memory ROM a compact disk CD a digital versatile disk DVD a cache a random access memory RAM and or any other storage device or storage disk in which information is stored for any duration e.g. for extended time periods permanently for brief instances for temporarily buffering and or for caching of the information . As used herein the term tangible computer readable storage medium is expressly defined to include any type of computer readable storage device and or storage disk and to exclude propagating signals and transmission media. As used herein tangible computer readable storage medium and tangible machine readable storage medium are used interchangeably. Additionally or alternatively the example processes of may be implemented using coded instructions e.g. computer and or machine readable instructions stored on a non transitory computer and or machine readable medium such as a hard disk drive a flash memory a read only memory a compact disk a digital versatile disk a cache a random access memory and or any other storage device or storage disk in which information is stored for any duration e.g. for extended time periods permanently for brief instances for temporarily buffering and or for caching of the information . As used herein the term non transitory computer readable medium is expressly defined to include any type of computer readable storage device and or storage disk and to exclude propagating signals and transmission media. As used herein when the phrase at least is used as the transition term in a preamble of a claim it is open ended in the same manner as the term comprising is open ended.

The example method of begins with a first mode being selected to operate the first cluster block . The first cluster includes the virtual machines and the servers . The first mode is selected to operate the second cluster block . The second cluster includes the second virtual machines and the servers . In some examples the first mode includes writing to a cache of the data stores and or and may be associated with a configuration operation mode. The first virtual machines are operated in the first mode block . The second virtual machines are also operated in the first mode block .

First data from the first virtual machines is stored at the data stores and or of the first cluster and a replica of the first data from the first virtual machines is stored at the data stores and or of the second cluster block . In some examples the first data and the replica of the first data is stored in parallel and or in a consistent manner using file level consistency. Second data from the second virtual machines is stored at the data stores and or of the second cluster and a replica of the second data from the second virtual machines is stored at the data stores and or of the first cluster block . In some examples the second data and the replica of the second data is stored in parallel and or in a consistent manner using file level consistency.

After for example the process control system has been configured a second mode may be selected to operate the first cluster block . The second mode is selected to operate the second cluster block . In some examples the second mode includes circumventing the cache of the data stores and or and writing directly to a disk s of the data stores and or to reduce an amount of time data is kept in volatile memory. The first virtual machines are operated in the second mode block . The second virtual machines are operated in the second mode block .

At block a processor determines if a failure of the first cluster has occurred. If the first cluster has failed the first virtual machines are restarted using the servers and or of the second cluster and the replica of the first data from the data stores and or block . In some examples an alert may be created and or conveyed if the first virtual machines are restarted using the servers and or and or if the first cluster has failed block . In some examples the alert indicates that both the first and second virtual machines are being run using the servers and or of the second cluster . Once the failure of the first cluster has been resolved a live migration may be performed from operating the first virtual machines using the servers of the second cluster to operating the first virtual machines using the servers of the first cluster block .

At block a processor determines if a failure of the second cluster has occurred. If the second cluster has failed the second virtual machines are restarted using the servers and or of the first cluster and the replica of the first data from the data stores and or block . In some examples an alert may be created and or conveyed if the second virtual machines are restarted using the servers and or and or if the second cluster has failed block . In some examples the alert indicates that both the first and second virtual machines are being run using the servers of the first cluster . Once the failure of the second cluster has been resolved a live migration may be performed from operating the second virtual machines using the servers of the first cluster to operating the second virtual machines using the servers of the second cluster block . At block the process determines whether or not to end. If the process is to continue at block a determination is made whether to change the operation mode between the second operation mode and the first operation mode for example.

The processor platform of the illustrated example of includes a processor . The processor of the illustrated example is hardware. For example the processor can be implemented by one or more integrated circuits logic circuits microprocessors or controllers from any desired family or manufacturer.

The processor of the illustrated example includes a local memory e.g. a cache . The processor of the illustrated example is in communication with a main memory including a volatile memory and a non volatile memory via a bus . The volatile memory may be implemented by Synchronous Dynamic Random Access Memory SDRAM Dynamic Random Access Memory DRAM RAMBUS Dynamic Random Access Memory RDRAM and or any other type of random access memory device. The non volatile memory may be implemented by flash memory and or any other desired type of memory device. Access to the main memory is controlled by a memory controller.

The processor platform of the illustrated example also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an Ethernet interface a universal serial bus USB and or a PCI express interface.

In the illustrated example one or more input devices are connected to the interface circuit . The input device s permit s a user to enter data and commands into the processor . The input device s can be implemented by for example an audio sensor a microphone a camera still or video a keyboard a button a mouse a touchscreen a track pad a trackball isopoint and or a voice recognition system.

One or more output devices are also connected to the interface circuit of the illustrated example. The output devices can be implemented for example by display devices e.g. a light emitting diode LED an organic light emitting diode OLED a liquid crystal display a cathode ray tube display CRT a touchscreen a tactile output device a light emitting diode LED a printer and or speakers . The interface circuit of the illustrated example thus typically includes a graphics driver card a graphics driver chip or a graphics driver processor.

The interface circuit of the illustrated example also includes a communication device such as a transmitter a receiver a transceiver a modem and or network interface card to facilitate exchange of data with external machines e.g. computing devices of any kind via a network e.g. an Ethernet connection a digital subscriber line DSL a telephone line coaxial cable a cellular telephone system etc. .

The processor platform of the illustrated example also includes one or more mass storage devices for storing software and or data. Examples of such mass storage devices include floppy disk drives hard drive disks compact disk drives Blu ray disk drives RAID systems and digital versatile disk DVD drives.

From the foregoing it will be appreciated that the examples disclosed herein relate to computer architecture s networking and or virtualization that enable the development of effective easy to manage virtualized computing environments that reduce costs and improves system up time and or start up time.

In some process control systems at least some critical hardware components e.g. controllers are designed for redundancy but other components e.g. VMs servers etc. are not redundant or otherwise capable of dealing with and or quickly recovering from disruptive events such as power outages computer hardware failures etc. If failures occur in such systems the redundant critical components e.g. the controls may enable the plant to continue to operate. However restoring the non redundant components e.g. VMs servers etc. and or the plant to its normal operating system may take a significant amount of time during which plant data e.g. important plant data may be invisible not viewable and or lost.

In contrast to some known systems the examples process control systems disclosed herein provide and or enable high availability and or replication that enable reduction in downtime in virtual environments if a failure occurs. Further the disclosed examples substantially prevent data loss and or data corruption by enabling the process control system to have written and or available log files associated with all components of the systems and or by enabling the system to be aware of the highly available virtualization architecture of the overall system. Put simply the examples disclosed herein provide an out of the box high availability control system.

To enable the log files of the components to be accessible redundant hard drive storage e.g. redundant array of independent disks RAID array are accessed by and or written by multiple host computers at the same time in parallel. Thus using the disclosed examples virtual hard drives of virtual machines are viewable and or can be seen by more than one host computer. In such examples if a failure occurs e.g. a hardware failure a software failure in one of the host computers another host computer can take over and or run the virtual hard drive and restart an associated virtual machine based on the last saved information of the hard drive storage.

In some example process control systems disclosed herein to substantially protect against data corruption data is written in a consistent manner using file level consistency using for example an NTFS file system an NTFS Log journal a Volume Shadow Copy VSS and or Transactional NTFS. Additionally and or alternatively the example process control systems disclosed herein enable the system to be instructed to write through cache and save directly to disk a hard drive and or a virtual hard drive. In such examples to enable logical file consistency in an object oriented database the example process control system and or a component thereof is run in a resilient mode which enables direct write through cache and substantially minimizes an amount of time volatile data is kept in memory for example. In some examples writing through the cache causes decreased performance because disk writes are slower than memory writes. For example if the cache is used the application and or the user will commit data to cache and the system will write the data through later. However because a majority of the configuration work occurs before the system goes on line to run a plant and or process control system the resilient mode may be turned off during the initial engineering and or configuration as data loss and or corruption has no negative implications on running the plant at this time e.g. no process is being controlled .

In some examples to enable the entire and or substantially the entire system to be consistent the control system functions and the virtualization functions are integrated. For example to enable such integration the resilient and or normal operating mode settings are propagated up the virtualization management software to enable visibility at the same level as the virtualization and high availability settings.

In other examples control system functions and virtualization functions are integrated using a process control system e.g. DVS that manages VM node redundancy and high availability in unison. In some such examples an alarm e.g. DVS alarm occurs if a redundant pair of application stations e.g. DeltaV application stations is assigned to the same host computer because having application stations assigned to the same host may cause and or create a longer than usual disruption if the host fails. In some examples redundancies and standbys are distributed across multiple hosts to enable a node switchover to occur if a failure occurs in one of the hosts.

Virtualized computing platforms as disclosed herein that enable non traditional measurements to be integrated using wireless infrastructure for advanced analytics to combine predictive algorithms and automation to provide on line predictive capabilities and or for new designs and or platforms to be used to connect people on the move and in the control room. Such examples may be advantageously used for virtualization and big data in process control.

Some disclosed examples enable high availability failover cluster management virtual machine replication disaster recovery performance data and or platform configurations. Some disclosed examples enable virtualization scale up live migration e.g. faster unrestricted simultaneous virtual machine live migrations and or storage migrations shared nothing migrations high availability failover clustering e.g. iSCSI fiber channel SMB failover prioritization NIC teaming and or management and or replication support.

Some disclosed examples enable a host to include up to approximately 160 logical processors up to approximately 2 terabytes TB of memory and or up to approximately up to 1024 virtual central processing units CPUs per host. Some disclosed examples enable a virtual machine to include and or be associated with up to approximately 32 virtual CPUs per host up to approximately 1 TM of memory per VM and or up to approximately 1024 active VMs per host. Some disclosed examples enable a cluster to include and or be associated with approximately 64 nodes and or approximately 4000 VMs.

The examples disclosed herein can be used to obtain and or analyze streams of data e.g. big data to provide new insights better decisions and or provide an improved system experience. In some examples the examples disclosed herein can support receipt of periodic uncompressed data collected on all process measurements and or outputs to enable different types of data to be analyzed one received. Some examples disclosed herein can support information sources such as traditional types of alarms batches and or continuous new sources such an on stream analyzers. Some examples disclosed herein can support cross plant boundaries e.g. entire oil fields data agility and or provide actionable information to users through browsers and or mobile devices. For example data exploration may indicate and or identify that information that was previously not being recorded should now be recorded using for example wireless sensors e.g. vibration sensors .

The example process control systems enable all or substantially all data to be with high resolution to enable analysis thereon. The obtained data may be cleaned and or filtered and or explored using for example high frequency real time data which provides and or enables increased insight. The example process control systems enable and or join analytics obtained across systems platforms and or plants. The example process control systems enable and or support additional measurements being obtained via wireless and or external measurements via for example REST API that can be called from any language. The process control systems provide actionable results for humans and or closed loop control.

In some examples templates are designed for high availability and replication to enable users to enable these features as part of the template and then make use of the capabilities as we create instances from the template. In some examples networking infrastructure used in virtualized environments are predefined to easily distinguish a control network e.g. a primary control network a secondary control network the host management network and or other networks e.g. the plant network . In some examples a domain controller is integrated into the infrastructure so enable users to not have to setup and manage their computing resources. In some examples diagnostics are integrated into the control system to enable the user to not have to use tools e.g. SolarWinds to collect information associated with their networks disk subsystem CPU resources memory resources IO throughput IO delays clusters and or replication system. In some examples the diagnostics are reported in context of the control system as opposed to be being more abstract IT items. In some examples an example management center is integrated with DeltaV configuration and diagnostics. In some examples diagnostics can be run on control system traffic and or usage e.g. provide an alert if usage patterns change etc. . In some examples the system is secured and or managed by segmenting network traffic and securing infrastructure traffic. In some examples a hardware platform under virtualization may be used to implement the disclosed examples. In some examples Virtual Studio DeltaV infrastructure hardware e.g. VRTX platform from Dell enables a virtual appliance for process control. In some examples the example process control systems and integrated and or may include and or use templates diagnostics and or configuration tools and or aspects.

As set forth herein an example method includes operating a first cluster including first virtual machines and first servers and operating a second cluster including second virtual machines and second servers. The example method includes storing first data from the first virtual machines at a first data store of the first cluster and storing a replica of the first data at a second data store of the second cluster and storing second data from the second virtual machines at the second data store and storing a replica of the second data at the first data store. The method also includes identifying a failure of the first cluster and in response to the failure restarting the first virtual machines using the second servers and the replica of the first data at the second data store.

In some examples storing the first data includes circumventing a cache of the first data store and writing directly to a disk of the first data store during a normal operating mode to reduce an amount of time data is kept in volatile memory. In some examples storing the first data comprises writing to a cache of the first data store during a configuration operating mode. In some examples restarting the virtual machines using the second servers reduces downtime. In some examples storing the first data from the first virtual machines at the first data store and storing the replica of the first data at the second data store comprises storing the first data at the first and second data stores in parallel. In some examples storing the first data from the first virtual machines at the first data store and storing the replica of the first data at the second data store includes storing the first data at the first and second data stores in a consistent manner using file level consistency. In some examples the method includes creating an alert if the first virtual machines are restarted using the second servers.

In some examples the method also includes performing a substantially live migration from operating the first virtual machines using the second servers to operating the first virtual machines using the first servers after the failure of the first cluster is resolved. In some examples the method includes restarting the first virtual machines using the second servers and the replica of the first data at the second data store comprises automatically restarting the first virtual machines using the second servers and the replica of the first data at the second data store. In some examples the first cluster is redundant of the second cluster. In some examples the method includes automatically updating the second cluster.

Another example method includes selecting a first mode to operate a first cluster including first virtual machines and first servers and operating the first cluster in the first mode includes writing to a cache of a first data store to store the first data from the first virtual machines and selecting a second mode to operate the first cluster. The method also includes operating the first cluster in the second mode comprising circumventing the cache and writing directly to a disk of the first data store to store first data from the first virtual machines.

In some examples the first mode includes a configuration mode and the second mode includes a resilient mode.

In some examples the method also includes selecting a third mode to operate a second cluster including second virtual machines and second servers operating the second cluster in the third mode comprising writing to a cache of a second data store to store the second data from the second virtual machines. The method also includes selecting a fourth mode to operate the second cluster and operating the second cluster in the fourth mode comprising circumventing the cache and writing directly to a disk of the second data store to store second data from the second virtual machines.

In some examples the first cluster in the second mode also includes storing a replica of the first data at the second data store of the second cluster and wherein operating the second cluster comprises storing a replica of the second data at the first data store. In some examples the method also includes identifying a failure of the first cluster and restarting the first virtual machines using the second servers and the replica of the first data at the second data store. In some examples the method includes creating an alert if the first virtual machines are restarted using the second servers. In some examples the method also includes performing a substantially live migration from operating the first virtual machines using the second servers to operating the first virtual machines using the first servers after the failure of the first cluster is resolved.

In some examples storing the first data from the first virtual machines at the first data store and storing the replica of the first data at the second data store includes storing the first data at the first and second data stores in parallel. In some examples storing the first data from the first virtual machines at the first data store and storing the replica of the first data at the second data store includes storing the first data at the first and second data stores in a consistent manner using file level consistency.

Although certain example methods apparatus and articles of manufacture have been disclosed herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the claims of this patent.

