---

title: Web service interface and querying
abstract: Methods, systems, and computer-readable media are disclosed to generate an interface for a web service and to query the web service. A method includes generating a user interface associated with a web service. The user interface includes one or more input parameter options associated with the web service. The user interface is generated based on a service specification and one or more series specifications associated with the service specification. User input is received via the user interface, where the user input includes a selection of at least one of the one or more input parameter options. A query of the web service is generated based on the user input, and the query reflects at least one selected input parameter option.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09471690&OS=09471690&RS=09471690
owner: Microsoft Technology Licensing, LLC
number: 09471690
owner_city: Redmond
owner_country: US
publication_date: 20140717
---
The present application claims priority from and is a continuation application of U.S. patent application Ser. No. 12 616 796 filed on Nov. 12 2009 and entitled WEB SERVICE INTERFACE AND QUERYING the contents of which are expressly incorporated herein by reference in their entirety.

Web services have become an increasingly popular way to achieve inter computer communication over a network. Web services are typically accessed via queries that are defined based on application programming interfaces APIs . However learning how to use such APIs may be a time consuming process and may require users to review a significant amount of web service documentation. Further web servers that host web services often offer dozens of APIs or more. API based web service access typically requires computer programming knowledge. Due to the lack of visual feedback in text based computer programs API based web service access may be unintuitive. Thus constructing a web service query can be a long and demanding process for users.

The present disclosure describes automated interface generation for a web service where the interface enables queries of the web service based on user input. Thus web service operation may be wholly driven via user input at the interface. The web service interface may be generated based on service and series specifications e.g. XML files . In response to user input the web service interface may be automatically refreshed to reflect the received input thereby providing an active interface to the web service. When a query of the web service is invoked the interface may display a preview of the results generated by the query. Interface generation and query building enables users to leverage web services without learning complex application programming interfaces APIs . In addition uniform resource identifiers URIs and program classes may be automatically generated and retrievable by users to re execute previously invoked queries.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Systems methods and computer readable media to generate an interface for a web service and to query the web service are disclosed. In a particular embodiment a system includes a memory and a processor coupled to the memory. The processor is configured to retrieve instructions from the memory that cause execution of an interface module a query module and a results module. The interface module is configured to generate a user interface associated with a web service where the user interface includes one or more input parameter options associated with the web service. The interface module is also configured to receive user input via the user interface where the user input includes a selection of at least one of the one or more input parameter options. The interface module is further configured to automatically refresh the one or more input parameter options at the user interface based on the received user input. The query module is configured to generate a query of the web service based on the received user input. The query reflects the at least one selected input parameter option. The query module is also configured to invoke the generated query with respect to the web service to generate results and the results module is configured to automatically display the results at the user interface.

In another particular embodiment a method includes generating a user interface associated with a web service. The user interface includes one or more input parameter options associated with the web service. The user interface is generated at a computer system based on an extensible markup language XML service specification and one or more XML series specifications associated with the XML service specification. Alternately the specifications may be represented in any computer recognizable language e.g. text file rich text format RTF or hyper text markup language HTML . The method also includes receiving user input via the user interface where the user input includes a selection of the one or more input parameter options. The method further includes generating a query of the web service based on the received user input where the query reflects the selection of the one or more input parameter options. The method includes invoking the generated query with respect to the web service and automatically adding results of the invoked query to the user interface.

In another particular embodiment a computer readable medium is disclosed. The computer readable medium includes instructions that when executed by a computer cause the computer to receive a user interface associated with a web service from a web server where the user interface includes one or more input parameter options associated with the web service. The user interface is generated based on an extensible markup language XML service specification and one or more XML series specifications associated with the XML service specification. The computer readable medium also includes instructions that when executed by the computer cause the computer to display the user interface and to receive user input at the user interface. The user input includes a selection of at least one of the one or more input parameter options. The computer readable medium further includes instructions that when executed by the computer cause the computer to transmit the user input to a web server and to receive a modified user interface from the web server where the modified user interface reflects the user input. The computer readable medium includes instructions that when executed by the computer cause the computer to display the modified user interface to generate a query of the web service based on the received user input and to transmit the generated query to the web server. The computer readable medium also includes instructions that when executed by the computer cause the computer to receive results based on an invocation of the generated query from the web server and to display the results at the modified user interface.

The system includes an interface module configured to generate the user interface for the web service where the user interface includes one or more input parameter options . In a particular embodiment the user interface is generated based on service and series specifications associated with the web service . For example the service and series specifications may be extensible markup language XML files that include information useable to build a query of the web service . Information useable to build a query of the web service may include a paging permission a service title a service description list parameters series uniform resource identifier URI templates series identifiers series source paths and parameter types bounds options e.g. string integer floating point and Boolean . The series source paths included in a service specification may be useable to generate URIs associated with a particular series specification. For example a series source path may be appended to a series URI template to generate a URI for a particular series specification. An illustrative XML service specification is further described with respect to . An illustrative XML series specification is further described with respect to . Illustrative user interfaces are further described with respect to .

The interface module is also configured to receive user input e.g. from the user via the user interface . The user input may include a selection of one or more of the input parameter options . Upon receiving the user input the interface module may automatically refresh the user interface to reflect the user input . In a particular embodiment the user interface is refreshed in accordance with one or more auto refresh URIs included in the service and series specifications . For example automatically refreshing the user interface based on the user input may include refreshing the display of graphical user interface GUI elements associated with the input parameter options e.g. a drop down menu associated with a list parameter or updating one or more bounds e.g. minimum and maximum values of numeric values or a maximum length of string values of the input parameter options . Auto refresh operations at an interface associated with a web service are further described with respect to .

The system includes a query module that is configured to generate a query of the web service based on the received user input . The query reflects the selection of the one or more of the input parameter options . The query module is also configured to invoke the generated query with respect to the web service to generate results of the query invocation. For example the web service may provide data querying abilities with respect to the database and the query module may invoke the query e.g. a query that filters certain tables of the database to generate the results e.g. the resulting filtered data from the selected tables of the database . In a particular embodiment one or more of the web service and the database are remote to the system and are accessible via one or more data communications networks e.g. the Internet . It should be noted that although the web service and the database are illustrated as being remote from each other the web service and the database may instead be located at a single computing device such as a web server or database server or at a single location.

In a particular embodiment the query module is further configured to automatically generate one or more program classes e.g. C classes C classes or Java classes that are useable to invoke the query . For example the selected one or more input parameter options may be encapsulated within the program classes or may be provided as input parameters to an invocation method of the program classes. The user interface may be operable e.g. via a hyperlink by the user to retrieve the one or more program classes. Using program classes to invoke the query may include transmitting authorization information such as an account key and a session identifier e.g. a globally unique identifier GUM to the web service . Thus program classes may enable execution of the query when the system is in an offline or powered down state. Hyperlinks for program classes are further illustrated with reference to .

In a particular embodiment the query module is further configured to generate a representational state transfer REST URI that is useable to invoke the query without execution of the query module . That is the REST URI may be used to invoke the query at anytime including when the system is not in operation. For example the selected one or more input parameter options may be encapsulated e.g. in encrypted or clear text format as part of the REST URI. When the REST URI is invoked e.g. at a browser the selected one or more input parameter options are transmitted to the web service as part of the REST URI. Thus REST URIs may enable execution of the query when the system is in an offline or powered down state. REST URIs are further illustrated with reference to .

The system includes a results module that is configured to receive results of the invocation of the query and to automatically display the received results at the user interface . In a particular embodiment the query module is configured to selectively invoke the query in multiple data interchange formats e.g. RAW XML JavaScript Object Notation JSON or Atom Syndication Format ATOM 1.0 and the results module is configured to selectively format the results in any of the multiple data interchange formats e.g. RAW XML JSON and ATOM 1.0 in addition to a standard tabular format.

In a particular embodiment a spreadsheet application at the system may accept the results as input data thereby providing the user with an ability to analyze or perform advanced analytics with respect to the results .

In operation the interface module may generate the user interface for the web service and the user may provide user input by interacting with the user interface . Based on the user input e.g. selections of one or more of the input parameter options the user interface may automatically refresh the user interface update hyperlinks for program classes generated by the query module and update the display of REST URIs generated by the query module .

The query module may generate the query of the web service based on the user input and may invoke the query . The query may reflect user selection of one or more of the input parameter options . The web service may retrieve results of the query from the database . The results module may receive the results and may display the results at the user interface .

It will be appreciated that the system of may provide an active interface for web service query generation by automatically refreshing the user interface to stay current with and reflect user input received from the user . It will also be appreciated that the system of may simplify web service query generation. For example instead of spending time learning how to use complex application programming interfaces APIs of the web service users that know what data they are interested in e.g. what input parameter options should be reflected by the query may instead operate the user interface to retrieve a dynamically created program class or a REST URI that is useable to invoke the query . Such dynamically created program classes and REST URIs may be used even when the system is not in operation.

It will further be appreciated that the system of may provide a preview mechanism that may assist query modification. For example the user may make incremental changes to the query and the system may enable the user to preview effects of the incremental changes in the results generated by the query . It will also be appreciated that web services e.g. existing web services or newly created web services may be made compatible with the interface generation and querying capability of the system of by providing series and service specifications e.g. the specifications for the web service e.g. the web service . Such series and service specifications may be provided by web service developers. Alternately series and service specifications may be automatically generated e.g. based on source code or definition files of web services .

An interface module may generate a user interface for the web service and may transmit the user interface for display at the display device . For example the user interface may be generated based on XML service and series specifications for the web service . The interface module may also receive user input from a user that is operating the user interface . The user input may include a selection of one or more input parameter options associated with the web service and that are displayed at the user interface . The interface module may automatically generate a modified user interface based on the user input and may transmit the modified user interface for display at the display device . Thus from the perspective of the user the user interface may be automatically refreshed to the modified user interface .

The web server also includes a query module . In a particular embodiment the query module generates a query of the web service based on the user input . In another particular embodiment the user interface and the modified user interface include query generation logic that is configured to generate a query based on the user input and to transmit the query to the web server . The query module may invoke the query with respect to the web service to generate results and the results may be transmitted for display at the display device . In a particular embodiment the results are retrieved from the database by the web service based on the contents of the query .

In operation the interface module may generate the user interface for the web service and may transmit the user interface for display at the display device . The user may provide user input by interacting with the user interface . Based on the user input the interface module may generate a modified user interface and may transmit the modified user interface for display at the display device .

The query may be generated based on the user input and may be invoked by the query module to generate the results . For example the web service may retrieve the results from the database based on the contents of the query . The results may be transmitted for display to the display device .

It will be appreciated that the system of may provide interface generation interface display and query generation at different computing devices. For example a web service developer or vendor associated with the web service and the database may develop a web site at the web server . The web site may include the user interface the modified user interface and the results . In such an example users such as the user may be able to visit the web site to drive operation of the web service instead of learning complex APIs associated with the web service. It will thus be appreciated that the system of may enable software developers and data vendors to simplify web service usage.

In a particular embodiment the XML service specification may be fetched by appending a known string e.g. service to the end of a base URL of a web service. For example the service specification for locally running a United States crime statistics service http localhost services UsCrimeService.svc may be fetched at the URL http localhost services UsCrimeService.svc service. In a particular embodiment a service specification exists for each data set hosted by the service. For example a service specification for a majorcrimes data set may be fetched at the URL Intp localhost services UsCrimeService.svc majorcrimes service. 

The XML service specification may include a plurality of nodes. For example the service specification may include a root node illustratively labeled as in that includes general nodes e.g. a Boolean paging permission a string service title 304 a string service description and a logo URI operable to retrieve a logo image associated with the service .

The root node may also include parameter nodes which include list parameters e.g. a list parameter and URI nodes. Each list parameter may represent a list of possible data values that are displayed as a drop down menu. In a particular embodiment each list parameter includes a display name that is used as a label for the drop down menu a unique series identifier ID and a series source path . A URI node may include one or more series nodes where each series node includes a series URI template that may be used to generate a URI for a particular series specification. For example the series source path may be appended to the series URI template to generate a URI for a particular series specification. For example if the value of services is 4 the URI may be http localhost services UsCrimeService.svc series series 4. 

As described with respect to a web service may host one or more data series. Each of the one or more data series may have an associated series specification. The URI for each particular series specification may be generated based on a series URI template e.g. the series URI template of and a series source path e.g. the series source path of included in a service specification e.g. the XML service specification of .

The series specification may include a plurality of nodes. For example the series specification may include a root node illustratively labeled as in that includes one or more of a parameters node a result set node an actions node and a URIs node. The parameters node may include parameters that are defined for the particular series. For example in the particular embodiment illustrated in the parameters State City and Year are defined for the US statistics service where each of the parameters is a list parameter e.g. the service is capable of retrieving statistics for multiple states cities and years . Each such list parameter may be displayed as a drop down list at a user interface generated in accordance with the series specification . The parameters may also include string parameters integer parameters and floating point parameters.

Each list parameter may point to a list document e.g. statesList citiesList and yearsList in . Each list document may be an XML file with item nodes representing the values of the drop down menu. For example the statesList document may include 

The result set node may include data fields that are returned and populated by a query invocation. For example in the particular embodiment illustrated in invoking a query with respect to the US crime statistics service returns a string Name field and integer fields for Violent Crime Robbery AggravatedAssault Property Crime Burglary Larceny MotorVehicleTheft and Arson. 

The actions node may include actions that are performed based on selection of the parameters . Thus a different action may be associated with each list value of a drop down menu at a web service interface. For example in the particular embodiment illustrated in the actions node contains an auto refresh URI that is useable to automatically refresh a user interface generated in accordance with the XML series specification when a user selects one or more of the parameters . For example if a user selects the state Texas a drop down menu for Cities may be automatically refreshed in accordance with the auto refresh URI e.g. the drop down menu for Cities may be changed to include cities in Texas and not include cities in any other state . Auto refresh operations at an interface associated with a web service are further described with respect to .

The URIs node may include a query node an analyze node and a preview node. The query node may include a query URI that is useable to query the web service for data. The analyze node may include a URI that is useable to perform advanced data analysis e.g. at a spreadsheet application on data generated by querying the web service. The preview node may include a results URI that is useable to generate a preview of the data generated by querying the web service. In a particular embodiment the results URI is used to display results at a user interface as described with reference to the results of and the results of .

It should be noted that although the XML service specification and the XML series specification are illustrated in as XML files service specifications and series specifications may instead be represented in any computer recognizable language e.g. text file rich text format RTF or hyper text markup language HTML .

User interfaces for web services may be refreshed in response to user input. For example user input indicating a user selection of Texas in the State drop down menu at the user interface may trigger an auto refresh operation. The result of the auto refresh operation may be the user interface where bounds of the City and Year drop down menus are automatically updated based on series specification s associated with Texas. For example in the particular embodiment illustrated in the initial City drop down reflects an unbounded set of available cities in the USA and the initial Year drop down menu reflects an unbounded set of all available years e.g. 1990 2000 . In response to the user input the City drop down menu is automatically set to Abilene e.g. the first city in Texas in alphabetical order for which the US crime statistics service is able to retrieve data and the Year drop down menu is automatically set to 1995 e.g. the earliest year for which the US crime statistics service is able to retrieve data for Abilene Tex. . The bounds of City drop down menu are set e.g. available cities in Texas and minimum maximum values of the Year drop down menu are also set e.g. to the earliest and latest years for which data related to the state of Texas is available .

It will be appreciated that automatically refreshing user interfaces for web services as illustrated in may provide an active interface for web service query generation. For example user interfaces may be automatically refreshed to stay current with and reflect user input e.g. the user input received from a user.

The web service information area may include a title description and logo of the web service. In a particular embodiment the title description and logo are retrieved from a service specification for the web service as described with respect to the XML service specification of .

The query generation area may also include various input parameter options and query generation options in accordance with service and series specifications. For example the query generation area may include a display of service parameters . For example the service parameters include Series Country or Area and Year. The particular embodiment illustrated in indicates a user selection of the Agricultural Production Index Agri. Prodn. Indx. series. The query generation area may also include a display of paging information e.g. whether the web service supports paging . The query generation area may further include a display of an Account Key a SessionID e.g. a GUID a REST URI and a program class e.g. a proxy C class download hyperlink . The query generation area may also include an option to invoke a query in multiple available data interchange formats . For example in the particular embodiment illustrated in the query of the web service is invoked as an ATOM 1.0 feed. The query of the web service may alternately be invoked in any other data interchange format such as RAW XML or JSON.

The results preview area may include a display of the results generated by invoking a query of the web service. For example in the particular embodiment illustrated in the results preview area displays data from the Agricultural Production Index. The results preview area may display the results in multiple available data interchange formats . For example although the particular embodiment illustrated in depicts the results displayed in a tabular format the results may alternately be displayed at the results preview area in a RAW XML format a JSON format or an ATOM 1.0 format. When user input changes the value of the service parameters the results preview area may be updated to display a preview of new results that are based on the changed service parameters .

The method includes generating a user interface associated with a web service at . The user interface includes one or more input parameter options associated with the web service and is generated based on an XML service specification and one or more XML series specifications associated with the XML service specification. For example in the interface module may generate the user interface based on the service and series specifications associated with the web service where the user interface includes the input parameter options . As another example as illustrated in the interface may be generated where the interface includes the service parameters .

The method also includes receiving user input via the user interface where the user input includes a selection of at least one of the one or more input parameter options at . For example in the user input may be received via the user interface where the user input includes a selection of the input parameter options . As another example as illustrated in the Agricultural Production Index may be selected.

The method further includes generating a query of the web service based on the received user input where the query reflects the at least one selected input parameter option at . For example in the query module may generate the query . As another example as illustrated in a query of the Agricultural Production Index data series e.g. a structured query language SQL query select from AgriProdnIndx may be generated.

The method includes invoking the generated query with respect to the web service to receive results at . For example in the query module may invoke the query and the results module may receive the results . As another example as illustrated in the query of the Agricultural Production Index may be invoked and the results displayed in the results preview area may be received.

The method also includes automatically adding the received results to the user interface at . For example in the results module may automatically add the results to the user interface . As another example as illustrated in the results may be displayed in the results preview area of the interface .

The method includes receiving a user interface associated with a web service from a web server at and displaying the user interface at . The user interface includes one or more input parameter options associated with the web service and is generated based on an XML service specification and one or more XML series specifications associated with the XML service specification. For example in the user interface associated with the web service may be received from the server and displayed at the display device where the user interface is generated based on the series and service specifications . As another example as illustrated in the interface may be displayed where the interface is generated based on XML service and series specifications.

The method also includes receiving user input at the user interface at and transmitting the user input to the web server at . The user input includes a selection of at least one of the one or more input parameter options. For example in the user input may be received and transmitted to the web server . As another example as illustrated in the Agricultural Production Index may be selected.

The method further includes receiving a modified user interface from the web server and displaying the modified user interface at . The modified user interface reflects the user input. For example in the modified user interface may be received from the web server and displayed at the display device . As another example as illustrated in the selection of the Agricultural Production Index may be indicated by the Series drop down menu at the interface .

The method includes generating a query of the web service based on the received user input where the query reflects the at least one selected input parameter option at . For example in the query may be generated. As another example as illustrated in a query of the Agricultural Production Index data series may be generated.

The method also includes transmitting the generated query to the web server and receiving results based on an invocation of the generated query from the web server at . For example in the query may be transmitted to the web server and the results based on an invocation of the query may be transmitted from the web server . As another example as illustrated in the query of the Agricultural Production Index may be invoked and the results displayed in the results preview area may be received.

The method further includes displaying the results at the modified user interface at . For example in the results may be displayed at the modified user interface at the display device . As another example as illustrated in the results may be displayed in the results preview area of the interface .

The computing device includes at least one processor and a system memory . Depending on the configuration and type of computing device the system memory may be volatile such as random access memory or RAM non volatile such as read only memory or ROM flash memory and similar memory devices that maintain stored data even when power is not provided or some combination of the two. The system memory typically includes an operating system one or more application platforms one or more applications and may include program data associated with the one or more applications.

The computing device may also have additional features or functionality. For example the computing device may also include removable and or non removable additional data storage devices such as magnetic disks optical disks tape and standard sized or miniature flash memory cards. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and or non volatile storage and removable and or non removable media implemented in any technology for storage of information such as computer readable instructions data structures program components or other data. The system memory the removable storage and the non removable storage are all examples of computer storage media. The computer storage media includes but is not limited to RANI ROM electrically erasable programmable read only memory EEPROM flash memory or other memory technology compact disks CD digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that can be used to store information and that can be accessed by the computing device . Any such computer storage media may be part of the computing device . The computing device may also have input device s such as a keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. A user may be able to interact with the computing device via the input device s and the output device s .

The computing device also contains one or more communication connections that allow the computing device to communicate with other computing devices e.g. a web server and a database over a wired or a wireless network. In an illustrative embodiment the web server is the web server of and the database is the database of or the database of .

It will be appreciated that not all of the components or devices illustrated in or otherwise described in the previous paragraphs are necessary to support embodiments as herein described. For example the removable storage may be optional.

The illustrations of the embodiments described herein are intended to provide a general understanding of the structure of the various embodiments. The illustrations are not intended to serve as a complete description of all of the elements and features of apparatus and systems that utilize the structures or methods described herein. Many other embodiments may be apparent to those of skill in the art upon reviewing the disclosure. Other embodiments may be utilized and derived from the disclosure such that structural and logical substitutions and changes may be made without departing from the scope of the disclosure. Accordingly the disclosure and the figures are to be regarded as illustrative rather than restrictive.

Those of skill would further appreciate that the various illustrative logical blocks configurations modules and process steps or instructions described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. Various illustrative components blocks configurations modules or steps have been described generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present disclosure.

The steps of a method described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in computer readable media such as random access memory RAM flash memory read only memory ROM registers a hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to a processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor or the processor and the storage medium may reside as discrete components in a computing device or computer system.

Although specific embodiments have been illustrated and described herein it should be appreciated that any subsequent arrangement designed to achieve the same or similar purpose may be substituted for the specific embodiments shown. This disclosure is intended to cover any and all subsequent adaptations or variations of various embodiments.

The Abstract of the Disclosure is provided with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description various features may be grouped together or described in a single embodiment for the purpose of streamlining the disclosure. This disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter may be directed to less than all of the features of any of the disclosed embodiments.

The previous description of the embodiments is provided to enable a person skilled in the art to make or use the embodiments. Various modifications to these embodiments will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other embodiments without departing from the scope of the disclosure. Thus the present disclosure is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope possible consistent with the principles and novel features as defined by the following claims.

