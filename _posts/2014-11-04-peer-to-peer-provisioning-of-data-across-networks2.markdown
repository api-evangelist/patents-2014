---

title: Peer to peer provisioning of data across networks
abstract: Systems and methods are provided for flight simulators that share video via peering networks. One embodiment includes a flight tracking controller and connection controller. The flight tracking controller receives static images that represent video feeds from a plurality of flight simulators, transmits the static images to a monitoring entity, and receives a response from the monitoring entity selecting a video feed represented by a static image from a flight simulator. The response identifies multiple candidate paths for streaming the selected video feed from the flight simulator to the monitoring entity across a packet switched network. The connection controller forwards the response to the flight simulator, receives a confirmation from the flight simulator that confirms one of the candidate paths, and forwards the confirmation to the monitoring entity in order to establish a peer-to-peer connection for streaming the selected video feed directly between the flight simulator and the monitoring entity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09648066&OS=09648066&RS=09648066
owner: The Boeing Company
number: 09648066
owner_city: Chicago
owner_country: US
publication_date: 20141104
---
This application claims priority to U.S. Provisional Patent Application No. 62 044 147 entitled PEER TO PEER PROVISIONING OF DATA filed on Aug. 29 2014 and incorporated herein by reference.

When a user wishes to transmit large amounts of video data e.g. in real time to a number of viewers there are multiple imperfect solutions that are available. For example the user may implement a physical switching matrix to act as a dedicated central hub to distribute video data. In such a system sources of video data in the network are connected to the network via a direct physical connector using a technology such as High Definition Multimedia Interface HDMI . The physical switching matrix then splits the source video to one or more desired locations for review. However the expense of such physical cabling and switching hardware may be prohibitive.

For example hardware capture is limited by the capacity of the physical switching matrix and in most cases there is a limit of four inputs and four outputs. Highly specialized hardware can implement more input output ports but the costs increases exponentially as more ports are added quickly becoming prohibitive. Furthermore long video cables may degrade the quality of a video signal making it functionally impossible to provide video data to remote locations.

An alternate solution is to route video data over an Internet Protocol IP network. However such a solution may fail to provide multiplatform support or real time desktop capture for sharing with others. Thus users continue to seek out new video streaming provisioning solutions.

Embodiments described herein provide a signaling server capable of registering nodes on a peer to peer network. The signaling server may then help to establish peer to peer connections with the nodes in order to provide video data. After a connection is established via the signaling server communications for the peer to peer connections are sent directly between peer devices without traveling through the signaling server. This in turn allows video data to be quickly and efficiently transferred along the peer to peer connection.

One embodiment is a system that facilitates peer to peer connections for monitoring video feeds from flight simulators. The system includes a flight tracking controller and a connection controller. The flight tracking controller is able to receive static images that represent video feeds from a plurality of flight simulators to transmit the static images to a monitoring entity and to receive a response from the monitoring entity selecting a video feed represented by a static image from a flight simulator where the response identifies multiple candidate paths for streaming the selected video feed from the flight simulator to the monitoring entity across a packet switched network. The connection controller is able to forward the response to the flight simulator to receive a confirmation from the flight simulator that confirms one of the candidate paths and to forward the confirmation to the monitoring entity in order to establish a peer to peer connection for streaming the selected video feed directly between the flight simulator and the monitoring entity.

Another embodiment is a method for sharing video feeds from flight simulators on a peer to peer network. The method includes receiving static images that represent video feeds from a plurality of flight simulators transmitting the static images to a monitoring entity and receiving a response from the monitoring entity selecting a video feed represented by a static image from a flight simulator. The response identifies multiple candidate paths for streaming the selected video feed from the flight simulator to the monitoring entity across a packet switched network. The method also includes forwarding the response to the flight simulator receiving a confirmation from the flight simulator that confirms one of the candidate paths and forwarding the confirmation to the monitoring entity in order to establish a peer to peer connection for streaming the selected video feed for a flight directly between the flight simulator and the monitoring entity.

Another embodiment is a non transitory computer readable medium embodying programmed instructions which when executed by a processor are operable for performing a method for sharing video feeds from flight simulators on a peer to peer network. The method includes receiving static images that represent video feeds from a plurality of flight simulators transmitting the static images to a monitoring entity and receiving a response from the monitoring entity selecting a video feed represented by a static image from a flight simulator. The response identifies multiple candidate paths for streaming the selected video feed from the flight simulator to the monitoring entity across a packet switched network. The method also includes forwarding the response to the flight simulator receiving a confirmation from the flight simulator that confirms one of the candidate paths and forwarding the confirmation to the monitoring entity in order to establish a peer to peer connection for streaming the selected video feed for a flight directly between the flight simulator and the monitoring entity.

Other exemplary embodiments e.g. methods and computer readable media relating to the foregoing embodiments may be described below. The features functions and advantages that have been discussed can be achieved independently in various embodiments or may be combined in yet other embodiments further details of which can be seen with reference to the following description and drawings.

The figures and the following description illustrate specific exemplary embodiments of the disclosure. It will thus be appreciated that those skilled in the art will be able to devise various arrangements that although not explicitly described or shown herein embody the principles of the disclosure and are included within the scope of the disclosure. Furthermore any examples described herein are intended to aid in understanding the principles of the disclosure and are to be construed as being without limitation to such specifically recited examples and conditions. As a result the disclosure is not limited to the specific embodiments or examples described below but by the claims and their equivalents.

Network provides a benefit over prior systems because it enables flight simulators to operate as nodes on a peer to peer network in order to exchange video feeds and or other simulator data e.g. audio metadata etc. for simulated flights. In particular network has been enhanced with signaling server which is capable of setting up direct peer to peer connections between flight simulators and monitoring entities which in turn allows for the video feeds to be reviewed and analyzed from any desired location.

In this embodiment signaling server includes flight tracking controller which determines which flight simulators are presently available to provide video feeds for simulated flights. Signaling server also includes connection controller which is capable of facilitating the establishment of direct peer to peer connections between a flight simulator and other peer nodes. A memory of signaling server may store lists of nodes e.g. flight simulators and or monitoring entities that have registered with signaling server and similar information indicating ongoing connections between the nodes of network . Controllers and may be implemented as custom circuitry as a processor executing programmed instructions or some combination thereof.

Illustrative details of the operation of network will be discussed with regard to . Assume for this embodiment that each flight simulator and is actively being operated to immerse a pilot in a simulated flight. During a simulated flight video data is generated by the flight simulator in real time at a rate of many frames per second and this video data is presented to the user in order to show the user a virtual training environment. For example the video feed may present a virtual landscape to the user complete with simulated aircraft mountains lakes and rivers.

Many flight simulators are cramped environments because they simulate the actual cockpit of a known model of aircraft. Therefore if a person wishes to review the actions of a pilot in response to their simulated environment options would normally be limited as in person review of simulated flights is often an impossibility. To address this issue each flight simulator may send a registration message to flight tracking controller e.g. via a known IP address . These registration messages will be used by flight tracking controller to determine what flight simulators are generating video feeds that may currently be reviewed and or how to access those flight simulators. For example each registration message may include a user name for the pilot who is operating the simulator an IP address for the simulator and or a tag indicating that the flight simulator is prepared to actively send a feed of video data to other peer nodes on the network.

Each flight simulator also sends static images representing a state of the video feed from the flight simulator at a point in time to signaling server . These images use less bandwidth than an actual streaming video feed yet also enable a reviewer to quickly identify and distinguish the various flight simulators.

According to in step flight tracking controller receives the static images from the flight simulators e.g. as part of the registration requests from those flight simulators . The static images each represent a video feed from a flight simulator. Flight tracking controller may further register each flight simulator along with tracking information for that flight simulator indicating how to contact the flight simulator via IP network .

At some point in the future a monitoring entity e.g. smartphone may attempt to register with signaling server . In order to indicate the flight simulators that are presently available for monitoring flight tracking controller transmits the static images to the monitoring entity in step along with information identifying each registered flight simulator e.g. an IP address for each available flight simulator . A user at the monitoring entity may then choose a video feed based on its corresponding static image. Based on the identifying information for the chosen flight simulator the monitoring entity or in one embodiment connection controller determines multiple candidate paths for streaming the chosen video feed from the flight simulator to the monitoring entity via IP network . The monitoring entity sends a response selecting a video feed represented by a static image from a flight simulator and the response identifies the candidate paths discussed above. In step connection controller receives the response from the monitoring entity.

Connection controller identifies the flight simulator based on the response and forwards the response to the flight simulator step . Connection controller may further update a memory at signaling server in order to indicate that a connection is presently being offered to the flight simulator. In step connection controller receives a confirmation from the flight simulator that confirms one of the candidate paths offered in step and in step connection controller forwards the confirmation to the monitoring entity. This act completes the establishment of a peer to peer connection for streaming the video feed directly between the flight simulator and the monitoring entity. Thus the path for the peer to peer connection does not traverse through signaling server and yet signaling server is aware of ongoing peer to peer connections between registered devices.

The method of provides an advantage over prior systems because it enables flight simulators to utilize peer to peer networking techniques in order to share video feeds that represent simulated flights. This in turn eliminates the need for reviewers to be located physically close to pilots who are undergoing simulator training.

As used herein a node may comprise any suitable system for receiving and provisioning video data with other peers via an IP network. For example a node may comprise dedicated circuitry a processor implementing instructions stored in memory operating on a blade server etc. In one embodiment each node is implemented as a virtual machine operating on a processor and memory. In one embodiment each node is implemented using the Web Real Time Communication WebRTC Application Programming Interface API drafted by the World Wide Web Consortium W3C . Such implementations are therefore Operating System OS and application agnostic. In one embodiment a node may implement any of various different operating systems and applications so long as WebRTC is used to bridge these different operating environments. By using such web based technology client software may be distributed and run any platform and operating system supporting a web browser.

In a further embodiment each flight simulator is capable of utilizing its processing resources to perform the following functions 

Capture The ability to capture various forms of data e.g. video from screens audio from microphones or data from sensors.

Transport The ability to transport captured data in real time across the network directly between nodes.

Duplicate The ability to configure a single source of data at the flight simulator to be accessed from multiple nodes simultaneously.

Switching The ability to configure source and destination arrangements between nodes via operator control or user created software commands while a connection is already active on the network.

Each of the functions described above may be implemented by a dedicated application operating on the flight simulator. Furthermore nodes of the peer network may drop in and or out of ongoing transmissions as recorders viewers or senders as desired. For example a monitoring entity may communicate with the signaling server and determine what transmissions are currently available ongoing from the flight simulators. This may occur even if the node is not involved in the actual exchange of data.

In a still further embodiment flight tracking controller generates a display e.g. as a web page or network graph indicating each of the ongoing connections established via connection controller . To this end flight tracking controller may assemble displays similar to those shown in to illustrate which nodes are presently on the network and which nodes are presently engaged in communications with each other.

The following examples illustrate scenarios where WebRTC technology is used to implement a peer to peer network for reviewing coordinated training exercises between remotely located pilots in flight simulators.

In this example multiple users of flight simulators located in different countries are evaluated by supervisors who are remotely located from the pilots. The flight simulator of each pilot implements a network node. is a block diagram of a peer to peer network architecture utilized in this example. According to multiple flight simulators in North America are connected via LAN to the Internet . Furthermore multiple flight simulators in Europe are connected via LAN to the Internet . Two monitoring computers monitors and located in northern Africa are used to track the performance of the North American and European pilots during a training exercise. A signaling server coordinates interactions between the monitors and the flight simulators while a Session Traversal Utilities for NAT STUN server is used to facilitate NAT traversal for the flight simulators and monitors.

Each flight simulator generates a video feed that illustrates a cockpit view of a simulated aircraft and each flight simulator also generates a data feed indicating a location of the pilot s gaze on the cockpit view. The feeds are integrated at the flight simulator and compressed. The flight simulator nodes then identify signaling server as being located at a known IP address e.g. as indicated by a network wide broadcast and indicate their presence to signaling server . Each flight simulator also transmits a message to the signaling server indicating that it is operating as a sender.

In this example whenever a flight simulator declares itself to signaling server signaling server makes other nodes on the network aware of the existence of the flight simulator by updating a locally stored registry accessible to other peer nodes or broadcasting the registration information to other nodes. After a peer connection is selected and requested by a node a WebRTC offer answer messaging containing NAT information is exchanged between the nodes via the signaling server. Included in this package are custom network handling messages which identify which peer node the video feed is coming from and which peer node the video feed is going to. WebRTC is designed to work over challenging network conditions with common Internet obstacles such as Firewalls and NAT. This allows usage of the peer network for applications such as remote training and international simulation and testing scenarios which would not be otherwise possible without a VPN Virtual Private Network .

After the flight simulators indicate their sender status the signaling server retrieves static images from the flight simulators indicating their current video feeds. Each static image is a screen capture of a video feed from a corresponding flight simulator and each static image is updated regularly e.g. every five seconds in response to specific events etc. based on input from the flight simulator to indicate how the video feed is changing over time. The static images along with the aspect ratios for those static images are provided to the monitors to enable supervisors to select flight simulator video feeds for viewing. The supervisors operate the monitors to contact and establish a connection with one or more flight simulator at once as a viewer. The monitors then receive video feed and gaze data from each of the flight simulators being reviewed. Each monitor integrates the gaze tracker data into the video data for each node and then displays the integrated feed for each of the pilots on one or more displays for the supervisor. In this manner even though the supervisors are remotely located from the pilots and the pilots are remotely located from each other they may engage in coordinated training exercises together in real time.

In this example the establishment of peer to peer data connections between the nodes utilizes the WebRTC standard. The nodes utilize WebRTC as a means of video content distribution for generic data handling. Document JSEP Javascript Session Establishment Protocol is used to implement and create peer to peer connections via a signaling between applications utilizing NAT Network Address Translation traversal technique ICE Interactive Connectivity Establishment . Specifically for each desired connection a monitor utilizes JSEP techniques to determine and negotiate ICE paths to a specific IP address of a selected flight simulator and these ICE paths are offered by the monitor to the selected flight simulator via signaling server which forwards the offer onward to the selected flight simulator. The selected flight simulator returns a JSEP acceptance indicating a selected ICE path which is received at signaling server and forwarded on to the monitor to form a WebRTC connection. WebRTC leaves the implementation of the signaling to the developer by design providing maximum flexibility of the network configuration.

In this embodiment further messages are used to allow authentication and prevent impersonation of a peer within the network. For example users may be assigned to permission levels and a flight tracking controller may select a subset of flight simulators allowed for viewing by certain users depending on their permission levels. The flight tracking controller may then selectively send out static images only for the flight simulators that the user has permission to view while preventing connections that the user is unauthorized to make.

Any of the various elements shown in the figures or described herein may be implemented as hardware software firmware or some combination of these. For example an element may be implemented as dedicated hardware. Dedicated hardware elements may be referred to as processors controllers or some similar terminology. When provided by a processor the functions may be provided by a single dedicated processor by a single shared processor or by a plurality of individual processors some of which may be shared. Moreover explicit use of the term processor or controller should not be construed to refer exclusively to hardware capable of executing software and may implicitly include without limitation digital signal processor DSP hardware a network processor application specific integrated circuit ASIC or other circuitry field programmable gate array FPGA read only memory ROM for storing software random access memory RAM non volatile storage logic or some other physical hardware component or module.

Also an element may be implemented as instructions executable by a processor or a computer to perform the functions of the element. Some examples of instructions are software program code and firmware. The instructions are operational when executed by the processor to direct the processor to perform the functions of the element. The instructions may be stored on storage devices that are readable by the processor. Some examples of the storage devices are digital or solid state memories magnetic storage media such as a magnetic disks and magnetic tapes hard drives or optically readable digital data storage media.

Although specific embodiments are described herein the scope of the disclosure is not limited to those specific embodiments. The scope of the disclosure is defined by the following claims and any equivalents thereof.

