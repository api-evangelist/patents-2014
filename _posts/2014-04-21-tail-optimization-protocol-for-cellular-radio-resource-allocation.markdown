---

title: Tail optimization protocol for cellular radio resource allocation
abstract: Power and resource efficiency of a mobile network device are increased. In one aspect, a Tail Optimization Protocol (TOP) enables cooperation between a mobile device and an associated radio access network to eliminate idle periods (e.g., tails) when possible. Various systems and methods described herein can leverage the ability of applications and/or their associated connections to accurately predict a long tail time, from which a mobile device can notify an associated cellular network on such an imminent tail in order to allow the cellular network to immediately release tail resources. Various other aspects provided herein realize TOP via fast dormancy and/or other similar notification mechanisms, which enable a handset or other device to notify a cellular network for immediate resource release.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09374824&OS=09374824&RS=09374824
owner: AT&T INTELLECTUAL PROPERTY I, L.P.
number: 09374824
owner_city: Atlanta
owner_country: US
publication_date: 20140421
---
This application is a continuation of and claims priority to U.S. patent application Ser. No. 12 872 604 entitled TAIL OPTIMIZATION PROTOCOL FOR CELLULAR RADIO RESOURCE ALLOCATION filed on Aug. 31 2010. The entirety of the above referenced U.S. Patent Application is incorporated herein by reference.

This disclosure relates generally to network communications and more specifically to managing operation of devices utilizes within a wireless communication network.

A wireless communication system can be utilized to provide wireless access to various communication services e.g. voice video data messaging content broadcast etc. for users of the system. Wireless communication systems can operate according to a variety of network specifications and or standards such as Universal Mobile Telecommunications System UMTS Third Generation Partnership Project 3GPP Long Term Evolution LTE High Speed Packet Access HSPA . These specifications and or standards use different modulation techniques such as Code Division Multiple Access CDMA Time Division Multiple Access TDMA Frequency Division Multiple Access FDMA Multi Carrier CDMA MC CDMA Single Carrier CDMA SC CDMA Orthogonal Frequency Division Multiple Access OFDMA Single Carrier Frequency Division Multiple Access SC FDMA and so on.

In various wireless network deployments such as third generation 3G cellular networks or the like the release of radio resources can be controlled by inactivity timers. However the timeout value itself also known as the tail time can have a significantly long duration e.g. up to 15 seconds due to the necessity of trading off resource utilization efficiency for low management overhead and good stability. This in turn can result in wastage of a considerable amount of radio resources and battery energy associated with respective user handsets. Accordingly it would be desirable to implement techniques for effectively mitigating such tail effects and or other similar barriers to efficient device performance in a wireless communication system.

Various aspects of the claimed subject matter are now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of one or more aspects. It may be evident however that such aspect s may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate describing one or more aspects.

As used herein the terms component system platform layer selector interface and the like are intended to refer to a computer related entity or an entity related to an operational apparatus with one or more specific functionalities wherein the entity can be either hardware a combination of hardware and software software or software in execution. As an example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

In another example respective components can execute from various computer readable media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal . As another example a component can be an apparatus with specific functionality provided by mechanical parts operated by electric or electronic circuitry which is operated by a software or firmware application executed by a processor. In such a case the processor can be internal or external to the apparatus and can execute at least a part of the software or firmware application. As yet another example a component can be an apparatus that provides specific functionality through electronic components without mechanical parts wherein the electronic components can include a processor or other means to execute software or firmware that confers at least in part the functionality of the electronic components. In an aspect a component can emulate an electronic component via a virtual machine e.g. within a cloud computing system.

In addition the term or is intended to mean an inclusive or rather than an exclusive or. That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. Moreover articles a and an as used in the subject specification and annexed drawings should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Moreover terms like user equipment UE mobile station mobile subscriber station subscriber equipment access terminal terminal handset and similar terminology are used herein to refer to a wireless device utilized by a subscriber or user of a wireless communication service to receive or convey data control voice video sound gaming or substantially any data stream or signaling stream. The foregoing terms are utilized interchangeably in the subject specification and related drawings. Likewise the terms access point AP base station Node B Evolved Node B eNode B or eNB Home Node B HNB home access point HAP and the like are utilized interchangeably in the subject application and refer to a wireless network component or appliance that serves and receives data control voice video sound gaming or substantially any data stream or signaling stream from a set of subscriber stations. Data and signaling streams can be packetized or frame based flows.

Furthermore the terms user subscriber customer consumer owner agent and the like are employed interchangeably throughout the subject specification unless context warrants particular distinction s among the terms. It should be appreciated that such terms can refer to human entities or automated components supported through artificial intelligence e.g. a capacity to make inference based on complex mathematical formalisms which can provide simulated vision sound recognition and so forth.

As used herein the terms example exemplary and or demonstrative are utilized to mean serving as an example instance or illustration. For the avoidance of doubt the subject matter disclosed herein is not limited by such examples. In addition any aspect or design described herein as an example exemplary and or demonstrative is not necessarily to be construed as preferred or advantageous over other aspects or designs nor is it meant to preclude equivalent exemplary structures and techniques known to those of ordinary skill in the art. Furthermore to the extent that the terms includes has contains and other similar words are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising as an open transition word without precluding any additional or other elements.

Various aspects described herein provide via a novel Tail Optimization Protocol TOP and or other mechanisms systems and methods for enabling cooperation between a mobile device and an associated radio access network to eliminate tails as described above when possible. Various systems and methods described herein can leverage the ability of applications to accurately predict a long tail time from which an associated mobile device can notify an associated cellular network on such an imminent tail in order to allow the cellular network to immediately release tail resources.

Various other aspects provided herein realize TOP via fast dormancy which is a notification mechanism that enables a handset to notify a cellular network for immediate resource release. Thus by utilizing fast dormancy TOP can in some aspects be implemented with no required change to the cellular infrastructure and only minimal required changes to handset applications thereby incurring only negligible runtime overhead. By utilizing TOP and or other mechanisms described herein in combination with reasonable prediction accuracy radio energy and radio resource savings can be realized by significantly reducing tail time. Further for some applications such as multimedia streaming the use of TOP and or other mechanisms described herein can result in significant e.g. 50 60 savings in radio energy and or radio resources.

In accordance with one aspect a method as described herein can be implemented by at least one processor and or other means. The method can include the acts of identifying at least one connection utilized for communication within a communication system obtaining information relating to respective predicted data transfer times associated with the at least one connection calculating an estimated inter transfer time based on the respective predicted data transfer times and determining whether to trigger a transition to an idle communicative state independently of timing requirements associated with the transition to the idle communicative state at least in part by comparing the estimated inter transfer time to a threshold referred to herein as a tail threshold. In one example radio resources can be released e.g. by demoting the communicative state if the estimated inter transfer time is shorter than the tail threshold.

In accordance with another aspect a system that can be implemented as described herein can include a connection interface component that facilitates retrieval of information relating to one or more connections utilized for communication within a communication system. The system can also include a connection analysis component that identifies respective predicted data arrival times indicated by the one or more connections via the connection interface component and estimates an inter transfer time for the one or more connections as a function of the respective predicted data arrival times. In addition the system can include a state management component that determines whether to initiate a transition to an idle state independently of timing requirements associated with the transition to the idle state at least in part by comparing the inter transfer time for the one or more connections to a tail threshold.

In accordance with a further aspect a computer readable medium is described herein which can include a computer readable storage medium having computer executable code and or other data stored thereon. More particularly the computer readable medium can include code for causing a computer to identify one or more network connections code for causing a computer to obtain respective predicted data transfer times associated with the one or more network connections code for causing a computer to calculate an inter transfer time based on the respective predicted data transfer times code for causing a computer to conduct a comparison of the inter transfer time and a predetermined tail threshold and code for causing a computer to determine whether to facilitate transition to an idle state via invocation of a fast dormancy mechanism based at least in part on the comparison.

Referring now to the drawings illustrates a system for optimizing operation of a network device such as a UE in accordance with various aspects described herein. As illustrates UE can include a connection interface component which can facilitate retrieval of information relating to one or more connections utilized by UE for communication within a wireless communication system. For example as shown in system respective connections utilized by UE can communicate with one or more communication networks which can in turn provide one or more communication services e.g. voice data multimedia etc. for UE .

As further shown by system UE can include a connection analysis component which can identify respective predicted data arrival times indicated by connection s via connection interface component and estimate an inter transfer time for connection s as a function of the respective predicted data arrival times. Based on this information UE can further include a state management component which can determine whether to initiate a transition to an idle state independently of timing requirements e.g. a tail time and or other delay intervals as described herein associated with the transition to the idle state at least in part by comparing the inter transfer time for connection s as computed by connection analysis component to a tail threshold. For example state management component can initiate a transition to an idle state if the inter transfer time for connection s is substantially greater than the tail threshold.

In one example operation of connection interface component connection analysis component state management component and or any other mechanisms associated with connections or other aspects of UE can be implemented wholly or in part and or otherwise facilitated by a processor which can be coupled to a memory for storing data program codes to be executed by processor and or other information. Operation of UE in the context of at least the above components is described in further detail below.

In cellular communication networks and or other communication networks with which UE in system can be associated the release of radio resources can be controlled by inactivity timers. However the timeout value itself also known as the tail time can have a substantially long duration e.g. up to 15 seconds . In one example the tail time can be empirically chosen to balance the tradeoff among radio resource utilization user experiences energy consumption and the network processing overhead based on observed traffic patterns. Further as the tail time is an idle time period corresponding to the inactivity timer value before radio resources are released observation of the tail time can lead to waste in radio resources and battery energy of UEs e.g. mobile phones etc. . By way of illustration based on analysis of data collected from one or more cellular providers a significant portion of the time occupying high speed dedicated transmission channels e.g. 20 25 is wasted on the tail as a result of the bursty nature of the traffic.

In the following description focus is placed on the UMTS 3G network however it should be appreciated that the aspects described herein could be applied to any suitable network technology or combination thereof. In one example to manage radio resources and UE energy a UMTS network can maintain a radio resource control RRC state machine for each UE. Thus for example a UE can be in one of three states each with different amount of radio resources allocated affecting user performance and the UE energy consumption. In such an example a UE can be configured to always experience a tail which is formally defined as the idle time period matching the inactivity timer value before a state demotion whenever the state is demoted from a state with larger amount of resource to one consuming less resource. However frequent state transitions particularly state promotions can in some cases lead to unacceptably long delays for the UEs due to additional processing overhead for the radio access network. In view of at least the above techniques are provided herein for mitigating the tail effect in UMTS networks and other suitable telecommunication networks.

Existing approaches for tail removal can be classified into various categories. In a first example inactivity timer tuning can be performed using analytical models by considering the radio resource utilization the UE energy consumption the service quality and the processing overhead of the radio access network. However it can be appreciated that mitigation of the tail effect in this manner requires reducing the inactivity timers which invariably causes the number of state transitions to increase. In a specific illustrative example aggressively reducing the most critical timer from 5 s to 0.5 s can reduce the tail time by 50 however in the same example the state promotion delay increases by about 300 . It can be appreciated that this is undesirable as the increase in state promotions introduces significant processing overhead for the radio access network.

Alternatively a second example involving UE based approaches can be utilized in which the UE alters traffic patterns based on the inferred dynamic behavior of the RRC state machine. For delay tolerant applications such as Email and RSS feeds the transfers can be delayed and batched using such an approach to reduce the tail time. However it can be appreciated that such an approach is not applicable to most real time traffic e.g. Web browsing and as a result the users corresponding to such traffic can in some cases experience delays in the processing of their requests.

In another alternative a third example involving cooperation between the UE and the network can be utilized. For example in some cases a UE application may be able to predict the end of a data transfer based on the application logic. Accordingly if an idle time period that lasts at least as long as the inactivity timer value is predicted the UE can send a message to notify the network which then immediately releases the allocated resources. It can therefore be appreciated that such an approach can completely eliminate the tail if the prediction is accurate without incurring additional promotion delays. Various network features such as fast dormancy can be utilized within communication networks e.g. 3GPP networks etc. to help realize such an approach. However while various handsets have adopted fast dormancy and or similar mechanisms there has been no investigation into how to make use of such mechanisms from the perspective of the UE. Further no smartphone application to date uses fast dormancy and or other similar mechanisms due to a lack of operating system OS support and other factors. Based on measuring device power consumption it can be observed that one or more recently released mobile handset devices can utilize fast dormancy in an application agnostic manner such that for example the device goes to the idle state faster than conventional phones do for the same carrier. Equivalently it can be observed that these devices use shorter inactivity timers as controlled by the device in order to improve battery life. However as noted above the incurred drawbacks using such an approach include extra state promotions that cause additional RNC processing overhead and worsen user experience.

In view of at least the above UE in system and its respective components and or other associated entities can implement a Tail Optimization Protocol TOP which is an application layer protocol that bridges the gap between applications and fast dormancy support provided by the communication network . In accordance with one aspect TOP can be implemented at UE via changes to the OS and or associated applications taking into account the implication of multiple concurrent connections using fast dormancy. By way of example TOP can be utilized to address at least three issues associated with allowing network applications to benefit from this support.

In a first example various aspects described herein provide a simple interface for different applications to leverage fast dormancy and or other similar features. For example a framework can be provided in which applications define their logical transfers and perform predictions of inter transfer time. Subsequently an application can invoke a tail removal application programming interface API and or other means provided by TOP that automatically coordinates concurrent traffic of multiple applications as state transitions are determined by the aggregated traffic of all applications. By implementing TOP in this fashion it can be appreciated that the overhead for tail removal experienced by applications is substantially minimized. While various examples are provided herein for the case of a UMTS network it should be appreciated that a framework constructed in this manner can be applicable to any other suitable communication system such as 3G Evolution Data Optimized EvDO 4G LTE cellular networks and or any other suitable network s that also use inactivity timers for releasing radio resources and therefore have the tail effect.

In a second example by using cellular traces collected from carrier data the tail effect can be quantified for a substantially large number of user sessions. By doing so it can be observed that for the two RRC states a significant amount of time e.g. 20 25 and 50 55 respectively is spent on the tail. By using these traces various techniques described herein can additionally be utilized to empirically derive critical parameters used by TOP to properly balance the tradeoff between resource saving and state transition overhead.

In a third example the benefits of TOP can be demonstrated using real traces collected from carriers and or devices operating via such carriers. Based on these data and assuming reasonable prediction accuracy TOP can save overall the radio energy e.g. up to approximately 17 and the radio resources e.g. up to approximately 14 by reducing the tail time e.g. by up to approximately 60 . Further for some applications such as multimedia streaming TOP can achieve more significant savings of the radio energy e.g. up to approximately 60 and the radio resources e.g. up to approximately 50 .

In accordance with one aspect TOP and or other techniques for managing the operating state of a UE can operate in the context of one or more communication networks . By way of specific non limiting example illustrates a UMTS network in which various aspects described herein can operate. As illustrated by the UMTS network can include three subsystems UEs the UMTS Terrestrial Radio Access Network UTRAN and the Core Network CN . As used in UMTS network UEs can be mobile handsets that interact with end users and or any other suitable device s . In one example UTRAN can enable connectivity between UE and CN . UTRAN can include two components base stations which are referred to as Node Bs and Radio Network Controllers RNCs which provide control functionalities for multiple Node Bs . In one example a substantial number of the features of UTRAN e.g. packet scheduling radio resource control handover control etc. can be implemented at the RNC . In another example the centralized CN can be regarded as the backbone of the cellular network and can serve as an interface to other networks such as the Internet .

Returning to in the context of UMTS network the term radio resource as used herein refers to the Wideband CDMA WCDMA code space the UTRAN transmission power and or other factors that are potential bottlenecks of the network. To efficiently utilize the limited radio resources the UMTS RRC protocol introduces a state machine associated with each UE . By way of example the RRC state machine can utilize three RRC states IDLE CELL FACH and CELL DCH as shown by diagrams and in .

As shown in diagrams and IDLE is the default state when the UE is turned on. In this state the UE has not established an RRC connection with the RNC thus no radio resource is allocated and the UE cannot transfer any data.

In the CELL DCH state the RRC connection is established and a UE can be allocated dedicated DCH transport channels in both downlink DL e.g. RNC to UE and uplink UL e.g. UE to RNC. This state allows the UE to fully utilize the radio resources for user data transmission. For brevity the CELL DCH state is also referred to herein as simply DCH. In one example when a large amount of UEs are in DCH the radio resources can in some cases be exhausted due to the lack of channelization codes in the cell. As a result some UEs may be required to use low speed shared channels although in such a case their RRC states remain at DCH.

In the CELL FACH state the RRC connection is established but there is no dedicated channel allocated to the UE. Instead the UE can only transmit user data through shared low speed channels e.g. less than 20 kbps . For brevity the CELL FACH state is also referred to herein as simply FACH. FACH is generally designed for applications requiring very low data throughput rate.

In accordance with one aspect the various RRC states impact the radio energy consumption of a UE. For example as shown by diagrams and a UE at the IDLE state consumes almost no energy from its wireless network interface. While a device operates within the same state the radio power can be substantially stable regardless of the data throughput. In one example the RRC state machine can be maintained at both the UE and the RNC. In such a case the two peer entities can be synchronized via control channels except e.g. during transient and error situations. In another example both the DL and the UL can utilize the same state machine.

According to another aspect there are two types of RRC state transitions. State promotions including IDLE to FACH IDLE to DCH and FACH to DCH switch an associated device from a state with lower radio resources and UE energy utilization to another state consuming more resources and UE energy. Conversely state demotions including DCH to FACH FACH to IDLE and DCH to IDLE go in the reverse direction. Depending on the starting state a state promotion is triggered by differing means. For example if the UE is at idle a state promotion is triggered by either any user data as opposed to control data transmission activity. If the UE is at FACH a state promotion is triggered by the per UE queue size called the Radio Link Controller RLC buffer size exceeding a threshold in either direction.

In another example state demotions can be triggered by inactivity timers maintained by the RNC. For example a timer controlling demotion from DCH to FACH is referred to herein as and a timer controlling FACH to IDLE demotions is referred to herein as . At DCH the RNC can reset the timer to a fixed threshold T whenever it observes any UL DL data frame. Accordingly if there is no user data transmission for T seconds the timer times out and the state is demoted to FACH. A similar scheme can be used for the timer. As shown by diagrams and the threshold T assigned to timers and can depend on implementation. For example diagram illustrates a system with set to 5 s and set to 12 s while diagram illustrates a system with set to 6 s and set to 4 s.

It can be appreciated that promotions can involve more work than demotions. In particular state promotions can incur a long ramp up latency of up to 2 seconds during which tens of control messages are exchanged between a UE and RNC for resource allocation. Excessive state promotions thus increase the processing overhead at the RNC and degrade user experience especially for short data transfers.

Diagrams and in depict state transition diagrams for respective UMTS carriers herein denoted Carrier and Carrier whose state machine parameters under good signal strength conditions are listed in Table I below. In accordance with one aspect such data and or other information collected via system analysis can be utilized to characterize the tail effect of a system.

In accordance with one aspect a network device and or other entity can utilize TOP to invoke fast dormancy support and or other suitable mechanisms to directly trigger a DCH to IDLE or FACH to IDLE demotion without experiencing timeout periods in order to save radio energy and radio resources. For example as illustrated by system in a UE can utilize a fast dormancy component in cooperation with a state management component as described herein to initiate a transition to an idle state at least in part by conducting a fast dormancy messaging procedure with an associated network management entity such as a RNC associated with communication network s .

However it can be appreciated that triggering state demotions aggressively can in some cases incur unacceptably long delay of state promotions worsening user experiences and increasing the processing overhead at RNC . Accordingly TOP and or other techniques that can be utilized by UE can employ a set of novel techniques to address at least this issue. In one example the techniques described herein can be implemented without requiring changes at the firmware or hardware of UE given that fast dormancy and or other suitable procedures are widely deployed and transparent to the radio access network.

According to an aspect TOP and or other techniques as described herein can leverage the knowledge of applications that predict the idle period after each data transfer. The definition of a data transfer can be made dependent on the application. In one example fast dormancy is not invoked if the predicted idle period is smaller than a predefined threshold e.g. the tail threshold in order to prevent unnecessary state promotions. By leveraging this knowledge of respective applications and or their corresponding connections an interface is provided by which applications can intelligently predict an idle period such that fast dormancy is only invoked when the idle period is longer than the tail threshold.

According to another aspect the value of the tail threshold and other parameters used by TOP can be tuned by empirically measuring traces collected from a network carrier in order to well balance the tradeoff between the incurred state promotion overhead and the resource savings.

According to a further aspect RRC state transitions can be determined by the aggregated traffic of all applications running on a UE . However as respective applications may be capable only of predicting their own transfer times a global coordination algorithm can be utilized in connection with TOP to handle concurrent network activities. In another example TOP and or other suitable techniques utilized by UE as described herein can consider legacy applications that are unaware of such techniques. Various examples by which the above aspects can be realized are described in further detail below. For example a non limiting example coordination algorithm that can be utilized according to various aspects herein is shown below in Table III.

In the DCH or FACH states when there is no user data transmission in either direction for at least T seconds e.g. the inactivity timer value the RRC state can be demoted as noted above to save radio resources and UE energy. However during the wait time of T seconds it can be appreciated that an associated UE still occupies the transmission channel and the WCDMA codes and the radio power consumption is kept at the corresponding level of the state. As used herein a tail is defined as the idle time period matching the inactivity timer value before a state demotion. Further any non tail time is defined herein as active. In typical UMTS and or other networks each UE can be allocated a dedicated channel whose radio resources are substantially wasted during the tail time. By way of example relating to High Speed Downlink Packet Access HSDPA which is a UMTS extension with higher downlink speed occupying the high speed transport channel during the tail time can potentially prevent other UEs from using the high speed channel despite the fact that the channel is shared by only a limited number of UEs e.g. 32 . Furthermore it can be appreciated that staying in DCH or FACH during the tail time wastes the radio energy of the UE which can contribute to a significant portion e.g. at least half of the total battery energy consumption at a UE or other such device.

From the perspective of a network carrier it can be noted that one option for mitigating the tail effect is to reduce the inactivity timer values. However doing so increases the number of state transitions. As described above completing a state promotion can take e.g. up to 2 seconds during which tens of control messages are exchanged between a UE and the RNC. Such a delay degrades end user experiences and increases the CPU processing overhead of the RNC which is much higher for handling state transitions than for performing data transmission.

In order to quantify the tradeoff among the factors of the radio resource consumption the UE energy consumption the state promotions and the end user experiences a series of metrics can be computed D D S and E as shown in Table II below. In particular the DCH tail time Dcaptures the radio resources the WCDMA codes wasted on tails that can potentially be saved. Second the total DCH time D consists of DCH tail time D and DCH active time e.g. non tail time . It quantifies the overall radio resources consumed by the UE on dedicated DCH channels e.g. ignoring the radio resources allocated for shared low speed FACH channels . Third the total promotion delay S is the total duration of all promotions. It abstracts the overhead brought by the state promotions that worsens the user experience and increases the processing overhead at the RNC. In one example the state demotion overhead can be ignored because it is negligible compared to the state promotion overhead. Fourth the radio energy consumption E is the total radio energy consumed in all states and state promotions.

According to an aspect D D S and E can be computed using the simulation based approach described above and e.g. the parameters listed in Table I above. When changing the inactivity timer values or using a new technique for tail removal the relative change of D D S and E can be analyzed as compared to the default setting where the default state machine parameters e.g. as shown in Table I are used without removing tails. Let Dand Dbe the DCH tail time in the new setting and in the default setting respectively. Accordingly the relative change of D denoted as D can be computed by D D D D. Similar definitions can be used for D S and E which are further utilized below.

With reference again to it can be appreciated that the fundamental reason why inactivity timers are conventionally necessary is that a communication network does not have an easy way of predicting network idle time of the UE . Therefore the RNC conservatively appends a tail to every network usage period. To avoid this applications at the UE and or their corresponding connections can be configured to determine the end of a network usage period by making use of application knowledge useful for predicting network activities. Once an imminent tail is predicted the UE can notify the RNC via fast dormancy component which then prompts a substantially immediate release of resources by RNC .

Based on the concepts above a feature called fast dormancy has been proposed for inclusion in various communication system specifications e.g. 3GPP Release 7 and Release 8 etc. . Using fast dormancy the UE can send an RRC message referred to herein as a T message to the RNC through the control channel. Upon the reception of a T message the RNC releases the RRC connection and lets the UE go to IDLE or a hibernating state that has lower but still non trivial promotion delay . While this feature has limited handset support no network device applications currently use fast dormancy in practice partly due to a lack of OS support and or a simple programming interface.

In accordance with one aspect UE in system can be utilized to implement TOP which is an application layer protocol that leverages the support of fast dormancy to remove tails. In TOP applications e.g. applications associated with respective connections can define data transfers and predict the inter transfer time at the end of each data transfer using a provided interface. If the predicted inter transfer time is greater than a tail threshold the application can then inform the RNC e.g. via state management component and fast dormancy component to initiate fast dormancy. In accordance with various aspects techniques for setting the tail threshold and handling concurrent network activities are described herein. It can be appreciated that the TOP design provided herein can be implemented with minimal required change to UE applications and optionally server applications as the server can provide the UE with hints about predicting a tail and the UE OS and substantially no change at the firmware hardware of the UE . In an aspect TOP is transparent to the UTRAN e.g. the Node B and the RNC as shown in and the cellular core network e.g. CN in . Therefore it can be appreciated that TOP can be incrementally deployable. In another aspect the T message as used herein can be pre supported by the RNC .

In accordance with one aspect tail eliminations can be performed from the perspective of applications running at UE for each data transfer which can be defined by the applications to capture a network usage period. For example a data transfer can correspond to all packets belonging to the same Hypertext Markup Language HTML page. To use TOP an application can be required only to ensure that the current data transfer has ended and to provide TOP with its predicted delay between the current and the next data transfer denoted as the inter transfer time ITT via a provided interface e.g. implemented using connection interface component . In one example ITT can be defined as the packet inter arrival time between the last packet of a transfer and the first packet of the next transfer. In another example DL and UL packets can be handled without differentiation as both use the same state machine.

By way of specific example a scenario with no concurrent activities can be considered. In such a case TOP via state management component or the like can send a T message e.g. invoking fast dormancy via fast dormancy component to eliminate the tail if the predicted ITT is longer than a threshold herein referred to as a tail threshold TT that introduces the tradeoffs described above. For example a large TT value limits the radio resource and energy saving achieved by TOP while a small TT value incurs extra state promotions. Techniques for choosing the TT are provided in further detail below.

In accordance with one aspect ITT prediction can be application specific. For example it may be easier to predict ITT for applications with regular traffic patterns with limited or no user interaction e.g. video streaming while it may be more difficult for user interactive applications such as Web browsing and map applications as user behavior can inject randomness to the packet timing. By way of example in Web browsing each transfer can correspond to downloading one HTML page with all embedded objects. As another example an e mail application can define a transfer as a request for checking for sending and or receiving messages. In the example of a Web browser the browser can have exact knowledge of when the page has been fully downloaded. However the timing gap between two consecutive transfers may be shorter than the tail threshold e.g. the user can quickly navigate between pages . Thus the browser can selectively invoke TOP. By way of a second example a multimedia streaming transfer can consist of a single burst of packets of video audio content. A multimedia streaming application can usually predict termination of a streaming burst and therefore TOP can be applied if the timing gap between two consecutive bursts usually known by the application is longer than the TT. As a third example interactive map applications involve continuous user interactions thus TOP may not be applicable as it is difficult to define a transfer.

It can be appreciated that ITT prediction by respective applications and or connections can be associated with various issues. As a first example applications and or connections may in some cases not predict ITT accurately misprediction can lead to increased promotion overhead due to false positives e.g. falsely predicting a short ITT that is less than the TT to be a long ITT that is greater than the TT or missing opportunities for tail removal due to false negatives e.g. falsely predicting a long ITT to be short . For simplicity of description however it is assumed herein that ITTs are predicted with a reasonable accuracy e.g. 80 to 90 .

In a second example the existence of concurrently running applications and independent components of the same application e.g. a streaming application with an advertisement bar embedded can further complicate tail prediction. Further it can be appreciated that applications cannot predict the concurrent network activities of other applications that can that affect state transitions. Accordingly TOP as utilized by system can assume responsibility for handling this concurrency as described in further detail below.

In accordance with one aspect unlike the applications as described above TOP as implemented by a UE can in some cases be unaware of the way applications define their transfers. Instead TOP can schedule tail removal requests at the connection level. A connection can be defined by five tuples srcIP dstIP srcPort dstPort and protocol Transmission Control Protocol User Datagram Protocol or TCP UDP . It can be appreciated that it is possible for either one connection to contain multiple transfers or for one transfer to involve multiple connections. At the end of a transfer after the last packet is transmitted an application can inform TOP via a simple API herein referred to as TerminateTail c that the predicted ITT of connection c is . In other words the next UL DL packet of connection c belongs to the next transfer and will arrive after time. Let the real ITT be and the predicted ITT be .

When user interactions are involved it may be difficult for applications to predict the exact value of ITT. In such a case an application can perform binary prediction e.g. to predict whether ITT TT or ITT TT. In such an example the API is only called in the latter case if ITT is predicted to be greater than TT then TerminateTail c can be invoked with set to a fixed large value e.g. 60 sec . In one example when no concurrent network activities exist exact prediction of ITT can in some cases be unnecessary provided the binary prediction is correct. On the other hand when concurrency exists the predicted ITT value may affect how fast dormancy is invoked. For example in an example wherein the real ITT is denoted by and the predicted ITT is denoted by it can be appreciated that underestimating may in some cases incur additional state promotions. However as noted above in the event that binary prediction is correct the actual prediction value of ITT can be of lesser significance in some cases.

In one example calling TerminateTail c can be used to indicate that the next transfer belongs to an established connection c. In addition an application can start the next transfer by establishing a new connection that does not exist when TerminateTail is called. For example a Web browser can use a new TCP connection for fetching a new page. Suppose that at the end of a connection c the application makes a prediction that the next transfer initiates a new connection and the ITT is . In that case the application can make two consecutive calls. First the application can call TerminateTail null indicating that a new connection will be established after time. The first parameter is null as the application does not know about the future connection. Second the application can call TerminateTail c indicating the termination of c and the termination of the current transfer. It can be appreciated that the two calls will trigger at most one T message. The rationale for performing the second call is described in further detail below.

Turning next to a system for computing a threshold time relating to operating state management for a device operable in a wireless communication system in accordance with various aspects is illustrated. System can include a connection interface component a connection analysis component and a state management component which can operate in accordance with various aspects described herein. Further state management component can be associated with a tail threshold computation component which can set and or otherwise determine the tail threshold value utilized by TOP and or other suitable mechanisms in various manners.

As defined above a TT can be used by TOP and or other suitable state management mechanisms to determine whether to send a T message when TerminateTail is called. When no concurrency exists TOP can be configured to send a T message if and only if the predicted ITT is greater than the TT. Accordingly it can be appreciated that a large TT may limit the radio resource and energy savings while a small TT may incur extra state promotions.

In a typical use scenario a UE is at DCH when a transfer ends. Assuming this a T message can be used to trigger a DCH to IDLE demotion. However in the event of state machine settings such as those illustrated by diagrams and in a UE will experience two state demotions DCH to FACH with duration of and FACH to IDLE with duration of . Therefore the default TT value can be set based on at least one of the DCH to FACH inactivity timer or the FACH to IDLE inactivity timer e.g. to match the original behavior. Thus by way of example assuming the predicted ITT is to ensure no additional promotion if predictions are correct TOP can be configured to refrain from sending a T message if 

In accordance with one aspect tail threshold computation component can operate based on empirical system measurement based on system traces such as that shown in diagram in which can generated as follows. In one example calibrated sessions can be replayed against respective state machines associated with one or more carriers with different TT values assuming that a T message is sent whenever the packet inter arrival time is greater than the TT. The change of the total duration of state promotions S can then be measured. As shown by diagram S monotonically decreases as TT increases and reaches zero when TT . In addition it can be observed from diagram that reducing TT to the value of incurs limited promotion overhead e.g. 22 and 7 for Carrier and Carrier respectively. For the example carriers used it can be appreciated that given a fixed TT Carrier has a higher promotion overhead because it has a much longer timer. On the other hand as shown by diagram in which plots the relationship between the TT and the change of the total DCH tail time D setting TT to saves only 35 and 61 of the DCH tail time for the two carriers while reducing TT to eliminates all DCH tails. Accordingly TT can be utilized to better balance the tradeoffs described above and illustrated by Table II.

According to another aspect while tail threshold computation component can set a tail threshold based on empirical system trace information as described above tail threshold computation component can utilize other factors in addition to and or in place of such information in determining a tail threshold for network device state management. For example as shown by system in retrieval of information relating to one or more connections can be facilitated via respective applications utilizing said connections as generally described above. In such an example tail threshold computation component can set a tail threshold based at least in part on information relating to one or more connections provided by the respective applications e.g. and obtained via the connection interface component . For example TOP and or other state management mechanisms utilized by system can be configured such that respective applications can suggest and or assign tail threshold times for use by state management component . Additionally or alternatively tail threshold computation component can set the tail threshold based at least in part on data obtained from at least one content provider within communication network s providing communication services via connection s . By way of example involving a Web browsing application a content provider corresponding to a website can embed information relating to a desired tail threshold into a header and or other elements of the website such that the Web browsing application can obtain the information upon accessing the website. Upon obtaining such information the Web browsing application can relay the information to one or more suitable components to facilitate setting of the tail threshold.

In accordance with a further aspect it can be appreciated that tail elimination can be performed for each data transfer determined by an application and or its corresponding connections . As described above an application may only ensure that the delay between consecutive transfers is longer than the tail threshold without considering other applications . However RRC state transitions are determined by the aggregated traffic of all applications . Therefore it can be appreciated that allowing every application and or connection to send T messages independently causes problems as illustrated by diagram in . As shown by diagram at time t TOP sends a T message for Application to cut its tail. However P a packet transmitted by Application at t will trigger an unnecessary promotion if t t

It can be appreciated that if all connections can precisely predict the packet inter arrival time then there exists an optimal algorithm to determine whether to send a T message. The optimal algorithm aggregates prediction across connections by effectively treating all network activity as part of the same connection . Accordingly fast dormancy is triggered only when the combined ITT exceeds the TT. Thus if a . . . arepresents the predicted arrival time of the next packet for each connection at a given time t then TOP can send a T packet if mina t TT.

In practice however it can be appreciated that the above operation of TOP faces various challenges. First as mentioned above applications perform the prediction at the transfer level. Therefore no prediction information is available except for the last packet of a transfer. This may incur additional promotions if for example connection cinvokes fast dormancy when connection cis in the middle of a transfer. Second legacy applications are unaware of TOP and some applications may not use TOP due to their particular traffic patterns. To handle at least these issues simple and robust coordination techniques can be implemented as described below.

According to an aspect a TOP algorithm and or other algorithm can consider two cases to determine whether to send a T message e.g. for fast dormancy. First for all connections with ITT prediction information e.g. TerminateTail is called before the arrival of the next packet fast dormancy can be triggered only when the combined or aggregated ITT exceeds the tail threshold. This is illustrated by system in . More particularly as system illustrates connection interface component can facilitate retrieval of information relating to a plurality of connections based on which connection analysis component can utilize a coordination component and or other suitable means to estimate the inter transfer time for connection s at least in part by identifying a current timestamp identifying an earliest predicted data arrival time indicated by connection s and computing the inter transfer time for connection s as a time interval measured from the current timestamp to the earliest predicted data arrival time.

Second a simple heuristic to can be applied to handle connections without ITT being predicted when TerminateTail is called because either those connections are not at the end of the transfer or they do not use TOP. This is illustrated for example by system in . As shown by system if system unaware connections exist that do not predict ITT a T message is not sent e.g. by state management component if any of the system unaware connections has recent network activity within the past p seconds where p is a predefined parameter e.g. 5 s etc. . Thus connection interface component can facilitate retrieval of information relating to one or more system aware connections that indicate predicted data arrival time and one or more system unaware connections that do not indicate predicted data arrival time. Based on such information connection analysis component can determine an amount of elapsed time following a most recent data arrival over the one or more system unaware connections by utilizing a coordination component and or other suitable means. Subsequently state management component can initiate a transition to an idle state if the inter transfer time for the system aware connections is substantially greater than a tail threshold and the elapsed time following the most recent data arrival over the system unaware connection s is substantially greater than a predefined arrival window which can be defined by a guard time e.g. p controlled by a guard time manager or the like.

It can be appreciated that the above measures can be taken due to the fact that for an active connection a recent packet transmission usually indicates another packet transmission in the near future. Not sending a T message at such a case reduces additional promotions. For example referring back to diagram in and assuming Application does not use TOP a T message should not be sent at tfor Application if t t

Returning to an example coordination algorithm that can be implemented by coordination component and or other entities in system is described in further detail with reference to the pseudo code listed in Table III below. As shown in Lines 2 3 the algorithm maintains two states for each connection c ts and predict which correspond to the timestamp of the last observed packet and the predicted arrival time of the next packet respectively. The dummy state in Line 4 is explained further below. In one example as shown by Lines 27 30 whenever an incoming or outgoing packet of connection c arrives c.ts can be updated to ts the current timestamp and c.predict can be set to null indicating that no prediction information is currently available for connection c. Further after the last packet is transmitted at the end of a transfer an application can call TerminateTail c . Subsequently as shown by Line 19 TOP can update c.predict to ts . TOP can then send a T message as shown by Lines 20 25 if the conditions expressed by Equations 1 and 2 below hold 

According to an aspect as provided above for applications that are aware of TOP TOP can attempt to aggregate the predicted tail times and invoke fast dormancy and or other suitable procedures only if the aggregated tail time is greater than the tail threshold. Thus for example if a first application reports a tail time of 8 seconds and a second application reports a tail time of 5 seconds the lowest reported tail time 5 seconds can be set as the aggregated tail time.

According to another aspect the OS at a UE and or other mechanisms suitable for implementing TOP can keep track of respective connections and collect information relating to predicted idle time for substantially all connections. To this end an interface can be provided by which all applications that are aware of TOP can coordinate to report information to the OS and or other mechanisms implementing TOP such that TOP has a global view of substantially all connections and can perform scheduling based on such information. Accordingly as noted above TOP can be conducted by obtaining reports from respective applications aggregating them and comparing the tail time based on the aggregated reports to a tail threshold.

Referring again to when the next transfer starts in a new connection the corresponding application can call TerminateTail null then TerminateTail c as described above at the end of connection c which is also the end of the current transfer. Subsequently TOP can handle the first call by creating a dummy connection c e.g. as performed in Lines 14 18 above with c.predict ts and adding cto consideration according to Equation 1 . Subsequently the dummy connection cis removed when its prediction is out of date e.g. ts c.predict as performed in Lines 9 10 above. As Line 11 above further provides the prediction corresponding to an existing connection can be set to null no prediction information when the prediction is out of date. Further a prediction can be removed e.g. not considered by Equation 1 or 2 when the connection is closed by the application.

In accordance with one aspect an application can in some cases call TerminateTail null at ts immediately after the last packet of connection c is transmitted. However it can in some cases be possible that at ts c has not yet been removed by TOP although no packet of c may appear. In this case c.ts the timestamp of the last packet of c can be significantly close to ts causing Equation 2 to not hold. Thus in this case a T message will never be sent. In one example this can be addressed via a second call TerminateTail c that sets c.predict . By making two calls in this manner it can be substantially guaranteed that a T message is properly sent even if c is not timely removed.

According to another aspect it can be appreciated that an application abusing fast dormancy can make a UE send a large amount of T messages each of which may cause a state demotion to IDLE followed by a promotion triggered by a packet in a short period. To prevent such a pathological case TOP can be configured to send at most one T message for every t seconds even if multiple T messages are allowed by the constraints of Equation 1 and 2 . Stated another way TOP can be configured to elect not to trigger a transition to an idle communicative state if previous triggering to the idle communicative state has occurred within a predetermined time interval. This guarantees that repeatedly calling TerminateTail is harmless and that the frequency of the additional state promotions caused by TOP is no more than one per t seconds. By way of specific non limiting example t can be set to e.g. 6 10 seconds in order to have minimal impact on resource savings for normal usage of TOP.

Referring now to methodologies that can be performed in accordance with various aspects set forth herein are illustrated. While for purposes of simplicity of explanation the methodologies are shown and described as a series of acts it is to be understood and appreciated that the methodologies are not limited by the order of acts as some acts can in accordance with one or more aspects occur in different orders and or concurrently with other acts from that shown and described herein. For example those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events such as in a state diagram. Moreover not all illustrated acts may be required to implement a methodology in accordance with one or more aspects.

With reference first to a methodology of managing operating states corresponding to a network device e.g. UE is illustrated. Methodology can begin at block wherein at least one connection e.g. connection s utilized for communication within a communication system e.g. via communication network s is identified. At block information relating to respective predicted data transfer times associated with the at least one connection is obtained e.g. via a connection interface component . At block an estimated inter transfer time is calculated e.g. by a connection analysis component based on the respective predicted data transfer times obtained at block . At block it is determined e.g. by a state management component whether to trigger a transition to an idle communicative state independently of timing requirements e.g. tail time requirements etc. associated with the transition to the idle communicative state at least in part by comparing the estimated inter transfer time calculated at block to a tail threshold.

Referring next to a methodology for coordinating a set of connections in the context of a mobile device tail optimization technique is illustrated. Methodology can begin at block wherein a plurality of connections and information relating to respective predicted data transfer times associated with the plurality of connections are identified. At block a current timestamp is identified. At block an earliest predicted data transfer time is identified e.g. by a coordination component associated with or independent of a connection analysis component from among the respective predicted transfer times identified at block . At block an estimated inter transfer time is set to a time interval measured from the current timestamp identified at block to the earliest predicted data transfer time identified at block . Methodology can then conclude at block wherein a transition to an idle communicative state is triggered if the estimated inter transfer time obtained at block is substantially greater than a tail threshold.

Turning to a methodology for coordinating optimization aware applications and legacy applications within a mobile device optimization protocol is illustrated. Methodology can begin at block wherein at least one predicting connection e.g. a system aware connection and or any other connection associated with a prediction capable application that provides predicted data transfer time information and at least one non predicting connection e.g. a system unaware connection and or any other connection associated with a legacy application or other non prediction capable application that does not provide predicted data transfer time information are identified. At block an estimated inter transfer time is calculated based on respective predicted data transfer times indicated by the at least one predicting connection as identified at block . At block an amount of elapsed time following a most recent data transfer conducted by the at least one non predicting connection identified at block is determined e.g. by a coordination component and or a guard time manager associated with or independent of a connection analysis component . Methodology can then conclude at block wherein a transition to an idle communicative state is triggered if the estimated inter transfer time calculated at block is substantially greater than a tail threshold and the time elapsed following the most recent data transfer conducted by the at least one non predicting connection as determined at block is substantially greater than a guard time e.g. as maintained by a guard time manager .

In order to provide further context for various aspects of the disclosed subject matter illustrates a non limiting example system that can implement some or all of the aspects described herein. As illustrates system can include a wireless terminal . In an embodiment wireless terminal can receive and transmit signal s to and or from wireless devices such as femto access points access terminals wireless ports and routers or the like through a set of N antennas . In one example antennas can be implemented as part of a communication platform which in turn can comprise electronic components and associated circuitry and or other means that provide for processing and manipulation of received signal s and signal s to be transmitted.

In an aspect communication platform can include a receiver transmitter or transceiver which can transmit and receive signals and or perform one or more processing operations on such signals e.g. conversion from analog to digital upon reception conversion from digital to analog upon transmission etc. . In addition transceiver can divide a single data stream into multiple parallel data streams or perform the reciprocal operation.

In another example a multiplexer demultiplexer mux demux unit can be coupled to transceiver . Mux demux unit can for example facilitate manipulation of signal in time and frequency space. Additionally or alternatively mux demux unit can multiplex information e.g. data traffic control signaling etc. according to various multiplexing schemes such as time division multiplexing TDM frequency division multiplexing FDM orthogonal frequency division multiplexing OFDM code division multiplexing CDM space division multiplexing SDM or the like. In addition mux demux unit can scramble and spread information according to substantially any code generally known in the art such as Hadamard Walsh codes Baker codes Kasami codes polyphase codes and so on.

In a further example a modulator demodulator mod demod unit implemented within communication platform can modulate information according to multiple modulation techniques such as frequency modulation amplitude modulation e.g. N ary quadrature amplitude modulation N QAM etc. phase shift keying PSK and the like. Further communication platform can also include a coder decoder codec module that facilitates decoding received signal s and or coding signal s to convey.

According to another aspect wireless terminal can include a processor configured to confer functionality at least in part to substantially any electronic component utilized by wireless terminal . As further shown in system a power supply can attach to a power grid and include one or more transformers to achieve a power level at which various components and or circuitry associated with wireless terminal can operate. In one example power supply can include a rechargeable power mechanism to facilitate continued operation of wireless terminal in the event that wireless terminal is disconnected from the power grid the power grid is not operating etc.

In a further aspect processor can be functionally connected to communication platform and can facilitate various operations on data e.g. symbols bits chips etc. which can include but are not limited to effecting direct and inverse fast Fourier transforms selection of modulation rates selection of data packet formats inter packet times etc. In another example processor can be functionally connected via a data or system bus to any other components or circuitry not shown in system to at least partially confer functionality to each of such components.

As additionally illustrated in system a memory can be used by wireless terminal to store data structures code instructions and program modules system or device information code sequences for scrambling spreading and pilot transmission location intelligence storage determined delay offset s over the air propagation models and so on. Processor can be coupled to the memory in order to store and retrieve information necessary to operate and or confer functionality to communication platform and or any other components of wireless terminal .

Turning to a non limiting example computing system or operating environment in which various aspects of the disclosed subject matter may be implemented is illustrated. One of ordinary skill in the art can appreciate that handheld portable and other computing devices and computing objects of all kinds are contemplated for use in connection with the disclosed subject matter e.g. anywhere that a communications system may be desirably configured. Accordingly the below general purpose remote computer described below in is but one example of a computing system in which the disclosed subject matter may be implemented.

Although not required various aspects of the disclosed subject matter can partly be implemented via an operating system for use by a developer of services for a device or object and or included within application software that operates in connection with the component s of the disclosed subject matter. Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Those skilled in the art will appreciate that various aspects of the disclosed subject matter may be practiced with other computer system configurations and protocols.

With reference to an example of a computing environment for implementing various aspects of the disclosed subject matter includes a general purpose computing device in the form of a computer . Components of computer can include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus can be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures.

Computer can include a variety of media which can include computer readable storage media and or communications media which two terms are used herein differently from one another as follows. Computer readable storage media can be any available storage media that can be accessed by the computer and includes both volatile and nonvolatile media removable and non removable media. By way of example and not limitation computer readable storage media can be implemented in connection with any method or technology for storage of information such as computer readable instructions program modules structured data or unstructured data. Computer readable storage media can include but are not limited to RAM ROM Electrically Erasable Programmable ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or other tangible and or non transitory media which can be used to store desired information. Computer readable storage media can be accessed by one or more local or remote computing devices e.g. via access requests queries or other data retrieval protocols for a variety of operations with respect to the information stored by the medium.

Communications media typically embody computer readable instructions data structures program modules or other structured or unstructured data in a data signal such as a modulated data signal e.g. a carrier wave or other transport mechanism and include any information delivery or transport media. The term modulated data signal or signals refers to a signal that has one or more of its characteristics set or changed in such a manner as to encode information in one or more signals. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

The system memory can include computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and or random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up can be stored in memory . Memory typically also contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation memory can also include an operating system application programs other program modules and program data.

The computer can also include other removable non removable volatile nonvolatile computer storage media. For example computer could include a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and or an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. A hard disk drive is typically connected to the system bus through a non removable memory interface such as an interface and a magnetic disk drive or optical disk drive is typically connected to the system bus by a removable memory interface such as an interface.

A user can enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices can include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through user input and associated interface s that are coupled to the system bus but can be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A graphics subsystem can also be connected to the system bus . A monitor or other type of display device is also connected to the system bus via an interface such as output interface which can in turn communicate with video memory. In addition to a monitor computers can also include other peripheral output devices such as speakers and a printer which can be connected through output interface .

The computer can operate in a networked or distributed environment using logical connections to one or more other remote computers such as remote computer which can in turn have media capabilities different from device . The remote computer can be a personal computer a server a router a network PC a peer device or other common network node or any other remote media consumption or transmission device and can include any or all of the elements described above relative to the computer . The logical connections depicted in include a network such local area network LAN or a wide area network WAN but can also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter. When used in a WAN networking environment the computer typically includes a communications component such as a modem or other means for establishing communications over the WAN such as the Internet. A communications component such as a modem which can be internal or external can be connected to the system bus via the user input interface of input or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof can be stored in a remote memory storage device. It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers can be used.

It is to be noted that aspects features and or advantages of the disclosed subject matter can be exploited in substantially any wireless telecommunication or radio technology e.g. Wi Fi Bluetooth Worldwide Interoperability for Microwave Access WiMAX Enhanced General Packet Radio Service Enhanced GPRS Third Generation Partnership Project 3GPP Long Term Evolution LTE Third Generation Partnership Project 2 3GPP2 Ultra Mobile Broadband UMB 3GPP Universal Mobile Telecommunication System UMTS High Speed Packet Access HSPA High Speed Downlink Packet Access HSDPA High Speed Uplink Packet Access HSUPA GSM Global System for Mobile Communications EDGE Enhanced Data Rates for GSM Evolution Radio Access Network GERAN UMTS Terrestrial Radio Access Network UTRAN LTE Advanced LTE A etc. Additionally some or all of the aspects described herein can be exploited in legacy telecommunication technologies e.g. GSM. In addition mobile as well non mobile networks e.g. the Internet data service network such as internet protocol television IPTV etc. can exploit aspects or features described herein.

Various aspects or features described herein can be implemented as a method apparatus system or article of manufacture using standard programming or engineering techniques. In addition various aspects or features disclosed in the subject specification can also be realized through program modules that implement at least one or more of the methods disclosed herein the program modules being stored in a memory and executed by at least a processor. Other combinations of hardware and software or hardware and firmware can enable or implement aspects described herein including disclosed method s . The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or storage media. For example computer readable storage media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical discs e.g. compact disc CD digital versatile disc DVD blu ray disc BD . . . smart cards and flash memory devices e.g. card stick key drive . . . or the like.

As it is employed in the subject specification the term processor can refer to substantially any computing processing unit or device comprising but not limited to single core processors single processors with software multithread execution capability multi core processors multi core processors with software multithread execution capability multi core processors with hardware multithread technology parallel platforms and parallel platforms with distributed shared memory. Additionally a processor can refer to an integrated circuit an application specific integrated circuit ASIC a digital signal processor DSP a field programmable gate array FPGA a programmable logic controller PLC a complex programmable logic device CPLD a discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. Further processors can exploit nano scale architectures such as but not limited to molecular and quantum dot based transistors switches and gates in order to optimize space usage or enhance performance of user equipment. A processor may also be implemented as a combination of computing processing units.

In the subject specification terms such as store storage data store data storage database and substantially any other information storage component relevant to operation and functionality of a component are utilized to refer to memory components entities embodied in a memory or components comprising a memory. It is to be appreciated that memory and or memory components described herein can be either volatile memory or nonvolatile memory or can include both volatile and nonvolatile memory.

By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory can include random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM . Additionally the disclosed memory components of systems or methods herein are intended to comprise without being limited to comprising these and any other suitable types of memory.

What has been described above includes examples of systems and methods that provide advantages of the disclosed subject matter. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the disclosed subject matter but one of ordinary skill in the art may recognize that many further combinations and permutations of the claimed subject matter are possible. Furthermore to the extent that the terms includes has possesses and the like are used in the detailed description claims appendices and drawings such terms are intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

