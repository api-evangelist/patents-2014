---

title: Ethernet point to point link incorporating forward error correction
abstract: A method of providing forward error correction on an Ethernet point-to-point link, constituted of: receiving at one end of the point-to-point link an input data stream, wherein the input data stream is a 10 bit symbol encoded serial data stream at a first data rate; decoding the 10 bit encoded data stream to a 9 bit symbol data stream; increasing the data rate of the 9 bit symbol data stream to a second data rate; for each segment of a predetermined number of 9 bit symbols generating a respective plurality of parity symbols; combining the segments and the generated respective plurality of parity symbols into FEC appended segments; encoding the FEC appended segments into an output 10 bit symbol encoded data stream; and transmitting the output 10 bit encoded stream on the point-to-point link at the second data rate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09564991&OS=09564991&RS=09564991
owner: Microsemi Frequency and Time Corporation
number: 09564991
owner_city: San Jose
owner_country: US
publication_date: 20141030
---
The present invention relates to the provision of forward error correction for an Ethernet point to point link

Forward error correction FEC usually implemented by Reed Solomon generation of parity symbols is a desirable features of Ethernet point to point links. However existing protocols for Ethernet point to point links at least those operating at 1 Gb s either do not provide FEC or do so in a manner which imposes a degradation of the data rate or a substantial variable latency in the link.

For example in the ITU T recommendation G.709 Interfaces for Optical Transport Network OTN an FEC scheme that operates on OTN frames is defined where each frame is a fixed size and FEC imposes a data throughput degradation.

IEEE 802.3 Clause 65 which is addressed to a 1 Gigabit per second Ethernet Passive Optical Network EPON does include a FEC option but operates for a point to multipoint architecture that forces the Ethernet preamble to be overwritten with a logical link identifier LLID mode and start of LLID delimiter SLD fields. It forces the media access control MAC to implement interpacket gap IPG stretching to accommodate the FEC parity symbols and therefore degrades the data throughput by at least 7 . Moreover it imposes a variable receiver packet latency equivalent to the packet size.

IEEE 802.3 1G 1000 BaseX point to point Ethernet does not include any options for FEC. Data in IEEE 802.3 1G 1000 BaseX point to point Ethernet is typically transmitted as 10 bit symbols encoding 8 bit symbols so as to ensure balance on the transmission medium in a process known as 8B 10B encoding.

The present invention employs a method of FEC encoding in which the parity symbols are interspersed in the packet data. For this purpose the packet delimiters may be used as FEC block markers. A preferred form of the invention allows the use of a low latency FEC block The scheme preferably employs rate gearing to avoid degradation of the data throughput. Other features and advantages of the scheme will become apparent after a detailed description of a preferred form of the invention.

Since a scheme according to the exemplary embodiment preferably employs auto negotiation so as for example to determine whether both ends of a link are capable of encoding and decoding forward error correction a typical auto negotiation process will be described with reference to . The example is auto negotiation according to IEEE 802.3 clause 37.

The process starts after a reset or when the receive synchronisation state machine indicates SYNC FAIL.

In general a local side transmits a sequence of code words for durations of time governed by a link timer typically 10 ms . The transmitted code words advertise the capabilities of the local side e.g. full half duplex flow control speed and are received by a remote end. Each transmitted code word is composed of symbols that have been encoded using 8B 10B encoding rules. There are two code words used in the phases of auto negotiation configuration and idle code words.

In stage the local side first transmits configuration code words with a capability field of all zeros for a link timer interval. This allows the remote end to synchronise to data stream.

In stage the local side then starts to transmit configuration code words with a non zero capability field advertising its abilities. In the event that in stage the local side receives three consecutive good configuration code words from the remote end in stage the local side transmits code words with the local side capability and asserts an acknowledge bit to the remote end. In the event that the local side does not receive three consecutive configuration code words auto negotiation according to the prior art is initiated again.

In the event that in stage the local side receives three consecutive good configuration code words i.e. error free configuration code words containing the asserted acknowledge bit of stage in stage the local end continues to transmit the configuration code words to the remote end with the acknowledge bit for a link timer interval. In the event that in stage the local side does not receive three consecutive good configuration code words containing the asserted acknowledge bit of stage auto negotiation according to the prior art is initiated again.

In stage the local side transmits an IDLE code word for a link timer interval and during this time resolves the local and remote capabilities responsive to the received configuration code words of stage .

In stage in the event that the local side has received three consecutive good IDLE code words at the end of the timer interval in stage auto negotiation is complete and the local side sets a register indicating that it can transmit data in accordance with the resolution of stage . In the event that in stage the local side has not received three consecutive good IDLE code words at the end of the timer interval auto negotiation according to the prior art is initiated again.

In this example both ends of the link power up operating at 1.25 Gb s and with the FEC initially disabled.

In each of the right hand path in the figure is arranged to perform auto negotiation as described above in relation to and the left hand path is arranged to handle the sending and receiving of packets. For convenience the auto negotiation portions will be described first.

The transmitter in a physical coding sublayer PCS starts auto negotiation by sending configuration code words C and C with a null capability field for a link timer interval of 10 ms as described above in relation to stage . This allows the remote end receiver to lock and find symbol synchronisation with local side. The PCS layer configuration code words are received by a 10B 8B decoder which decodes the 10 bit symbols of the configuration code words to 8 bit symbols. The 8 bit symbol decoded configuration code words are received by an FEC auto negotiation code inserter .

Configuration code words C C are transmitted by PCS with their advertised capabilities K28.5 D21.5 advertised capability C followed by K28.5 D2.2 advertised capability C repeated as described above in stages and .

The advertised capability contains bits to indicate capabilities such as speed flow control fault handling. The 16 bit quantity referred to as CONFIG REG in IEEE 802.3 contains unused bits and in this example one of them is used to carry the FEC capability the bit then denoted FEC AN. FEC auto negotiation code inserter is thus arranged to set an unused bit the configuration code words C C received from PCS . This may be achieved by an overwrite in FEC auto negotiation code inserter of the FEC AN bit.

The adjusted configuration code words C C are then encoded by the 8B 10B encoder and sent by way of a multiplexing gate to a serialiser not shown for transmission on the link to the remote end. The FEC AN bit is detected in the receiver as described below. The choice of the FEC AN bit can be under software control by providing a mask register that is logically OR ed with the transmitted field from the PCS layer in the FEC auto negotiation code inserter . Alternatively it can be configured to a fixed position.

In the receiver shown in aligned 10B characters received from the link by way of a deserialiser not shown are coupled to a synchronisation block and the output of synchronisation block is coupled by way of a 10B 8B decoder to an FEC auto negotiation detect enable block . The output of FEC auto negotiation detect enable block which is coupled by way of an 8B 10B encoder and a gate to PCS .

The synchronisation block in the receiver waits until it has gained symbol synchronisation and then asserts the signal RX SYNC to FEC auto negotiation detect enable block . In the event that the FEC auto negotiation detect enable block then detects the FEC AN bit set in three consecutive good configuration codes the receiver knows the remote end is FEC capable. FEC auto negotiation detect enable block then responsively asserts the signal ENABLE FEC to gates and at the end of the auto negotiation process to enable the local tx and rx FEC data paths as will be described further below. FEC auto negotiation detect enable block also assert symbol RESTART AN to requests the PCS layer to start auto negotiation in accordance with standards based auto negotiation .ENABLE FEC remains asserted until the link is lost the power is cycled or the device is reset.

In this scheme therefore the default operation is a non FEC data path but with advertisement of FEC capability. If the remote partner supports FEC the FEC data path is enabled otherwise the default non FEC data path is maintained.

It is preferred to run the line speed for data transmission between the local end and the remote end at a higher rate than usual to accommodate the FEC symbols and thereby not to degrade the data throughput. To achieve this the scheme includes rate gearing during both transmit and receive. This rate gearing marginally increases the data rate to enable parity symbol insertion in the transmitter and correspondingly decreases the data rate after error correction in the receiver. In the specific example the original data rate of the packets from the PCS is 1.25 Gb s i.e. 125 MHz and is increased to nominally 1.35 Gb s i.e. 135 MHz in the transmitter and decreased back to 1.25 Gb s in the receiver.

Not shown in since they may be of known configuration are a MAC layer and a Reconciliation Sublayer RS which precede the PCS on transmit and vice versa on receive . These output a GMII signal comprising an 8 bit character TX D and a TX EN signal. The signal TX EN is asserted low during inter packet gaps and high for packets. The PCS layer detects transitions in the TX EN signal to determine packet boundaries. It can then determine when to drive the control variable as a D or a K into the encoder. It drives the control variable as a K for start of frame end of frame and IPG control words and as a D for data packet bytes including the preamble of the data packet.

The 8B 10B transmission code has a high transition density is a run length limited code and is dc balanced. The transition density of the 8B 10B symbols ranges from 3 to 8 transitions per symbol and allows clock recovery at the receiver to take place.

8B 10B encoders take an 8 bit character and a control variable as inputs and generate a 10 bit output. Decoders operate conversely. The control variable has either the value D or K. As noted above when it contains the D value the corresponding 8 bit character is a data character and the encoder encodes as a data code group. When the control variable contains a K value the corresponding 8 bit character is a control character and the encoder encodes as a special code group. Special code groups are used in start of frame end of frame IDLE and configuration code words.

The output of PCS of the transmitter is further received by a 10B 8B decoder and the output of 10B 8B decoder is received by a rate gearing FIFO controlled by a rate gearing state machine . The output of rate gearing FIFO is fed to an FEC block . This block generates for each predetermined size segment of the packet e.g. 239 symbols a respective set of parity symbols e.g. 16 symbols . Thus the latency introduced by enabling FEC is limited to one FEC block i.e. n symbols where the coding is n k using a symbol width w k parity symbols for each n data symbols In this example n 239 and k 16 and w 8 so the latency is limited to 239 bytes.

Both packet data and the generated parity symbols of FEC block pass through a sequencing gate to a combining gate . Sequencing gate acts to place the generated parity symbols of FEC block in a predetermined location in the data stream in relation to the packet data. In one non limiting embodiment the parity symbols are placed immediately subsequent to the data symbols from which they are generated. Control code words and packet framing codes are translated to FEC codes in a packet boundary character translation block and these codes additionally proceed to combining gate . The output of combining gate is encoded by an 8B 10B encoder and is coupled to an input of multiplexing gate . The output of the multiplexing gate is sent to the serialiser not shown for transmission on the link as described above. Control of multiplexing gate is responsive to signal ENABLE FEC output by FEC Autonegotiation detect enable block .

On transmit FEC block flow controls the data stream when it generates parity symbols. During that time the rate gearing FIFO stores any incoming symbols from the PCS . The FIFO has a fill rate of 1.25 Gb s and an empty rate of nominally 1.35 Gb s. A low latency FEC scheme is preferred so that the flow control is generated only at the end of each block code i.e. the predetermined size segment of the packet. There must therefore be at least enough space in the rate gearing FIFO equivalent to 16 parity symbols at the higher rate of 1.35 Gb s.

In this specific case 16 symbols at 135 MHz 14.8 symbols at 125 MHz so a minimum space of 15 symbols is required.

However there is also an added practical consideration. There may be periods of time during which no packets are transmitted and only IPGs consisting of IDLE code words are sent. There is no requirement for FEC encoding for any IPG bytes so no flow control is invoked. However the rate gearing state machine preferably monitors the depth of rate gearing FIFO to ensure that an underrun does not occur where the emptying rate being higher than the filling rate. To prevent such an underrun rate gearing FIFO inserts IDLE characters into the data stream as required responsive to a command from rate gearing state machine .

On the receive side an FEC decoder block sends corrected blocks of packet data to a rate gearing FIFO during packet reception. After a corrected block of packet data is sent there can be a gap before the next corrected block of packet data is sent as the parity symbols are deleted from the data stream. The rate gearing FIFO has a fill rate of nominally 1.35 Gb s and an empty rate of 1.25 Gb s. A rate gearing state machine thus monitors the depth of rate gearing FIFO and determines an appropriate space to start emptying rate gearing FIFO . Advantageously such an operation prevents false detection of an underrun by PCS . This space is for the particular rates chosen 15 symbols as indicated above.

Similar to the transmit case there may be periods of time during which no packets are transmitted and only IPGs consisting of IDLE code words are received. There is no requirement for FEC encoding for any IPG bytes so gaps may be present on the filling side of rate gearing FIFO . Rate gearing state machine thus preferably monitors the depth of rate gearing FIFO to ensure that an overrun does not occur as the emptying rate is lower than the filling rate and will preferably delete IDLE characters from the data stream to prevent such an underrun.

In the scheme illustrated in FEC is applied only to the packet data in the succession of segments in the data stream i.e. not to any control characters or codes however this is not meant to be limiting in any way. As will be explained below a simpler embodiment employs FEC coding for the entire data stream i.e. the packets IPGs and any transmitted control characters.

The FEC scheme described with reference to is illustrated with an RS 255 239 encoder with a symbol width of 8 bits. This generally satisfactory but has two practical disadvantages in relation to shortened codes wherein a block size of fewer than 239 symbols is encoded. This can occur when a packet having fewer than 239 bytes is transferred. For example if a packet of 64 bytes is transferred then using the scheme of parity symbols would be appended to the 64 bytes in a shortened code word. A first disadvantage is that the overhead increases from a nominal 7 to 25 in this example requiring a higher line rate. A second disadvantage is a probable decrease in effective throughput. FEC decoders generally have a processing delay that is dependent on the block size. This affects the ability of the decoder to accept continuously consecutive blocks and therefore the effective rate of throughput. If shortened codes such as 64 bytes are handled by a 239 byte block the effective throughput falls dramatically. It is possible to employ parallel decoders but at the cost of an increased gate count.

The input to the rate gearing FIFO comprises 8 bit characters each with a control data bit K. Since each symbol is now 9 bits wide the FIFO feeds a 9 bit FEC block . In a non limiting example FEC block employs an RS 511 479 coding. The data received from rate gearing FIFO and the parity symbols generated by FEC block are gated in an sequencing gate and are output to an 8B 10B encoder .

As in the transmitter of preferably rate gearing state machine control rate gearing FIFO so as to ensure that rate gearing FIFO never underruns which is potentially possible because the fill rate is 125 MHZ and the emptying rate is nominally 135 MHz. Thus in the particular embodiment illustrated for every 479 symbols written into rate gearing FIFO 479 symbols are read out and 32 symbols of stall occur on the 135 MHz side.

Numerically 479 symbols at 125 MHz occupy 3832 ns. 479 symbols and 32 stall cycles at 135 MHz occupy 3785 ns so the underruns over each 479 symbol block equals 47 ns corresponding to 7 symbols at 135 MHz. Since IDLEs may be inserted only during interpacket gaps and a jumbo frame may be 10 400 bytes 22 479 blocks rate gearing FIFO preferably remains above 154 symbols 7 22 at all times to prevent an underrun.

Similar calculations may be used if the higher rate is different form 135 MHz. For example if the reading side operated at 133.5 MHz the minimum occupancy of rate gearing FIFO would be only 0.5 symbols per 479 symbol block i.e. 11 symbols so rate gearing FIFO would need fewer gates.

The schemes as described above have several important advantages. They provide a low latency FEC block operating within packet boundaries within an Ethernet data stream. They use rate gearing on transmit and receive to ensure the data throughput is not degraded.

The auto negotiation process enables FEC on both ends of the link while maintaining backwards capability with legacy 1000BaseX auto negotiation. This can be achieved without any need to overwrite any preamble fields.

The schemes can be coupled with Ethernet CFM for visibility into SLA error statistics and connectivity checking.

It is appreciated that certain features of the invention which are for clarity described in the context of separate embodiments may also be provided in combination in a single embodiment. Conversely various features of the invention which are for brevity described in the context of a single embodiment may also be provided separately or in any suitable sub combination.

Unless otherwise defined all technical and scientific terms used herein have the same meanings as are commonly understood by one of ordinary skill in the art to which this invention belongs. Although methods similar or equivalent to those described herein can be used in the practice or testing of the present invention suitable methods are described herein.

