---

title: Methods and system for providing real-time business intelligence using search-based analytics engine
abstract: The methods and systems for providing real-time business intelligence using search-based analytics engine facilitate a user to input a natural language query with regard to business analytics and obtain an analytics report in response without the user aggregating or processing raw data from a database query. Such business intelligence platform may receive a data analytics request including a user-desired data variable via a user interface; receive, via the user interface, user-configured parameters identifying a user-selected data source and a user-defined data set; form the user-defined data set based on user-configured parameters; query the user-defined data set to obtain a query result of the user-desired data variable; and generate a user interactive graphical representation of the query result of user-desired data variable.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09501585&OS=09501585&RS=09501585
owner: DataRPM Corporation
number: 09501585
owner_city: Fairfax
owner_country: US
publication_date: 20140613
---
This application is a non provisional of and claims priority under 35 U.S.C. 119 to U.S. Provisional Application No. 61 834 608 filed on Jun. 13 2013 entitled Methods and System for Providing Real Time Business Intelligence Using Search Engines Based On Natural Language Queries. 

This application is related to co pending U.S. Non Provisional application Ser. No. 14 304 487 filed on the same day herewith entitled Methods And System For Providing Real Time Business Intelligence Using Natural Language Queries. 

Some embodiments described herein generally address apparatuses methods and systems for intelligent data analytics and more particularly include methods and system for providing real time business intelligence using search based Analytics Engine.

Known data analysis and business intelligence systems use data warehouses and or build Online Analytical Processing OLAP cubes for pre computing business data in search of business intelligence. The data in a data warehouse is generally queried using database development structured programming languages such as Structured Query Language SQL . A user such as a database administrator typically inputs a SQL query into the business data warehouse and in turn receives the query results in a SQL format. Upon obtaining the query results the user can compile the query results to generate business intelligence reports by utilizing a document processing tool such as Microsoft Word or PowerPoint to generate data charts and data plots to graphically illustrate the query results.

Some embodiments described herein relate generally to providing real time data analysis reporting and business intelligence related to data stored in various sources and more particularly to providing real time business intelligence to users irrespective of users technical knowledge using natural language interfaces.

In some embodiments methods and system provide a substantially real time statistical analysis and computation engine developed based on search engine technology to store and access data in index files without using data warehouses that store data in databases. The methods and system also provide a natural language and search based interface to analyze data and generate reports without a need for writing SQL queries or using software configurations for creating reports.

A real time business intelligence platform using search engine based database queries allows a user to obtain business analytics reports by submitting a natural language based question via a user interface without manually aggregating raw data from a database query. For example a user may input a question in a natural language via a user interface e.g. see in by either manually typing the question or speaking the question via a microphone and or the like. The user may optionally configure data sources and or data sets for the query via a user interface e.g. see so as to define the scope of data queries. A natural language processing module e.g. see in may process the natural language based question and translate the question into a database query in the format of a structured database language such as SQL and or the like. The generated query may be used by a search engine controlled module e.g. see in to query a database e.g. see in for the desired data. In one implementation the business intelligence platform enables data discovery and business intelligence from disparate data sources where the sources in themselves may be non relational in nature with variable data structures or schema and may include metadata structural information that is not readily available. These include sources like Hadoop or NoSQL data log files machine data and others. In one implementation the business intelligence platform analyzes a context of the natural language query based the data obtained from various data sources and on structural information obtained from the natural language question.

In one implementation the business intelligence platform indexes data from disparate sources into a computation search engine designed for real time ad hoc multi dimensional analysis. The search engine may be used as an underlying data storage that enables fast multi dimensional lookups in real time which enables real time processing of a natural language question using cross functional dependency algorithms without a time lapse.

Introduction of statistical analysis engines based on the search engine technology in the field of data analytics and business intelligence provides various benefits over typical data warehouse approaches to statistical data analysis and reporting. Some example disadvantages of using data warehouses include ability to only support pre configured analysis methods such as using static formats for dashboards reports and slice dice and drill down capabilities long deployment cycle for design and implementation of data warehouses inflexibility of data warehouses for supporting ad hoc changes to data because of the fixed schema of databases regular maintenance hassles associated with databases for optimal performance and performance and scalability issues in handling high volumes of data.

Search engine technology provides data indexing from a data source in a de normalized schema free way. The search engine technology using indexed data enables ad hoc data analysis and rapid deployment because the deployment does not require a specific design. In addition search engine technology provides flexibility to handle dynamic changes in data as individual records are stored as columnar key value pairs. Furthermore scalability and fast access to the data even for high volumes can be provided with minimal maintenance. A higher storage level security than databases can be provided because the data can be stored in distributed binary index files. In addition the data is not query able by any other methods except through a provided query engine.

Known text or content based search engine technology however does not natively render itself for analytics and business intelligence use. Therefore a need exists for a computational data search engine technology that incorporates statistical analysis mathematical and logical computation engines and visual transformation and rendering to function based on search engine technology to support comprehensive data analysis capabilities. The computational data search engine can be a search engine technology infused with statistical aggregation and a data analysis engine that operates on search index files in the field of data analytics and business intelligence providing various benefits over typical data warehouse approaches to statistical data analysis and reporting. More generally such a computational engine can be based on for example statistical logical mathematical heuristics and or algorithmic calculations.

Often data analysis is mainly accessible to users with technical skills or to business intelligence experts because data analysis is based on either writing code or using complex software interfaces to query and visualize data and reports. In some embodiments a business intelligence platform provides data analysis capabilities to a user irrespective of the user s technology or business intelligence skills by providing a simple natural language based question and answer system and a computational search based interface to ask questions or to perform search and data analysis and receive reports. For example the business intelligence platform can use index files based on computational data search engine technology. Such a platform can provide natural language and search based interfaces to analyze data and generate reports substantially in real time without requiring a user to write queries in a query language e.g. SQL or use software configurations for generating reports.

In some embodiments the business intelligence platform can provide data data analysis and reports to the user substantially in real time without having to customize data beforehand. The business intelligence platform also provides a natural language processing engine that translates user questions and queries into appropriate analytics queries and then maps the results using a rule engine to appropriate visualization modules.

As used herein the singular forms a an and the include plural referents unless the context clearly dictates otherwise. Thus for example the term a data analysis is intended to mean a single data analysis or a combination of data analyses e.g. data analyses associated with a series of applications services locations products etc. 

Communication network can be any communication network such as the Internet configurable to allow the one or more UEs the one or more search engine servers and the business intelligence platform to communicate with communication network and or to each other through communication network . Communication network can be any network or combination of networks capable of transmitting information e.g. data and or signals and can include for example a telephone network an Ethernet network a fiber optic network a wireless network and or a cellular network.

In some instances communication network can include multiple networks operatively coupled to one another by for example network bridges routers switches and or gateways. For example the UEs can be operatively coupled to a cellular network and the business intelligence platform can be operatively coupled to a fiber optic network. The cellular network and fiber optic network can each be operatively coupled to one another via one or more network bridges routers switches and or gateways such that the cellular network the Ethernet network and the fiber optic network are operatively coupled to form a communication network. Alternatively the cellular network and fiber optic network can each be operatively coupled to one another via one or more additional networks. For example the cellular network and the fiber optic network can each be operatively coupled to the Internet such that the cellular network the fiber optic network and the Internet are operatively coupled to form a communication network.

As illustrated in UEs are operatively coupled to communication network via network connection s business intelligence platform is operatively coupled to communication network via network connection s search engine servers are operatively coupled to communication network via network connection s and data source s are operatively coupled to communication network via network connection s . Network connections and can be any appropriate network connection for operatively coupling UEs business intelligence platform the search engine servers and the data source s . Furthermore the business intelligence platform can have a direct connection with search engine server s via a communication and the search engine server s can have a direct connection to the data source s via communication .

A network connection can be a wireless network connection such as for example a wireless fidelity Wi Fi or Wireless Local Area Network WLAN connection a Wireless Wide Area Network WWAN connection and or a cellular connection. A network connection can be a wired connection such as for example an Ethernet connection a Digital Subscription Line DSL connection a broadband coaxial connection and or a fiber optic connection.

As mentioned above in some instances a communication network system can include more than one UE more than one search engine server and more than one data source . A UE and or a search engine server can be operatively coupled to the communication network by heterogeneous network connections. For example a first UE can be operatively coupled to the communication network by a WWAN network connection another UE can be operatively coupled to the communication network by a DSL network connection and a search engine server can be operatively coupled to the communication network by a fiber optic network connection.

The search engine server s each can be for example a web server configured to provide search capabilities to electronic devices such as UEs . The UE can be in communication with the search engine server s via the communication network while the communication is managed by the business intelligence platform . For example the business intelligence platform can send a signal to control the communication between the UE and the search engine server s .

The UEs can be any of a variety of electronic devices that can be operatively coupled to communication network . A UE can be a personal computer a tablet computer a personal digital assistant PDA a cellular telephone a portable mobile internet device television kiosk display display screens in vehicles projection devices laser display devices digital display watches digital display glasses and or some other electronic communication device with audio and or visual capabilities. A UE can also be a television set a streamer device a set top box or any other electronic device equipped with a display unit a UI and a network connection that enables the device to run applications on an operating system. A UE can be operatively coupled to communication network via the UI and network connection . The UEs each can include a web browser configured to access a webpage or website hosted on or accessible via the business intelligence platform over communication network . The UEs can be configured to support for example Hyper Text Markup Language HTML using JavaScript. For example the UEs can include a web browser such as Firefox Safari Dolphin Opera Internet Explorer IE and Chrome . An Internet page or website can be accessed by a user of a web browser at a UE by providing the web browser with a reference such as a uniform resource locator URL for example of a webpage. For example a user of a UE can access a search engine server via a URL designated for the search engine server . In some instances UEs each can include specialized software other than a browser for accessing a web server such as for example a search engine server . Specialized software can be for example a specialized network enabled application or program provided by the business intelligence platform . In some instances portions of a website accessible via a web server can be located in a local or remote memory space data store accessible to the web server.

Data source s can be distributed sources of data throughout the communication network system . A data source can be at least one of a database a data warehouse a file etc. A UE can also include a display monitor or user interface UI a keyboard various ports e.g. a USB port and other user interface features such as for example touch screen controls audio components and or video components each not shown .

In various instances the business intelligence platform and its components can be located anywhere within a communication network system such as that shown in including but not limited to within the UEs or in separate locations within the communication network system of . The business intelligence platform can also be provided as on premise deployment via private computation clouds or be embedded into other software or bundled into devices by Original Equipment Manufacturers OEMs .

As used herein a module can be for example any assembly and or set of operatively coupled electrical components and can include for example a memory a processor electrical traces optical connectors software executing or to be executed in hardware and or the like. Furthermore a module can be capable of performing one or more specific functions associated with the module as discussed further below.

In some embodiments the business intelligence platform can provide an analytics platform as a Software as a Service SaaS such that for example the business intelligence services are centrally hosted on the information cloud not shown for independent software vendors system integrators analytics consultants enterprises etc. to build multi tenant business intelligence and embedded analytics solutions for external and internal customers for example by using a browser. The business intelligence platform can enable users to mashup data from various sources for real time ad hoc analysis build reports with rich visualizations and dynamic dashboards and collaborate in place among stakeholders to make informed decisions. The business intelligence platform can provide capability of reducing data into smaller parts or views that can yield more information e.g. slice and dice drill downs and search on data. For example a multi dimensional data structure can be considered as a data cube and the act of picking a rectangular subset of a data cube by choosing a single value for one of its dimensions can define a new data cube with one fewer dimension e.g. slice operation . Other operations can produce sub cubes for example by allowing an analyst to pick specific values of multiple dimensions e.g. dice operation . Furthermore a drill down up operation allows the user to navigate among levels of data ranging from the most summarized up to the most detailed down .

In some instances the business intelligence platform receives an input via the input signal representing a question entered by a user of a UE . The UE for example can be equipped with sound input devices and a user can enter a question as a speech input by speaking into a microphone. In such instances the speech to text converter module can convert the speech into text e.g. as a HTTP request and send a signal representing the input query to the natural language processing module .

In some instances the speech to text converter module can send a signal representing the converted request to the meta information lookup module . The meta information lookup module can search the data store s or a data source s for keywords matching the query. The meta information module can store the keywords in data store s . The keywords can be used for suggesting search phrase completions to the user of UE for example when user is typing a question.

In some instances the natural language processing module receives the query and translates the query into an analytics query e.g. a query including logical reasoning for finding an answer . For example if a question in English asks for all sales in the business intelligence context the natural language processing module can translate the question to total sales . The natural language processing module can send a signal to the analytics engine module representing the analytics query. Furthermore the natural language processing module can define a presentation type e.g. line chart pie chart etc. for the query results using the visualization rules . Further embodiments of the natural language processing module and or its functionality are provided in co pending U.S. non provisional application Ser. No. 14 304 487 entitled Methods and System for Providing Real Time Business Intelligence using Natural Language Query Answer which is herein expressly incorporated by reference.

In some instances the analytics engine module can operate as the primary computational engine which transforms the analytics query into a search query and sends a signal representing the search query to the search engine controller module . The search engine controller module can perform a parallel distribution of the search query to one or more search engine server s shown as in for example via an output signal shown as in . The search engine s performs search on various distributed search index nodes and sends a signal not shown representing the search results to the analytics engine module .

In some instances the indexing module collects parses and stores search data in search index nodes via connections to facilitate fast and accurate information retrieval. The indexing module is described in more detail herein with regards to .

In some instances the analytics engine module can receive data from the search engine controller module and perform real time computations on the data based on statistical mathematical logical heuristic and or algorithmic functions to generate computed and aggregated results. The results can be further visually transformed based on the visualization rules and presented to the user of UE .

In some instances the user can define rules and or formulas by which the indexing module or the analytics engine module can calculate derived and or computed attributes from the original data. The user defined rules and formulas can be received from a UE via an input signal and stored in data store . The attributes computed by the analytics engine module may not be directly present in the original data and derived or computed from other attributes present in the original data using the rules and or formula defined by the user. The user defined rules and or formulas can be applied on the data before the data is indexed by the indexing module or at run time before presenting the query results to the user via a UE . In some instances the analytics engine module receives the search results and performs statistical computations aggregations etc. on the results e.g. in parallel . The analytics engine module can store the analysis results in data store s .

In some instances the report module produces reports from the analysis results for example by applying the visualization rules to the results. The visualization rules can provide guidelines for reports such as for example chart types colors formats etc. The visualization rules can be interactively managed. Thus the visualization rules can be modified or trained by self learning using machine learning techniques. For example the visualization rules can be trained such that total sales report is presented as pie chart while comparative sales report e.g. among branches of an enterprise can be presented as bar charts to enable comparison based on history of users report selections. The report module can use machine learning techniques to learn e.g. train visualization rules based on data data types data analysis types data analysis results user selection history etc. In some instances a user of UE is given the capability to change presentation of data such as for example graph type table formats etc. In some instances the reports produced by the report module are stored in data store s and are available until changes e.g. updates inserts deletes etc. in source data is recognized. In such change instances the stored reports are erased from the data store s and new reports are produced based on the new data.

In some instances the business intelligence platform can receive user feedback via the UI of UE of to train and automatically improve various modules such as for example the natural language processing module the speech to text converter module the meta information lookup module the analytics engine module or the report module . The business intelligence platform can also use the user feedback for improving the visualization rules . These improvements enable the business intelligence platform to automatically adapt to different use cases and become more accurate in delivering results for various queries in various use cases over time. The user feedback can be provided either directly by the user via UE or collected automatically by the business intelligence platform for example based on the usage patterns of various users.

In one implementation when a user asks a question through a user interface e.g. via in and or submits a request to obtain a business analytics report the natural language processing module e.g. in may produce an intermediate query format. A query optimizer may then define an execution path for the intermediate query formatted query and this query gets transmitted to each of the shards e.g. shards can exist in same machine or different machine . Each node engine e.g. may run a search query on the local index the distributed node is based on e.g. search index for server nodes and select the eligible data.

The indexing module may employ a just in time memory mechanism for data retrieval. Because each column of a data set may be indexed independently instead of loading entire row data for the columns of interests can be loaded to memory in response to the server node engines e.g. running the search query. In this way the data input output and transmission volume may be reduced and usage of the memory is improved. In another example the index module may make efficient use of disk cache. For example when a search requires a high memory e.g. when the search is performed at a Cheetah system the search engine controller module can keep track of available memory and start using disk cache when system resources such as memory space is low. In this way the search engine could be maintained without interruption due to resource unavailability.

In one implementation the selected data from each node engine may go through multi phased search aggregation to be aggregated. For example a post local search aggregator may be employed which selects one master node from the server nodes and does the final aggregation on the master node. This aggregated data is then converted into a user representable format and displayed using different visualization techniques. In another example the indexing module in may employ sharded compressed bit map indexing techniques where data is stored in multiple shards which are configurable based on the data size. In another example the indexing module can employ multi level search aggregators so that the data is distributed in 10 shards e.g. and each shard is placed in a separate server node see e.g. placed in placed in and or the like. When an analytics query is initiated it may be sent to each of these server nodes . In this case each server node performs search aggregation for the data that belongs to that server node and returns the data to the master server node for the final aggregation. This mechanism could reduce the amount of data movement across a given server node which improves overall efficiency in data search and aggregation in addition to making use of parallel computation.

In some instances the indexing module of executes a data processing pipeline . The indexing module can receive the data selected by the user from data sources and process the data through the data processing pipeline by for example combining and indexing the data. For example the data processing pipeline can include one or more database connectors not shown in to pull data from the customer databases and one or more custom connectors not shown in to pull data from the third party data systems . The data processing pipeline can receive data associated with customer applications from a UE via an Application Programming Interface API not shown in . The data processing pipeline can also receive customer files from UE via UI or for example via a Secure Shell File Transfer Protocol SFTP .

Data indexing process for example can include defining a data structure that improves the speed of data retrieval operations. For example indices can be defined using one or more columns of a database table providing the basis for both rapid random lookups and efficient access of ordered records. In addition mashup process can be also performed on the data for example by the indexing module . A mashup process enables the data from various sources to be combined to produce new data sources or newly searchable data sources . The term mashup includes for example easy fast integration frequently using open application programming interfaces API and data sources to produce results e.g. answers to queries that may not be related to the original reason for producing the raw source data. The mashup process by the data processing pipeline can be performed based on processes of Extract Transform Load ETL layer associated with a database or a data warehouse not shown in . An ETL process can extract data from various data sources such as relational databases such as for example Oracle MySQL MS SQL Server PostGreSQL DB2 etc. non relational databases and NoSQL storages such as for example MongoDB Cassandra CouchDB Redis HBase Hive etc. distributed file systems such as for example Apache s Hadoop file systems etc. other storage systems such as for example Netezza Terradata SAP Hana etc. third party software or services such as for example Salesforce NetSuite MS Dynamics MS Dynamics GP SugarCRM etc. In some instances the indexing module can store the newly produced data sets by the data processing pipeline in data store s . The data sets are de normalized conceptual data entities extracted from data sources to be used for defining search index nodes .

In some instances a search engine indexer similar to the search engine control module can use the data sets to define distributed search index nodes . The distributed search index nodes can be similar to search index nodes . The search index nodes can include data extracted transformed and loaded by the ETL layer .

As shown in the user may optionally select data sources for the user s inquiry at e.g. see . The user by operating a user compute device can send a signal representing configuration parameters with regard to a selected data source to the business intelligence platform . The business intelligence platform may optionally send an access request to the user selected data source s at and in response the data source s may authorize data access of the business intelligence platform e.g. at .

As shown in the business intelligence platform can define whether the user elects to further define a data set for the query at . If no data set was previously defined the user may optionally define the data set at . For example the user may select data fields from a data table in a data source to define a customized data set e.g. see . After the data set is defined or a previously defined data set is identified the business intelligence platform may aggregate the data source and defined data sets at and prepare to perform a data query.

Continuing on with the user can input via a user interface at the user compute device a natural language question at which may be input before or after the user has configured the data source s and or defined the data set s . The user via the user compute device can send a signal representing the natural language question to the business intelligence platform . The business intelligence platform can translate the natural language question into a query string at e.g. via the natural language processing module in and query the aggregated data sources and or defined data sets at . In response to the query the data sources can provide raw data as query results at .

In one implementation the business intelligence platform may provide the raw query data to the user via the user compute device upon user request e.g. in a spreadsheet format or a .csv file for the user to download etc. In another implementation the user may elects via the user compute device to obtain the business analytics query results in a report format at . If the business intelligence platform determines a report is requested by the user at the user can elect via the user compute device to configure report format at e.g. chart type desired display parameters etc. . The user compute device can send a signal representing the report election to the business intelligence platform . The business intelligence platform may in turn generate graphical representation of the query results at which may be generated as output via a user interface at e.g. see .

With reference to a user may interact with the business intelligence platform via a user interface through the user compute device to dynamically change the graphical representation of business analytics query results. In one implementation the business intelligence platform may provide a graphical representation of data query results and the user may submit via the user compute device an analytics request on a data point of the graphical representation of query results at e.g. a data plot curve etc. such as clicking or moving the mouse over a data point on a data plot curve etc. In one implementation business intelligence platform can provide an engageable widget at such as but not limited to a dialog box a drop down menu and or any user interactive user interface widget which is triggered by a mouse click and or the mouse moving over to a data point. An example engageable widget may include an analytics box on the selected data point e.g. see the drill down drop box in which may be used for interactive filtering of the data query results based on an age group a deal type a deal name etc. . The user can submit the configuration parameter at and the business intelligence platform can in turn dynamically update the data analytics for the data point associated with the user submitted configuration parameter at and adjust the graphical representation of analytics data query results at .

In some instances a user can sign into the business intelligence platform using a user ID and a Password. After signing in the user can define a project by for example defining a project name and a logo . By clicking the button the new project is defined.

In some instances a configuration window enables the user to enter his her credentials for authorizing access to a data source such as for example a database. The credentials may include a host name a port a database name a user ID and password etc. The user can then click on button to save the new data source. In some instances as described with regards to the user of UE can select data from various data sources and combine them into a new data set e.g. a table a spreadsheet etc. by the data processing pipeline . For example the user can select a data source at and enter his her credentials indicating user s authority to access the data source such as a user name and a password . By pressing the save button the indicated data source is saved for example in data store s and can be used by the business intelligence platform for further analysis.

In various instances the business intelligence platform provides various types of data analysis elements such as for example dimensions measures and date time . Dimensions are the context or categories based on which measures are summarized meaningfully such as for example Sales by City where City is a dimension . Measures are typically quantifiable e.g. numeric such as for example Salary Revenue Sales Margin etc. The date time element is used to define a time dimension. For example the user can assign a date column of the data set to the date time element to define a time trend in data analysis.

In some instances the business intelligence platform can assign an element to each data column added to the new data set by default by inferring the data type of the data column based on a content of the column. For example if a sales column with numeric data values is added to a data set the sales column can be defined as a measure element in the data set. As another example if a name data column with character string data values is added to a data set the name column can be defined as a dimension in the data set. In some instances the business intelligence platform enables the user to reassign a column to a dimension instead of a measure by dragging and dropping the filed from list into dimension of table .

In some instances the user is enabled to edit a defined data set edit display is not shown . The user is also enabled to edit dimensions and measures associated with data fields of a data set e.g. change a dimension into a measure . In some instances the user is enabled to define a new measure or a new dimension based on a combination of existing measures and or dimensions using certain formula or rules. The user is also enabled to edit data set rules and or define new rules. Furthermore if a new column is added to the data source based on which a new data set is defined and the data source has been reloaded edited to include the new column the user can be notified about the new column and the user is enabled to add the new column to the defined data set as a dimension measure or a date time element for example by updating the new data set by defining a copy of the new data set including the new column etc. The user is also enabled to rename a defined data set. In some instances a data set can be automatically created for example by the business intelligence platform once the user connects a data source by using metadata associated with the data source data dictionaries definitions from the data source heuristics rules one or more predefined algorithms etc.

In some instances the user is enabled to specify the frequency at which data is indexed from the data source. The user can choose frequencies such as for example one hour six hours one day one week etc. In some instances the user is enabled to choose precise times such as for example 12 PM every day etc. The user can also be enabled to choose the fields that uniquely define a record or a row of data to support data updates. Furthermore the user can select the fields using which the new records can be fetched incrementally. For example a date time field can be selected to identify new records. In some instances the ETL Layer can automatically determine the best frequency using certain predefined rules or by learning from previous data fetch instances using machine learning or heuristics algorithms.

In some instances if the business intelligence platform fails to find a matching attribute based on the user s question or search query the business intelligence platform can identify a closest match based on various criteria such as for example spell corrections semantic matching techniques dictionaries searching private or public knowledge repositories third party APIs rules heuristics natural language processing or machine learning algorithms user preferences collaborative learning techniques and or other techniques to provide relevant suggestions or automatically mapping.

In various instances the business intelligence platform can define a format of the report e.g. chart type based on a default value without user specified information or based on a user preference entered by the user during system setup. For example a default value for a revenue by location chart can be set as a bar chart a line chart etc. The business intelligence platform can also enable the user to select and update report format while the report is provided. In some instances the business intelligence platform can learn from user selections and provide subsequent reports based on formats previously selected by the user for similar reports.

The user can refine the answer by filtering the answer using an ad hoc drill down as shown in . For example in the user can select a dimension from an engageable widget triggered by the user clicking on or moving the mouse over a data point the engageable widget can include a drill down drop box to be used for interactive filtering of the answer based on for example an age group a deal type a deal name etc. The dimensions in the drop box can be the dimensions selected by the user during a setup as discussed with regards to above. In some instances the user is allowed to filter results for example by appending text to the existing question or search query or by providing a follow up question or search query.

In various instances the menu for interactive filtering or drill downs can be automatically generated based on the data using certain algorithms or heuristics or predefined by the user. Furthermore the results can be saved or bookmarked for future reference or use for example in the data store .

In some instances the business intelligence platform can recommend questions search queries reports dashboards filters drill downs etc. based on the user s prior questions or search queries the user s interests or based on trends and what other users are asking on the platform using certain rules or algorithms to calculate affinity or relevance of the recommendations.

In some instances the business intelligence platform enables users to perform real time collaboration on the data. The user is enabled to start a discussion on a report a chart within a report data points within a chart etc. The user can add other users into the discussion thread. Users with proper access are allowed to view various discussion threads and participate in discussions by leaving comments. The users mentioned in a discussion thread can receive notifications by email text message or other digital communication channels.

In some instances the business intelligence platform enables users to perform advanced data analysis such as for example predictive analytics and forecasting by asking a question. For example a user may ask Show me the estimated sales for the next 4 quarters . The business intelligence platform can perform predictive analytics for example by executing certain pre built data mining algorithms to provide responses to questions asked by the users.

In some instances the business intelligence platform can include a notification module not shown in . The notification module can monitor the data based on various user defined or automated rules and notify the user of any interesting patterns changes deviations etc. in the data. Alerts from the notification module can be communicated to the user in various forms either as notifications via the UI feeds emails chat messages text messages voice messages and or other forms of communication.

It is intended that the systems and methods described herein can be performed by software executed on hardware hardware or a combination thereof. Hardware modules can include for example a general purpose processor a field programmable gate array FPGA and or an application specific integrated circuit ASIC . Software modules executed on hardware can be expressed in a variety of software languages e.g. computer code including C C Java Ruby Python JavaScript Perl PHP Visual Basic and other object oriented procedural or other programming language and development tools. Examples of computer code include but are not limited to micro code or micro instructions machine instructions such as produced by a compiler code used to produce a web service and files containing higher level instructions that are executed by a computer using an interpreter. Additional examples of computer code include but are not limited to control signals encrypted code and compressed code.

Some embodiments described herein relate to a computer storage product with a non transitory computer readable medium also can be referred to as a non transitory processor readable medium having instructions or computer code thereon for performing various computer implemented operations. The computer readable medium or processor readable medium is non transitory in the sense that it does not include transitory propagating signals per se e.g. a propagating electromagnetic wave carrying information on a transmission medium such as space or a cable . The media and computer code also can be referred to as code may be those designed and constructed for the specific purpose or purposes. Examples of non transitory computer readable media include but are not limited to magnetic storage media such as hard disks floppy disks and magnetic tape optical storage media such as Compact Disc Digital Video Discs CD DVDs Compact Disc Read Only Memories CD ROMs and holographic devices magneto optical storage media such as optical disks carrier wave signal processing modules and hardware devices that are specially configured to store and execute program code such as Application Specific Integrated Circuits ASICs Programmable Logic Devices PLDs Read Only Memory ROM and Random Access Memory RAM devices.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Where methods and steps described above indicate certain events occurring in certain order the ordering of certain steps may be modified. Additionally certain of the steps may be performed concurrently in a parallel process when possible as well as performed sequentially as described above. Although various embodiments have been described as having particular features and or combinations of components other embodiments are possible having any combination or sub combination of any features and or components from any of the embodiments described herein.

In some instances a query such as for example revenue by location can be provided by a user of UE and sent by the UE to the business intelligence platform of via an input signal . The natural language processing module of the business intelligence platform can process the query and determine keywords for example by approximate string matching. For example keywords revenue and location can be determined from the above query. The meta information lookup module can perform a search on metadata e.g. location for example in search index nodes . The metadata search can identify data sets that include location and revenue data. Subsequently the search engine controller module can send a signal to initiate a search by the search engine service s of for revenue values in the identified data sets . In some instances prior to the search initiation the analytics engine module can send a signal to the UE providing identified data sets to the user and allowing the user to select a subset of data sets for search. The search results can be stored in data store s . Upon completion of the search the analytics engine module can analyze search results to for example summarize the revenue values based on the location and store the analysis results in data store s . Upon completion of the data analysis the report module can use the analysis results to define reports associated with the query response based on the visualization rules . The reports can be presented on a UI of UE via an output signal .

