---

title: Application signing
abstract: Systems and methods for application signing are disclosed. In some implementations, an application package identifier and a password may be received at an application signing server. Upon authenticating the application package identifier and the password, a fingerprint identifying the developer is received. Upon receipt of the fingerprint, the application signing server generates a secure key for the application based on the fingerprint, where the secure key is provided to the developer for inclusion within the application. Upon determining that the application package identifier and the secure key included in a request from an operating system of a mobile device matches an authorized application package identifier and an authorized secure key stored at the application signing server, the application signing server provides the requested list of the one or more APIs to the operating system to grant the application access to the APIs in the list.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09380054&OS=09380054&RS=09380054
owner: CELLCO PARTNERSHIP
number: 09380054
owner_city: Basking Ridge
owner_country: US
publication_date: 20140418
---
Mobile platforms and operating systems may provide application programming interfaces APIs . These APIs can allow applications to access functions on a mobile device. In order to use such API s an application operating on the mobile device may need to be signed with a digital signature matching a digital signature of an API needed by the application.

A digital signature is a mathematical scheme for demonstrating authenticity of a software application or digital content. A valid digital signature gives a user or recipient reason to believe that the application was created by a known entity such that the entity cannot deny having created the application and that the application was not altered during software distribution. Digital signing of an application generally requires a software developer to manually sign the application using an application signing tool. The digital signature can include an application type an application certificate and a timestamp. Because an application may need to be signed with a distinct signature for each API that the application may need to access on a mobile device such a manual signing process becomes inefficient and time consuming.

Often applications are published on online application marketplaces or app stores for subsequent download to mobile devices. For example applications may be downloaded by users after purchasing them from an app store. Some application marketplaces may not permit publication of applications that have been digitally signed by a software developer more than once. The software developer may however need to digitally sign an application more than once for each API that the application may need to access on a mobile device. As a result application developers are unable to publish applications that need to be signed more than once to such restricted marketplaces. Furthermore applications may need to be signed each time a new version of the application is to be made available on an application marketplace. Repeated manual digital signing often necessary during application development leads to a delay in publishing the application on such marketplaces.

In the following detailed description numerous specific details are set forth by way of examples in order to provide a thorough understanding of the relevant teachings. However it should be apparent to those skilled in the art that the present teachings may be practiced without such details. In other instances well known methods procedures components and or circuitry have been described at a relatively high level without detail in order to avoid unnecessarily obscuring aspects of the present teachings.

The various implementations alleviate the burden of manually signing an application for each application programming interface API needed by the application. Furthermore the implementations allow an application to be signed once at an application signing server to allow the application access to multiple APIs needed by the application.

In some implementations an application package identifier and a password may be received at an application signing server. As an example the application package identifier and the password may be received from a developer of an application identified by the application package identifier. The password may have been previously provided by the application signing server to the developer. Upon authenticating the received application package identifier and the received password from the developer of the application the application signing server allows receipt of a digital fingerprint identifying the developer. The digital fingerprint can be for example a cryptographic hash. A cryptographic hash function is a hash function that takes an arbitrary block of data and returns a fixed size bit string the cryptographic hash value such that any accidental or intentional change to the data would with very high probability change the hash value. Upon receipt of the fingerprint identifying the developer the application signing server generates a secure key for the application based on the fingerprint. The secure key may be provided to the developer for inclusion within the application.

When the application including the secure key is installed at a mobile station a request for a list of one or more APIs permitted for use by the application at the mobile station may be received at the application signing server from an operating system of the mobile station. The request may include the application package identifier and the secure key associated with the application. The request may be initiated by the operating system based on determining the application s need to access one or more APIs resident at the mobile station. Upon determining that the application package identifier and the secure key matches an authorized application package identifier and an authorized secure key stored at the application signing server the application signing server provides the requested list of the one or more APIs to the mobile station operating system. The operating system at the mobile station may then grant the installed application access to the APIs in the list.

In this way because the application may be granted access to a plurality of APIs based on a list from the application signing server that identifies the APIs the disclosed implementations alleviate the burden of manually signing an application for each API needed by the application. The application accordingly can be published to online application marketplaces without the need for multiple signatures whether or not the marketplace permits multiple signatures to be used. Furthermore because the application may need to be signed only once regardless of a number of APIs that the application may need to access application signing in accordance with the disclosed implementations is efficient and consumes significantly less time.

Reference now is made in detail to the examples illustrated in the accompanying drawings and discussed below. illustrates an exemplary system offering a variety of mobile communication services including communications related to application signing. The example shows simply two mobile stations MSs and as well as a mobile communication network . The stations and are examples of mobile stations that may include respective operating systems that provide and receive communications related to application signing. However the network provides similar communications for many other similar users as well as for mobile stations users that do not participate in the application signing service. The network provides mobile wireless communications services to those stations as well as to other mobile stations not shown for example via a number of base stations BSs . The present techniques may be implemented in any of a variety of available mobile networks and or on any type of mobile station compatible with such a network and the drawing shows only a very simplified example of a few relevant elements of the network for purposes of discussion here.

The wireless mobile communication network might be implemented as a network conforming to the code division multiple access CDMA IS 95 standard the 3rd Generation Partnership Project 2 3GPP2 wireless IP network standard or the Evolution Data Optimized EVDO standard the Global System for Mobile GSM communication standard Long Term Evolution LTE standard a time division multiple access TDMA standard or other standards used for public mobile wireless communications. The mobile stations may be capable of voice telephone communications through the network and for the application signing services the exemplary devices and are capable of data communications through the particular type of network and the users thereof typically will have subscribed to data service through the network .

The network allows users of the mobile stations such as and and other mobile stations not shown to initiate and receive telephone calls to each other as well as through the public switched telephone network or PSTN and telephone stations connected to the PSTN. The network typically offers a variety of data services via the Internet such as downloads web browsing email etc. By way of example the drawing shows a laptop PC type user terminal as well as a server connected to the Internet and the data services for the mobile stations via the Internet may be with devices like those shown at and as well as with a variety of other types of devices or systems capable of data communications through various interconnected networks. The mobile stations and of and users of the applications incorporating the application signing service also can receive and execute applications written in various programming languages as discussed more later.

Mobile stations can take the form of portable handsets smart phones or personal digital assistants although they may be implemented in other form factors. Program applications including an application to assist in the application signing service and or any application purchased on line can be configured to execute on many different types of the mobile stations . For example a mobile station application can be written to execute on a binary runtime environment for mobile BREW based mobile station a Windows Mobile based mobile station Android I Phone Java Mobile or RIM based mobile station such as a BlackBerry or the like. Some of these types of devices can employ a multi tasking operating system.

The mobile communication network can be implemented by a number of interconnected networks. Hence the overall network may include a number of radio access networks RANs as well as regional ground networks interconnecting a number of RANs and a wide area network WAN interconnecting the regional ground networks to core network elements. A regional portion of the network such as that serving mobile stations can include one or more RANs and a regional circuit and or packet switched network and associated signaling network facilities.

Physical elements of a RAN operated by one of the mobile service providers or carriers include a number of base stations represented in the example by the base stations BSs . Although not separately shown such a base station can include a base transceiver system BTS which can communicate via an antennae system at the site of base station and over the airlink with one or more of the mobile stations when the mobile stations are within range. Each base station can include a BTS coupled to several antennae mounted on a radio tower within a coverage area often referred to as a cell. The BTS is the part of the radio network that sends and receives RF signals to from the mobile stations that are served by the base station .

The radio access networks can also include a traffic network represented generally by the cloud at which carries the user communications and data for the mobile stations between the base stations and other elements with or through which the mobile stations communicate. The network can also include other elements that support functionality other than device to device media transfer services such as messaging service messages and voice communications. Specific elements of the network for carrying the voice and data traffic and for controlling various aspects of the calls or sessions through the network are omitted here for simplicity. It will be understood that the various network elements can communicate with each other and other aspects of the mobile communications network and other networks e.g. the public switched telephone network PSTN and the Internet either directly or indirectly.

The carrier also operates a number of systems that provide ancillary functions in support of the communications services and or application services provided through the network and those elements communicate with other nodes or elements of the network via one or more private IP type packet data networks sometimes referred to as an Intranet i.e. a private networks. Generally such systems are part of or connected for communication via the private network . A person skilled in the art however would recognize that systems outside of the private network could serve the same functions as well. Examples of such systems in this case operated by the network service provider as part of the overall network which communicate through the intranet type network include one or more application servers and a related authentication server for the application service of server .

A mobile station communicates over the air with a base station and through the traffic network for various voice and data communications e.g. through the Internet with a server and or with application signing server . If the mobile service carrier offers the application signing service the service may be hosted on a carrier operated application signing server for communication via the networks and . Alternatively the application signing service may be provided by a separate entity alone or through agreements with the carrier in which case the service may be hosted on an application server such as server connected for communication via the networks and . Servers such as 25 and 31 may provide any of a variety of common application or service functions in support of or in addition to an application program running on the mobile station . However for purposes of further discussion we will focus on functions thereof in support of the application signing service. For a given service including the application signing service an application program within the mobile station may be considered as a client and the programming at application signing server may be considered as the server application for the particular service. In some implementations the programming at server may act as a client in addition to the mobile station and the programming at application signing server may act as a server.

To insure that the application signing service offered by application signing server is available to only authorized devices users the provider of the application service also deploys an authentication server . The authentication server could be a separate physical server as shown or authentication server could be implemented as another program module running on the same hardware platform as the application signing server . Essentially when the application signing server receives a service request from a client application on a mobile station the server application provides appropriate information to the authentication server to allow application signing server to authenticate the mobile station as outlined herein. Upon successful authentication the server informs the application signing server which in turn provides access to the service via data communication through the various communication elements e.g. and of the network . A similar authentication function may be provided for the application signing service s offered via the server either by the server if there is an appropriate arrangement between the carrier and the operator of server by a program on the server or via a separate authentication server not shown connected to the Internet .

In some implementations mobile station may be interacted with by any user associated with the network illustrated in . Mobile station may further include mobile station application APIs and operating system . Application signing server may be interacted with by an employee of a wireless network provider associated with the network illustrated in . In some implementations the application signing server can provide a signer graphical user interface e.g. a point of contact PoC interface . The signer graphical user interface may be viewed and interacted with by a signer e.g. an employee tasked with application signing of a company that has developed APIs resident on the mobile station . For example the signer may be responsible for communicating with a third party application vendor developer developing a company branded application for the mobile station . The signer graphical interface may be displayed on a screen or a display of a computing device. Developer client interface can be interacted with by a developer who develops software applications or mobile apps e.g. mobile application for mobile stations serviced by the wireless network provider. The developer client interface may be displayed on a screen or display of a computing device. The developer may use developer client interface to access application signing services provided by the application signing server .

In some implementations the developer may want to digitally sign an application when the developer wants to publish the application to an online application marketplace such as an app store. To initiate an application signing process the developer may log into a developer client interface . The login may be performed via a mobile computer or desktop computer of the developer . When the developer client interface is displayed to the developer the developer may enter an application package identifier and a password through a form or entry fields in the developer client interface . The application package identifier and the password may then be received from developer client interface at the application signing server .

The application package identifier may identify an application e.g. mobile station application developed by the developer . The password may be previously provided by the application signing server to the developer of application identified by the application package identifier via developer client interface . For example the password may be provided by an email to the developer when the developer creates a developer account with the application signing server . The email may include the password and a username needed by the developer to log into the developer client interface .

Upon authenticating the received application package identifier and the received password from the developer via developer client interface the application signing server allows receipt of a fingerprint identifying the developer . As an example the application signing server may update the developer client interface to display a request to the user to provide the fingerprint. The fingerprint may be provided by the developer via developer client interface . The fingerprint may be generated using a Secure Hash Algorithm 1 SHA 1 and is discussed further below. Upon receipt of the fingerprint from the developer client interface the application signing server generates a secure key for the application based on the fingerprint where the secure key is provided to the developer for inclusion within the application .

When the application including the secure key is installed at a mobile station a request for a list of one or more application programming interfaces APIs permitted for use by the application at the mobile station may be received at the application signing server from an operating system or any other software component of the mobile station . The request may be initiated for example upon completion of installation of the application at the mobile station . The request may also be initiated when the application is first executed by the user at the mobile station . The request may include the application package identifier and the secure key associated with the application . The request may be sent as a Hyper Text Transfer Protocol Secure HTTPS POST request. The request can include a Universal Resource Identifier URI identifying the application signing server . The application package identifier and the secure key can be included in a string sent via the body of the HTTPS POST request. The request may be initiated by the operating system based on determining the application s need to access one or more APIs resident at the mobile station . Upon determining that the application package identifier and the secure key matches an authorized application package identifier and an authorized secure key stored at the application signing server the application signing server provides the requested list of the one or more APIs to the operating system . The operating system at the mobile station may then grant the installed application access to the APIs in the list. As an example the operating system of the mobile station may send a request for a list of one or more application programming interfaces in a JavaScript Object Notation JSON format to the application signing server .

In this way because the application may be granted access to a plurality of APIs based on a list from the application signing server that identifies the APIs the application signing server can alleviate the burden of manually signing the application for each application programming interface API needed the application . Furthermore the application can be published on online application marketplaces without the need for multiple signatures whether or not the marketplace permits multiple signatures to be used.

In some implementations when the signer accesses the signer graphical user interface the signer graphical user interface may present a page for signer login and the signer can be allowed to login using his her corporate login credentials. If the signer successfully logs in then the signer graphical user interface may present an interface to add third party application information e.g. information related to application to a database of application signing server . Otherwise if the login is unsuccessful the signer graphical user interface may present the signer with an error page.

User interface elements e.g. information related to application presented via the signer graphical user interface to add third party application information may include but are not limited to i a text field to enter the application package name ii a list of checkboxes with one checkbox per authorized API that allow the signer to select one or more checkboxes and iii a submit button that when activated provides the signer s selections to application signing server to identify the application package and the desired APIs of the application package.

In some implementations a list of one or more APIs may be provided as checkboxes to signer via signer graphical user interface . In this way the signer can select one or more APIs that are permitted to be accessed by an application package name provided by the signer via the signer graphical user interface . As an example the application package name may identify the application developed by the developer . These APIs can include for example a Apps Access Point Name APN API b Application Directed Short Messaging Service services API c Single Sign On SSO API d Evolved Multimedia Broadcast Multicast Service eMBMS services and d APN. These APIs may be identified in the signer graphical user interface as a APPSAPN b SMS c SSO d EMBMS and e 800APN respectively. These APIs are purely illustrative and are not intended to limit scope of the present application.

For example when the Apps Access Point Name APN API is selected the Apps Access Point Name APN API can be used by an application having the application package identifier name to access one or more APN servers operated by a wireless network provider. Similarly the Application Directed Short Messaging Service services API can be used by an application having the application package identifier name to send messaging service messages via a wireless network provider. The SSO API may be used for a session user authentication process that permits a user to enter one username and password in order to access multiple applications. The process authenticates the user for all applications the user has been given rights to and eliminates further prompts when the user switches applications during an authenticated session. The eMBMS API may be used to access eMBMS services provided by the wireless network provider. eMBMS is an effective way to lower cost per bit when delivering the same content simultaneously to multiple end users. As the multicast standard for LTE eMBMS allows multimedia content to be sent once and received by many end users. This one to many distribution mode can be a valuable alternative to unicast when a large number of users are interested in the same content. The 800 APN may be used to access 800 or free data usage services. Data connections that originate from device IP addresses within a pre determined range of 800 APN IP addresses may be paid by 3rd party service vendors and can be free of charge to an end user of the mobile station

In some implementations in response to the signer selecting the submit button in the signer graphical user interface the signer graphical user interface submits information provided by the signer to the application signing server . If the application signing server successfully receives the information provided by the signer via the signer graphical user interface the application signing server may proceed with the one or more of the following steps 

 I If an application package name provided by the signer via the signer graphical user interface does not exist in a database of application signing server then the application signing server may 

 II If the package name does exist in the database of application signing server then the application signing server may 

If the application signing server completes the foregoing stages of I or II then the application signing server may return the app vendor ID associated with the package name in a response webpage displayed at signer graphical user interface . The app vendor ID may be created using a cipher e.g. Leet . For example assuming that the package name is com.mypackage.AppName the app vendor ID can be C0m My9AcKa63 a99NaMe. In this example capital and small letters in the package name have been alternated dots have been replaced with dollar signs and one or more letters have been replaced with numbers. This example is purely illustrative and is not intended to limit the scope of the present application.

In some implementations the app vendor ID may be used by the developer as a password to sign into application signing server via developer client interface . The app vendor ID may be provided by signer to developer via secure email. As noted above the developer may develop applications such as mobile apps for the mobile station . For example developer may develop branded applications for mobile stations or devices specific to the brand. If the developer accesses application signing server via developer interface then the developer can be presented with a login page at developer interface and the page can allow developer to enter the package name as the login and the app vendor ID generated by the signer at signer graphical user interface as the password. The app vendor ID may be communicated by signer to developer via other communication channels e.g. secure email .

In some implementations if the developer successfully logs into the application signing server via the developer interface the developer interface may display 

 ii A text field for the developer to enter the Secure Hash Algorithm 1 SHA 1 fingerprint of the application certificate. As an example the fingerprint or hash may be provided in the following format 

In some implementations if the developer selects the Submit button in the developer interface then the developer interface posts the fingerprint provided by the developer to the application signing server . If the application signing server successfully receives the fingerprint then 

 i The application signing server may store the fingerprint and associate it to the package name provided during login by the developer and

In some implementations a mobile station client may be included in the operating system of mobile client. The mobile station client may configure operating system to query the application signing server to check if a particular application identified by its package name and SHA 1 fingerprint is authorized to access a particular API. The app vendor ID and the generated salt may be securely stored as encrypted data in a database at application signing server . For example application signing server may store an example Message Digest 5 MD5 hash of II for authentication purposes. The meta data tag may indicate that information associated with the tag is to be treated as metadata. Metadata is data characterizing data or information. Structural metadata relates to design and specification of data structures and is more properly called data about the containers of data. Descriptive metadata on the other hand is about individual instances of application data the data content. In the above example android name com.verizon.api android value is descriptive metadata. As information has become increasingly digital metadata are also used to describe digital data using metadata standards specific to a particular discipline. By describing the contents and context of data files the quality of the original data files is greatly increased. For example a text document s metadata may contain information about how long the document is who the author is when the document was written and a short summary of the document. Similarly the tag may be used by the application signing server to describe contents and context of data and files provided by the application signing server .

In some implementations when the operating system needs to verify if a certain application is authorized to use a certain API resident at the mobile station then operating system makes a JSON request embedded in a Hyper Text Transfer Protocol Secure POST HTTPS POST request as follows 

If the application signing server successfully receives the JSON request the application signing server may use the provided package name and API name in the request along with the SHA 1 fingerprint and salt stored in the application signing server s database to calculate for example 

HMAC SHA1 HMAC SHA1 salt . As a purely illustrative example a keyed hash message authentication code HMAC is a construction for calculating a message authentication code MAC involving a cryptographic hash function in combination with a secret cryptographic key. As with any MAC it may be used to simultaneously verify both the data integrity and the authentication of a message. Any cryptographic hash function such as MD5 or SHA 1 may be used in the calculation of an HMAC the resulting MAC algorithm may be termed HMAC MD5 or HMAC SHA1 accordingly. Thus application signing server may use HMAC SHA1 HMAC SHA1 salt to simultaneously verify both the data integrity and authenticity of the JSON request received from the operating system . If the message is authenticated by the application signing server the application signing server may return a response to the JSON request.

The application signing server may provide the JSON response embedded in a Hyper Text Transfer Protocol HTTP response as follows 

Thus in some implementations upon verifying the data integrity and authenticity of the JSON request the application signing server provides the requested list of the one or more APIs to the operating system . The operating system at the mobile station may then grant the application access to the APIs in the list. In this way because the application may be granted access to a plurality of APIs based on a list from the application signing server that identifies the APIs the application signing server can alleviate the burden of manually signing the application for each application programming interface API needed the application . In this way the application can be published on online application marketplaces without the need for multiple signatures whether or not the marketplace permits multiple signatures to be used. Furthermore because the application may need to be signed once regardless of a number of APIs that the application may need to access application signing in accordance with the disclosed implementations is efficient and consumes significantly less time.

In some implementations the developer may create one or more groups of applications that may need to access one or more APIs resident at the mobile station . For example the developer may use the developer client interface to select application identifiers A B and C and associate the identifiers with a single group of APIs C D and E available at the mobile station . Thus the application identifiers need not be each separately assigned to the APIs C D and E and can be together associated at once with a group of APIs. This saves time and enhances user experience for the developer. The developer may use the developer client interface to also create groups of application identifiers e.g. identifiers A B and C and associate the groups of identifiers with groups of APIs e.g. a group of APIs C D and E resident at the mobile station

In some implementations the signer graphical user interface and the developer client interface may use HTTPS connections when communicating with application signing server . In some implementations the communications of operating system with application signing server may be over HTTP. Signer graphical user interface developer client interface and operating system may each use a different URL to access application signing server . In some aspects signing server may allow access to the mobile station only via a mobile station client operating in the operating system . During any of the foregoing steps discussed above if an error is encountered at application signing server the application signing server may return an error message to the mobile station signing interface or developer interface .

Referring to a process for application signing can be initiated when a mobile station is powered up or turned on step . As an example mobile station may be powered up when a user selects a power button on the mobile station . Then an operating system of the mobile station may scan one or more applications on the mobile station that may need access to one or more APIs resident at the mobile station step . As an example operating system or a mobile station client included in operating system of the mobile station may scan one or more applications on the mobile station that may need access to one or more APIs resident at the mobile station

If one or more applications on the mobile station need access to one or more APIs resident at the mobile station Yes step the operating system of the mobile station may send a request to an application signing server for a list of one or more application programming interfaces APIs permitted for use by the applications needing access to the one or more APIs step . As an example the operating system of the mobile station may send a request for a list of one or more application programming interfaces request in a JSON format to the application signing server . The request may be sent when the one or more applications are installed at the mobile station or at any time when the applications are executing on the mobile station . The request may be sent from the mobile station to the application signing server over the network .

Returning to step if no applications on the mobile station need access to one or more APIs resident at the mobile station No step method returns to step .

Following the request of step if the application signing server is available to process the request Yes step the mobile station receives a response including the requested list of one or more application programming interfaces step . As an example the mobile station may receive a response including a list of one or more APIs permitted for use by the one or more applications resident at the mobile station in a JavaScript Object Notation JSON format from application signing server . JSON or JavaScript Object Notation is an open standard format that uses human readable text to transmit data objects. While JSON is convenient to use it is to be appreciated that the implementations are not limited to JSON and any other data format may be used for the response including the requested list of one or more application programming interfaces.

The operating system of the mobile station then stores the list as a mapping of application names to permitted APIs in a file resident at the mobile station step and also in a memory of the mobile station for access by applications resident at the mobile station step . As an example the operating system of the mobile station may store the list including a mapping of application names to permitted APIs in a file resident at the mobile station

Following the request of step if the application signing server is not available to process the request No step the mobile station determines if a previously stored list of one or more APIs permitted for use by the applications is located at the mobile station step . As an example operating system of the mobile station may check if a file including a mapping of application names to permitted APIs is stored at the mobile station . The previously stored list may be for example a list retrieved at an earlier time from the application signing server. The previously stored list may only be used when application signing server is not available e.g. offline .

If the previously stored list is located at the mobile station Yes step the operating system of the mobile station stores the list in a memory of the mobile station step . As an example operating system of the mobile station store the list including a mapping of application names to permitted APIs in a memory of the mobile station . If the previously stored list is not located at the mobile station No step process returns to check if the application signing server is available to process the request step .

Referring to a process for granting an application access to one or more APIs is described. Process begins when an application resident on a mobile station calls or requests use of an API resident at the mobile station step . Such a request may be detected by the operating system of the mobile station

Responsive to the request of step the operating system retrieves a package name for the application step . As an example if the operating system of the mobile station has granted permission to the application to access the API e.g. API requested by the application the requested API retrieves a package name for the application .

The API requested by the application in step may then query the operating system of the mobile station step and determine if the application requesting access to the API is authorized to access the API step . As an example the requested API e.g. API may query operating system to determine if the requesting application is authorized to access the requested API resident at the mobile station . As discussed above to determine if the requesting application is authorized to access the requested API resident at the mobile station the operating system of the mobile station may send a request to the application signing server for a list of one or more application programming interfaces APIs permitted for use by the application . The operating system may then receive a response including a list of one or more APIs permitted for use by the by the application in a JSON format from application signing server .

Responsive to the request of step if the application is authorized to access the API Yes step then the application is permitted to access the API step . If the application is not authorized to access the API No step then the application is not permitted to access the API step .

The enhanced application signing service under consideration here may be delivered to touch screen type mobile stations as well as to non touch type mobile stations. Hence our simple example shows the mobile station MS as a non touch type mobile station and shows the mobile station MS as a touch screen type mobile station. Implementation of the on line application signing service will involve at least some execution of programming in the mobile stations as well as implementation of user input output functions and data communications through the network from the mobile stations.

Those skilled in the art presumably are familiar with the structure programming and operations of the various types of mobile stations. However for completeness it may be useful to consider the functional elements aspects of two exemplary mobile stations and at a high level.

For purposes of such a discussion provides a block diagram illustration of an exemplary non touch type mobile station . Although the mobile station may be a smart phone or may be incorporated into another device such as a personal digital assistant PDA or the like for discussion purposes the illustration shows the mobile station is in the form of a handset. The handset embodiment of the mobile station functions as a normal digital wireless telephone station. For that function the station includes a microphone for audio signal input and a speaker for audio signal output. The microphone and speaker connect to voice coding and decoding circuitry vocoder . For a voice telephone call for example the vocoder provides two way conversion between analog audio signals representing speech or other audio and digital samples at a compressed bit rate compatible with the digital protocol of wireless telephone network communications or voice over packet Internet Protocol communications.

For digital wireless communications the handset also includes at least one digital transceiver XCVR . Today the handset would be configured for digital wireless communications using one or more of the common network technology types. The concepts discussed here encompass embodiments of the mobile station utilizing any digital transceivers that conform to current or future developed digital wireless communication standards. The mobile station may also be capable of analog operation via a legacy network technology.

The transceiver provides two way wireless communication of information such as vocoded speech samples and or digital information in accordance with the technology of the network . The transceiver also sends and receives a variety of signaling messages in support of the various voice and data services provided via the mobile station and the communication network. Each transceiver connects through RF send and receive amplifiers not separately shown to an antenna . The transceiver may also support various types of mobile messaging services such as short message service SMS enhanced messaging service EMS and or multimedia messaging service MMS .

The mobile station includes a display for displaying messages menus or the like call related information dialed by the user calling party numbers etc. including interfaces for the application signing service. A keypad enables dialing digits for voice and or data calls as well as generating selection inputs for example as may be keyed in by the user based on a displayed menu or as a cursor control and selection of a highlighted item on a displayed screen. The display and keypad are the physical elements providing a textual or graphical user interface. Various combinations of the keypad display microphone and speaker may be used as the physical input output elements of the graphical user interface GUI for multimedia e.g. audio and or video communications. Of course other user interface elements may be used such as a trackball as in some types of PDAs or smart phones.

In addition to normal telephone and data communication related input output including message input and message display functions the user interface elements also may be used for display of menus and other information to the user and user input of selections including any needed during the application signing service.

A microprocessor serves as a programmable controller for the mobile station in that it controls all operations of the mobile station in accord with programming that it executes for all normal operations and for operations involved in the application signing procedure under consideration here. In the example the mobile station includes flash type program memory for storage of various software or firmware program routines and mobile configuration settings such as mobile directory number MDN and or mobile identification number MIN etc. The mobile station may also include a non volatile random access memory RAM for a working data processing memory. Of course other storage devices or configurations may be added to or substituted for those in the example. In a present implementation the flash type program memory stores firmware such as a boot routine device driver software an operating system call processing software and vocoder control software and any of a wide variety of other applications such as client browser software and short message service software. The memories also store various data such as telephone numbers and server addresses downloaded data such as multimedia content and various data input by the user. Programming stored in the flash type program memory sometimes referred to as firmware is loaded into and executed by the microprocessor .

As outlined above the mobile station includes a processor and programming stored in the flash memory configures the processor so that the mobile station is capable of performing various desired functions including in this case the functions involved in the technique for providing application signing.

For purposes of such a discussion provides a block diagram illustration of an exemplary touch screen type mobile station . Although possible configured somewhat differently at least logically a number of the elements of the exemplary touch screen type mobile station are similar to the elements of the mobile station and are identified by like reference numbers in . For example the touch screen type mobile station includes a microphone speaker and vocoder for audio input and output functions much like in the earlier example. The mobile station also includes at least one digital transceiver XCVR for digital wireless communications although the handset may include an additional digital or analog transceiver. The concepts discussed here encompass embodiments of the mobile station utilizing any digital transceivers that conform to current or future developed digital wireless communication standards. As in the station the transceiver provides two way wireless communication of information such as vocoded speech samples and or digital information in accordance with the technology of the network . The transceiver also sends and receives a variety of signaling messages in support of the various voice and data services provided via the mobile station and the communication network. Each transceiver connects through RF send and receive amplifiers not separately shown to an antenna . The transceiver may also support various types of mobile messaging services such as short message service SMS enhanced messaging service EMS and or multimedia messaging service MMS .

As in the example of station a microprocessor serves as a programmable controller for the mobile station in that it controls all operations of the mobile station in accord with programming that it executes for all normal operations and for operations involved in the application signing procedure under consideration here. In the example the mobile station includes flash type program memory for storage of various program routines and mobile configuration settings. The mobile station may also include a non volatile random access memory RAM for a working data processing memory. Of course other storage devices or configurations may be added to or substituted for those in the example. Hence outlined above the mobile station includes a processor and programming stored in the flash memory configures the processor so that the mobile station is capable of performing various desired functions including in this case the functions involved in the technique for providing application signing.

In the example of the user interface elements included a display and a keypad. The mobile station may have a limited number of key but the user interface functions of the display and keypad are replaced by a touchscreen display arrangement. At a high level a touchscreen display is a device that displays information to a user and can detect occurrence and location of a touch on the area of the display. The touch may be an actual touch of the display device with a finger stylus or other object although at least some touchscreens can also sense when the object is in close proximity to the screen. Use of a touchscreen display as part of the user interface enables a user to interact directly with the information presented on the display.

Hence the exemplary mobile station includes a display which the microprocessor controls via a display driver to present visible outputs to the device user. The mobile station also includes a touch position sensor . The sensor is relatively transparent so that the user may view the information presented on the display . A sense circuit sensing signals from elements of the touch position sensor and detects occurrence and position of each touch of the screen formed by the display and sensor . The sense circuit provides touch position information to the microprocessor which can correlate that information to the information currently displayed via the display to determine the nature of user input via the screen.

The display and touch sensor and possibly one or more keys if included are the physical elements providing the textual and graphical user interface for the mobile station . The microphone and speaker may be used as additional user interface elements for audio input and output including with respect to some application signing related functions.

The structure and operation of the mobile stations and as outlined above were described to by way of example only.

As shown by the above discussion functions relating to the an enhanced application signing experience for the application signing service via a graphical user interface of a mobile station may be implemented on computers connected for data communication via the components of a packet data network operating as an application signing server as shown in . Although special purpose devices may be used such devices also may be implemented using one or more hardware platforms intended to represent a general class of data processing device commonly used to run server programming so as to implement the application signing functions discussed above albeit with an appropriate network connection for data communication.

As known in the data processing and communications arts a general purpose computer typically comprises a central processor or other processing device an internal communication bus various types of memory or storage media RAM ROM EEPROM cache memory disk drives etc. for code and data storage and one or more network interface cards or ports for communication purposes. The software functionalities involve programming including executable code as well as associated stored data e.g. files used for application signing. The software code is executable by the general purpose computer that functions as the application signing server and or that functions as an application signing enabled terminal device. In operation the code is stored within the general purpose computer platform. At other times however the software may be stored at other locations and or transported for loading into the appropriate general purpose computer system. Execution of such code by a processor of the computer platform enables the platform to implement the methodology for application signing in essentially the manner performed in the implementations discussed and illustrated herein.

A server for example includes a data communication interface for packet data communication. The server also includes a central processing unit CPU in the form of one or more processors for executing program instructions. The server platform typically includes an internal communication bus program storage and data storage for various data files to be processed and or communicated by the server although the server often receives programming and data via network communications. The hardware elements operating systems and programming languages of such servers are conventional in nature and it is presumed that those skilled in the art are adequately familiar therewith. Of course the server functions may be implemented in a distributed fashion on a number of similar platforms to distribute the processing load.

A computer type user terminal device such as a PC or tablet computer similarly includes a data communication interface CPU main memory and one or more mass storage devices for storing user data and the various executable programs see . A mobile device type user terminal may include similar elements but will typically use smaller components that also require less power to facilitate implementation in a portable form factor. The various types of user terminal devices will also include various user input and output elements. A computer for example may include a keyboard and a cursor control selection device such as a mouse trackball joystick or touchpad and a display for visual outputs. A microphone and speaker enable audio input and output. Some smartphones include similar but smaller input and output elements. Tablets and other types of smartphones utilize touch sensitive display screens instead of separate keyboard and cursor control elements. The hardware elements operating systems and programming languages of such user terminal devices also are conventional in nature and it is presumed that those skilled in the art are adequately familiar therewith.

Hence aspects of the methods of application signing outlined above may be embodied in programming. Program aspects of the technology may be thought of as products or articles of manufacture typically in the form of executable code and or associated data that is carried on or embodied in a type of machine readable medium. Storage type media include any or all of the tangible memory of the computers processors or the like or associated modules thereof such as various semiconductor memories tape drives disk drives and the like which may provide non transitory storage at any time for the software programming. All or portions of the software may at times be communicated through the Internet or various other telecommunication networks. Such communications for example may enable loading of the software from one computer or processor into another for example from a management server or host computer of the wireless network provider operating application signing server into the computer platform of the mobile station . Thus another type of media that may bear the software elements includes optical electrical and electromagnetic waves such as used across physical interfaces between local devices through wired and optical landline networks and over various air links. The physical elements that carry such waves such as wired or wireless links optical links or the like also may be considered as media bearing the software. As used herein unless restricted to non transitory tangible storage media terms such as computer or machine readable medium refer to any medium that participates in providing instructions to a processor for execution.

Hence a machine readable medium may take many forms including but not limited to a tangible storage medium a carrier wave medium or physical transmission medium. Non volatile storage media include for example optical or magnetic disks such as any of the storage devices in any computer s or the like such as may be used to implement application signing etc. shown in the drawings. Volatile storage media include dynamic memory such as main memory of such a computer platform. Tangible transmission media include coaxial cables copper wire and fiber optics including the wires that comprise a bus within a computer system. Carrier wave transmission media can take the form of electric or electromagnetic signals or acoustic or light waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media therefore include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM DVD or DVD ROM any other optical medium punch cards paper tape any other physical storage medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave transporting data or instructions cables or links transporting such a carrier wave or any other medium from which a computer can read programming code and or data. Many of these forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to a processor for execution.

While the foregoing has described what are considered to be the best mode and or other examples it is understood that various modifications may be made therein and that the subject matter disclosed herein may be implemented in various forms and examples and that the teachings may be applied in numerous applications only some of which have been described herein. It is intended by the following claims to claim any and all applications modifications and variations that fall within the true scope of the present teachings.

Unless otherwise stated all measurements values ratings positions magnitudes sizes and other specifications that are set forth in this specification including in the claims that follow are approximate not exact. They are intended to have a reasonable range that is consistent with the functions to which they relate and with what is customary in the art to which they pertain.

The scope of protection is limited solely by the claims that now follow. That scope is intended and should be interpreted to be as broad as is consistent with the ordinary meaning of the language that is used in the claims when interpreted in light of this specification and the prosecution history that follows and to encompass all structural and functional equivalents. Notwithstanding none of the claims are intended to embrace subject matter that fails to satisfy the requirement of Sections or of the Patent Act nor should they be interpreted in such a way. Any unintended embracement of such subject matter is hereby disclaimed.

Except as stated immediately above nothing that has been stated or illustrated is intended or should be interpreted to cause a dedication of any component step feature object benefit advantage or equivalent to the public regardless of whether it is or is not recited in the claims.

It will be understood that the terms and expressions used herein have the ordinary meaning as is accorded to such terms and expressions with respect to their corresponding respective areas of inquiry and study except where specific meanings have otherwise been set forth herein. Relational terms such as first and second and the like may be used solely to distinguish one entity or action from another without necessarily requiring or implying any actual such relationship or order between such entities or actions. The terms comprises comprising or any other variation thereof are intended to cover a non exclusive inclusion such that a process method article or apparatus that comprises a list of elements does not include only those elements but may include other elements not expressly listed or inherent to such process method article or apparatus. An element proceeded by a or an does not without further constraints preclude the existence of additional identical elements in the process method article or apparatus that comprises the element.

The Abstract of the Disclosure is provided to allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in various embodiments for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separately claimed subject matter.

