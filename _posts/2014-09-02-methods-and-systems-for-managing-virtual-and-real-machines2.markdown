---

title: Methods and systems for managing virtual and real machines
abstract: Managing virtual and real machines through a provisioning system. The provisioning system allows a user to create and manage machines through a “self-service” approach. The provisioning system interacts with one or more agents that manage the lifecycle of a machine. The system may provide templates that enable a user to readily create a virtual machine. The system may also include interfaces for administrators to manage virtual and real machine resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09652267&OS=09652267&RS=09652267
owner: VMware, Inc.
number: 09652267
owner_city: Palo Alto
owner_country: US
publication_date: 20140902
---
The patent application is a continuation of U.S. patent application Ser. No. 13 430 096 filed Mar. 26 2012 which issued as U.S. Pat. No. 8 826 289 on Sep. 2 2014 which is a continuation of U.S. patent application Ser. No. 11 903 374 filed Sep. 21 2007 which issued as U.S. Pat. No. 8 171 486 on May 1 2012 which claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application No. 60 919 965 entitled Method and System for Managing Virtual and Real Machines filed Mar. 26 2007 the complete disclosure of which each is hereby fully incorporated herein by reference.

This invention relates to systems and methods for managing virtual and real machines. More particularly this invention relates to providing the infrastructure and processes for managing the lifecycle of virtual and real machines over multiple platforms including virtual resources such as storage and virtual networks.

Computer networks and other computer infrastructure provide the backbone for corporate and government institutions today. Computer assets represent significant investments of time and money for these institutions in the procurement operation and maintenance of these assets. These assess require significant power resources to run and cool the machines. The assets also require continuous upgrading of software including system patches and anti virus programs. Maintenance demands require system personnel dedicated to keeping the assets up to date and operating.

Computer software developers require access to computer assets to test software under development. These development activities often require different computer configurations to ensure that the software is adequately tested. Often to ensure that they have adequate platforms to test software these developers maintain multiple workstations. Each workstation requires capital investment and significant maintenance costs and is often used a fraction of the time only.

This demand by software developers for different types of machines for short periods of time helped drive the development of virtualization. Virtualization allows for multiple platforms to reside on a single computer. That is multiple virtual machines could reside on a single real machine. Although virtualization was supported on both individual work stations and servers the emphasis of this development was on the work station which was the more typical computer resource used by developers.

Even with tools that support virtualization on work stations the work station approach still had deficiencies particularly for large enterprises. First a single work station was still a minimal environment. A work station would quickly run out of computing power and as such support a minimal number of virtual machines. A developer may still require multiple work stations to effectively test a software program. Also large enterprises generally maintain strict controls over their computer networks. Individual end users generally did not have the proper permission to add machines on the network even virtual machines. These restrictions were necessary to protect other computer assets on the network. Also since the hard drive of a virtual machine is merely a file these machines posed a security risk. An individual could walk off with a machine by copying the hard drive file from a work station to a portable storage unit such as a memory stick or CD. So even with the needed tools to create virtual machines on work stations the end users could not use these machines.

One approach to overcome the problem of individuals within a large enterprise needing permission to connect virtual machines to the network and the ineffectiveness of work stations to run the tests would be to move the virtual machines into the data centers of the enterprises that is put the machines on the servers in the central data centers. A server could host many individual virtual machines. This approach was cost prohibitive at first but the advent of inexpensive server based virtualization software made the virtualization process cost effective ignoring the other costs associated with maintaining virtual machines . Although this approach would enable the system administrators to control access to the network this approach would dramatically increase the work load of these administrators. They would need to create and destroy these machines. Creating the machines would require adding a suite of software to the machines all of which require licenses. Once created each machine would need to be maintained including anti virus updates and software patches maintaining virtual machines in this respect is no different from maintaining real machines. Also for enterprises where specific profit centers own the physical host in a data center virtual machines could allow individuals from one profit center to use an asset paid for by another profit center.

Although software developers are one group of end users that can benefit from virtualization enterprises as a whole may benefit as well. Through virtualization these enterprises can maximize their computer assets and better manage their capital expenditures. For example computer assets allocated to disaster recovery can host virtual machines during normal operations and then quickly be converted for disaster recovery use by destroying the virtual machines.

In view of the foregoing there is a need to provide systems and methods that can allow end users to access virtual machines resident in a data center and provide administrators with entire control over the machines while minimizing the work required by the administrators to create and destroy the machine and minimizing the costs associated with the machine.

The present invention provides systems and methods that provides a self service mechanism where end users can activate and use virtual machines housed in a data center and an administrative mechanism that gives system administrators control over the machines. One aspect of the present invention provides a system for managing virtual computer resources. The system includes a provisioning module operable to receive a request to act on a virtual resource and automatically generate instructions to implement the request and further operable to dynamically monitor the virtual resource and a plurality of physical hosts each comprising one or more virtual resources and each associated with an agent wherein the agent is logically connected to the provisioning module and operable to receive the instructions and to act on the virtual resource in response to the request and further operable to dynamically provide the status of the virtual resource.

Another aspect of the present invention provides a system for managing virtual computer resources. The system includes a provisioning module operable to receive a request to act on a virtual resource and automatically generate instructions to implement the request a workflow engine logically connected to the provisioning module and operable to instantiate a workflow in response to the request to control the lifecycle of the virtual resource one or more templates comprising a configuration for a virtual resource wherein the received request corresponds to a template and further comprising an allocation of physical resources associated with a plurality of physical hosts and the plurality of physical hosts each comprising one or more virtual resources and each associated with an agent wherein the agent is logically connected to the provisioning module and operable to receive the instructions and to act on the virtual resource in response to the request.

Yet another aspect of the present invention provides a method for controlling computer resources. The method includes the steps of a presenting a user interface to an end user comprising one or more controls for submitting requests for actions on a computer resource b receiving a request for an action on a computer resource c automatically instructing an agent associated with one of a plurality of physical hosts in response to receiving the request wherein the instruction comprises an action associated with the request and d receiving status information on the computer resource.

Yet another aspect of the present invention provides a system for managing computer resources. The system includes a provisioning module operable to receive a request to act on a computer resource and automatically generate instructions to implement the request and further operable to dynamically monitor the computer resource and a plurality of physical hosts each comprising one or more computer resources and each associated with an agent wherein the agent is logically connected to the provisioning module and operable to receive the instructions and to act on the computer resource in response to the request and further operable to dynamically provide the status of the computer resource.

Exemplary embodiments of the present invention provide systems and methods that provide a self service mechanism where end users can activate and use virtual machines housed in a data center and an administrative mechanism that gives system administrators control over the machines. Exemplary systems employ a web portal to allow users to access the system to create and use virtual machines and manage these machines. The lifecycle of these machines are managed through workflows which allow for a simple process control environment. Further the system includes a robust database structure. The system also employs agents on physical hosts or proxy servers associated with the physical hosts to control the variety of virtual machines that may be created.

A business layer would provide workflows security and data access through one or more servers such as server . Server hosts the processes necessary to manage the lifecycle of virtual or real machines or other virtual or real resources such as storage resources or network resources. Storage resources may include hard drives on work stations computers on networks dedicated for storage or massive array network of computers for storage. Network resources includes physical network components and network connections. These processes allow for the provisioning maintenance and destruction of the machines. Also a security module resident on the server controls what processes a specific user may access. This business layer is referred to hereinafter at a provisioning system or a virtual machine provisioning system since the system manages resources and privileges for the virtual machines.

Virtual machines would live on physical hosts such as physical hosts . One physical host may be configured to operate a specific type of virtual machine or resource. So physical host may operate a MICROSOFT WINDOWS base virtual machine while physical host may operate a UNIX based virtual machine. The virtual machine can be in the form of an individual workstation a server or a network of machines. Typically a physical host would run a specific virtualization program such as MICROSOFT S VIRTUAL SERVER or VWWARE s virtualization program. A file server includes images of the software that would be loaded onto the virtual machines. That is the file server would have images of different combinations of software that correspond to a specific type of virtual machine such that when the virtual machine is created the software is copied from the file server into the physical host that is hosting that virtual machine.

A data layer provides a data store such as a SQL server that provides data needed by the business layer resident on server . For example the data may include workflows that manage the states of a machine configurations of virtual machines and configurations of physical hosts.

The operating environment provides an infrastructure that allows for the dynamic evaluation of all virtual and physical resources. The provisioning system can evaluate current use of resources both real and virtual. This dynamic accounting of resource use allows for allocating costs of system use that closely tract actual use of resources. Also the ability for end users to create and manage real and virtual resources without relying on administrators to perform many of the functions allows for just in time provisioning of physical and virtual resources which minimizes the inefficient use of machines. For example an enterprise would not need to set aside a large number of machines or storage space for a group in anticipation of that group ramping up its use of the computer resources. Instead the group can access the resources as needed. In this way the group need pay for the resources actually used only.

Each physical host structure may supports multiple virtual machines. As discussed above in reference to typically a single physical host structure such as physical host structure resident on physical host would run one type of virtualization software such as VMWARE. Also all of the virtual machines resident on the physical host structure would be based on the same operating system for the virtual machine. For example physical host structure may operate VMWARE s virtualization program and virtual machines may be UNIX based machines. In contrast physical host structure may operate MICROSOFT S VIRTUAL SERVER program and virtual machines may be MICROSOFT WINDOWS based machines. The number of virtual machines that may reside on a single physical host depends on the type of virtual machines established on the host the size of the host and the host resources allocated to virtual machines.

Information and options rendered on web pages are sent to a web server such as web server by one or more provisioning server modules resident on one or more servers such as server . These servers run workflows that in conjunction with a security module not depicted dictate the options available to the user through the web pages. The workflows of this exemplary embodiment are stored in a SQL server cluster . An instance of a workflow would be instantiated in response to a request such as a request from the user that the user wants to create a virtual machine. A specific workflow would be instantiated to govern a specific task.

The workflows running on the provisioning server modules also control agents such as agent resident on physical hosts. Each physical host would have a single agent running on it. Alternatively the agent may reside on a proxy server and interact with the physical host and virtual machines on that host remotely. These agents control virtual machines that reside on these physical hosts such as virtual workstations resident on physical host . In one embodiment these workflows push instructions to agents resident on the hosts through a web server such as web server . These instructions encompass each aspect of the virtual machine s lifecycle. A virtual machine s lifecycle is discussed in greater detail below in connection with . Alternatively the agent would periodically poll through the web server the provisioning server module to receive instructions regarding the hosted virtual machines.

The single agent resident on a single host is designed to interact with the Application Programming Interfaces APIs specific to the virtualization software resident on the server. As such the physical host has a single agent and operates a single virtualization software program. Through this interaction with the APIs the agent manages all aspects of a virtual machine its characteristics e.g. CPU memory storage or other virtual resource or network of resources resident on that physical host based on the instructions it receives from the workflows operating provisional server modules .

In one embodiment the agent would poll the provisioning server modules with two inquiries. One inquiry would be what is the state of virtual machines on physical host This inquiry allows the agent to ensure that its physical host mirrors the configuration that the provisioning server modules believes is in place. The agent periodically synchronizes its physical host with the configuration maintained by the provisioning server modules . The second inquiry would be what task do you have for me This inquiry enables the agent to be instructed to manage a virtual machine create it maintain it expire it and destroy it. By having the agent poll the provisioning server modules the system can be assured that the agent receives the instruction. This polling process avoids the need for a queuing mechanism at the agent under a system that pushes instructions to an agent. Although this polling aspect has this advantage over a push model one of ordinary skill in the art would appreciate that a push model can be readily employed.

In this exemplary embodiment the provisioning system includes an API web services module and a web service . The API web services module interacts with the web portal and the agent . In this way the operating environment differs from the exemplary embodiment of operating system which included a web farm of web servers that served as a conduit for information to user interfaces and to the agents resident on physical hosts.

A workflow engine includes workflows such as workflow and interacts with the web service module . Through this interaction the workflow engine receives requests from the user and the administrator submitted through web based forms and provides instructions that will be implemented by an agent resident on a physical host such as agent . The workflow engine would also access data access layer through the web server module . The data access layer then accesses a SQL database containing workflow states and a SQL database that includes virtual machine host data and metadata. One of ordinary skill in the art would appreciate that the data access layer could access a single collective database or distributed databases.

A database stores the state of current workflows. Since a single instance of a workflow exists during the lifetime of a virtual or real resource and typically a lifecycle includes gaps in time when the provisioning system is not doing anything as to the resource the database stores the current state of that workflow where the workflow is in its lifecycle. By storing the state in a database the workflow instance does not have to be maintained in memory. Also redundancies can be established to protect against the loss the state of a resource if a computer system fails. The database would include an XML description of the workflow and the code of the workflow. Since the code for each instance of a workflow is stored in the database each instance of a workflow even if for the same resource can exist in different versions. So an instance of a workflow for a specific resource can be in the middle of its lifecycle and another instance of the same workflow can be instantiated where this second instance is a later version with different operations. In this way the provisioning system can continually update the management tasks without affecting previously provisioned resources.

A database stores other data used by the provisioning system . These data include names of physical and virtual resources templates groups reservations allocations and the status of each resource. Queries to the database provides an instant snapshot of the use of all real and virtual resources. As such an enterprise can determine a precise measure of resource use and can allocate costs as appropriate. The database also includes an audit trail every action taken by a user administrator and workflow is recorded and stored in the database .

The exemplary security module is fine grained. The security module controls what parameters an end user such as end user can control for a specific virtual machine and these parameters could vary by groups of users or individual users. For example one type of user may not be allowed to turn off their virtual machines because regulatory requirements may mandate that the machines remain on to protect forensic data. The security module affects what information and options are rendered on the web page shown to the user thus controlling the options available to that user. The XML store includes security roles and descriptions. It includes in XML form definitions of each role see below for a discussion of roles task and operation that can be performed on the provisioning system . It maps to the active directory . The active directory includes the security authorization identity e.g. username and password for each user security groupings for users and information on each active virtual and real computer resource.

An image store which may reside on a server such as file server includes the images for the types of virtual machines that can be created. An image is a copy of the software and associated data that forms a machine s hard drive. Through the use of the image store specific configurations of software can be copies to the storage drives of the physical hosts that represent a virtual machine. For example the physical host operates VMWARE. The agent which may reside on physical host receives instructions from the provisioning system to create a virtual machine. Alternatively the agent may reside on a proxy server and interact with the physical host and virtual machines on that physical host remotely. The instructions include details on the type of machine to be created such as memory and storage characteristics. The agent would interact with the image store to copy the image of the software that defines the virtual machine onto a hard drive for the physical host . The image may be for virtual workstations such as virtual workstation or a virtual server not shown .

The agent also interacts through a virtual service API . The virtual service API is the interface for the agent to communicate with the virtualization software running on the physical host . The virtual service API would be unique to a type of virtualization software and the agent would be designed to interact with that specific The virtual service API . Physical hosts may run different virtualization software from physical host and as such would have different agents and virtual service APIs not shown . In this way a virtual machine host farm may operate diverse virtualization software and host diverse virtual machines. Indeed the virtual machine host farm may be in physically diverse places such that a set of physical hosts resides in one location and another set resides in a different location. These distributed hosts would be connected to the provisioning system through a communications link such as over the internet.

Typically the user can request the creation of a virtual machine extend or end a lease of a virtual machine and otherwise manage virtual machines that the user has created. In an exemplary embodiment the creation of virtual machines is facilitated by the use of templates. Templates are discussed in greater detail below in connection with . The provisioning system can interact with an agent such as agent to create and manage virtual resources other than virtual machines such as virtual storage and virtual networks multiple virtual machines networked together .

Although is directed at managing virtual machines the system for managing real computer resources such as storage or network resources is comparable. Users and administrators such as user or administrator access the provisioning system to manage a physical computer resource. The provisioning system interacts with a physical machine that includes the physical resource. As with virtualization described above the provisioning system interfaces through agents with APIs that reside on the physical computers and that control the physical resources. For example the user may access the provisioning system to create a logical unit number LUN a slice of storage on a massive array network of computers used for storage. The user can create the LUN map the LUN to a network and manage the lifecycle of the LUN. As with virtual machines this management is performed through a workflow specific to the task. The workflow would send instructions to an agent that is designed to interact with the specific API and translate the instructions from the user . Templates may be used that identify the types of physical computer resources that the user can create and manage. As with virtual machines the types of tasks that the user can perform would be controlled by the security module .

In the user hierarchy one or more enterprise administrators would administer to the resources of the enterprise . Additionally each group may have one or more administrators to administer the resources of the individual groups.

The exemplary provisioning system uses templates to define the virtual machines that an end user may create. A template is the definition of a virtual machine or allocation of a physical resource such as a LUN or type of network connection. for virtual resources the template specifies a storages space computer memory allocation and required software. The template also specifies a lease duration. Some applications of virtual machines require a short duration for example for running a software test. By having templates that define short term disposable virtual machines these machines can be created and destroyed within a patch cycle reducing the cost of maintenance for the machine. Other templates may have longer durations or may define a permanent virtual machine. In this way an end user chooses to create a specific type of machine. Typically but not necessarily the end user cannot override the allocation of resources in the template.

By limiting the number of templates that are available to a group or enterprise the virtual machines can more easily be controlled. For example a group administrator can more readily manage the resources allocated to the group by having specific defined templates that used prescribed resources. Similarly security breaches such as a virus may be contained by limiting the range of templates available and disposing of machines of a specific type of template that may be susceptible to an assault from a virus.

One of ordinary skill in the art would appreciate that a system could allow an unlimited number of templates or allow a requestor to set the parameters for the machine for each virtual machine request. This type of system would not benefit from the control that is provided by having specific limited templates. Additionally the system may allow the user to point to a specific group of physical machines and create a set of virtual machines that mirror the physical machines. In this case the template process would be skipped and the characteristics of the actual machines would be bulk imported by the system to create the virtual machines.

A role provides for a group administrator. The group administrator can add end users to a group establish templates for the group approve the use of a specific template request turn machines on off or dispose of the machines and extend leases such as for group . For example a specific template may require administrator approval. Approval may be based on the overall availability of resources in the group or projected upcoming need. Similarly the administrator may have to approve the extension of a lease given the status of the available resources.

A role provides for an enterprise administrator such as for enterprise . The enterprise administrator may do everything a group administrator can do. Enterprise administrators also manage physical hosts set reservations create and define groups and may move virtual machines on physical hosts. Reservations are a combination of CPU disk space and memory allocated on a virtual server. Reservations are discussed in greater detail below in connection with . Additionally an enterprise administrator may be able to override the parameters in a template to allow an end user to access resources or otherwise configure a machine in a way that available templates would not allow.

Enterprise administrators can also query the status of all machines at any time. In that way the administrator can quickly understand how resources are being used. The administrator may use this feature to determine the machines that may need a critical security patch. The administrator can also quickly maintain the system by destroying one some or all of the virtual machines. This action may be needed to protect other resources on the network such as from a virus or may be needed to free resources for another application. Also by being capable of moving virtual machines the administrator can perform physical maintenance on a machine such as upgrading its memory without disrupting the virtual machines.

One of ordinary skill in the art would understand that other roles may be appropriate for an enterprise system and that the exemplary roles and privileges described above can be consolidated or otherwise structured differently.

Following the Active state the machine moves into an Expired state . In the Expired state the machine is turned off. However in the Expired state the machine is tombstoned rather than immediately destroyed. During the tombstone period the machine can be restarted and the lease extended. The tombstone period for example 7 days allows a user who may otherwise not have realized that the machine was expiring to restart the machine if needed. This tombstone period is similar to what is done with a physical machine. It is turned off but not disconnected. If someone complains before the end of a short period of time that the deactivated resource is needed then the physical machine can be restarted without a loss of data or other resources.

The next state is a Disposing state . In this state the machine is disposed of and the files cleaned. In a Final state the resources that were associated with the virtual machine are retuned to the pool to be accessed by another user. The workflow instantiated at the beginning of the life cycle that is at the Provisioning state takes the machine through to this final state. One of ordinary skill in the art would appreciate that the provisioning system could employ multiple workflows or hard coded routines to control the life cycle of a machine or other virtual resource.

At step the provisioning system instantiates a provisioning workflow to create the requested machine. The machine enters the Provisioning state . The workflow instructs an agent such as agent to create the machine as defined in the template. For an embodiment that employs agents that poll the provisioning system the agent gets the instruction to create the machine the next time the agent polls the provisioning system . At step the workflow chooses a name and callback for the machine. At step the workflow then notifies the user of the name of the machine and the expiry information for the machine.

At step the created machine is active and the end user uses the machine. The workflow changes to the Active state . At step the Active workflow notifies the user when the expiration date is near and that the machine will be tombstoned. If the user does not extend the lease the machine enters the Expired state for the tombstone period at step . Alternatively the lease could be extended and the Active state continues. The request to extend the lease may need approval from the group administrator. The lease could still be extended during the Expired state .

After expiration at step the machine enters the Disposing state and is destroyed. This destruction includes removing all of the files associated with the machine. At step the machine enters the Final state and its resources are returned to the group pool for access by other users. Alternatively a virtual machine could be powered off at step yet not destroyed or cleaned. In that way some resources associated with the machine can be returned to the group reservation pool at step except for the disk storage space that contains the files for the virtual machine and the machine can lay dormant until needed again.

When a request comes in for a virtual machine the system creates an instance of that type of workflow associated with the handler of the request. An instance of the workflow comes to life at the Start step . The workflow remains alive for the duration of the lifetime of the virtual machine. The system disposes of the workflow when the machine is destroyed and the files have been cleaned up. So each virtual machine that exists in the environment actually has an associated workflow instance that exists at any one time and each one has a separate workflow. This approach allows the system to keep track of the status of all machines. Also system administrators such as an enterprise administrator can change a workflow as the system is running or create a new workflow any new virtually machines created after the change will follow the new workflow. Graphical tools enable an administrator to convert a simple process flow into a workflow for the system. The administrators can create workflows without knowing how to program. They actually create the flow and describe visually the flow and the business process of creating a machine in the environment. They can add in all the steps required to provision a machine. All of this work can be done without writing computer code. For example using these graphic tools an administrator can reflect interactions within an activity or between activities in a workflow such as interactions and .

Referring to a workflow begins at Start . The next action of the workflow responds to a request. The request may need approval as seen in the next action of the workflow. The machine is then initialized active tombstoned then finalized. The workflow depicts interactions between activities such as reflected in interaction where a tombstoned virtual machine can be reactivated when its lease is extended. This workflow goes through the complete life cycle of the machine. The states may trigger additional workflows such as a workflow that emails the user when the expiry date approaches. In this exemplary embodiment the workflow is an XML document stored in the SQL server database.

Referring to a screen provides an initial screen that may be seen by an end user of virtual machines when they request a machine be created. The user can choose the type of machine they would like to create from the Virtual Machines menus. The left side of the screen allows the user to Request New Machine. In response to that request the screen presents those templates available to the user. In exemplary screen the user is a member of a single group Research and Development Virtual Lab . A user that is a member of multiple groups would be presented templates for each group for which the user belongs. A template type with the padlock next to it Omni 3.2 Server 1 GB 10 GB as seen in screen requires approval from an group administrator.

Referring to a screen shows the user the current machines leased to that user. The screen includes the status of the machine and its expiry date.

Referring to a screen depicts an initial screen presented to a user for creating a virtual machine where that user is a member of multiple groups in this illustration NY Research and Development Virtual Lab DBE Virtual Lab DTACC Virtual Lab and Research and Development Virtual Lab . As can be seen in the illustrative screen the user has access to multiple templates in multiple groups. Some of these templates require administrator approval to create.

Referring to a screen presents the user with the parameters of a requested virtual machine so the user can confirm that the requested machine has the necessary parameters. In this case the user has extended privileges perhaps by also being a group administrator such that the user can enter additional custom properties for the requested machines. Typically a provisioning system would limit the ability of users to add custom properties so as to better manage available resources. Of course in some embodiments of the present invention end users may have the flexibility to add custom properties as part of the creation process.

Referring to a screen provides an administrator with a summary report of the status expiry date owner group and host of virtual machines within a group. This status provides a dynamic picture of the resources being managed. The arrow next to the Machine Name for individual machines indicates that a drop down menu exists that allows the administrator to manage the machine.

Referring to a screen illustrates actions that a user may take to manage machines leased to that user. Each machine has an associated drop down menu indicated by the arrow next to the Machine Name . This menu allows the user to turn off reprovision or dispose of the machine connect to the machine set an expiry reminder or change the expiry date.

Referring to a screen illustrates a screen shown to a group administrator when the administrator must approve a request to create a virtual machine. A system may always require this approval never require approval or require selective approval for machines that may tax the resources available to a group or for another reason .

Referring to a screen allows the administrator to view and manage the templates in the administrator s group or groups. If applicable the specific group that uses the template would be identified under the Group heading. In this illustration the administrator administers to multiple groups.

Referring to a screen allows an enterprise administrator to manage and view resource groups. This listing would include the Group Name and the name of the Administrator for that group under the appropriate headings. As can be seen in the menu to the left of screen the enterprise administrator can Create Group that is can create a new group. The arrow next to the Group Name for individual groups indicates that a drop down menu exists that allows the enterprise administrator to manage the group.

Referring to a screen allows the administrator to see a list of physical host servers. The arrow next to the Host Name for individual hosts indicates that a drop down menu exists that allows the enterprise administrator to manage the host. A screen shows the options available to the administrator in managing the host including adding a new reservation to the host thus allocating host resources to a group.

Referring to a screen allows an administrator to manage and view a resource group allocated to one or more physical hosts. This screen provides the administrator with the quota of resource allocated to each host. This listing would include the specific Host name designated by the enterprise.

Referring to a screen allows an administrator to create or edit a template for a machine that can be created by group members. The details of the machine may include the specific network drive path for the virtual hard drive VHD such as omni32test VHD VM. The template provides the configuration for the machine and its lifespan. Custom properties includes the BuildType or the type of operating system for the machine. Custom properties also include the administrator s name and email address.

The discussion above focuses on virtual machines. One of ordinary skill in the art would appreciate that the provisioning system could be used to automate the management of physical computers such as servers. The same web portal and workflow model could be employed to allow administrators to status and control machines such as turning off machines that are not sued over the weekend to conserve energy. Additionally other virtual resources such as virtual storage and virtual networks could be created and managed using the present invention.

One of ordinary skill in the art would appreciate that the present invention provides systems and methods for managing virtual and real machines. A provisioning system allows a user to create and manage machines through a self service approach. The provisioning system interacts with one or more agents that manage the lifecycle of a machine. The system may provide templates that enable a user to readily create a virtual machine. The system may also include interfaces for administrators to manage virtual and real machine resources.

