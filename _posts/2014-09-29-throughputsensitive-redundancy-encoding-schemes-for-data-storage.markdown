---

title: Throughput-sensitive redundancy encoding schemes for data storage
abstract: Techniques for optimizing data storage are disclosed herein. In particular, methods and systems for implementing redundancy encoding schemes with data storage systems are described. The redundancy encoding schemes may be scheduled according to system and data characteristics. The schemes may span multiple tiers or layers of a storage system. The schemes may be generated, for example, in accordance with a transaction rate requirement, a data durability requirement or in the context of the age of the stored data. The schemes may be designed to rectify entropy-related effects upon data storage. The schemes may include one or more erasure codes or erasure coding schemes. Additionally, methods and systems for improving and/or accounting for failure correlation of various components of the storage system, including that of storage devices such as hard disk drives, are described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098433&OS=09098433&RS=09098433
owner: Amazon Technologies, Inc.
number: 09098433
owner_city: Reno
owner_country: US
publication_date: 20140929
---
This application is a continuation of application Ser. No. 13 535 306 filed Jun. 27 2012 entitled THROUGHPUT SENSITIVE REDUNDANCY ENCODING SCHEMES FOR DATA STORAGE now allowed and is related to U.S. patent application Ser. No. 13 535 200 filed Jun. 27 2012 entitled SCHEDULED OR GRADUAL REDUNDANCY ENCODING SCHEMES FOR DATA STORAGE U.S. patent application Ser. No. 13 535 281 filed Jun. 27 2012 entitled CORRELATED FAILURE ZONES FOR DATA STORAGE and U.S. patent application Ser. No. 13 535 294 filed Jun. 27 2012 entitled LAYERED REDUNDANCY ENCODING SCHEMES FOR DATA STORAGE the full disclosures of which are incorporated herein by reference in their entirety.

A considerable amount of data are generated and consumed in the course of modern electronic communication. Much of the generated data reside in long term storage repositories but in many cases the stored data may not be accessed frequently. In many cases the older the data are the less frequently they are accessed. Similarly less frequently accessed data may have lower performance requirements than more active data. Thus data storage systems that are designed or implemented to handle the performance accessibility and or durability requirements of newer data may be overbuilt for older colder data. While modern hierarchical hardware storage systems exist to make more efficient use of storage resources it can be burdensome and or difficult for such systems to scale with increasingly large numbers of concurrently connecting customers with different performance accessibility and or durability demands for stored data.

In the following description various embodiments will be described. For purposes of explanation specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However it will also be apparent to one skilled in the art that the embodiments may be practiced without the specific details. Furthermore well known features may be omitted or simplified in order not to obscure the embodiment being described.

Techniques described and suggested herein include systems and methods for implementing and or supporting a configurable redundancy encoding scheme in and or using a data storage system. For example a redundancy encoding scheme to be applied to data on a data storage system may be adjusted based on a changing throughput reliability bandwidth or accessibility requirement for the data. The redundancy encoding scheme may be varied based on characteristics of the stored data objects e.g. size the intended use or pattern of access to the data various operational characteristics of the storage system or in some embodiments a customer specified requirement for the data. In some embodiments a general redundancy encoding scheme that is independent of one or more of the parameters described herein may be initially selected and applied whereupon an additional or overriding encoding scheme may be determined based on such parameters and applied as changes to the various parameters become known to the system.

In another example described herein the redundancy encoding scheme may include a scheduled periodic or gradual encoding of or effect upon the stored data. For example the system may determine or a customer may specify that data stored upon the data storage system will have access characteristics such as frequency of access that change over time. In such instances a redundancy encoding scheme that accounts for e.g. a gradual decay in access frequency may be specified to run against a determined schedule in some cases applying increasingly aggressive redundancy encodings to match the decay. At each interval of the schedule the system may determine an appropriate redundancy encoding to apply to the data based on at least one of a number of factors including the age of the data.

Another example described herein includes a tiered redundancy encoding scheme that applies a different encoding to different tiers or layers of the storage system. For example one layer may comprise a set of datacenters another layer may comprise the storage servers within a given datacenter and another layer may comprise the data storage devices in a given storage server or group of servers such as hard disk drives. Such layers may be abstracted to any group of entities of the data storage system that share common failure modes characteristics or the like. The redundancy encoding scheme may thus be tiered with a plurality of redundancy encodings to more closely account for the varying characteristics of each layer and thus alter various operational characteristics of the entire system e.g. durability of stored data time to recover time to failure and others . In some embodiments a primary redundancy encoding scheme is applied to the overall system and one or more secondary erasure coding schemes are determined or modified to track the topology or characteristics of the storage system.

Also as described herein storage devices such as electromechanical hard disk drives may be modified to include failure correlated write zones. For example hard disk drives that probabilistically fail most frequently due to head strikes or actuator failures may be modified to correlate one write zone per platter side such that when one head or actuator for a given platter side fails the remaining platters remain functional and accessible. Such modifications may also include the forced remapping of any bad sectors within a given write zone to another known good area within the same write zone such that any failures are contained within the write zone. Such write zones may in some embodiments add an additional layer to the storage system and thus when implementing a tiered redundancy encoding scheme may improve certain operational characteristics of the overall system.

In some embodiments the data storage system comprises multiple subsystems that each have a corresponding role. For example as illustrated in the data storage system may include a set of front end services a control plane and a data plane . In such embodiments the front end services are implemented by a system that provides one or more public access components to interface the data storage system with external entities such as the customers described herein. For example the front end services may include an application programming interface API to enable a user to programmatically interface with the various features components and capabilities of the data storage system. Such capabilities may include data storage data retrieval metadata queries configuration of various operational parameters and the like. The front end services may also include customer authentication customer authorization usage metering and billing related functions. Additionally in some embodiments the front end services may include an ingress and egress point for all data flowing into and out of the data storage system e.g. to and from customers.

In some embodiments the control plane provides transient storage or caching for data transiting between the data plane and the front end and thus to and from external entities . The term plane refers in some embodiments to a collection of individual components that together are a subsystem for providing a set of functionality. For example in some embodiments the data plane may include redundancy encoded data described in more detail below that requires more time to access than would be reasonable for a customer to actively wait. As a related example data ingested from a customer may require a considerable length of time to store. In such embodiments the control plane provides temporary storage for data to be stored and thus awaiting encoding and data to be retrieved by a customer in a timeframe that is independent from a customer perspective of that of the data plane. Some embodiments may include job planning optimization checkpointing and recovery for customer jobs the benefits of which become more evident as the customer job becomes larger or more demanding.

In some embodiments the data plane includes storage related functionality including storage hardware detection of entropic effects upon data stored upon the storage hardware and anti entropy correction routines. Entropic effects include but are not limited to performance degradation due to data fragmentation resulting from repeated write and rewrite cycles hardware wear e.g. of magnetic media data unavailability and or data loss due to hardware malfunction environmental factors physical destruction of hardware random chance or other causes. The data plane may detect such effects and in some embodiments may preemptively and or reactively institute anti entropy correction routines and or policies. Such anti entropy correction measures may include but are not limited to the various redundancy encoding schemes described in detail herein. The storage hardware may include any number and type of storage devices and entities such as datacenters storage servers hardware storage devices such as tape drives hard disk drives and solid state devices and the like. Such hardware may be organized into any topology including hierarchical topologies.

As an alternative example a simpler storage system may utilize a data plane wherein the various devices servers and or datacenters are substantially similar in price performance capacity and or functional attributes. As may be contemplated storage devices may include any media capable of storing data and in any configuration including solid state storage devices SSDs conventional electromechanical hard disk drives hybrid hard disk drives shingled magnetic recording hard drives optical media optoelectrical media magneto optical media and tape drives. In some embodiments such storage devices including hard drives are not enterprise level drives but are e.g. consumer level or commodity level drives that may not have a large number of reliability enhancing features. Likewise datacenters storage servers and storage devices may be physical virtual or any abstraction thereof e.g. instances of distributed storage and or computing systems . Similarly the components of the data plane may be dispersed local or any combination thereof. For example various computing and or governing components such as those portions responsible for entropic effects detection and related corrective measures may be local or remote to any number of datacenters servers or storage devices which in turn may be local or remote relative to one another. Any of the exemplary storage system configurations described herein as well any other storage system configuration or combination may benefit from the various techniques described herein and in particular the various redundancy encoding techniques described in more detail herein.

As will be appreciated the greater the number of additional values generated the greater the durability of the data i.e. the less likely a destructive event will prevent the minimum of two messages from being transmitted. The ratio between the number or size e.g. in bytes of shards stored and the number or size of the shards necessary to reconstruct the original data is referred to as stretch factor. In many embodiments the topology and storage strategy of the data storage system have a theoretical minimum stretch factor below which the encoding provides no real redundancy benefit. In a multi layer storage system where several layers e.g. datacenters storage servers storage devices are nested as described and illustrated in connection with however each layer and each component thereof introduces a different set of failure characteristics including differing modes of failure and failure rates per component. For example a server or rack of servers may malfunction due to a tripped circuit breaker but the remainder of the datacenters or the servers within may not be affected. As another example a device such as a hard disk in a server may develop defective portions of the media therein but other hard disks and in some instances the remaining portions of the affected hard disk s media may remain accessible. As such in most embodiments the theoretical minimum stretch factor is approached only with an asymptotically increasing number of shards per input data object. To a certain point a greater number of shards per input data object may depending on the system topology and makeup of the data storage system increase the bandwidth of the system as the shards will be stored upon and read from a greater number of devices in parallel. However with a greater number of shards stored the number of input output operations per second IOPS per byte of object stored increases.

In some embodiments an optimal redundancy encoding scheme such as an erasure coding scheme may be determined from for example the object size and the operational characteristics of the device or layer upon which the data object is being stored. A storage system may determine or alter such an optimal redundancy encoding scheme as well as various implementation details e.g. the encoding itself the number of shards into which the encoded object should be broken and so on from an analysis of a transaction rate requirement e.g. bandwidth or throughput requirement for the data a durability requirement for the data e.g. annualized failure rate or other measure of data loss per unit time and or various operational characteristics of the storage system and constituent components such as the bandwidth versus throughput curve of a given storage device. It is contemplated that such an analysis may be performed by the storage system itself for example upon the data stored thereon. In some embodiments the transaction rate requirements are provided via API by a customer of the storage system. In some embodiments the data storage system provides the transaction rate requirement for example based on analyzing the performance characteristics of the storage system and on the object size s of the data stored and optionally the associated customer s access patterns to the data. As will be appreciated the granularity of a redundancy encoding scheme that is predicated on for example the sizes of varying objects customer uses and the like is scalable. For example a different scheme may apply to each object group of objects customer or the like. Alternatively the scheme may be based on local or global averages of various data and performance characteristics. In some embodiments a combination of the two approaches may be used.

In some embodiments the redundancy encoding scheme may have a scheduling component. As stored data ages the throughput requirement may change at a known or modelable rate. In many embodiments where frequency of access to the stored data decreases as the data s age increases the throughput requirement for stored data may decrease as well as the speed of retrieval becomes less of a factor. In embodiments where such a change may be known ahead of time determinable from a system analysis of a customer s profile or prior data usage for similar data provided by the customer itself or otherwise statistically modelable and or predictable by the system based on prior knowledge of data access patterns to data previously stored across the system a schedule wherein the redundancy encoding scheme applied to the data is updated and reapplied to the data may be implemented to allow the encoding to match the change at specified intervals. For example data may be re encoded to alter the stretch factor the number of shards per object or the minimum number of shards required to reconstruct the data in some instances by altering the applied erasure code s .

In some embodiments cost savings generated by e.g. decreasing the stretch factor in response to a slackening IOPS byte requirement or durability requirement may be passed to the customer. In some embodiments where the future throughput requirement is not known in advance or otherwise predictable a coding update schedule may likewise be incorporated in a garbage collection like process. For example some or all data objects stored on the data storage system that are of a specified age or greater may be recoded as part of the scheduled redundancy encoding scheme to decrease the stretch factor of the data objects. In some embodiments the creation of the scheduled redundancy encoding scheme may be initiated e.g. via API by a customer associated with the stored data. It will be appreciated that one intended effect of the redundancy encoding schemes described herein including a scheme that is scheduled to adjust encoding to alter access and performance characteristics of data based at least in part on age is to provide a hierarchical storage management HSM system without necessitating multiple tiers of hardware storage devices e.g. SSDs hard drives and tape to achieve such differentiation. However it is contemplated that the techniques described herein also apply to data storage systems with a hierarchical hardware storage structure to provide such systems with similar benefits.

In such a layered environment a redundancy encoding scheme in some embodiments including the application of one or more erasure codes may be implemented such that the transition between redundant recoverable and unrecoverable is not approached as quickly or as catastrophically or alternatively to retain durability while decreasing overall stretch factor. Such a redundancy encoding scheme may in some embodiments allocate different encodings to multiple hardware layers for a given data object or set of data objects based on the failure characteristics of the layers rather than encoding data at only one layer. In such a layered coding scheme a primary erasure coding is determined based on the global failure characteristics and applied to the data stored upon the system. In the example illustrated the primary erasure coding scheme may be applied and or determined globally and or based on the characteristics of the datacenter layer.

In some embodiments the failure characteristics of one or more of the other layers for example the server and or device layers are analyzed for correlation with that of entities with the same layer and or other layers. In some embodiments the failure modes of constituent entities of the layer are analyzed. Based on the analysis a secondary encoding scheme to either augment or supplant the primary scheme is determined for the data stored to or inherited by the layer s for which the analysis was performed. The secondary encoding scheme is then applied to data stored or inherited by the applicable layer. In some embodiments either or both the primary and secondary encoding schemes may be updated periodically or continuously based on changing failure characteristics of the constituent entities of the applicable hardware layers. As the secondary and primary encoding schemes may in some embodiments balance the durability of data with the corresponding stretch factor in some of such embodiments a customer may specify programmatically or otherwise whether they prefer enhanced durability or decreased cost. Such a customer election may be incorporated into the determination of either or both the primary and or the secondary encoding schemes.

An example of such a layered redundancy encoding scheme is provided herein. Assuming for the sake of example that the stretch factor associated with the primary encoding at a datacenter layer comprising three datacenters is 2.0 with an average incidence of catastrophic datacenter failure of once per one hundred years assuming a 5 annual failure rate for devices in the device layer and ignoring the server layer for exemplary ease the overall durability of the system for the 2.0 primary stretch factor i.e. four encoded objects or blocks stored with two required for recover of the original object the overall durability of the system is approximately one unrecoverable failure per one hundred billion object years. However upon analyzing the 5 exemplary annual failure rate per device upon which this determined durability is predicated a system or operator may determine that the entire device only fails 4 of the time while losing two or fewer data blocks 0.99 of the time and three or more data blocks 0.01 of the time.

Additionally the system may determine for sake of example that the average object size stored to the devices in the device layer is 100 blocks. Thus a secondary erasure coding to apply to the device layer may have a 1.02 stretch factor i.e. an object is broken into 102 shards or blocks of which 100 are required to reconstitute the original data. When applied the exemplary secondary erasure coding allows the disk to tolerate two or fewer missing blocks per object and still not lose the object thus decreasing the annual failure rate of the device from 5 to 4.01 which is significant given that the overall stretch factor associated with the layered redundancy encoding scheme has only increased to 2.0 1.02 or 2.04. Thus using a layered redundancy encoding scheme object storage costs may decrease for a given durability or conversely durability may increase for a relatively small increase in cost.

The layering of multiple encoding schemes may in some embodiments extend to an even more granular level than the device layer. Device zone layer comprising multiple zones of the individual devices in the device layer is illustrated. Such zones may in some embodiments be implemented or selected based on an analysis of the failure modes and characteristics of the parent devices to minimize certain failure modes or decrease correlation between failures. While such zones may be implemented upon any storage device as may be contemplated by the practitioner embodiments where the zones are implemented on platter based devices such as hard disk drives are exemplarily described herein.

In some embodiments correlated failure zones may be created upon the hard disk each zone corresponding to a single platter side. Such zones may be created by adapting the hard disk in software e.g. by using low level commands accepted by the hard disk for example ATA or SCSI commands in hardware by altering an attached host adapter or the hard disk s controller or by modifying the firmware of the disk s internal controller. In some embodiments any remapping requests for apparently defective or inaccessible sectors within a given zone e.g. by a drive s host system the drive itself or a user of the drive are serviced by the adapted or modified drive to only remap to another sector or sectors within the same zone. As in some embodiments the zone corresponds to a platter side the correlation of failures between platter sides and the associated read and write mechanisms is reduced or eliminated.

In some embodiments an adapted or modified drive may require that any write and or read requests to the drive include a requested zone or platter identifier so as to further increase the utility of any modified drive malfunctioning in the manner described above. As may be contemplated such adaptations modifications and or implementations may increase the overall reliability of the modified device as well as the durability of the data stored thereon. Additionally in some embodiments the zones may collectively or individually addressed as a layer as described in connection with and thus be subject to an application of an associated secondary redundancy encoding to increase the reliability of stored data for minimal cost or to decrease storage cost for a given durability level also as described in connection with at least .

A data transaction rate requirement is received from which one or more appropriate redundancy encoding schemes such as erasure coding schemes as described in connection with at least are determined . As described in connection with at least the transaction rate requirement may be a bandwidth requirement a throughput requirement or some balance or combination of the two and be either or both derived by an implementing system based on object sizes of the stored data or provided manually by some entity including the owner of the data. As previously described such requirements may be manually provided by programmatic means e.g. through an API or through a user interface. In some embodiments the erasure coding schemes are determined based on an analysis of the transaction rate requirement the operational characteristics of the storage system or components thereof such as the performance characteristics of a given storage device as throughput and or bandwidth requirements for data stored thereon are increased or decreased and or durability requirements. The durability requirements may be determined or set by any applicable entity including the implementing system the entity determining the coding scheme or one or more customers connected to the data. For example as previously described durability requirements may be determined by analyzing the data itself to determine an expected usage pattern or use case for the data as well as by analyzing a failure rate per unit time of the implemented storage system or components therein. Such requirements may also be set by the implementing storage system as a matter of policy requested or determined by the customer associated with the data or by some other entity with input into the system.

After the erasure coding schemes are determined one or more of the determined schemes are applied to data stored upon the storage system . Such schemes may be applied to data existing on the system as a system policy for data to be written or some combination therebetween. Optionally at some point after the initial set of coding schemes have been applied and upon receiving at least an updated transaction rate requirement for the data one or more of the erasure coding schemes may be updated to address the updated requirement and the updated scheme may be applied to the data . The nature manner of communication and determination of the updated requirements and updated coding scheme may be similar to that which was previously described in connection with steps and . Additionally the data upon which the updated scheme is applied may in some embodiments first be decoded to regenerate the original data prior to the application of the updated scheme. Alternatively the updated scheme may overlay and or augment the originally applied scheme.

The determined encodings may then be applied to the data according to the schedule . In some embodiments the schedule is intended to decrease the stretch factor over time of data subject to the scheme in order to match a decaying durability or throughput requirement. As previously discussed such decreases may inure to the benefit of either or both the customer associated with the data and the storage system itself and the balance between cost savings durability increases and system utilization efficiency may be defined by the customer the system or both e.g. through API requests . It is contemplated that such scheduled schemes may be implemented as or wholly constitute generational garbage collection like routines that optimize various storage characteristics of the data at specified intervals and based at least in part on system conditions and characteristics such as system utilization measured reliability and the like.

As noted analysis may dictate or influence the generation of a one or more redundancy encodings such as one or more erasure codings for one or more of the layers for which the analysis was performed. For example a primary erasure coding may be determined for the datacenter layer of while secondary erasure codings may be performed to minimize one or more analyzed failure modes of e.g. the device layer . Such erasure codings both primary and secondary may be generated to either increase durability for a small increase in stretch factor or to hold durability at a prescribed level and further decrease stretch factor and in some embodiments cost and or storage efficiency. After such erasure codings are generated they are applied to the applicable layers either to supplant an existing erasure coding e.g. an after determined secondary erasure coding replacing a general primary erasure coding for a subset of data or to augment it e.g. as provided in the example provided in connection with .

The device is thereafter modified and or adapted to create the zones as well as to respond to write and remap requests by isolating writes and remaps to a given zone . As described in connection with the device may be adapted or modified by a number of methods including modification of controllers firmware updates software implementations and the like. For example as exemplarily described in connection with at least an electromechanical hard disk drive may be rezoned such that each zone correlates with a given platter side such that the disablement or malfunction of the read write apparatus for that platter side does not prevent other platter sides from being accessed. Optionally one or more of the resultant zones may be grouped into a zone layer as part of a layered data storage system such as the layered system described in connection with and a redundancy encoding for example the erasure coding also described in connection with may be updated to take the failure characteristics of the zone layer or the adapted device into account.

The illustrative environment includes at least one application server and a data store . It should be understood that there can be several application servers layers or other elements processes or components which may be chained or otherwise configured which can interact to perform tasks such as obtaining data from an appropriate data store. As used herein the term data store refers to any device or combination of devices capable of storing accessing and retrieving data which may include any combination and number of data servers databases data storage devices and data storage media in any standard distributed or clustered environment. The application server can include any appropriate hardware and software for integrating with the data store as needed to execute aspects of one or more applications for the client device handling a majority of the data access and business logic for an application. The application server provides access control services in cooperation with the data store and is able to generate content such as text graphics audio and or video to be transferred to the user which may be served to the user by the Web server in the form of HTML XML or another appropriate structured language in this example. The handling of all requests and responses as well as the delivery of content between the client device and the application server can be handled by the Web server. It should be understood that the Web and application servers are not required and are merely example components as structured code discussed herein can be executed on any appropriate device or host machine as discussed elsewhere herein.

The data store can include several separate data tables databases or other data storage mechanisms and media for storing data relating to a particular aspect. For example the data store illustrated includes mechanisms for storing production data and user information which can be used to serve content for the production side. The data store also is shown to include a mechanism for storing log data which can be used for reporting analysis or other such purposes. It should be understood that there can be many other aspects that may need to be stored in the data store such as for page image information and to access right information which can be stored in any of the above listed mechanisms as appropriate or in additional mechanisms in the data store . The data store is operable through logic associated therewith to receive instructions from the application server and obtain update or otherwise process data in response thereto. In one example a user might submit a search request for a certain type of item. In this case the data store might access the user information to verify the identity of the user and can access the catalog detail information to obtain information about items of that type. The information then can be returned to the user such as in a results listing on a Web page that the user is able to view via a browser on the user device . Information for a particular item of interest can be viewed in a dedicated page or window of the browser.

Each server typically will include an operating system that provides executable program instructions for the general administration and operation of that server and typically will include a computer readable storage medium e.g. a hard disk random access memory read only memory etc. storing instructions that when executed by a processor of the server allow the server to perform its intended functions. Suitable implementations for the operating system and general functionality of the servers are known or commercially available and are readily implemented by persons having ordinary skill in the art particularly in light of the disclosure herein.

The environment in one embodiment is a distributed computing environment utilizing several computer systems and components that are interconnected via communication links using one or more computer networks or direct connections. However it will be appreciated by those of ordinary skill in the art that such a system could operate equally well in a system having fewer or a greater number of components than are illustrated in . Thus the depiction of the system in should be taken as being illustrative in nature and not limiting to the scope of the disclosure.

The various embodiments further can be implemented in a wide variety of operating environments which in some cases can include one or more user computers computing devices or processing devices which can be used to operate any of a number of applications. User or client devices can include any of a number of general purpose personal computers such as desktop or laptop computers running a standard operating system as well as cellular wireless and handheld devices running mobile software and capable of supporting a number of networking and messaging protocols. Such a system also can include a number of workstations running any of a variety of commercially available operating systems and other known applications for purposes such as development and database management. These devices also can include other electronic devices such as dummy terminals thin clients gaming systems and other devices capable of communicating via a network.

Most embodiments utilize at least one network that would be familiar to those skilled in the art for supporting communications using any of a variety of commercially available protocols such as TCP IP OSI FTP UPnP NFS CIFS and AppleTalk. The network can be for example a local area network a wide area network a virtual private network the Internet an intranet an extranet a public switched telephone network an infrared network a wireless network and any combination thereof.

In embodiments utilizing a Web server the Web server can run any of a variety of server or mid tier applications including HTTP servers FTP servers CGI servers data servers Java servers and business application servers. The server s also may be capable of executing programs or scripts in response requests from user devices such as by executing one or more Web applications that may be implemented as one or more scripts or programs written in any programming language such as Java C C or C or any scripting language such as Perl Python or TCL as well as combinations thereof. The server s may also include database servers including without limitation those commercially available from Oracle Microsoft Sybase and IBM .

The environment can include a variety of data stores and other memory and storage media as discussed above. These can reside in a variety of locations such as on a storage medium local to and or resident in one or more of the computers or remote from any or all of the computers across the network. In a particular set of embodiments the information may reside in a storage area network SAN familiar to those skilled in the art. Similarly any necessary files for performing the functions attributed to the computers servers or other network devices may be stored locally and or remotely as appropriate. Where a system includes computerized devices each such device can include hardware elements that may be electrically coupled via a bus the elements including for example at least one central processing unit CPU at least one input device e.g. a mouse keyboard controller touch screen or keypad and at least one output device e.g. a display device printer or speaker . Such a system may also include one or more storage devices such as disk drives optical storage devices and solid state storage devices such as random access memory RAM or read only memory ROM as well as removable media devices memory cards flash cards etc.

Such devices also can include a computer readable storage media reader a communications device e.g. a modem a network card wireless or wired an infrared communication device etc. and working memory as described above. The computer readable storage media reader can be connected with or configured to receive a computer readable storage medium representing remote local fixed and or removable storage devices as well as storage media for temporarily and or more permanently containing storing transmitting and retrieving computer readable information. The system and various devices also typically will include a number of software applications modules services or other elements located within at least one working memory device including an operating system and application programs such as a client application or Web browser. It should be appreciated that alternate embodiments may have numerous variations from that described above. For example customized hardware might also be used and or particular elements might be implemented in hardware software including portable software such as applets or both. Further connection to other computing devices such as network input output devices may be employed.

Storage media and computer readable media for containing code or portions of code can include any appropriate media known or used in the art including storage media and communication media such as but not limited to volatile and non volatile removable and non removable media implemented in any method or technology for storage and or transmission of information such as computer readable instructions data structures program modules or other data including RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disk DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the a system device. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will appreciate other ways and or methods to implement the various embodiments.

The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. It will however be evident that various modifications and changes may be made thereunto without departing from the broader spirit and scope of the invention as set forth in the claims.

Other variations are within the spirit of the present disclosure. Thus while the disclosed techniques are susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific form or forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention as defined in the appended claims.

The use of the terms a and an and the and similar referents in the context of describing the disclosed embodiments especially in the context of the following claims are to be construed to cover both the singular and the plural unless otherwise indicated herein or clearly contradicted by context. The terms comprising having including and containing are to be construed as open ended terms i.e. meaning including but not limited to unless otherwise noted. The term connected is to be construed as partly or wholly contained within attached to or joined together even if there is something intervening. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range unless otherwise indicated herein and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples or exemplary language e.g. such as provided herein is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non claimed element as essential to the practice of the invention.

Preferred embodiments of this disclosure are described herein including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover any combination of the above described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context.

All references including publications patent applications and patents cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.

