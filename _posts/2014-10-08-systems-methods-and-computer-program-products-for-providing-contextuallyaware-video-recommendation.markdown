---

title: Systems, methods, and computer program products for providing contextually-aware video recommendation
abstract: Methods, systems and computer program products are provided for providing content recommendation by obtaining metadata associated with a media object, extracting from the metadata a plurality of terms associated with the media object, and mapping at least a portion of the plurality of terms to buckets. A query vector having attributes corresponding to the buckets is used to perform a query on a database storing media object documents having attributes corresponding to the buckets.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09451329&OS=09451329&RS=09451329
owner: SPOTIFY AB
number: 09451329
owner_city: Stockholm
owner_country: SE
publication_date: 20141008
---
This application claims priority to U.S. Provisional Application No. 61 888 191 filed Oct. 8 2013 the contents of which are incorporated herein by reference.

Example aspects described herein generally relate to media recommendation and more particularly to video recommendation.

Video suggestions are everywhere on the Internet. They are at the bottom of Netflix pages Amazon listing in iTunes IMDB YouTube and Google Play. As entertainment consumption moves from physical media rentals and purchases to on demand or streaming the importance of contextually aware recommendation is dramatically increasing as a core driver of user acquisition engagement and competitive differentiation. Current approaches to video discovery all suffer from the same well documented problem contextual blindness.

Collaborative filtering CF based recommendation systems look at usage patterns to determine that the same users like two things users who did this also did this . Typical video recommendation systems based on such CF technology however have no understanding of the video music or game they are recommending because they are unable to actually understand the content.

One technical challenge thus involves providing contextually aware video recommendation. Typical approaches attempt to combat contextual blindness by using a manual personal editorial curation approach. While this approach provides a level of content level awareness it suffers from obvious shortcomings including lack of scalability cost and editorial subjectivity.

A technical challenge in providing contextually aware recommendation to the video domain involves delivering results that actually understand the video s being recommended in a way that solves the contextual blindness problem at scale addressing the shortcomings of manual editorial approaches as well.

Another technical challenge involves providing such contextually aware video recommendations as a complement to existing systems in order to overlay a contextual understanding of video content atop user based and personal editorial offerings thereby eliminating contextual blindness at scale and offering a much richer contextually aware content discovery experience.

In accordance with example embodiments described herein the problem of contextual blindness in media object recommendation is avoided by obtaining and analyzing metadata from multiple sources in a manner that provides an understanding of media objects such as videos and in a manner that solves the contextual blindness problem at scale. The example embodiments described herein solve this problem by providing methods systems and computer program products for providing content recommendation including obtaining metadata associated with a media object from a plurality of data sources extracting from the metadata a plurality of terms associated with the media object and mapping at least a portion of the plurality of terms to a plurality of buckets.

In one embodiment the methods systems and computer program products perform generating the plurality of buckets by selecting categorization terms corresponding to a plurality of like terms associated with a type of media content.

In another example embodiment the methods systems and computer program products perform generating the plurality of buckets by clustering the plurality of terms using a plurality of cluster terms and a plurality of definitions including a plurality of references to a plurality of other terms wherein the cluster terms having the highest scores correspond to the plurality of buckets.

In yet another embodiment the metadata is extracted from at least one structured data source. In a sub embodiment the metadata is explicit metadata.

In a further embodiment for each bucket of the plurality of buckets the methods systems and computer program products perform correlating the plurality of terms associated with the bucket and weighting each bucket based on a correlation value obtained by the correlating.

In another example embodiment the embodiments perform calculating for each term of the plurality of terms a probability that the term is associated with the media object associating the probability to each term correspondingly generating a vector of term weight attributes based on the associating generating a document containing at least the vector and storing the document in a database.

In another example embodiment the methods systems and computer program products perform generating a query vector corresponding to at least one of the plurality of buckets and querying the database by using the query vector.

The example embodiments of the invention presented herein are directed systems methods and computer program products for providing contextually aware video recommendation. This description is not intended to limit the application of the example embodiments presented herein. In fact after reading the following description it will be apparent to one skilled in the relevant art s how to implement the following example embodiments in alternative embodiments e.g. in other domains such as music games books and the like .

The term video as referred to herein means a sequence of image frames that when played one after the other makes a video. Examples of a video include a movie a streamed video a broadcast channel a Video on Demand and the like. A video may include audio such as for example the audio track s that relate to and are synchronized with the image frames of the video track s .

The term metadata as referred to herein means data about a media object i.e. data about data . Metadata typically comes from one of two sources 1 the digital resource itself by for example processing the audio or video content of the digital resource using audio video recognition analysis or 2 human beings e.g. personal reviews commentary etc. .

The first kind of metadata is often referred to as implicit or intrinsic metadata. Such implicit metadata is technical in nature e.g. involving audio video signal analysis such as fingerprinting analysis . The second kind of metadata is often referred to as explicit or extrinsic metadata. Explicit metadata is the most difficult and expensive metadata to create because it requires humans to generate it. In the domain of video recommendation however it is also very important to the end user. The embodiments described herein utilize both implicit and explicit metadata from several sources to provide video recommendation.

Initially at block a learning process is performed by crawling video related information across a network such as the Internet. At block the information that is collected is then deduplicated based on for example title and year normalization. Other information can be used to normalize the data including for example numerical data such as the average star rating of the video or how much money the video made.

Crawling and deduplication can be performed by technologies or techniques currently known or future developed. The information related to for example plot descriptions personal reviews social media viewer or fan reactions and the like can be extracted using text gathering servers as described in U.S. patent application Ser. No. 13 850 044 filed Mar. 25 2013 entitled Named Entity Extraction From a Block of Text the entire disclosure of which is hereby incorporated by reference in its entirety.

The information can be collected from either structured data sources or unstructured data sources or a combination of both. Structured data sources have at least some understandable organization which can be queried by using a computer to search for pre determined fields. An example of a structured data source is a movie review site which consistently describes movies using the same organization of information such as title release date rating and the like.

Non structured data sources typically are not organized but can still store information that may be collected. An example of a non structured data source is a blog about movies. In one embodiment only structured data sources storing at least explicit metadata are crawled to collect information about videos. In another embodiment a combination of such structured data sources and non structured data sources both containing at least explicit metadata are crawled to collect information about videos. Optionally only non structured data sources containing at least explicit metadata are crawled to collect information about videos.

Similarities among videos are dynamically understood in real time by applying natural language processing NLP entity extraction and machine learning in the content domain. Particularly the data from the various sources e.g. critic and fan opinions sentiment and descriptions are synthesized to provide a contextual understanding of the content. In block blocks of descriptive text about the content are summarized for the purpose of identifying the most relevant terms i.e. top terms for each video in a database. In one embodiment probabilities or weights are associated to the terms for each video. Each probability indicates the probability of the corresponding term being associated with the video at a point in time.

Table 1 below is an example of noun phrases adjectives and unigrams and associated probabilities for the video entitled The Godfather Part II according to an example implementation of the present invention. The probabilities are the probabilities that the terms are associated with the particular media object in this case a video and more particularly a movie.

In block each of these terms is assigned a categorization bucket through for example a dictionary approach. Buckets include for example director actor era plot mood occasion location acclaim genre and the like. In the above example gloomy and bleak are mood terms Sicilian mafia and crime are plot terms and so on.

Buckets can be defined manually or automatically. In a manual embodiment a user typically an expert movie reviewer fan or someone otherwise knowledgeable about the various categorization terms associated with videos generates a list of buckets. Like terms that have been collected are in turn associated to the buckets.

In an automatic embodiment text clustering techniques can be used to automatically generate buckets. For example a base indexing engine can be used in combination with a clustering framework where the clustering framework can be configured to input a corpus of data plural cluster terms and definitions which include references to other terms. The data retrieved from the sources is clustered automatically and associated with terms with the highest scores. These terms i.e. the terms with the highest scores are defined as the buckets. As in the manual embodiment like terms that have been collected are in turn associated to the buckets.

In block a cultural vector for every video analyzed is generated to reflect content level attributes of the video and stored in a database by associating each term with a bucket. In one embodiment the vector can be updated in real time. This allows each vector to be applied to make a wide range of similarity judgments in real time allowing for contextually aware flexible recommendations.

Referring to in block baseline similarity results and faceted steering based on a variety of content level attributes are generated based on a query . The query can be in the form of a vector of having corresponding content level attributes. Certain attributes of the query vector can be weighted more than others. The terms may be weighted based on how important how often mentioned or how closely related the term is to the movie.

Referring to a user can enter for example a single seed value Video Seed for a video and sort based on familiarity acclaim or raw match score Sort By Familiarity . Once a seed is chosen a list of matches is returned along with optional facets to narrow the search based on for example genre mood era people or other terms as shown in e.g. Godfather but in the newer era .

It should be understood that other types of interfaces can be uses to communicate a query. For example an application program interface API server having an API server processor an API server memory and an API server request queue can be constructed to receive requests to run a recommendation program from an external computer such as a personal home computer mobile device and the like. The query can be in the form of a vector having attributes as describe above where the query is generated by the external computer based on the attributes of a collection of for example media objects anonymized data associated with a user playlists and the like. Certain attributes of the query vector can be weighted more than others.

Content level attributes of videos can be stored in so called documents the generation of which is described in more detail below. Documents can be used to build a recommender that automatically finds the types of video s a user likes or desires to obtain by filtering the weights using a similarity algorithm. In one embodiment this layer is implemented by using for example taste profile technology described in U.S. patent application Ser. No. 14 214 026 filed Mar. 14 2014 entitled Taste Profile Attributes the entire disclosure of which is hereby incorporated by reference in its entirety. This allows contextual understanding of content to provide an in depth contextual understanding of the consumer. One exemplary implementation is now described with reference to

Each of the additional terms is a term weight pair where the term is associated with a bucket and the weight indicates how closely the term describes the subject of the content. A wide range of terms can be associated with each video and may be updated at regular intervals e.g. once per week or month.

For example one example embodiment might include a data set including over 10 000 terms for each title from various sources of data about movies along with associated weights.

As described above the terms can be sorted into buckets such as genre familiarity style mood location era cast director date of release IDs and URLs on different public API content services studio computed similar videos and shows name and foreign names and the like. In this example implementation the movie the Godfather Part II is associated with a vector of terms including crime Sicilian mafia gloomy bleak etc. with corresponding weights of 0.84 0.5 0.2 and 0.12.

A data source may be constructed to contain records as inverted indices in which terms are indexes to documents for movie titles. For example the terms Crime Gloomy Bleak and Sicilian mafia might index to a document for the movie The Godfather Part II .

By applying a contextual understanding of the user as a video fan e.g. how adventurous the user is how important critical acclaim is to the user whether the user prefers dark dramas on the weekends to lighter comedies during the week video personalization can be taken to a much more engaging and insightful level than current collaborative filtering systems.

In one embodiment the buckets themselves can be used to correlate to a user s preferences or tastes by computing a self similarity term score for each bucket. In this embodiment the overall similarity of terms across each bucket in each taste profile of plural taste profiles is computed. For example if a bucket within a taste profile includes similar terms such as crime noir and gangster film for the plot bucket this would indicate a high self similarity term score. If a bucket within a taste profile includes dissimilar terms such as sad and happy for the mood bucket this would indicate a low self similarity term score.

The self similarity term scores in turn are used to weight the buckets per user to generate personalized recommendations. Thus based on their viewing or listening activities the taste profiles identify which buckets the users care about most. For example if all the terms within a certain bucket have a high correlation e.g. crime and Sicilian mafia under the bucket plot then that correlation is utilized to weight plot more heavily than buckets having a relatively lower correlation of associated terms e.g. sad and funny under the bucket mood . This allows a recommender to weight one or more buckets e.g. plot terms more heavily for a particular taste profile.

In another embodiment a query vector need not be based on buckets associated with a taste profile. Instead weights can be manually added to a query vector. A user who typically watches movies that have crime plots who desires to now watch a comedy for example can manually weight comedy higher.

The application of a contextual understanding of the video as described above can be used to build an in depth taste profile on a user by learning more about the user as a video fan to understand what attributes inform the overall preferences of the user. The taste profile thus serves as a repository for a specific user s content activity e.g. what the user watches in the domain of videos and what the user listens to in the domain of music and an analysis layer that makes specific insights to understand that entertainment consumer How adventurous are your tastes Are you a fan of different types of entertainment on weeknights than on weekends By expanding the universe of content understood within a taste profile the application of contextual fan understanding is thus expanded opening up a wide range of new applications and use cases. This also provides a mechanism for providing cross media recommendation.

In this use case as an understanding of content expands to include music episodic television and ultimately other forms of digital entertainment connections across content types can be made enabling cross media recommendation. One example implementation of this approach is applying a consumer s music preference to predict likely video preference. An example implementation of cross media recommendation is described in U.S. patent application Ser. No. 14 213 749 filed Mar. 14 2014 entitled Cross Media Recommendation which is hereby incorporated by reference in its entirety. Similarly such cross media recommendation can be expanded across other media types on a single device or platform including music videos apps games and books.

The computer may include without limitation a processor device a main memory and an interconnect bus . The processor device may include without limitation a single microprocessor or may include a plurality of microprocessors for configuring the computer as a multi processor system. The main memory stores among other things instructions and or data for execution by the processor device . The main memory may include banks of dynamic random access memory DRAM as well as cache memory.

The computer may further include a mass storage device peripheral device s portable non transitory storage medium device s input control device s a graphics subsystem and or an output display interface . For explanatory purposes all components in the computer are shown in as being coupled via the bus . However the computer is not so limited. Devices of the computer may be coupled via one or more data transport means. For example the processor device and or the main memory may be coupled via a local microprocessor bus. The mass storage device peripheral device s portable storage medium device s and or graphics subsystem may be coupled via one or more input output I O buses. The mass storage device may be a nonvolatile storage device for storing data and or instructions for use by the processor device . The mass storage device may be implemented for example with a magnetic disk drive or an optical disk drive. In a software embodiment the mass storage device is configured for loading contents of the mass storage device into the main memory .

The portable storage medium device operates in conjunction with a nonvolatile portable storage medium such as for example a compact disc read only memory CD ROM to input and output data and code to and from the computer . In some embodiments the software for storing information may be stored on a portable storage medium and may be inputted into the computer via the portable storage medium device . The peripheral device s may include any type of computer support device such as for example an input output I O interface configured to add additional functionality to the computer . For example the peripheral device s may include a network interface card for interfacing the computer with a network .

The input control device s provide a portion of the user interface for a user of the computer . The input control device s may include a keypad and or a cursor control device. The keypad may be configured for inputting alphanumeric characters and or other key information. The cursor control device may include for example a handheld controller or mouse a trackball a stylus and or cursor direction keys. In order to display textual and graphical information the computer may include the graphics subsystem and the output display . The output display may include a cathode ray tube CRT display and or a liquid crystal display LCD . The graphics subsystem receives textual and graphical information and processes the information for output to the output display .

Each component of the computer may represent a broad category of a computer component of a general and or special purpose computer. Components of the computer are not limited to the specific implementations provided here.

Software embodiments of the example embodiments presented herein may be provided as a computer program product or software that may include an article of manufacture on a machine accessible or machine readable medium having instructions. The instructions on the non transitory machine accessible machine readable or computer readable medium may be used to program a computer system or other electronic device. The machine or computer readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks or other types of media machine readable medium suitable for storing or transmitting electronic instructions. The techniques described herein are not limited to any particular software configuration. They may find applicability in any computing or processing environment. The terms computer readable machine accessible medium or machine readable medium used herein shall include any medium that is capable of storing encoding or transmitting a sequence of instructions for execution by the machine and that causes the machine to perform any one of the methods described herein. Furthermore it is common in the art to speak of software in one form or another e.g. program procedure process application module unit logic and so on as taking an action or causing a result. Such expressions are merely a shorthand way of stating that the execution of the software by a processing system causes the processor to perform an action to produce a result.

Portions of the example embodiments of the invention may be conveniently implemented by using a conventional general purpose computer a specialized digital computer and or a microprocessor programmed according to the teachings of the present disclosure as is apparent to those skilled in the computer art. Appropriate software coding may readily be prepared by skilled programmers based on the teachings of the present disclosure.

Some embodiments may also be implemented by the preparation of application specific integrated circuits field programmable gate arrays or by interconnecting an appropriate network of conventional component circuits.

Some embodiments include a computer program product. The computer program product may be a storage medium or media having instructions stored thereon or therein which can be used to control or cause a computer to perform any of the procedures of the example embodiments of the invention. The storage medium may include without limitation a floppy disk a mini disk an optical disc a Blu ray Disc a DVD a CD or CD ROM a micro drive a magneto optical disk a ROM a RAM an EPROM an EEPROM a DRAM a VRAM a flash memory a flash card a magnetic card an optical card nanosystems a molecular memory integrated circuit a RAID remote data storage archive warehousing and or any other type of device suitable for storing instructions and or data.

Stored on any one of the computer readable medium or media some implementations include software for controlling both the hardware of the general and or special computer or microprocessor and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the example embodiments of the invention. Such software may include without limitation device drivers operating systems and user applications. Ultimately such computer readable media further include software for performing example aspects of the invention as described above.

Included in the programming and or software of the general and or special purpose computer or microprocessor are software modules for implementing the procedures described above.

While various example embodiments of the present invention have been described above it should be understood that they have been presented by way of example and not limitation. It will be apparent to persons skilled in the relevant art s that various changes in form and detail can be made therein. Thus the present invention should not be limited by any of the above described example embodiments but should be defined only in accordance with the following claims and their equivalents.

In addition it should be understood that the are presented for example purposes only. The architecture of the example embodiments presented herein is sufficiently flexible and configurable such that it may be utilized and navigated in ways other than that shown in the accompanying figures.

Further the purpose of the foregoing Abstract is to enable the U.S. Patent and Trademark Office and the public generally and especially the scientists engineers and practitioners in the art who are not familiar with patent or legal terms or phraseology to determine quickly from a cursory inspection the nature and essence of the technical disclosure of the application. The Abstract is not intended to be limiting as to the scope of the example embodiments presented herein in any way. It is also to be understood that the procedures recited in the claims need not be performed in the order presented.

