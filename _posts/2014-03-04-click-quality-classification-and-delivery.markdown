---

title: Click quality classification and delivery
abstract: In one embodiment, a method includes receiving a packet flow associated with a click-through from an end user node destined for an advertiser server; extracting information from the packet flow; analyzing the extracted information to determine one or more characteristics of the packet flow; and classifying the packet flow based on the determined one or more characteristics; modifying the packet flow to include classification information to provide classification information indicating a quality level of the click-through. The packet flow may include a hypertext transfer protocol GET request. Modifying the packet flow may include adding a tag with classification information that indicates a likelihood of fraudulent click behavior associated with the packet flow.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08917624&OS=08917624&RS=08917624
owner: Cisco Technology, Inc.
number: 08917624
owner_city: San Jose
owner_country: US
publication_date: 20140304
---
This application claims priority to U.S. Non Provisional application Ser. No. 12 335 485 filed on Dec. 15 2008 which in turn claims the benefit of U.S. Provisional Application No. 61 058 890 filed on Jun. 4 2008. The entire disclosures of the above applications are incorporated herein by reference.

The delivery of advertisements on the Internet involves several parties website content publishers advertisers advertisement networks service providers and end users. A publisher provides web pages of content to the end users and space alongside or within the content for advertisements. The publisher may employ an advertisement network e.g. Google AdSense to allow advertisers to bid for placement of advertisements in the ad space. Alternatively the publisher may arrange directly with advertisers to fill the ad space. In either case the content with advertisements positioned in the ad space is delivered to the end user over a service provider network. If the end user selects an advertisement the advertiser pays the publisher or the advertising network for the so called click through or click by the end user.

A rampant problem today is so called click fraud whereby fraudulent click throughs are generated costing advertisers large amounts of money. In one type of click fraud an unscrupulous competitor may generate a large number of click throughs in order to deplete the advertiser s advertising budget. In another type of click fraud a rogue publisher sets up a website that contains only advertisements and generates a large number of click throughs at the website in order to obtain the advertising revenues. According to one estimate click fraud constitutes as much as 20 of all Internet traffic.

Flows of interest e.g. HTTP GETs from end users are redirected at a click server node. The flows are redirected to a click engine that checks the flows against a database of signatures or characteristics indicative of quality based on for example likely fraudulent behavior. The click engine may make a determination from the database check whether a particular flow is likely fraudulent. The determination may also include detecting unknown patterns which may indicate suspicious behavior by for example the end user a domain or a network. Based on that determination the click engine may add classification information to the flow that classifies the flow at differing levels of quality e.g. high medium low based on the determination from the database check. The modified flow then may be redirected to its originally intended destination. At the edge of the service provider network or at the destination e.g. an advertiser the classification information may be examined and an appropriate action taken based on the classification information.

The end user node is a conventional node such as a personal computer work station personal digital assistant PDA and the like. The service provider edge nodes are conventional edge nodes such as a router configured to interface the end user node with a service provider network which includes the edge nodes and click server node that may be part of a wide area network WAN . The WAN is a conventional WAN such as the Internet comprising various other nodes not shown configured to implement the WAN. The advertiser server node is a conventional server node that is configured to exchange information e.g. data packets with the end user node .

The click server node is illustratively a router node coupled to a click engine that is configured to inter alia redirect packet flows received from the network to the click engine for handling analysis of click throughs and traffic patterns from the end user node contained within the packet flows.

The end user node may be operable to run a browser program to facilitate the access of information on the network. The browser is a hypertext linked application used for accessing information. Hypertext is a term used to describe a particular organization of information within a data processing system and its presentation to a user.

Multimedia communications may use the Hypertext Transfer Protocol HTTP and files or formatted data may use the Hypertext Markup Language HTML . These documents and other Internet resources may be accessed across the network by means of a network addressing scheme which uses a locator referred to as a Uniform Resource Locator URL for example http www.cisco.com. 

Information transfers on the Internet are broken into variable size packets each of which contains in addition to its data payload control information to be used for its routing and scheduling over the network. In the description herein the terms below are used in the conventional sense except where otherwise evident from context to characterize information transfers on the Internet and more generally over packet based networks.

The backplane comprises point to point interconnections that interconnect the various cards and allow data and signals to be transferred between the cards. Network interfaces couple the router node with other nodes in the network e.g. edge nodes and allow data packets to be transferred between node and these nodes using various protocols such as ATM Frame Relay FR Ethernet and the like. To that end network interface cards comprise conventional interface circuitry that incorporates signal electrical characteristics and interchange circuits needed to interface with the physical media of the network and the protocols running over that media. Functionally the line cards acquire information from the network via ports and forward the information to the backplane as well as transfer information acquired from the backplane to the network via the ports. The ports may be conventional ports such as e.g. ATM Ethernet and FR ports. The click engine network interfaces are conventional network interfaces that couple the node with the click engine and enable data to be transferred between the node and the click engine .

The routing engine comprises logic that is configured to manage node execute various protocols and perform other functions including forwarding and routing various packets processed by node . is a high level block diagram of an example embodiment of a routing engine . Routing engine comprises interface logic packet buffer system controller processing circuitry and memory .

Interface logic is coupled to the backplane and is configured to transfer information e.g. data between the backplane and the routing engine . Packet buffer is a RAM comprising high speed RAM devices e.g. static RAM devices capable of storing information acquired by the interface logic and processed by processor . System controller is coupled to the processor memory and packet buffer and comprises circuitry configured to enable the processor to access e.g. read write memory locations contained in the memory and the packet buffer . The processing circuitry illustratively comprises processor which is a conventional CPU configured to execute instructions and manipulate data contained in memory for performing various functions associated with processing packets as described herein. The memory is a computer readable medium comprising RAM devices such as DRAM devices and contains various software and data structures used by processor including operating system routing services and redirection services .

Operating system comprises computer executable instructions and data configured to implement a conventional operating system. The OS is a conventional operating system that comprises computer executable instructions and data configured to support the execution of processes such as routing services and redirection services on processor . Specifically OS is configured to perform various conventional operating system functions that e.g. enable the processes to be scheduled for execution on the processor as well as provide controlled access to various resources of the routing engine such as memory .

Routing services is a software process comprising computer executable instructions and data configured to implement various routing protocols such as OSPF and IS IS. These protocols are configured to manage a forwarding database FDB not shown containing e.g. data used to make forwarding decisions for packets processed by the node . Redirection services is a software process configured to implement redirection or filtering of packet flows using e.g. access control lists policy based routing or the like.

The network interfaces are conventional network interfaces that connect interface the click engine with the network using various protocols such as Ethernet. To that end the network interfaces comprise conventional interface circuitry that incorporates signal electrical and mechanical characteristics and interchange circuits needed to interface with the physical media of the network and protocols running over that media.

The processing circuitry illustratively comprises processor which is a conventional central processing unit CPU configured to execute instructions and manipulate data contained in the memory . The memory is a conventional random access memory RAM comprising e.g. dynamic RAM DRAM devices. Memory contains an operating system OS flow processing services and analysis database . The OS is a conventional operating system that comprises computer executable instructions and data configured to support the execution of processes such as flow processing services on processor . Specifically operating system is configured to perform various conventional operating system functions that e.g. enable processes to be scheduled for execution on the processor as well as provide controlled access to various resources of the click engine such as memory and the network interfaces . Flow processing services is a software process comprising computer executable instructions and data configured as will be described further below to handle processing of packet flows such as HTTP flows that may contain click throughs. The analysis database is a database that may include signatures or characteristics indicative of quality based on for example likely fraudulent behavior.

In another embodiment the click engine may be implemented based on an intrusion detection service module e.g. Intrusion Detection System Services Module IDSM 2 available from Cisco Systems Inc. integrated within router . It should be understood that the click server node can be implemented at any node in the service provider network including the edge nodes .

By scanning end user packet flows e.g. HTTP traffic streams it is believed that additional revenue can be generated for a service provider by utilizing the information gathered. Based on user traffic characterization a user quality value can be assigned to an end user. Once a value attribute exist for an end user features based on that information can be offered to the advertising community. Several models can be deployed to implement differing degrees of end user interaction analysis.

A model referred to as immediate profile analysis model uses real time HTTP scanning. In this model HTTP streams may be monitored inline incrementing simple end user or event counters when signature rules are alerted. Based on counters action can be taken to modify the payload mark the transport layer or document activity.

Another model referred to as transactional profile analysis model features local profile generation. In this model the HTTP stream is channel scanned to a local resource that may be in system for local analysis. The local analysis may be based on data acquired over a longer period of time possibly several transactions. Based on this analysis new or revised signature rules can be programmed thus enhancing real time HTTP scanning of a specific end user.

A model called extended profile analysis model features extend profile generation whereby the HTTP stream is channel scanned to a heuristic engine for in depth analysis. The heuristic engine is considered pluggable meaning several heuristic engines can be deployed to offer specific services. An application programming interface API may be used to program the real time HTTP scanning thus allowing for analysis of data derived over an extended period of time.

Next the click engine may classify the packet flow based on the determined characteristics at step . The classification may relate to a type of action to be taken downstream. For example a flow classified as having low quality may be handled at the advertiser server or within the service provider network itself differently than a flow having a high quality classification.

At step the click engine modifies the packet flow to include classification information. The modification may be in the form of adding a tag to the packet flow. This tagging may be internal to a data packet requiring regeneration of CRC and possible HTTP stream manipulation or external such as virtual local area network VLAN tags Multi Protocol Label Switching MPLS labels or quality of service marking. External tagging allows additional services to be applied such as providing Optimum Data Path for high end advertising e.g. video streams . Generally the destination e.g. advertiser server may take appropriate action based on examination of a packet flow that has been modified to include internal tagging. Other nodes such as edge node may take appropriate action based on examination of the external tagging of a packet flow.

The modifications described with respect to are examples of so called internal modifications. Some embodiments may use either or both of these modifications. A reason for using both may be that certain advertisers only support one option and other advertisers support the other and it may be easier to make both types of modification without having to track which advertiser is supporting which option.

While the example embodiments have been described in relation to detection of click fraud it should be understood that other services may be offered based on the configuration described herein. For example another service may provide counters representing the click rate or number of times a user has clicked a link thereby giving an indication of intended clicks. Other services include context services e.g. end user profile browsing context location based services e.g. identify end user location to the service provider publisher or advertiser premium advertisement delivery e.g. optimal data paths over reserved bandwidth to deliver premium high bandwidth advertisements user connectivity profile e.g. end user device type end user applications last mile bandwidth information last mile latency information transactional statistics e.g. comprehensive statistics on end user transactions and verification services e.g. verification of delivery viewing and conversion of advertisements .

It should be understood that the network message flow and block diagrams may include more or fewer elements be arranged differently or be represented differently. It should be understood that implementation may dictate the network flow and block diagrams and the number of network flow and block diagrams illustrating the execution of example embodiments.

It should be understood that elements of the network flow and block diagrams described above may be implemented in software hardware or firmware. In addition the elements of the network and flow diagrams described above may be combined or divided in any manner in software hardware or firmware. If implemented in software the software may be written in any language that can support the embodiments disclosed herein. The software may be stored on any form of computer readable medium such as random access memory RAM read only memory ROM compact disk read only memory CD ROM and so forth. In operation a general purpose or application specific processor may load and execute the software in a manner well understood in the art.

While the foregoing has been particularly shown and described with references to example embodiments thereof it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the scope of the invention encompassed by the appended claims.

