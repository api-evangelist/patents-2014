---

title: Low latency and self-adjusting frame synchronization algorithm for data streaming applications
abstract: A method for maintaining a nominal decoder time phase alignment through a data drop-out period is provided. The method includes determining if a search window is open. A search-window width of the search window is an initial search-window width. The initial search-window width is larger than the width of the frame synchronization pattern. The method also includes determining if a bit clock rising edge is detected and searching for the frame synchronization pattern on a bit level when the search window is open and the bit clock rising edge is detected. If the frame synchronization pattern is not found responsive to the searching, the method also includes determining if a receipt time of the bit received when the bit clock rising edge was detected is coincident with an expected start time of the frame synchronization pattern.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08964794&OS=08964794&RS=08964794
owner: Honeywell International Inc.
number: 08964794
owner_city: Morristown
owner_country: US
publication_date: 20140128
---
This application is a divisional of U.S. application Ser. No. 13 089 919 filed on Apr. 19 2011 entitled A NOVEL LOW LATENCY AND SELF ADJUSTING FRAME SYNCHRONIZATION ALGORITHM FOR DATA STREAMING APPLICATIONS now U.S. Pat. No. 8 675 690 the disclosure of which is hereby incorporated herein.

This invention was made with Government support under USAF ARFL SV SSLT. The Government has certain rights in the invention.

Data transmitted in any serial fashion requires some method to determine where the data payload is positioned within the received data stream. The detection of the beginning of the payload is critical.

The present application relates to a method for maintaining a nominal decoder time phase alignment through a data drop out period. The method includes determining if a search window is open. A search window width of the search window is an initial search window width. The initial search window width is larger than the width of the frame synchronization pattern. The method also includes determining if a bit clock rising edge is detected and searching for the frame synchronization pattern on a bit level when the search window is open and the bit clock rising edge is detected. If the frame synchronization pattern is not found responsive to the searching the method also includes determining if a receipt time of the bit received when the bit clock rising edge was detected is coincident with an expected start time of the frame synchronization pattern.

The details of various embodiments of the claimed invention are set forth in the accompanying drawings and the description below. Other features and advantages will become apparent from the description the drawings and the claims.

Wireless data transmissions are prone to bit slips or bit error. Any slip extended bit errors or drift of the transmitter oscillator or receiver oscillator cause misinterpretation of the bit start location.

Frame synchronization is used for wirelessly connected navigation systems. The start up time re synchronization time data reliability and latencies are critical to the accuracy of a navigation solution. For example aircrafts include navigation systems which obtain sensor data from gyroscopes and or accelerometers in an inertial measurement unit IMU in order to determine the exact location of the aircraft as it moves. If sensor data in the data stream from the IMU is lost because of a loss in synchronization the safety of the aircraft can be jeopardized. In case of synchronization loss the recovery time will result in loss of sensed data with a resultant loss of navigation accuracy. Glitches or power cycles can cause data loss in time sensitive data including sensor audio and video data being transmitted and received. Therefore glitches or power cycles for synchronization should be minimized during flight for an accurate navigation solution. A receiver receiving the data stream must recover quickly and preferably without data loss of more than a few bits from a slip in synchronization between two ends of the data stream transmission reception. Typically a recovery on the order of a few microseconds is desired to ensure the safety of the aircraft and the receipt of critical data. The described embodiments are not limited to avionic applications and are also applicable to any data streaming application.

A frame synchronizer detects the frame synchronization pattern which is a known binary pattern that is periodically repeated within the data stream. The periodicity of the frame synchronization pattern is proportional to the frame synchronization time. To reduce false frame synchronization lock multiple frame synchronization patterns are detected before the algorithm claims a frame lock. Currently if the frame synchronization is lost a prior art frame state machine cycles back to search mode and searches for the frame synchronization pattern again. The prior art re synchronization time is as long as the synchronization time during power up since once the frame synchronization pattern is relocated in the data stream the frame state machine checks for multiple cycles before the algorithm reclaims a frame lock. Thus the prior art receiver takes more than a few microseconds to recover from a slip in the time synchronization between two ends of the data stream transmission reception.

In some embodiments the frame synchronizer recognizes the frame synchronization pattern and aligns the data into minor frames or sub frames. In such an embodiment the frame synchronization pattern is typically followed by a counter which dictates which minor frame or sub frame in the series is being transmitted. The correlation between the frame synchronization pattern and the counter is especially important in a decommutation stage when all the data is deciphered according to the sampled attribute. Different commutations require a constant awareness of which section of the major frame is being decoded and used to frame align a serial binary stream. Thus an extended re synchronization time is detrimental to synchronization to sub frames.

A frame synchronization window also referred to herein as a search window is the approximate time when the receiver is expecting to receive a frame synchronization pattern in a data stream. The frame synchronization window described herein include a buffer time before and after the exact time in which the receiver is expecting to receive a frame synchronization pattern in a data stream.

For the receivers described herein once a frame synchronization pattern is recognized and locked subsequent frame synchronization or correction has extremely low synchronization time less than a few milliseconds and occurs much more quickly than in the known prior art techniques. The described embodiments minimize the time required for a receiver to realign a decoding algorithm to a data stream in the presence of data dropouts by maintaining a nominal decoder time phase alignment through the data drop out period. The described embodiments also minimize data loss by capturing buffering data from the expected arrive time of the frame synchronization pattern.

The method described herein synchronizes data frames by forcing a frame state machine to an operate mode following an initial synchronization and maintaining the frame state machine in operate mode even when synchronization is lost. The initial synchronization includes a search mode in which the state machine searches for the frame synchronization pattern. If synchronization is lost the receiver system re establishes synchronization at a bit level while continuing to run the frame state machine in the operate mode. The frame state machine does not need to return to the time consuming search and check lock modes in order to re establish a lock on the frame synchronization pattern.

The system described herein predicts when the frame synchronization pattern is expected to arrive and starts to record data in the frame from that point in time also referred to herein as predicted time . If the frame synchronization pattern arrives early prior to the predicted time the data immediately following the frame synchronization pattern is recorded in a buffer. If the frame synchronization pattern arrives late after to the predicted time when the predicted time arrives the data is stored in the buffer. If the frame synchronization pattern is detected later on in the frame the data that was recorded starting at the predicted time is overwritten by the data following the frame synchronization pattern since the data following the frame synchronization pattern is correct data.

Thus the method of synchronization described herein prevents loss of data due to false lock or loss of synchronization by capturing the payload data as the state machine while operating in the operate mode re establishes synchronization. In addition the method of synchronization described herein is independent of the data packet size. In prior art techniques longer data packets require longer the re synchronization.

In one implementation of this embodiment the frame synchronizer is an application specific integrated circuit ASIC or a field programmable gate array FPGA . Output from the wireless receiver is sent from the frame synchronizer to a processor . In one implementation of this embodiment the processor is part of the wireless receiver .

The local clock is also referred to herein as bit sync clock or incoming data clock . The frame state machine runs faster than the clock rate of the local clock . In one implementation of this embodiment the frame state machine runs four times faster than the clock rate of the local clock .

The wireless transmitter includes a transmitter TX clock that generates clock signals which are synchronized with the start of each bit in the input data frame . The bit clock rising edge of the clock signal is indicated by the arrows. The clock signals and the data stream including a plurality of input data frames are transmitted to the wireless receiver via wireless communication link . Thus the bit clock signals the arrows indicate the rising edges of the clock bits generated at the bit sync clock oscillator delineate bits received at the wireless receiver .

The frame synchronizer includes the frame state machine a buffer a register a real time interrupt RTI generator and a frame interval bit counter . The frame interval bit counter counts the bits in a received data frame . The counting by the frame interval bit counter is used to predict when the next frame synchronization pattern is expected. The register buffers stores a number of bits equal to the number of bits in the frame synchronization pattern. For example if the frame synchronization pattern includes N bits where N is an integer the register stores N bits. As a new bit from the data stream is received the register stores that bit and drops the oldest longest stored bit. RTI generator is synchronized to the frame synchronization pattern. When the frame synchronization pattern is lost and regained the frame state machine signals the RTI generator with a pulse in order to resynchronize the RTI generator to the newly acquired frame synchronization pattern.

The incoming data clock is communicatively coupled to output bit clock signals to the frame synchronizer in synchronization with each bit in the input data frame received from the wireless transmitter . In one implementation of this embodiment the transmitter is part of a sensor system including sensors. In this case the wireless transmitter transmits sensor data. The frame state machine and the register receive the bit clock signals from the incoming data clock and receive the bits in the input data frame from the wireless transmitter .

The frame state machine is connected to output signals to the frame interval bit counter and to receive data from the frame interval bit counter . The frame interval bit counter sends a signal to the frame state machine when the frame synchronization pattern is expected to be received at the frame state machine . In one implementation of this embodiment the frame state machine outputs a reset signal to the frame interval bit counter when the frame synchronization pattern is received at a time other than the expected time.

The frame state machine is communicatively coupled to output at least one input data frame including payload bits from the input data frame to the buffer . The frame state machine is connected to output a synchronization signal synch RTI to the processor . The buffer is connected to output data to the processor and to receive signals from the processor .

Buffer includes any suitable memory now known or later developed such as for example random access memory RAM read only memory ROM and or registers within the processor . In one implementation the processor includes a microprocessor or microcontroller. Moreover although the processor and buffer are shown as separate elements in in one implementation the processor and buffer are implemented in a single device for example a single integrated circuit device . The software and or firmware executed by the processor includes a plurality of program instructions that are stored or otherwise embodied on a storage medium from which at least a portion of such program instructions are read for execution by the processor . In one implementation the processor includes processor support chips and or system support chips such as application specific integrated circuits ASICs .

The idle mode idle state occurs when the frame state machine is not receiving a data stream including the data frame from the wireless transmitter . As shown in a transition from operate mode to idle mode is triggered initiated when a Wireless Enable signal is set to zero 0 as shown by the arrow . The idle mode is maintained as long as the Wireless Enable signal remains set to zero 0 . When the Wireless Enable signal is no longer zero 0 the frame state machine transitions to the search mode search state as shown by the arrow .

During search mode the frame synchronizer looks for a frame synchronization pattern that denotes the start of the payload in a data packet . When the frame synchronization pattern is found the frame state machine advances to check mode as shown by the arrow labeled Good SYNC . The check mode of includes both the check process and the lock process and is also referred to herein as check lock mode or check lock state . The search mode and the check lock mode together form an initial synchronization mode represented generally at .

During the check mode the frame synchronizer counts rising edges of the bit clock signals output from the incoming data clock in order to count the bits associated with the bit clock signals and checks if the next expected frame synchronization pattern occurs when expected.

If the frame synchronization pattern is not found when expected during the check mode the frame state machine transitions back to the search mode as shown by the arrow labeled Bad SYNC . Every time the frame synchronization pattern is found as expected the check mode continues to check for the next frame synchronization pattern until a selected number e.g. N of consecutive valid frame synchronization patterns are received.

When the selected number of consecutive valid frame synchronization patterns is received the frame state machine is locked to the frame synchronization pattern . During lock mode the frame state machine triggers the run time interrupt RTI generator with a pulse to synchronize it to the frame synchronization and advances to operate mode operate state . Once in the lock mode the wireless receiver expects the frame synchronization pattern to periodically appear in the same usually first time slot of the input data frame . This requires the transmitter clock oscillator in the wireless transmitter to be stable.

When lock is established the frame state machine transitions to operate mode as shown by arrow labeled N consecutively good SYNCS . In the operate mode the wireless receiver continues to count out the number of payload bits N and stuffed bits M in the input data frame verify the frame synchronization pattern has arrived and enable a write controller for the data buffer so the data buffer period s the payload of the received input data frame .

The frame state machine remains in operate mode until the Wireless Enable signal is set to zero 0 . Even if synchronization is lost as long as the Wireless Enable signal is not set to zero 0 the frame state machine remains in operate mode and does not return to search mode . Thus unlike prior art frame state machines the frame state machine runs in the operate mode without return to the search mode when synchronization is lost. The frame state machine only transitions to idle mode from operate mode and does not transition from operate mode to search mode .

The logic in frame state machine continually checks for the frame synchronization pattern on each clock cycle that occurs within the search window. If the frame synchronization pattern is matched logic resets the frame interval bit counter and frame interval clock counter .

In general the wireless receiver uses its incoming data clock to establish a search window to continually search and validate synchronization. In an exemplary case when the frame synchronizer is synchronized to the frame synchronization pattern the search window opens K bits before the N bit wide frame synchronization pattern is expected to arrive and the search window closes K bits after the complete N bit wide frame synchronization pattern has been received. The value of K is function of transmitter receiver oscillators in parts per million PPM .

If a valid synchronization is not detected using the incoming data clock from the wireless receiver it is assumed that the wireless signal suffered error and data is written to the buffer and tagged with a loss of sync status flag. The logic then increases the search window of N 2 K bits or more than N 2 K bits on each successive missed frame synchronization pattern until valid synchronization is re established. The amount of increase in the search window is related to possible divergence of the transmitter oscillator and the receiver oscillator in PPM. When valid synchronization is re established the search window is reset to the original search window.

The input data frame is received at the frame synchronizer an ASIC or an FGPA . The received payload from the input data frame is written to the buffer over a serial data network. The output of the data in the buffer is sent to the processor or another buffer external to the wireless receiver and the frame state machine delays the output of the synchronization real time interrupt by that finite time. Once the data has all been sent to the processor a synchronization real time interrupt sync RTI signal is sent to the processor to indicate to the processor that the data sent from the buffer can be processed.

In one implementation of this embodiment the input data frames is a sensor data frame having a fixed length bit sequence containing formatted sensor data and related information. The details about an exemplary embodiment for processing a data stream of sensor data frame are now provided. A sensor data frame bit count is the number of bits in every sensor data frame .

The frame synchronization pattern is the frame synchronization pattern represented by N number of bits. The frame sync bit count which is the number of bits in the frame synchronization pattern is also N bits. The frame interval time which is the nominal interval between starts of transmissions of successive sensor data frames is on the order of milliseconds depending on the system channel error. The frame interval bit count is equal to the frame interval time times the bit rate. The frame interval clock count equals the receive side master clock rate times the frame interval time. It is assumed that the frequency of the transmit side transmitter clock in the wireless transmitter and the frequency of bit sync clock are close to exact i.e. the same as their nominal values. The frame interval clock count is the number of cycles of the bit sync clock receive master clock that occur during the frame interval time. The frame interval clock count is used to predict the arrival of the frame synchronization pattern . In one implementation of this embodiment during the check mode the frame synchronizer uses the incoming data clock to count P bits typically received on the order of milliseconds and checks to see if all the expected frame synchronization patterns were correctly received during that time frame. P is a positive integer.

The frame synchronization windows M shown in alignment to the data stream M are open for a duration longer than the duration required to receive the frame synchronization patterns M . An exploded view of the exemplary frame synchronization window is shown. Additional time equivalent to the duration of additional bits represented generally at is added to the time duration of the frame synchronization pattern . This additional time is referred to herein as pre margin time . The additional time equivalent to the duration of additional bits represented generally at is added to the time duration of the frame synchronization pattern . This additional time is referred to herein as post margin time . The synchronization is considered to be optimal when synchronization is holding and the number of pre margin time equals the number of post margin time .

As described in more detail below the frame synchronization windows M have a search window width Wthat is also referred to herein as the initial width W and the initial search window width W . The search window width is that duration in time during which the search window is open therefore the search window width also referred to herein as search window duration and the initial width Wis also referred to herein as initial duration . The initial width Wof the frame synchronization windows M is extended when the frame synchronization pattern is lost. A frame synchronization window is extended by adding time equivalent to the duration of at least one additional bit to the pre margin time and by adding time equivalent to the duration of at least one additional bit to the post margin time . The duration in time of one additional bit is that time required for one bit to be received at the wireless receiver .

In one implementation of this embodiment the duration of the pre margin time equals the duration of the post margin time . In another implementation of this embodiment time equivalent to the duration of one additional bit is added to the pre margin time and time equivalent to the duration of one additional bit is added to the post margin time . In another implementation of this embodiment time equivalent to the duration of five additional bits are added to the pre margin time and time equivalent to the duration of five additional bits are added to the post margin time .

In one implementation of this embodiment the duration of pre margin time and post margin time is equal to the duration of 20 bits so the duration of the frame synchronization windows M is equal to the duration of 72 bits assuming 32 bits for the frame synchronization pattern .

When synchronization is holding the frame synchronization windows M search windows M correlated to the each of the input data frames M are in alignment to respective frame synchronization patterns M as shown in . The logic in frame state machine checks for the frame synchronization pattern on each clock cycle that occurs within the search window . When synchronization is holding the search windows M have an initial search window width W which is greater than the width of the frame synchronization pattern 

As shown in the second frame synchronization pattern is received before the second search window opens for the logic in the prior art frame state machine to look for the second frame synchronization pattern . When the second search window opens the logic in prior art frame state machine reads the data in which typically does not match the second frame synchronization pattern . When the logic in prior art frame state machine detects the mismatch the prior art frame state machine is returned to search mode to search for the frame synchronization pattern. Once the prior art frame state machine finds the frame synchronization pattern the prior art frame state machine cycles through the check lock mode. This is a time consuming process during which data is lost.

If the frame synchronization pattern arrives early prior to the predicted time the data immediately following the frame synchronization pattern is recorded in a buffer shown as data capture . Before the second search window opens the logic in frame state machine receives a signal from the frame interval bit counter that the frame synchronization pattern is predicted to arrive. The logic in frame state machine receives this signal and despite detecting the mismatch the frame state machine remains in operate mode and sends data with a loss of sync status flag to be stored in the buffer until the logic in frame state machine detects a frame synchronization pattern 

When the logic in frame state machine detects the mismatch the frame synchronizer also expands the search window to form a wider search window . The search window is expanded by adding time equivalent to the duration of at least one bit to the search window . In one implementation of this embodiment time equivalent to the duration of one bit is added to the pre margin time of the search window and time equivalent to the duration of one bit is added to the post margin time of the search window . In yet another implementation of this embodiment time equivalent to the duration of five bits is added to the pre margin time of the search window and time equivalent to the duration of five bits is added to the post margin time of the search window .

Thus duration of the third search window is extended in time. In one implementation of this embodiment the third search window extends over the time required to receive 52 bits and the frame synchronization pattern is 32 bits. By increasing the time the search window is open the frame synchronizer is provided more of an opportunity to overlap with the frame synchronization pattern . In this manner the frame synchronizer is capturing data while remaining in operate mode and simultaneously expanding the search window in order to capture a frame synchronization pattern in one of the following data frame . The time taken to find the frame synchronization pattern in one of the following data frame is less than the time required to return to search mode and check lock mode as done by a prior art frame synchronizer and no data is lost while the frame synchronization pattern in one of the following data frame is being detected. Thus the method of synchronization described herein prevents loss of data due to false lock or loss of synchronization by capturing the payload data as the frame state machine while operating in the operate mode re establishes synchronization in a manner independent of the length of the data frame.

When the second search window opens the logic in prior art frame state machine reads the data in or data in the end of frame which typically does not match the second frame synchronization pattern . When the logic in prior art frame state machine detects the mismatch the prior art frame state machine is returned to search mode to search for the frame synchronization pattern. Once the prior art frame state machine finds the frame synchronization pattern the prior art frame state machine cycles through the check lock mode. This is a time consuming process during which data is lost.

When second search window opens and the logic in the frame state machine does not detect the frame synchronization pattern i.e. the frame state machine detects a mismatch the frame state machine remains in operate mode . When the frame state machine detects a mismatch the logic in frame state machine sends the data following the predicted time for the arrival of the frame synchronization pattern to a buffer which records the data shown as data capture . The data is stored until the logic in frame state machine detects a frame synchronization pattern . If the frame synchronization pattern is detected later on in the data frame the data that was recorded starting at the predicted time i.e. when the second search window opened is overwritten by the data following the frame synchronization pattern since the data following the frame synchronization pattern is correct data. Thus the method of synchronization described herein prevents loss of data due to false lock or loss of synchronization by capturing the payload data as the frame state machine while operating in the operate mode re establishes synchronization.

When the logic in frame state machine detects the mismatch the frame synchronizer also expands the search window to form a wider search window . The search window is expanded by adding at least one bit to the search window . Thus the duration of the third search window is extended in time. By increasing the time the search window is open the frame synchronizer is provided more of an opportunity to overlap with the frame synchronization pattern . In this manner the frame synchronizer is capturing data while remaining in operate mode and simultaneously expanding the search window in order to capture a frame synchronization pattern in one of the following data frame . The time taken to find the frame synchronization pattern in one of the following data frame is less than the time required to return to search mode and check lock mode as done by a prior art frame synchronizer and no data is lost while the frame synchronization pattern in one of the following data frame is being detected.

At block a frame state machine is forced to an operate mode following an initial synchronization . The initial synchronization includes a search mode and a check lock mode . A search window is provided that is open for a duration longer than the duration required to receive the frame synchronization pattern see . The frame interval bit counter is used to predict a search window when the frame synchronization pattern is detectable.

At block the frame synchronizer searches for the frame synchronization pattern and on a bit level while running the frame state machine in the operate mode . The register holds a number of bits equal to the number of bits in the frame synchronization pattern . The frame synchronizer compares the bits in the register with the known binary pattern in the frame synchronization pattern .

At block the frame synchronizer corrects for synchronization on the bit level while running the frame state machine in the operate mode when synchronization is lost.

The frame synchronizer determines the frame synchronization pattern is lost if the frame synchronization pattern is not detected while the search window is open. Even though the frame synchronizer has not detected the frame synchronization pattern the input data frame including the data in the data stream M is captured based on the expected arrival time of the frame synchronization pattern . Thus data is not lost even when the frame synchronization pattern is lost or corrupted. The method in which this is done is described in detail below with reference to .

At block the wireless receiver determines determined if a search window is open. The search window width of the search window is an initial width W which is larger than the width of the frame synchronization pattern . The frame interval bit counter indicates to the frame state machine when the window is open. The frame interval bit counter counts the received bits and when the number of bits in the frame minus the equivalent number of bits that are in the pre margin time is the number of bits counted the window is opened. Thus the window is opened prior to the expected arrival time of the frame synchronization pattern.

At block the wireless receiver determines if a bit clock rising edge is detected. Based on a positive determination that the search window is open and based on a positive determination that the bit clock rising edge is detected the searching for the frame synchronization pattern on the bit level commences.

At block the wireless receiver determines if a frame synchronization pattern detected. When the N synchronization bits being stored in the register all match the frame synchronization pattern the register sends a signal to the frame state machine to indicate the frame synchronization pattern has been detected. The state machine is then set to indicate Sync detect 1.

If frame synchronization pattern is detected the count in the frame interval bit counter is reset to 1 and syncRTI in the RTI generator is set to 1 to maintain synchronization of the RTI generator with the frame synchronization pattern.

The flow proceeds to block . At block the frame is captured in the buffer . The Start Frame Capture is set to 1 when the value in the frame interval bit counter equals the Frame Sync End Count i.e. when the complete frame synchronization pattern has been received and the next bit will be a payload bit and the data is sent to the buffer . The data is sent to the buffer for the duration of the time the payload data is being received. The frame state machine knows how long it takes for the data between the end of the frame synchronization pattern and the beginning of the end of frame to be received and sends the data to the buffer during that time.

At block the wireless receiver resets the search window width to the initial search window width Wbased on the capturing of the frame in the buffer . This process occurs even if the search window width was not extended. Once the width of the search window is set to the initial search window width W the flow returns to block .

If the frame synchronization pattern is not detected at block the flow proceeds to block . In one implementation of this embodiment the frame synchronization pattern is not detected because a glitch that drops one or more bits in the frame synchronization pattern. This is a corrupted frame synchronization pattern. In another implementation of this embodiment one or more bits in the data are dropped or one or more bits in the end of frame EOF bits are dropped. In this latter case the frame synchronization pattern arrive time will be shifted by the number of dropped bits.

At block the wireless receiver determines if a receipt time of the bit received when the bit clock rising edge was detected is coincident with an expected start time of the frame synchronization pattern . The receipt time of the bit received when the bit clock rising edge was detected is coincident with an expected start time of the frame synchronization pattern the value in the frame interval bit counter equals a frame interval bit count. The frame interval bit count is the frame interval time times the bit rate. If the value of frame interval bit counter equals the Frame Interval Bit Count the data is expected to be received and the flow proceeds to block . At block the frame is captured as described above with reference to block and the flow proceeds to block .

If at block it is determined that the value of frame interval bit counter does not equal the Frame Interval Bit Count the flow proceed to block . At block it is determined if the search window is closed. The search window is closed when the value in the frame interval bit counter equals the frame sync end count.

If it is determined at block that the search window is closed the flow proceeds to block . At block the width of the search window is increased from a current search window width responsive to a positive determination that the search window is closed. Time equivalent to the duration of at least one bit is added to the pre margin time of the search window and time equivalent to the duration of at least one bit is added to the post margin time of the search window . In one implementation of this embodiment time equivalent to the duration of at least one bit is added to one of the post margin time or the pre margin time .

As shown in when the search window does not detect the frame synchronization pattern the search window is extended in duration from the current search window width Wso the next search window has an extended width W. The next search window is opened in the approximate time frame of the next frame synchronization pattern. When the search window does not detect the frame synchronization pattern the search window is extended in duration from the current search window width Wso the next search window has an extended width W. The search window is wide enough to detect the frame synchronization pattern so the search window is reduced according to block as described above and the search window is aligned to overlap the frame synchronization pattern . In this manner a nominal decoder time phase alignment is maintained through the data drop out period. The data drop out period in this exemplary case extends from receipt of the frame synchronization pattern to the receipt of the frame synchronization pattern .

The flow proceeds from block to block . If there is a data drop out period i.e. when one or more bits are dropped from the input data frame data is buffered captured while the frame synchronizer searches for a frame synchronization pattern. The buffered data is sent from the buffer to the processor when the frame synchronizer has resynchronized and the sync RTI signal is sent to the processor from the frame state machine . In this manner data other than the originally dropped bit or bits is not lost because of a data drop out while the synchronization is being corrected. If a bit in the frame synchronization pattern was erroneous a positive bit in place of a negative bit or vice versa then data is not lost because of the erroneous bit while the synchronization is being corrected.

The embodiments described herein include wireless receivers and transmitters however the same technique can be applied to receivers and transmitters that are communicatively coupled via wired connections.

A number of embodiments of the invention defined by the following claims have been described. Nevertheless it will be understood that various modifications to the described embodiments may be made without departing from the spirit and scope of the claimed invention. Accordingly other embodiments are within the scope of the following claims.

