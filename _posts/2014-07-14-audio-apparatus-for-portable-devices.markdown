---

title: Audio apparatus for portable devices
abstract: An audio apparatus for a portable device is provided. The portable device includes computing hardware coupled to associated data memory, which stores one or more audio or computer program products that include a plurality of audio libraries. The audio apparatus is operable to execute the audio products upon the computing hardware, whereby the audio products are operable to call the audio libraries to generate digital audio data. The digital audio data so generated is provided to sound-generating hardware, which is then operable to generate acoustic audio signals corresponding to the digital audio data. The audio apparatus is operable to host one or more replacement audio products, which are storable in the data memory. The audio apparatus is operable to invoke the replacement audio products as an alternative to the audio products for generating the digital audio data. The replacement audio products are operable to provide a functionality of capturing the digital audio data while substantially generating the acoustic audio signals.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483229&OS=09483229&RS=09483229
owner: Unity Technologies Finland Oy
number: 09483229
owner_city: Helsinki
owner_country: FI
publication_date: 20140714
---
This application is related to U.S. patent application Ser. No. 13 765 703 filed on 13 Feb. 2013 entitled System and Method for Sharing Gameplay Experiences and incorporated by reference in its entirety U.S. patent application Ser. No. 13 765 705 filed on 13 Feb. 2013 entitled System and Method for Sharing Score Experiences and incorporated by reference in its entirety and U.S. patent application Ser. No. 13 765 708 filed on 13 Feb. 2013 entitled System and Method for Managing Game Playing Experiences and incorporated by reference in its entirety.

The aspects of the present disclosure generally relate to audio apparatus for portable devices and more specifically to an audio apparatus that is operable to provide a functionality of capturing digital audio data. Moreover the aspects of the present disclosure relate to a method of operating the audio apparatus thereof. Furthermore the aspects of the present disclosure also relate to a software or computer program product including computer readable code means stored on non transitory machine readable data storage media wherein the software or computer program product is executable upon computing hardware to implement the aforesaid method.

Various operating systems OS and audio apparatus have been developed to support portable devices that we see today. Typically an audio apparatus for a portable device includes one or more High Level Audio Libraries HLALs and or one or more Low Level Audio Libraries LLALs . These audio libraries can be called by various applications running on an OS of the portable device to generate human audible sounds. The HLALs provide a wide variety of audio generation tools for example such as music playback. On the other hand the LLALs provide various ways to generate and manipulate audio depending on inputs provided by a user via a direct manipulation interface.

Let us consider for example that an application not shown in is running on an OS of the portable device. The application may for example be a gaming application that may require generation of human audible sounds during playing of a game. Let us also consider that the application calls the audio engine to generate human audible sounds via the conventional audio apparatus. In some cases the audio engine may be a part of the application itself.

Subsequently the LLAL may generate modify or pass through the digital audio data to the audio driver . Consequently the audio driver controls the audio adapter and or the audio endpoint to generate acoustic audio signals corresponding to the digital audio data.

The audio engine acts as an interface between the application and the audio apparatus. Optionally the audio engine could simply be a routine of the application calling the HLAL or the LLAL . Alternatively the audio engine could be a full featured sub program of the application responsible for one or more of 

The audio engine may be either created by an author of the application or licensed from a third party. In many instances the audio engine may not provide any interface to capture the digital audio data generated by the conventional audio apparatus.

Conventional techniques for facilitating such audio capturing require modifying the application and or the audio engine to include audio capturing capabilities. For this purpose an additional software module has to be included as a part of the application. In addition the audio engine has to be modified to call the additional software module to capture audio during the execution of the application.

However these conventional techniques suffer from a number of disadvantages. Firstly the application and or the audio engine are required to be modified extensively. Secondly making such extensive modifications is difficult time consuming and tedious. Thirdly in instances where the audio engine is licensed from a third party source code of the audio engine is often closed and therefore cannot be modified by the author of the application. Fourthly the additional software module has to be executed upon computing hardware of the portable device during the execution of the HLAL and or the LLAL . This leads to potential performance degradation of the application.

Therefore there exists a need for an audio apparatus for a portable device that is capable of facilitating audio capturing in a transparent manner.

The aspects of the present disclosure also seek to provide an audio apparatus that is operable to provide a functionality of capturing digital audio data.

The aspects of the present disclosure also seek to provide a method of operating an audio apparatus thereof.

In one aspect embodiments of the present disclosure provide an audio apparatus for a portable device. Examples of the portable device include but are not limited to a mobile terminal a mobile telephone a smart phone a Mobile Internet Device MID a phablet computer a tablet computer an Ultra Mobile Personal Computer UMPC a Personal Digital Assistant PDA a web pad a handheld personal computer a laptop computer an interactive entertainment computer and a gaming terminal.

The portable device includes computing hardware such as a controller or processor coupled to associated data memory which stores one or more audio software modules and products generally in the form of computer readable code means that include a plurality of audio libraries. When an application such as a gaming application requires generation of acoustic audio signals the audio apparatus executes the audio software products upon the computing hardware. Consequently the audio software modules and products call the audio libraries to generate digital audio data. The digital audio data so generated is provided to sound generating hardware which then generates acoustic audio signals corresponding to the digital audio data.

The sound generating hardware may include at least one audio driver and or at least one audio adapter coupled to at least one audio endpoint of the portable device for generating the acoustic audio signals. The at least one audio driver and or the at least one audio adapter may be operable to process the digital audio data.

Let us consider an example scenario in which the audio software products are proprietary software which are configured in a manner that hinders using the audio software products to capture the digital audio data generated by the audio apparatus.

In order to capture the digital audio data the audio apparatus is operable to host one or more replacement software products which are storable in the data memory. The audio apparatus is operable to invoke the replacement software products as an alternative to the audio software products for generating the digital audio data. Thereafter the replacement software products are operable to provide a functionality of capturing the digital audio data whilst substantially generating the acoustic audio signals.

The audio software modules and products may for example include a High Level Audio Library HLAL and a Low Level Audio Library LLAL . The HLAL may be operable to generate instructions for producing the digital audio data and to send the digital audio data and or the instructions to the LLAL. Subsequently the LLAL may be operable to generate or modify or pass through the digital audio data to the sound generating hardware to generate the acoustic audio signals.

On the other hand the replacement software modules and products may include a Replacement High Level Audio Library RHLAL and or a Wrapper Library WL . The RHLAL may be operable to provide Application Programming Interfaces APIs that are substantially similar to APIs of the HLAL while the WL may be operable to override function calls to the LLAL to pass through the WL.

The RHAL and or the WL may be simply included in an Application Binary Interface ABI of the application for example when the application is linked together with object code libraries. Such linking may for example be performed when an executable file is created or whenever the application is used at run time.

In addition the replacement software modules and products may include an audio capture component for capturing the digital audio data. The digital audio data so captured may then be stored in the data memory coupled to the computing hardware and or be used to regenerate acoustic audio signals by the sound generating hardware.

In another aspect embodiments of the present disclosure provide a method of operating the audio apparatus for the portable device.

In yet another aspect embodiments of the present disclosure provide a software or computer program product including computer readable program code means stored on non transitory machine readable data storage media wherein the software or computer program product is executable upon computing hardware of the portable device for implementing the aforementioned method. The software or computer program product may for example be downloadable from a software application store to the portable device.

Embodiments of the present disclosure substantially eliminate the aforementioned problems in the prior art and enable users to capture digital audio data generated during game playing without degrading performance of their portable devices and facilitate the functionality of capturing the digital audio data without any requirement to modify applications and or audio engines apart from simply including the RHAL and or the WL in the ABI of the application.

Additional aspects advantages features and aspects of the present disclosure would be made apparent from the drawings and the detailed description of the illustrative embodiments construed in conjunction with the appended claims that follow.

It will be appreciated that features of the present disclosure are susceptible to being combined in various combinations without departing from the scope of the present disclosure as defined by the appended claims.

In the accompanying drawings an underlined number is employed to represent an item over which the underlined number is positioned or an item to which the underlined number is adjacent. A non underlined number relates to an item identified by a line linking the non underlined number to the item. When a number is non underlined and accompanied by an associated arrow the non underlined number is used to identify a general item at which the arrow is pointing.

The following detailed description illustrates embodiments of the present disclosure and ways in which it can be implemented. Although the best mode of carrying out the present disclosure has been disclosed those in the art would recognize that other embodiments for carrying out or practicing the aspects of the present disclosure are also possible.

Embodiments of the present disclosure provide an audio apparatus for a portable device. Examples of the portable device include but are not limited to a mobile terminal a mobile telephone a smart phone a Mobile Internet Device MID a phablet computer a tablet computer an Ultra Mobile Personal Computer UMPC a Personal Digital Assistant PDA a web pad a handheld personal computer a laptop computer an interactive entertainment computer and a gaming terminal.

The portable device includes computing hardware coupled to associated data memory which stores one or more audio products and modules such as software and computer program products that include a plurality of audio libraries. In one embodiment the software products and modules comprise computer program products including computer readable program code means the computer readable program code means being stored on a computer readable storage medium for carrying out and executing the processes and instructions described herein. In one embodiment the audio apparatus is operable to execute the audio software products upon the computing hardware whereby the audio software products are operable to call the audio libraries to generate digital audio data. The digital audio data so generated is provided to sound generating hardware which is then operable to generate acoustic audio signals corresponding to the digital audio data.

The sound generating hardware may include at least one audio driver and or at least one audio adapter coupled to at least one audio endpoint of the portable device for generating the acoustic audio signals. The at least one audio driver and or the at least one audio adapter may be operable to process the digital audio data.

Additionally there could be scenarios where a sound is captured from a microphone of the portable device to generate digital audio data for capturing in the data memory whilst other digital audio data is being generated by the audio engine to generate acoustic audio signals from a loudspeaker of the portable device and to be captured in the data memory.

Let us consider an example scenario in which the audio software products are proprietary software which are configured in a manner that hinders using the audio software products to capture the digital audio data generated by the audio apparatus.

In order to capture the digital audio data the audio apparatus is operable to host one or more replacement audio products and devices such as software and computer program products which are storable in the data memory. The audio apparatus is operable to invoke the replacement software products as an alternative to the audio software products for generating the digital audio data. Thereafter the replacement software products are operable to provide a functionality of capturing the digital audio data whilst substantially generating the acoustic audio signals.

The audio products may for example include a High Level Audio Library HLAL and a Low Level Audio Library LLAL . The HLAL may be operable to generate instructions for producing the digital audio data and to send the digital audio data and or the instructions to the LLAL. Subsequently the LLAL may be operable to generate or modify or pass through the digital audio data to the sound generating hardware to generate the acoustic audio signals.

On the other hand the replacement software products may include a Replacement High Level Audio Library RHLAL and a Wrapper Library WL . The RHLAL may be operable to provide Application Programming Interfaces APIs that are substantially similar to APIs of the HLAL while the WL may be operable to override function calls to the LLAL to pass through the WL.

In addition the replacement software products may include an audio capture component for capturing the digital audio data during the generation of the acoustic audio signals. The digital audio data so captured may then be stored in the data memory coupled to the computing hardware and or be used to regenerate acoustic audio signals by the sound generating hardware.

Referring now to the drawings particularly by their reference numbers is a schematic illustration of various components of a portable device that may be suitable for implementing an audio apparatus in accordance with an embodiment of the present invention. The portable device includes but is not limited to a memory computing hardware such as a processor Input Output I O devices a network interface and a system bus that operatively couples various components including the memory processor the I O devices and the network interface .

The memory may include non removable memory removable memory or a combination thereof. The non removable memory may for example include Random Access Memory RAM Read Only Memory ROM flash memory or a hard drive. The removable memory may for example include flash memory cards memory sticks or smart cards.

The memory stores an Operating System OS that when executed on processor provides an interface on which various applications may be run. In addition the OS may include a user interface not shown in that provides a user of the portable device with one or more options to choose amongst.

For example the user interface may allow the user to download a gaming application from a remote server and play a game by executing the gaming application. In addition the user may be provided an option to capture digital audio data generated during playing of the game. Details of how the digital audio data may be captured have been provided in conjunction with . The digital audio data so captured may then be stored in the memory .

In addition the captured digital audio data may be shared with other users using other portable devices via the network interface . The network interface may allow the portable device to communicate with other portable devices for example via a communication network not shown in . In addition the network interface may allow the portable device to upload the captured digital audio data to the remote server over the communication network.

The communication network can be a collection of individual networks interconnected with each other and functioning as a single large network. Such individual networks may be wired wireless or a combination thereof. Examples of such individual networks include but are not limited to Local Area Networks LANs Wide Area Networks WANs Metropolitan Area Networks MANs Wireless LANs WLANs Wireless WANs WWANs and Wireless MANs WMANs .

The portable device may be implemented by way of at least one of a mobile terminal a mobile telephone a smart phone an MID a phablet computer a tablet computer a UMPC a PDA a web pad a handheld personal computer a laptop computer an interactive entertainment computer and a gaming terminal.

For example the audio engine may be a cross platform audio engine such as FMOD audio engine Irrlicht audio engine Beatnik audio engine and the like. The HLAL may be implemented via cross platform audio APIs such as Open Audio Library OpenAL API AV Foundation framework API CocosDenshion API and the like. The LLAL may for example be implemented via Core Audio API DirectX Audio API and the like.

In addition the audio apparatus includes sound generating hardware that includes an audio driver and an audio adapter coupled to an audio endpoint . The audio driver may be software enabled in a kernel. The audio driver may be a system supplied driver component a vendor supplied driver component or a combination thereof. The audio driver is interfaced with the audio endpoint through the audio adapter . The audio adapter may be hardware such as a plug or a bus while the audio endpoint may be hardware such as a speaker or a headphone.

Let us consider for example that an application not shown in is running on the OS of the portable device . The application may for example be a gaming application that may require generation of acoustic audio signals during playing of a game. Let us also consider that the application calls the audio engine to generate the acoustic audio signals. The audio engine acts as an interface between the application and the audio apparatus.

It may be noted here that the audio engine may optionally be implemented at least in part in the application. Alternatively the audio engine may be implemented as an entirely separate routine from the application. The audio engine may be either created by an author of the application or licensed from a third party.

Upon being called by the application the audio engine calls the HLAL or the LLAL . In a case where the HLAL is called the HLAL may be operable to generate instructions for producing digital audio data and to send the instructions to the LLAL to generate the digital audio data for the sound generating hardware. The audio driver and or the audio adapter may then be operable to process the digital audio data and generate the acoustic audio signals corresponding to the digital audio data via the audio endpoint .

Let us consider an example scenario in which the audio software products are proprietary software which are configured in a manner that hinders using the audio software products to capture the digital audio data generated by the audio apparatus. Let us also consider that the user of the portable device opts to capture the digital audio data generated during playing of the game.

In order to capture the digital audio data the audio apparatus is operable to host the replacement software products including the RHLAL and the WL and to invoke the replacement software products as an alternative to the audio software products for generating the digital audio data.

Upon being invoked the RHLAL is operable to provide APIs that are substantially similar to APIs of the HLAL . Consequently the RHLAL may be capable of generating acoustic audio signals that are substantially human audibly similar to acoustic audio signals generated by the HLAL . In this manner the RHLAL transparently replaces the HLAL such that function calls originally intended for the HLAL are received by the RHLAL .

In addition the WL is operable to override function calls to the LLAL to pass through the WL . In this manner the WL transparently wraps around the LLAL such that function calls originally intended for the LLAL are received by the WL before being passed by the WL to the LLAL . This enables the WL to configure the LLAL to send the generated digital audio data to the audio capture component thereby facilitating capturing of the digital audio data generated by the LLAL .

In addition the RHLAL and or the WL may be included in an Application Binary Interface ABI of the application for example when the application is linked together with object code libraries. Such linking may for example be performed when an executable file is created or whenever the application is used at run time. Consequently the RHLAL and or the WL may become a part of the application for example as implemented by software developers.

Now when the application calls the audio engine to generate the acoustic audio signals the audio engine intending to call the HLAL or the LLAL instead transparently calls the RHLAL or the WL depending on the type of audio processing to be performed and or one or more characteristics of the digital audio data to be generated.

In a first case where the RHLAL is called and executed on the computing hardware the RHLAL is operable to provide instructions to the LLAL to generate or modify or pass through the digital audio data to the sound generating hardware. The RHLAL configures the LLAL to send the generated digital audio data to the audio capture component thereby facilitating capturing of the digital audio data generated by the LLAL .

The execution of the RHLAL does not lead to measurable performance degradation as the RHLAL replaces the HLAL .

In a second case where the WL is called and executed on the computing hardware the WL is operable to call the LLAL to generate the digital audio data. Additionally the WL is operable to provide instructions to LLAL to send the generated digital audio data to the audio capture component thereby facilitating capturing of the digital audio data generated by the LLAL .

In addition the WL does not lead to performance degradation as the WL does not generate the digital audio data.

It may be noted here that the audio capture component may beneficially be implemented within the replacement software products. Alternatively the audio capture component may be implemented entirely separately from the replacement software products.

Beneficially the audio capture component may be operable to capture the digital audio data during the generation of the acoustic audio signals by the audio apparatus. The audio capture component may also be operable to store the captured digital audio data in the memory . The digital audio data may then be used to regenerate acoustic audio signals by the sound generating hardware at a later time.

Additionally there could be scenarios where a sound is captured from a microphone of the portable device to generate digital audio data for capturing in the memory whilst other digital audio data is being generated by the audio engine to generate acoustic audio signals from a loudspeaker of the portable device and to be captured in the memory .

It may be noted here that the application the audio engine the HLAL or the LLAL are not required to be modified. As described earlier the RHLAL and or the WL are linked to the application thereby transparently replacing the HLAL and or wrapping around the LLAL . This results in the audio engine calling the RHLAL and or the WL instead of the HLAL or the LLAL when required.

For example a video apparatus could be implemented on the portable device in a manner similar to the audio apparatus to capture digital video data generated during the playing of the game. The digital video data so captured could then be uploaded to a remote server and or shared with other users as described earlier.

As described earlier the audio apparatus includes the audio software products which includes the HLAL and or the LLAL . Let us consider the previous example scenario in which the audio software products are proprietary software that are configured in a manner that hinders using the audio software products to capture digital audio data generated by the audio apparatus.

In order to capture the digital audio data the audio apparatus is used to host the replacement software products at a step . In accordance with the step the replacement software products include the RHLAL and or the WL along with the audio capture component . As described earlier these replacement software products may be optionally linked to the application to become a part thereof.

For illustration purposes let us consider that the application calls the audio engine to generate the acoustic audio signals. Consequently at a step the audio apparatus operates to invoke the replacement software products as an alternative to the audio software products for generating the digital audio data.

As described earlier the RHLAL is operable to provide APIs that are substantially similar to APIs of the HLAL . The RHLAL transparently replaces the HLAL such that function calls originally intended for the HLAL may be received by the RHLAL .

In addition the WL is operable to override function calls to the LLAL to pass through the WL . The WL transparently wraps around the LLAL such that function calls originally intended for the LLAL may be received by the WL .

In accordance with the step the audio engine calls the RHLAL or the WL depending on type of audio processing to be performed and or one or more characteristics of the digital audio data to be generated.

If at the step the RHLAL is called the RHLAL operates to provide instructions to the LLAL to generate or modify or pass through the digital audio data to the sound generating hardware at the step . Additionally the RHLAL operates to configure the LLAL to send the digital audio data generated at the step to the audio capture component .

If at the step the WL is called the WL operates to call the LLAL to generate or pass through the digital audio data to the sound generating hardware at the step . Additionally the WL operates to configure the LLAL to send the digital audio data generated at the step to the audio capture component .

Subsequently at a step the audio capture component operates to capture the digital audio data generated at the step .

Meanwhile at a step the sound generating hardware operates to generate the acoustic audio signals corresponding to the digital audio data as described earlier.

Beneficially the audio capture component may operate to capture the digital audio data during the generation of the acoustic audio signals. Accordingly the steps and may be performed simultaneously.

In addition the method may include a step at which the digital audio data captured at the step are stored in the memory .

Further the method may include one or more steps at which the digital audio data captured at the step may be uploaded to a remote server and or shared with other users as described earlier.

It should be noted here that the steps to are only illustrative and other alternatives can also be provided where one or more steps are added one or more steps are removed or one or more steps are provided in a different sequence without departing from the scope of the claims herein.

Embodiments of the present disclosure provide a software or computer program product including machine readable instructions stored on non transitory machine readable data storage media wherein the machine readable instructions of the software product are executable upon the computing hardware such as a processor of the portable device for implementing the method as described in conjunction with . In one embodiment portable device is generally configured to utilize program storage devices embodying machine readable program source code that is adapted to cause the apparatus to perform and execute the method steps and processes disclosed herein. The program storage devices incorporating aspects of the disclosed embodiments may be devised made and used as a component of a machine utilizing optics magnetic properties and or electronics to perform the procedures and methods disclosed herein. In alternate embodiments the program storage devices may include magnetic media such as a diskette disk memory stick or computer hard drive which is readable and executable by a computer. In other alternate embodiments the program storage devices could include optical disks read only memory ROM floppy disks and semiconductor materials and chips.

The software product may for example be downloadable from a software application store for example from an App store to the portable device . The computer program product or software incorporating the processes and method steps incorporating aspects of the disclosed embodiments may be stored in one or more computer systems or on an otherwise conventional program storage device.

Embodiments of the present disclosure can be used for various purposes including though not limited to enabling users to capture digital audio data generated during game playing without measurably degrading performance of their portable devices and facilitating the functionality of capturing the digital audio data without any requirement to modify applications and or audio engines apart from simply including the replacement software products in ABIs of the applications.

Modifications to embodiments of the present disclosure described in the foregoing are possible without departing from the scope of the present disclosure as defined by the accompanying claims. Expressions such as including comprising incorporating consisting of have is used to describe and claim the present invention are intended to be construed in a non exclusive manner namely allowing for items components or elements not explicitly described also to be present. Reference to the singular is also to be construed to relate to the plural.

