---

title: Presence delay and state computation for composite services
abstract: A presence calculation method comprising receiving first presence subscription request for a composite service that comprises a service at the node and a plurality of discrete services at one or more child nodes, sending a second presence subscription request to one or more child nodes in response to the first subscription request, receiving one or more response messages that comprise a collection of presence state transition delays corresponding to the child nodes from the child nodes in response to the second subscription request, determining one or more communication delays between the node and the child nodes using the response messages, computing a presence state transition delay for the composite service using the collection of presence state transition delays and the communication delays; and determining a composite presence state using a mapping between the presence state transition delay for the composite service and the composite presence state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09509572&OS=09509572&RS=09509572
owner: FutureWei Technologies, Inc.
number: 09509572
owner_city: Plano
owner_country: US
publication_date: 20140627
---
The present application claims benefit of U.S. Provisional Patent Application No. 61 840 673 filed Jun. 28 2013 by Li Li et al. and entitled Presence Delay and State Computation for Composite Services Based On Timed AND OR Tree which is incorporated herein by reference as if reproduced in its entirety.

Service compositions may be processes which combine atomic services into a new service. A service composition may form the basis for a Service Oriented Architecture SOA to reuse machines and resources over networked computers. In SOA each service may provide a defined set of functions and or well defined interfaces in terms of protocols and functionalities. Each service may be accessible over a network and collectively may provide a complete functionality of a larger software application. Many service composition languages and systems have been proposed for SOA such as Web Services Business Process Execution Language WS BPEL WS BPEL Extension For People BPEL4People Web Service Choreography WS Choreography Business Process Execution Language for Representational State Transfer BPEL for REST Yahoo Pipes and Hyperlink Pipeline.

Determining accurate estimates of presence states and presence delays in each of the services that compose the final application such that the services may cooperate and perform as a service composition may be challenging in real time communication systems with SOA. In a SOA system the presence state of each atomic service may be discrete and may not be merged or compared for composite services. Atomic services may employ different presence systems and or may follow different presence standards. Presence states may also be defined differently from one system to another system. For instance two presence systems may use the same state for different meanings or different states for the same meaning. Efficiently determining presence information for composite services as a whole entity and or providing accurate timing information about service availability may allow the use of composite services for real time applications.

In one embodiment a presence calculation method comprising receiving a first presence subscription request for a composite service that comprises a service at the node and a plurality of discrete services at one or more child nodes sending a second presence subscription request to the one or more child nodes in response to the first subscription request receiving one or more response messages that comprise a collection of presence state transition delays corresponding to the child nodes from the child nodes in response to the second subscription request determining one or more communication delays between the node and the child nodes using the response messages computing a presence state transition delay for the composite service using the collection of presence state transition delays and the communication delays and determining a composite presence state using a mapping between the presence state transition delay for the composite service and the composite presence state wherein the presence state transition delay for the composite service indicates an amount of time for the node to transition to an available presence state from another presence state.

In another embodiment an apparatus comprising executable instructions stored on a non transitory computer readable medium that when executed by a processor causes a network device to receive a subscription request for a composite service that comprises one or more discrete services send a subscription request to one or more child nodes in response to receiving the subscription request receive one or more subscription response messages from the child nodes that comprise a collection of presence state transition delays of the child nodes compute a presence state transition delay based on the collection of presence transition delays of the child nodes and a communication delay for the subscription response message and send a second subscription response message that comprises the presence state transition delay of the processor wherein the presence state transition delay of the processor indicates an amount of time for the processor to transition to an available presence state from another presence state.

In yet another embodiment an apparatus comprising a receiver configured to receive a presence event message from a sub tree wherein the presence event message comprises a presence state transition delay for the sub tree a processor coupled to a memory device and the receiver wherein the memory comprises computer executable instructions stored in a non transitory computer readable medium such that when executed by the processor causes the processor to compute a presence state transition delay for the apparatus using the presence state transition delay for the sub tree and a transmitter coupled to the processor wherein the transmitter is configured to send a presence event message that comprises the presence state transition delay for the apparatus to a parent node.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although an illustrative implementation of one or more embodiments are provided below the disclosed systems and or methods may be implemented using any number of techniques whether currently known or in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below including the exemplary designs and implementations illustrated and described herein but may be modified within the scope of the appended claims along with their full scope of equivalents.

Disclosed herein are a various embodiments for computing the presence delay and or presence state for composite services using a TAO tree. In one embodiment a presence subscription overlay may be implemented on a service composition process to reduce complex service composition to one or more TAO tree representations of presentities and or services. The presence states of discrete services in a service composition may be mapped to expected presence state transition delays in a continuous time domain and the expected presence state transition delays may be used to compute the expected presence state transition delay of the entire tree in the time domain. The presence state of the entire tree may also be determined from the presence states of the discrete services in the service composition. A TAO tree may increase the usability of composite services.

A composite service may comprise a plurality of atomic or discrete services and may be configured to employ the plurality of discrete services which may not always be available and or may have a plurality of presence states. The terms atomic service and discrete service may be used interchangeably to refer to a service that may operate independently of other services. A discrete service may refer to a service that may be employed in a service composition but whose own composition may not be accessible to the composition process. As such a discrete service may be an independent service. Providing presence state transition delays and or presence states to a client may reduce uncertainty when using composite services. Composite services may be configured to implement conventional rules for discrete services without substantial changes. Presence states from different presence systems may be integrated in the time domain without manual translations of each presence state. The disclosed embodiments may be configured to transmit a presence state transition delay using conventional presence subscriptions and or presence notification messages with minor extensions and may inform clients when a composite service may become available. For instance one or more embodiments may be implemented through extensions to current Session Initiation Protocol SIP Extensible Messaging and Presence Protocol XMPP and or other presence protocols. As such a TAO tree may be implemented with a composite service to reduce network traffic.

A TAO tree overlay may be implemented on one or more servers e.g. a computer server and or on a client e.g. a web browser . In one embodiment a TAO tree overlay may be implemented substantially on either a server or a client. Alternatively at least portions of a TAO tree overlay may be implemented in servers and at least a portion of the TAO tree overlay may be implemented in a client. The TAO tree overlay may be overlaid on top of or incorporated within the service composition process . The TAO tree overlay may be configured to map one or more discrete presence states to temporal presence state transition delays and to output a composite presence state based on the discrete presence states and or the temporal presence state transition delays. The TAO tree overlay may be configured to receive and or to extract presence information e.g. presence states and or presence state transition delays from one or more of the discrete services in the service composition process .

The TAO tree overlay may be configured to compute presence state transition delays for one or more discrete services based on their presence states to compute a tree presence state transition delay based on the presence state transition delays of the discrete services to compute a tree presence state based on the tree presence state transition delay and to present the tree presence state for the service composition process . A presence state transition delay may indicate an amount of time for a discrete service to transition from a first state e.g. a busy state to a second state e.g. a ready state where the discrete service may be configured to communicate with other services. Computing a presence state transition delay may comprise converting a presence state for a discrete service to a unit of time or time delay. In one embodiment each discrete service may be responsible for converting its presence state to a presence state transition delay. The discrete service may implement one or more atomic processes to convert its presence state to a presence state transition delay. A tree presence state transition delay may indicate an amount of time for the aggregation of discrete services to transition to from a first state to a second state. Computing a tree presence state transition delay may comprise computing the time or time delay using the presence delays of a plurality of discrete services. A tree presence state may indicate a composite presence state for a composite service. Computing a tree presence state may comprise converting a tree presence state transition delay to a presence state for a composite service.

The network element may comprise one or more downstream ports coupled to a transceiver Tx Rx which may be transmitters receivers or combinations thereof. The Tx Rx may transmit and or receive frames from other network nodes via the downstream ports . Similarly the network element may comprise another Tx Rx coupled to a plurality of upstream ports wherein the Tx Rx may transmit and or receive frames from other nodes via the upstream ports . The downstream ports and or the upstream ports may include electrical and or optical transmitting and or receiving components. In another example embodiment the network element may comprise one or more antennas coupled to the Tx Rx . The Tx Rx may transmit and or receive data e.g. packets from other network elements wirelessly via one or more antennas.

A processor may be coupled to the Tx Rx and may be configured to process the frames and or determine which nodes to send e.g. transmit the packets. In an example embodiment the processor may comprise one or more multi core processors and or memory modules which may function as data stores buffers etc. The processor may be implemented as a general processor or may be part of one or more application specific integrated circuits ASICs field programmable gate arrays FPGAs and or digital signal processors DSPs . Although illustrated as a single processor the processor is not so limited and may comprise multiple processors. The processor may be configured to subscribe to a presence for one or more discrete and or composite services to send and or receive presence event messages and or to calculate a composite presence state transition delay and or a composite presence state.

The memory module may be used to house the instructions for carrying out the various embodiments described herein. In one embodiment the memory module may comprise a tree presence delay module and or a tree presence state module that may be implemented on the processor . In one embodiment the tree presence delay module and or the tree presence state module may be implemented on a network client and or server to generate one or more composite presence states using a plurality of discrete presence states and or present state transition delays. The tree presence delay module may be configured to implement a TAO tree presence subscription and to compute a service presence state transition delay and or a tree presence state transition delay. The tree presence state module may be configured to convert a tree presence state transition delay to a tree presence state to implement a TAO tree presence state table and or to assign one or more tree presence states. The tree presence delay module and or the tree presence state module may be configured to implement methods described in and or method described in .

It is understood that by programming and or loading executable instructions onto the network element at least one of the processor the cache and the long term storage are changed transforming the network element in part into a particular machine or apparatus for example a multi core forwarding architecture having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules known in the art. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and number of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable will be produced in large volume may be preferred to be implemented in hardware e.g. in an ASIC because for large production runs the hardware implementation may be less expensive than software implementations. Often a design may be developed and tested in a software form and then later transformed by well known design rules known in the art to an equivalent hardware implementation in an ASIC that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

Any processing of the present disclosure may be implemented by causing a processor e.g. a general purpose multi core processor to execute a computer program. In this case a computer program product can be provided to a computer or a network device using any type of non transitory computer readable media. The computer program product may be stored in a non transitory computer readable medium in the computer or the network device. Non transitory computer readable media include any type of tangible storage media. Examples of non transitory computer readable media include magnetic storage media such as floppy disks magnetic tapes hard disk drives etc. optical magnetic storage media e.g. magneto optical disks compact disc read only memory CD ROM compact disc recordable CD R compact disc rewritable CD R W digital versatile disc DVD Blu ray registered trademark disc BD and semiconductor memories such as mask ROM programmable ROM PROM erasable PROM flash ROM and RAM . The computer program product may also be provided to a computer or a network device using any type of transitory computer readable media. Examples of transitory computer readable media include electric signals optical signals and electromagnetic waves. Transitory computer readable media can provide the program to a computer via a wired communication line e.g. electric wires and optical fibers or a wireless communication line.

Nodes may be coupled to one another using a plurality of edges. An edge may represent communication paths between the nodes . Each edge may be associated with a communication delay denoted as Tm. A communication delay may indicate a duration of time for a message to be sent from a first node to a second node using a communication path. The communication delay may be greater than or equal to about zero and may include delays such as propagation delays network delays queuing delays and processing delays. In one embodiment a communication delay may be determined using message time stamps to estimate network delays. Alternatively a communication delay may be determined and or computed using any other suitable method as would be appreciated by one of ordinary skill in the art upon viewing this disclosure.

Each node may be associated with a node type one or more discrete services denoted as Si and a presentity denoted as Pi. A node type may be an AND node an OR node or an atomic node. An AND node may be configured to become present e.g. in an available state when a discrete service associated with the node is present and the child nodes for the discrete service sub tree are present. An OR node may be configured to become present when a discrete service associated with the node becomes present and at least one of the child nodes for the discrete service sub tree is present. An atomic node may be a leaf node and may not have any child nodes. An atomic node may be configured such that a discrete service associated with a node may be configured to change the presence state of the node independent of other nodes. A discrete service may be a service process running on one or more of the nodes . In node may be configured as an AND node node may be configured as an OR node and nodes may be configured as atomic nodes.

In one embodiment a TAO tree system may use an AND node to represent sequential services and or sequential SEQ nodes when a proportional decrease condition is present. In a proportional decrease condition for every presence state a sub tree presence state transition delay function may decrease monotonically in proportion to time such that 

By representing the sequential services as AND nodes and invoking the AND nodes in parallel at a time t the presence state transition delays for a sub tree when each sequential service maintains its presence state within an interval t t may be as follows. The presence state delay for node Smay be about T S t 10 seconds. The presence state delay for node Smay be about T S t T S t 10 10 10 10 20 seconds. The presence state delay for node Smay be about T S t T S t 20 20 5 20 15 seconds. A maximum presence state transition delay may be max T S t T S t T S t max 10 20 15 20 seconds. As such the presence state transition delay for the sub tree may be greater than or about equal to 20 seconds. The presence state transition delay of an AND node may an upper bound of the presence state transition delay for an SEQ node.

When a sequence of discrete services starts at time t a discrete service Sinvoked at a time t may take the longest time to start among the discrete services in the sequence. A maximum presence state transition delay among the discrete service may be t T S t . Invoking the discrete service Sat time t may still result in the longest time to start among the discrete services in the sequence because of the proportional decrease condition t T S t t T S t . When a discrete service changes during an interval t t the upper bound relationship may not hold. Reevaluating the presence state transition delay at the new states may restore the upper bound relationship.

A presentity may be configured to manage and or store the presence state of one or more discrete services and to compute the presence state of a sub tree. For instance a presence subscription may be made to a presentity to obtain presence information for one or more discrete services associated with a node. A presentity may be configured to maintain a presence state of one or more of the discrete services denoted as psi a presence state transition delay denoted as Td Si t the communication delay Tm a presence state transition delay for a sub tree denoted as Tc and or a presence state of the sub tree denoted as pti. A presence state of a discrete service may be provided to the presentity by a discrete service. The presence state transition delay may indicate a duration of time for a discrete service to transition from its current presence state to an available state. The presence state transition delay may be a function of time and or a presence state and may be configured to be queried at any time by a presentity and or a TAO tree system . For example for a busy state at a time t the presence state transition delay may be Td S t 30 minutes. For a busy state at time t 10 the presence state transition delay may be Td S t 10 5 minutes. A negative presence state transition delay may indicate the discrete service reached an available state 5 minutes ago. In another example if the presence state changes from a busy state to an away state between t and t 10 then at time t 10 the presence state transition delay may be Td S t 10 60 minutes. A presence state transition delay may be determined using a Timed Markov Model of presence states based on a distance and or a speed relative to a base station based on activity schedules or any other suitable method as would be appreciated by one of ordinary skill in the art upon viewing this disclosure. A presence state transition delay for a sub tree may be a function of one or more discrete services and time. The presence state transition delay for a sub tree may indicate the duration of time for a sub tree associated with a discrete service to transition to a ready state. A presence state of a sub tree may indicate the presence state of a sub tree associated with a parent node and or a discrete service. The presence state transition delay and or the presence state of a sub tree may be computed by the presentity.

Table 1 is an embodiment of a presence state table for a sub tree. A presence state table include but is not limited to a look up table a timed Markov Model or any other suitable structure that may describe a relationship between a presence state transition delay and a presence state as would be appreciated by one of ordinary skill in the art upon viewing this disclosure. A presenity may maintain the presence state of one or more discrete services one or more nodes and or one or more sub trees using a presence state table. A presence state table may be used as a look up table and or a reverse look up table. The presence state table may map a presence state to a time delay and a time delay to a presence state. In Table 1 the rows may represent the current presence state and the columns may represent available presence states. Available presence states may comprise one or more presence states that are available to transition to from the current state. For instance the available presence states may include but is not limited to an open state a ready state and an online state. Each cell may represent a presence state transition delay or the amount of time t s s to transition from the current presence state sto the available presence state s. The amount of time to transition from the current presence state to the available present state may be represented in any suitable units of time e.g. seconds as would be appreciated by one of ordinary skill in the art upon viewing this disclosure. For example if the current presence state of a sub tree is s the sub tree may transition to a presence state sin a time duration of about t.

A presentity may assign a presence state to a TAO tree and or a sub tree which may be used to apply a presence related rule update a user with the presence state information and or invoke a discrete service when the sub tree become available. The presentity may select a presence state ssuch that the presence state transition delay Tc S t t s s of a sub tree is relatively minimal with respect to the row states in the state table. In one embodiment the presentity may assign a presence state with a transition delay that is closest to the presence state transition delay of the sub tree Si at time t. For example a presentity may assign a presence state to a sub tree with a presence state transition delay of about 8 minutes. A transition delay from Sto reach Smay be about 10 minutes and a transition delay from Sto reach state Smay be about 20 minutes. The presentity may choose to represent the sub tree with the presence state Ssince the transition delay of about 10 minutes for this presence state is closest to 8 minutes. In the event of a tie a presentity may be configured to implement any suitable heuristic to select a presence state for example a random selection. A presentity may also employ a presence state table to determine a presence state using a time delay. When node transitions to a new presence state the new presence state may be determined using the time delay to transition from the previous presence state to the new presence state. For instance if the previous presence state is Sand the time delay to transition to the new presence state was about t then the new presence state may be determined to be presence state S.

The discrete service may be requested to start by the parent node at a time . The execution of the discrete service may not begin until the discrete service and its sub tree Sj are in a ready state. The discrete service may have a presence state transition delay of about Td Si t for the discrete service to transition to a ready state. At time the discrete service may be in a ready state and may be configured to send a service request message s to sub tree Sj. The service request message s may have a communication delay of about Tm s Si Sj amount of time to reach the sub tree Sj. Sub tree Sj may receive the service request message s at time . At time the sub tree Sj may have a presence state transition delay of about Tc Sj tj and may become ready at time . At time the sub tree Sj may send a service response message r to the parent node Si that indicates the sub tree Sj is in a ready state. The service response message r may have a communication delay of about Tm r Sj Si amount of time to reach the parent node running the discrete service Si from the sub tree Sj. At time parent node Si may receive the service response message r and the discrete service may start.

In graph a discrete service may be queried by a parent node Si at a time . The discrete service may have a presence state transition delay of about Td Si ti for the discrete service to transition to a ready state. Since the discrete service may not need to be invoked the parent node Si may send a subscription request message s to sub tree Sj at the same time e.g. at time . Alternatively the parent node Si may send a subscription request message s to sub tree Sj at some time after time . After some time e.g. at time the subscription request message s may be received at the sub tree Sj. Since the sub tree Sj may not need to be invoked first the sub tree Sj may send a subscription response message r back to the parent node Si upon receiving the subscription request message s e.g. at time . The subscription response message r may indicate a presence state transition delay of about Tc Sj t amount of time for a sub tree Sj. The subscription response message r may have a communication delay of about Tm r Sj Si amount of time to travel from the sub tree Sj to the parent node Si. A remaining time delay until the sub tree Sj to becomes ready at time may be computed by subtracting the communication delay Tm r Sj Si of the message from the presence state transition delay e.g. Tc Sj t of the sub tree Sj. Generally the presence delay of a sub tree Sj may be computed by the parent node running the discrete service Si without invoking the service Sj using equation 1 . 1 

The presence state transition delay of a sub tree Sj may be computed based on the node type e.g. AND node OR node or atomic node of a node as different types of nodes may have different dependencies on their child nodes. In one embodiment the presence state transition delay of an AND node may be computed by a node e.g. a parent node or a child node Si running the discrete service without invoking a sub tree Sj using equation 2 max for all in 2 where C S is a set of the child services of discrete service S z x is a function that maps a positive argument to itself e.g. z x x when x 0 and a negative argument to zero e.g. z x j otherwise and tis the delivery time of the subscription response message r at the sub tree S. In one embodiment the function z x may be employed to avoid getting a negative communication delay for example from subtracting two timestamps. For an AND node to be present all of the child nodes of the AND node are present. The presence state transition delay calculation for the child nodes of an AND node may be represented by the maximum function in equation 2. The presence state transition delay of an OR node may be computed by a node e.g. a parent node or a child node Si without invoking a sub tree Sj using equation 3 min for all in . 3 The OR node may be present when at least one of child node of the OR node is present. The presence state transition delay calculation for the child nodes of an OR node may be represented by the minimum function in equation 3. The presence state transition delay of an atomic node may be computed by a node e.g. a parent node or a child node Si using equation 4 . 4 An atomic node may be independent and may not have any children. As such the presence transition delay may be about the presence state transition delay of the discrete service Si.

At step method may send a presence subscription request e.g. qj Subscribe . . . to one or more child nodes or a sub tree. At step method may receive one or more response messages from child nodes. Method may wait for and or receive the subscription responses from the child nodes or sub tree. A response message r from a sub tree Pj may arrive at time t Si r . The response message r may be expressed using equation 5 Response delay timestamp 5 where t P r is the delivery time of the message rat the sub tree Pj. As shown in equation 6 the response may comprise the presence state transition delay the presence state transition delay at sub tree Pj and or the communication delay of the response message r. In one embodiment the presentity of node Pi may use the presence state transition delay at sub tree Pj and or the communication delay to compute the presence state transition delay at sub tree Pj. At step method may compute the communication delay T r S S for each of the response messages r. The delivery time t P r of the message rat the sub tree Pj may be embedded in the response message rand the response message rarrival time t P r at the node Pi may be known to the node Pi. The communication delay may be computed using equation 6 . 6 

At step method may compute the presence state transition delay for the node Pi according to equation 2 when the node Pi is an AND node or equation 3 when the node Pi is an OR node. At step method may determine a composite presence state based on the presence state transition delay. The presentity of node Pi may employ a presence state table e.g. presence state table as described in to determine a presence state for the composite service. The presentity may use an association or mapping between the computed presence state transition delay and a presence state to determine the composite presence state.

Returning to step if node Pi is a composite node method may proceed to step . At step method may send a presence subscription request e.g. qj Subscribe . . . to one or more child nodes or a sub tree Pj. At step method may wait for and or receive the subscription responses from the child nodes or sub tree Pj. A response message r from a sub tree Pj may arrive at time t Si r . The response message r may be expressed using equation 5 described in . As shown in equation 5 the response may comprise the presence state transition delay at sub tree Pj and or the communication delay of the response message r. In one embodiment the presentity of node Pi may use the presence state transition delay at sub tree Pj and or the communication delay to compute the expected presence state transition delay at sub tree Pj.

At step method may compute the communication delay T r S S for each of the response messages r. The delivery time t P r of the message rat the sub tree Pj may be embedded in the response message rand the response message rarrival time t P r at the node Pi may be known to the node Pi. The communication delay may be computed using the equation 6 described in . At step method may compute the presence state transition delay for the node Pi according to equation 2 when the node Pi is an AND node or equation 3 when the node Pi is an OR node. At step method may send a subscription response to the node x as previously discussed. Method may be recursive and or executed one or more times in a TAO tree. For instance method may be performed at one or more nodes that may have one or more child nodes.

At step method may receive a presence event message efrom a child node Pat a time t P e . The presence event message may comprise a presence state transition delay T P t of the child node. A presence event message emay be expressed using equation 8 Event delay timestamp 8 where t P e is the delivery time of the event eat the child node Pj. A presence event message emay be received in response to but not limited to the addition and or removal of one or more child nodes and the updating of a presence state for one or more child nodes. For example a presence state message emay be received in response to presence state of a child node Pj transitioning from unavailable to available. At step method may compute a communication delay for the presence event message e. The communication delay T e P P for the presence event message emay be computed similar to as describe in step in . Accordingly the communication delay for the presence event message emay be expressed using equation 9 . 9 

At step method may compute the presence state transition delay for the node Pi. The presence state transition delay T P t for the node Pi may be computed according to equation 2 when the node Pi is an AND node or equation 3 when the node Pi is an OR node. At step method may send the presence event message eto its parent node. In one embodiment the presence event message emay be expressed using equation 10 Event delay timestamp . 10 

Table 2 is an embodiment of presence delay calculations for the hyperlink pipeline system . Note that the communication delays for the hyperlink pipeline system are not shown in Table 2. The presence state transition delay for hyperlink may be about five seconds. Hyperlink may be an atomic node and the sub tree presence state transition delay may be about equal to the presence state transition delay which may be about two seconds. The presence state transition delay for hyperlink may be about seven seconds. Hyperlink may be an atomic node and the presence state transition delay of the sub tree may be about equal to the presence state transition delay which may be about six seconds. The presence state transition delay for hyperlink may be about equal to the sum of the presence state transition delay of hyperlink and the presence state transition delay of hyperlink which may be about 13 seconds. The presence state transition delay for hyperlink may be about equal to the sum of the presence state transition delay of hyperlink and the longest delay between the presence state transition delay of hyperlink and the presence state transition delay of hyperlink which may be about 18 seconds.

In one embodiment a hyperlink pipeline may implement a TAO tree to compose a pipeline presence for Web Real Time Communications WebRTC applications. A round trip subscription delay between a first user s browser to another user s browser was measured. Table 3 is an embodiment of the measured round trip subscription delays averaged over 20 runs.

At least one embodiment is disclosed and variations combinations and or modifications of the embodiment s and or features of the embodiment s made by a person having ordinary skill in the art are within the scope of the disclosure. Alternative embodiments that result from combining integrating and or omitting features of the embodiment s are also within the scope of the disclosure. Where numerical ranges or limitations are expressly stated such express ranges or limitations should be understood to include iterative ranges or limitations of like magnitude falling within the expressly stated ranges or limitations e.g. from about 1 to about 10 includes 2 3 4 etc. greater than 0.10 includes 0.11 0.12 0.13 etc. . For example whenever a numerical range with a lower limit R and an upper limit R is disclosed any number falling within the range is specifically disclosed. In particular the following numbers within the range are specifically disclosed R R k R R wherein k is a variable ranging from 1 percent to 100 percent with a 1 percent increment e.g. k is 1 percent 2 percent 3 percent 4 percent 5 percent . . . 50 percent 51 percent 52 percent . . . 95 percent 96 percent 97 percent 98 percent 99 percent or 100 percent. Moreover any numerical range defined by two R numbers as defined in the above is also specifically disclosed. The use of the term about means 10 of the subsequent number unless otherwise stated. Use of the term optionally with respect to any element of a claim means that the element is required or alternatively the element is not required both alternatives being within the scope of the claim. Use of broader terms such as comprises includes and having should be understood to provide support for narrower terms such as consisting of consisting essentially of and comprised substantially of. Accordingly the scope of protection is not limited by the description set out above but is defined by the claims that follow that scope including all equivalents of the subject matter of the claims. Each and every claim is incorporated as further disclosure into the specification and the claims are embodiment s of the present disclosure. The discussion of a reference in the disclosure is not an admission that it is prior art especially any reference that has a publication date after the priority date of this application. The disclosure of all patents patent applications and publications cited in the disclosure are hereby incorporated by reference to the extent that they provide exemplary procedural or other details supplementary to the disclosure.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods might be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

In addition techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as coupled or directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

