---

title: Online chats without displaying confidential information
abstract: Systems and methods are provided for online chats without displaying confidential information. A system sends, from a first online chat participant, an information request to a second online chat participant. The system receives, from the second online chat participant, a response based on the information request. The system notifies the first online chat participant of receiving the response from the second online chat participant without displaying confidential information of the response to the first online chat participant.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09577835&OS=09577835&RS=09577835
owner: salesforce.com, inc.
number: 09577835
owner_city: San Francisco
owner_country: US
publication_date: 20140714
---
This application claims the benefit of U.S. Provisional Patent Application No. 61 936 977 entitled SYSTEM AND METHOD FOR ONLINE CHATS WITHOUT DISPLAYING SECURE CONTENT by Aniano et al. filed Feb. 7 2014 and U.S. Provisional Patent Application No. 61 936 983 entitled SYSTEM AND METHOD FOR ROUTING ONLINE CHATS by Aniano et al. filed Feb. 7 2014 the entire contents of which are incorporated herein by reference.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever.

The subject matter discussed in the background section should not be assumed to be prior art merely as a result of its mention in the background section. Similarly a problem mentioned in the background section or associated with the subject matter of the background section should not be assumed to have been previously recognized in the prior art. The subject matter in the background section merely represents different approaches which in and of themselves may also be inventions.

Online chat refers to any kind of communication over a communication network that offers a real time transmission of text messages from sender to receiver. Online chat messages are generally short which enables other participants to respond quickly thereby creating a feeling similar to a spoken conversation which distinguishes online chatting from other text based online communication forms such as Internet forums and email. Online chat may include point to point communications as well as multicast communications from one sender to many receivers. Online chat includes web based applications that enable communication which is often directly addressed but may be anonymous between users in a multi user environment. Sometimes communicating confidential information during online chat is desirable. For example a customer service representative may be using an online chat session to assist a banking customer and may need the banking customer to enter the banking customer s personal identification number or P.I.N. to continue providing assistance. However the banking customer does not want to disclose the confidential P.I.N. to the customer service representative. Accordingly it is desirable to provide techniques that enable online chats without displaying confidential information.

In accordance with embodiments there are provided systems and methods for online chats without displaying confidential information. An information request is sent from a first online chat participant to a second online chat participant. A response based on the information request is received from the second online chat participant. The first online chat participant is notified of receiving the response from the second online chat participant without displaying confidential information of the response to the first online chat participant. For example during an online chat session a customer service representative becomes the first online chat participant described above and sends a confidential information form as the information request to a banking customer for entering the banking customer s personal identification number or P.I.N. to continue providing assistance. A back end server receives the confidential information form that includes the banking customer s P.I.N. The back end server provides the banking customer s account information based on the banking customer s P.I.N. to the customer service representative so that the customer service representative can continue providing assistance to the banking customer but without displaying the banking customer s P.I.N to the customer service representative. Accordingly systems and methods are provided which enable a database system to provide online chats without displaying confidential information.

While one or more implementations and techniques are described with reference to an embodiment in which online chats without displaying confidential information is implemented in a system having an application server providing a front end for an on demand database service capable of supporting multiple tenants the one or more implementations and techniques are not limited to multi tenant databases nor deployment on application servers. Embodiments may be practiced using other database architectures i.e. ORACLE DB2 by IBM and the like without departing from the scope of the embodiments claimed.

Any of the above embodiments may be used alone or together with one another in any combination. The one or more implementations encompassed within this specification may also include embodiments that are only partially mentioned or alluded to or are not mentioned or alluded to at all in this brief summary or in the abstract. Although various embodiments may have been motivated by various deficiencies with the prior art which may be discussed or alluded to in one or more places in the specification the embodiments do not necessarily address any of these deficiencies. In other words different embodiments may address different deficiencies that may be discussed in the specification. Some embodiments may only partially address some deficiencies or just one deficiency that may be discussed in the specification and some embodiments may not address any of these deficiencies.

Systems and methods are provided for online chats without displaying confidential information. As used herein the term multi tenant database system refers to those systems in which various elements of hardware and software of the database system may be shared by one or more customers. For example a given application server may simultaneously process requests for a great number of customers and a given database table may store rows for a potentially much greater number of customers. As used herein the term query plan refers to a set of steps used to access information in a database system. Next mechanisms and methods for online chats without displaying confidential information will be described with reference to example embodiments. The following detailed description will first describe a method for online chats without displaying confidential information. Next a block diagram of an example system that implements online chats without displaying confidential information is described.

An online chat request is optionally received block . For example and without limitation this can include the database system receiving an online chat request from a banking customer who prefers to use online chat to request assistance from customer service representatives. After receiving the online chat request an agent is optionally identified to respond to the online chat request based on logic used to identify agents to respond to voice calls block . By way of example and without limitation this can include the database system identifying a customer service representative to respond to the banking customer s online chat request based on a call center s software that identifies which of the call center s agents will answer incoming telephone calls by evaluating skill levels and other qualifications of the agents such as the agents workloads whether they are on an existing phone call etc.

Having identified an agent the online chat request is routed to the agent block . In embodiments this can include the database system routing the banking customer s online chat request to the identified agent. The database system may integrate with the voice routing logic on the customer side and or the agent side to route chat requests and to collect data on customers agents and online chats by intercepting and interacting with all chat related events. This integration enables the database system to fully utilize third party voice routing logic provided by telephony vendors including the compilation of full statistical reports. After routing the online chat request to the agent who may be referred to as the first online chat participant the agent sends an information request to a second online chat participant block . For example and without limitation during an online chat session a customer service representative selects a confidential information form from many different confidential information forms available in an inline frame in the agent chat window and sends the confidential information form to the banking customer for entering the banking customer s personal identification number or P.I.N. to enable the agent to continue providing assistance. Alternatively the customer service representative selects a link from many different available links in an inline frame in the agent chat window to send a confidential information form of many different confidential information forms available to the banking customer.

Although this example describes an agent selecting a confidential information form from many different confidential information forms available in an inline frame in the agent chat window and sending the confidential information form to a customer the agent may simply send an information request the customer via the chat window and the customer may select a confidential information form from many different confidential information forms available in an inline frame in the customer chat window and use the confidential information form to respond to the information request. Alternatively the agent and or the customer may use their own HTML form via an HTTP post call instead of using an inline frame in a chat window. Either the agent or the customer may select and use a confidential information form via the use of application programming interfaces on the agent s workstation or the customer s client device such as JavaScript API s. Even if a customer may want to disclose confidential information to a customer service representative the customer service representative may select and send a confidential information form to the customer because of regulatory requirements for processing confidential information such as the Health Insurance Portability and Accountability Act of 1996 HIPAA .

Having sent the information request to the second online chat participant a response based on the information request is received from the second online chat participant block . By way of example and without limitation this can include a back end server receiving the confidential information form that includes the banking customer s P.I.N. After receiving the response the first online chat participant is notified of receiving the response from the second online chat participant without displaying confidential information of the response to the first online chat participant block . In embodiments this can include the back end server providing the banking customer s account information based on the banking customer s P.I.N. to the customer service representative so that the customer service representative can continue providing assistance to the banking customer but without displaying the banking customer s P.I.N to the customer service representative. Accordingly systems and methods are provided which enable a database system to provide online chats without displaying confidential information.

The method may be repeated as desired. Although this disclosure describes the blocks executing in a particular order the blocks may be executed in a different order. In other implementations each of the blocks may also be executed in combination with other blocks and or some blocks may be divided into a different set of blocks.

In an embodiment the system represents a cloud computing system that includes a first client a second client a third client a call center which includes a first workstation and a second workstation and a first server and a second server that may be provided by a hosting company. Although the clients may be any type of client devices such as wearable devices the clients may be referred to as the desktop computer the laptop computer and the mobile phone while the servers may be referred to as the routing server and the confidential information server . Even though the separation of functions may be preferable from a security perspective in some embodiments the routing server and the confidential information server may be implemented in a single server. The routing server includes voice routing logic and the confidential information server includes confidential information . The clients the call center and the servers communicate via a network . Although depicts the system with three clients one call center two workstations two servers and one network the system may include any number of clients any number of call centers any number of workstations any number of servers and any number of networks . The clients and the workstations may each be substantially similar to the user systems described below in reference to .

In another example a customer visiting a store that sells luxury coats uses an in store device made available by the store for customers to visit a website that sells luxury coats and to request an online chat with a customer service representative. The routing server uses the voice routing logic to identify the agent using the workstation as the best customer service representative who is currently available for such an online chat. During the online chat the customer service representative identifies the location of the in store device at a store that sells the luxury coats and sends additional photos of the luxury coats which are unavailable in the store via the agent chat window to the customer who indicates via the online chat a desire to purchase one of the coats depicted in the photos. The customer service representative clicks on a button displayed in the agent chat window by the workstation which causes a confidential information form to pop up in the customer s chat window. The customer enters their credit card number in the confidential information form which the laptop computer sends to the confidential information server which stores the credit card number in the confidential information without displaying the credit card number on the workstation of the customer service representative. The confidential information server notifies the customer service representative that the sale has been approved based on the customer s credit card number the customer service representative informs the customer about the approval via an online chat message and the customer service representative begins processing the order.

The environment is an environment in which an on demand database service exists. A user system may be any machine or system that is used by a user to access a database user system. For example any of the user systems can be a handheld computing device a mobile phone a laptop computer a work station and or a network of computing devices. As illustrated in and in more detail in the user systems might interact via the network with an on demand database service which is the system .

An on demand database service such as the system is a database system that is made available to outside users that do not need to necessarily be concerned with building and or maintaining the database system but instead may be available for their use when the users need the database system e.g. on the demand of the users . Some on demand database services may store information from one or more tenants stored into tables of a common database image to form a multi tenant database system MTS . Accordingly the on demand database service and the system will be used interchangeably herein. A database image may include one or more database objects. A relational database management system RDMS or the equivalent may execute storage and retrieval of information against the database object s . The application platform may be a framework that allows the applications of the system to run such as the hardware and or software e.g. the operating system. In an embodiment the on demand database service may include the application platform which enables creation managing and executing one or more applications developed by the provider of the on demand database service users accessing the on demand database service via user systems or third party application developers accessing the on demand database service via the user systems .

The users of the user systems may differ in their respective capacities and the capacity of a particular user system might be entirely determined by permissions permission levels for the current user. For example where a salesperson is using a particular user system to interact with the system that user system has the capacities allotted to that salesperson. However while an administrator is using that user system to interact with the system that user system has the capacities allotted to that administrator. In systems with a hierarchical role model users at one permission level may have access to applications data and database information accessible by a lower permission level user but may not have access to certain applications database information and data accessible by a user at a higher permission level. Thus different users will have different capabilities with regard to accessing and modifying application and database information depending on a user s security or permission level.

The network is any network or combination of networks of devices that communicate with one another. For example the network can be any one or any combination of a LAN local area network WAN wide area network telephone network wireless network point to point network star network token ring network hub network or other appropriate configuration. As the most common type of computer network in current use is a TCP IP Transfer Control Protocol and Internet Protocol network such as the global internetwork of networks often referred to as the Internet with a capital I that network will be used in many of the examples herein. However it should be understood that the networks that the one or more implementations might use are not so limited although TCP IP is a frequently implemented protocol.

The user systems might communicate with the system using TCP IP and at a higher network level use other common Internet protocols to communicate such as HTTP FTP AFS WAP etc. In an example where HTTP is used the user systems might include an HTTP client commonly referred to as a browser for sending and receiving HTTP messages to and from an HTTP server at the system . Such an HTTP server might be implemented as the sole network interface between the system and the network but other techniques might be used as well or instead. In some implementations the interface between the system and the network includes load sharing functionality such as round robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a plurality of servers. At least as for the users that are accessing that server each of the plurality of servers has access to the MTS data however other alternative configurations may be used instead.

In one embodiment the system shown in implements a web based customer relationship management CRM system. For example in one embodiment the system includes application servers configured to implement and execute CRM software applications as well as provide related data code forms webpages and other information to and from the user systems and to store to and retrieve from a database system related data objects and Webpage content. With a multi tenant system data for multiple tenants may be stored in the same physical database object however tenant data typically is arranged so that data of one tenant is kept logically separate from that of other tenants so that one tenant does not have access to another tenant s data unless such data is expressly shared. In certain embodiments the system implements applications other than or in addition to a CRM application. For example the system may provide tenant access to multiple hosted standard and custom applications including a CRM application. User or third party developer applications which may or may not include CRM may be supported by the application platform which manages creation storage of the applications into one or more database objects and executing of the applications in a virtual machine in the process space of the system .

One arrangement for elements of the system is shown in including the network interface the application platform the tenant data storage for tenant data the system data storage for system data accessible to the system and possibly multiple tenants the program code for implementing various functions of the system and the process space for executing MTS system processes and tenant specific processes such as running applications as part of an application hosting service. Additional processes that may execute on the system include database indexing processes.

Several elements in the system shown in include conventional well known elements that are explained only briefly here. For example each of the user systems could include a desktop personal computer workstation laptop PDA cell phone or any wireless access protocol WAP enabled device or any other computing device capable of interfacing directly or indirectly to the Internet or other network connection. Each of the user systems typically runs an HTTP client e.g. a browsing program such as Microsoft s Internet Explorer browser Netscape s Navigator browser Opera s browser or a WAP enabled browser in the case of a cell phone PDA or other wireless device or the like allowing a user e.g. subscriber of the multi tenant database system of the user systems to access process and view information pages and applications available to it from the system over the network . Each of the user systems also typically includes one or more user interface devices such as a keyboard a mouse trackball touch pad touch screen pen or the like for interacting with a graphical user interface GUI provided by the browser on a display e.g. a monitor screen LCD display etc. in conjunction with pages forms applications and other information provided by the system or other systems or servers. For example the user interface device can be used to access data and applications hosted by the system and to perform searches on stored data and otherwise allow a user to interact with various GUI pages that may be presented to a user. As discussed above embodiments are suitable for use with the Internet which refers to a specific global internetwork of networks. However it should be understood that other networks can be used instead of the Internet such as an intranet an extranet a virtual private network VPN a non TCP IP based network any LAN or WAN or the like.

According to one embodiment each of the user systems and all of its components are operator configurable using applications such as a browser including computer code run using a central processing unit such as an Intel Pentium processor or the like. Similarly the system and additional instances of an MTS where more than one is present and all of their components might be operator configurable using application s including computer code to run using a central processing unit such as the processor system which may include an Intel Pentium processor or the like and or multiple processor units. A computer program product embodiment includes a machine readable storage medium media having instructions stored thereon in which can be used to program a computer to perform any of the processes of the embodiments described herein. Computer code for operating and configuring the system to intercommunicate and to process webpages applications and other data and media content as described herein are preferably downloaded and stored on a hard disk but the entire program code or portions thereof may also be stored in any other volatile or non volatile memory medium or device as is well known such as a ROM or RAM or provided on any media capable of storing program code such as any type of rotating media including floppy disks optical discs digital versatile disk DVD compact disk CD microdrive and magneto optical disks and magnetic or optical cards nanosystems including molecular memory ICs or any type of media or device suitable for storing instructions and or data. Additionally the entire program code or portions thereof may be transmitted and downloaded from a software source over a transmission medium e.g. over the Internet or from another server as is well known or transmitted over any other conventional network connection as is well known e.g. extranet VPN LAN etc. using any communication medium and protocols e.g. TCP IP HTTP HTTPS Ethernet etc. as are well known. It will also be appreciated that computer code for implementing embodiments can be implemented in any programming language that can be executed on a client system and or server or server system such as for example C C HTML any other markup language Java JavaScript ActiveX any other scripting language such as VBScript and many other programming languages as are well known may be used. Java is a trademark of Sun Microsystems Inc. .

According to one embodiment the system is configured to provide webpages forms applications data and media content to the user client systems to support the access by the user systems as tenants of the system . As such the system provides security mechanisms to keep each tenant s data separate unless the data is shared. If more than one MTS is used they may be located in close proximity to one another e.g. in a server farm located in a single building or campus or they may be distributed at locations remote from one another e.g. one or more servers located in city A and one or more servers located in city B . As used herein each MTS could include one or more logically and or physically connected servers distributed locally or across one or more geographic locations. Additionally the term server is meant to include a computer system including processing hardware and process space s and an associated storage system and database application e.g. OODBMS or RDBMS as is well known in the art. It should also be understood that server system and server are often used interchangeably herein. Similarly the database object described herein can be implemented as single databases a distributed database a collection of distributed databases a database with redundant online or offline backups or other redundancies etc. and might include a distributed database or storage network and associated processing intelligence.

The user systems the network the system the tenant data storage and the system data storage were discussed above in . Regarding the user systems the processor system A may be any combination of one or more processors. The memory system B may be any combination of one or more memory devices short term and or long term memory. The input system C may be any combination of input devices such as one or more keyboards mice trackballs scanners cameras and or interfaces to networks. The output system D may be any combination of output devices such as one or more monitors printers and or interfaces to networks. As shown by the system may include the network interface of implemented as a set of HTTP application servers the application platform the tenant data storage and the system data storage . Also shown is the system process space including individual tenant process spaces and the tenant management process space . Each application server may be configured to access tenant data storage and the tenant data therein and the system data storage and the system data therein to serve requests of the user systems . The tenant data might be divided into individual tenant storage areas which can be either a physical arrangement and or a logical arrangement of data. Within each tenant storage area the user storage and the application metadata might be similarly allocated for each user. For example a copy of a user s most recently used MRU items might be stored to the user storage . Similarly a copy of MRU items for an entire organization that is a tenant might be stored to the tenant storage area . The UI provides a user interface and the API provides an application programmer interface to the system resident processes to users and or developers at the user systems . The tenant data and the system data may be stored in various databases such as one or more Oracle databases.

The application platform includes the application setup mechanism that supports application developers creation and management of applications which may be saved as metadata into the tenant data storage by the save routines for execution by subscribers as one or more tenant process spaces managed by the tenant management process for example. Invocations to such applications may be coded using the PL SOQL that provides a programming language style interface extension to the API . A detailed description of some PL SOQL language embodiments is discussed in commonly owned U.S. Pat. No. 7 730 478 entitled METHOD AND SYSTEM FOR ALLOWING ACCESS TO DEVELOPED APPLICATIONS VIA A MULTI TENANT ON DEMAND DATABASE SERVICE by Craig Weissman filed Sep. 21 2007 which is incorporated in its entirety herein for all purposes. Invocations to applications may be detected by one or more system processes which manages retrieving the application metadata for the subscriber making the invocation and executing the metadata as an application in a virtual machine.

Each application server may be communicably coupled to database systems e.g. having access to the system data and the tenant data via a different network connection. For example one application server might be coupled via the network e.g. the Internet another application server might be coupled via a direct network link and another application server might be coupled by yet a different network connection. Transfer Control Protocol and Internet Protocol TCP IP are typical protocols for communicating between application servers and the database system. However it will be apparent to one skilled in the art that other transport protocols may be used to optimize the system depending on the network interconnect used.

In certain embodiments each application server is configured to handle requests for any user associated with any organization that is a tenant. Because it is desirable to be able to add and remove application servers from the server pool at any time for any reason there is preferably no server affinity for a user and or organization to a specific application server . In one embodiment therefore an interface system implementing a load balancing function e.g. an F5 Big IP load balancer is communicably coupled between the application servers and the user systems to distribute requests to the application servers . In one embodiment the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms such as round robin and observed response time also can be used. For example in certain embodiments three consecutive requests from the same user could hit three different application servers and three requests from different users could hit the same application server . In this manner the system is multi tenant wherein the system handles storage of and access to different objects data and applications across disparate users and organizations.

As an example of storage one tenant might be a company that employs a sales force where each salesperson uses the system to manage their sales process. Thus a user might maintain contact data leads data customer follow up data performance data goals and progress data etc. all applicable to that user s personal sales process e.g. in the tenant data storage . In an example of a MTS arrangement since all of the data and the applications to access view modify report transmit calculate etc. can be maintained and accessed by a user system having nothing more than network access the user can manage his or her sales efforts and cycles from any of many different user systems. For example if a salesperson is visiting a customer and the customer has Internet access in their lobby the salesperson can obtain critical updates as to that customer while waiting for the customer to arrive in the lobby.

While each user s data might be separate from other users data regardless of the employers of each user some data might be organization wide data shared or accessible by a plurality of users or all of the users for a given organization that is a tenant. Thus there might be some data structures managed by the system that are allocated at the tenant level while other data structures might be managed at the user level. Because an MTS might support multiple tenants including possible competitors the MTS should have security protocols that keep data applications and application use separate. Also because many tenants may opt for access to an MTS rather than maintain their own system redundancy up time and backup are additional functions that may be implemented in the MTS. In addition to user specific data and tenant specific data the system might also maintain system level data usable by multiple tenants or other data. Such system level data might include industry reports news postings and the like that are sharable among tenants.

In certain embodiments the user systems which may be client systems communicate with the application servers to request and update system level and tenant level data from the system that may require sending one or more queries to the tenant data storage and or the system data storage . The system e.g. an application server in the system automatically generates one or more SQL statements e.g. one or more SQL queries that are designed to access the desired information. The system data storage may generate query plans to access the requested data from the database.

Each database can generally be viewed as a collection of objects such as a set of logical tables containing data fitted into predefined categories. A table is one representation of a data object and may be used herein to simplify the conceptual description of objects and custom objects. It should be understood that table and object may be used interchangeably herein. Each table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields. For example a CRM database may include a table that describes a customer with fields for basic contact information such as name address phone number fax number etc. Another table might describe a purchase order including fields for information such as customer product sale price date etc. In some multi tenant database systems standard entity tables might be provided for use by all tenants. For CRM database applications such standard entities might include tables for Account Contact Lead and Opportunity data each containing pre defined fields. It should be understood that the word entity may also be used interchangeably herein with object and table .

In some multi tenant database systems tenants may be allowed to create and store custom objects or they may be allowed to customize standard entities or objects for example by creating custom fields for standard objects including custom index fields. U.S. Pat. No. 7 779 039 filed Apr. 2 2004 entitled Custom Entities and Fields in a Multi Tenant Database System which is hereby incorporated herein by reference teaches systems and methods for creating custom objects as well as customizing standard objects in a multi tenant database system. In certain embodiments for example all custom entity data rows are stored in a single multi tenant physical table which may contain multiple logical tables per organization. It is transparent to customers that their multiple tables are in fact stored in one large table or that their data may be stored in the same table as the data of other customers.

While one or more implementations have been described by way of example and in terms of the specific embodiments it is to be understood that one or more implementations are not limited to the disclosed embodiments. To the contrary it is intended to cover various modifications and similar arrangements as would be apparent to those skilled in the art. Therefore the scope of the appended claims should be accorded the broadest interpretation so as to encompass all such modifications and similar arrangements.

