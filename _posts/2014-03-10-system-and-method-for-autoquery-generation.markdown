---

title: System and method for auto-query generation
abstract: Various systems and methods provide an intuitive user interface that enables automatic specification of queries and constraints for analysis by ML component. Various implementations provide methodologies for automatically formulating machine learning (“ML”) and optimization queries. The automatic generation of ML and/or optimization queries can be configured to use examples to facilitate formulation of ML and optimization queries. One example method includes accepting input data specifying variables and data values associated with the variables. Within the input data any unspecified data records are identified, and a relationship between the variables specified in the input data and a variable associated with the at least one unspecified data record is automatically determined. The relationship can be automatically determined based on training data contained within the input data. Once a relationship is established a ML problem can be automatically generated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524473&OS=09524473&RS=09524473
owner: Nutonian, Inc.
number: 09524473
owner_city: Boston
owner_country: US
publication_date: 20140310
---
This application is a continuation in part and claims priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 14 016 287 entitled SYSTEMS AND METHODS FOR DATA SET SUBMISSION SEARCHING AND RETRIEVAL filed on Sep. 3 2013 which claims priority to U.S. Provisional Patent Application 61 695 660 entitled SYSTEMS AND METHODS FOR SYMBOLIC ANALYSIS BETWEEN DATA SETS filed Aug. 31 2012 and U.S. Provisional Patent Application 61 695 637 entitled SYSTEMS AND METHODS FOR DATA SET SUBMISSION SEARCHING AND RETRIEVAL filed Aug. 31 2012 and is a continuation in part and claims priority under 35 U.S.C. to U.S. patent application Ser. No. 14 016 300 entitled SYSTEMS AND METHODS FOR SYMBOLIC ANALYSIS filed Sep. 3 2013 which claims priority to U.S. Provisional Patent Application 61 695 660 SYSTEMS AND METHODS FOR SYMBOLIC ANALYSIS BETWEEN DATA SETS filed on Aug. 31 2012 and U.S. Provisional Application Ser. No. 61 695 637 entitled SYSTEMS AND METHODS FOR DATA SET SUBMISSION SEARCHING AND RETRIEVAL filed on Aug. 31 2012 and this application claims priority under 35 U.S.C. 119 to U.S. Provisional Patent Application 61 779 451 entitled SYSTEM AND METHOD FOR AUTO QUERY GENERATION filed on Mar. 13 2013 each of which applications are incorporated herein by reference in their entirety.

A major bottleneck in the use of advanced machine learning ML techniques and tools today is that they require a substantial technical skill level to operate. While data is becoming increasingly easy to collect store and manipulate for lay persons analysis tools are not keeping pace.

Many machine learning ML algorithms exist today that can allow their users to automatically generate computational models for prediction and optimization. For example Neural networks Support vector machines decision trees symbolic regression and other techniques create a mathematical model that can be applied to predict dependent values from new independent variables based on examples training data . These models can be used to predict values in static tables as well as in dynamic time series. Vector equations that predict multiple values simultaneously e.g. x y coordinates are also available. Conventionally users specify a query that the ML system solves delivering a model that can be used for the predictions regression or classification of values.

In addition to predicting unknown dependent values ML models can also be used for optimization. Search algorithms such as gradient ascent or global search algorithms such as Genetic Algorithms can be used to search for an optimal set of independent variables such that the dependent variable is maximized or minimized or becomes as close as possible to a desired value. Again in order to interact with the system the user specifies the boundaries of the optimization problem and any constraints that apply.

According to one aspect it is realized that ML techniques and approaches are not meeting their potential. In particular common users find the generation and development of a query for an ML system too challenging. Lay persons and more novice users find the task of query definition overwhelming. Frustration can results from imprecise query generation where bad answers are delivered in response to improperly formatted queries or models are generated that are incapable of being used.

Accordingly various aspects provide systems and methods to alleviate the difficulty of query generation. According to one embodiment the systems and methods provide an intuitive user interface that enables automatic specification of queries and constraints. Various implementations provide novel methodologies for automatically formulating machine learning and optimization queries. The automatic generation of ML and or optimization queries can be configured to use examples to facilitate formulation of ML and optimization queries.

According to one aspect a computer implemented method for automatically generating machine learning problems is provided. The method comprises accepting by a computer system input data specifying variables and data values associated with the variables identifying by the computer system at least one unspecified data record within the input data determining automatically by the computer system a relationship between the variables specified in the input data and a variable associated with the at least one unspecified data record based on training data contained within the input data and generating automatically by the computer system a machine learning problem including the relationship between the variables and the training data.

According to one embodiment the method further comprises solving automatically by the computer system the machine learning problem to provide a result value for the at least one unspecified data record within the input data. According to one embodiment the method further comprises assigning a function for calculating the result value to the at least one unspecified data record. According to one embodiment the method further comprises displaying by the computer system the machine learning problem. According to one embodiment accepting the input data includes accepting within a spreadsheet display of variables and data values selection of a group of the variables the data values and the at least one unspecified data record.

According to one embodiment identifying determining and generating occur in response to selection of the group. According to one embodiment the method further comprises determining a confidence value associated with the result value. According to one embodiment the method further comprises encoding visually the confidence level associated with the result value. According to one embodiment encoding visually the confidence level associated with the result value includes displaying a value having a high relative confidence value bolder than a value having a lower relative confidence value. According to one embodiment the method further comprises converting categorical values from the input data into set membership binary values.

According to one embodiment generating automatically by the computer system the machine learning problem including the relationship between the variables and the training data includes generating the machine learning problem based on symbolic regression. According to one embodiment generating automatically by the computer system the machine learning problem includes generating one or more possible query patterns that relate a blank or otherwise identified cell in a spreadsheet to its surrounding non blank cells collecting data from the spreadsheet that matches that pattern running a ML algorithm to find a model and determine its confidence level and selecting the model having the highest confidence level.

According to one embodiment the method further comprises filling in values in all blank cells that fit the query pattern using the selected model with the highest confidence level. According to one embodiment generating one or more possible query patterns includes generating possible patterns including both absolute cell positions and cell positions that are relative to the at least one unspecified data record in a spreadsheet. According to one embodiment the method further comprises accepting at least one new unspecified data record and calculating a result value for the at least one new unspecified data record according to the input data and the result value for the at least one unspecified data record.

According to one embodiment generating automatically by the computer system the machine learning problem including the relationship between the variables and the training data includes automatically formulating prediction queries to fill in the at least one unspecified data record. According to one embodiment the at least one unspecified data record is at least one blank cell in a spreadsheet and wherein the prediction query is generated based on the relationship between the at least one blank cell and cells having data values. According to one embodiment generating automatically by the computer system the machine learning problem including the relationship between the variables and the training data includes automatically formulating at least one optimization query to fill in the at least one unspecified data record. According to one embodiment the at least one unspecified data record is at least one blank cell in a spreadsheet and wherein the optimization query is generated based on the relationship between the at least one blank cell and cells having data values.

According to one embodiment generating automatically by the computer system a machine learning problem including the relationship between the variables and the training data includes generating a model that relates a target value to the blank value and performing a search to identify the optimal value of the blank cells that minimize the difference between the target value and the value predicted by the model. According to one embodiment the method further comprises holding constant at least some of the non blank cells corresponding to independent variables as search constraints. According to one embodiment multiple target values are optimized simultaneously using a multi objective optimization technique. According to one embodiment the method further comprises accepting constraints defined against the at least one unspecified data record.

According to one aspect a system for automatically generating machine learning problems is provided. The system comprises at least one processor operatively connect to a memory the at least one processor when executing is configured to accept input data specifying variables and data values associated with the variables identify at least one unspecified data record within the input data determine automatically a relationship between the variables specified in the input data and a variable associated with the at least one unspecified data record based on training data contained within the input data and generate automatically a machine learning problem including the relationship between the variables and the training data.

According to one embodiment the at least one processor is configured to solve automatically the machine learning problem to provide a result value for the at least one unspecified data record within the input data. According to one embodiment the at least one processor is configured to assign a function for calculating the result value to the at least one unspecified data record. According to one embodiment the at least one processor is configured to display the machine learning problem. According to one embodiment accepting the input data includes accepting within a spreadsheet display of variables and data values a selection of a group of the variables the data values and the at least one unspecified data record.

According to one embodiment identifying determining and generating occur in response to selection of the group. According to one embodiment the at least one processor is configured to determine a confidence value associated with the result value. According to one embodiment the at least one processor is configured to encode visually the confidence level associated with the result value. According to one embodiment encoding visually the confidence level associated with the result value includes displaying a value having a high relative confidence value bolder than a value having a lower relative confidence value.

According to one embodiment the at least one processor is configured to convert categorical values from the input data into set membership binary values. According to one embodiment the at least one processor is configured to generate the machine learning problem based on symbolic regression. According to one embodiment the at least one processor is configured to generate one or more possible query patterns that relate a blank cell in a spreadsheet to its surrounding non blank cells collect data from the spreadsheet that matches that pattern execute a ML algorithm to find a model and determine its confidence level and select the model having the highest confidence level.

According to one embodiment wherein the at least one processor is configured to fill in values in all blank cells that fit the query pattern using the selected model with the highest confidence level. According to one embodiment the at least one processor is configured to generate possible patterns including both absolute cell positions and cell positions that are relative to the at least one unspecified data record in a spreadsheet. According to one embodiment the at least one processor is configured to accept at least one new unspecified data record and calculating a result value for the at least one new unspecified data record according to the input data and the result value for the at least one unspecified data record.

According to one embodiment the at least one processor is configured to automatically formulate prediction queries to fill in the at least one unspecified data record. According to one embodiment the at least one unspecified data record is at least one blank cell in a spreadsheet and wherein the prediction query is generated based on the relationship between the at least one blank cell and cells having data values. According to one embodiment the at least one processor is configured to automatically formulate at least one optimization query to fill in the at least one unspecified data record.

According to one embodiment the at least one unspecified data record is at least one blank cell in a spreadsheet and wherein the optimization query is generated based on the relationship between the at least one blank cell and cells having data values. According to one embodiment the at least one processor is configured to generate a model that relates a target value to the blank value and perform a search to identify the optimal value of the blank cells that minimize the difference between the target value and the value predicted by the model.

According to one embodiment the at least one processor is configured to hold constant at least some of the non blank cells corresponding to independent variables as search constraints for optimization. According to one embodiment the at least one processor is configured to optimize multiple target values simultaneously using a multi objective optimization technique. According to one embodiment the at least one processor is configured to accept constraints defined against the at least one unspecified data record.

Still other aspects embodiments and advantages of these exemplary aspects and embodiments are discussed in detail below. Any embodiment disclosed herein may be combined with any other embodiment in any manner consistent with at least one of the objects aims and needs disclosed herein and references to an embodiment some embodiments an alternate embodiment various embodiments one embodiment or the like are not necessarily mutually exclusive and are intended to indicate that a particular feature structure or characteristic described in connection with the embodiment may be included in at least one embodiment. The appearances of such terms herein are not necessarily all referring to the same embodiment. The accompanying drawings are included to provide illustration and a further understanding of the various aspects and embodiments and are incorporated in and constitute a part of this specification. The drawings together with the remainder of the specification serve to explain principles and operations of the described and claimed aspects and embodiments.

As described above systems and methods are provided that implement an auto query process for implementing ML discovery. Various embodiments of the auto query systems and methods enable users to describe a query for ML discovery indirectly. For example the system can provide user interface displays that enable selection of data on which to model and specification of values to solve without requiring specification of the query directly. In one example the system provides user interfaces for interacting with data displayed as a spreadsheet. The user is able to specify values on which they want solutions by providing blank cells where information needs to be predicted or optimized or combinations of both.

According to one embodiment an auto query engine is configured to formulate the ML modeling query or optimization search automatically based on the data selected in the display and for example the blank cells within that data. The auto query engine can be configured to generate the ML modeling query or optimization search automatically to best fill in blank data records. According to some embodiments the engine can analyze data provided by a user to determine the nature of the solution being requested. Depending on the arrangements of data cells and blank cells the auto query system is then configured to automatically formulate prediction queries or optimization queries and generate results accordingly. The automatically generated results can be placed into the formerly blank cells. In some examples the user interface displays are configured to highlight the generated results and their respective displays to bring to the user s attention the results of the system s operations.

Showing in is a block diagram of an example auto query system . System can include an auto query engine for generating ML problems including ML queries and or optimization searches automatically. According to some embodiments the auto query engine accepts a data input analyzes the data input to determine a query and or optimization search that best fits the input data . In one example the auto query engine executes a generated query on the input data to automatically provide predictions of results . In another example the auto query engine executes a generated optimization search against the input data to automatically provide results for unknown data records. In further examples multiple data models may be required to provide solutions for a data set thus requiring formulation of multiple queries to generate results.

According to another embodiment the engine can also be configured to test for specific data relationships as part of query and or optimization search building. For example time series prediction problems and or other sequence solving problems can be automatically detected where dependencies exits in the data e.g. not just across absolute position but also relative relationships e.g. between each column of data and preceding data for variables in other columns . The engine can be configured to derive relative models for an input data e.g. and if determined with confidence can be used to make prediction for results e.g. . In one example the engine can generate time series predictions e.g. shows a times series data set and prediction values discussed in greater detail below .

According to one embodiment system and or its elements e.g. auto query engine can be provided using a computing system such as the computer system and or described with reference to . According to one aspect the system and or the auto query engine can be configured to generate automatically ML based queries and or optimization searches execute the query and or optimization and return results for unknowns within the provided data. In some embodiments the system and or auto query engine is configured to accept selection of data records in a table e.g. highlighting of cells in an excel sheet to specify a data input from which the system and or engine provides ML solutions for any non specified data cells.

In further embodiments the system and or auto query engine is configured to accept definition of values in conjunction with the input data to constrain the results returned. In one embodiment the system and or engine optimizes the results returned according to any defined constraints.

According to another aspect even the most novice of computer users are easily capable of selection of data records in a table thus even the most novice of computer users are enabled to execute sophisticated machine learning techniques and tools to derive powerful predictions and optimization solutions. According to further aspects returned results are visually encoded in a user interface display to the end user. The visual encoding can be configured to convey intuitively information on the results generated through machine learning based solutions. For example prediction and or optimization solutions can be associated with a confidence level. The confidence level provides information on the degree to which a model represents the data and or the degree of error associated with the results e.g. . Each result can be displayed according to an associated level of confidence. In one example low confidence results are displayed grayed out to demonstrate the low level of certainty with respect to the value. The system and or engine can be configured to provide varying degrees of highlighting to reflect higher levels of confidence. For example the more pronounced the highlighting the greater the level of confidence in a particular result.

According to one embodiment the auto query engine can include various system components that perform specific ones or combinations of the functions described. For example the auto query engine can include an analysis component . According to one embodiment the analysis component is configured to analyze data communicated to system and or engine . The analysis component can analyze the data e.g. to determine properties of the input information. For example the analysis component can be configured to identify headings for data determine variables based on data positioning identify unspecified records for result generation determine any constraints specified e.g. by a user among other options. In some embodiments the analysis component can be configured to identify multiple model problems e.g. nested prediction problems where multiple models need to be generated to specify multiple queries times series prediction problems optimization searches and for example apply any defined constraints to optimization searching.

According to another embodiment the analysis component can be configured to generate query patterns for data provided e.g. . The analysis component is configured to identify training data from the data provided that matches the query pattern and use that training data to determine one or more data models for solving the query. Shown in is an example user interface display including a data set supplied as an excel table e.g. having variable names at row data records to solve at cells . The analysis component identifies the training data at for the data set.

The analysis component is configured to generate a model of the input data. In the example shown the analysis component determines a relationship between the variables of the data set for the model. Based on the determined relationship s the analysis component generates a query containing the training data and an ML problem e.g. unspecific data a function of specified data . The analysis component can be configured to execute a variety of approaches for determining a query for the data set provided. In one embodiment the analysis component is configured to execute symbolic regression techniques to determine models and or relationships for data. The regression approaches executed can include co evolutionary symbolic regression. Co pending U.S. patent application Ser. No. 14 016 287 entitled SYSTEMS AND METHODS FOR DATA SET SUBMISSION SEARCHING AND RETRIEVAL and Ser. No. 14 016 300 entitled SYSTEMS AND METHODS FOR SYMBOLIC ANALYSIS describe some approaches for data modeling that can be used in conjunction with embodiments of the present disclosure which are incorporate by reference herein in their entirety. Additional modeling approaches can be executed by the analysis component including for example neural networks support vector machines decision trees symbolic regression and other techniques. The analysis component can be configured to execute one or more of these techniques to create a mathematical model that can be applied for example to predict dependent values from new independent variables based on examples training data e.g. .

According to one embodiment the auto query engine can also include a user interface component UI component that is configured to generate and or modify displays shown to an end user responsive to operations of other components including e.g. analysis component . According to one embodiment the UI component can be configured to generate displays to an end user that enable the user for example to cut and paste data e.g. into spreadsheet displays. The UI component can pass the data input to the analysis component for processing. In some embodiments the UI component can provide functions for uploading data e.g. in spreadsheet format csv format tabular format etc. . In some embodiments the UI component can be configured to require users to enter data according to specific formats and provide details to an inputting user on the formats in respective user interface displays e.g. variable name headers with data for the variable in a respective column or row . In another example the user interface can accept data without variable definitions. The user interface can be configured to indicate in response to data without any variable designation that the data set will be evaluated as unordered data.

According to one embodiment once the data is accepted the UI component can provide the data to the analysis component . The analysis component can be configured to deliver the results of its operations to the UI component for display. For example in the analysis component provides information on the problem being solved to the UI component which is displayed at Estimate reflecting a prediction of a dependent variable from the data in independent variables . Shown in is an example user interface display . Display shows a generated query at . The generated query includes for example training data at and the relationship between the variables to be solved using the training data.

In some embodiments the UI component can be configured to accept specification operations to define the problem to be solved. In one example the UI component can accept specification of maximize minimize limit etc. with respect to data cells and or values. The identification of maximize minimize limit etc. indicates a problem to optimize solutions around the specified constraint. In another example the UI component can also be configured to accept a target value in a data set without any further specification. The analysis component can also be configured to identify such target values e.g. at and determine an optimization search to meet the target.

According to another embodiment the auto query engine can also include a result component configured to execute any query and or optimization search generated by the analysis component e.g. of . In some implementations the operations described with respect to the result component can be executed by the analysis component and the auto query engine can execute with the analysis and UI components alone. In other implementations the result component can also be a sub component of the analysis component .

The result component can be configured to execute a variety of approaches for determining results from the query and or optimization search generated for a data set. In one embodiment the result component is configured to execute symbolic regression techniques to determine results for a query. The regression approaches executed can include co evolutionary symbolic regression. Additional approaches for determining results include neural networks support vector machines decision trees and other techniques. The result component can be configured to execute one or more of these techniques to create a result for each unspecified data record in a data set.

As is known ML solutions are associated with confidence levels reflecting how well an ML approach was able to model and or fit a set of data. Each result can be associated with a different confidence level determined for example by the result component . The confidence level can be determined as the results are being generated or post generation using for example a portion of the training data held separately for validation. As discussed above the results of operations from respective components can be provided to the UI component to enhance displays to an end user. According to one embodiment each result determined for a data set can be visually encoded with its respective confidence level. In one example a display of the data is bolded and or grayed out to reflect varying degrees of confidence. A value having a high confidence level can be displayed in bold while a value having low confidence level can be displayed grayed out. In one example intensity of the display of a value corresponds to a confidence level. Shown in is an example user interface display . Display shows a set of results at where each result has an associated visual encoding reflective of a respective confidence level.

According to various embodiments system engine and or respective components can execute a variety of process to define ML problems automatically from data sets and return results to the automatically defined problems. Shown in is an example process for automatically defining an ML problem. The process begins at with analysis of a data set. In one example the data set can be supplied by an end user through a user interface. The user interface can be a local display from a locally executed program. In some examples the program can be locally resident on the computer machine executed from a browser and or downloaded for execution. In one example the interface can be generated from a website or portal provided over a communication network e.g. the Internet .

Analysis of the data set at can include determining the type of problem being requested e.g. prediction of values optimization search nested prediction time series prediction or combinations thereof . According to one embodiment the data set is analyzed at to identify data on which to model i.e. training data values to solve etc. At relationships within the data are determined using ML techniques e.g. symbolic regression etc. . The determined relationships are used at to generate automatically an ML problem to be solved. The ML problem to be solved can include a query specifying training data to employ and a relationship between the variables within the training data e.g. shown at of . Once the ML problem to be solved is generated the specification of the ML problem can be displayed for example to an end user.

According to some embodiments process can optionally include steps for solving the generated ML problem for example at . Once results are generated the results can also be displayed to an end user.

In some embodiments a user may interact with user interface displays to define the data to be analyzed and provide any constraints the user may wish to specify for generating solutions. Shown in is an example process for generating ML queries and or optimization searches in response to user input. Process begins at within generation of a data entry display. The data entry display can accept user input to define data fields including for example definition of variable names and values for each variable. Further the data entry display enables specification of data values to be solved. In one example providing blank records within a spreadsheet display in association with some defined values causes calculation of results for the blank records.

According to one embodiment process continues with selection of data records within spreadsheet display at . Selection can include a drag operation with a mouse to highlight data within a user interface. In some other examples depressing a control key plus clicking with a mouse on data records enables data selection at . In other examples shift select and other known operations can also be used to highlight data records on which to operate.

Once the data is defined a query and or optimization search is generated based on evaluation of the selection data at . In one example generation of a query takes place at based on a determination that the data includes independent variables and unspecified values for dependent variables. A query is generated automatically specifying a relationship between the variables and training data on which to solve at . In another example values for independent variables can also be solved by first generating a model to predict dependent values and then using the model to search for values for the independent variables. The search can be constrained for example to maximize minimize or approach a target value thus optimizing a particular result according to any constraints. Once the ML problem is specified including e.g. query prediction or optimization various known ML approaches are executed at to solve the problem specified at . At the results of the solution are displayed to the user in the user interface. In some embodiments the set of results can be displayed with an associated confidence level. For example each result can be highlighted or de emphasized according to respective confidence levels associated with the determined result.

Various user interface displays can be generated during execution of process for example by a UI component . Shown below are various user interface displays for interacting with data sets automatically generating ML problems and generating solutions to the problems for display to users. According to some embodiments process and or can be executed to generate the displays shown. Additionally other processes can be executed e.g. by an auto query system and or engine to generate the user interface displays described. In further embodiments the operations discussed with respect to process and or can be executed in different order can be combined into fewer steps among other options for example to provide displays of automatically generated queries optimization searches time series predictions among other options.

According to one embodiment the top eight rows represent data collected from eight experiments. The bottom six rows represent potential situations for which the user wants to know an expected value. The auto query system is configured to automatically formulate the query shown in the inset box of . The query contains both a training dataset comprising the first eight rows and an ML query in the form y f x at e.g. Strength f Pressure Temp Flow . The system executes the ML query and the resulting model is used to fill in the blank cells e.g. at of .

Shown in the leftmost query is generated defining a training data set and a relationship between the variables on which to solve . The rightmost query is likewise generated having its own training data and relationship for solving. Based on the dynamic programming evaluation of confidence the left side query is issued before the right side query . As shown the results from the left queries are then used as inputs to define solutions according to the right side model. In some embodiments the system e.g. and or engine e.g. is configured to execute the well known dynamic programming approach to preparing and ordering execution of queries to generate solutions for a data set. The dynamic programming approach employs a divide and conquer approach where sub problems are solved first and the larger problems make use of solutions to sub problems.

Shown in is another example display . Display illustrate an example nested solution and associated results where the results for the left side query are shown at and the results for the right side query at . As discussed respective confidence levels can be illustrated at and respectively. In one example the more grayed out a solution appears in the display the lower the confidence level associated with the respective solution. In addition to confidence level displays the system can be configured to provide contextual information for a given solution. At and the system can provide displays e.g. through a UI component configured to describe the model used to generate the results and any reasoning from the model analysis. In this setting provided are the functions derived for the left side query and an indicator regarding the confidence levels of the results which can be displayed upon selection of Why at . According to one example the Why display at is configured to facilitate understanding of the confidence levels and model associated with the generated results.

According to other embodiments the system and or engine e.g. and or can also be configured to identify dependencies within data sets not just across absolution position e.g. rows of but also relative relationships e.g. between each column . In this example the system detects the relative relationship between a column and its two preceding columns to the left by generating data models on the input data. According to one embodiment the system is configured to identify and automatically attempt modeling result generation on the basis of relative relationships within the data. If appropriate models and or results can be found with confidence the resulting predictions are provided by the system for example as time series predictions at and in display .

According to some embodiments similar displays can provide for specification of optimization solutions. Shown in is an example display . Display is configured to accept specification of a target value for optimizing solutions. In an optimization situation the independent variables are left blank and the target value is provided e.g. at . In some embodiments the optimization request can come as part of an interaction session between the system and a user. For example the user can have requested prediction scenarios to generate results at . Additionally nested prediction scenarios can have been executed on the system to derive results at . In one alternative the user may also provide training data and input an optimization value e.g. at to cause the system to generate optimization solutions without other preceding solutions being required.

According to one embodiment the system e.g. and or engine e.g. formulates a model to predict the dependent values from the independent values according to training data identified e.g. at and in another example using other predictions at . The system and or engine uses the model to search for the best values for the independent variables so that outcome from the model matches the specified target dependent value or in another example gets close to it.

Shown in is an example display with a display of results calculated according to an optimization value entered at . The display of the results at provide the values determined to meet exceed and or come as close to the optimization value as possible. In some examples a background highlight may provide a visual indication that an optimization value could not be achieved. In some examples if an optimization value could not be achieved the best possible value can be provided with the values for the independent variables that generated the best possible value.

According to various embodiments the display provided to end users can include a number of features that are configured to enable even novice users the ability to interact with and understand the nature of the results being returned. For example a UI component of the system can be configured to enable users to formulate ML problem e.g. queries by dragging a selection box e.g. of of etc. over both the data and the blank query cells. In some examples the UI component can provide an activity button in user interface displays. Once the set of data is selected the user can click an activity button e.g. of to generate a set of results. The activity button can be labeled Estimate or fill in the blanks among other options. In addition a menu option can also be provided to begin processing and in another example the user can right click the selection box to access another menu including an Estimate or Fill in the Blanks option.

As discussed each display of a set of results can include visual encoding of the results. In one example the grayscale color of the cells filled in represents the uncertainty of the value computed where bold colors represent more confidence and blander colors represent less confidence.

According to some embodiments rather than provide results as values in various spreadsheet displays the system engine and or UI component is configured to provide the formula to calculate the result value as an entry in a spreadsheet. According to some embodiments providing the formula rather than a constant results in improvements. In one example the displayed predicted optimized value is configured to adjust automatically in response to changes made in the values of the independent variables. According to some embodiments the system can be configured to analyze the modification of values according to the provided formulas to maintain determinations of confidence with respect to a displayed value. In some applications the brightness of the value may also change if the confidence of the prediction optimization changes.

In another example providing the formula e.g. by system engine and or UI component enables the user to examine the formula to gain insight into the relationship found.

Shown in is a visual representation of one query pattern capture process according to one embodiment. In one example in order to issue a query for modeling or optimization the system first generates a pattern that contains slots for independent values represented here as x and slots for dependent values represented here as y . The example patterns are defined by the system during analysis of the data shown in . The system can be configured to apply each pattern to the data grid at multiple locations and even multiple patterns for overlapping locations. When both the independent and dependent slots in the pattern are filled with values the pattern serves for collecting data. When only the slots labeled x are filled with values but the slots with y are blanks the pattern identifies a place where the result from the query y f x can be applied.

In various executions many potential patterns will be identified for filling each blank cell and some executions multiple patterns can be used to fill in multiple cells. For example the A template can be used to collect 11 data points and to fill in three blanks. The B template can be used to collect data from 8 locations and can be used to fill in six blank slots. The C template can be used to collect data from 7 locations and can be used to fill in two blanks. The D template can be used to collect data from eight locations and can be used to complete the values of six blank cells. Each template therefore has different usefulness depending on how much data it can collect how many blanks it can fill and what confidence level the corresponding ML model will provide.

In some executions the system is configured to identify the highest confidence template for use with each blank cell. Generally the confidence of the model generated by the system depends on the amount of data collected by the template and the complexity of the underlying relationship between x and y in the template if one exists.

According to some embodiments it is not always possible to try out all possible templates. Some algorithms implemented by the system are configured to try out a subset of all possible templates noting that some templates are contained within other templates. The system can be configured to leverage the property that smaller templates will generally provide more data and simpler models whereas larger models may entail more variables collect less data. The system balances this property against the property that larger templates make less a priori assumptions about the structure of the relationships. Thus in some embodiments the large templates can be used to first identify coarse relationships and those identified coarse relationships used to guide the selection of narrower models to generate more refined queries. For example the C template is contained within the D template. The C template is therefore more specific than the D template. However the D template can be used first by the system and if the resulting model only uses the leftmost two of the three dependent variables the C template is analyze by the system. Blanks in column 4 rows 10 12 are filled in using the model resulting from the D or C whichever has higher confidence. In one example the blanks in the last three rows of column 4 cannot use the D template so the system selects the C template. is a visual representation of one example of query pattern recognition according to one embodiment.

Various aspects and functions described herein in accord with aspects of the present invention may be implemented as hardware software or a combination of hardware and software on one or more computer systems. There are many examples of computer systems currently in use. Some examples include among others network appliances personal computers workstations mainframes networked clients servers media servers application servers database servers web servers and virtual servers. Other examples of computer systems may include mobile computing devices such as cellular phones and personal digital assistants and network equipment such as load balancers routers and switches. Additionally aspects in accord with the present invention may be located on a single computer system or may be distributed among one or more computer systems connected to one or more communication networks.

For example various aspects and functions may be distributed among one or more computer systems configured to provide a service to one or more client computers or to perform an overall task as part of a distributed system. Additionally aspects may be performed on a client server or multi tier system that includes components distributed among one or more server systems that perform various functions. Thus the invention is not limited to executing on any particular system or group of systems. Further aspects may be implemented in software hardware or firmware or any combination thereof. Thus aspects in accord with the present invention may be implemented within methods acts systems system placements and components using a variety of hardware and software configurations and the implementation is not limited to any particular distributed architecture network or communication protocol. Furthermore aspects in accord with the present invention may be implemented as specially programmed hardware and or software.

Computer systems and may include mobile devices such as cellular telephones. The communication network may further employ one or more mobile access technologies including 2nd 2G 3rd 3G 4th 4G or LTE generation radio access for cellular systems WLAN Wireless Router WR mesh and other communication technologies. Access technologies such as 2G 3G 4G and LTE and future access networks may enable wide area coverage for mobile devices. For example the network may enable a radio connection through a radio network access such as Global System for Mobil communication GSM General Packet Radio Services GPRS Enhanced Data GSM Environment EDGE Wideband Code Division Multiple Access WCDMA among other communication standards. Network may include any wireless communication mechanism by which information may travel between the devices and other computing devices in the network.

To ensure data transfer is secure the computer systems and may transmit data via the network using a variety of security measures including TSL SSL or VPN among other security techniques. While the distributed computer system illustrates three networked computer systems the distributed computer system may include any number of computer systems networked using any medium and communication protocol.

Various aspects and functions in accord with the present invention may be implemented as specialized hardware or software executing in one or more computer systems including the computer system shown in . As depicted the computer system includes a processor a memory a bus an interface and a storage system . The processor which may include one or more microprocessors or other types of controllers can perform a series of instructions that manipulate data. The processor may be a well known commercially available processor such as an Intel Pentium Intel Atom ARM Processor Motorola PowerPC SGI MIPS Sun UltraSPARC or Hewlett Packard PA RISC processor or may be any other type of processor or controller as many other processors and controllers are available. As shown the processor is connected to other system placements including a memory by the bus .

The memory may be used for storing programs and data during operation of the computer system . Thus the memory may be a relatively high performance volatile random access memory such as a dynamic random access memory DRAM or static memory SRAM . However the memory may include any device for storing data such as a disk drive or other non volatile storage device such as flash memory or phase change memory PCM . Various embodiments in accord with the present invention can organize the memory into particularized and in some cases unique structures to perform the aspects and functions disclosed herein.

Components of the computer system may be coupled by an interconnection element such as the bus . The bus may include one or more physical busses for example busses between components that are integrated within a same machine and may include any communication coupling between system placements including specialized or standard computing bus technologies such as IDE SCSI PCI and InfiniBand. Thus the bus enables communications for example data and instructions to be exchanged between system components of the computer system .

Computer system also includes one or more interfaces such as input devices output devices and combination input output devices. The interface devices may receive input provide output or both. For example output devices may render information for external presentation. Input devices may accept information from external sources. Examples of interface devices include among others keyboards mouse devices trackballs microphones touch screens printing devices display screens speakers network interface cards etc. The interface devices allow the computer system to exchange information and communicate with external entities such as users and other systems.

Storage system may include a computer readable and computer writeable nonvolatile storage medium in which instructions are stored that define a program to be executed by the processor. The storage system also may include information that is recorded on or in the medium and this information may be processed by the program. More specifically the information may be stored in one or more data structures specifically configured to conserve storage space or increase data exchange performance. The instructions may be persistently stored as encoded signals and the instructions may cause a processor to perform any of the functions described herein. A medium that can be used with various embodiments may include for example optical disk magnetic disk or flash memory among others. In operation the processor or some other controller may cause data to be read from the nonvolatile recording medium into another memory such as the memory that allows for faster access to the information by the processor than does the storage medium included in the storage system . The memory may be located in the storage system or in the memory . The processor may manipulate the data within the memory and then copy the data to the medium associated with the storage system after processing is completed. A variety of components may manage data movement between the medium and the memory and the invention is not limited thereto.

Further the invention is not limited to a particular memory system or storage system. Although the computer system is shown by way of example as one type of computer system upon which various aspects and functions in accord with the present invention may be practiced aspects of the invention are not limited to being implemented on the computer system shown in . Various aspects and functions in accord with the present invention may be practiced on one or more computers having different architectures or components than that shown in . For instance the computer system may include specially programmed special purpose hardware such as for example an application specific integrated circuit ASIC tailored to perform a particular operation disclosed herein. Another embodiment may perform the same function using several general purpose computing devices running MAC OS System X with Motorola PowerPC processors and several specialized computing devices running proprietary hardware and operating systems.

The computer system may include an operating system that manages at least a portion of the hardware placements included in computer system . A processor or controller such as processor may execute an operating system which may be among others a Windows based operating system for example Windows NT Windows 2000 ME Windows XP Windows 7 Vista or 8 available from the Microsoft Corporation a MAC OS System X operating system available from Apple Computer one of many Linux based operating system distributions for example the Enterprise Linux operating system available from Red Hat Inc. a Solaris operating system available from Sun Microsystems or a UNIX operating systems available from various sources. Many other operating systems may be used and embodiments are not limited to any particular operating system.

The processor and operating system together define a computing platform for which application programs in high level programming languages may be written. These component applications may be executable intermediate for example C or JAVA bytecode or interpreted code which communicate over a communication network for example the Internet using a communication protocol for example TCP IP . Similarly functions in accord with aspects of the present invention may be implemented using an object oriented programming language such as SmallTalk JAVA C Ada or C C Sharp . Other object oriented programming languages may also be used. Alternatively procedural scripting or logical programming languages may be used.

Additionally various functions in accord with aspects of the present invention may be implemented in a non programmed environment for example documents created in HTML XML or other format that when viewed in a window of a browser program render aspects of a graphical user interface or perform other functions . Further various embodiments in accord with aspects of the present invention may be implemented as programmed or non programmed placements or any combination thereof. For example a web page may be implemented using HTML while a data object called from within the web page may be written in C . Thus the invention is not limited to a specific programming language and any suitable programming language could also be used.

It is to be appreciated that embodiments of the methods and apparatuses discussed herein are not limited in application to the details of construction and the arrangement of components set forth in the following description or illustrated in the accompanying drawings. The methods and apparatuses are capable of implementation in other embodiments and of being practiced or of being carried out in various ways. Examples of specific implementations are provided herein for illustrative purposes only and are not intended to be limiting. In particular acts elements and features discussed in connection with any one or more embodiments are not intended to be excluded from a similar role in any other embodiments.

Also the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. Any references to embodiments or elements or acts of the systems and methods herein referred to in the singular may also embrace embodiments including a plurality of these elements and any references in plural to any embodiment or element or act herein may also embrace embodiments including only a single element. References in the singular or plural form are not intended to limit the presently disclosed systems or methods their components acts or elements. The use herein of including comprising having containing involving and variations thereof is meant to encompass the items listed thereafter and equivalents thereof as well as additional items. References to or may be construed as inclusive so that any terms described using or may indicate any of a single more than one and all of the described terms. Any references to front and back left and right top and bottom upper and lower and vertical and horizontal are intended for convenience of description not to limit the present systems and methods or their components to any one positional or spatial orientation.

Having thus described several aspects of at least one embodiment of this invention it is to be appreciated that various alterations modifications and improvements will readily occur to those skilled in the art. Such alterations modifications and improvements are intended to be part of this disclosure and are intended to be within the spirit and scope of the invention. Accordingly the foregoing description and drawings are by way of example only.

