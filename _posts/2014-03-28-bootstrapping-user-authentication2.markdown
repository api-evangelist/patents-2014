---

title: Bootstrapping user authentication
abstract: Disclosed are various embodiments relating to bootstrapping user authentication. A first application is authenticated based at least in part on a first security credential received via the first application in a first authentication request. A second security credential is generated. The second security credential is sent to the first application that is authenticated. The second application is authenticated based at least in part on the second security credential being received via the second application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09602501&OS=09602501&RS=09602501
owner: Amazon Technologies, Inc.
number: 09602501
owner_city: Seattle
owner_country: US
publication_date: 20140328
---
Users typically are authenticated to a networked application by providing a correct combination of a username and a password. Passwords are capable of providing adequate security for user authentication. Unfortunately when users are permitted to set their passwords the human element may result in passwords that are easily guessed or are susceptible to brute force attack. This is because users will often select dictionary words and or short passwords that are easy to remember and quick to enter.

The present disclosure relates to bootstrapping user authentication across multiple applications and or multiple devices. Entering passwords or other security credentials may be regarded as a burdensome hassle for users. After a user enters a username and password combination once for a particular service the user may regard entering the same username and password again as unnecessarily burdensome. This can apply in the context of multiple devices and or multiple applications. For example a user may be authenticated via a first application on desktop computer. The user experience may be diminished if the user has to re enter the same security credentials for a second application on the same desktop computer or if the user has to re enter the same security credentials on an application on a smartphone or other device.

Various embodiments of the present disclosure allow a user to apply or transfer an existing authentication to another application or device without the user having to enter his or her security credentials multiple times. Instead the user may receive a token via an application through which he or she is already authenticated. The user may then apply this token to another application on the same device or to an application on another device.

This bootstrapping of authentication may be particularly helpful in a use case involving a device with limited data entry capabilities. For example for data entry a television or set top box may ordinarily employ an on screen keyboard controlled by arrow buttons on a remote control. Manipulating such an on screen keyboard may be time consuming and inconvenient to the user. By bootstrapping authentication of the television or set top box using a previously authenticated mobile device the user thereby avoids repetitively entering his or her username and password via the on screen keyboard. Moreover an application session of the mobile device may be tied to the television or set top box so as to facilitate data entry by a more convenient mechanism employing the mobile device.

In another use case a user may employ two different applications upon a single device that each use the same account and security credentials. Entering the same credentials for both would be repetitive. Furthermore it may be important to associate the sessions corresponding to the two applications.

As a non limiting example a customer service representative may use two separate applications simultaneously a customer service management application and a video telephony application. Such a situation may employ approaches to customer support disclosed by U.S. patent application Ser. No. 13 966 007 entitled REMOTE SUPPORT OF COMPUTING DEVICES and filed on Aug. 13 2013 which is incorporated herein by reference in its entirety. The representative may access customer information troubleshooting guides record incident reports etc. via the customer service management application. Meanwhile the representative may communicate with the customer using the video telephony application. The customer service management application may necessitate the use of a virtual private network for security purposes and to ensure that a system health check has been performed. However because of the isochronous nature of the video telephony communication it may be undesirable to route data for the video telephony application via the virtual private network. For example the virtual private network may suffer from delays imposed by automatic repeat request ARQ protocols that provide reliability such as transmission control protocol TCP and other protocols.

Thus data for the video telephony application may be routed instead over user datagram protocol UDP real time transport protocol RTP and or other protocols. In order to relate corresponding sessions of the video telephony application and the customer service management application embodiments of the present disclosure may be employed. Accordingly the authentication and system health checks performed for the session of the customer service management application may be associated with the session of the video telephony application by providing a bootstrapping authentication token via an interface of the video telephony application.

It is noted that in the foregoing example both applications may be executed by a single device or by multiple devices. Various approaches to bootstrapping user authentication are described in U.S. patent application Ser. No. 13 934 848 entitled BOOTSTRAPPING USER AUTHENTICATION ON DEVICES and filed on Jul. 3 2013 which is incorporated herein by reference in its entirety. Additional techniques that may be relevant to bootstrapping authentication may be found in U.S. Pat. No. 8 627 438 entitled PASSWORDLESS STRONG AUTHENTICATION USING TRUSTED DEVICES and issued on Jan. 7 2014 U.S. patent application Ser. No. 13 546 626 entitled TRUSTWORTHY INDICATION OF SOFTWARE INTEGRITY and filed on Jul. 11 2012 U.S. patent application Ser. No. 13 682 596 entitled Telephone based User Authentication and filed on Nov. 20 2012 and U.S. patent application Ser. No. 13 746 719 entitled SCALABLE ACCOUNT STATUS MANAGEMENT and filed on Jan. 22 2013 all of which are incorporated herein by reference in their entireties.

With reference to shown is an example scenario within a networked environment including a computing environment in data communication with a primary client and a bootstrap client according to various embodiments. In this non limiting example the primary client corresponds to a handheld mobile device e.g. a tablet a smartphone etc. while the bootstrap client corresponds to a relatively large digital television. A user logs into a user account maintained in the computing environment using the primary client . In doing so the user provides one or more trusted credentials to the primary client which may include passwords keys and or other credentials. For example it may be assumed that the primary client includes adequate visual cues within a user interface so as to assure the user that the trusted credentials are being provided to the correct application or network page.

The user may wish to access the same account via the bootstrap client . However data entry via the bootstrap client may be unwieldy or inconvenient e.g. via an on screen keyboard controlled by arrow keys on a remote control. In order to authenticate the bootstrap client bootstraps the authentication via a primary client that may already be authenticated by the computing environment . To this end the primary client that has been authenticated sends a bootstrap request to the computing environment . The computing environment generates a bootstrap credential which is returned to the primary client .

The bootstrap credential is then communicated from the primary client to the bootstrap client which may involve an automated process or a manual process. For instance the primary client may display the bootstrap credential to the user who may then enter the bootstrap credential via a user interface field rendered upon a display of the bootstrap client . In such a case the bootstrap credential may be generated in order to be relatively easy to remember and or relatively easy to enter via the bootstrap client . In other words the bootstrap credential may itself be a weaker credential than the trusted credential s . For example the bootstrap credential may be a dictionary word a four digit code an action to be performed by a user etc. Alternatively the primary client may communicate the bootstrap credential to the bootstrap client via a wireless data connection using near field communication NFC Bluetooth Wi Fi etc. The bootstrap client then may authenticate with the computing environment using the bootstrap credential in order to access the user account.

Moving on to shown is another example scenario within a networked environment including a computing environment in data communication with a primary client according to various embodiments. As compared with involves a single client with multiple applications a primary application here corresponding to a customer service management application and a bootstrap application here corresponding to a video telephony application .

A user logs into a user account maintained in the computing environment using the client and the primary application . In doing so the user provides one or more trusted credentials to the client via the primary application which may include passwords keys and or other credentials. A network data session may then be established. The user may wish to access the same account and or network data session via the bootstrap application . In order to authenticate the bootstrap application bootstraps the authentication via the primary application that may already be authenticated by the computing environment . To this end the primary application that has been authenticated sends a bootstrap request to the computing environment . The computing environment generates a bootstrap credential which is returned to the primary application .

The bootstrap credential is then communicated from the primary application to the bootstrap application which may involve an automated process or a manual process. For instance the primary application may display the bootstrap credential to the user who may then enter the bootstrap credential via a user interface field rendered upon a display of the client by the bootstrap application . Alternatively the primary application may communicate the bootstrap credential to the bootstrap application via inter process communication or another approach. The bootstrap application then may authenticate with the computing environment using the bootstrap credential in order to access the user account and or the network data session of the primary application . In the following discussion a general description of the system and its components is provided followed by a discussion of the operation of the same.

Referring next to shown is a block diagram of a networked environment according to various embodiments. The networked environment includes a computing environment one or more primary clients and one or more bootstrap clients in data communication via a network . The network includes for example the Internet intranets extranets wide area networks WANs local area networks LANs personal area networks PANs wired networks wireless networks or other suitable networks etc. or any combination of two or more such networks. Additionally the bootstrap client may be in data communication with the primary client via a local network channel separate from the network e.g. NFC Bluetooth infrared and or other technologies.

The computing environment may comprise for example a server computer or any other system providing computing capability. Alternatively the computing environment may employ a plurality of computing devices that are arranged for example in one or more server banks or computer banks or other arrangements. Such computing devices may be located in a single installation or may be distributed among many different geographical locations. For example the computing environment may include a plurality of computing devices that together may comprise a hosted or cloud computing resource a grid computing resource and or any other distributed computing arrangement. In some cases the computing environment may correspond to an elastic computing resource where the allotted capacity of processing network storage or other computing related resources may vary over time.

Various applications and or other functionality may be executed in the computing environment according to various embodiments. Also various data is stored in a data store that is accessible to the computing environment . The data store may be representative of a plurality of data stores as can be appreciated. The data stored in the data store for example is associated with the operation of the various applications and or functional entities described below.

The components executed on the computing environment for example include an authentication service and other applications services processes systems engines or functionality not discussed in detail herein. The authentication service is executed to authenticate users at the primary clients and bootstrap clients for access to user accounts. In some embodiments the authentication service may serve up network pages that include user interfaces for logging onto user accounts and requesting bootstrap credentials. In other embodiments the authentication service may communicate with applications executed by the primary clients and or bootstrap clients by way of an application programming interface API . The authentication service may correspond to an independent or federated identity provider and or may facilitate a single sign on experience for multiple different systems services etc. operated by one or more organizations.

The data stored in the data store includes for example user account data and potentially other data. The user account data corresponds to data regarding user accounts for multiple users. The user account data may include for example trusted security credentials bootstrap security credentials application identifiers application profile data session data and or other data. The trusted security credentials may correspond to usernames passwords keys answers to knowledge based questions social security numbers and or other private information. In some cases the trusted security credentials may correspond to long lived security credentials. Such credentials may be expected to persist for at least a predetermined length of time or indefinitely. For instance the trusted security credentials may be assumed to be valid until the user changes them. Alternatively the trusted security credentials may be valid for a month six months or another period of time according to a predefined security policy.

The bootstrap security credentials correspond to security credentials of an ephemeral nature that are used to authenticate bootstrap clients and or bootstrap applications . For example the bootstrap security credentials may include a one time password a personal identification number a token or other types of credentials. The bootstrap security credentials may be relatively less trusted than the trusted security credentials . For example the trusted security credentials may be user defined passwords that are intended to be long lived while the bootstrap security credentials may be automatically generated numerical codes or dictionary words that are valid for a relatively shorter period of time. The bootstrap security credentials may be relatively less trusted because they may be selected for ease of memorization rather than credential strength. The bootstrap security credentials may be valid for a predetermined length of time e.g. an hour a day etc. and or may expire in response to certain events. Non limiting examples of events that may trigger expiration may include a change to a bootstrap application or other applications executed in the bootstrap client a detected physical or network location of the bootstrap client different bootstrap clients and or bootstrap applications using the same bootstrap security credential a change in a network address of the bootstrap client and or other events. The bootstrap security credentials may be generated for specific bootstrap clients and or instances of bootstrap applications and may be invalid for use by other bootstrap clients and or bootstrap applications .

The application identifiers may include unique device identifiers unique software identifiers network addresses media access control MAC addresses serial numbers and or other types of identifiers for bootstrap clients and or bootstrap applications . The application identifiers may be employed in order to generate bootstrap security credentials . A bootstrap security credential may be tied to a particular application identifier so that it is valid only for a particular bootstrap client and or instance of a bootstrap application .

The application profile data may describe or profile applications installed upon the bootstrap clients in order to facilitate detecting a change in such applications. For example it may be desired to expire access to a user account via a bootstrap security credential when the content of an application that accesses the user account changes. The session data may include various state information relating to network data sessions between the primary client and the computing environment and or between the bootstrap client and the computing environment . The network data sessions may correspond to application sessions TCP sessions RTP sessions and or other sessions.

The primary client and the bootstrap client are representative of a plurality of client devices that may be coupled to the network . The primary clients and the bootstrap clients may each comprise for example a processor based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer a laptop computer personal digital assistants cellular telephones smartphones set top boxes music players web pads tablet computer systems game consoles electronic book readers or other devices with like capability. In one example the primary client may be a desktop device and the bootstrap client may be a mobile device. The primary client may include a display and the bootstrap client may include a display . The displays may comprise for example one or more devices such as liquid crystal display LCD displays gas plasma based flat panel displays organic light emitting diode OLED displays electrophoretic ink E Ink displays LCD projectors or other types of display devices etc.

The primary client may be configured to execute various applications such as a primary application and or other applications. The primary application may be executed in a primary client for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . The primary application may for example correspond to a browser a mobile application etc. and the user interface may correspond to a network page a mobile application screen etc.

In some embodiments the primary client may be configured to execute a bootstrap application . The bootstrap application may be executed in a primary client for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . The bootstrap application may for example correspond to a browser a mobile application etc. and the user interface may correspond to a network page a mobile application screen etc. The primary client may be configured to execute applications beyond the primary application and the bootstrap application such as for example browsers mobile applications email applications social networking applications and or other applications.

The bootstrap client may be configured to execute various applications such as a bootstrap application and or other applications. The bootstrap application may be executed in a bootstrap client for example to access network content served up by the computing environment and or other servers thereby rendering a user interface on the display . The bootstrap application may for example correspond to a browser a mobile application etc. and the user interface may correspond to a network page a mobile application screen etc. The bootstrap client may be configured to execute applications beyond the bootstrap application such as for example browsers mobile applications email applications social networking applications and or other applications.

Next a general description of the operation of the various components of the networked environment is provided. To begin a user employs a primary client to authenticate using trusted security credentials for access to resources associated with a user account. For example the user provides a username and password to the authentication service by filling out a form in a network page. The user is reassured that the network page is legitimate due to browser chrome and or other visual cues.

Subsequently the user may wish to gain access via a mobile device or other bootstrap client . Unlike the primary client the bootstrap client may be more susceptible to phishing attacks due to the control given to developers over the user interface the lack of browser chrome and or other factors. It may be the case that an attacker could completely fake a user interface on the bootstrap client . These issues may weigh against providing trusted security credentials via the bootstrap clients .

To provide access to the bootstrap client a bootstrap security credential is requested via the primary client that has already been authenticated. The bootstrap security credential is thus generated and returned to the primary client . The primary client communicates the bootstrap security credential to the bootstrap client via manual user entry quick response QR or other machine readable code wireless data transmission or other approaches. The bootstrap client is thereby able to authenticate with the authentication service for access to the user account with the bootstrap security credential . It is noted that the trusted security credentials need not be provided by the bootstrap client in order to authenticate.

Application identifiers may be used in order to prevent usage of a bootstrap security credential by non authorized devices. For example an application identifier may be generated by a bootstrap client communicated to the primary client and onto the authentication service . The bootstrap security credential may be generated based at least in part on the application identifier and or otherwise associated with the application identifiers such that bootstrap clients lacking access to the application identifier are unable to authenticate using the bootstrap security credential . Public key encryption utilizing the application identifiers may be used for signing the bootstrap security credential or performing other functions for verification of the bootstrap clients .

In some scenarios multiple bootstrap clients may be authenticated via a single bootstrap security credential . In one use case a person giving a presentation may distribute the bootstrap security credential to multiple users who may then use the bootstrap security credential separately via their own instances of a bootstrap application in connection with a unique application identifier in order to complete bootstrap authentication in order to receive presentation materials via an online storage account.

In contrast to the trusted security credentials the bootstrap security credentials may be short lived or temporary. For example authenticated sessions using the bootstrap security credentials may expire after 30 minutes. By contrast authenticated sessions using the trusted security credentials may last longer or even indefinitely. This difference may ensure close proximity between the primary client and the bootstrap client . In one embodiment the bootstrap security credentials may expire or have limited use based at least in part on the location of the bootstrap clients . For example if the bootstrap security credentials are initially requested for use at a certain location the bootstrap security credentials may be unusable more than a half mile from that location.

Such functionality may be especially useful in the context of stationary devices such as televisions which may be expected to remain in the same location for a relatively long period of time. For example if a television is moved it may be the case that it was sold which may be a good reason to expire the bootstrap security credentials . Subsequent bootstrapping may be necessary to continue authenticated account access for the bootstrap client . Otherwise access to the user account by the bootstrap client may be disabled. Alternatively the user of the bootstrap client may be prompted to confirm whether the authentication period should be renewed or revoked prior to a tentative expiration of the access granted in the authentication period.

As client applications request additional or different security privileges subsequent bootstrapping may be necessary. Further the code underlying the bootstrap application may change and this may prompt subsequent bootstrapping. For example a web application may be self updating and the updated code may not correspond to stored application profile data . In response to such changes to applications the bootstrap client may need to be bootstrapped again.

In one embodiment a bootstrap client once authenticated may be employed to bootstrap the authentication of other bootstrap clients in like manner. For example once a user s smartphone is authenticated via bootstrapping the smartphone may then be considered a trusted device. Subsequently the user may use the smartphone to bootstrap the authentication of a tablet.

In one embodiment the primary application may be configured to bootstrap any bootstrap client connected to the primary client via a private or trusted network e.g. a home Wi Fi network . Such bootstrapping may be done automatically or subject to user approval of the particular bootstrap client via the primary application . A network may be considered trusted for example when the devices connected to the network are in close proximity to the user such as with a home network .

In some scenarios different classes of resources may be made available to clients depending on how they are authenticated. For example a primary client authenticated with trusted security credentials may be given a higher level of access to resources of a user account as compared to a bootstrap client . Further the method used to bootstrap a bootstrap client may also impact which classes of resources are made available. For example manual bootstrapping via manual code entry may be considered more trustworthy than automatic bootstrapping via a private wireless network . Similarly automatic bootstrapping with a manual approval process may be considered more trustworthy than purely automatic bootstrapping.

Subsequent to bootstrapping the primary client may be used to provide data entry for the bootstrap client and or vice versa. For example a user may type text via a keyboard into a primary application and that text may be used to supply data for use by the bootstrap application executed on the bootstrap client . The text may be communicated by the primary application via the network to the computing environment where it is used to update state in the session data . In some cases the text may be communicated back from the computing environment to the bootstrap application executed upon the bootstrap client . Alternatively the text may be communicated directly between the primary client and the bootstrap client .

In some embodiments once the bootstrap application is authenticated the respective network data sessions of the primary application and the bootstrap application may be associated with one another in the session data to form a single logical session with the computing environment . As a consequence data from one application may be selectively routed via another application. For example suppose that the primary client is a laptop connected to the network via a cable modem connection and the bootstrap client is a smartphone connected to the network via a long term evolution LTE data connection. If the cable modem connection becomes unavailable or saturated the primary application may instead route its data to the computing environment via the connection of the bootstrap application . This may assume a separate connectivity between the primary application and the bootstrap application using e.g. inter process communication Bluetooth Wi Fi etc.

The primary application and or the bootstrap application may also access additional bandwidth via neighboring wireless access points. Such neighboring wireless access points may have network connectivity via another provider thereby facilitating greater network bandwidth. Various approaches for obtaining additional bandwidth via neighboring wireless access points are described by U.S. patent application Ser. No. 14 094 633 entitled COOPERATIVE NETWORK ACCESS and filed on Dec. 2 2013 which is incorporated herein by reference in its entirety.

In some embodiments a simplified logout procedure may be provided via the primary application . For example a user may initiate a logout request via the primary application . In response to the logout request the authentication service may be configured to expire the session corresponding to the primary application as well as any other sessions corresponding to bootstrap applications that were bootstrapped via the primary application . In some cases such as logout procedure may be initiated via a bootstrap application that has been authenticated.

The principles of the present disclosure may apply where the primary application and the bootstrap application are executed in separate devices as well as where the primary application and the bootstrap application are executed in the same device.

Referring next to shown is one example of a user interface rendered by a primary application executed in a primary client in the networked environment according to one embodiment. Specifically the primary application is a browser that is rendering a network page served up by the computing environment . The network page facilitates authentication with the authentication service in order to access resources associated with a user account of an online retailer. A username field is provided in order for the user to enter a username a password field is provided in order for the user to enter a password and a submit component is provided to submit the username and password to the authentication service via the network .

In this example the user has filled in username jsmith123 in the username field and a password in the password field . The username and password correspond to trusted security credentials of the user account. In some scenarios the username and password may be stored in the primary client and automatically populated. Alternatively a cookie may be stored in the primary client that facilitates automatic login. Biometric data private keys answers to knowledge based questions and so on may be used in addition to or in place of username and password in some embodiments.

Various elements of browser chrome are present in the user interface to reassure the user that the network page corresponds to a legitimate site. To this end an address bar may show the uniform resource locator URL corresponding to the site and a lock icon may indicate the use of secure sockets layer SSL or another form of encryption. Window framing scroll bars menu bars taskbars and so on may also be present to assure the user that the user interface was indeed generated by the browser. Thus the user may confidently supply the trusted security credentials .

Turning now to shown is another example of a user interface rendered by a primary application executed in a primary client in the networked environment according to one embodiment. Specifically the primary application is a browser that is rendering a network page served up by the computing environment . The network page facilitates requesting bootstrap security credentials from the authentication service . The network page indicates at label that the user account for John Smith has been successfully authenticated.

A request component is provided in order to submit a request for a bootstrap security credential . In this example an application identifier field is provided in order for the user to specify a particular application identifier for which the bootstrap security credential is to be generated. In this case the user has entered the application identifier of 98765. In other examples it may be that no application identifier is necessary. In some cases no explicit request for the bootstrap security credentials may be necessary. For example the bootstrap security credentials may be automatically downloaded to or preexisting in the primary client .

Moving on to shown is another example of a user interface rendered by a primary application executed in a primary client in the networked environment according to one embodiment. Specifically the primary application is a browser that is rendering a network page served up by the computing environment . The network page facilitates receiving bootstrap security credentials from the authentication service . To this end the network page presents a bootstrap security credential of 43210 and a site verification credential of RecumbentVanilla. The user can view the site verification credential to ensure that the network site accessed by the primary client and the bootstrap client is the same in other words that both show the same site verification credential .

Continuing to shown is one example of a user interface rendered upon a display by a bootstrap application executed in a bootstrap client in the networked environment according to one embodiment. The user interface allows the user to sign in to the same user account in as the examples of through the use of a bootstrap security credential .

To this end the user interface includes a bootstrap code field and a submit component . In the bootstrap code field the user has entered the bootstrap security credential of 43210. The site verification credential is present to assure the user that the user interface corresponds to the same network site as that accessed in the example of . The application identifier may be shown in order for the user to populate the application identifier field . The application identifier in this example is 98765 which is the same as that entered in the application identifier field . The application identifier may be generated by a client application or received from the authentication service . Upon entering the bootstrap security credential the authentication service may authenticate the bootstrap client thereby permitting the bootstrap application and or other applications in the bootstrap client to access resources associated with the user account.

Turning now to shown is one example of a display of a primary client upon which a user interface is rendered by a primary application and upon which a user interface is rendered by a bootstrap application . Although shown concurrently for purposes of illustration it is understood that the user interfaces and may be rendered upon the display at different times. Similar to the user interface provides a bootstrap security credential to the user. Similar to the user interface includes a bootstrap code field for receiving the bootstrap security credential and a submit component for initiating a bootstrap request for the bootstrap application .

Continuing on to shown is one example of a display of a primary client upon which a user interface is rendered by a primary application and upon which a user interface is rendered by a bootstrap application . The example of corresponds to an embodiment where bootstrap authentication is facilitated via a user confirmation through the primary application . Although shown concurrently for purposes of illustration it is understood that the user interfaces and may be rendered upon the display at different times.

In this non limiting example the user interface renders a bootstrap confirmation specification that defines one or more user actions to be undertaken by a user via the primary application in order to confirm the bootstrap authentication request. The bootstrap confirmation specification may correspond to a bootstrap security credential . In this example the bootstrap confirmation specification instructs the user to dictate a particular message into the primary application which in some cases may be executed in a different device than the bootstrap application .

The user interface of the primary application indicates the pending bootstrap authentication requests potentially including an application identifier in this example 131072 and or a bootstrap session identifier. The user may then confirm and approve the requests by performing specific actions. In this case the user interface includes a component Record Audio for initiating audio recording so that the user may dictate the specified message. The primary application may then encode the user action e.g. the recorded audio so that it may be sent to the authentication service .

The authentication service may then approve the bootstrap authentication request upon a successful confirmation. In other words the authentication service may compare the result of the user action from the authenticated primary application with the user action expected in order to authenticate the bootstrap application . If the user actions match the bootstrap application is then authenticated.

Confirmations may be provided through a variety of approaches that may involve sensor devices of the primary client . For example voice recognition face recognition fingerprint recognition and or other forms of biometric identification may be used to indicate approval. Passwords numerical codes and or other security credentials may also be used. Also the user may be instructed to perform a specific action via the primary application and the specific action may then be verified. For example the user may be instructed to move the primary client in a certain way with detection of the movement being done by an accelerometer under control of the primary application . The user may be instructed to view a camera of the primary client and to blink a predefined number of times. The user may be instructed to draw a certain gesture upon a touchscreen of the primary client . A combination of such approaches may be used in some scenarios.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the authentication service according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the authentication service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the authentication service receives an authentication request specifying one or more trusted security credentials from a primary application . In box the authentication service authenticates the primary application for access to a user account or a network session based at least in part on the trusted security credentials . For example the authentication service may calculate a hash value from a password obtained from the primary client and compare the hash value with a stored hash value corresponding to the trusted security credentials to determine whether they match.

In box the authentication service receives a bootstrap request from the primary application . In one embodiment the bootstrap request may specify an application identifier . In box the authentication service generates a bootstrap security credential in response to the bootstrap request. Where the bootstrap request specifies a particular application identifier the bootstrap security credential may be generated based at least in part on the particular application identifier or the bootstrap security credential may be associated with the particular application identifier . In box the authentication service sends the bootstrap security credential to the primary application . In other embodiments the bootstrap security credential may be embedded in the primary client and may be unlocked or authorized for use by the action of the authentication service .

In box the authentication service receives an authentication request that specifies the bootstrap security credential from the bootstrap application . The authentication request may also include the particular application identifier associated with the bootstrap application . In box the authentication service authenticates the bootstrap application based at least in part on the bootstrap security credential . Additionally the authentication service may ensure that an application identifier associated with and or provided by the bootstrap application corresponds to the particular bootstrap security credential to ensure that the bootstrap security credential is not being used by an unauthorized device or application. In box the authentication service may optionally provision a trusted security credential to the bootstrap application that has been authenticated.

In some cases two different network data sessions of the primary application and the bootstrap application may be logically tied together as a result of the authentication. In one instance the session of the primary application may be associated with a system health verification check e.g. performed by a virtual private network through which the primary application is connected to the network . For example such a check may ensure that the primary client is not compromised by malware or has sufficient resources to perform the functions of the primary application and or the bootstrap application . Accordingly the session of the bootstrap application may be associated with the same system health verification check. Thereafter the portion of the authentication service ends.

Turning now to shown is a flowchart that provides one example of the operation of a portion of the primary application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the primary application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the primary client according to one or more embodiments.

Beginning with box the primary application renders a login user interface such as that shown in . In box the primary application receives trusted security credentials . The trusted security credentials may be input by a user. Alternatively the trusted security credentials may be stored or embedded in the primary client and loaded automatically by a credential manager. In box the primary application sends the trusted security credentials to the authentication service within an authentication request. Subsequently the authentication service authenticates the primary application for access to resources associated with the user account.

In box the primary application renders a bootstrap user interface such as that shown in . In box the primary application receives an application identifier for the bootstrap application . For example a user may fill out a form field in the bootstrap user interface the primary application may capture a quick response QR code rendered by the bootstrap application or the primary application may learn of the application identifier by other wireless approaches. In box the primary application sends a bootstrap request to the authentication service . The bootstrap request may specify the application identifier .

In box the primary application receives a bootstrap security credential from the authentication service . In box the primary application renders the bootstrap security credential in a user interface . Alternatively the primary application may communicate the bootstrap security credential to the bootstrap application via QR code captured with a camera encoded audio captured with a microphone wired or wireless data connection or another approach. In some cases the primary application may also receive a site verification credential and render this code within the user interface . Thereafter the portion of the primary application ends.

Moving on to shown is a flowchart that provides one example of the operation of a portion of the bootstrap application according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the bootstrap application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the bootstrap client or the primary client according to one or more embodiments.

Beginning with box the bootstrap application renders a bootstrap login user interface such as that shown in . In box the bootstrap application may generate and or retrieve an application identifier and present the application identifier within the user interface . In box the bootstrap application receives a bootstrap security credential . For example a user may manually fill out a form field with the bootstrap security credential obtained from the primary application . Alternatively the bootstrap application may obtain the bootstrap security credential by way of a QR code rendered by the primary client or through a wireless data connection with the primary client .

In box the bootstrap application authenticates with the authentication service using the bootstrap security credential for access to the user account. The bootstrap application may also present its associated application identifier that uniquely identifies the bootstrap application . In box the bootstrap application determines whether re bootstrapping is needed. In other words the bootstrap application determines whether it is necessary to authenticate again with the authentication service using a new bootstrap security credential . Re bootstrapping may be called for after a predetermined time period expires or in response to detecting a certain event such as a change to application code or change in security privileges granted to an application as determined through the application profile data . If re bootstrapping is called for the bootstrap application returns to box . Otherwise the portion of the bootstrap application ends.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the primary client and or the bootstrap client according to various embodiments. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the primary client and or the bootstrap client as described herein. As an alternative the flowchart of may be viewed as depicting an example of elements of a method implemented in the primary client and or the bootstrap client according to one or more embodiments.

Beginning with box a session of the primary application is associated with a session of a bootstrap application . In box it is determined whether the primary application needs additional bandwidth. For example the network connection of the primary application may become temporarily unavailable or congested. If the primary application needs additional bandwidth data of the primary application is selectively routed via the network session of the bootstrap application in box . In some cases if the primary application needs additional bandwidth the primary application and or the bootstrap application may be additionally be able to route data via other wireless access points. The selective routing via the network session of the bootstrap application may be facilitated for example by way of a local network channel between the primary application and the bootstrap application . Otherwise if the primary application does not need additional bandwidth the data of the primary application is routed via the network session of the primary application in box .

In box it is determined whether the bootstrap application needs additional bandwidth. For example the network connection of the bootstrap application may become temporarily unavailable or congested. If the bootstrap application needs additional bandwidth data of the bootstrap application is selectively routed via the network session of the primary application in box . In some cases if the bootstrap application needs additional bandwidth the primary application and or the bootstrap application may be additionally be able to route data via other wireless access points. The selective routing via the network session of the primary application may be facilitated for example by way of a local network channel between the primary application and the bootstrap application . Otherwise if the bootstrap application does not need additional bandwidth the data of the bootstrap application is routed via the network session of the bootstrap application in box . Thereafter the flowchart of ends.

Referring next to shown is a flowchart that provides one example of the operation of a portion of the authentication service according to various embodiments that provide for confirmation of bootstrap authentication by the primary application . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the authentication service as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the computing environment according to one or more embodiments.

Beginning with box the authentication service receives an authentication request specifying one or more trusted security credentials from a primary application . The authentication request may specify an identifier of a user account. In box the authentication service authenticates the primary application for access to a user account or a network session based at least in part on the trusted security credentials . For example the authentication service may calculate a hash value from a password obtained from the primary client and compare the hash value with a stored hash value corresponding to the trusted security credentials to determine whether they match.

In box the authentication service receives a bootstrap request from the bootstrap application . In one embodiment the bootstrap request may specify an application identifier . The bootstrap request may also specify an identifier of the user account. In box the authentication service generates a bootstrap security credential in response to the bootstrap request. Where the bootstrap request specifies a particular application identifier the bootstrap security credential may be generated based at least in part on the particular application identifier or the bootstrap security credential may be associated with the particular application identifier .

In box the authentication service sends the bootstrap security credential to the bootstrap application . In other embodiments the bootstrap security credential may be embedded in the bootstrap client and may be unlocked or authorized for use by the action of the authentication service . Although the bootstrap security credential is described as being generated by the authentication service in other embodiments the bootstrap security credential is user specified via a user interface of the bootstrap application and then sent to the authentication service .

In box the authentication service sends the bootstrap security credential to the bootstrap application . In one embodiment the bootstrap security credential may comprise a numerical code a password and or another form of security credential that the user may enter via the primary application . In another embodiment the bootstrap security credential may comprise a bootstrap confirmation specification that defines one or more user actions to be performed via the primary application while the primary application is authenticated.

In box the authentication service receives the bootstrap security credential from the primary application in a confirmation of the bootstrap request. As a first example the user may enter a password or numerical code in a text entry field in a user interface of the primary application . In other examples the user may perform one or more predefined user actions in order to confirm the bootstrap request. Such user actions may involve one or more sensor devices of the primary client including but not limited to accelerometers touchscreens sound devices camera devices and so on. The authentication service may cause a particular user interface to be rendered by the primary client to facilitate entry of the bootstrap security credential . Alternatively the user may cause such a user interface to be rendered.

In box the authentication service authenticates the bootstrap application in response to the confirmation being valid. In box the authentication service may optionally provision a trusted security credential to the bootstrap application that has been authenticated. Alternatively the application identifier of the bootstrap application and or another session identifier may be employed as an authenticated session identifier by the bootstrap application . Thereafter the portion of the authentication service ends.

Turning now to shown is a flowchart that provides one example of the operation of a portion of the primary application according to various embodiments that provide for confirmation by the primary application of bootstrap requests. It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the primary application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the primary client according to one or more embodiments.

Beginning with box the primary application renders a login user interface such as that shown in . In box the primary application receives trusted security credentials . The trusted security credentials may be input by a user. Alternatively the trusted security credentials may be stored or embedded in the primary client and loaded automatically by a credential manager. In box the primary application sends the trusted security credentials to the authentication service within an authentication request. Subsequently the authentication service authenticates the primary application for access to resources associated with the user account.

In box the primary application renders a confirmation user interface such as that shown in . The confirmation user interface may be rendered in response to a directive by the authentication service or in response to a user command. The confirmation user interface may show the application identifier associated with the bootstrap application and or other identifying information pertaining to the bootstrap authentication request.

In box the primary application receives one or more user actions corresponding to a bootstrap security credential in order to confirm a bootstrap request by a bootstrap application . Such user actions may include receiving text entry of a password a dictation of at least one word captured by a sound recording device a touch gesture captured by a touchscreen e.g. a finger swipe in a particular direction specific image content captured by a camera e.g. a user blinking a certain number of times and so on. In box the primary application sends data encoding the user actions to the authentication service in order to confirm the bootstrap request. Alternatively the user may reject the bootstrap request and provide an explicit rejection and or fail to provide a confirmation. Thereafter the portion of the primary application ends.

Moving on to shown is a flowchart that provides one example of the operation of a portion of the bootstrap application according to various embodiments that provide for confirmation of bootstrap authentication via a primary application . It is understood that the flowchart of provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the bootstrap application as described herein. As an alternative the flowchart of may be viewed as depicting an example of steps of a method implemented in the bootstrap client or the primary client according to one or more embodiments.

Beginning with box the bootstrap application renders a bootstrap login user interface such as that shown in . In box the bootstrap application may generate and or retrieve an application identifier . In box automatically or in response to a user request the bootstrap application submits a bootstrap authentication request to the authentication service . The bootstrap authentication request may specify the application identifier corresponding to the instance of the bootstrap application . In some cases the bootstrap authentication request may specify or be associated with a bootstrap session identifier. In box the bootstrap application renders a bootstrap confirmation specification in the bootstrap login user interface . The bootstrap confirmation specification may correspond to a bootstrap security credential which may be generated by the authentication service and sent to the bootstrap application or which may be specified by the user via the bootstrap application .

In box the bootstrap application receives an indication of authentication success from the authentication service upon the authentication service receiving a confirmation of the bootstrap request via the primary application . Alternatively upon failure to receive a confirmation or in response to an explicit rejection bootstrap authentication may be denied. In another embodiment bootstrap authentication may succeed unless a user action to prevent authentication is undertaken via the primary application .

In box the bootstrap application determines whether re bootstrapping or subsequent confirmation is needed. Re bootstrapping may be called for after a predetermined time period expires or in response to detecting a certain event such as a change to application code or change in security privileges granted to an application as determined through the application profile data . If re bootstrapping is called for the bootstrap application returns to box . Otherwise the portion of the bootstrap application ends.

With reference to shown is a schematic block diagram of the computing environment according to an embodiment of the present disclosure. The computing environment includes one or more computing devices . Each computing device includes at least one processor circuit for example having a processor and a memory both of which are coupled to a local interface . To this end each computing device may comprise for example at least one server computer or like device. The local interface may comprise for example a data bus with an accompanying address control bus or other bus structure as can be appreciated.

Stored in the memory are both data and several components that are executable by the processor . In particular stored in the memory and executable by the processor is the authentication service and potentially other applications. Also stored in the memory may be a data store and other data. In addition an operating system may be stored in the memory and executable by the processor .

It is understood that there may be other applications that are stored in the memory and are executable by the processor as can be appreciated. Where any component discussed herein is implemented in the form of software any one of a number of programming languages may be employed such as for example C C C Objective C Java JavaScript Perl PHP Visual Basic Python Ruby Flash or other programming languages.

A number of software components are stored in the memory and are executable by the processor . In this respect the term executable means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be for example a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory and run by the processor source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory and executed by the processor or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory to be executed by the processor etc. An executable program may be stored in any portion or component of the memory including for example random access memory RAM read only memory ROM hard drive solid state drive USB flash drive memory card optical disc such as compact disc CD or digital versatile disc DVD floppy disk magnetic tape or other memory components.

The memory is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus the memory may comprise for example random access memory RAM read only memory ROM hard disk drives solid state drives USB flash drives memory cards accessed via a memory card reader floppy disks accessed via an associated floppy disk drive optical discs accessed via an optical disc drive magnetic tapes accessed via an appropriate tape drive and or other memory components or a combination of any two or more of these memory components. In addition the RAM may comprise for example static random access memory SRAM dynamic random access memory DRAM or magnetic random access memory MRAM and other such devices. The ROM may comprise for example a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other like memory device.

Also the processor may represent multiple processors and or multiple processor cores and the memory may represent multiple memories that operate in parallel processing circuits respectively. In such a case the local interface may be an appropriate network that facilitates communication between any two of the multiple processors between any processor and any of the memories or between any two of the memories etc. The local interface may comprise additional systems designed to coordinate this communication including for example performing load balancing. The processor may be of electrical or of some other available construction.

Although the authentication service the primary application the bootstrap application and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above as an alternative the same may also be embodied in dedicated hardware or a combination of software general purpose hardware and dedicated hardware. If embodied in dedicated hardware each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include but are not limited to discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals application specific integrated circuits ASICs having appropriate logic gates field programmable gate arrays FPGAs or other components etc. Such technologies are generally well known by those skilled in the art and consequently are not described in detail herein.

The flowcharts of show the functionality and operation of an implementation of portions of the authentication service the primary application and or the bootstrap application . If embodied in software each block may represent a module segment or portion of code that comprises program instructions to implement the specified logical function s . The program instructions may be embodied in the form of source code that comprises human readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor in a computer system or other system. The machine code may be converted from the source code etc. If embodied in hardware each block may represent a circuit or a number of interconnected circuits to implement the specified logical function s .

Although the flowcharts of show a specific order of execution it is understood that the order of execution may differ from that which is depicted. For example the order of execution of two or more blocks may be scrambled relative to the order shown. Also two or more blocks shown in succession in may be executed concurrently or with partial concurrence. Further in some embodiments one or more of the blocks shown in may be skipped or omitted. In addition any number of counters state variables warning semaphores or messages might be added to the logical flow described herein for purposes of enhanced utility accounting performance measurement or providing troubleshooting aids etc. It is understood that all such variations are within the scope of the present disclosure.

Also any logic or application described herein including the authentication service the primary application and the bootstrap application that comprises software or code can be embodied in any non transitory computer readable medium for use by or in connection with an instruction execution system such as for example a processor in a computer system or other system. In this sense the logic may comprise for example statements including instructions and declarations that can be fetched from the computer readable medium and executed by the instruction execution system. In the context of the present disclosure a computer readable medium can be any medium that can contain store or maintain the logic or application described herein for use by or in connection with the instruction execution system.

The computer readable medium can comprise any one of many physical media such as for example magnetic optical or semiconductor media. More specific examples of a suitable computer readable medium would include but are not limited to magnetic tapes magnetic floppy diskettes magnetic hard drives memory cards solid state drives USB flash drives or optical discs. Also the computer readable medium may be a random access memory RAM including for example static random access memory SRAM and dynamic random access memory DRAM or magnetic random access memory MRAM . In addition the computer readable medium may be a read only memory ROM a programmable read only memory PROM an erasable programmable read only memory EPROM an electrically erasable programmable read only memory EEPROM or other type of memory device.

Further any logic or application described herein including the authentication service the primary application and the bootstrap application may be implemented and structured in a variety of ways. For example one or more applications described may be implemented as modules or components of a single application. Further one or more applications described herein may be executed in shared or separate computing devices or a combination thereof. For example a plurality of the applications described herein may execute in the same computing device or in multiple computing devices in the same computing environment . Additionally it is understood that terms such as application service system engine module and so on may be interchangeable and are not intended to be limiting.

Disjunctive language such as the phrase at least one of X Y or Z unless specifically stated otherwise is otherwise understood with the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

Clause 1. A non transitory computer readable medium embodying a program executable in at least one computing device comprising code that authenticates a first application executed in a primary client device for access to a session based at least in part on a first security credential received from the primary client device via the first application in a first authentication request code that generates a second security credential for the session based at least in part on an application identifier provided via the first application that has been authenticated wherein in response to receiving the second security credential the at least one computing device is configured to authenticate a second application executed in a bootstrap client device for access to the session the application identifier uniquely identifying at least one of the second application or the bootstrap client device code that sends the second security credential to the first application that has been authenticated code that authenticates the second application for access to the session based at least in part on the second security credential and the application identifier being received from the bootstrap client device via the second application in a second authentication request and wherein the second application is configured to facilitate data entry for the first application by way of the bootstrap client device the first application is configured to facilitate data entry for the second application by way of the primary client device or both.

Clause 2. The non transitory computer readable medium of clause 1 wherein the primary client device is a digital television or a set top box and the bootstrap client device comprises a mobile computing device.

Clause 3. The non transitory computer readable medium of clauses 1 to 2 wherein upon authentication of the bootstrap client device the first application is configured to selectively route network data via a first network coupled to the primary client device or a second network coupled to the bootstrap client device wherein the primary client device and the bootstrap client device are connected via a local network channel.

Clause 4. A system comprising at least one first computing device and an authentication service executed in the at least one first computing device the authentication service comprising logic that authenticates a first application executed in at least one second computing device for access to a user account based at least in part on a first security credential received from the at least one second computing device via the first application in a first authentication request logic that in response to receiving an application identifier from the at least one second computing device generates a second security credential for the user account based at least in part on the application identifier wherein in response to receiving both the second security credential and the application identifier the at least one first computing device is configured to authenticate a second application executed in the at least one second computing device for access to the user account logic that sends the second security credential to the first application that has been authenticated and logic that authenticates the second application for access to the user account based at least in part on the second security credential and the application identifier being received from the at least one second computing device via the second application in a second authentication request.

Clause 5. The system of clause 4 wherein the application identifier uniquely identifies the second application.

Clause 6. The system of clauses 4 to 5 wherein the authentication service further comprises logic that generates a user interface configured to present the second security credential to a user and logic that sends data encoding the user interface to the at least one second computing device.

Clause 7. The system of clauses 4 to 6 wherein the second authentication request excludes the first security credential.

Clause 8. The system of clauses 4 to 7 wherein the first security credential comprises a trusted security credential the second security credential comprises a bootstrap security credential and the second security credential is sent to the at least one second computing device in response to a bootstrap request.

Clause 9. The system of clauses 4 to 8 wherein the at least one second computing device comprises a single second computing device and both the first application and the second application are executed in the single second computing device.

Clause 10. The system of clauses 4 to 9 wherein the at least one second computing device comprises a plurality of second computing devices the first application is executed in a first one of the plurality of second computing devices and the second application is executed in a second one of the plurality of second computing devices.

Clause 11. The system of clauses 4 to 10 wherein the authentication service further comprises logic that associates a first network session of the first application with a second network session of the second application in response to authenticating the second application for access to the user account.

Clause 12. The system of clause 11 wherein upon the second application being authenticated for access to the user account the at least one second computing device is configured to selectively route network data traffic of the first application via the second network session selectively route network data traffic of the second application via the first network session or both.

Clause 13. The system of clause 11 wherein the first network session is associated with a system health verification performed upon the at least one second computing device and upon associating the first network session with the second network session the second network session becomes associated with the system health verification.

Clause 14. A method comprising receiving via at least one of one or more first computing devices a first security credential for a user account from a user authenticating via at least one of the one or more first computing devices a first application with a second computing device using the first security credential sending via at least one of the one or more first computing devices after authenticating a bootstrap request to the second computing device for a second security credential to authenticate a second application without using the first security credential the bootstrap request specifying a bootstrap session identifier and receiving via at least one of the one or more first computing devices the second security credential from the second computing device.

Clause 15. The method of clause 14 further comprising authenticating via at least one of the one or more first computing devices the second application with the second computing device using the second security credential and the bootstrap session identifier.

Clause 16. The method of clause 15 further comprising selectively routing via at least one of the one or more first computing devices data via a first network session associated with the first application a second network session associated with the second application or both after the first application and the second application have been authenticated.

Clause 17. The method of clauses 14 to 16 further comprising authenticating via at least one of the one or more first computing devices a third application with the second computing device using the second security credential and the bootstrap session identifier.

Clause 18. The method of clauses 14 to 17 further comprising receiving via at least one of the one or more first computing devices data entered by the user via a third computing device that has been authenticated by way of the second security credential.

Clause 19. The method of clauses 14 to 18 further comprising sending via at least one of the one or more first computing devices the second security credential to a third computing device via a wireless data connection.

Clause 20. The method of clauses 14 to 19 further comprising causing via at least one of the one or more first computing devices the second security credential to be rendered upon a display.

Clause 21. A non transitory computer readable medium embodying a program executable in at least one first computing device comprising code that authenticates a first application executed in a second computing device for access to a user account based at least in part on a trusted security credential received from the second computing device via the first application in a first authentication request code that in response to receiving a second authentication request from a third computing device via a second application generates a bootstrap confirmation specification for the user account the bootstrap confirmation specification defining at least one user action to be performed via the first application that has been authenticated in order to confirm authentication of the second application the second authentication request excluding the trusted security credential code that sends the bootstrap confirmation specification to the second application that is pending authentication and code that authenticates the second application for access to the user account based at least in part on the at least one user action being performed via the first application in a confirmation of the second authentication request.

Clause 22. The non transitory computer readable medium of clause 21 further comprising code that associates the bootstrap confirmation specification with an application identifier of the second application.

Clause 23. The non transitory computer readable medium of clauses 21 to 22 wherein the at least one user action includes at least one of a dictation of at least one word at least one motion applied to the second computing device a touch gesture captured by the second computing device or a specific image content captured by the second computing device.

Clause 24. The non transitory computer readable medium of clauses 21 to 23 further comprising code that generates a user interface configured to detect a user performance of the at least one user action via the second computing device.

Clause 25. The non transitory computer readable medium of clauses 21 to 24 further comprising code that generates a user interface for rendering via the second application the user interface being configured to instruct a user to perform the at least one user action via the first application that has been authenticated in order to provide the confirmation.

Clause 26. A system comprising at least one first computing device and an authentication service executed in the at least one first computing device the authentication service comprising logic that authenticates a first application executed in at least one second computing device for access to a user account based at least in part on a first security credential received from the at least one second computing device via the first application in a first authentication request logic that in response to receiving a second authentication request from the at least one second computing device via a second application generates a second security credential for the user account logic that sends the second security credential to the second application that is pending authentication and logic that authenticates the second application for access to the user account based at least in part on the second security credential being received from the at least one second computing device via the first application in a confirmation of the second authentication request.

Clause 27. The system of clause 26 wherein the second security credential corresponds to at least one user action to be performed via at least one sensor device controlled by the first application.

Clause 28. The system of clauses 26 to 27 wherein the authentication service further comprises logic that terminates an authentication session of the second application in response to receiving a logout request from the first application.

Clause 29. The system of clauses 26 to 28 wherein both the first authentication request and the second authentication request specify an identifier of the user account.

Clause 30. The system of clauses 26 to 29 wherein the second authentication request specifies an identifier of the second application and the second security credential is generated based at least in part on the identifier of the second application.

Clause 31. The system of clauses 26 to 30 wherein the authentication service further comprises logic that requests the confirmation of the second authentication request from the first application that has been authenticated.

Clause 32. The system of clauses 26 to 32 wherein the at least one second computing device comprises a single second computing device and both the first application and the second application are executed in the single second computing device.

Clause 33. The system of clauses 26 to 32 wherein the at least one second computing device comprises a plurality of second computing devices the first application is executed in a first one of the plurality of second computing devices and the second application is executed in a second one of the plurality of second computing devices.

Clause 34. A method comprising receiving via at least one of one or more first computing devices a security credential for a user account from a user authenticating via at least one of the one or more first computing devices a first application with an authentication service using the security credential receiving via at least one of the one or more first computing devices at least one user action in a confirmation of a bootstrap authentication request submitted by a second application to the authentication service the confirmation being received via the first application while the first application is authenticated and sending via at least one of the one or more first computing devices data encoding the at least one user action to the authentication service.

Clause 35. The method of clause 34 further comprising causing via at least one of the one or more first computing devices a user interface to be rendered the user interface facilitating a user performance of the at least one user action.

Clause 36. The method of clauses 34 to 35 wherein the user interface includes an application identifier associated with the second application.

Clause 37. The method of clauses 34 to 36 wherein the first application facilitates data entry for the second application.

Clause 38. The method of clauses 34 to 37 wherein receiving the at least one user action further comprises at least one of receiving a sound via a microphone receiving an image via a camera receiving a gesture via a touchscreen or receiving a motion via an accelerometer.

Clause 39. The method of clauses 34 to 38 further comprising receiving via at least one of the one or more first computing devices a user request to terminate an authentication session of the second application after the second application has been authenticated in response to the bootstrap authentication request and sending via at least one of the one or more first computing devices data encoding the user request to terminate the authentication session of the second application to the authentication service.

Clause 40. The method of clauses 34 to 39 further comprising receiving via at least one of the one or more first computing devices a subsequent at least one user action in a subsequent confirmation of another bootstrap authentication request submitted by a third application to the authentication service the subsequent confirmation being received via the first application while the first application is authenticated and sending via at least one of the one or more first computing devices data encoding the subsequent at least one user action to the authentication service.

It should be emphasized that the above described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above described embodiment s without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims.

