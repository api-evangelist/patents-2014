---

title: Rapidly initializing and dynamically adjusting media streams
abstract: A device may generate a media stream to be shared with other users by building a media graph, comprising a series of interconnected processing units that perform various processing tasks. However, the time involved in generating the media graph may delay the initialization of the media stream, and adjusting properties of the media stream (such as resolution or codec) may result in an interruption of the media stream while a new media graph is built. Instead, a media graph cache may be provided to cache a set of media graphs, which may be interchangeably selected for rapid initialization and adjusting of media stream properties. The media component (e.g., a videocamera) may also be configured to promote rapid adjustments to some media stream properties, while maintaining other properties (e.g., field of view and white balance) for a smooth transition between media stream property sets.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09497239&OS=09497239&RS=09497239
owner: Microsoft Technology Licensing, LLC
number: 09497239
owner_city: Redmond
owner_country: US
publication_date: 20141126
---
The present application claims priority to U.S. patent application Ser. No. 12 898 774 filed Oct. 6 2010 titled RAPIDLY INITIALIZING AND DYNAMICALLY ADJUSTING MEDIA STREAMS the entirety of which is hereby incorporated by reference as if fully rewritten herein.

Within the field of computing many scenarios involve a media stream generated by a device and presented to a recipient such as a videoconference involving a video stream that is generated by a device having a videocamera and delivered over a communication network to devices operated by the other participants of the videoconference. In such scenarios the device connected to the media stream may have a media graph architecture comprising a set of interchangeable components that perform various tasks e.g. communicating with the media component compressing the media stream with a particular compression decompression algorithm codec and encoding the media stream for streaming over a network . The device may initiate the generation of the media stream by selecting a set of components based on a desired set of media stream properties and connecting the components in series to generate a media graph. The media component may then commence the capturing of the media stream and the device may utilize the media graph to perform the processing of the media stream and the delivery to one or more recipients.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

While a media graph architecture may reduce the complexity involved in generating the media stream several inadequacies may arise in some such architectures. As a first example because the building of a media graph may involve initiating communication with one or more media components and allocating buffers in various memory locations the process of initiating a media graph may be time consuming thereby delaying the initiation of the media stream by one or more seconds. As a second example the architecture may not support adjustments of the media graph and or media stream and the media stream may have to be transformed based on various circumstances e.g. a downsampling by the device to accommodate reduced network capacity between the device and the recipient and or a rescaling of the media stream to support the rendering capabilities of the device of the recipient . As a third example one or more media components may be incapable of adjusting the media stream properties of the media stream without interrupting the generation of the media stream.

In order to improve the efficiency of the rendering process the device and or media components may be configured in particular ways. As a first example instead of building media graphs in an ad hoc manner the device may feature a media graph cache storing a set of media graphs and may initiate or adjust a media stream with a new set of media stream properties by selecting a corresponding media graph from the media graph cache thereby reducing the delays entailed by the building of the media graph. As a second example instead of transforming a media stream e.g. by resampling re compressing or rescaling to accommodate the capabilities of the device the recipient and or a communication network therebetween the architecture may permit a set of desired media stream properties to be communicated back to the media component in order to generate a suitable media stream. As a third example media components may be configured to permit a rapid adjustment of the media stream without interrupting the generation or presentation thereof.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

Within the field of computing many scenarios involve the generation of a media stream from a media component of a device to be delivered to a recipient such as a client accessible over a computer network. One such example involves a videoconference among a set of participating users who are connected via a network where each user operates a device having a videocamera that generates a video stream to be delivered to the other users for rendering by their devices as a video image. In such scenarios the media stream is initiated with various media stream properties e.g. a video stream may have a particular aspect ratio field of view horizontal and vertical resolution color depth and framerate and may be compressed using one of several compression decompression algorithms codecs each of which may have various properties such as lossy or lossless compression error correction and recovery and efficient or inefficient compression or decompression. In the case of a video stream generated by a videocamera various settings of the videocamera may also be specified and or automatically selected for the video stream such as white balance lens aperture size and exposure length per frame.

The rendering of media may comprise a complex process with many stages and interrelationships. For example in order to generate a video stream for delivery to a recipient the device connected to the camera may have to initiate communication with a videocamera and a microphone send a request to begin capturing video and audio allocate various buffers to store various frames of the video and audio encode various frames of the video and audio with a compression algorithm multiplex mux the audio and video into a media stream and handle the delivery of the media stream to the recipient e.g. by storing and retransmitting lost or corrupted frames or packets . In order to reduce the complexity of these processes the device may be configured to initiate the generation of the media stream using a media graph comprising a series of media processing components that perform various tasks. For example the device may offer a first set of media graph components that allocate buffers in different memory locations a second set of media graph components representing various codecs that may be used to encode video and or audio and a third set of media graph components that multiplex a set of streams into a composite stream in various ways. Utilizing this modular architecture a media based application such as a videoconferencing application executing on the device may build a media graph from a selection of such components and may request the involved media components and the device to generate a media stream based on the processing path specified by the media graph.

While the use of a media graph architecture may reduce the complexity involved in the generation of media streams several drawbacks may arise in some configurations. As a first example the process of generating a media graph for use in producing a media stream may be comparatively lengthy e.g. the allocation of memory buffers and the initiation of communication with each media component involved in the production of the media stream may take a significant amount of time such as a full second thereby delaying the commencement of the media stream and delivery to the recipients by a noticeable amount of time. As a second example the media component may be requested to generate the media stream based on a particular set of media stream properties that happen to be unsuitable for delivery to and rendering by one or more recipients . For example the size of a media stream may have to be adjusted to accommodate network bandwidth or the display size of the display of the device operated by the recipient . These adjustments are often achieved through a re encoding of the media stream e.g. a downsampling of the media stream by the device of the user for delivery to the recipient or a rescaling of a video stream for rendering on the device of the recipient . However these adjustments may consume additional computing resources such as processor and memory capacity and network bandwidth due to the generation of the media stream by the media component according to an unsuitable set of media stream properties . As a third example after the generation of the media stream is initiated with a particular media graph adjustment of the media stream may be desirable e.g. if network capacity of the communication network between the device and a recipient changes if the device operated by the recipient exhibits an increase or decrease in processing or battery capacity or if the recipient switches to a different device having a different set of rendering capabilities . However once the device of the user and or media components are programmed to generate a media stream using a particular media graph it may be difficult to adjust the media stream e.g. the bitrate resolution or codec rapidly and without interrupting the generation of the media stream and the presentation to the recipient s .

These disadvantages may be addressed by configuring the device and or the media components in a manner that promotes the rapid initiation and adjustment of a media stream based on a media graph . As a first example the device may be configured with a media graph cache that is configured to store a set of media graphs each capable of generating a media stream having a distinctive set of media stream properties such as a specific bitrate and media quality. When the device initiates the media stream or when the device later endeavors to adjust the media stream in order to accommodate changing circumstances such as bandwidth or processing power the device may select among the set of available media graphs and may initiate the generation of the media stream using the selected media graph thereby avoiding a delay in the commencement of the media stream while generating the media graph . As a second example rather than adjusting the media stream through re encoding that may entail processing inefficiencies a suitable set of media stream properties may be communicated back to the media component such that it may initially generate a media stream having the suitable media stream properties . As a third example the adjustment of the media stream may be promoted by configuring media components to support on the fly switching of the media stream properties of the media stream thereby providing a dynamic flexibility while reducing or avoiding an interruption of the media stream .

The device in the exemplary scenario is also configured to promote an adjustment of the media stream properties of the media stream based upon various circumstances. For example the device may detect that the media stream produced by the initial set of media stream properties cannot be sufficiently delivered to the device of the user in view of low capacity of the communication network e.g. the device may not have had sufficient bandwidth information upon selecting the initial set of media stream properties or the bandwidth of the communication network may have become reduced . Additionally the device of the recipient may be rendering the media application on the display of the device at a particular size. In many scenarios including the exemplary scenario of the device and or communication component may not be able to adjust these media stream properties and the adjustments may be achieved by configuring the device to recompress the media stream with a different codec before transmitting it across the communication network and by configuring the device of the recipient to downsample and rescale the media stream according to the resolution of the media application . This additional processing may unduly consume the computing resources and capacities of each device and the communication network . Alternatively the device may generate a new media graph to reflect these media stream properties but the building of the media graph and the configuration of the media component may entail a delay and or interruption of the media stream of one or more seconds. However in the exemplary scenario of the device of the recipient may communicate an adjusted media stream property over the communication network back to the device of the user where the adjusted media stream property specifies the resolution of the media stream to be rendered in the media application and the device identified an adjusted media stream property indicating the alternative codec to be used in compressing the media stream . This information may be used to select an adjusted media graph having the adjusted media stream properties and initiating an adjusted media stream with the media component using the altered media graph. Additionally the media component may be configured to support rapid switching of the media stream properties of the media stream e.g. a rapid adoption and use of an adjusted media graph in place of an initial media graph thereby permitting the rapid adjustment of the media stream to reflect a suitable set of media stream properties without an interruption or delay of the media stream . In this manner the device and or media component are configured to promote rapid initiation and or adjustment of the media stream through the use of the media graph cache the propagation of adjusted media properties from the device of the recipient back through the communication network to the device of the user and to the media component the selection of a suitable media graph matching the adjusted media properties from the media graph cache and or the configuration of the media component to accept and apply adjusted media properties while reducing or eliminating the delay or interruption of the media stream .

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to apply the techniques presented herein. An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable medium e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method of presenting a media stream to at least one recipient such as the exemplary method of . In another such embodiment the processor executable instructions may be configured to implement a system for presenting a media stream to at least one recipient such as the exemplary system of . Some embodiments of this computer readable medium may comprise a nontransitory computer readable storage medium e.g. a hard disk drive an optical disc or a flash memory device that is configured to store processor executable instructions configured in this manner. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of and the exemplary system of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein such techniques may be utilized. As a first example many types of media components may be used to generate many types of media streams such as a videocamera configured to generate a video stream a still camera configured to generate an image stream a microphone configured to generate an audio stream and a storage device storing one or more media documents and configured to generate a content stream therefrom. As a second example the media stream may be consumed by the recipient in many types of streaming media applications including bidirectional streaming media applications e.g. a text audio video or multimedia conference and unidirectional streaming media applications e.g. a one way video stream shared with recipients over a communication network . Alternatively or additionally the media stream may be consumed directly by the device of the user serving also as a recipient e.g. to render the media stream on a display of the device of the user . As a third example of this first aspect the media stream may be generated and delivered to one recipient or to a plurality of recipients which may involve e.g. concurrently generating multiple media streams to be delivered to different recipients generating one media stream to be delivered to all recipients or utilizing proxies multicasting and or peer to peer network techniques to deliver the media stream s to the recipients .

As a fourth example of this first aspect the media stream properties may specify many aspects of the media stream e.g. the media stream properties may be selected from a media stream property set comprising a media stream bitrate e.g. a target data size or data rate of the media stream a media stream framerate e.g. the sampling frequency of a microphone or the framerate of a video stream a media stream frame size e.g. the horizontal or vertical dimensions of the frames in a video stream or the dynamic range of audio in an audio stream a media stream quality indicator e.g. the resolution or color depth of a video frame or the sampling precision of an audio stream and a media stream codec used to compress the media stream e.g. a more lossy or processor intensive codec may produce a smaller media stream while a less lossy or processor intensive codec may produce a larger media stream . Those of ordinary skill in the art may devise many scenarios where the techniques presented herein may be utilized.

A second aspect that may vary among embodiments of these techniques relates to the manner of selecting the media stream properties of a media stream which are used to select a media graph capable of generating media streams having such media stream properties . As a first example the media stream properties may be selected based on many factors. In a first such variation the media stream properties may be based on the media stream processing capabilities of the device such as available memory for receiving the media stream from the media component available processor capacity to process the media stream and available bus capacity to deliver the media stream to a transmitter such as a network adapter. In a second such variation where the device of the user and the recipient are connected via a communication network the media stream properties may be based on various communication network properties of the communication network such as upload capacity to receive the media stream from the device download capacity to deliver the media stream to the recipient the latency involved in the delivery of the media stream and the availability of network proxies that may rebroadcast the media stream on behalf of the user . In a third such variation the media stream properties may be based on the media stream rendering capabilities of the recipient such as the display capabilities e.g. horizontal and vertical dimensions pixel depth color depth and framerate of a display attached to the device of the recipient .

As a second example of this second aspect media stream properties may be selected e.g. as an initial set of media stream properties while initiating the media stream . Alternatively media stream properties may be selected as an adjusted set of media stream properties in order to adjust the properties of a media stream that is already being delivered to one or more recipients . This adjustment may be based upon detection of various properties of the processing capabilities of the device of the user of network capabilities of a communication network connecting the device to the recipient and or of rendering capabilities of a device operated by the recipient where such properties differ from presumed or inferred properties whereby an initial set of media stream properties are selected and or from previous detections of the same properties. For example a recipient may resize a window of a media application thereby resulting in different dimensions of a video stream rendered therein or may switch to a different device that has different rendering capabilities e.g. during a videoconference the recipient may switch from a desktop computer having a large display to a mobile phone device having a small display and the device and or media component may adjust the media stream properties of the media stream in response to the adjusted media stream rendering properties of the device of the recipient . In such scenarios after presenting the media stream to one or more recipients with an initial set of media stream properties the device may receive an adjusting request to present the media stream having one or more adjusted media stream properties e.g. an adjusted bitrate framerate or resolution. The device may therefore select from the media graph cache an adjusted media graph for a media stream having the one or more adjusted media stream properties may request the media component to generate an adjusted media stream having the adjusted media stream property and using the adjusted media graph and may present the adjusted media stream to the recipient . Those of ordinary skill in the art may devise many ways of selecting media stream properties according to the capabilities of the device of the user the device of the recipient and or the communication network therebetween while implementing the techniques presented herein.

A third aspect that may vary among embodiments of these techniques relates to the configuration and use of the media graph cache . As a first example the media graph cache may be populated with media graphs at various times in the operation of these techniques. In a first such variation the media graph cache may be prepopulated with a standard set of media graphs e.g. storing at least two media graphs in the media graph cache before receiving a request to present a media stream which may be available for selection when the request to generate a media stream is received. While this variation may be advantageous for promoting a rapid initiation of the media stream it may be inefficient to maintain a set of media graphs each of which may involve an allocation of buffers in various portions of memory the reservation of resources of various processing components and or the establishment of a communication channel with one or more media components . In a second such variation the device may generate various media graphs and store the media graphs in the media graph cache upon receiving the request to present the media stream . For example when the device receives a request from a recipient to generate the media stream the device may build a first media graph based on an initial set of media graph properties in order to initiate the media stream but may then proceed to build several more media graphs for storage in the media graph cache . While this variation may front load the computational burden of generating media graphs some or all of which may not be used during the media stream this variation may allow subsequent requests to adjust the media stream properties of the media stream to be quickly and efficiently handled thereby reducing or eliminating interruptions of the media stream . Additionally it may be advantageous to generate and store the set of available media graphs upon receiving the request to generate the media stream but to defer the generation of media graphs until a low utilization period of the processor of the device is detected e.g. generating the extra media graphs during periods of idle processor time .

As a third variation of this first example of this third aspect media graphs may be generated on an ad hoc basis e.g. when a media stream having a particular set of media stream properties is requested but may be stored in the media graph cache for future use in case the media stream is subsequently altered to adopt the media stream properties associated with a previously used media graph . For example a media stream may be initiated with a first set of media stream properties that result in the ad hoc generation of a first media graph but may subsequently be altered to result in the ad hoc generation of an adjusted media graph associated with a set of adjusted media stream properties. However if the first media graph is stored in the media graph cache upon switching to the adjusted media graph the first media graph may later be reused following a request to revert to the initial set of media stream properties e.g. if bandwidth is initially copious temporarily restricted and subsequently restored . Accordingly the device may be configured to upon receiving a request to present a media stream having at least one requested media stream property examine the media graph cache to identify a media graph for a media stream having the requested media stream property and to upon failing to locate the media graph in the media graph cache generate the media graph and store the media graph in the media graph cache . This variation in the use of the media graph cache may therefore promote the re use of media graphs and may avoid inefficient teardown and rebuilding of media graphs that are repeatedly used to generate the media stream .

A fourth example of this third aspect relates to the configuration of the media graph cache to release media graphs that are no longer useful. While many architectures that use media graphs tend to maintain the media graph through the life of the media stream and then release the resources associated therewith the releasing precludes the re use of the media graph through the use of the media graph cache and may take additional time and resources that may be undesirably performed during the streaming of the media stream . Accordingly and as a first variation of this fourth example the media graph cache may simply be configured not to release any media graphs which may be helpful e.g. where the media graph cache is pre populated with a standard set of media graphs . As a second variation of this fourth example the media graph cache may be configured to upon detecting a termination of the media stream release some or all of the media graphs stored in the media graph cache . As a third variation of this fourth example the media graph cache may examine the set of stored media graphs and may identify and release expendable media graphs e.g. media graphs that are not likely to be used again or that are inexpensive to regenerate. For example the media graph cache may retain a set of twenty recently used media graphs and upon generating a new media graph to be added to the media graph cache may release the least recently used media graph in this set. In this manner the media graph cache may cull the set of stored media graphs in order to achieve a suitable balance between the re use of media graphs and the inefficient resource allocations involved in maintaining a large set of media graphs . Those of ordinary skill in the art may devise many configurations of the media graph cache while implementing the techniques presented herein.

A fourth aspect that may vary among embodiments of these techniques relates to the manner of configuring the media component to support the adjustment of the media stream . As a first example the media component may be configured to upon receiving an adjusting request to generate an adjusted media stream having an adjusted media stream property generate the adjusted media stream having the adjusted media stream property. Furthermore the media component may be configured to support the switching from a first media graph to a second media graph quickly and while minimizing or eliminating a perceived interruption of the media stream . For example the media component may be configured to after receiving the adjusting request generate the adjusted media stream within an adjustment threshold period e.g. within 300 milliseconds of receiving the adjusting request. It may not be difficult to configure the media component to enable this capability however the utility of doing so may only have been appreciated upon identifying the scenarios described herein and in furtherance of the advantages provided by the techniques presented herein. 

As a second example of this fourth aspect the media component may constrain the set of adjusted media stream properties that may be accepted and applied to achieve an adjustment of an existing media stream . Such constraints may be advantageous e.g. for reducing the perceptible transition between a first media stream based on a first media graph and an adjusted media stream based on an adjusted media graph e.g. while the quality of the media stream may appear to change other properties of the media stream may be maintained. For example if the media stream comprises a video stream and the media component comprises a videocamera some optical and video properties of the video stream may not be adjustable in view of changing processing network and or rendering capabilities but may be maintained through adjustments of the video stream while other media stream properties may be adjusted. In a first such variation the video stream may have an aspect ratio e.g. a ratio of the width of respective frames of the video stream to the height of respective frames of the video stream and or a field of view e.g. a focal point zoom level and peripheral boundaries of the image captured by the videocamera . In order to reduce the perceptibility of adjustments to the quality of the video stream these properties may be maintained such that the adjusted video stream has the same aspect ratio and field of view as the initial video stream even if other properties e.g. resolution or codec are adjusted. In a second such variation the videocamera may have one or more camera properties such as the focal depth white balance aperture shutter speed and exposure length per frame. The videocamera may also be configured to maintain these camera properties while switching from an initial video stream to an adjusted video stream thereby reducing the perceptibility of adjustments to other video stream properties of the video stream. Those of ordinary skill in the art may devise various ways of configuring one or more media components to support the capabilities of the device while implementing the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

