---

title: Adaptive downloading or streaming to conserve mobile device or network resources
abstract: Embodiments of the present disclosure include techniques for optimization on downloading/streaming activities of media and/or other files (e.g., on a local client, or a local proxy on a mobile device). An example of such downloading/streaming is a user accessing media content including video and/or audio content using a mobile device such as a smart phone, a tablet, or a “phablet,” etc.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09094481&OS=09094481&RS=09094481
owner: Seven Networks, Inc.
number: 09094481
owner_city: San Carlos
owner_country: US
publication_date: 20140415
---
This application claims benefit of and priority to U.S. Provisional Patent Application No. 61 812 018 entitled Device User Adaptive Progressive or Selective Size Downloading or Streaming to Conserve Mobile Device or Network Resources which was filed on Apr. 15 2013 the contents of which are incorporated by reference herein.

The present embodiments are illustrated by way of example and are not intended to be limited by the figures of the accompanying drawings. In the drawings 

The same reference numbers and any acronyms identify elements or acts with the same or similar structure or functionality throughout the drawings and specification for ease of understanding and convenience.

Techniques are disclosed for optimizing downloading streaming of media and other files using device or user adaptive progressive selective size downloading streaming and or content caching. In one embodiment a method comprises acquiring information that is specific to a user of a client device and selectively adjusting one or more requests for downloading e.g. progressive downloading or other suitable downloading protocols or streaming e.g. one or more streaming protocols portions of a media file based on the acquired information. In some embodiments the method further comprises selectively caching the one or more downloaded portions of the media file based on the acquired information. The device specific information can include user specific information and additionally device properties or operating parameter information. Among other advantages embodiments disclosed herein enable dynamic fine grained adjustment to the requests made by the client device based on user specific information and or device specific properties thereby reducing power and network resources consumptions avoiding redundant end to end signaling reducing network congestion and providing higher efficiency to the overall network.

The following description and drawings are illustrative and are not to be construed as limiting. Numerous specific details are described to provide a thorough understanding of the disclosure. However in certain instances well known or conventional details are not described in order to avoid obscuring the description. References to one or an embodiment in the present disclosure can be but not necessarily are references to the same embodiment and such references mean at least one of the embodiments.

Reference in this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover various features are described which may be exhibited by some embodiments and not by others. Similarly various requirements are described which may be requirements for some embodiments but not other embodiments.

The terms used in this specification generally have their ordinary meanings in the art within the context of the disclosure and in the specific context where each term is used. Certain terms that are used to describe the disclosure are discussed below or elsewhere in the specification to provide additional guidance to the practitioner regarding the description of the disclosure. For convenience certain tennis may be highlighted for example using italics and or quotation marks. The use of highlighting has no influence on the scope and meaning of a term the scope and meaning of a term is the same in the same context whether or not it is highlighted. It will be appreciated that same thing can be said in more than one way.

Consequently alternative language and synonyms may be used for any one or more of the terms discussed herein nor is any special significance to be placed upon whether or not a term is elaborated or discussed herein. Synonyms for certain terms are provided. A recital of one or more synonyms does not exclude the use of other synonyms. The use of examples anywhere in this specification including examples of any terms discussed herein is illustrative only and is not intended to further limit the scope and meaning of the disclosure or of any exemplified term. Likewise the disclosure is not limited to various embodiments given in this specification.

Without intent to limit the scope of the disclosure examples of instruments apparatus methods and their related results according to the embodiments of the present disclosure are given below. Note that titles or subtitles may be used in the examples for convenience of a reader which in no way should limit the scope of the disclosure. Unless otherwise defined all technical and scientific terms used herein have the same meaning as commonly understood by one of ordinary skill in the art to which this disclosure pertains. In the case of conflict the present document including definitions will control.

The server may be one or more server computers or work stations that are employed by a merchant for hosting websites that function as a channel to customer users for browsing enjoying media products e.g. a movie a video on demand or a music album and or placing purchase orders. The server typically includes at least one processor and a memory and may be further connected to one or more computers not shown in for simplicity that manage inventory logistics and or other commercial functions via the network . As an additional embodiment a host server that facilitates management of traffic content caching and or resource conservation e.g. the host server described in below not shown in for simplicity can also be coupled to the network the host server can include a download optimization proxy e.g. proxy that further assists the mobile device in performing the download streaming optimization techniques disclosed herein. Depending on the embodiment this host server may be hosted by a third party e.g. the third party servers .

Applications e.g. applications A N are example applications of the mobile device . Applications on mobile device can communicate directly to the third party servers via the network . Some examples of applications include news application weather services web browsers with multimedia capabilities video sharing applications online radio and music stations video on demand services and or social network applications. In general each application receives a plurality of data e.g. audio streams or video clips relevant or necessary to the normal operations of the application from the third party servers .

The embodiments disclosed herein recognize that as on demand video audio streaming and or downloading services wireless mobile networks as well as smart portable devices e.g. mobile device become popular a large amount or portion of video audio files are downloaded without being actually viewed or listened by the user. Further the embodiments disclosed herein also recognized that many users repeatedly play their favorite media files such as funny video clips for self entertaining and social purposes.

Furthermore the embodiments disclosed herein recognize that traditional techniques for online media file playback have been focused on channel conditions of network and specifically on improving user experience when connection conditions of the network deteriorates. Example techniques include streaming audio and or video files using a variety of communication protocols e.g. Real Time Messaging Protocol RTMP or Real time Transport Protocol RTP . Another example technique is so called progressive downloading which allows the user to begin playback of the media file even before the download for the file is complete or near complete. Progressive downloading enables a media player e.g. application A to playback with intact meta data in the header of the file along with partial data of the digital media file in a local buffer as the file being downloaded from a server e.g. server A . The media player or mobile application which is capable of media content playback for example on mobile device begins to play when a specified less than full amount of data becomes available to in the buffer. One example version of progressive downloading which can be used for partial or specified partial content download in one embodiment is described in Hypertext Transfer Protocol HTTP 1.1 206 Partial Content.

However the aforementioned existing techniques and or protocols do not take user behaviors and or device specific properties into consideration and therefore they typically would facilitate downloading and or streaming at the best rate that the channel condition of the network can support even when the user has paused the playback or when the power resource of the mobile device is near depletion. As the mobile devices now become more powerful than ever so are the power and data consumption associated with generating and communicating these data. Indeed there is an increased multitude of applications running on the mobile devices and each application consumes more and more resources including for example central processing unit s memory space battery power network bandwidth and so on. From a practical standpoint data service subscriptions purchased by mobile network subscribers also charge their fees sometimes exponentially by the amount of data used and therefore a reduction in unnecessary data consumption is desirable.

According to the embodiments provided herein the mobile device can dynamically perform media and other files downloading optimization based on user specific information and or device specific properties in order to among other purposes reduce unnecessary power and or data consumption while minimizing adverse impacts on user experience.

Therefore in one embodiment the mobile device includes a download optimization engine that can acquire information e.g. by utilizing an information acquisition module that is specific to a user of the mobile device and can dynamically adjust e.g. by utilizing an adjustment module one or more requests made from the applications based on the acquired information. The information acquisition module can gather user specific information by monitoring user activities including for example play pause stop close fast forward rewind put in the background or bring back to the foreground share with other users tag share in social networks or other viral marketing social activities and or minimize a browser application or a media player e.g. application A . The acquisition module can also gather user behavioral information including for example one or more favorite or most frequently played media or specific times or day days of week etc. that the user accesses and interacts with media or certain types of media or media related to certain topics or media accessed via certain mobile applications.

The information acquisition module can also gather device properties information by monitoring the operating parameters including for example wireless signal strength residual battery resource types of network connected network congestion network failure network received signal strength indication RSSI and or network bandwidth availability consumption.

Based on the acquired information any of the above in singular or in suitable combination the download optimization engine can for example revise a size in the requests or replace the requests with requests of a new size suspend or resume the requests combine or divide the requests and or modify a protocol of the requests e.g. from streaming to progressive downloading and or use one or more protocols that are capable of selective size downloading and in a further embodiment factoring into user behavior or device characteristics or user behavior using a specific device.

Moreover in some embodiments the download optimization engine further includes an optimized local cache that can selectively cache downloaded portions of the media file based on the acquired information. For example the media files that are favorite e.g. as determined automatically and or specified by the user which are likely to be played back most frequently are cached in the optimized local cache . Notably this optimized local cache may be in part or in whole same different from the already existing local cache e.g. local data cache discussed with respect to .

These aforementioned and additional embodiments and implementations of the disclosed download streaming optimization by device and or user adaptive partial and selective size download and or selective content caching techniques are described in more details below.

The client devices can be any system and or device and or any combination of devices systems that is able to establish a connection including wired wireless cellular connections with another device a server and or other systems such as host server and or application server content provider . Client devices typically include a display and or other output functionalities to present information and data exchanged between among the devices and or the host server and or application server content provider . The application server content provider can by any server including third party servers or service content providers further including advertisement promotional content publication or electronic coupon servers or services. Similarly separate advertisement servers A promotional content servers B and or e Coupon servers C as application servers or content providers are illustrated by way of example.

For example the client mobile devices can include mobile hand held or portable devices wireless devices or non portable devices and can be any of but not limited to a server desktop a desktop computer a computer cluster or portable devices including a notebook a laptop computer a handheld computer a palmtop computer a mobile phone a cell phone a smart phone a PDA a Blackberry device a Palm device any tablet a phablet a class of smart phones with larger screen sizes between a typical smart phone and tablet a handheld tablet e.g. an iPad the Galaxy series the Nexus the Kindles Kindle Fires any Android based tablet Windows based tablet Amazon e Readers or other readers or any other tablet any portable readers reading devices a hand held console a hand held gaming device or console a head mounted device a head mounted display a thin client or any SuperPhone such as the iPhone and or any other portable mobile hand held devices or fixed wireless interface such as a M2M device etc. In one embodiment the client devices or mobile device host server and application server are coupled via a network and or a network . In some embodiments the devices and host server may be directly connected to one another.

The input mechanism on client devices can include touch screen keypad including single touch multi touch gesture sensing in 2D or 3D etc. a physical keypad a mouse a pointer a track pad a stylus a stylus detector sensor receptor motion detector sensor e.g. including 1 axis 2 axis 3 axis accelerometer etc. a face detector recognizer a retinal detector scanner a light sensor capacitance sensor resistance sensor temperature sensor proximity sensor a piezoelectric device device orientation detector e.g. electronic compass tilt sensor rotation sensor gyroscope accelerometer or any combination of the above.

Signals received or detected indicating user activity at client devices through one or more of the above input mechanism or others can be used in the disclosed technology in obtaining context awareness at the client device . Context awareness at client devices generally includes by way of example but not limitation client device operation or state acknowledgement management user activity behavior interaction awareness detection sensing tracking trending and or application e.g. mobile applications type behavior activity operating state etc.

Context awareness in the present disclosure also includes knowledge and detection of network side contextual data and can include network information such as network capacity bandwidth traffic type of network connectivity and or any other operational state data and or mobile application loading and or activities. Network side contextual data can be received from and or queried from network service providers e.g. cell provider and or Internet service providers of the network and or network e.g. by the host server and or devices . In addition to application context awareness as determined from the client side the application context awareness may also be received from or acquired queried from the respective application service providers by the host and or client devices .

The host server can use for example contextual information acquired for client devices networks applications e.g. mobile applications application server provider or any combination of the above to manage the traffic in the system to satisfy data needs of the client devices e.g. to satisfy application or any other request including HTTP request . In one embodiment the traffic is managed by the host server to satisfy data requests made in response to explicit or non explicit user requests and or device application maintenance tasks. The traffic can be managed such that network consumption for example use of the cellular network is conserved for effective and efficient bandwidth utilization. In addition the host server can manage and coordinate such traffic in the system such that use of device side resources e.g. including but not limited to battery power consumption radio use processor memory use are optimized with a general philosophy for resource conservation while still optimizing performance and user experience.

For example in context of battery conservation the device can observe user activity for example by observing user keystrokes backlight status or other signals via one or more input mechanisms etc. and alters device behaviors. The device can also request the host server to alter the behavior for network resource consumption based on user activity or behavior.

In one embodiment the traffic management for resource conservation and or media file download optimization are performed using a distributed system between the host server and client device . The distributed system can include proxy server and cache components on the server side and on the device client side for example as shown by the server cache on the server side and the local cache on the client side.

Functions and techniques disclosed for context aware traffic management and or media file download optimization for resource conservation in networks e.g. network and or and devices can reside in a distributed proxy and cache system. The proxy and cache system can be distributed between and reside on a given client device in part or in whole and or host server in part or in whole. The distributed proxy and cache system are illustrated with further reference to the example diagram shown in . Notably in some embodiments of such systems the application server can include the third party servers and or the mobile device can include the mobile device .

In one embodiment client devices communicate with the host server and or the application server over network which can be a cellular network and or a broadband network. To facilitate overall traffic management and or mobile application offloading between devices and various application servers content providers to implement network bandwidth utilization and device resource e.g. battery consumption the host server can communicate with the application server providers over the network which can include the Internet e.g. a broadband network .

In general the networks and or over which the client devices the host server and or application server communicate may be a cellular network a broadband network a telephonic network an open network such as the Internet or a private network such as an intranet and or the extranet or any combination thereof. For example the Internet can provide file transfer remote log in email news RSS cloud based services instant messaging visual voicemail push mail VoIP and other services through any known or convenient protocol such as but is not limited to the TCP IP protocol UDP HTTP DNS FTP UPnP NSF ISDN PDH RS 232 SDH SONET etc.

The networks and or can be any collection of distinct networks operating wholly or partially in conjunction to provide connectivity to the client devices and the host server and may appear as one or more networks to the serviced systems and devices. In one embodiment communications to and from the client devices can be achieved by an open network such as the Internet or a private network broadband network such as an intranet and or the extranet. In one embodiment communications can be achieved by a secure communications protocol such as secure sockets layer SSL or transport layer security TLS .

In addition communications can be achieved via one or more networks such as but are not limited to one or more of WiMax a Local Area Network LAN Wireless Local Area Network WLAN a Personal area network PAN a Campus area network CAN a Metropolitan area network MAN a Wide area network WAN a Wireless wide area network WWAN or any broadband network and further enabled with technologies such as by way of example Global System for Mobile Communications GSM Personal Communications Service PCS Bluetooth WiFi Fixed Wireless Data 2G 2.5G 3G e.g. WCDMA UMTS based 3G networks 4G IMT Advanced pre 4G LTE Advanced mobile WiMax WiMax 2 WirelessMAN Advanced networks enhanced data rates for GSM evolution EDGE General packet radio service GPRS enhanced GPRS iBurst UMTS HSPDA HSUPA HSPA HSPA UMTS TDD 1xRTT EV DO messaging protocols such as TCP IP SMS MMS extensible messaging and presence protocol XMPP real time messaging protocol RTMP instant messaging and presence protocol IMPP instant messaging USSD IRC or any other wireless data networks broadband networks or messaging protocols.

The distributed proxy and cache system can include for example the proxy server e.g. remote proxy and the server cache components on the server side. The server side proxy and cache can as illustrated reside internal to the host server . In addition the proxy server and cache on the server side can be partially or wholly external to the host server and in communication via one or more of the networks and . For example the proxy server may be external to the host server and the server cache may be maintained at the host server . Alternatively the proxy server may be within the host server while the server cache is external to the host server . In addition each of the proxy server and the cache may be partially internal to the host server and partially external to the host server . The application server content provider can by any server including third party servers or service content providers further including advertisement promotional content publication or electronic coupon servers or services. Similarly separate advertisement servers A promotional content servers B and or e Coupon servers C as application servers or content providers are illustrated by way of example.

The distributed system can also include in one embodiment client side components including by way of example but not limitation a local proxy e.g. a mobile client on a mobile device and or a local cache which can as illustrated reside internal to the device e.g. a mobile device .

In addition the client side proxy and local cache can be partially or wholly external to the device and in communication via one or more of the networks and . For example the local proxy may be external to the device and the local cache may be maintained at the device . Alternatively the local proxy may be within the device while the local cache is external to the device . In addition each of the proxy and the cache may be partially internal to the host server and partially external to the host server .

In one embodiment the distributed system can include an optional caching proxy server . The caching proxy server can be a component which is operated by the application server content provider the host server or a network service provider and or any combination of the above to facilitate network traffic management for network and device resource conservation. Proxy server can be used for example for caching content to be provided to the device for example from one or more of the application server provider host server and or a network service provider . Content caching can also be entirely or partially performed by the remote proxy to satisfy application requests or other data requests at the device .

In context aware traffic management and optimization for resource conservation in a network e.g. cellular or other wireless networks characteristics of user activity behavior and or application behavior at a mobile device e.g. any wireless device can be tracked by the local proxy and communicated over the network to the proxy server component in the host server for example as connection metadata. The proxy server which in turn is coupled to the application server provider provides content and data to satisfy requests made at the device .

In addition the local proxy can identify and retrieve mobile device properties including one or more of battery level network that the device is registered on radio state or whether the mobile device is being used e.g. interacted with by a user . In some instances the local proxy can delay expedite prefetch and or modify data prior to transmission to the proxy server when appropriate.

The local database can be included in the local proxy or coupled to the local proxy and can be queried for a locally stored response to the data request prior to the data request being forwarded on to the proxy server . Locally cached responses can be used by the local proxy to satisfy certain application requests of the mobile device by retrieving cached content stored in the cache storage when the cached content is still valid.

Similarly the proxy server of the host server can also delay expedite or modify data from the local proxy prior to transmission to the content sources e.g. the application server content provider . In addition the proxy server uses device properties and connection metadata to generate rules for satisfying request of applications on the mobile device . The proxy server can gather real time traffic information about requests of applications for later use in optimizing similar connections with the mobile device or other mobile devices.

In general the local proxy and the proxy server are transparent to the multiple applications executing on the mobile device. The local proxy is generally transparent to the operating system or platform of the mobile device and may or may not be specific to device manufacturers. In some instances the local proxy is optionally customizable in part or in whole to be device specific. In some embodiments the local proxy may be bundled into a wireless model a firewall and or a router.

In one embodiment the host server can in some instances utilize the store and forward functions of a short message service center SMSC such as that provided by the network service provider in communicating with the device in achieving network traffic management. Note that can also utilize any other type of alternative channel including USSD or other network control mechanisms. The host server can forward content or HTTP responses to the SMSC such that it is automatically forwarded to the device if available and for subsequent forwarding if the device is not currently available.

In general the disclosed distributed proxy and cache system allows optimization of network usage for example by serving requests from the local cache the local proxy reduces the number of requests that need to be satisfied over the network . Further the local proxy and the proxy server may filter irrelevant data from the communicated data. In addition the local proxy and the proxy server can also accumulate low priority data and send it in batches to avoid the protocol overhead of sending individual data fragments. The local proxy and the proxy server can also compress or transcode the traffic reducing the amount of data sent over the network and or . The signaling traffic in the network and or can be reduced as the networks are now used less often and the network traffic can be synchronized among individual applications.

With respect to the battery life of the mobile device by serving application or content requests from the local cache the local proxy can reduce the number of times the radio module is powered up. The local proxy and the proxy server can work in conjunction to accumulate low priority data and send it in batches to reduce the number of times and or amount of time when the radio is powered up. The local proxy can synchronize the network use by performing the batched data transfer for all connections simultaneously.

Client Side Proxy a component installed in the Smartphone mobile device or wireless device that interfaces with device s operating system as well as with data services and applications installed in the device. The client side proxy is typically compliant with and able to operate with standard or state of the art networking protocols.

The server side proxy can include one or more servers that can interface with third party application servers e.g. mobile operator s network which can be proxy or an additional server that is not illustrated and or the client side proxy . In general the server side proxy can be compliant with and is generally able to operate with standard or state of the art networking protocols and or specifications for interacting with mobile network elements and or third party servers.

Reporting and Usage Analytics Server The Reporting and Usage Analytics system or component can collect information from the client side and or the server side and provides the necessary tools for producing reports and usage analytics can used for analyzing traffic and signaling data. Such analytics can be used by the proxy system in managing reducing network traffic or by the network operator in monitoring their networks for possible improvements and enhancements. Note that the reporting and usage analytics system component as illustrated may be a server separate from the server side proxy or it may be a component of the server side proxy residing partially or wholly therein.

The client side components can include software components or agents installed on the mobile device that enables traffic optimization and performs the related functionalities on the client side. Components of the client side proxy can operate transparently for end users and applications . The client side proxy can be installed on mobile devices for optimization to take place and it can effectuate changes on the data routes. Once data routing is modified the client side proxy can respond to application requests to service providers or host servers in addition to or instead of letting those applications access data network directly. In general applications on the mobile device do not notice that the client side proxy is responding to their requests. Some example components of the client side proxy are described as follows 

Device State Monitor The device state monitor can be responsible for identifying several states and metrics in the device such as network status display status battery level etc. such that the remaining components in the client side proxy can operate and make decisions according to device state acting in an optimal way in each state.

Download Optimization Engine Similar to what are mentioned with regard to the download optimization engine can perform the media file download streaming optimization techniques disclosed herein. In the embodiment shown in the optimization engine is coupled to the device state monitor to receive application activity battery network status as well as user selection an administrator s selection and or other suitable information in determining adjustments to the requests in performing the media file download optimization. Optionally the optimization engine can also communicate with a download optimization proxy discussed below within the server side proxy for further optimizing the media downloading. Such collaborative optimization between engine and proxy can include for example establishing a downloading streaming using selective size techniques protocols to substitute the original downloading streaming requests and or selectively caching data that are downloaded streamed based on the gathered device or user specific information.

Traffic Recognizer The traffic recognizer analyzes all traffic between the wireless device applications and their respective host servers in order to identify recurrent patterns. Supported transport protocols include for example DNS HTTP and HTTPS such that traffic through those ports is directed to the client side proxy . While analyzing traffic the client side proxy can identify recurring polling patterns which can be candidates to be performed remotely by the server side proxy and send to the protocol optimizer .

Protocol Optimizer The protocol optimizer can implement the logic of serving recurrent request from the local cache instead of allowing those request go over the network to the service provider application host server. One is its tasks is to eliminate or minimize the need to send requests to the network positively affecting network congestion and device battery life.

Local Cache The local cache can store responses to recurrent requests and can be used by the Protocol Optimizer to send responses to the applications . The local cache may further store one or more downloaded portions of media files based on the acquired information in a way that is described herein regarding the media file download streaming optimization techniques. Notably in some embodiments the local cache comprises the optimized local cache of and the applications comprises the applications of .

Traffic Scheduler The traffic scheduler can temporally move communications to optimize usage of device resources by unifying keep alive signaling so that some or all of the different applications can send keep alive messages at the same time traffic pipelining . Traffic scheduler may also decide to delay transmission of data that is not relevant at a given time for example when the device is not actively used .

Policy Manager The policy manager can store and enforce traffic optimization and reporting policies provisioned by a Policy Management Server PMS . At the client side proxy first start traffic optimization and reporting policies policy profiles that is to be enforced in a particular device can be provisioned by the Policy Management Server.

Watch Dog The watch dog can monitor the client side proxy operating availability. In case the client side proxy is not working due to a failure or because it has been disabled the watchdog can reset DNS routing rules information and can restore original DNS settings for the device to continue working until the client side proxy service is restored.

Reporting Agent The reporting agent can gather information about the events taking place in the device and sends the information to the Reporting Server. Event details are stored temporarily in the device and transferred to reporting server only when the data channel state is active. If the client side proxy doesn t send records within twenty four hours the reporting agent may attempt to open the connection and send recorded entries or in case there are no entries in storage an empty reporting packet. All reporting settings are configured in the policy management server.

Push Client The push client can be responsible for the traffic to between the server side proxy and the client side proxy . The push client can send out service requests like content update requests and policy update requests and receives updates to those requests from the server side proxy . In addition push client can send data to a reporting server e.g. the reporting and or usage analytics system which may be internal to or external to the server side proxy .

The proxy server has a wide variety of uses from speeding up a web server by caching repeated requests to caching web DNS and other network lookups for a group of clients sharing network resources. The proxy server is optional. The distributed proxy and cache system and or allows for a flexible proxy configuration using either the proxy additional proxy s in operator s network or integrating both proxies and an operator s or other third party s proxy.

The server side of the distributed system can include for example a relay server which interacts with a traffic harmonizer a polling server and or a policy management server . Each of the various components can communicate with the client side proxy or other third party e.g. application server service provider and or other proxy and or a reporting and usage analytics system. Some example components of the server side proxy is described as follows 

Relay Server The relay server is the routing agent in the distributed proxy architecture. The relay server manages connections and communications with components on the client side proxy installed on devices and provides an administrative interface for reports provisioning platform setup and so on.

Download Optimization Proxy In some embodiments the download optimization proxy can perform in conjunction with the download optimization engine the media file download streaming optimization techniques disclosed herein. In some embodiments such as the one shown in the download optimization proxy is coupled to the relay server to receive relevant connection and communication information for performing the media downloading optimization. The download optimization proxy can communicate to third party servers or proxies and can download the requested media file from the third party servers to the host server . Then the download optimization proxy may deliver the media file to optimization engine if such delivery brings resource conservation or other benefits. For example the download optimization proxy and the download optimization engine can together modify TCP signaling between the client proxy and the server proxy in reducing end to end signaling. In addition optimization proxy can facilitate video audio optimization and or compression on the media file s to reduce necessary signaling and bandwidth consumption thereby conserving computing and power resources on the mobile device .

Notification Server The notification server is a module able to connect to an operator s SMSC gateways and deliver SMS notifications to the client side proxy . SMS notifications can be used when an IP link is not currently active in order to avoid the client side proxy from activating a connection over the wireless data channel thus avoiding additional signaling traffic. However if the IP connection happens to be open for some other traffic the notification server can use it for sending the notifications to the client side proxy . The user database can store operational data including endpoint MSISDN organization and Notification server gateway for each resource URIs or URLs .

Traffic Harmonizer The traffic harmonizer can be responsible for communication between the client side proxy and the polling server . The traffic harmonizer connects to the polling server directly or through the data storage and to the client over any open or proprietary protocol such as the 7TP implemented for traffic optimization. The traffic harmonizer can be also responsible for traffic pipelining on the server side if there s cached content in the database for the same client this can be sent over to the client in one message.

Polling Server The polling server can poll third party application servers on behalf of applications that are being optimized . If a change occurs i.e. new data available for an application the polling server can report to the traffic harmonizer which in turn sends a notification message to the client side proxy for it to clear the cache and allow application to poll application server directly.

Policy Management Server The policy management server PMS allows administrators to configure and store policies for the client side proxies device clients . It also allows administrators to notify the client side proxies about policy changes. Using the policy management server each operator can configure the policies to work in the most efficient way for the unique characteristics of each particular mobile operator s network.

Reporting and Usage Analytics Component The Reporting and Usage Analytics component or system collects information from the client side and or from the server side and provides the tools for producing reports and usage analytics that operators can use for analyzing application signaling and data consumption.

Most mobile applications regularly poll their application servers to check for new data. Often there is no new data or the content has not changed so the exchange of data through the mobile network is unnecessary. As the number of mobile phones and their applications increase the amount of this needless polling grows. Since applications are not coordinated and poll at different times and intervals any given phone may frequently generate signal traffic. This causes multiple unnecessary radio activations consuming power and shortening battery life.

In one embodiment the signaling optimizer reduces network requests to a minimum by caching content in the client and letting its own server poll for changes in the network. When a mobile phone s client side proxy e.g. local proxy detects a recurring pattern for a resource such as an email application its response content is stored locally in a client cache so similar requests from that application get their response from the local cache rather than signaling the network.

In another embodiment systems and methods of intelligent alarm tracker and resource manipulator can be used to reduce network requests by consolidating or changing the timing of requests such that use of resources including network battery CPU memory and the like can be reduced.

In some embodiments features of the signaling optimizer and the intelligent alarm tracker and resource manipulator may be used together to obtain reduced resource usage by mobile applications on a mobile device.

As an example someone who typically gets only 10 emails a day may have phone s email application poll the network for new email every 15 minutes or 96 times a day with around 90 or more of the polls resulting in the same response there are no new emails. The client side proxy e.g. local proxy can recognize this request response pattern and intercepts the application s poll requests returning the locally cached response of no new emails . This way the device radio is not turned on by this particular application and the poll doesn t use any network resources. The server e.g. host server proxy server located in the network can monitor the email application server on behalf of the user s email application. When new email is available the server can notify the user s client side proxy to not use the cached no new emails response for the next poll request. Instead of going to the local client cache the email application polls its application server over the network and receives the new content.

The signaling optimizer can be configured and managed using different rule sets for different device types user types wireless networks and applications. Optimization rules can be updated at any time so the changes can be applied immediately when an application upgrades or changes happen in the mobile network. The protocols that can be optimized include but are not limited to HTTP HTTPS and DNS.

In the client server architecture the client side proxy e.g. local proxy is residing on the mobile or client devices. The client side proxy can communicate both directly to the Internet usually via an operator proxy and to the server side proxy e.g. proxy server or the host server . The proxy server communicates to the Internet and to the operator s SMSC .

As depicted the client side proxy can send a request directly to the Internet. This can happen after requests have been analyzed to detect optimizable patterns for example. The client side proxy can in one implementation send a request to the server e.g. host server proxy server for example to initiate server polling to reports logs or to get new configuration. The proxy server can send a request to the Internet to for example validate cached content. In one implementation the proxy server can send a request to the SMSC for example to send a cache invalidate message or policy update message to the client side proxy .

In one implementation the client side proxy may not maintain an open connection with the proxy server but may connect to the proxy server only in case there s a need to start polling an origin server to report logs or to get new configuration. For signaling optimizer feature the proxy server can notify the client side proxy when the content that has been polled has changed. The proxy server can send a request to invalidate cache in the client side proxy . When the application connects to that particular origin server e.g. content server the next time it can first fetch the latest content from the proxy server and then directly connect to the origin server . For the policy enforcer and or the network protector features the proxy server can notify the client side proxy when there s new configuration to be fetched from the server. When the proxy server needs to communicate with the client side proxy it can use a connection that is already open for some other request. If the connection is not open the proxy server can send a notification e.g. SMS to the client side proxy .

In one implementation non optimized application traffic flow such as traffic from App1 can completely bypass the client side proxy components and proceed directly through the operating system layer e.g. the Android OS layer and Network Access Layer to the wireless network. Traffic that that is not optimized can include but is not limited to rich media like video and audio as well as traffic from networks and applications that has been configured to bypass optimization and traffic pending optimization and the like. In one embodiment all traffic can be configured to bypass the client side server side proxy.

In another implementation optimized application traffic such as traffic from App2 can be redirected from the application to the client side proxy . By default this can be traffic on ports HTTP and DNS and selected traffic on port HTTPS for example. However traffic to other ports can be configured to be directed to the client side proxy.

In yet another implementation traffic flow can be between the client side proxy and the origin servers e.g. content server via the Internet and or between the client side proxy and the server side proxy e.g. proxy server .

The download optimization engine of the mobile device in one embodiment can include a download detector an information acquisition module and an adjustment module . In some embodiments the download optimization engine further includes an optimized local cache . The information acquisition module includes a user information module A and can further include a device properties module B. Additional or less modules or components can be included in the download optimization engine . Depending on the implementation one or more of the components can be consolidated into a single component and or a single component can be further divided into multiple components.

According to some embodiments the download optimization engine can perform media file download optimization such as adjusting size and or range of progressive downloading or performing selective size download in chunks or adjusting streaming requests based on information acquired by module e.g. when application A pauses playing or becomes minimized to reduce unnecessary power data and or other resource consumptions on the mobile device while maintaining functionalities and user experiences of the applications e.g. application A .

Specifically in one embodiment the download detector of the engine can detect one or more requests for streaming or downloading portions of a media file sent from the application A. Example requests include streaming requests such as RTP or RTMP messages or progressive downloading requests such as HTTP 1.1 206 messages. The download detector can include one or more typical state machines to detect or identify such media downloading or streaming requests and or traffic. In some embodiments the download detector can be a portion of the traffic recognizer .

The information acquisition module of the engine can acquire information that is specific to a user of the mobile device . Specifically the user information module A gathers user specific information which includes user activities such as playing pausing stopping closing fast forwarding rewinding putting in the background or bringing back to the foreground sharing with other users tagging sharing in social networks or other viral marketing social activities and or minimizing a browser application or a media player e.g. application A that is responsible for playing back the media. In one embodiment the user information module A monitors OS e.g. an Android system application programming interface API and or system calls to gather information on mobile applications A N such as pause play how many bytes played or media format information.

The user specific information can also contain behavioral information including for example the user s favorite media files most frequently played files most recently played files. Behavioral information can also include time information so that the favorites or frequently played files can be sorted by for example all time this month this week etc. The favorite list of media files can be determined by the user s own selection and or can be determined by one or more heuristics. In some embodiments the user information module A can have user profiles each of which records behavioral information about a different user of the mobile device .

The information acquisition module can also gather device specific properties information. Specifically the optional device properties module B monitors the operating parameters of the mobile device which include for example wireless signal strength or channel conditions residual battery resource types of network connected and or network bandwidth consumption. Further example operating parameters can include video audio codec video frame rates or media compression bit rates. In some embodiments the information acquisition module comprises a part of the device state monitor of .

Then based on the acquired information the adjustment module of the engine can selectively adjust one or more requests for downloading or streaming portions of a media file. In one embodiment the requests e.g. from applications A N are progressive downloading requests and the adjustment module can revise a download size of the requests based on the information. In another embodiment the requests are streaming requests and the adjustment module can revise a streaming quality of the requests. According to one or more embodiments the adjustment module can also suspend resume the requests and or combine divide the requests based on the information. In some embodiments the adjustment module can select a compression ratio of the media file downloading streaming.

For instance mobile applications A N e.g. a web browser or a mobile application requests to progressively download a video clip from a third party website e.g. hosted by server A and application A has started playback of the video clip while the video clip continues to download from the server A to mobile device . Now if the user selects to pause the playback of the video clip while traditional progressive downloading would continue the download the optimization engine can use the adjustment module to for example pause the download until the user resumes the playback or to modify the download requests so that only a small or smaller portion of the video clip is downloaded before the user resumes the playback.

Further some embodiments of the adjustment module can modify a protocol of the requests. In some examples the optimization engine can transform streaming requests into progressive downloading requests based on the information. In accordance with some embodiments the adjustment module comprises a part of the protocol optimizer of . In other embodiments the optimization engine employs the adjustment module to adjust the requests when a network type is switched e.g. from a mobile telephony data network such as 4G LTE to a wireless fidelity network such as IEEE 802.11 N .

In addition the optimized local cache of the engine can selectively cache the one or more downloaded portions of the media file based on the information. Specifically the aforesaid behavioral information can server as a basis for the engine to determine what data if any to be stored in the local cache to facilitate media file download streaming optimization. For one example user s favorite portions of videos and or audios can be stored in the cache . In accordance with some embodiments the optimized local cache comprises a part of the local cache of .

Furthermore in accordance with some embodiments the download optimization engine can communicate with a download optimization proxy e.g. proxy on a remote server e.g. host server in performing the download streaming optimization. Specifically the download optimization proxy can receive messages from the optimization engine regarding the obtained information and can download the requested media file from the third party servers to the host server based on the obtained information. Then the download optimization proxy can deliver the media file to optimization engine if such delivery brings resource conservation or other benefits. For example the download optimization proxy and the download optimization engine can together modify TCP signaling between a client proxy e.g. client proxy and a server proxy e.g. server proxy in reducing end to end signaling. In addition optimization proxy together with the optimization engine can facilitate video audio optimization and or compression on the media file s to reduce necessary signaling and bandwidth consumption thereby conserving computing and power resources on the mobile device .

Moreover the host server of the server proxy and optimization proxy can also aggregate the acquired information from mobile device as well as from other similar devices. The aggregated information can be used to determine statistics among a plurality of users e.g. using the reporting and usage analytics system component which can be in turn used to determine a most favorite or a most frequently played list among the users. The global statistics and or the favorite lists can also be shared to the optimization engine of the mobile device to aid adaptive media file download streaming optimization and or selective caching in a similar way described above.

In this way among other advantages embodiments disclosed herein enable dynamic fine grained adjustment to the requests made by the client device based on user specific information and or device specific properties thereby reducing power and network resources consumptions avoiding redundant end to end signaling reducing network congestion and providing higher efficiency to the overall network.

The diagram A includes a mobile device . Mobile device may be mobile device of A or mobile device of although alternative configurations are possible. In this example the mobile device includes an application browser an operating system and a download optimization engine . The application browser sends an HTTP based Progressive download request to the download optimization engine which may be included as part of a client proxy and download optimization engine sends a request over a network e.g. Internet for selective size downloads from the destined server i.e. app server content provider .

The download optimization engine serves and or otherwise provides selective size downloads to the application browser and continues to fetch new data in selective size downloads as and when application browser completes playing the existing downloaded data. As shown the data associated with a file e.g. file X is received and processed in chunks e.g. chunk E F G and H . Each chunk can have different adaptive attributes based on the request for that chunk generated by the download optimization engine . Thus overall traffic can be reduced based on conditions of the mobile device and or the behavior of a user of the mobile device.

Additionally the download optimization engine maintains a small cache to cache favorite videos and replays when requested for. In this example media file Y is shown cached in an optimized local cache . The download optimization engine includes an intelligent caching algorithm that determines when if to cache media files. For example based on frequency of access by the application browser . Thus overall network traffic can be further reduced with the use of a local cache.

For example the application browser sends an HTTP based Progressive download request to the download optimization engine which may be included as part of a client proxy and download optimization engine sends a request over a network e.g. Internet for selective size downloads from the destined server i.e. app server content provider to the proxy server e.g. host server . As discussed above the proxy server downloads all the necessary data and relay appropriately to the download optimization engine in chunks e.g. E F G . . . .

In some embodiments the proxy server can optimize TCP signaling between the download optimization engine and the proxy server . This optimization contributes in reducing end to end signaling resulting in reduced signaling increased bandwidth enhanced battery life of the mobile device etc. Additionally in some embodiments various compression decompression techniques can be utilized between the download optimization engine and the proxy server to further reduce end end signaling.

First a download optimization engine e.g. engine engine employs a download detector e.g. detector to detect the requests for downloading or streaming one or more portions of content including a media file. The engine also employs an information module e.g. module module to acquire information that is specific to a user of the mobile device . The user specific information s acquisition can be performed using a user information module e.g. module A . In some embodiments the information module can further acquire operation parameters that is specific to the mobile device . The device user specific information s acquisition can be performed using a device properties module e.g. module B .

Next the engine selectively adjusts the requests based on the acquired information by using an adjustment module e.g. module module . In some embodiments the adjustment module can revise a download size or a streaming quality of the requests. In some embodiments the adjustment module can suspend and or resume the requests. In some embodiments the adjustment module can combine and or divide the requests. Additionally in some embodiments the adjustment module can modify a protocol of the requests.

Then in some embodiments the optimization engine selectively caches the one or more downloaded portions of the media file based on the acquired information.

First a download optimization engine e.g. engine engine employs an interceptor module to intercept requests initiated by applications and or browsers executing on the mobile device. As described herein a browser can also be considered an application. The engine also employs an information module e.g. module module to acquire information that is specific to a user of the mobile device . The user specific information s acquisition can be performed using a user information module e.g. module A .

The one or more request or data network requests can be any protocol request for real time or progressive downloads. For example the requests can be Hypertext Transfer Protocol HTTP requests Real Time Messaging Protocol RTMP requests Real time Transport Protocol RTP requests etc.

In some embodiments the information module can further acquire operation parameters that is specific to the mobile device . The device user specific information s acquisition can be performed using a device properties module e.g. module B . In some embodiments the information module can acquire user behavioral parameters. The behavioral parameters can include behavior of the user of the mobile device with respect to the streaming media files. For example the user behavior can be indicative of user behavior such as pausing stopping abandoning etc. media files. In some embodiments one or more Application Program Interface or system calls are generated to access and or otherwise acquire the information specific to the mobile device or the user of the mobile device. In some embodiments the acquired information can include real time parameter such as for example current battery levels selected user display preferences etc. In some embodiments the acquired information can include video audio codec information frame rates mobile channel conditions mobile signaling optimization settings parameters etc. In some embodiments the engine makes use of hypertext transfer protocol HTTP messaging. For example an HTTP 206 message is a partial content download message to download progressive videos and or audio in chunks. This information can also be used by the engine as part of the detection step.

Next the engine selectively adjusts or modifies the requests based on the acquired information by using an adjustment module e.g. module module . In some embodiments one or more of the requests associated with downloading or streaming the media files are adaptively modified based on acquired information specific to the mobile device or a user of the mobile device. In some embodiments the adjustment module can revise a download size or a streaming quality of the requests. In some embodiments the adjustment module can suspend and or resume the requests. In some embodiments the adjustment module can combine and or divide the requests. Additionally in some embodiments the adjustment module can modify a protocol of the requests.

As discussed in some embodiments the requests comprise data network requests initiated by mobile applications browsers executing on the mobile device. Thus the network traffic associated with or generated by the media files is adaptively modified as a result of the adaptive adjustment to the one or more data network requests. In some embodiment the engine further transmits or directs transmission via a radio of the mobile device of the one or more modified data network requests to a content server e.g. third party server to download or stream the media file. In some embodiments each media file is downloaded or streamed to the mobile device in multiple chunks and each chunk is received by the mobile device in response to a corresponding data network request. In some embodiments each chunk has one or more chunk characteristics that are determined based on the corresponding data network request. For example the chunk characteristics can include a download or display size that is adaptively selected based on the corresponding data network request a streaming quality that is adaptively selected based on the corresponding data network request etc.

In some embodiments adaptively modifying the one or more data network requests reduces overall network traffic in the mobile network occurring as a result of the one or more data network requests.

In some embodiments the optimization engine tracks the media files that are accessed by the user of the mobile device based on the requests. For example the engine can track the media files that are accessed by the user of the mobile device based on the data network requests identify a subset of the media files that are accessed by the user of the mobile device most frequently and cache cache the subset of the media files on the mobile device.

In some embodiments the optimization engine selectively caches the one or more downloaded portions of the media file based on the acquired information.

In the example of the computer system includes a processor memory non volatile memory and an interface device. Various common components e.g. cache memory are omitted for illustrative simplicity. The computer system is intended to illustrate a hardware device on which any of the components depicted in the example of and any other components described in this specification can be implemented. The computer system can be of any applicable known or convenient type. The components of the computer system can be coupled together via a bus or through some other known or convenient device.

The processor may be for example a conventional microprocessor such as an Intel Pentium microprocessor or Motorola power PC microprocessor. One of skill in the relevant art will recognize that the terms machine readable storage medium or computer readable storage medium include any type of device that is accessible by the processor.

The memory is coupled to the processor by for example a bus. The memory can include by way of example but not limitation random access memory RAM such as dynamic RAM DRAM and static RAM SRAM . The memory can be local remote or distributed.

The bus also couples the processor to the non volatile memory and drive unit. The non volatile memory is often a magnetic floppy or hard disk a magnetic optical disk an optical disk a read only memory ROM such as a CD ROM EPROM or EEPROM a magnetic or optical card or another form of storage for large amounts of data. Some of this data is often written by a direct memory access process into memory during execution of software in the computer . The non volatile storage can be local remote or distributed. The non volatile memory is optional because systems can be created with all applicable data available in memory. A typical computer system usually include at least a processor memory and a device e.g. a bus coupling the memory to the processor.

Software is typically stored in the non volatile memory and or the drive unit. Indeed for large programs it may not even be possible to store the entire program in the memory. Nevertheless it should be understood that for software to run if necessary it is moved to a computer readable location appropriate for processing and for illustrative purposes that location is referred to as the memory in this paper. Even when software is moved to the memory for execution the processor typically make use of hardware registers to store values associated with the software and local cache that ideally serves to speed up execution. As used herein a software program is assumed to be stored at any known or convenient location from non volatile storage to hardware registers when the software program is referred to as implemented in a computer readable medium. A processor is considered to be configured to execute a program when at least one value associated with the program is stored in a register readable by the processor.

The bus also couples the processor to the network interface device. The interface can include one or more of a modem or network interface. It will be appreciated that a modem or network interface can be considered to be part of the computer system. The interface can include an analog modem isdn modem cable modem token ring interface satellite transmission interface e.g. direct PC or other interfaces for coupling a computer system to other computer systems. The interface can include one or more input and or output devices. The I O devices can include by way of example but not limitation a keyboard a mouse or other pointing device disk drives printers a scanner and other input and or output devices including a display device. The display device can include by way of example but not limitation a cathode ray tube CRT liquid crystal display LCD or some other applicable known or convenient display device. For simplicity it is assumed that controllers of any devices not depicted in the example of reside in the interface.

In operation the computer system can be controlled by operating system software that includes a file management system such as a disk operating system. One example of operating system software with associated file management system software is the family of operating systems known as Windows from Microsoft Corporation of Redmond Wash. and their associated file management systems. Another example of operating system software with its associated file management system software is the Linux operating system and its associated file management system. The file management system is typically stored in the non volatile memory and or drive unit and causes the processor to execute the various acts required by the operating system to input and output data and to store data in the memory including storing files on the non volatile memory and or drive unit.

Some portions of the detailed description may be presented in teens of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of operations leading to a desired result. The operations are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the methods of some embodiments. The required structure for a variety of these systems will appear from the description below. In addition the techniques are not described with reference to any particular programming language and various embodiments may thus be implemented using a variety of programming languages.

In alternative embodiments the machine operates as a standalone device or may be connected e.g. networked to other machines. In a networked deployment the machine may operate in the capacity of a server or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment.

The machine may be a server computer a client computer a personal computer PC a tablet PC a laptop computer a set top box STB a personal digital assistant PDA a cellular telephone an iPhone a Blackberry a processor a telephone a web appliance a network router switch or bridge or any machine capable of executing a set of instructions sequential or otherwise that specify actions to be taken by that machine.

While the machine readable medium or machine readable storage medium is shown in an exemplary embodiment to be a single medium the term machine readable medium and machine readable storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium and machine readable storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the presently disclosed technique and innovation.

In general the routines executed to implement the embodiments of the disclosure may be implemented as part of an operating system or a specific application component program object module or sequence of instructions referred to as computer programs. The computer programs typically comprise one or more instructions set at various times in various memory and storage devices in a computer and that when read and executed by one or more processing units or processors in a computer cause the computer to perform operations to execute elements involving the various aspects of the disclosure.

Moreover while embodiments have been described in the context of fully functioning computers and computer systems those skilled in the art will appreciate that the various embodiments are capable of being distributed as a program product in a variety of forms and that the disclosure applies equally regardless of the particular type of machine or computer readable media used to actually effect the distribution.

Further examples of machine readable storage media machine readable media or computer readable storage media include but are not limited to recordable type media such as volatile and non volatile memory devices floppy and other removable disks hard disk drives optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs etc. among others and transmission type media such as digital and analog communication links.

Unless the context clearly requires otherwise throughout the description and the claims the words comprise comprising and the like are to be construed in an inclusive sense as opposed to an exclusive or exhaustive sense that is to say in the sense of including but not limited to. As used herein the terms connected coupled or any variant thereof means any connection or coupling either direct or indirect between two or more elements the coupling of connection between the elements can be physical logical or a combination thereof. Additionally the words herein above below and words of similar import when used in this application shall refer to this application as a whole and not to any particular portions of this application. Where the context permits words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word or in reference to a list of two or more items covers all of the following interpretations of the word any of the items in the list all of the items in the list and any combination of the items in the list.

The above detailed description of embodiments of the disclosure is not intended to be exhaustive or to limit the teachings to the precise form disclosed above. While specific embodiments of and examples for the disclosure are described above for illustrative purposes various equivalent modifications are possible within the scope of the disclosure as those skilled in the relevant art will recognize. For example while processes or blocks are presented in a given order alternative embodiments may perform routines having steps or employ systems having blocks in a different order and some processes or blocks may be deleted moved added subdivided combined and or modified to provide alternative or subcombinations. Each of these processes or blocks may be implemented in a variety of different ways. Also while processes or blocks are at times shown as being performed in series these processes or blocks may instead be performed in parallel or may be performed at different times. Further any specific numbers noted herein are only examples alternative implementations may employ differing values or ranges.

The teachings of the disclosure provided herein can be applied to other systems not necessarily the system described above. The elements and acts of the various embodiments described above can be combined to provide further embodiments.

Any patents and applications and other references noted above including any that may be listed in accompanying filing papers are incorporated herein by reference. Aspects of the disclosure can be modified if necessary to employ the systems functions and concepts of the various references described above to provide yet further embodiments of the disclosure.

These and other changes can be made to the disclosure in light of the above Detailed Description. While the above description describes certain embodiments of the disclosure and describes the best mode contemplated no matter how detailed the above appears in text the teachings can be practiced in many ways. Details of the system may vary considerably in its implementation details while still being encompassed by the subject matter disclosed herein. As noted above particular terminology used when describing certain features or aspects of the disclosure should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics features or aspects of the disclosure with which that terminology is associated. In general the terms used in the following claims should not be construed to limit the disclosure to the specific embodiments disclosed in the specification unless the above Detailed Description section explicitly defines such terms. Accordingly the actual scope of the disclosure encompasses not only the disclosed embodiments but also all equivalent ways of practicing or implementing the disclosure under the claims.

While certain aspects of the disclosure are presented below in certain claim forms the inventors contemplate the various aspects of the disclosure in any number of claim forms. For example while only one aspect of the disclosure is recited as a means plus function claim under 35 U.S.C. 112 6 other aspects may likewise be embodied as a means plus function claim or in other forms such as being embodied in a computer readable medium. Any claim intended to be treated under 35 U.S.C. 112 6 begins with the words means for . Accordingly the applicant reserves the right to add additional claims after filing the application to pursue such additional claim forms for other aspects of the disclosure.

