---

title: Two tier multiple sliding window mechanism for multidestination media applications
abstract: Some media applications use media that contains multiple types of media components in it and media sources with access to this media must send each type of media component to one or more media rendering destination devices. Furthermore there may be multiple destinations that can receive a particular type of media component and the media must be received at each destination without losses. This invention describes a two tier packet buffer structure at the media source with primary and virtual packet buffers that ensures minimal memory use at the media source and minimal network use. Furthermore the use of a sliding window with each virtual packet buffer associated with each destination, independently keeps control and track of destination state, ensuring the correct receipt of media data at each destination.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09288263&OS=09288263&RS=09288263
owner: Blackfire Research Corporation
number: 09288263
owner_city: San Francisco
owner_country: US
publication_date: 20140915
---
This application is a continuation of U.S. patent application Ser. No. 13 561 030 titled TWO TIER MULTIPLE SLIDING WINDOW MECHANISM FOR MULTIDESTINATION MEDIA APPLICATIONS filed on Jul. 28 2012 the entire specification of each of which is incorporated herein by reference. This application also claims the benefit of and priority to U.S. provisional patent application Ser. No. 61 512 924 filed Jul. 29 2011 entitled Techniques for broadcasting media over a local network to multiple destinations the entire specification of each of which is incorporated herein by reference.

The present invention is directed to network communications and to digital media sourcing transmission and rendering.

The present invention is directed to media applications that use media containers media files or media streams that contain multiple types of media components in it and that use a media source with access to this media to send each type of media component to one or more media rendering destination devices. Each such media destination is tailored to receive one of these media components. Furthermore there may be multiple destinations that can receive a particular type of media component. For example a media application might use a media file with one video media component and one stereo audio media component and want to send this to two video rendering devices and four stereo audio devices. In such applications firstly it is important to avoid duplicating media data stored and manipulated in the media source in order to avoid wasting media source memory. Secondly it is important to avoid retransmitting the same media data over a network to avoid wasting network bandwidth.

In addition the present invention is directed to media applications that need to send media to multiple destinations where the network link has a high likely hood of losing media data and it is necessary to recover from such data loses and provide the destinations with correct data. To do this it is necessary to maintain independent data receipt status at the media source for each destination and to retransmit data that is needed by each destination appropriately.

In addition the present invention is directed to media applications that need to control the overall media transfer rate to each of these multiple destinations independently.

This invention describes a two tier buffer structure at the media source with primary media packet buffers and virtual media packet buffers. There is one primary media packet buffer for each media component type. Each primary media packet buffer has a set of one or more virtual media packet buffers associated with it. Each virtual packet buffer is also associated with one of the media destination devices that take a media component type that is the same as the media component type in the primary media buffer. Media packets of a particular media component type are only placed in one primary media packet buffer. Each virtual media packet buffer associated with this primary buffer gets a reference to this media packet and a reference counter in the media packet is used to track how many entities are using this packet.

Furthermore this invention describes a sliding window mechanism with each virtual buffer that controls the transmission of media packets to the associated media destination. The size of each sliding window affects the number of packets that may be in transit and therefore determines the packets that may be in transit independently to each destination device.

This design uses multiple buffers and references to media packets to minimize memory use at the media source and uses multiple sliding windows on multiple virtual buffers to minimize network traffic while guaranteeing the correct receipt of media data at each destination.

Today there are many forms of digital media many types of digital media sources many types of digital media playback rendering systems and lots of ways of connecting media sources to media playback systems.

Digital media hereafter referred to as media comes in many forms formats and containers including Digital Video Disks media files and media streams. The media contents can be audio video images or meta data media components and various combinations of each. For example a popular audio format is known as MP3 and a popular video format is H264. MP3 is an audio specific media format that was designed by the Moving Picture Experts Group MPEG as part of its MPEG 1 standard and later extended in the MPEG 2 standard. H264 is a standard developed by the International Organization for Standardization ISO International Electrotechnical Commission IEC joint working group the Moving Picture Experts Group MPEG . Movies are typically multimedia formats with a video and multiple audio channels in it. For example a 5.1 movie contains 1 video channel media component and 6 audio channels audio components . 5.1 is the common name for six channel surround sound multichannel audio systems.

Digital media sources include media devices such as Digital Video Disk players Blu ray players computer and mobile devices and internet based cloud media services. Blu ray Disc BD is an optical disc storage medium developed by the Blu ray Disc Association. Internet based media services include services such as Netflix and Spotify . Netflix is a media service and trademark of Netflix Inc. Spotify is a media service and trademark of Spotify Ltd. Digital media playback media rendering destinations systems include computer based devices laptops and smartphones as well as network audio and video devices. A SmartTV is an example of a digital media rendering device that can play media from an internet cloud based media service such as Netflix A SmartTV which is also sometimes referred to as Connected TV or Hybrid TV is used to describe the integration of the internet and Web features into modern television sets and set top boxes as well as the technological convergence between computers and these television sets I set top boxes. An internet radio device is another example of a digital media rendering device.

The connectivity between these media sources and devices is varied but is evolving over time towards network based connectivity using IP protocols. This is because IP connectivity is convenient ubiquitous and cheap. IP stands for Internet Protocol. An IP networked device is a device that adheres to the Internet Protocol suite standard. The Internet Protocol suite is defined by the Internet Engineering Task Force IETF standards body. The Internet is a global system of interconnected computer networks that use the standard Internet Protocol IP suite.

IP networks come in many forms the most prevalent being Ethernet based wired IP networking. Ethernet is a family of computer networking technologies for local area networks LANs that is standardized as IEEE Institute of Electrical and Electronics Engineers Standard 802.3. In recent years with the prevalence of mobile computing devices Wi Fi has become the most popular means for connecting network devices wirelessly. Wi Fi is a trademark of the Wi Fi Alliance and a brand name for products using the IEEE 802.11 family of standards. A Wi Fi network is a type of IP network.

The convenience and benefits of IP networking means that all of these media sources and playback systems if not already network enabled are becoming network enabled. Many Blu ray players now have Ethernet and Wi Fi network connectivity. Today most higher end TVs are smart TVs that have network capability. Similarly audio play back devices and even radios are network and internet enabled.

Mobile devices such as mobile phones tablets readers notebooks etc. are able to receive and store media and have powerful media audio and video capabilities and are connected to the internet via cell phone data services or broadband links such as Wi Fi that are high bandwidth and can access online media services that have wide and deep content.

The use cases or applications of these various forms of digital media media services and media sources and playback systems have been evolving. Initially it was enough to connect a media source to a media destination over an IP network. This is widely used today with Internet based media source services such as Netflix and a computer as a media destination. Users watch Netflix movies streamed over a wired IP network the internet to a computer. This is a case of a single point one IP source to single point one IP destination connection over a wired IP network. Even though the Netflix media service may send the same media to multiple households each of these is a single point to single point connection TCP IP connection. A further evolution of this is to use a wireless Wi Fi connection instead of a wired Ethernet connection. This is still a single point to single point connection.

The applications targeted in this invention are for a further extension of the above use cases where the media source connects to multiple destinations rather than a single destination. These are single point one IP source to multi point multiple IP destinations applications. An example would be where a user is playing a 5.1 movie media file to a wireless video playback device and 6 independent wireless audio destinations making up a full 5.1 surround sound system. In this case the media is going from one media source to 7 media destinations simultaneously. In another example a user is playing music from one media source to 6 audio playback systems placed around the home in 6 different rooms.

In both of these cases it is necessary to play render the media at all destinations time synchronously. Furthermore it is necessary to limit the use of resources at the media source such as keeping memory use to a minimum. In addition it is necessary with multiple devices receiving media to manage network bandwidth efficiently.

In some applications the video media may be rendered through one path for example a specialized hardware path and the audio may be rendered through a different network path. When different media components of the same media are going through different paths it is necessary to keep path delays path latency to a minimum. This is necessary to keep the different media components time synchronized. In these applications keeping media network transport latencies to a minimum is important.

Furthermore when the network is Wi Fi network packet losses can be high and it is necessary to mitigate these in order to deliver uninterrupted playback.

The general structure of these application are that of multiple IP networked media source devices choosing connecting and playing media to one or more IP networked media playback devices over an IP communication network.

Referring to both and a media source device can be any variety of computing devices that can originate digital media including computers e.g. desktop notebook tablet handheld mobile devices e.g. smart phone electronic book reader organizer devices as well as set top boxes and game machines . The media is any form of digital media including audio or video images data and or Meta data.

Media destination devices are devices that can receive digital media over an IP network and play this media. This includes IP enabled audio and or video and or imaging devices that can render audio or video or images or combinations of these at the same time. Media destination devices include computers e.g. desktop notebook tablet handheld mobile devices e.g. smartphones tablets notebooks network enabled TVs network enabled audio devices . If the media is audio playing the media means rendering the audio such that a user can listen to the audio. If the media is video playing means rendering the video such that a user can view the media. If the media includes both audio and video it means rendering both the audio and the video. If the media is images playing means displaying these images on a screen. In this description media destination devices may also be referred to as media renderers or combinations of these terms.

In the media environment of the present invention each media source can send its media to a selected set of media destination devices for playback.

The network and all networks used and described in this invention to connect all devices including the media sources with the media destinations may be any network that supports an IP protocol. This includes any wired IP connectivity mechanism including Ethernet if wired and if wireless it includes any wireless IP connectivity mechanism including Wi Fi. If this is a Wi Fi network then the network may include a Wi Fi access point AP or Wi Fi router that manages the network in infrastructure mode. Alternatively the network may be using Wi Fi Direct Wi Fi Direct is a standard of the Wi Fi Alliance in which case the AP may not be present. The IP network may also be connected to the internet through a wide area network connection . The source may also have a remote device associated with it such as a remote control device connected via an IP or other communication link . In addition the source or network may have additional optional devices such as a NAS Network Attached Storage device that provides media.

IP networks can use several different types of messaging including unicast multicast and broadcast messaging. Messaging being the sending of IP packets.

Unicast messaging is a type of Internet Protocol transmission in which information is sent from only one sender to only one receiver. In other words Unicast transmission is a one to one node transmission between two nodes only. In unicasting each outgoing packet has a unicast destination address which means it is destined for a particular destination that has that address. All other destinations that may hear that packet ignore the packet if the packet s destination address is not the same as that destination s address. Broadcast is a type of Internet Protocol transmission in which information is sent from just one computer but is received by all the computers connected on the network. This would mean that every time a computer or a node transmits a Broadcast packet all the other computers can receive that information packet. Multicast is a type of Internet Protocol transmission or communication in which there may be more than one sender and the information sent is meant for a set of receivers that have joined a multicast group the set of receivers possibly being a subset of all the receivers. In multicasting each multicast packet is addressed to a multicast address. This address is a group address. Any destination can subscribe to the address and therefore can listen and receive packets sent to the multicast address that it subscribed to. The benefit of multicasting is that a single multicast packet sent can be received by multiple destinations. This saves network traffic if the same packet needs to be sent to multiple destinations. When the same data needs to be sent to multiple IP destinations generally Broadcasting or Multicasting rather than Unicasting provides the most efficient use of the network.

In this description the terms Broadcast and Multicast may be used. In both Broadcasting and Multicasting when messages are sent they are received by multiple destinations. Therefore in the present specification the terms Broadcast and Multicast may be used interchangeably to refer to one packet being received by multiple destinations. In some cases this description only says the media is sent or transmitted without specifying whether it is broadcast multicast or unicast. In this case it means any one of these methods may be used for sending or transmitting the media.

In this description the terms Message and Packet are often used and may be used interchangeably. A Packet is a data set to be sent or received on an Internet Protocol network. The Packet may or may not be the same as an Internet Protocol Packet . A Message refers to the logical information contained in such a packet. In this description the term Segment may also be used to refer to a data set. A data set is a set of bytes of data. Data may be any type of data including media or control or informational data. In this description the term data and packet may also be used interchangeable depending on context. Packet refers to a data set and data refers to data in general.

Many IP protocols are accessed from software programs via a Socket application programming interface. This Socket interface is defined as part of the POSIX standard. POSIX is an acronym for Portable Operating System Interface which is a family of standards specified by the IEEE for maintaining compatibility between operating systems.

Currently when the same media data needs to be sent to multiple network destinations the general technique for doing so is to use data multicasting to the multiple destinations that need to receive the data.

In such a system the media is multicast to all the destinations and it is up to each destination to attempt to render the media appropriately. If during rendering there is an error where a renderer does not receive new media data or does not receive it correctly the renderer may render erroneous data and then attempt to recover and continue correct media rendering from the point after the error when correct data is received. For example during rendering of a H264 stream if there is an incidental data drop out the displayed image may pixilate briefly and then recover.

In the applications envisioned here there is a need to send media from a source to multiple media devices such as TV and speakers in the same listening and viewing space. Furthermore there is a need to send this media over a wireless network such as Wi Fi.

For these applications this means all of the media rendering devices such as speakers that are in the same listening or viewing zone need to be precisely synchronized to each other so the listener and or viewer does not discern any unintended media experience.

Secondly because the media is transported over wireless there is a very high likely hood of a media error where the media is not received at each destination reliably or uniformly. If using broadcast or multicasts to send packets the same broadcast or multi cast packet may be received at one destination but not received heard by another destination.

In order to synchronize the rendering of all media destinations this invention uses a technique as described in U.S. patent application Ser. No. 11 627 957.

In this invention in order to broadcast media over a Wi Fi network it is first necessary to recognize that broadcast or multicast media will not be received at all destinations uniformly. Some destinations will receive a multicast packet while others will not.

IP networks were first designed to operate over wired networks. By design the packet communications on these networks were best effort . This means any packet transmitted on the network may not be received by the intended destination. This is most often due to a collision where another device starts to communicate at the same moment as the device of interest thereby causing a collision. Another method of loss would be the devices in the network path such as routers simply dropping the packet for example due to the lack of buffer space. Other reasons for loss could be that the wired line is simply noisy and the packet transmission got corrupted though this is rare for the wired case vs. the wireless case.

In all these wired situations it is generally the case that if the transmission for example a multicast message was received by one device on a subnet or wire all the other devices on the same wire or subnet also receive the transmission correctly. This is because in the wired case the noise or interference situation of a device on one part of the wire is not so different from the noise situation at another part of the wire. If the wired devices are connected via a switch rather than a hub the same issues are true the amount of noise or interference is minimal.

However when using Wi Fi the situation is more complex. In wireless the noise standing wave reflection situation can change from inch to inch. Each device on the same subnet does not see the same RF environment as another device right next to it. This means that any transmission again for example a multicast message will be received very differently at each Wi Fi device in the same network even if they are right next to each other.

This invention describes a mechanism for broadcasting data to multiple destinations and guaranteeing receipt at each destination.

One method of doing broadcasts with guaranteed receipt at each destination would be to use separate TCP connections to each destination. In this case each TCP link would maintain a TCP packet buffer at the source for each destination copy packets that are to be sent into each buffer and then use a TCP type sliding window mechanism to send the packets to each destination. An example of this is shown in . Here a source is setup to send media packets to multiple destinations numbered 1 through N set a and 1 through M set z . In this example each set of destinations consist of multiple devices that take the same type of data. So in this example set a may be N stereo audio devices that take stereo audio data while set z may be N video devices that take video data and render it. The media data is sent to each destination using TCP with a TCP connection to each device. As explained previously with TCP this means there is a TCP data buffer at the source of each TCP connection and a data buffer at each TCP destination . The data packets put into the TCP data source buffer are sent to each respective TCP destination if the TCP source sliding window will allow it. The sliding window allows a certain number of packets to be sent beyond the last one that was acknowledged as received by the TCP destination . As packet receipts are acknowledged by the TCP destination the back of the sliding window moves forward which will then allow additional packets to be sent. While this system will work it is very wasteful of system resources. Firstly it is wasteful of memory at the source as each packet of a particular data type selected by a demultiplexer destined for devices of data type a is duplicated in each TCP source buffer for each TCP link . Secondly this system is very wasteful of network resources as each packet is sent multiple times at least once for each TCP connection to each destination device . In the previous example if there were 4 stereo audio destinations type a and two video destinations type z each audio packet would be transmitted at least 4 times on the network and each video packet would be transmitted at least 2 times on the network. This is of course very wasteful of network resources as it requires 4 times the stereo audio bandwidth and 2 times the video bandwidth of a single audio and single video system. The source memory use and network bandwidth use increases proportionally to the number of destination devices .

In such a system as shown in outgoing packets of a particular type separated out by a demultiplexer are queued to be sent in an outgoing queue . Packets are then multicast out onto the network . Each multicast packet is received by all destinations and the destination accepts the packet if it is part of the multicast address. In this case all packets sent from queue on link which are destined for destination set a are addressed to multicast address a and all packets sent from queue on link which are destined for destination set z are addressed to multicast address z .

So as in the previous example if destination device set a is stereo audio devices and destination device set z is video devices then stereo audio packets destined for device set a are only present in one buffer at the source and are only sent on the network once. Similarly video packets are only buffered in one place and sent once. However with this system there is no means to individually monitor the receipt status of packets and retransmit them if needed. In this system if destination number 1 receives packet number 5 and another destination numbered N in the same set a does not receive packet number 5 in its buffer then that packet is lost to destination number N.

This system saves media source memory space and is not wasteful of network traffic but it does not keep track of or aid in ensuring all packets are received at their target destinations.

Therefore this invention uses a system with a two tier architecture and multiple sliding windows as shown in .

This invention targets applications where media is being sent from a media source to many destination devices where the destination devices can be grouped into subsets that take the same type of data. For example an application may consist of two video TV devices that take H264 video data and four stereo audio player devices that take 16 bit stereo audio data. In this case the optimum solution would be for the media source to send one set of video packets that are received by both video devices and one set of 16 bit stereo audio data that is received by all 4 audio devices.

This system contains primary buffers common collections where packets are put into for sending to the destinations . Each primary buffer holds packets of a particular data type destined for a specific device set. A demultiplexer selects separates which packets go in which primary buffer based on data type. Packets to be sent to a destination are separated by data type and placed into the appropriate primary buffer .

Each packet see which shows more details of has a packet identifier PID that is unique for each packet and is incremented from the previous packet put into the collection . Note only shows detail for the primary buffer in and virtual buffers however the detail is the same for the primary buffers and virtual buffers shown in . Also the discussion may only refer to primary buffer and virtual buffers however the discussion also applies in the same way to primary buffers and virtual buffers . Each packet also has a references number r that is used to keep track of the number of references to it. In addition each packet also has a time stamp t that is used to keep track of its age. Each packet also of course contains media data of a particular type.

The system also contains a virtual queue for each of the destinations in the system. The virtual queue does not contain packets instead it contains a virtual packet that points to a packet in the common collection . As shown in the packet may not actually be located in the common collection but instead may reside somewhere else with the common collection only having a pointer to where each packet actually resides in memory.

As each packet is added into the common collection for sending a reference to it is also added to each virtual queue and the references number in the packet in the common collection is set to the same as the number of virtual queues that have references to the packet.

Periodically each virtual packet queue is processed for selecting packets to be sent to the destinations. A packet is selected for sending based on a virtual queue output PID see which points to the next packet to send and the end of the sliding window . If the output PID points to a packet that is beyond the end of the sliding window end PID then no more packets from that virtual queue can be sent at the present. If the output PID is not beyond the end of the sliding window end PID the virtual packet reference of the packet is then used to get to the packet in the common collection . This packet is then selected for sending and the output PID in the virtual output queue is incremented once it is selected for sending. Note that even though the packet at the output PID is selected for sending the reference to this packet remains in the virtual output queue as this packet may need to be resent.

All packets selected for sending are placed in the output queue for sending to destinations. This is done by adding a reference to the packet in the common collection in the output queue and incrementing the packets reference counter . If the output queue already has a reference to a packet that has the same PID as the packet that is about to be placed in the output queue the packet is not placed in the output queue . This allows multiple virtual queues and their respective destinations to need the same packet but only have the system send this packet out once to all destinations if they are being multicast from the output queue .

If the packets are being unicast to each destination they are unicast to each destination associated with the virtual packet queue that the packet was selected from.

The output queue is processed periodically to multicast each packet in the queue onto the network. As each packet is multicast the reference to it is removed from the output queue and the packets reference count is decremented.

Each destination will periodically or a periodically send an acknowledgement to the source . In the acknowledgement is information on the highest consecutive PID received the LastPID. The destination keeps track of the consecutive PIDs it received since the start of communication. This is used by the source to remove all virtual packets in the virtual queue for that destination that have PIDs that are lower than or equal to this LastPID. When packets are removed if the window start PID of the sliding window point to packets that have been removed the sliding window window start PID is incremented until it points to a packet in the virtual queue that has not been removed. If this causes the window start PID to be incremented a total of K counts the window end PID of the sliding window is also incremented by K counts. This allows more packets to now be sent before they will hit the new window end PID of the sliding window .

The effect of this is that each sliding window for a virtual buffer associated with a destination is a count of the packets that are in transit to that destination. The larger this sliding window size is the more packets that can be in transit to this destination. The smaller this size of this window the fewer packets can be in transit.

In a Wi Fi network each Wi Fi transmission consists of an uplink message from the transmission source to the AP and a downlink transmission from the AP to the final transmission destination. In this case the downlink from the Access Point to each destination can have different RF conditions. The downlink to one destination may be operating at a low bit rate due to distance while the downlink to a second destination may be operating at a high bit rate. Therefore the transmission to each destination will need to have different rates. Using a sliding window per destination allows the transmission rate to be set per destination .

For each packet removed from a virtual queue or output queue if applicable the references number in the packet in the common collection is decremented. If this reference number is zero after decrementing it means no packet queue virtual packet queues or the output queue reference this packet any more. This is because all destinations that could receive this packet have acknowledged this packet as being received. Therefore if the reference number is zero the packet is discarded from the common collection .

A separate garbage collection process may also be present that will periodically check the common collection queue . When packets are put in the common collection queue the packet time stamp t in the packet is updated with the current time. During garbage collection the age of each packet is computed by subtracting the packets time stamp from the current time. If the packets age is older than a maximum age threshold the packet is discarded and all references to it in all virtual queues and output queue are removed.

During operation each destination will periodically send the source a list of missing PIDs. These are PIDs of packets it never received. The source will on receipt of this list of missing PIDs retransmit packets from the virtual packet queue that have PIDs that match the PIDs in the list of missing PID list to the destinations . This will be done by going through the virtual queue for that destination and finding the missing PIDs and adding these missing PIDs to the output queue . The packets in the output queue are multicast to destinations as mentioned above. This means that if several destinations and virtual queues select a packet with the same PID to be resent it is resent only once. The destination may also send missing packet notifications a periodically.

This two tier architecture with a primary queue for each data type and multiple virtual queues for multiple destinations using the same data type and where each virtual queue maintains destination state with independent sliding windows and where a common output queue eliminates duplicate transmission ensures minimal memory use and minimal network traffic while providing retransmission services to each destination to ensure packet receipt.

The present invention has been described in particular detail with respect to several possible embodiments. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. First the particular naming of the components capitalization of terms the attributes data structures or any other programming or structural aspect is not mandatory or significant and the mechanisms that implement the invention or its features may have different names formats or protocols. Further the system may be implemented via a combination of hardware and software as described or entirely in hardware elements. Also the particular division of functionality between the various system components described herein is merely exemplary and not mandatory functions performed by a single system component may instead be performed by multiple components and functions performed by multiple components may instead be performed by a single component.

Some portions of above description present the features of the present invention in terms of methods and symbolic representations of operations on information. These descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations while described functionally or logically are understood to be implemented by computer programs. Furthermore it has also proven convenient at times to refer to these arrangements of operations as modules or by functional names without loss of generality.

Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as determining or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system memories or registers or other such information storage transmission or display devices.

Certain aspects of the present invention include process steps and instructions described herein in the form of a method. It should be noted that the process steps and instructions of the present invention could be embodied in software firmware or hardware and when embodied in software could be downloaded to reside on and be operated from different platforms used by real time network operating systems.

The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer. Such a computer program may be stored in a tangible computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards application specific integrated circuits ASICs or any type of media suitable for storing electronic instructions and each coupled to a computer system bus. Furthermore the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.

The methods and operations presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may also be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will be apparent to those of skill in the art along with equivalent variations. In addition the present invention is not described with reference to any particular programming language. It is appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein.

The present invention is well suited to a wide variety of computer network systems over numerous topologies. Within this field the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network such as the Internet public networks private networks or other networks enabling communication between computing systems.

The applications this invention are directed at that may be described above and any objects of this invention that are described above do not fully describe all the applications and objects of this invention and these descriptions are not intended to be limiting in any way or manner.

Finally it should be noted that the language used in the specification has been principally selected for readability and instructional purposes and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly the disclosure of the present invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

