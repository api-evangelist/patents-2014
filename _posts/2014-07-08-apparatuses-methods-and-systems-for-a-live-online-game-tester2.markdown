---

title: Apparatuses, methods and systems for a live online game tester
abstract: A method for testing a new feature of an online gaming application is provided, including: receiving a gaming application request from a user; determining whether to add the user to a live test for a new game feature; if the user is added to the live test, then determining whether to assign the user to a test group or a control group; if the user is assigned to the test group, then, providing a gaming application including the new game feature enabled, evaluating gaming activity and social network activity of the user; if the user is assigned to the control group, then, providing the gaming application without the new game feature enabled, evaluating gaming activity and social network activity of the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09566523&OS=09566523&RS=09566523
owner: Zynga Inc.
number: 09566523
owner_city: San Francisco
owner_country: US
publication_date: 20140708
---
This application claims priority as a continuation of U.S. patent application Ser. No. 13 686 765 filed on Nov. 27 2012 entitled Apparatuses Methods and Systems for a Live Online Game Tester which claims priority as a continuation of U.S. patent application Ser. No. 13 244 693 filed on Sep. 26 2011 entitled Apparatuses Methods and Systems for a Live Online Game Tester which claims priority under 35 USC 119 to U.S. patent application Ser. No. 12 895 759 filed on Sep. 30 2010 entitled Apparatuses Methods and Systems for a Live Online Game Tester which claims priority under 35 USC 119 to U.S. provisional Patent Application Ser. No. 61 247 562 filed. Oct. 1 2009 entitled Automated Evaluation of Customer Service Requests Related to Online Games and Social Networks U.S. provisional Patent Application Ser. No. 61 247 560 filed Sep. 30 2009 entitled Virtual Security Camera for Electronically Mediated. Games U.S. provisional Patent Application Ser. No. 61 277 948 filed Sep. 30 2009 entitled Live Testing of Online Games and U.S. provisional Patent Application Ser. No. 61 247 525 filed Sep. 30 2009 entitled Engagement Tracking and Game Modification. 

The entire contents of the aforementioned applications are herein expressly incorporated by reference.

The instant application is related by subject matter to the following applications U.S. Pat. No. 8 241 116 B2 issued Aug. 14 2012 entitled. Apparatuses Methods and Systems for a Live Online Game Tester Including Choosing Additional Subjects From Co Users if Needed U.S. non provisional patent application Ser. No. 12 895 749 filed Sep. 30 2010 entitled Apparatuses Methods and Systems for a Virtual Security Camera U.S. non provisional patent application Ser. No. 12 895 731 filed Sep. 30 2010 entitled Apparatuses Methods and Systems for a Customer Service Request Evaluator and U.S. non provisional patent application Ser. No. 12 895 774 filed Sep. 30 2010 entitled Apparatuses Methods and Systems for an Engagement Tracking Game Modifier .

The entire contents of the aforementioned applications are herein expressly incorporated by reference.

The present invention is directed generally to apparatuses methods and systems for user online behavior monitoring and more particularly to Apparatuses Methods and Systems For a Live Online Game Tester.

Users may interact online with each other using Internet social gaming applications. Services like social networks allow users to connect and communicate with one another. Such services also allow users to play games with others online. Users impart a great amount of sensitive information in such social networks.

The APPARATUSES METHODS AND SYSTEMS FOR AN ONLINE BEHAVIOR MONITOR OBM transform user social gaming behavioral pattern data via various OBM components into online social gaming experience customizations.

In one embodiment to process a virtual security clearance request the OBM may obtain user online gaming pattern data including gaming actions and their associated timestamps user online social activities and their associated timestamps and virtual security clearance evaluation rules. The OBM may generate a social gaming activity timeline using the gaming actions social activities and timestamps. By applying the virtual security clearance evaluation rules to the social gaming activity timeline the OBM may calculate evaluation scores. The OBM may compare the evaluation scores to the evaluation score thresholds to generate virtual security clearance flags and may determine whether any virtual security clearance flags were generated based on the comparison. The OBM may upon determining that no virtual security clearance flags were generated obtain user online gaming action input and user gaming environment data and generate updated user gaming environment data using the user online gaming action input.

In one embodiment upon receiving a customer service request from a user the OBM may obtain for processing the customer service request user social graph data identifying co users social networking action identifiers and associated social networking action timestamps user online gaming action identifiers and associated gaming action timestamps and customer service request evaluation rules and associated request evaluation score thresholds. The OBM may generate social gaming activity timelines for the user and the co users using the gaming action identifiers social networking action identifiers and timestamps. The OBM may generate a social gaming activity thread for the user using the social gaming activity timelines. The OBM may calculate customer service request evaluation rule scores by applying the customer service request evaluation rules to the social gaming activity thread and compare each customer service request evaluation rule score to its associated request evaluation score threshold to generate request evaluation flags. The OBM may determine whether to process the customer service request based on whether any request evaluation flags were generated.

In one embodiment the OBM may provide in response to a gaming app request from a user a gaming app including a test game feature for the user. The OBM may obtain user social graph data identifying co users of the user. The OBM may also obtain online gaming pattern data for the users and the co users including gaming action identifiers and their associated gaming action timestamps user online social activity data for the users and the co users including social networking action identifiers and their associated social networking action timestamps and game feature adoption evaluation instructions. The OBM may generate social gaming activity timelines for the users and the co users using the gaming action identifiers and the associated gaming action timestamps as well as the social networking action identifiers and the associated social networking action timestamps. The OBM may also calculate and provide game feature adoption scores by applying the game feature adoption evaluation instructions to the generated social gaming activity timelines.

In one embodiment the OBM may generate individual social gaming activity timelines for a group of users within a geographical region using user online gaming pattern and social activity data. The OBM may calculate individual time varying activity level graphs for the users as well as an aggregate activity level graph. The OBM may identify an activity trough in the aggregate activity level graph and an event in the geographical region corresponding to the activity level trough. Based on keywords corresponding to the event the OBM may obtain product results from a product database. The OBM may identify a subset of the users whose individual time varying activity level graphs include an activity level trough during the activity level trough in the aggregate activity level graph and may provide an advertisement for a product from the product results for the identified subset of the users.

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and or detailed. As such a detailed discussion of reference number would be found and or introduced in . Reference number is introduced in etc.

Users exhibit identifiable behavioral characteristics using Internet social gaming applications. The user behavioral characteristics in Internet social gaming applications may be affected by the characteristics of the virtual social gaming environment and the personal characteristics of the users.

In some implementations examples of suspicious user online social behavior may be represented by a social graph or a transaction graph. More suspicious user online social behavior shown in some examples by a shallow social graph may include a user with numerous friends where none of the user s friends have a relationship with one another. In contrast a cohesive social graph exemplifies less suspicious online social behavior and shows a user with numerous friends all of whom possess some relationship with another. For example a user s friends may belong to similar groups exchange messages with another and or the like. In these examples a user s friends may be connected with one another by various degrees of separation. In other implementations the number of interconnected relationships between a user and a user s friends may affect the level of suspicion associated with the user s online social behavior. In other implementations the types of relationships between a user and or user s friends may affect the level of suspicion associated with the user.

In other implementations examples of more suspicious user online social behavior may be shown in a broken loop transaction graph . In a broken loop transaction graph a user is on the receiving end of multiple closed social loops. For example a highly suspicious example of user online behavior may include a user receiving dozens of gift transactions from other various users. Further to the previous example in other implementations a user s online social behavior may be even more suspicious if none of the users sending a gift to the user have a relationship with one another . In contrast a looped transaction graph shows less suspicious user online social behavior. In a looped transaction graph a user may be involved in numerous open social loops. For example a user may receive various favors from other users and in response may send gifts and or friend gestures to each one of those users. Some of these graphs may be discerned by examining users friend lists and building link topologies graphs. In one embodiment a users direct friends may be traversed to discern if they each in turn have additional friends. Friends that do not further have their own friends may then be counted as having negative values e.g. while friends that in turn have friends and in turn have other friends may be given positive values e.g. 1 for each recurring leg. A total count may be developed and thresholds e.g. total values greater than 0 may be used to mark a graph as suspicious.

In suspicious social behavior examples are shown according to a user s location according to a gaming social networking service a user s social activity. For example in a less suspicious example a user may transmit a number of messages to a social networking service one of which indicating they are leaving for Europe in a few days . After a few days the user accesses the social network through a server in Europe and submits an image of themselves to the social network service . In other implementations more suspicious social behavior may include abrupt and or unannounced changes in a user s social activity patterns. For example a user may access a social networking service in South America at 3 PM Pacific Standard Time and then at 6 PM Pacific Standard Time the user accesses the social network in another part of the world e.g. Australia etc. 

In some implementations the user may provide input e.g. to the client device indicating that the user desires to utilize an application e.g. a game provided by the social gaming network. In response the client may generate a gaming app request and provide the gaming app request e.g. to an OBM server e.g. gaming server . For example a browser application executing on the client may provide on behalf of the user a Secure Hypertext Transfer Protocol HTTP S GET message for a HyperText Markup Language HTML page wherein the HTML page includes JavaScript commands to embed an Adobe Flash object including an application for the user in the HTML page. An exemplary HTTP S GET message that may be provided by a browser executing on the client to request an HTML page is provided below 

In response to the app request the OBM may identify a gaming server to which to redirect the gaming app request received from the client. Upon identifying the gaming server to process the user s request the OBM may provide a user session request to the identified gaming server. For example the server receiving the user app request may provide a HTTP S POST message requesting acknowledgment from the identified gaming server that it will process the user s gaming app request. For example the HTTP S POST message may include in its message body the user ID client IP address etc. and a request for user session acknowledgment. An exemplary user session request HTTP S POST message including user session request details encoded in the eXtensible Markup Language XML format is provided below 

The identified gaming server may receive the server s user session request and may provide a user session acknowledgment to the server. For example the gaming server may provide a HTTP S POST message confirming the user ID client IP address etc. and providing an acknowledgment message in the body of the HTTP S POST message. An exemplary user session acknowledgment HTTP S POST message including user session acknowledgment is provided below 

In some implementations upon receiving the gaming server s user session acknowledgment the server receiving the user s app request may provide a URL redirection message to the client. The URL redirection message may include a Uniform Resource Locator URL of the identified gaming server and may indicate to the client that the client redirect the gaming app request to the identified gaming server. For example with reference to the exemplary HTTP S GET gaming app request message provided by the client the load balancing server may respond by providing a HTTP S REDIRECT 300 message similar to the exemplary message provided below 

Upon receiving the URL redirection message the client may provide the gaining app request e.g. similar to the gaming app request first sent to the OBM to the identified gaming server. In response the gaming server may generate a gaming app query e.g. for a gaming app e.g. and provide the gaming app query e.g. to a game database e.g. . In response the game database may provide the gaming app e.g. an Adobe Flash object to the gaming server. For example the gaming server may execute a PHP script including SQL commands to query the game database and obtain the gaming app. An exemplary listing written substantially in the form of PHP SQL commands illustrating substantive aspects of querying the game database for the gaming app is provided below 

In some implementations the gaming server may create a new instance of a user session e.g. for the user utilizing the app e.g. create a data structure in memory storing a game state of the app for the user and store the initialized user state data structure in the gaining environment database e.g. . The gaming server may then provide the client with the app e.g. for presentation to the user. For example the gaming server may provide a HTML page including a reference to an Adobe Flash object including a user application e.g. stored on the gaming server. An exemplary HTML code listing including JavaScript commands referencing an Adobe Flash object within the HTML page is provided below 

Upon obtaining the app the client device may execute the app for presentation to the user e.g. . For example with reference to the examples above a web browser executing on the client device may render the HTML web page and may communicate with the gaming server to download the Adobe Flash object. An Adobe Flash browser plug in installed on the client device and operating in conjunction with the browser may play execute the downloaded Flash object for presentation to the user.

Upon obtaining the user credentials the server may query a user profile database to determine whether the user is authenticated to use the app. For example the server may implement a PHP script including commands to query a user profile database for user authentication details and may compare the authentication details obtained via querying the database with the user entered credentials. If the user is authenticated e.g. option Yes the gaming server may query e.g. a game database for an app to provide for the user based on the details of the user s app request. The server may provide the retrieved app for the user to the client device using e.g. an IP address for the client device included in the app request message originally provided by the user. The client upon obtaining the app may execute if required e.g. Option Yes any installation procedures e.g. required to install the app on the client device. The client may then interpret an initial session state as provided by the app e.g. e.g. execute the instructions provided by the app and render a display for the user e.g. via a display device of the user. For example the client may obtain a Shockwave Flash .swf object from the server and may invoke an Adobe Flash web browser plug in to process and display the .swf object for the user.

In some implementations the client device and gaming server may generate a session e.g. for the user client to facilitate secure communications between the client and the server. For example an Adobe Flash object running within a browser environment on the client may include ActionScript 3.0 commands to create a Secure Sockets Layer SSL connection with a server e.g. and the server may be implementing a PHP script implementing a SSL socket server Which listens to incoming communications on a server port to which the client device sends data as described previously. Upon generating the session with the client the gaming server may provide e.g. e.g. using PHP SQL commands such as described in the example above the details of the session to a gaming environment database including but not limited to gaming server ID user ID user name app name app ID socket ID socket expiry time socket bandwidth communication protocols security protocols communication priority level and or the like. Upon receiving the session details the gaming environment database may store the session details for later use.

In some implementations the gaming server may generate a secure communications session with the client in order to facilitate communication during the user gaming experience between the client and gaming server. As an example the app may provide data stored on the client device for the gaming server as user game input e.g. . For example an Adobe Flash object running on the client may include ActionScript 3.0 commands to create a Secure Sockets Layer SSL connection with a server generate a message including a JSON encoded data structure such as illustrated in the example above and send the message via the secure SSL connection to the server. Exemplary commands written substantially in the form of ActionScript 3.0 to create a secure SSL connection to a server load data from a locally stored JSON encoded data file and send a message including the JSON encoded data via the SSL connection to the server are provided below 

In some implementations the gaming server may be executing a PHP to script implementing a Secure Sockets Layer SSL socket server which listens to incoming communications on a server port to which the client device may send data e.g. data encoded according to the JavaScript Object Notation JSON format. Upon identifying an incoming communication the PHP script may read the incoming message from the client device parse the received JSON encoded text data to extract information from the JSON encoded text data into PHP script variables and store the data e.g. user gaming input user session state and or extracted information in a relational database accessible using the Structured Query Language SQL . An exemplary listing written substantially in the form of PHP SQL commands to accept JSON encoded game input data from a client device via a SSL connection parse the data to extract variables and store the data to a database is provided below 

In some implementations the gaming server may require clearance from various OBM components prior to servicing the user s gaming input. For example a social gaming behavior evaluator component e.g. may be implementing a virtual security camera e.g. customer service request evaluator e.g. live online game tester e.g. engagement tracking game modifier e.g. and or other processes that may provide or withhold clearance to the gaming server to process the user s gaming input. In such implementations the gaming server may generate a clearance request e.g. and provide the clearance request e.g. to the social gaming behavior evaluator component. For example the gaming server may provide a HTTP S POST message including the clearance request and data e.g. user s gaming input that the social gaming behavior component requires to process the clearance request. An exemplary HTTP S POST clearance request message is provided below 

In some implementations the social gaming behavior evaluator may provide a clearance acknowledgment message e.g. indicating that the gaming server is cleared to process the user s gaming input provided by the user as part of the user s interaction with the gaming app. For example the social gaming behavior evaluator may provide a HTTP S POST message similar to the example provided below 

In some implementations the gaming server may require to service the user s requests while utilizing the app game rules and or require environment data related to the user s current gaming environment e.g. what are the cards being held by the other players in a game of poker what are the actions of the members of the user s mafia etc. . The gaming server may utilize the environment data e.g. as stored in gaming realm database s and the user s gaming input to compute an updated user session state for the client e.g. representing change of the state of the game actions of the game player co player s within the game etc. . For example a gaming realm database may store environment data including but not limited to user session state s such as the exemplary illustrative JSON encoded user session state data structure provided below 

In some implementations the gaming server may utilize the a game ID of the game in progress to query its gaming realm database to identify the user IDs of the users involved in the game and identify IP addresses of the gaming realm database s storing the user session states of the identified users. The gaming sever may utilize the above data to generate e.g. environment queries for the user session states required to process the user s gaming input. The gaming server may then query e.g. the identified gaming realm database s for the user sessions states of the users. For example the gaming server may utilize PHP SQL commands similar to the exemplary illustrative commands provided below 

Upon obtaining the user sessions states for the players in the game the gaming server may compute a new session state s for the user s e.g. . The gaming server may save the new session state s for the user s to the gaming realm database e.g. . For example the gaming server may utilize PHP SQL commands similar to those illustrated in the example above with regard to storing gaming input data in the gaming realm database. In some implementations the gaming server may provide results of the computation for the client. For example the gaming server may generate a data structure representative of a scalable vector illustration e.g. a Scalable Vector Graphics SVG data file such as render data e.g. . The data structure may include for example data representing a vector illustration. An exemplary vector illustration data structure an XML encoded SVG data file written substantially according to the World Wide Web Consortium s SVG standard and including data for an example vector illustration comprising a circle an open path a closed polyline composed of a plurality of line segments and a polygon is provided below 

The gaming server may provide the render data via one or more HTTP S POST messages and or using an SSL connection with the client e.g. as illustrated in examples provided above in this disclosure. Upon obtaining the render data the client may render e.g. the visualization represented in the data structure for display to the user e.g. . For example the client may be executing an Adobe Flash object within a browser environment including ActionScript 3.0 commands to render the visualization represented in the data structure and display the rendered visualization for the user. Exemplary commands written substantially in a form adapted to ActionScript 3.0 for rendering a visualization of a scene within an Adobe Flash object with appropriate dimensions and specified image quality are provided below 

In some implementations the social gaming behavior evaluator may withhold clearance for processing the user s gaming input and instead provide a Constraint of Service CoS order e.g. indicating that the gaming server is not cleared to process the user s gaming input provided by the user as part of the user s interaction with the gaming app. For example the social gaming behavior evaluator may provide a HTTP S POST CoS message similar to the example provided below 

In such implementations the gaming server may obtain the CoS order parse the CoS order e.g. to determine further action. In some implementations the CoS order may specify user s that need to be locked out of the OBM. The gaming server may in response delete e.g. the user sessions states of the locked out users e.g. by issuing PHP SQL commands to the gaming environment database. The gaming server may also based on parsing the order generate warnings notices complaints reports and or the like and provide e.g. the generated outputs to the user client law enforcement supervisors of the OBM etc. For example the gaming server may utilize PHP commands similar those presented below 

The client may obtain warnings complaints reports notices etc. sent by the gaming server. The client may interpret the received messages e.g. and display e.g. them for the user e.g. via an Adobe Flash object issuing ActionScript 3.0 commands as illustrates in examples above.

In some implementations the gaming server may upon obtaining the user client data state generate a clearance request e.g. using the obtained user client data state. For example the gaming server may provide a clearance request to obtain clearance to process the user s gaming input pertaining to the user and the co users who are included in the game realm in which the user is playing. The gaming server may provide the clearance request e.g. for example via one or more HTTP S POST messages to a social gaming behavior evaluator e.g. the example social gaming behavior evaluation component discussed below with reference to . The social gaming behavior evaluator may e.g. 10008 1010 determine whether to provide a clearance acknowledgment message e.g. option Yes or a Constraint of Service CoS order e.g. option No . If the social gaming behavior evaluator provides a CoS order e.g. the gaming server may obtain the CoS order and parse the CoS order to determine its further procedures. For example the gaming server may parse a CoS order formatted according to the JSON encoding standard using PHP commands as described in examples above with reference to .

In some implementations if the CoS order requires generating user warnings for one or more users e.g. option Yes the gaming server may parse the CoS order to determine the user ID s to which the warnings need to be directed and the content of the warning message s e.g. . The gaming server may generate the required warnings using the parsed user ID s and warning message s content e.g. and provide e.g. the user warning message s e.g. using the mail PHP command as illustrated previously. In some implementations if the CoS order requires generating reports complaints and or legal notices for one or more users and or other OBM affiliated entities e.g. option Yes the gaming server may parse e.g. the CoS order to determine the user ID s of the user to whom the reports complaints legal notices etc. are related. The gaming server may also determine based on the parsing the content of the reports complaints legal notices etc. The gaming server may query e.g. the gaming environment database for the user profiles game status and or other gaming environment data related to the user ID s . The gaming server may provide e.g. these user profiles for e.g. law enforcement security personnel supervisory personnel etc. The gaming server may also generate the required warnings using the content obtained from parsing the CoS order e.g. . The gaming server may then provide e.g. the generated reports complaints legal notices etc. using for example the mail PHP command as illustrated previously. In some implementations if the CoS order requires that one or more users be locked out of the OBM e.g. option Yes the gaming server may parse the CoS order to determine the user ID s of the user to be locked out e.g. . The gaming server may then terminate e.g. the user sessions corresponding to the user ID s e.g. using the example gaming session termination component described with reference to . In some implementations the gaming server may further modify update e.g. the user profile s of the user s so that the user s cannot login again e.g. permanent lock out temporary lock out lock out until user performs a remedial action such as paying a fine signing an agreement agreeing to gaming restrictions etc. . The gaming server may provide e.g. the updated user profile s for storing in the gaming environment database e.g. .

In some implementations if the social gaming behavior evaluator provides a clearance acknowledgment e.g. the gaming server may generate queries for environment data e.g. stored in gaming realm database s pertaining to the user and the co users who are included in the game realm in which the user is playing. The gaming realm database may provide e.g. the requested gaming environment data. For example the gaming realm database may provide environment data including but not limited to user session state s such as the exemplary illustrative JSON encoded user session state data structures provided in the examples above. The server may utilize the environment data for the user s provided by the gaming realm database as well as the user s gaming input to compute e.g. an updated user session state for the client e.g. representing change of the state of the game actions of the game player co player s within the game etc. . The gaming server may provide the updated user session state e.g. for the gaming environment database and may also provide the computed updated user session state for the client e.g. . In some implementations the server may provide render data e.g. an XML encoded SVG data file via one or more HTTP S POST messages and or using an SSL connection with the client e.g. as illustrated in examples provided above in this disclosure. Upon obtaining the render data the client may render e.g. the visualization represented in the data structure for display to the user e.g. for example using ActionScript commands within an Adobe Flash object .

In some implementations the evaluation server may parse e.g. the received evaluation rules and determine the social gaming data required to process the evaluation rules for the user e.g. . For illustration the evaluation server may parse the example XML encoded rule illustrated above and determine that it requires social gaming threads for the user and the co users of the game in order to process the evaluation rule based on parsing the tag of the evaluation rule. The evaluation server may generate requests for data as specified by the evaluation rule. In some implementations the evaluation rule may require the evaluation server to obtain the rules of the game identified by the game ID. The evaluation server may generate and issue a game rules request e.g. via PHP SQL commands to a game database e.g. for the rules governing the game play within the game identified by the game ID. In response the game database may provide e.g. the request game rules e.g. as XML encoded data similar to the example XML encoded evaluation rules provided above. In some implementations the evaluation rule may require that the evaluation server identify the co users of the game identified by the game ID of the user e.g. the example evaluation rule provided above requires the evaluation server to determine the social gaming thread for the co users of the game thus requiring the evaluation server to identify the co users of the game . In such implementations the evaluation server may issue a query e.g. via PHP SQL commands to a relational database for the gaming environment of the game identified by the game ID. For example the evaluation server may issue a game environment request e.g. to the gaming environment database e.g. for the game environment data for all co users who are participating in the game identified by the game ID. For example the gaming server may utilize PHP SQL commands similar to the exemplary illustrative commands provided below 

As another example the gaming environment database may have stored a table including a list of game IDs and lists of co user IDs associated with each of the game IDs in the table and the evaluation server may query the gaming environment database for the list of users corresponding to the identified game ID. In response to the evaluation server s queries the gaming environment database may provide the requested environment data e.g. for the evaluation server. The evaluation server may parse if needed the environment data to extract the user ID s of the user s playing the game e.g. . In some implementations the evaluation rule may require the evaluation server to obtain the gaming patterns of the users of the game e.g. for a predetermined period of time. The evaluation server may in response issue a gaming patterns request e.g. to a gaming behavior database e.g. . For the example the evaluation server may issue PHP SQML commands to query the gaming behavior database for the gaming patterns data. In some implementations the evaluation server may provide the gaming environment data obtained from the gaming realm database and or gaming patterns data updated using the gaming environment data for the gaming behavior database in order to update the gaining patterns data stored in the gaming behavior database. In response to the gaming patterns request the gaming behavior database may provide the requested gaming patterns data e.g. as database records for the identified user IDs associated with the game ID of the game e.g. . In some implementations the evaluation rule may require the evaluation server to obtain social activity data e.g. activity of the user and or co users of the game on a social networking service e.g. Facebook Twitter etc. . In such implementations the evaluation server may issue e.g. via PHP SQML commands a social patterns request e.g. to a social behavior database e.g. . In response the social behavior database may provide the requested social patterns data e.g. for the evaluation server e.g. as records from the database . For example the records may include fields such as but not limited to user ID friend ID s friend relationship strength s social activity timestamp s message ID s message s and or the like and or the like. In some implementations the evaluation server may determine that the social patterns data from the social behavior database if not sufficient e.g. using social activity timestamps to determine that the data available does not cover the entire time period required by the evaluation rule data is outdated data is incomplete etc. . In such implementations the evaluation server may query a social networking server e.g. a Facebook server providing a service utilized by the user and his her friends for social data e.g. new social activity request . For example the evaluation server may invoke an application programming interface API call to the social networking server. The evaluation server may request that the user log in to the social networking service to provide the evaluation server access to the user s social data. For example the evaluation server may provide an HTML page to the client including authentication commands similar to the exemplary illustrative listing provided below 

The evaluation server may then generate and provide a request for social data including but not limited to user ID friend ID s friend relationship strength s social activity timestamp s message ID s message s and or the like. For example the evaluation server may execute PHP commands similar to those in the exemplary illustrative listing provided below 

In response the social networking server may query e.g. social data request its own database e.g. social activity database and obtained the requested data from its database e.g. social data . The social networking server may provide the retrieved information for the evaluation server e.g. new social activity . For example the social networking server may provide a JavaScript Object Notation format JSON encoded data structure embodying the requested information. An exemplary JSON encoded data structure embodying social data e.g. user ID s of friends of the logged in user is provided below 

In some implementations the evaluation server may utilize the social patterns data from the social behavior database and the new social activity data from the social networking server to generate updated social patterns data records for the social behavior database. The evaluation server may e.g. via PHO SQL commands issue orders to update the social behavior database using the updated social activity patterns data records. In some implementations the evaluation server may parse the data for the social and gaming activities of a user and identify activity timestamps associated with each of the social and or gaming actions of the user. The evaluation server may utilize the activity timestamps to generate a social gaming activity timeline for the user to process the evaluation rule. The evaluation server may generate a timeline for each user that whose actions are required to be analyzed to process the evaluation rule. The evaluation server may in some implementations also parse each of the activities of a user to determine the co user at whom the activity was directed e.g. to whom did the user send the message to whom did the user provide a gift . The evaluation server may then generate social gaming threads e.g. for each user that include data on the user s activities and their associated activity timestamps as well as activities of co users at whom the user s actions were directed and their associated timestamps e.g. wherein the activities of the user and co users are combined and arranged in reverse chronological order .

In some implementations upon generation of the social gaming activity timeline and or social gaming thread for the user the evaluation server may apply the processing procedures prescribed in the evaluation rule to the social gaming activity timeline s and or social gaming thread s . For example in the exemplary evaluation rule provided in the example above the social gaming server may search the user s social gaming thread for social loops e.g. favor gift virtual currency transaction etc. from the user to a co user and a return favor gift virtual currency transaction etc. from the co user to the user and determine a percentage of co users with whom the user creates completed social loops. In some implementations the evaluation server may generate a score for an evaluation rule and compare the score against threshold value s . For example the exemplary evaluation rule presented above prescribes a 25 minimum threshold for the percentage of co users with whom the user has completed social loops below which the evaluation rule will require generation of a rule violation flag by the evaluation server. The evaluation server may implement such a procedure to process each evaluation rule assigned to the game being played by the user and generate evaluation rule scores and or flags as dictated by the evaluation rules. If a flag is generated and or if an evaluation scores does not adhere to a prescribed threshold the evaluation server may generate warnings complaints reports legal notices etc. for providing the user co user s supervisory personnel security personnel law enforcement agencies and or the like. The evaluation server may generate a clearance acknowledgment message e.g. a HTTP S POST message including JSON encoded data if all evaluation rules are satisfied or may generate a Constraint of Service CoS order e.g. a HTTP S POST message including JSON encoded data if any of the evaluation rules are violated and or flags are generated based on processing of the evaluation rules. The evaluation server may provide the clearance acknowledgment and or CoS order to the gaming server e.g. .

The evaluation server may obtain based on parsing the clearance request and or provided user gaming data session state a game ID of the game being played by the user e.g. . The evaluation server may a generate a request for evaluation rules using the game ID as a search parameter e.g. and provide the evaluation rule request e.g. for an evaluation rules database. In response the evaluation rules database may provide the requested evaluation rules e.g. . In some implementations the evaluation server may parse e.g. the received evaluation rules e.g. using PHP commands similar to the example above . The evaluation server may determine the social gaming data required to continue processing the evaluation rules for the user e.g. . The evaluation server may generate requests for data as specified by the evaluation rule. In some implementations the evaluation rule may require the evaluation server to obtain the game rules of the game identified by the game ID e.g. option Yes . If so the evaluation server may generate e.g. and issue a game rules request e.g. to a game database. In response the game database may provide e.g. the request game rules e.g. as XML encoded data similar to the example XML encoded evaluation rules provided above. In some implementations the evaluation server may require the gaining environment of the game being played by the user e.g. option Yes . The evaluation server may issue a game environment request e.g. to the gaming environment database using the game ID and or user ID as search terms in e.g. a PHP SQL command. In response the gaming environment database may provide the requested game environment data e.g. for the evaluation server. The evaluation server may parse if needed the environment data to extract the user ID s of the user s playing the game e.g. . In some implementations the evaluation server may determine that the rule requires the evaluation server to obtain the gaming patterns of the users of the game e.g. option Yes . The evaluation server may generate and issue a gaming patterns request e.g. to a gaming behavior database. In response to the gaming patterns request the gaming behavior database may provide the requested gaming patterns data e.g. for the identified user IDs associated with the game ID of the game. In some implementations the evaluation rule may require the evaluation server to obtain social activity data e.g. option Yes for a user. In such implementations the evaluation server may generate and issue e.g. a social patterns request e.g. PHP SQML commands to a social behavior database for the user s social activity data. In response the social behavior database may provide the requested social patterns data e.g. for the evaluation server. In some implementations the evaluation server may parse the social activity data and extract the timestamps from the social activity data obtained from the social behavior database. The evaluation server may compare the range of activity timestamps against the requirements of the evaluation rule which the evaluation server may obtain e.g. by parsing the evaluation rule . Based on the comparison the evaluation server may determine whether any additional e.g. new social data is needed e.g. social graph activity data etc. . If the evaluation server determines that additional social data is needed e.g. option Yes the evaluation server may query a social networking service utilized by the user and his her friends for social data e.g. . In response the social networking service may provide the requested social data for the evaluation server e.g. . The evaluation server may aggregate e.g. the social patterns data from the social behavior database and the social networking server to generate updated social patterns data records which the evaluation may provide for updating the social behavior database . The evaluation server may parse the data for the social and gaming activities of a user and identify activity timestamps associated with each of the social and or gaming actions of the user. The evaluation server may arrange the timestamps in e.g. reverse chronological order in a data structure e.g. SQL table with one column dedicated to activity timestamps . The evaluation may then include the social and or gaming data e.g. messages gaming actions currency transactions etc. as additional columns within the table associated with the activity timestamps column. Accordingly the evaluation server may generate a data structure e.g. SQL table representing a social gaming activity timeline for the user. The evaluation server may generate such a timeline for each user that whose actions are required to be analyzed to process the evaluation rule e.g. . The evaluation server may also generate a column in the data structure representing a co user at whom each activity in the user s social gaming activity timeline was directed at. Using the data e.g. in this column the evaluation server may generate a social gaming thread e.g. for each user for whom the evaluation server determines a social gaming thread is required for processing the evaluation rule. For example while generating the social gaming thread for a user the evaluation server may search through the social gaming activity timelines of each of the co users at whom the user has directed one or more actions in the user s social gaming activity timeline. The evaluation server may identify actions in the social gaming activity timelines of the co users that were directed back at the user and may parse these records in the co user social gaming activity timelines to determine whether their activities were made in response to or drew a response by way of the user actions in the user s social gaming activity timeline. The evaluation server may copy such identified records from the co user social gaming activity timelines and add them in to the social gaming thread of the user re arranging all the records in the user s social gaming thread in e.g. reverse chronological order.

In some implementations upon generation of the social gaming activity timeline and or social gaming thread for a user the evaluation server may apply the evaluation rules for the identified game ID to the social gaming activity timeline s and or social gaming thread s of the user. For example the evaluation server may obtain an evaluation rule e.g. . The server may parse the evaluation rule and determine the user ID of users whose activities are to be examined based on the evaluation rule e.g. . The server may utilize the user ID s to select and obtain the social gaining activity timelines and or social gaming threads for the identified user s e.g. . The evaluation server may apply the processing procedures described in the evaluation rule to the social gaming activity timelines and or social gaining threads of the user s e.g. . Based on the application of the evaluation procedures described in the evaluation rule the evaluation server may generate a score e.g. for each user for each evaluation rule. The evaluation server may also parse the evaluation rule and obtain threshold value s against which to compare the evaluation score s to determine whether to generate general rule violation Constraint of Service CoS flags e.g. . If the evaluation server generates any flags e.g. option Yes then the evaluation server may parse the evaluation rule to determine the outputs e.g. warnings notices complaints lock out orders etc. that the evaluation server needs to produce. The evaluation server may generate e.g. the required outputs based on the parsing of the evaluation rule e.g. in the example rule presented earlier for the instructions under the tag . The evaluation server may append the generated outputs to a CoS order e.g. and or provide the generated output s to the respective parties as specified in the evaluation rule. The evaluation server continues such a procedure until all the evaluation rules pertaining to the game and or user s have been applied e.g. option Yes . The evaluation server may determine whether any of the flags generated during the evaluation procedure were CoS flags e.g. flags for which CoS orders need to be sent and not clearance acknowledgments . If no CoS flags were generated e.g. option Yes the evaluation server may generate a clearance acknowledgment e.g. and provide the clearance acknowledgment e.g. for the gaming server. If CoS flags were generated e.g. option No then the evaluation server may provide e.g. the generated CoS order for the gaming server and or other component or affiliated entity that provided the clearance request.

In some implementations upon generation of the social gaming activity timeline and or social gaming thread for a user the evaluation server may apply the evaluation rules for the identified game ID to the social gaming activity timeline s and or social gaming thread s of the user. For example the evaluation server may obtain an evaluation rule e.g. . The server may parse the evaluation rule and determine the user ID of users whose activities are to be examined based on the evaluation rule e.g. . The server may utilize the user ID s to select and obtain the social gaming activity timelines and or social gaming threads for the identified user s e.g. . The evaluation server may apply the processing procedures described in the evaluation rule to the social gaming activity timelines and or social gaming threads of the user s e.g. . Based on the application of the evaluation procedures described in the evaluation rule the evaluation server may generate a score e.g. . for each user for each evaluation rule. The evaluation server may also parse the evaluation rule and obtain threshold value s against which to compare the evaluation score s to determine whether to generate general rule violation Constraint of Service CoS flags e.g. . If the evaluation server generates any flags e.g. option Yes then the evaluation server may parse the evaluation rule to determine the outputs e.g. warnings notices complaints lock out orders etc. that the evaluation server needs to produce. The evaluation server may generate e.g. the required outputs based on the parsing of the evaluation rule e.g. in the example rule presented earlier for the instructions under the tag . The evaluation server may append the generated outputs to a CoS order e.g. and or provide the generated output s to the respective parties as specified in the evaluation rule. The evaluation server continues such a procedure until all the evaluation rules pertaining to the game and or user s have been applied e.g. option Yes . The evaluation server may determine whether any of the flags generated during the evaluation procedure were CoS flags e.g. flags for which CoS orders need to be sent and not clearance acknowledgments . If no CoS flags were generated e.g. option Yes the evaluation server may generate a clearance acknowledgment e.g. and provide the clearance acknowledgment e.g. for the gaming server. If CoS flags were generated e.g. option No then the evaluation server may provide e.g. the generated CoS order for the gaming server and or other component or affiliated entity that provided the clearance request.

In some implementations the social gaming behavior evaluation component may generate a CoS order in response to being provided a user input e.g. option No . In such implementations the OBM e.g. a gaming server operating within the user gaming interaction component may e.g. parse the CoS order generate any reports notices warnings complaints etc. and provide them to the necessary authorities based on the instructions encoded into the evaluation rules. In some implementations the CoS order may include orders to constraint service provided to the user without locking the user s out from the OBM e.g. option No . In such implementation the OBM may continue processing the user inputs but the gaming environment of the user may be modified in accordance with the instructions provided in the CoS order. If the CoS order includes instructions to lock a user out e.g. option Yes the OBM may log the user out e.g. using a gaming session termination component such as the GST component discussed above with reference to .

As another example Sybil attack detection customer service request evaluation rule may require an evaluation server to utilize data pertaining to multiple users. The evaluation server may utilize the social and gaming pattern data for the multiple users to determine whether a single person is actually posing as the multiple users being evaluated under the Sybil attack detection rule. The evaluation server may process this evaluation rule by generation a social gaming timeline for each user and e.g. monitoring the geo location frequency of requests length of history of requests etc. of the multiple user to make a determination as to whether a Sybil attack is being carried out using the multiple user IDs. If the evaluation server generates flags while processing this evaluation rule the evaluation server may generate a CoS order providing notifications complaints etc. and locking out the multiple user IDs determined to form part of the Sybil attack.

As another example the evaluation server may process the automated request detection evaluation rule to determine whether customer service requests from a single or multiple user IDs are being generated automatically e.g. by a spambot . In such an example the evaluation server may obtain the social activity data pertaining to the single or multiple users and may generate a timeline for the single or multiple users social activity. The evaluation server may e.g. determine whether there have been isolated spikes of activity or continuous service requests originating from the user ID s to determine whether the user ID s are being used in automated service request generation. If the evaluation server generates flags while processing this evaluation rule the evaluation server may e.g. generate a CoS order instructing the gaming server to provide notices to the user s security personnel etc. and lock the user ID s out from the OBM.

As another example the evaluation server may process fraudulent request detection evaluation rule to determine whether customer service requests from a single user ID are fraudulently placed e.g. customer service request to replace million dollar worth of virtual poker chips because of glitch in client application etc. . In such an example the evaluation server may obtain the gaming pattern and social activity data pertaining to the single user and may generate a timeline for the users social gaming activity. The evaluation server may e.g. determine whether there was an abrupt disruption of social and or gaming activity and or whether the gaming environment data abruptly changed due to factors other than user input e.g. perhaps indicative of an actual software glitch . If the evaluation server e.g. generates CoS flags while processing this evaluation rule the evaluation server may e.g. generate a CoS order instructing the gaming server to provide complaints to security personnel law enforcement OBM supervisors etc. and lock the user ID s out from the OBM.

A another example the evaluation server may process a user action including a customer service request by determining how the user s social community behaved with the user. For example the OBM may determine the user s reputation based on how the user s co user e.g. from the user s social graph data interacted with the user were there broken social loops did many of the user s requests to friends go unanswered did co users flag the user as being fraudulent on a social networking service etc. . In such an example the evaluation server may obtain the gaming pattern and social activity data pertaining to the single user and may generate a timeline for the users social gaming activity as well as a social gaming thread for the user using the social gaming activity timelines of the co users of the user e.g. inferred from the user s social activities and or from the user s social graph . The evaluation server may also parse the social activity of the co users of the user to find any messages posted with regard to the user. The evaluation server may. for example run keyword searches through the social activity messages of the co user of the user to find any messages pertaining to the user. If the evaluation server e.g. generates CoS flags while processing this evaluation rule the evaluation server may e.g. generate a clearance acknowledgment attesting to the good reputation of the user and may prioritize accordingly any requests made by the user over other users e.g. those with lower reputation scores as calculated by the evaluation server.

In such implementations the customer service request next selected for processing by the OBM may be identified as the customer service request having the highest net customer service request priority value. In further implementations the OBM may utilize multiple queues for customer service requests such as the non limiting exemplary illustration in . In some implementations each queue may be assigned a queue priority weight relative to the other queues for customer service requests. In such implementations the net priority value of a customer service request may be weighted by the weight assigned to its customer service request queue 

In some such implementations the next customer service request selected by the OBM for processing among the customer service requests in all the queues may be the customer service request having the highest net customer service request priority value including the weighting assigned to each of the customer service request queues in the queue database.

In some implementations the OBM may determine that a user requesting a gaming app be added to the control group of the live online game test e.g. option No . In such implementations the may redirect the user s gaming app request to a gaming server that provides the user with a gaming app that does not include the new game feature. In such implementations the user may interact with the control gaming environment presented by the gaming app that does not include the new game feature e.g. using a user gaming interaction component such as the example UGI component described above with reference to . The OBM may perform an evaluation of the user s gaming and or social activity e.g. via a SGBE component in a manner similar to that performed by the SGBE component for the test users of the gaming app including the new game feature. The OBM may e.g. utilize a social gaming behavior evaluator such as the SGBE component to perform the evaluation of the user s and co users social gaming behavior generate evaluation score for the evaluation rules and generate reports based on the scores and flags generated by the evaluation. The OBM may append the generated report for the control user to an aggregated control group score record. If the OBM determines that more test subjects are needed e.g. option Yes the OBM may choose more control users using a combination of user selection or elimination strategies as described above.

Upon completion of the live online game test using a sufficient number of test and or control group users the OBM e.g. an evaluation gaming server may compare the test group score record to the control group score record e.g. . The OBM may generate a score comparison report based on the comparison e.g. and provide the score comparison report e.g. for a developer user interface designer game designer game producer etc.

In some implementations the OBM may identify a hurdle within a game that is causing the user to experience low engagement levels. For example each object within the gaming app may be assigned an object ID. The OBM may determine which object ID is associated with the game feature that the user is experiencing difficulty with. For example the OBM may utilize a social gaming behavior evaluator to generate a social gaming activity timeline of the user experiencing a low engagement level and identify a temporal e.g. stage within a game and or spatial e.g. pixel sub area within an Adobe Flash object position within the gaming app at which point the user tends to stop playing the game within a user session. In some implementations each object ID and or stage within a gaming app may have a difficulty weight associated with it. In some of these implementations the difficulty weight of the object ID and or stage may be modifiable during the user s gaming session. In some implementations the OBM may lower the difficulty weight associated with object ID and or stage identified as being the object ID and or stage at which the user tends to stop playing the game.

In some implementations the OBM may identify incentives that the OBM can provide for the user and or co users determined by the OBM to be likely to help the user achieve higher engagement levels. The OBM may provide incentives to encourage the user to re establish higher engagement levels within the game or may encourage the co users to contribute to increasing the user s engagement level. For example the OBM may obtain and or parse the user profiles and or social activity messages of the user and co users to identify keywords that the OBM can use in a search for virtual products to offer for sale to the user and or co users. The OBM may utilize the keywords to query a virtual product database for items that may be offered to the user and or co user. In some implementations the OBM may also utilize keywords related to the object ID within the app and or the stage of the game to query for items that may be offered for sale. The virtual product database may provide search results listing products for the OBM to offer to the user and or co users. The OBM may provide the virtual items in a flash sale for the user and or co users with an invitation to the co users to help the user overcome the hurdle in the user s game. For example the OBM may provide a message for a co user e.g. Jane needs help defeating the dragon. Buy from the items below at special discounted prices join Jane s game and use them to help her fight the dragon encouraging the co user to purchase an offered item and or join the user s gaming environment to help the user overcome the hurdle in the game. In some implementations the OBM may reduce the difficulty weight of the object ID and or game stage upon co users of the user accepting the invitation to join the user s game to help overcome the hurdle presented by the object ID and or game stage within the game. In some implementations the OBM may provide to co users that help the user rewards and or incentives within their own gaming apps and or offering further flash sales of items e.g. at discounted prices because the co users helped the user overcome the hurdle in the user s game. For example the OBM may reduce the difficulty weight for objects and or game stages within the co users gaming apps so as to improve their engagement levels within their own gaming apps. For example the OBM may calculate new difficulty weights for objects and or game stages in the gaming apps of the user and or the co users based on factors including but not limited to number of items sold in the flash sale connected to the invitation to help the user number of co users accepting the invitations to help the user amount of flash sales connected to the invitation to help the user and or the like. In some implementations upon the co users accepting the invitations the OBM may process the co users and user s sale item purchases e.g. using an online shopping system such as the OpenCart open source online shopping solution . The OBM may also inject the co users into the gaming environment of the user e.g. using a gaming session initialization such as the example GSI component .

In some implementations the OBM may e.g. utilize a social gaming behavior evaluator e.g. SGBE component to generate a social gaming activity timeline of the user and determine whether the user has progressed over the hurdle identified by the app object ID and or game stage. In some implementations the OBM may also determine whether the user requires any more help with the identified hurdle or any other hurdle the user may be experiencing within the game e.g. . If the OBM determines that the user needs more help e.g. option Yes the OBM may repeat a procedure similar to that discussed above for the user until the OBM determines that the user s engagement levels are comparable to historical levels for the user e.g. as determined using a social gaming behavior evaluator component.

In some implementations the OBM may identify a distinct geographical area e.g. . The OBM may e.g. identify a set of Internet Protocol IP addresses associated with the geographical area. Upon identifying a set of IP addresses associated with the area the OBM may determine a set of user IDs associated with geographical area e.g. based on querying the gaming environment databases using the identified IP addresses. The OBM may e.g. utilize a social gaming behavior evaluator component such as the example SGBE component to generate social gaming activity timelines for the identified user IDs e.g. . Further the OBM may generate a time varying activity level histogram e.g. for each user ID. For example the OBM may generate for each user ID a histogram with a period in time on the x axis and frequency of activity on the y axis. The OBM may generate a historical aggregate activity level graph by aggregating the histograms for the identified user IDs e.g. . The OBM may then identify troughs e.g. in the aggregate activity level graph e.g. by calculating a graph of the differentiation of the activity level graph with respect to time and identifying any negative spikes in the differentiation graph identifying time periods where activity level was below a threshold level or a threshold percentage of the historical average activity level etc. . The OBM may assign a trough ID to each of the identified troughs in the aggregate activity level graph e.g. . The OBM may in some implementations analyze the positions of the trough compared to the time of day in the geographical region and neglect eliminate e.g. activity troughs that are expected e.g. night time peak hours in work day etc. . The OBM may then analyze each activity trough remaining in the aggregate activity level graph.

In some implementations the OBM may select e.g. a trough identified by a trough ID. The OBM may identify a time of the activity trough e.g. . The OBM may initiate searches e.g. using news aggregators search engines etc. for events that occurred during the time period of the activity trough. For example the OBM may attempt to identify e.g. a local event e.g. an event that occurred within the geographical region during the period of the activity trough. The OBM may in some implementations attempt to identify e.g. a global event e.g. an event that occurred outside of the geographical region during the period of the activity trough. For example the OBM may aggregate the search results from a variety of news sources and analyze e.g. using keyword matching latent semantic indexing etc. the aggregated search results to identify any events recurring in the aggregated search results. Based on the analysis the OBM may identify a local event and or a global event or not identify any event during the time period of the activity trough. If the OBM does not find any local or global event e.g. option No the OBM may repeat the above procedure for a different activity trough if there are further activity trough identified for the geographical area e.g. option Yes . If there are no further activity troughs for the geographical area e.g. option No the OBM may repeat the above procedure for another geographical area if there are further geographical areas for which the OBM can perform the above procedure e.g. option Yes . If there are no further geographical areas for which to perform the procedure above e.g. option No the OBM may end the procedure.

In some implementations the OBM may find a local and or global event during an activity trough for the aggregate activity graph of users confined to a specific geographical area e.g. option Yes . In such implementations the OBM may identify keywords associated with a local event if any based on the results of the analysis e.g. using latent semantic indexing of the aggregated search results e.g. . The OBM may identify keywords associated with a global event if any based on the results of the analysis e.g. using latent semantic indexing of the aggregated search results e.g. . The OBM may utilize the keywords obtained from analyzing the aggregated search results to query a virtual product database for virtual items e.g. physical objects which may also include game incentives virtual objects to reduce the in game difficulty levels of objects and or game stages etc. that may be offered for sale for the users in the geographical area. For example the OBM may identify local items in the product database based on querying the database using keywords associated with the local event e.g. and global items in the products database based on querying the database using keywords associated with the global event e.g. . The OBM may aggregate the products search results based on the global keywords to a global products list.

Upon identifying items from the products database to offer for the users of the geographical area the OBM may identify e.g. the user IDs that had low individual activity levels during the period of the aggregate activity level trough e.g. using a SGBE component . In some implementations the OBM may offer the local items if any and global items from the aggregated list of global items if any for sale to the user IDs identified as having low activity levels during the aggregate activity level trough e.g. . For example the OBM may identify an IP address of a mobile device utilized by a user having low activity level during the aggregate activity level trough and send a message e.g. text message SMS e mail message tweet and or the like offering the items for sale e.g. at discounted prices combined with in game incentives etc. . In some implementations the OBM may identify anomalous users e.g. those who had normal high individual activity levels during the aggregate activity level trough e.g. . The OBM may in such implementations provide e.g. messages the identified users offering encouragement loyalty rewards in game credits and or the like. The OBM may in some implementations infer e.g. characteristics of users having normal high individual activity levels during an aggregate activity level trough e.g. male single student age group etc. . The OBM may generate keywords based on the inferred characteristics and query e.g. the products database based on the inferred characteristics keywords and obtain inferred products search results. The OBM may in some implementations provide such identified products for sale to the users exhibiting normal high individual activity levels during the aggregate activity level trough e.g. .

Typically users which may be people and or other systems may engage information technology systems e.g. computers to facilitate information processing. In turn computers employ processors to process information such processors may be referred to as central processing units CPU . One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and or data instructions containing and or referencing other instructions and data in various processor accessible and operable areas of memory e.g. registers cache memory random access memory etc. . Such communicative instructions may be stored and or transmitted in batches e.g. batches of instructions as programs and or data components to facilitate desired operations. These stored instruction codes e.g. programs may engage the CPU circuit components and other motherboard and or system components to perform desired operations. One type of program is a computer operating system which may be executed by CPU on a computer the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include input and output mechanisms through which data may pass into and out of a computer memory storage into which data may be saved and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval analysis and manipulation which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.

In one embodiment the OBM controller may be connected to and or communicate with entities such as but not limited to one or more users from user client devices peripheral devices an optional cryptographic processor device and or a communications network . For example the OBM controller may be connected to and or communicate with users operating client device s including but not limited to personal computer s server s and or various mobile device s including but not limited to cellular telephone s smartphone s e.g. iPhone Blackberry Android OS based phones etc. tablet computer s e.g. Apple iPad HP Slate etc. eBook reader s e.g. Amazon Kindle etc. laptop computer s notebook s netbook s gaming console s e.g. XBOX Live Nintendo DS etc. portable scanner s and or the like.

Networks are commonly thought to comprise the interconnection and interoperation of clients servers and intermediary nodes in a graph topology. It should be noted that the term server as used throughout this application refers generally to a computer other device program or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting clients. The term client as used herein refers generally to a computer program other device user and or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer other device program or combination thereof that facilitates processes information and requests and or furthers the passage of information from a source user to a destination user is commonly referred to as a node. Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a router. There are many forms of networks such as Local Area Networks 7 LANs Pico networks Wide Area Networks WANs Wireless Networks WLANs etc. For example the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.

The OBM controller may be based on computer systems that may comprise but are not limited to components such as a computer systemization connected to memory .

A computer systemization may comprise a clock central processing unit CPU s and or processor s these terms are used interchangeable throughout the disclosure unless noted to the contrary a memory e.g. a read only memory ROM a random access memory RAM etc. and or an interface bus and most frequently although not necessarily are all interconnected and or communicating through a system bus on one or more mother board s having conductive and or otherwise transportive circuit pathways through which instructions e.g. binary encoded signals may travel to effect communications operations storage etc. Optionally the computer systemization may be connected to an internal power source . Optionally a cryptographic processor may be connected to the system bus. The system clock typically has a crystal oscillator and generates a base signal through the computer systemization s circuit pathways. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be commonly referred to as communications. These communicative instructions may further be transmitted received and the cause of return and or reply communications beyond the instant computer systemization to communications networks input devices other computer systemizations peripheral devices and or the like. Of course any of the above components may be connected directly to one another connected to the CPU and or organized in numerous variations employed as exemplified by various computer systems.

The CPU comprises at least one high speed data processor adequate to execute program components for executing user and or system generated requests. Often the processors themselves will incorporate various specialized processing units such as but not limited to integrated system bus controllers memory management control units floating point units and even specialized processing sub units like graphics processing units digital signal processing units and or the like. Additionally processors may include internal fast access addressable memory and be capable of mapping and addressing memory beyond the processor itself internal memory may include but is not limited to fast registers various levels of cache memory e.g. level 1 2 3 etc. RAM etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state. The CPU may be a microprocessor such as AMD s Athlon Duron and or Opteron ARM s application embedded and secure processors IBM and or Motorola s DragonBall and PowerPC IBM s and Sony s Cell processor Inters Celeron Core 2 Duo Itanium Pentium Xeon and or XScale and or the like processor s . The CPU interacts with memory through instruction passing through conductive and or transportive conduits e.g. printed electronic and or optic circuits to execute stored instructions i.e. program code according to conventional data processing techniques. Such instruction passing facilitates communication within the OBM controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and or capacity distributed processors e.g. Distributed OBM mainframe multi core parallel and or super computer architectures may similarly be employed. Alternatively should deployment requirements dictate greater portability smaller Personal Digital Assistants PDAs may be employed.

Depending on the particular implementation features of the OBM may be achieved by implementing a microcontroller such as CAST s R8051XC2 microcontroller Intel s MCS 51 i.e. 8051 microcontroller and or the like. Also to implement certain features of the OBM some feature implementations may rely on embedded components such as Application Specific Integrated Circuit ASIC Digital Signal Processing DSP Field Programmable Gate Array FPGA and or the like embedded technology. For example any of the OBM component collection distributed or otherwise and or features may be implemented via the microprocessor and or via embedded components e.g. via ASIC coprocessor DSP FPGA and or the like. Alternately some implementations of the OBM may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.

Depending on the particular implementation the embedded components may include software solutions hardware solutions and or some combination of both hardware software solutions. For example OBM features discussed herein may be achieved through implementing FPGAs which are a semiconductor devices containing programmable logic components called logic blocks and programmable interconnects such as the high performance FPGA Virtex series and or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer after the FPGA is manufactured to implement any of the OBM features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the OBM system designer administrator somewhat like a one chip programmable breadboard. An FPGA s logic blocks can be programmed to perform the function of basic logic gates such as AND and XOR or more complex combinational functions such as decoders or simple mathematical functions. In most FPGAs the logic blocks also include memory elements which may be simple flip flops or more complete blocks of memory. In some circumstances the OBM may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate OBM controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the CPU and or processor for the OBM.

The power source may be of any standard form for powering small electronic circuit board devices such as the following power cells alkaline lithium hydride lithium ion lithium polymer nickel cadmium solar cells and or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells in one embodiment the case provides an aperture through which the solar cell may capture photonic energy. The power cell is connected to at least one of the interconnected subsequent components of the OBM thereby providing an electric current to all subsequent components. In one example the power source is connected to the system bus component . In an alternative embodiment an outside power source is provided through a connection across the I O interface. For example a USB and or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.

Interface bus ses may accept connect and or communicate to a number of interface adapters conventionally although not necessarily in the form of adapter cards such as but not limited to input output interfaces I O storage interfaces network interfaces and or the like. Optionally cryptographic processor interfaces similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via a slot architecture. Conventional slot architectures may be employed such as but not limited to Accelerated Graphics Port AGP Card Bus Extended Industry Standard Architecture E ISA Micro Channel Architecture MCA NuBus Peripheral Component Interconnect Extended PCI X PCI Express Personal Computer Memory Card International Association PCMCIA and or the like.

Storage interfaces may accept communicate and or connect to a number of storage devices such as but not limited to storage devices removable disc devices and or the like. Storage interfaces may employ connection protocols such as but not limited to Ultra Serial Advanced Technology Attachment Packet Interface Ultra Serial ATA PI Enhanced Integrated Drive Electronics E IDE Institute of Electrical and Electronics Engineers IEEE 1394 fiber channel Small Computer Systems Interface SCSI Universal Serial Bus USB and or the like.

Network interfaces may accept communicate and or connect to a communications network . Through a communications network the OBM controller is accessible through remote clients e.g. computers with web browsers by users . Network interfaces may employ connection protocols such as but not limited to direct connect Ethernet thick thin twisted pair 10 100 1000 Base T and or the like Token Ring wireless connection such as IEEE 802.11a x and or the like. Should processing requirements dictate a greater amount speed and or capacity distributed network controllers e.g. Distributed OBM architectures may similarly be employed to pool load balance and or otherwise increase the communicative bandwidth required by the OBM controller. A communications network may be any one and or the combination of the following a direct interconnection the Internet a Local Area Network LAN a Metropolitan Area Network MAN an Operating Missions as Nodes on the Internet OMNI a secured custom connection a Wide Area Network WAN a wireless network e.g. employing protocols such as but not limited to a Wireless Application Protocol WAP I mode and or the like and or the like. A network interface may be regarded as a specialized form of an input output interface. Further multiple network interfaces may be used to engage with various communications network types . For example multiple network interfaces may be employed to allow for the communication over broadcast multicast and or unicast networks.

Input Output interfaces I O may accept communicate and or connect to user input devices peripheral devices cryptographic processor devices and or the like. I O may employ connection protocols such as but not limited to audio analog digital monaural RCA stereo and or the like data Apple Desktop Bus ADB IEEE 1394a b serial universal serial bus USB infrared joystick keyboard midi optical PC AT PS 2 parallel radio video interface Apple Desktop Connector ADC BNC coaxial component composite digital Digital Visual Interface DVI high definition multimedia interface HDMI RCA RF antennae S Video VGA and or the like wireless 802.11a b g n x Bluetooth code division multiple access CDMA global system for mobile communications GSM WiMax etc. and or the like. One typical output device may include a video display which typically comprises a Cathode Ray Tube CRT or Liquid Crystal Display LCD based monitor with an interface e.g. DVI circuitry and cable that accepts signals from a video interface may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set which accepts signals from a video interface. Typically the video interface provides the composited video information through a video connection interface that accepts a video display interface 9 e.g. an RCA composite video connector accepting an RCA composite video cable a DVI connector accepting a MI display cable etc. .

User input devices may be card readers dongles finger print readers gloves graphics tablets joysticks keyboards mouse mice remote controls retina readers trackballs trackpads and or the like.

Peripheral devices may be connected and or communicate to I O and or other facilities of the like such as network interfaces storage interfaces and or the like. Peripheral devices may be audio devices cameras dongles e.g. for copy protection ensuring secure transactions with a digital signature and or the like external processors for added functionality goggles microphones monitors network interfaces printers scanners storage devices video devices video sources visors and or the like.

It should be noted that although user input devices and peripheral devices may be employed the OBM controller may be embodied as an embedded dedicated and or monitor less i.e. headless device wherein access would be provided over a network interface connection.

Cryptographic units such as but not limited to microcontrollers processors interfaces and or devices may be attached and or communicate with the OBM controller. A MC68HC16 microcontroller manufactured by Motorola Inc. may be used for and or within cryptographic units. The MC68HC16 microcontroller utilizes a 16 bit multiply and accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512 bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of CPU. Equivalent microcontrollers and or processors may also be used. Other commercially available specialized cryptographic processors include the Broadcom s CryptoNetX and other Security Processors nCipher s nShield SafeNet s Luna PCI e.g. 7100 series Semaphore Communications 40 MHz Roadrunner 184 Sun s Cryptographic Accelerators e.g. Accelerator 6000 PCIe Board Accelerator 500 Daughtercard Via Nano Processor e.g. L2100 L2200 U2400 line which is capable of performing 500 MB s of cryptographic instructions VLSI Technology s 33 MHz 6868 and or the like.

Generally any mechanization and or embodiment allowing a processor to affect the storage and or retrieval of information is regarded as memory . However memory is a fungible technology and resource thus any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the OBM controller and or a computer systemization may employ various forms of memory . For example a computer systemization may be configured wherein the functionality of on chip CPU memory e.g. registers RAM ROM and any other storage devices are provided by a paper punch tape or paper punch card mechanism of course such an embodiment would result in an extremely slow rate of operation. In a typical configuration memory will include ROM RAM and a storage device . A storage device may be any conventional computer system storage. Storage devices may include a drum a fixed and or removable magnetic disk drive a magneto optical drive an optical drive i.e. Blueray CD ROM RAM Recordable R ReWritable RW DVD R RW HD DVD R RW etc. an array of devices e.g. Redundant Array of Independent Disks RAID solid state memory devices USB memory solid state drives SSD etc. other processor readable storage mediums and or other devices of the like. Thus a computer systemization generally requires and makes use of memory.

The memory may contain a collection of program and or database components and or data such as but not limited to operating system component s operating system information server component s information server user interface component s user interface Web browser component s Web browser database s mail server component s mail client component s cryptographic server component s cryptographic server the OBM component s and or the like i.e. collectively a component collection . These components may be stored and accessed from the storage devices and or from storage devices accessible through an interface bus. Although non conventional program components such as those in the component collection typically are stored in a local storage device they may also be loaded and or stored in memory such as peripheral devices RAM remote storage facilities through a communications network ROM various forms of memory and or the like.

The operating system component is an executable program component facilitating the operation of the OBM controller. Typically the operating system facilitates access of I O network interfaces peripheral devices storage devices and or the like. The operating system may be a highly fault tolerant scalable and secure system such as Apple Macintosh OS X Server AT T Plan 9 Be OS Unix and Unix like system distributions such as AT T s UNIX Berkley Software Distribution BSD variations such as FreeBSD NetBSD OpenBSD and or the like Linux distributions such as Red. Hat Ubuntu and or the like and or the like operating systems. However more limited and or less secure operating systems also may be employed such as Apple Macintosh OS IBM OS 2 Microsoft COS Microsoft Windows 2000 2003 3.1 95 98 CE Millenium NT Vista XP Server Palm OS and or the like. An operating system may communicate to and or with other components in a component collection including itself and or the like. Most frequently the operating system communicates with other program components user interfaces and or the like. For example the operating system may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. The operating system once executed by the CPU may enable the interaction with communications networks data I O peripheral devices program components memory user input devices and or the like. The operating system may provide communications protocols that allow the OBM controller to communicate with other entities through a communications network . Various communication protocols may be used by the OBM controller as a subcarrier transport mechanism for interaction such as but not limited to multicast TCP IP UDP unicast and or the like.

An information server component is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as but not limited to Apache Software Foundation s Apache Microsoft s Internet Information Server and or the like. The information server may allow for the execution of program components through facilities such as Active Server Page ASP ActiveX ANSI Objective C C and or .NET Common Gateway Interface CGI scripts dynamic D hypertext markup language HTML FLASH Java JavaScript Practical. Extraction Report Language PERL Hypertext Pre Processor PHP pipes Python wireless application protocol WAP WebObjects and or the like. The information server may support secure communications protocols such as but not limited to File Transfer Protocol FTP HyperText Transfer Protocol HTTP Secure Hypertext Transfer Protocol HTTPS Secure Socket Layer SSL messaging protocols e.g. America Online AOL Instant Messenger AIM Application Exchange APEX ICQ Internet Relay Chat IRC Microsoft Network MSN Messenger Service Presence and Instant Messaging Protocol PRIM Internet Engineering Task Force s IETF s Session Initiation Protocol SIP SIP for Instant Messaging and Presence Leveraging Extensions SIMPLE open XML based Extensible Messaging and Presence Protocol XMPP i.e. Jabber or Open Mobile Alliance s OMA s Instant Messaging and Presence Service IMPS Yahoo Instant Messenger Service and or the like. The information server provides results in the form of Web pages to Web browsers and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System DNS resolution portion of an HTTP request is resolved to a particular information server the information server resolves requests for information at specified locations on the OBM controller based on the remainder of the HTTP request. For example a request such as http 123.124.125.126 myInformation.html might have the IP portion of the request 123.124.125.126 resolved by a DNS server to an information server at that IP address that information server might in turn further parse the http request for the myInformation.html portion of the request and resolve it to a location in memory containing the information myInformation.html. Additionally other information serving protocols may be employed across various ports e.g. FTP communications across port and or the like. An information server may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the information server communicates with the OBM database operating systems other program components user interfaces Web browsers and or the like.

Access to the OBM database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below e.g. CGI and through inter application communication channels as enumerated below e.g. CORBA WebObjects etc. . Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the OBM. In one embodiment the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields and parsed as such. The entered terms are then passed along with the field tags which act to instruct the parser to generate queries directed to appropriate tables and or fields. In one embodiment the parser may generate queries in standard SQL by instantiating a search string with the proper join select commands based on the tagged text entries wherein the resulting command is provided over the bridge mechanism to the OBM as a query. Upon generating query results from the query the results are passed over the bridge mechanism and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server which may supply it to the requesting Web browser.

Also an information server may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The function of computer interfaces in some respects is similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels gearshifts and speedometers facilitate the access operation and display of automobile resources functionality and status. Computer interaction interface elements such as check boxes cursors menus scrollers and windows collectively and commonly referred to as widgets similarly facilitate the access operation and display of data and computer hardware and operating system resources functionality and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces GUIs such as the Apple Macintosh Operating System s Aqua IBM s OS 2 Microsoft s Windows 2000 2003 3.1 95 98 CE Millenium NT XP Vista 7 i.e. Aero Unix s X Windows e.g. which may include additional Unix graphic interface libraries and layers such as K Desktop Environment KDE mythTV and GNU Network Object Model Environment GNOME web interface libraries e.g. ActiveX AJAX D HTML FLASH Java JavaScript etc. interface libraries such as but not limited to Dojo jQuery UI MooTools Prototype script.aculo.us SWFObject Yahoo User Interface any of which may be used and provide a baseline and means of accessing and displaying information graphically to users.

A user interface component is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by with and or atop operating systems and or operating environments such as already discussed. The user interface may allow for the display execution interaction manipulation and or operation of program components and or system facilities through textual and or graphical facilities. The user interface provides a facility through which users may affect interact and or operate a computer system. A user interface may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the user interface communicates with operating systems other program components and or the like. The user interface may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

A Web browser component is a stored program component that is executed by a CPU. The Web browser may be a conventional hypertext viewing application such as Microsoft Internet Explorer or Netscape Navigator. Secure Web browsing may be supplied with 128 bit or greater encryption by way of HTTPS SSL and or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX AJAX D HTML FLASH Java JavaScript web browser plug in APIs e.g. FireFox Safari Plug in and or the like APIs and or the like. Web browsers and like information access tools may be integrated into PDAs cellular telephones and or other mobile devices. A Web browser may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the Web browser communicates with information servers operating systems integrated program components e.g. plug ins and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses. Of course in place of a Web browser and information server a combined application may be developed to perform similar functions of both. The combined application would similarly affect the obtaining and the provision of information to users user agents and or the like from the OBM enabled nodes. The combined application may be nugatory on systems employing standard Web browsers.

A mail server component is a stored program component that is executed by a CPU . The mail server may be a conventional Internet mail server such as but not limited to sendmail Microsoft Exchange and or the like. The mail server may allow for the execution of program components through facilities such as ASP ActiveX ANSI Objective C C and or .NET CGI scripts Java JavaScript PERL PHP pipes Python WebObjects and or the like. The mail server may support communications protocols such as but not limited to Internet message access protocol IMAP Messaging Application Programming Interface MAPI Microsoft Exchange post office protocol POP3 simple mail transfer protocol SMTP and or the like. The mail server can route forward and process incoming and outgoing mail messages that have been sent relayed and or otherwise traversing through and or to the OBM.

Access to the OBM mail may be achieved through a number of APIs offered by the individual Web server components and or the operating system.

Also a mail server may contain communicate generate obtain and or provide program component system user and or data communications requests information an responses.

A mail client component is a stored program component that is executed by a CPU . The mail client may be a conventional mail viewing application such as Apple Mail Microsoft Entourage Microsoft Outlook Microsoft Outlook Express Mozilla Thunderbird and or the like. Mail clients may support a number of transfer protocols such as IMAP Microsoft Exchange POP3 SMTP and or the like. A mail client may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the mail client communicates with mail servers operating systems other mail clients and or the like e.g. it may contain communicate generate obtain and or provide program component system user and or data communications requests information and or responses. Generally the mail client provides a facility to compose and transmit electronic mail messages.

A cryptographic server component is a stored program component that is executed by a CPU cryptographic processor cryptographic processor interface cryptographic processor device and or the like. Cryptographic processor interfaces will allow for expedition of encryption and or decryption requests by the cryptographic component however the cryptographic component alternatively may run on a conventional CPU. The cryptographic component allows for the encryption and or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric e.g. Pretty Good Protection PGP encryption and or decryption. The cryptographic component may employ cryptographic techniques such as but not limited to digital certificates e.g. X.509 authentication framework digital signatures dual signatures enveloping password access protection public key management and or the like. The cryptographic component will facilitate numerous encryption and or decryption security protocols such as but not limited to checksum Data Encryption Standard DES Elliptical Curve Encryption ECC International Data Encryption Algorithm IDEA Message Digest 5 MD which is a one way hash function passwords Rivest Cipher RC5 Rijndael RSA which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest Adi Shamir and Leonard Adleman Secure Hash Algorithm SHA Secure Socket Layer SSL Secure Hypertext Transfer Protocol HTTPS and or the like. Employing such encryption security protocols the OBM may encrypt all incoming and or outgoing communications and may serve as node within a virtual private network VPN with a wider communications network. The cryptographic component facilitates the process of security authorization whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition the cryptographic component may provide unique identifiers of content e.g. employing and MDhash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and or with other components in a component collection including itself and or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the OBM component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the OBM and facilitates the access of secured resources on remote systems i.e. it may act as a client and or server of secured resources. Most frequently the cryptographic component communicates with information servers operating systems other program components and or the like. The cryptographic component may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The OBM database component may be embodied in a database and its stored data. The database is a stored program component which is executed by the CPU the stored program component portion configuring the CPU to process the stored data. The database may be a conventional fault tolerant relational scalable secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely they uniquely identify rows of a table on the one side of a one to many relationship.

Alternatively the OBM database may be implemented using various standard data structures such as an array hash linked list struct structured text file e.g. XML table and or the like. Such data structures may be stored in memory and or in structured files. In another alternative an object oriented database may be used such as Frontier ObectStore Poet Zope and or the like. Object databases can include a number of object collections that are grouped and or linked together by common attributes they may be related to other object collections by some common attributes. Object oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of functionality encapsulated within a given object. If the OBM database is implemented as a data structure the use of the OBM database may be integrated into another component such as the OBM component . Also the database may be implemented as a mix of data structures objects and relational structures. Databases may be consolidated and or distributed in countless variations through standard data processing techniques. Portions of databases e.g. tables may be exported and or imported and thus decentralized and or integrated.

In one embodiment the database component includes several tables . A Users table may include fields such as but not limited to user ID ssn first name last name middle name suffix prefix address first line address second line city state zipcode country birthdate gender device ID list device name list device type list hardware configuration list software apps list device IP list device MAC list device preferences list and or the like. An Apps table may include fields such as but not limited to app ID app name app type app version app version timestamp app prior versions list app prior versions timestamps app update schedule app scheduled versions list app scheduled versions dates app scheduled versions priority app environment type app environment version app compatibilities hw app compatibilities sw app dependent topology tree app depend module list app depend function list app depend apps list and or the like. A Client table may include fields such as but not limited to user id user name client id client type language pref client hardware compatibilities client software installations and or the like. A Session request table may include fields such as but not limited to request id timestamp user id client ip ack id and or the like. A Server table may include fields such as but not limited to sever name server id server ip server type and or the like. A User Session State table may include fields such as but not limited to app id app name player id player name game id md5 auth player action player action timestamp player action type action amount action source and or the like. A Clearance Request table may include fields such as but not limited to request id request type app id app name player id player name game id timestamp and or the like. A Gaming Realm table may include fields such as but not limited to app id player id game id player name last action player hand player hand card list player hand card value and or the like. A CoS Order table may include fields such as but not limited to clearance status clearance type warnings list warnings messages notice list notice messages report list report messages address book lock out list and or the like. An Evaluation Rules table may include fields such as but not limited to rule name rule type rule inputs list rule process list rule outputs list find list thresholds list and or the like. A Social Graph table may include fields such as but not limited to user id friend id relationship strength activity timestamps activity type message id message list and or the like. A Customer Service Request table may include fields such as but not limited to queue id queue priority queue position request priority position weight and or the like. A Game Features table may include fields such as but not limited to feature id app id game id ab type object id object difficulty game stage id game stage difficulty and or the like. A Products table may include fields such as but not limited to product id product name product type product category list product keyword list product discount tiers product pricing product availability global product list and or the like. A Geographical Tracking table may include fields such as but not limited to geo area id geo are a name geo users list aggregate activity level list activity trough id activity trough timestamp begin activity trough timestamp end local keywords global keywords local search results list global search results list geo user activity level list and or the like. One or more of the tables discussed above may support and or track multiple entity accounts on a OBM.

In one embodiment the OBM database may interact with other database systems. For example employing a distributed database system queries and data access by search OBM component may treat the combination of the OMB database an integrated data security layer database as a single database entity.

In one embodiment user programs may contain various user interface primitives which may serve to update the OBM. Also various accounts may require custom database tables depending upon the environments and the types of clients the OBM may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment these tables have been decentralized into their own databases and their respective database controllers i.e. individual database controllers for each of the above tables . Employing standard data processing techniques one may further distribute the databases over several computer systemizations and or storage devices. Similarly configurations of the decentralized database controllers may be varied by consolidating and or distributing the various database components . The OBM may be configured to keep track of various settings inputs and parameters via database controllers.

The OBM database may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the OBM database communicates with the OBM component other program components and or the like. The database may contain retain and provide information regarding other nodes and data.

The OBM component is a stored program component that is executed by a CPU. In one embodiment the OBM component incorporates any and or all combinations of the aspects of the OBM discussed in the previous figures. As such the OBM affects accessing obtaining and the provision of information services transactions and or the like across various communications networks.

The OBM component may transform user social gaming behavioral pattern data via OBM components into online social gaming experience customizations and or the like and use of the OBM. In one embodiment the OBM component takes inputs e.g. user input gaming app gaming environment data evaluation rules game rules gaming patterns data social patterns data social data new social activity data and or the like etc. and transforms the inputs via various components e.g. gaming session initiation GSI component user gaming interaction UGI component social gaming behavior evaluation SGBE component gaming session termination GST component virtual security camera VSC component customer service request evaluator CSRE component live online game tester LOGT component game feature set tester GIST component user engagement tracking game modification U ETGM component group engagement tracking game modification G ETGM component and or the like into outputs e.g. gaming app request app query user session state display output user gaming input clearance request clearance ACK CoS order environment query user gaming input sessions state user session state clearance request evaluation rule request game rules request game environment request gaming patterns request and or the like as shown in as well as throughout the specification.

The OBM component enabling access of information between nodes may be developed by employing standard development tools and languages such as but not limited to Apache components Assembly ActiveX binary executables ANSI Objective C C and or .NET database adapters CGI scripts Java JavaScript mapping tools procedural and object oriented development tools PERL PHP Python shell scripts SQL commands web application server extensions web development environments and libraries e.g. Microsoft s ActiveX Adobe AIR FLEX FLASH AJAX D HTML Dojo Java JavaScript jQuery UI MooTools Prototype script.aculo.us Simple Object Access Protocol SOAP SWFObject Yahoo User Interface and or the like WebObjects and or the like. In one embodiment the OBM server employs a cryptographic server to encrypt and decrypt communications. The OBM component may communicate to and or with other components in a component collection including itself and or facilities of the like. Most frequently the OBM component communicates with the OBM database operating systems other program components and or the like. The OBM may contain communicate generate obtain and or provide program component system user and or data communications requests and or responses.

The structure and or operation of any of the OBM node controller components may be combined consolidated and or distributed in any number of ways to facilitate development and or deployment. Similarly the component collection may be combined in any number of ways to facilitate deployment and or development. To accomplish this one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.

The component collection may be consolidated and or distributed in countless variations through standard data processing and or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node and or across numerous nodes to improve performance through load balancing and or data processing techniques. Furthermore single instances may also be distributed across multiple controllers and or storage devices e.g. databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques. For example OBM server s and database s may all be localized within a single computing terminal. As another example the OBM components may be localized within one or more entities e.g. hospitals pharmaceutical companies etc. involved in coordinated patient management.

The configuration of the OBM controller will depend on the context of system deployment. Factors such as but not limited to the budget capacity location and or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and or integrated program components results in a more distributed series of program components and or results in some combination between a consolidated and distributed configuration data may be communicated obtained and or provided. Instances of components consolidated into a common code base from the program component collection may communicate obtain and or provide data. This may be accomplished through intra application data processing communication techniques such as but not limited to data referencing e.g. pointers internal messaging object instance variable communication shared memory space variable passing and or the like.

If component collection components are discrete separate and or external to one another then communicating obtaining and or providing data with and or to other component components may be accomplished through inter application data processing communication techniques such as but not limited to Application Program Interfaces API information passage distributed Component Object Model D COM Distributed Object Linking and Embedding D OLE and or the like Common Object Request Broker Architecture CORBA local and remote application program interfaces Jini Remote Method Invocation RMI SOAP process pipes shared files and or the like. Messages sent between discrete component components for inter application communication or within memory spaces of a singular component for intra application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using standard development tools such as lex yacc XML and or the like which allow for grammar generation and parsing functionality which in turn may form the basis of communication messages within and between components. For example a grammar may be arranged to recognize the tokens of an HTTP post command e.g. w3c post http . . . Value1 where Value1 is discerned as being a parameter because http is part of the grammar syntax and what follows is considered part of the post value. Similarly with such a grammar a variable Value1 may be inserted into an http post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and or otherwise used to generate the parsing mechanism e.g. a syntax description text file as processed by lex yacc etc. . Also once the parsing mechanism is generated and or instantiated it itself may process and or parse structured data such as but not limited to character e.g. tab delineated text HTML structured text streams XML and or the like structured data. In another embodiment inter application data processing protocols themselves may have integrated and or readily available parsers e.g. the SOAP parser that may be employed to parse communications data. Further the parsing grammar may be used beyond message parsing but may also be used to parse databases data collections data stores structured data and or the like. Again the desired configuration will depend upon the context environment and requirements of system deployment.

A4. The method of embodiment 1 wherein the virtual security clearance request is generated upon obtaining a user online gaming action input.

A5. The method of embodiment 3 wherein the constraint of service order includes orders on modifying an online gaming experience for a user.

A6. The method of embodiment 3 wherein the constraint of service order includes an online gaming activity report based on the social gaming activity timeline.

A7. The method of embodiment 5 wherein the orders on modifying the online gaming experience for the user include locking the user out of the online gaming experience.

A11. The system of embodiment 8 wherein the virtual security clearance request is generated upon obtaining a user online gaming action input.

A12. The system of embodiment 10 wherein the constraint of service order includes orders on modifying an online gaming experience for a user.

A13. The system of embodiment 10 wherein the constraint of service order includes an online gaming activity report based on the social gaming activity timeline.

A14. The system of embodiment 12 wherein the orders on modifying the online gaming experience for the user include locking the user out of the online gaming experience.

A15. A processor readable tangible medium storing processor issuable virtual security camera instructions to 

A18. The medium of embodiment 15 wherein the virtual security clearance request is generated upon obtaining a user online gaming action input.

A19. The medium of embodiment 17 wherein the constraint of service order includes orders on modifying an online gaming experience for a user.

A20. The medium of embodiment 17 wherein the constraint of service order includes an online gaming activity report based on the social gaming activity timeline.

A21. The medium of embodiment 19 wherein the orders on modifying the online gaming experience for the user include locking the user out of the online gaming experience.

B15. A processor readable tangible medium storing processor issuable customer service request evaluation instructions to 

C7. The method of embodiment 6 wherein the modified product purchase price pertains to an in game virtual product.

C14. The system of embodiment 13 wherein the modified product purchase price pertains to an in game virtual product.

C15. A processor readable tangible medium storing processor issuable live online game testing instructions to 

C19. The medium of embodiment 15 wherein the test game feature is a modified gaming difficulty level.

C21. The medium of embodiment 20 wherein the modified product purchase price pertains to an in game virtual product.

D15. A processor readable tangible medium storing processor issuable group engagement tracking game modification instructions to 

In order to address various issues and advance the art the entirety of this application for APPARATUSES METHODS AND SYSTEMS FOR A LIVE ONLINE GAME TESTER including the Cover Page Title Headings Field Background Summary Brief Description of the Drawings Detailed Description Claims Abstract Figures Appendices and or otherwise shows by way of illustration various embodiments in which the claimed invention s may be practiced. The advantages and features of the application are of a representative sample of embodiments only and are not exhaustive and or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed inventions. As such certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the invention or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the invention and others are equivalent. Thus it is to be understood that other embodiments may be utilized and functional logical organizational structural and or topological modifications may be made without departing from the scope and or spirit of the disclosure. As such all examples and or embodiments are deemed to be non limiting throughout this disclosure. Also no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance it is to be understood that the logical and or topological structure of any combination of any program components a component collection other components and or any present feature sets as described in the figures and or throughout are not limited to a fixed operating order and or arrangement but rather any disclosed order is exemplary and all equivalents regardless of order are contemplated by the disclosure. Furthermore it is to be understood that such features are not limited to serial execution but rather any number of threads processes services servers and or the like that may execute asynchronously concurrently in parallel simultaneously synchronously and or the like are contemplated by the disclosure. As such some of these features may be mutually contradictory in that they cannot be simultaneously present in a single embodiment. Similarly some features are applicable to one aspect of the invention and inapplicable to others. In addition the disclosure includes other inventions not presently claimed. Applicant reserves all rights in those presently unclaimed inventions including the right to claim such inventions file additional applications continuations continuations in part divisions and or the like thereof. As such it should be understood that advantages embodiments examples functional features logical organizational structural topological and or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that depending on the particular needs of the OBM and or characteristics of the hardware software network framework monetization model and or the like various embodiments of the OBM may be implemented that enable a great deal of flexibility and customization. It is to be understood that depending on the particular needs of the OBM and or characteristics of the hardware software network framework monetization model and or the like various embodiments of the OBM may be implemented that enable a great deal of flexibility and customization. The instant disclosure discusses example implementations of the OBM within the context of user online behavior monitoring. However it is to be understood that the system described herein can be readily configured for a wide range of other applications and or implementations. For example implementations of the OBM can be configured to operate within the context of network security online productivity collaboration online resource management and or the like. It is to be understood that the OBM may be further adapted to other implementations.

