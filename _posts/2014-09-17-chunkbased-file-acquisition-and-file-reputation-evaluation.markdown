---

title: Chunk-based file acquisition and file reputation evaluation
abstract: One or more techniques and/or systems are provided for file acquisition for reputation evaluation. A reputation service may be configured to evaluate files and provide reputations of such files to clients (e.g., an indication as to whether a file is safe or malicious). If the reputation service receives a reputation request for a file that is unknown to the reputation service (e.g., a file not yet fully acquired by the reputation service), then the reputation service may identify a set of chunks into which the file can be partitioned. The reputation service may obtain chunks from various clients, such as a first chunk from a first client and a second chunk from a second client. Such chunks may be evaluated to assign a reputation to the file. In this way, the reputation service may retrieve portions of a file in a distributed manner for reputation evaluation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09398036&OS=09398036&RS=09398036
owner: Microsoft Technology Licensing, LLC
number: 09398036
owner_city: Redmond
owner_country: US
publication_date: 20140917
---
Many applications and services provide security for computing devices. In an example a security service such as an antivirus service may scan a computer to identify infected files that have viruses malware malicious code etc. The security service may identify isolate and or remove such files. The security service may also disseminate information regarding such files in an effort to protect other computing devices from such files.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Among other things one or more systems and or techniques for file acquisition for reputation evaluation are provided herein. A reputation service may be configured to receive reputation requests from clients and may return reputations of known files to such clients. If a client requests a reputation for a file that is unknown to the reputation service then the reputation service will be unable to return a reputation until the file is acquired and evaluated by the reputation service. Because the file may be relatively large obtaining the entire file from a single client may tax resources e.g. bandwidth and or otherwise incur inefficiencies. Accordingly as provided herein the reputation service may obtain portions of the file from a plurality of clients e.g. given user consent in a distributed manner. In an example a user may take affirmative action to provide opt in consent to allow the acquisition of files and or chunks of files associated with a client such as for the purpose of reputation evaluation of such files e.g. where the user responds to a prompt regarding the collection and or use of such file related data .

In an example a reputation request may be received from a first client. The reputation request may comprise a file identifier of a file e.g. a hash of a videogame file associated with a videogame application downloaded by the first client such as a tablet device client . Responsive to the file identifier corresponding to a reputation of the file the reputation may be provided to the first client. Responsive to determining that the file is unknown e.g. the file identifier does not match a reputation within a file reputation data structure a set of chunks into which the file can be partitioned may be identified e.g. the set of chunks may initially comprise placeholders such as chunk identifiers for chunks because the reputation service may not yet have obtained such chunks from clients . A first chunk of the file may be retrieved from the first client. One or more additional chunks of the file may be retrieved from other clients such as a second chunk retrieved from a second client e.g. responsive to the second client requesting a reputation of the file . The first chunk the second chunk and or other chunks may be evaluated to assign a reputation to the file e.g. a degree of maliciousness or non maliciousness of the file . The reputation service may provide the reputation to the first client and or other clients. In this way the reputation service may acquire chunks of files in a distributed manner from a plurality of clients and may reconstruct such files from the chunks in order to evaluate and assign reputations to the files.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are generally used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth to provide an understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.

One or more techniques and or systems for file acquisition for reputation evaluation are provided herein. A reputation service may be configured to provide clients with reputations of files e.g. reputations for applications documents videogames videos photos etc. such as a degree of maliciousness or non maliciousness. The reputation service may discover new files for reputation evaluation by discovering and obtaining files from internet sources. However some files may be unavailable due to being stored behind authentication credentials unknown to the reputation service and or being hosted by a source having a URL unknown to the reputation service e.g. a file on personal laptop . Accordingly the reputation service may identify a new file that is unknown to the reputation service based upon receiving a reputation request for the new file e.g. based upon receiving a file reputation request comprising a file identifier for a file such as an SHA256 hash of the file that the reputation server has not previously encountered . The reputation service may identify a set of chunks into which the new file can be partitioned e.g. the new file may be relatively large and thus impractical to obtain from a single client . The reputation service may obtain chunks of the new file from a plurality of clients e.g. given user consent in a distributed manner e.g. according to a distributed upload configuration where multiple clients provide portions of a file to a single source such as the reputation service . In an example a user may take affirmative action to provide opt in consent to allow acquisition of files and or chunks of files associated with a client device such as for the purpose of reputation evaluation of such files e.g. where the user responds to a prompt regarding the collection and or use of such file related data . The reputation service may reconstruct the new file from the chunks and may assign a reputation to the new file e.g. after verifying the identity of the new file e.g. verifying an SHA256 hash of the new file . In this way the reputation service may obtain files in a distributed manner from a plurality of clients.

An embodiment of file acquisition for reputation evaluation is illustrated by an exemplary method of . At the method starts. At a reputation request may be received from a first client. The reputation request may comprise a file identifier of a file. For example a videogame console client associated with a user Dave may download a racing videogame from an internet source. A hash of a racing videogame file associated with the racing videogame may be generated as the file identifier. In an attempt to determine whether the racing videogame file is safe or malicious the reputation request may be sent from the videogame console client to a reputation service.

The reputation service may query a file reputation data structure using the file identifier to determine whether a reputation for the file exists. It is to be appreciated that any file may generally be identified by a unique identifier such as a compact identifier that is universally computable on any computing device e.g. SHA256 hash . At responsive to the file identifier corresponding to the reputation for the file the reputation may be provided to the first client e.g. there is an entry in the file reputation data structure corresponding to the file identifier . At responsive to determining that the file is unknown a set of chunks into which the file can be partitioned may be identified e.g. the set of chunks may initially comprise placeholders such as chunk identifiers for chunks because the reputation service may not yet have obtained such chunks from clients at . In an example the racing videogame file may comprise 4 GB of data and thus one hundred 4 MB chunks may be identified as the set of chunks into which the racing videogame file may partitioned e.g. the chunk size may be set based upon various criteria such as a potential number of clients that may comprise the file bandwidth of such clients a data plan type of a client whether a client is connected to wifi and or a variety of other considerations . In another example the set of chunks may specify one or more overlapping chunks e.g. a first chunk may comprise overlapping file data with respect to a second chunk . In an example of identifying the set of chunks a distribution curve may be generated based upon the set of chunks. The distribution curve may specify a distribution of chunks that are to be retrieved from clients. For example the distribution may comprise a random distribution a sequential distribution an ordered distribution an overlapping distribution an ordered overlapping distribution a prioritization distribution e.g. a prioritization of which chunks such as code segments to obtain and or in what order to obtain such chunks or any other type of distribution.

In an example retrieval priorities may be assigned to respective chunks within the set of chunks. For example a first retrieval priority may be assigned to the first chunk and a second retrieval priority may be assigned to the second chunk. The first retrieval priority may be higher than the second retrieval priority based upon a determination that the first chunk has a reputation evaluation relevancy that is greater than the second chunk e.g. the first chunk may correspond to data or code segments of an executable file that are indicative of maliciousness whereas the second chunk may comprise data or code segments which are common across both malicious and benign files . In an example indicators may be assigned to respective chunks within the set of chunks. When a chunk has been received by the reputation service from a client then an indicator for the received chunk may be set to an acquired state. If multiple copies of the chunk are to be retrieved from different clients then the indicator may be increased decremented or modified to indicate that a copy of the chunk has been received. In an example chunk identifiers e.g. hashes may be generated for respective chunks within the set of chunks. In an example multiple files may be associated with a single chunk e.g. a built in library such as an I O library may be shared across multiple files and thus a chunk identifier may be used to track the chunk across such files e.g. so that the chunk may efficiently be identified and or obtained from a location of a file known to share the chunk .

At the first chunk of the file may be retrieved from the first client. In an example an operating context of the first client may be identified e.g. the mobile device client may be connected to a wifi network charging in an idle state etc. . Acquisition of the first chunk from the first client may be scheduled e.g. triggered based upon the operating context corresponding to an upload policy e.g. the first chunk may be acquired from the first client when the first client connects to a wifi network but is executing little to no operational activity such as based upon a wifi network connection upload policy . In an example the first chunk may be retrieved from one or more additional clients based upon an overlapping distribution specifying redundant retrieval for the first chunk. In an example the first chunk from the first client may be compared with a second instance of the first chunk from a different client to verify that the first chunk from the first client is received in a non tampered state. At the second chunk of the file may be retrieved from a second client e.g. a laptop device associated with a user Mary may send a reputation request comprising a file identifier for the racing videogame file or any other file that may be associated with a chunk identifier for the second chunk and the reputation request may result in a request for the second chunk from the laptop device .

In an example one or more additional chunks within the set of chunks may be acquired from various clients. In an example a file layout of the file may be determined. A distribution and prioritization algorithm may be used to prioritize chunks such as code segments to obtain from clients e.g. based upon urgency a number of comparators a best effort for completeness a number of clients to fetch from etc. . In an example a future acquisition of a third chunk of the file may be scheduled from the first client the second client and or another client e.g. a client having a probability of owning the third chunk above an acquisition threshold . In an example a transmission initiation of a chunk of the file may be received from a client e.g. the client may randomly send the transmission initiation . Responsive to the chunk having been previously retrieved by the reputation service e.g. a threshold number of copies of the chunk may have been acquired by the reputation service transmission of the chunk may be cancelled which may mitigate unnecessary bandwidth utilization. Responsive to determining that the chunk or a threshold number of copies of the chunk have not yet been retrieved the transmission of the chunk may be accepted. In an example the chunk may be evaluated to determine and or update a reputation of the file.

In an example of processing the reputation request from the first client the file may be determined as being known but that less than all chunks of the file are available to the reputation service. A chunk unavailable to the reputation service may be retrieved from the first client. In this way one or more chunks of the file may be retrieved from various clients according to a distributed manner. At the first chunk the second chunk and or other chunks may be evaluated to assign a reputation to the file. The reputation may be provided to the first client and or other clients such as a subsequent client accessing the reputation service after the reputation becomes determinable e.g. when a threshold number of chunks are available for evaluation . In an example the reputation may be a pre calculated value or may be dynamically created on the fly based upon various reputational information about the file. At the method ends.

An embodiment of facilitating reputation evaluation is illustrated by an exemplary method of . At the method starts. At a file identifier may be generated for a file associated with a client. For example a client device may obtain a social network file associated with a social network application. The client device may generate a social network file identifier such as a hash for the social network file. At a reputation request may be sent e.g. from the client device to a reputation service. The reputation request may comprise the file identifier. An indication that a reputation for the file is unknown may be received from the reputation service. At a request for a first chunk of the file may be received from the reputation service e.g. a 4 mb chunk of the social network file . At the first chunk may be provided to the reputation service for reputation evaluation.

In an example a second chunk may be provided to the reputation service for reputation evaluation based upon a low activity period of the client e.g. the client device may be connected to a wifi network and may have available bandwidth for sending a second 4 mb chunk of the social network file . In another example a future acquisition request may be received from the reputation service. The future acquisition request may request a third chunk of the file from the client within an acquisition time span e.g. the future acquisition request may expire within 5 days . The third chunk may be provided to the reputation service within the acquisition time span.

A reputation for the file may be received from the reputation service. The reputation may be based upon an evaluation of the first chunk from the client and one or more chunks obtained by the reputation service from other clients. At the method ends.

An embodiment of data acquisition is illustrated by an exemplary method of . At the method starts. Data may be acquired in a distributed manner from multiple clients such as according to a distributed upload process. At a set of chunks into which data e.g. an event log collection used for diagnostic purposes crash dump data used to evaluate crash information that may be common amongst multiple clients etc. can be partitioned may be identified. At a first chunk of the data may be retrieved from a first client e.g. the first client may indicate that a crash occurred and thus may upload a first portion of crash dump information related to the crash . At a second chunk of the data may be retrieved from a second client e.g. the second client may indicate that a crash similar to the crash of the first client occurred and thus may upload a second portion of the crash dump information related to the crash . At the first chunk the second chunk and or other chunks obtained from one or more other clients may be evaluated to evaluate that data e.g. chunks of the crash dump information may be combined and evaluated to identify a cause of the crash of the first client and the second client . At the method ends.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to implement one or more of the techniques presented herein. An example embodiment of a computer readable medium or a computer readable device is illustrated in wherein the implementation comprises a computer readable medium such as a CD R DVD R flash drive a platter of a hard disk drive etc. on which is encoded computer readable data . This computer readable data such as binary data comprising at least one of a zero or a one in turn comprises a set of computer instructions configured to operate according to one or more of the principles set forth herein. In some embodiments the processor executable computer instructions are configured to perform a method such as at least some of the exemplary method of at least some of the exemplary method of and or at least some of the exemplary method of for example. In some embodiments the processor executable instructions are configured to implement a system such as at least some of the exemplary system of for example. Many such computer readable media are devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing at least some of the claims.

As used in this application the terms component module system interface and or the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Computer storage media does not however include propagated signals. Rather computer storage media excludes propagated signals. Any such computer storage media may be part of device .

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via a network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein. Also it will be understood that not all operations are necessary in some embodiments.

Further unless specified otherwise first second and or the like are not intended to imply a temporal aspect a spatial aspect an ordering etc. Rather such terms are merely used as identifiers names etc. for features elements items etc. For example a first object and a second object generally correspond to object A and object B or two different or two identical objects or the same object.

Moreover exemplary is used herein to mean serving as an example instance illustration etc. and not necessarily as advantageous. As used herein or is intended to mean an inclusive or rather than an exclusive or . In addition a and an as used in this application are generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Also at least one of A and B and or the like generally means A or B and or both A and B. Furthermore to the extent that includes having has with and or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising .

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application.

