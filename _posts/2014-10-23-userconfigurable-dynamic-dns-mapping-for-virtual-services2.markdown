---

title: User-configurable dynamic DNS mapping for virtual services
abstract: Various example implementations are directed to circuits, apparatuses, and methods for providing virtual computing services. According to an example embodiment, an apparatus includes a computing server configured to provide a respective group of virtual servers for each of a plurality of accounts. Each of the accounts has a respective set of domain names and a respective settings file. The apparatus also includes a domain name server (DNS). The DNS is configured and arranged to dynamically map a respective set of domain names for each account to network addresses of the respective group of virtual servers, provided for the account. The DNS performs the mapping according to a mapping function indicated in the respective settings file of the account. The respective settings file of a first account accounts includes a mapping function that is different from a mapping function included in the respective settings file of a second account.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09628436&OS=09628436&RS=09628436
owner: 8x8, Inc.
number: 09628436
owner_city: San Jose
owner_country: US
publication_date: 20141023
---
This patent document claims the benefit under 35 U.S.C. 119 e of U.S. Provisional Patent Application Ser. No. 61 975 314 filed on Apr. 4 2014 and entitled USER CONFIGURABLE DYNAMIC DNS MAPPING FOR VIRTUAL SERVICES and of U.S. Provisional Patent Application Ser. No. 61 983 792 filed on Apr. 24 2014 and entitled APPARATUS AND METHOD FOR TRACKING AND BILLING FOR VIRTUAL SERVICES which are fully incorporated herein by reference.

Computing servers are increasingly being used to provide various services over a network including but not limited to website hosting remote data storage remote computing services virtual computing environments and communication services such as voice over IP VoIP video conferencing call exchange servers and packet switching and traffic management. For ease of reference the various applications systems and services that may be provided by computing servers may be collectively referred to as remote services.

Various example implementations are directed to circuits apparatuses and methods for providing virtual computing services. According to an example embodiment an apparatus includes at least one computing server configured and arranged to provide a respective group of virtual servers for each of a plurality of accounts. Each of the accounts has a respective set of domain names and a respective settings file. For at least one of the accounts the groups of virtual servers are configured to provide one or more VoIP services. The apparatus also includes a domain name server DNS . The DNS is configured and arranged to dynamically map a respective set of domain names for each account to network addresses of the respective group of virtual servers provided for the account. The DNS performs the mapping according to a mapping function indicated in the respective settings file of the account. The respective settings file of a first account includes a mapping function that is different from a mapping function included in the respective settings file of a second account.

According to another example embodiment a method is provided. A respective group of virtual servers are provided for each of a plurality of accounts. Each of the accounts has a respective set of domain names and a respective settings file. For each account the respective set of domain names are dynamically mapped to network addresses of the respective group of virtual servers provided for the account according to a mapping function indicated in the respective settings file of the account. The respective settings file of a first account includes a mapping function that is different from a mapping function included in the respective settings file of a second account.

According to another example embodiment an apparatus includes a first processing means for providing a respective group of virtual servers for each of a plurality of accounts. Each of the accounts has a respective set of domain names and a respective settings file. The apparatus also includes a second processing means for dynamically mapping a respective set of domain names for each account to network addresses of the respective group of virtual servers provided for the account. The second processing means performs the dynamic mapping according to a mapping function indicated in the respective settings file of the account. The respective settings file of a first account includes a mapping function that is different from a mapping function included in the respective settings file of a second account.

While various embodiments are amenable to various modifications and alternative forms specifics thereof have been shown by way of example in the drawings and will be described in detail. It should be understood however that the intention is not to limit the disclosure to the particular examples and embodiments described. On the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the disclosure.

Aspects of the present disclosure are believed to be applicable to a variety of different types of apparatuses systems and methods involving computing servers. Various example implementations are directed to circuits apparatuses and methods for providing a respective group of virtual servers services for each of a plurality of accounts. More specifically the group of the virtual servers provided for an account may be accessed by authorized end users using one or more respective domain names associated with the client account. The group of virtual servers for each account may be configured to provide various remote services including for example file servers email servers web hosting virtual meeting services e.g. VoIP billing and or remote computing services e.g. virtual desktops virtual private servers and or virtual enterprise services . While the disclosed embodiments are not necessarily limited to such applications various aspects of the present disclosure may be appreciated through a discussion of various examples in this context.

In one or more implementations an apparatus includes one or more computing servers configured to provide a respective group of virtual servers services for each of a plurality of accounts. The apparatus also includes a user configurable domain name server DNS which is configured to dynamically map each domain name associated with one of the accounts to an IP address of a selected one of the group of virtual servers of the account. The DNS performs the mapping of the domain name associated with an account according to a mapping function indicated in a settings file of the account.

For each account the mapping function may map domain names to IP addresses of the virtual servers using various mapping criteria. For example in some implementations the mapping function may cause the DNS to map domain names based on the operating status of the virtual servers. For instance the mapping function may map a domain name to a first virtual server while the first virtual server is operating correctly. In response to the first server going down the mapping function may map the domain name to a backup virtual server. As another example the mapping function may cause the DNS to map domain names based on a processing load of the virtual servers. For instance domain names may be mapped to balance the processing load between a plurality of virtual servers. For example the virtual servers provided for an account may be configured to provide one or more VoIP based services. The mapping function for the account may be configured to balance VoIP traffic evenly across the virtual servers for the account. In some implementations the mapping function may cause the DNS to map domain names based on a geographical location of the user submitting a domain name query to the DNS.

Various implementations may additionally or alternatively use other criteria for mapping of domain names including but not limited to date or time of the DNS query type of virtual server associated with the domain name number of servers associated with the domain name and or permissions of user submitting the DNS query.

In various implementations a respective mapping function may be used for each account. This allows the mapping of domain names to be customized for the particular needs and services of each account. In some implementations the apparatus is further configured to provide a web based graphical user interface GUI configured and arranged to allow one or more authorized users of the account to adjust the mapping criteria indicated in the settings file. An authorized user may specify a single mapping function for all virtual servers associated with the account or may specify different mapping functions for different types of virtual servers or for different virtual servers of the same type. Further an authorized user may specify different mapping functions for different departments or users associated an account.

Turning now to the figures shows a communication network including a plurality of computing servers configured to provide virtual servers for a plurality of accounts to various end point devices including for example mobile devices plain old telephones POTS computer s and IP phones . In this example for each account the computing servers provide virtual servers indicated in virtual server settings of an account settings file for the account.

In this example the computing servers include a first server configured to provide virtual meeting services e.g. via VoIP a second server configured to provide virtual application services and a third server configured to provide virtual desktop services. The application servers may be for example virtual private servers or enterprise servers. Data transactions related to the remote services provided by the computing servers are communicated between the computing servers and the remote users over various data networks including for example the Internet public service telephone networks PSTN wireless networks e.g. GSM CDMA or LTE and private data networks including but not limited to LAN WiFi network and or Private Branch Exchange servers not shown .

In this example a DNS is configured to map domain names associated with each account to IP addresses of the virtual servers for the account provided by the computing servers . The mapping of the domain names of the account is performed according to one or more mapping functions included in a settings file for the account.

Otherwise decision block directs the process to block . At block the process updates parameter values used by the mapping function s of the account. The parameters may include for example operating status of the virtual servers processing load of the virtual servers load distribution geographic location of the user that submitted the DNS query time of the DNS query etc. At block a virtual server of the account that is mapped to the domain name is dynamically determined using the mapping function s and the updated parameters.

After determining a virtual server mapped to the domain name at block or a network address of the determined virtual server is provided at block to the user that submitted the DNS query. After providing the network address to the user the process returns to decision block and waits for another DNS query. Optionally prior to returning to decision block a mapping of the domain name and virtual server may be cached at block for a period of time in a cache table.

The system also includes a second subsystem Virtual Private Servers VPS which can be configured to virtualize various servers for an account. In some implementations the VPS subsystem automates deployment of resources allocated for an account. For instance the VPS may provide various virtual servers services including but not limited to file servers email servers web hosting and virtual meeting services e.g. VoIP etc. In some scenarios the VPS may be accessible by virtual desktops via VDI by external computers via the internet or both. In some implementations the virtual servers services provided by the VPS system may be configured using a SDK such as XEN. The SDK may be used for example to customize and or maintain virtual services provided by the VPS system for an account.

The system shown in also includes a third subsystem Enterprise Cloud that is configured to provide virtual data centers for an account. The Enterprise Cloud subsystem allows users to dynamically subscribe to provision resources e.g. virtual servers services . Users may create a virtual data center having a pool of resources which may include a number of VPS like servers services. For each account a respective virtual data center provided by the Enterprise Cloud may be configured to include a number of VPS and or virtual desktops connected in any number of different configurations. For instance a virtual data center may include a plurality of redundant virtual file servers and a virtual load balancer that routes traffic to balance traffic load of the virtual file servers. The virtual data center provided by the Enterprise Cloud may include a firewall between a network and the virtual data center. Additionally or alternatively the virtual data center may include firewalls to protect individual virtual servers desktops in the virtual data center.

In some implementations a virtual data center provided by the Enterprise Cloud for an account includes a group of virtual desktops and or virtual servers indicated in respective settings files for the account. The virtual desktops and or virtual servers in the virtual data center may be provided by the VDI and VPS subsystems and via a shared user interface. The settings file for each account may include server settings for each virtual desktop and or virtual servers included in the respective virtual data center. The server settings may include a pointer to a VMWARE image and also specify computing resources to dedicate to execution of the corresponding virtual desktops and or virtual servers. The virtual servers may provide various types of services including for example file servers email servers web hosting virtual meeting services e.g. VoIP billing and or remote computing services routing load balancing and or switch board services e.g. Private Branch Exchange .

The virtual desktops and or virtual servers are interconnected in the virtual data center according to data center configuration settings included in the respective settings files for the account. During operation computing servers of the Enterprise Cloud emulate the virtual data center by emulating the virtual desktops and or virtual servers indicated in the server settings and also emulating the virtual connections specified in the data center configuration settings. In some implementations emulation of the virtual data centers in the Enterprise Cloud includes execution of a resource management process configured to assign computing resources allocated for the virtual data center for emulation of the virtual desktops virtual servers and connections of the virtual data center.

In some implementations a virtual data center provides a perimeter firewall between an internal network of the virtual data center and an external network. The perimeter firewall may provide network protection for the virtual data center with stateful packet inspection access control lists network address translation NAT and virtual private network VPN connections. In some implementations the virtual data center may also include individual firewalls isolating one or more virtual servers desktops from other virtual servers desktops in the virtual data center. In some implementations a web based GUI is provided for configuration of access rules enforced by the firewall s which may include for example whitelists or blacklists of services to pass block and or users or IP addresses to allow access. The GUI may also be used to configure internet access rules for public facing applications or to create one or more VPN tunnels connecting one or more end user networks to the virtual data center.

In some implementations the virtual data centers run on a VMWARE platform leveraging a fault tolerant storage area network SAN . In some implementations the Enterprise Cloud subsystem uses VBROKER to issue commands to VMWARE hosting the virtual servers desktops. VBROKER provides an application program interface API to communicate with VMWARE. For example VBROKER may translate VPS API calls into commands scripts against VBLOCK. VBROKER may be used as middleware to issue commands to various platforms e.g. VMWARE or OPENSTACK .

VMWARE vSphere availability features may be employed to keep the virtual network and or the virtual servers and virtual desktops therein running in the event of a server failure. Features such as vMotion and storage vMotion may also be used to protect against interruption of service due to hardware failure. In some implementations the servers providing the virtual data center may include fault tolerant hard disk storage. For example each disk may have two serial attached small computer system interface SAS connectors attaching it to diverse storage processors inside the storage area network. The dual SAS connections allow the storage area network to see the disks on separate data paths and in the event of a failure reroute the storage operations through an available path with no noticeable performance impact. In addition the potential for data loss or corruption due to a bus reset is completely eliminated. The disks themselves reside in storage shelves with redundant power supplies and cabling attaching the disks to the multiple storage processors. As redundancy is built into the system redundant virtual servers are not needed to achieve system fault tolerance in the virtual data center.

In some implementations each account may be allocated a dedicated amount of computing resources of a plurality of computing servers e.g. in a cloud . For instance each account may be provided with a certain number of CPU cores memory storage and or bandwidth which are dedicated to the account. The pre allocation of dedicated resources improves reliability in high traffic conditions.

In some implementations the plurality of computing servers is also configured to provide a GUI for adjusting configuration settings of the virtual data center. For example the GUI may provide an interface for an authorized user of the account to configure virtual desktops virtual servers connections and or settings of the virtual data center. For instance the GUI may provide an interface to assign a subset of available computing resources e.g. processing cores time memory or storage for the account to particular virtual desktops and or virtual servers in the virtual data center. The GUI may also provide a mechanism to import and or replicate virtual machines in the virtual data center. In some implementations the GUI may provide the ability to save a backup or snapshot of the layout and configuration of the virtual data center.

The system shown in also includes a domain name server DNS subsystem . The DNS subsystem is configured to dynamically map each domain name associated with an account to an IP address of a select virtual server or service provided for the account. For each account the mapping of domain names is performed according to a respective set of mapping criteria indicated in a settings file of the account.

As indicated above various mapping criteria may be utilized by the various accounts to map the domain names to the virtual servers services. For example the mapping criteria may map domain names as a function of the operating status of the virtual servers services processing load of the virtual servers e.g. load balancing network traffic conditions e.g. latency and bandwidth quality of service requirements geographical location of an end user submitting a DNS query permissions of the end user date or time of the DNS query type of virtual server associated with the domain name and or number of servers associated with the domain name. In some implementations the system provides a web based GUI configured and arranged to allow one or more authorized users for the account to adjust the mapping criteria indicated in the settings file.

In some implementations the DNS subsystem performs the mapping of the domain name associated with an account according to a respective set of mapping criteria indicated in a settings file of the account. For each account the DNS subsystem may map domain names to IP addresses of the virtual servers according to various mapping criteria. For example in some implementations the mapping criteria may cause the DNS subsystem to map domain names based on the operating status of the virtual servers. For instance the mapping criteria may map a domain name to a first virtual server while the first virtual server is operating correctly. In response to the first server going down the mapping criteria may map the domain name to a backup virtual server. As another example the mapping criteria may cause the DNS subsystem to map domain names based on processing load of the virtual servers. For instance domain names may be mapped to balance the processing load between a plurality of virtual servers. In some implementations the mapping criteria may cause the DNS subsystem to map domain names based on the geographical location of the user submitting a domain name query to the DNS subsystem .

Various implementations may additionally or alternatively use other criteria for mapping of domain names including but not limited to date or time of the DNS query type of virtual server associated with the domain name number of servers associated with the domain name and or permissions of user submitting the DNS query.

In various implementations a respective set of mapping criteria may be used for each account. This allows the domain names mapping criteria to be customized for the particular needs and services of each account. In some implementations the DNS subsystem provides a representational state transfer REST API for configuration of DNS mapping for an account. In some implementations domain templates having various preconfigured mapping criteria may be provided for easy configuration of the DNS subsystem for an account. In some implementations the DNS subsystem auto configures mapping based on virtual services provided for the account by the other subsystems e.g. and or .

In some implementations the DNS subsystem provides a web based GUI configured and arranged to allow one or more authorized users of the account to adjust the mapping criteria indicated in the settings file. An authorized user may specify a single set of mapping criteria for all virtual servers associated with the account or may specify a different set of mapping criteria for different types of virtual servers or for different virtual servers of the same type. Further an authorized user may specify different sets of mapping criteria for different departments or users associated with the account.

In this example the system also includes a fourth subsystem Watchdog configured to monitor status of the virtual servers services provided for the various accounts. The Watchdog subsystem is configured to determine the operating status of the virtual servers services provided for each account. For instance Watchdog subsystem may be configured to monitor services provided by the other subsystems e.g. and or for fall over. Watchdog subsystem may provide domain monitoring across multiple services. The Watchdog subsystem may provide real time event tracking for the services for each account.

In some implementations the Watchdog subsystem provides a GUI for display and analysis of the operating status of virtual servers services provided for an account. In some implementations the GUI is configured to display a respective timeline for each of a plurality of servers. Each timeline may have graphical time blocks for each of the plurality of time periods. Each time block has a graphical indication that describes the operating state of the server during the corresponding time period. The timelines may be rearranged by a user for visual comparison and analysis of the operating state of the virtual servers services. Such visual analysis may be useful for instance for distinguishing between network events affecting multiple servers and server events affecting an individual server.

Consistent with the above described examples in some implementations the Watchdog subsystem may be configured to provide an alert to one or more authorized users of the account if the operating status of the virtual servers services satisfies alert criteria indicated in an alert policy for the account. The Watchdog subsystem may provide alerts using various messaging mechanisms including for example SMS text messages automated phone calls emails and or other messaging services e.g. Facebook Myspace Twitter and or Instant Messengers . In some implementations multiple notifications are sent to multiple recipients and or use multiple types of messages. In some implementations the GUI for adjusting mapping criteria may also be used to adjust the trigger conditions and or alert message options.

In some implementations the DNS subsystem is configured to map domain names to the virtual servers services based on the operating statuses of the virtual servers services as determined by the Watchdog subsystem . For example the DNS subsystem may be configured to remap a domain name from a first virtual server to a backup virtual server in response to the first virtual server becoming unresponsive.

The system shown in also includes a subsystem Z Common configured to provide billing for various services provided for an account. The subsystem handles rate plans usage statistics and billings for various services of the system. The Z Common subsystem may bill services using flat rates for specified time periods e.g. a monthly rate or using usage rates indicating a specified billing rate for a specified amount of use e.g. time amount of data and or number of users . The Z Common subsystem is configurable as a plug and play component to provide billing services for various independent systems. In some implementations a GUI is provided for authorized users to manage services billing options payment options account specific alerts and or various administrated options. In some implementations the GUI provides an interface for a user to configure subscription and billing.

The system includes a subsystem Z Control which configures settings of one or more of the subsystems for respective accounts of the system. In some implementations the Z Control subsystem stores data indicating services provided by the various subsystems e.g. and or which are subscribed to for each account. The Z Control subsystem may further store user configurable settings for the subscribed to services for each respective account. For example the settings for an account may indicate settings for one or more virtual servers provided for the account by the VPS subsystem . In some implementations the Z Control subsystem may provide a GUI for authorized users of an account to manage virtual services subscriptions and or various administrated options.

Various blocks modules or other circuits may be implemented to carry out one or more of the operations and activities described herein and or shown in the figures. In these contexts a block also sometimes logic circuitry or module is a circuit that carries out one or more of these or related operations activities e.g. a computing server a network monitor and or a GUI . For example in certain of the above discussed embodiments one or more modules are discrete logic circuits or programmable logic circuits configured and arranged for implementing these operations activities as in the blocks shown in . In certain embodiments such a programmable circuit is one or more computer circuits programmed to execute a set or sets of instructions and or configuration data . The instructions and or configuration data can be in the form of firmware or software stored in and accessible from a memory circuit . As an example first and second modules include a combination of a CPU hardware based circuit and a set of instructions in the form of firmware where the first module includes a first CPU hardware circuit with one set of instructions and the second module includes a second CPU hardware circuit with another set of instructions.

Certain embodiments are directed to a computer program product e.g. nonvolatile memory device which includes a machine or computer readable medium having stored thereon instructions which may be executed by a computer or other electronic device to perform these operations activities.

The various embodiments described above are provided by way of illustration only and should not be construed to limit the disclosure. Based upon the above discussion and illustrations those skilled in the art will readily recognize that various modifications and changes may be made without strictly following the exemplary embodiments and applications illustrated and described herein. For instance although implementations may in some cases be described in individual figures it will be appreciated that features from one figure can be combined with features from another figure even though the combination is not explicitly shown or explicitly described as a combination. The disclosure may also be implemented using a variety of approaches such as those involving a number of different circuits operating systems and or software programs packages. Such modifications and changes do not depart from the true spirit and scope of the present disclosure including that set forth in the following claims.

