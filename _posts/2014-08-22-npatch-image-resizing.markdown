---

title: N-patch image resizing
abstract: The subject matter of this specification can be embodied in, among other things, a method that includes receiving an image having indication pixels that define a plurality of regions within the image that are used for resizing the image and determining, based on the indication pixels, two or more of the regions that are stretchable regions that change size when the image is resized. The method also includes resizing the image by changing a size of at least one of the determined stretchable regions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09530184&OS=09530184&RS=09530184
owner: Google Inc.
number: 09530184
owner_city: Mountain View
owner_country: US
publication_date: 20140822
---
This application is a continuation application of and claims priority to U.S. application Ser. No. 11 925 259 filed on Oct. 26 2007 the entire contents of which are hereby incorporated by reference.

User interfaces may have elements that vary in size. For example a user interface element can be a button that a user selects to perform an action. The elements may each include a background image that has content such as text drawn on the background image. For example the button may have a blue background image and text that indicates the user should select the button to save a file.

An element of a first size can use a background image of a corresponding first size and an element of a second size can use different background image that corresponds to the second size. A user interface may use both of these images if displaying two different sized elements even if the images are substantially the same. For example both images may include a solid green color but the user interface uses two images of different sizes because the elements displayed are different sizes.

In general this document describes methods and systems for defining portions of an image that change in size and portions that are fixed in size when the image is increased and or decreased in size.

In a first general aspect a computer implemented method is described. The method includes receiving an image having indication pixels that define a plurality of regions within the image that are used for resizing the image and determining based on the indication pixels two or more of the regions that are stretchable regions that change size when the image is resized. The method also includes resizing the image by changing a size of at least one of the determined stretchable regions.

In a second general aspect a computer implemented method is described that includes accessing an image having a border and indicating using pixels of the image that are part of the border a plurality of stretchable segments that change size if the image is resized. The method also includes outputting the image having the indicated stretchable segments for use by a graphical interface configured to resize the image.

In another general aspect a system is described. The system includes an image pre processor for receiving an image having pixels located in a border of the image that define two or more stretchable regions within the image that are used for resizing the image. The system also includes means for determining based on the pixels the stretchable regions that change size when the image is resized and a document display module for resizing the image by changing a size of at least one of the determined stretchable regions.

The details of one or more embodiments are set forth in the accompanying drawings and the description below. Other features and advantages will be apparent from the description and drawings and from the claims.

This document describes systems and techniques for resizing an image having multiple resizable or stretchable regions along with static or fixed regions that do not change size when the image is resized. The image to be resized includes information that defines the resizable regions and the regions that are fixed in size.

The image includes resizing information that defines one or more resizable regions within the image . A user may add resizing information to an image using an image editor such as Adobe Photoshop developed by Adobe Systems Inc. of San Jose Calif. The image editor may be for example pixel based vector based or a combination of pixel and vector based.

Drawing information such as the small text and the large text may be presented in association with one or more of the resizable regions. For example the image may be presented in association with the small text using a first display device . The image is resized according to the included resizing information to accommodate the small text and forms a first resized image as shown in the first display device .

In another example the image may be presented in association with the large text using a second display device . The image is resized according to the included resizing information to accommodate the large text and forms a second resized image as shown in the second display device .

In another example the image may be presented in association with both the small text and the large text using a third display device . The image is resized according to the included resizing information to accommodate the small text and forms the first resized image as shown in the third display device . In addition the image is resized according to the included resizing information to accommodate the large text and forms the second resized image as shown in the third display device .

A resized image may include associated drawing information or the associated drawing information may be presented along with the resized image. For example the drawing information may be visually presented on top of the resized image when displaying the image with drawing information.

In some implementations the vertical bar and the horizontal bar have a predetermined pixel width and color. For example the vertical bar and the horizontal bar may be black in color and one pixel in thickness.

In some implementations the vertical bar of the resizable region is placed on the left side of the image . In some implementations the horizontal bar of the resizable region is placed on the top side of the image . Alternatively resizing information may be placed in locations other than the left and top sides of the image .

The drawing region is defined by a vertical bar and a horizontal bar . The vertical bar defines the height and vertical position of the drawing region within the image . The horizontal bar defines the width and horizontal position of the drawing region within the image . The vertical bar and the horizontal bar may have predetermined pixel width and color as previously described.

In some implementations the vertical bar of the drawing region is placed on the right side of the image . In some implementations the horizontal bar of the drawing region is placed on the bottom side of the image . Alternatively drawing region information may be placed in locations other than the right and bottom sides of the image .

The drawing region may have a width or height that is different than the resizable region . This may allow padding and or overlap between the regions defined by the resizable region and the drawing region . In the example of the vertical bar defining the drawing region is longer than the vertical bar defining the resizable region . This results in allowing the drawing information to overlap the region above the resizable region as indicated by shaded areas and .

In addition in the depicted example the horizontal bar of the drawing region is shorter than the horizontal bar of the resizable region . This results in a padding of space that is unused by the drawing information as indicated by shaded areas and in .

Each of the regions is either fixed in size or resizable in the vertical direction as defined by the vertical bars . In particular the vertical bar indicates that the regions in the first row are resizable in the vertical direction. The absence of a bar at the second row indicates that the regions have a fixed size in the vertical direction. The vertical bar indicates that the regions in the third row are resizable in the vertical direction.

Each of the regions is either fixed in size or resizable in the horizontal direction as defined by the horizontal bars . In particular the absence of marking pixels e.g. which can form a bar at the first column indicates that the regions and have a fixed size in the horizontal direction. The horizontal bar indicates that the regions and in the second column are resizable in the horizontal direction. The absence of a bar at the third column indicates that the regions and have a fixed size in the horizontal direction. The horizontal bar indicates that the regions and in the fourth column are resizable in the horizontal direction.

A region may be resizable in one direction and have a fixed size in the other direction. For example the region is resizable in the vertical direction and has a fixed size in the horizontal direction. The region has a fixed size in the vertical direction and is resizable in the horizontal direction.

In some implementations when resizing a region the region of the image may be rescaled e.g. stretched or tiled. For example where the region is rescaled vertically to twice the original vertical size of the region then individual pixels vectors or other drawing elements may be doubled in size. Rescaling may also include interpolating image information between a first drawing element and a subsequent drawing element. In another example where the region is tiled horizontally to three times the original horizontal size of the region then the region may be copied three times with the copies placed side by side to resize the region . A fractional portion of a region may also be used during tiling.

In some implementations multiple types of resizing may be used within the same region either in the same direction or separate directions. For example the region may be tiled in the horizontal direction and rescaled in the vertical direction. Additional information may be included in the image to identify the type of resizing to be used. For example multiple rows and columns of bars may be used to identify the type of resizing used for each of the regions e.g. first row and column of bars indicate rescaling while second row and column of bars indicate tiling . In another example a color or pattern of the vertical bars and the horizontal bars may indicate the type of resizing used e.g. gray bars indicate rescaling and black bars indicate tiling .

In another example a color or pattern of either the vertical or horizontal bars can indicate a type of interpolation used when stretching a portion of the image. For example red pixels within a bar may indicate that the corresponding portion should be stretched using linear interpolation and blue pixels within a bar may indicate that the corresponding portion should use non linear interpolation.

In yet another example a color or pattern of the horizontal or vertical bars can indicate whether the corresponding portion should be a drawable region or a stretchable or static region. For example if marking pixels within a bar are gray the corresponding section will be a drawing section. If the marking pixels are black the section with be a stretchable section.

In some implementations the regions are resized in proportion to the relative sizes of the vertical bars and or the horizontal bars . For example the horizontal component of the regions and may be resized proportionally to the horizontal component of the regions and as determined by the size of the horizontal bars respectively. In another example the vertical components of the regions may be resized proportionally to the vertical components of the regions as determined by the vertical bars respectively. In another example all of the resizable components may be resized proportionally irrespective of the direction e.g. vertical or horizontal .

In some implementations a list of the horizontal lengths and the vertical lengths is constructed. The lengths of the vertical bars and the horizontal bars may be measured relative to the top left corner of the image . For example the horizontal list may include the starting and ending pixels for each column e.g. X 7 12 19 30 and the vertical list may include the starting and ending pixels for each row e.g. Y 8 14 22 . In this example the starting pixel for the first column and row is always zero and is omitted from the lists. Also as can be seen from pairs of values within the arrays e.g. 7 12 and 19 30 for the x axis define the stretchable regions within the image however in other implementations static portions can be specified.

The lists allow the regions of the image to be accessed and resized. The regions may be rescaled or tiled as previously described. The regions may also undergo other processing such as the addition of a color.

A user may create the small text and the large text using a text editor. The small text contains information that defines the layout and content of the small text . The large text contains information that describes the layout and content of the large text . For example the small text and the large text may include a markup language such as Extensible Markup Language XML or Hypertext Markup Language HTML . The small text indicates that the content is the term OK the content has a font size of 8 point pt the content is aligned with the top of a parent element and the content is centered from left to right in the parent element. The large text indicates that the content is the phrase I Agree the content has a font size of 14 pt the content is aligned with the bottom of a parent element and the content is centered from left to right in the parent element. The small text and the large text both indicate that the image is used as a background image for the texts.

A user may create the image as previously described using an image editor. The image can include resizing information. The resizing information defines the resizable regions within the image . The resizing information and or the image may also include information describing one or more drawing regions within the image .

An image preprocessor receives the image . The image preprocessor parses the image to determine the resizable regions and in some implementations the drawing regions. The image preprocessor may process images as they are requested for display at a display device or the image preprocessor may process the images and store the processed information for subsequent requests. In some implementations the image preprocessor identifies images for processing based on an identifier in the file name of the images such as a file extension or an identifier in metadata associated with the file. In some implementations the image preprocessor identifies images for processing by determining if drawing information such as the small text and the large text includes a reference to one or more images for resizing.

In some implementations the image preprocessor removes or strips the resizing information drawable area information or both from the image . Alternatively the resizing information or the drawable area information may remain within the image . For example the resizing information such as the vertical bar and the horizontal bar or the drawable area information such as the vertical bar and the horizontal bar may be a size color or shape that is unnoticed by a user viewing the image unobtrusive or otherwise integrated within the image . The image preprocessor can output the results of parsing the image as resizable region information drawing region information or both. The image preprocessor may also output a stripped image .

An image modification library can receive the resizable region information the drawing region information and the stripped image . The image modification library can combine drawing information such as the small text or the large text with the resizable region information the drawing region information and the stripped image to form a resized image . The image modification library may also translate the drawing information into a markup language format used by a document display module .

The document display module e.g. a web browser can present the drawing information in association with the correspondingly resized image. For example the document display module presents the small text including the content OK in association with the first resized image . The document display module also can present the large text including the content I Agree in association with the second resized image .

The process receives drawing information. For example the image modification library receives the small text and the large text .

The process determines one or more resizable regions of the resizable image based on resizing information within the resizable image. For example the image preprocessor parses the image . The image preprocessor identifies the vertical bar and the horizontal bar that define the resizable regions. The image preprocessor may store the resizing information in a structure or list and pass the information to the image modification library .

Optionally the process determines one or more drawing regions of the resizable image based on the resizing information within the resizable image. For example the image preprocessor parses the image . The image preprocessor identifies the vertical bar and the horizontal bar that define the drawing regions. The image preprocessor may store the drawing region information in a structure or list and pass the information to the image modification library .

Optionally the process removes the resizing information from the resizable image. For example the image preprocessor may remove the vertical bar the horizontal bar the vertical bar and the horizontal bar from the image and output the stripped image to the image modification library .

The process determines a size of the resizable image based on the drawing information. For example the image modification library uses the drawing information such as the small text or the large text to determine an amount to resize the resizable regions within the image and or the stripped image .

The process generates a resized image based on the determined size and the resizable image. For example the image modification library generates the first resized image based on the small text and the second resized image based on the large text .

Referring now to the exterior appearance of an exemplary device that implements the image resizing is illustrated. Briefly and among other things the device includes a processor configured to perform one or more of the following operations parse resizing information within an image parse information from the image related to drawing regions on the image remove visible indications for the resizing and or drawing information from the image resize the image based on the resizing information and draw content on the image in an area indicated by the drawing information.

In more detail the hardware environment of the device includes a display for displaying text images and video to a user a keyboard for entering text data and user commands into the device a pointing device for pointing selecting and adjusting objects displayed on the display an antenna a network connection a camera a microphone and a speaker . Although the device includes an external antenna it is anticipated that the device can include an internal antenna which is not visible to the user.

The display displays video graphics images and text that make up the user interface for the software applications used by the device and the operating system programs used to operate the device . Among the possible elements that may be displayed on the display are a new mail indicator that alerts a user to the presence of a new message an active call indicator that indicates that a telephone call is being received placed or is occurring a data standard indicator that indicates the data standard currently being used by the device to transmit and receive data a signal strength indicator that indicates a measurement of the strength of a signal received by via the antenna such as by using signal strength bars a battery life indicator that indicates a measurement of the remaining battery life or a clock that outputs the current time.

The display may also show application icons representing various applications available to the user such as a web browser application icon a phone application icon a search application icon a contacts application icon a mapping application icon an email application icon or other application icons. In certain implementations the icons can include the resizable image as a background and either text or another image as content drawn on the background as described previously. For example when the user selects an icon the processor can enlarge the background image and the corresponding content by increasing the size of the stretchable regions and the corresponding content.

In one example implementation the display is a quarter video graphics array QVGA thin film transistor TFT liquid crystal display LCD capable of 16 bit or better color.

A user uses the keyboard or keypad to enter commands and data to operate and control the operating system and applications on the device . The keyboard includes standard keyboard buttons or keys associated with alphanumeric characters such as keys and that are associated with the alphanumeric characters Q and W when selected alone or are associated with the characters and 1 when pressed in combination with key . A single key may also be associated with special characters or functions including unlabeled functions based upon the state of the operating system or applications invoked by the operating system. For example when an application calls for the input of a numeric character a selection of the key alone may cause a 1 to be input.

In addition to keys traditionally associated with an alphanumeric keypad the keyboard also includes other special function keys such as an establish call key that causes a received call to be answered or a new call to be originated a terminate call key that causes the termination of an active call a drop down menu key that causes a menu to appear within the display a backwards navigation key that causes a previously accessed network address to be accessed again a favorites key that causes an active web page to be placed in a bookmarks folder of favorite sites or causes a bookmarks folder to appear a home page key that causes an application invoked on the device to navigate to a predetermined network address or other keys that provide for multiple way navigation application selection and power and volume control.

The user uses the pointing device to select and adjust graphics and text objects displayed on the display as part of the interaction with and control of the device and the applications invoked on the device . The pointing device is any appropriate type of pointing device and may be a joystick a trackball a touch pad a camera a voice input device a touch screen device implemented in combination with the display or any other input device.

The antenna which can be an external antenna or an internal antenna is a directional or omni directional antenna used for the transmission and reception of radiofrequency RF signals that implement point to point radio communication wireless local area network LAN communication or location determination. The antenna may facilitate point to point radio communication using the Specialized Mobile Radio SMR cellular or Personal Communication Service PCS frequency bands and may implement the transmission of data using any number or data standards. For example the antenna may allow data to be transmitted between the device and a base station using technologies such as Wireless Broadband WiBro Worldwide Interoperability for Microwave ACCess WiMAX 3GPP Long Term Evolution LTE Ultra Mobile Broadband UMB High Performance Radio Metropolitan Network HIPERMAN iBurst or High Capacity Spatial Division Multiple Access HC SDMA High Speed OFDM Packet Access HSOPA High Speed Packet Access HSPA HSPA Evolution HSPA High Speed Upload Packet Access HSUPA High Speed Downlink Packet Access HSDPA Generic Access Network GAN Time Division Synchronous Code Division Multiple Access TD SCDMA Evolution Data Optimized or Evolution Data Only EVDO Time Division Code Division Multiple Access TD CDMA Freedom Of Mobile Multimedia Access FOMA Universal Mobile Telecommunications System UMTS Wideband Code Division Multiple Access W CDMA Enhanced Data rates for GSM Evolution EDGE Enhanced GPRS EGPRS Code Division Multiple Access 2000 CDMA2000 Wideband Integrated Dispatch Enhanced Network WiDEN High Speed Circuit Switched Data HSCSD General Packet Radio Service GPRS Personal Handy Phone System PHS Circuit Switched Data CSD Personal Digital Cellular PDC CDMAone Digital Advanced Mobile Phone System D AMPS Integrated Digital Enhanced Network IDEN Global System for Mobile communications GSM DataTAC Mobitex Cellular Digital Packet Data CDPD Hicap Advanced Mobile Phone System AMPS Nordic Mobile Phone NMP Autoradiopuhelin ARP Autotel or Public Automated Land Mobile PALM Mobiltelefonisystem D MTD Offentlig Landmobil Telefoni OLT Advanced Mobile Telephone System AMTS Improved Mobile Telephone Service IMTS Mobile Telephone System MTS Push To Talk PTT or other technologies. Communication via W CDMA HSUPA GSM GPRS and EDGE networks may occur for example using a QUALCOMM MSM10200A chipset with an QUALCOMM RTR9285 transceiver and PM10840 power management circuit.

The wireless or wireline computer network connection may be a modem connection a local area network LAN connection including the Ethernet or a broadband wide area network WAN connection such as a digital subscriber line DSL cable high speed internet connection dial up connection T 1 line T 3 line fiber optic connection or satellite connection. The network connection may connect to a LAN network a corporate or government WAN network the Internet a telephone network or other network. The network connection uses a wireline or wireless connector. Example wireless connectors include for example an INFRARED DATA ASSOCIATION IrDA wireless connector a Wi Fi wireless connector an optical wireless connector an INSTITUTE OF ELECTRICAL AND ELECTRONICS ENGINEERS IEEE Standard 802.11 wireless connector a BLUETOOTH wireless connector such as a BLUETOOTH version 1.2 or 3.0 connector a near field communications NFC connector an orthogonal frequency division multiplexing OFDM ultra wide band UWB wireless connector a time modulated ultra wide band TM UWB wireless connector or other wireless connector. Example wireline connectors include for example a IEEE 1694 FIREWIRE connector a Universal Serial Bus USB connector including a mini B USB interface connector a serial port connector a parallel port connector or other wireline connector. In another implementation the functions of the network connection and the antenna are integrated into a single component.

The camera allows the device to capture digital images and may be a scanner a digital still camera a digital video camera other digital input device. In one example implementation the camera is a 3 mega pixel MP camera that utilizes a complementary metal oxide semiconductor CMOS . The camera may also be associated with software to perform various functions on captured images such as identification of certain portions of an image to permit for cropping of those portions from the image.

The microphone allows the device to capture sound and may be an omni directional microphone a unidirectional microphone a bi directional microphone a shotgun microphone or other type apparatus that converts sound to an electrical signal. The microphone may be used to capture sound generated by a user for example when the user is speaking to another user during a telephone call via the device . Conversely the speaker allows the device to convert an electrical signal into sound such a voice from another user generated by a telephone application program or a ring tone generated from a ring tone application program. Furthermore although the device is illustrated in as a handheld device in further implementations the device may be a laptop a workstation a midrange computer a mainframe an embedded system telephone desktop PC a tablet computer a PDA or other type of computing device.

The CPU is one of a number of computer processors including. In one arrangement the computer CPU is more than one processing unit. The RAM interfaces with the computer bus so as to provide quick RAM storage to the CPU during the execution of software programs such as the operating system application programs and device drivers. More specifically the CPU loads computer executable process steps from the storage medium or other media into a field of the RAM in order to execute software programs. Data is stored in the RAM where the data is accessed by the computer CPU during execution. In one example configuration the device includes at least 128 MB of RAM and 256 MB of flash memory.

The storage medium itself may include a number of physical drive units such as a redundant array of independent disks RAID a floppy disk drive a flash memory a USB flash drive an external hard disk drive thumb drive pen drive key drive a High Density Digital Versatile Disc HD DVD optical disc drive an internal hard disk drive a Blu Ray optical disc drive or a Holographic Digital Data Storage HDDS optical disc drive an external mini dual in line memory module DIMM synchronous dynamic random access memory SDRAM or an external micro DIMM SDRAM. Such computer readable storage media allow the device to access computer executable process steps application programs and the like stored on removable and non removable memory media to off load data from the device or to upload data onto the device .

A computer program product is tangibly embodied in storage medium a machine readable storage medium. The computer program product includes instructions that when read by a machine operate to cause a data processing apparatus to receive an image having indication pixels that define a plurality of regions within the image that are used for resizing the image determine based on the indication pixels two or more of the regions that are stretchable regions that change size when the image is resized and resize the image by changing a size of at least one of the determined stretchable regions based on a size of content to be drawn on the image.

The operating system may be a LINUX based operating system such as the GOOGLE mobile device platform APPLE MAC OS X MICROSOFT WINDOWS NT WINDOWS 2000 WINDOWS XP WINDOWS MOBILE a variety of UNIX flavored operating systems or a proprietary operating system for computers or embedded systems. The application development platform or framework for the operating system may be BINARY RUNTIME ENVIRONMENT FOR WIRELESS BREW JAVA Platform Micro Edition JAVA ME or JAVA 2 Platform Micro Edition J2ME using the SUN MICROSYSTEMS JAVASCRIPT programming language PYTHON FLASH LITE or MICROSOFT .NET Compact or another appropriate environment.

The device stores computer executable code for the operating system and the application programs such as an email instant messaging a video service application a mapping application word processing spreadsheet presentation gaming mapping web browsing JAVASCRIPT engine or other applications. For example one implementation may allow a user to access the GOOGLE GMAIL email application the GOOGLE TALK instant messaging application a YOUTUBE video service application a GOOGLE MAPS or GOOGLE EARTH mapping application or a GOOGLE PICASA imaging editing and presentation application. The application programs may also include a widget or gadget engine such as a TAFRI widget engine a MICROSOFT gadget engine such as the WINDOWS SIDEBAR gadget engine or the KAPSULES gadget engine a YAHOO widget engine such as the KONFABULTOR widget engine the APPLE DASHBOARD widget engine the GOOGLE gadget engine the KLIPFOLIO widget engine an OPERA widget engine the WIDSETS widget engine a proprietary widget or gadget engine or other widget or gadget engine the provides host system software for a physically inspired applet on a desktop.

Although it is possible to provide for image resizing using the above described implementation it is also possible to implement the functions according to the present disclosure as a dynamic link library DLL or as a plug in to other application programs such as an Internet web browser such as the FOXFIRE web browser the APPLE SAFARI web browser or the MICROSOFT INTERNET EXPLORER web browser.

The navigation module may determine an absolute or relative position of the device such as by using the Global Positioning System GPS signals the GLObal NAvigation Satellite System GLONASS the Galileo positioning system the Beidou Satellite Navigation and Positioning System an inertial navigation system a dead reckoning system or by accessing address internet protocol IP address or location information in a database. The navigation module may also be used to measure angular displacement orientation or velocity of the device such as by using one or more accelerometers.

The operating system can generally be organized into six components a kernel libraries an operating system runtime application libraries system services and applications . The kernel includes a display driver that allows software such as the operating system and the application programs to interact with the display via the display interface a camera driver that allows the software to interact with the camera a BLUETOOTH driver a M Systems driver a binder IPC driver a USB driver a keypad driver that allows the software to interact with the keyboard via the keyboard interface a WiFi driver audio drivers that allow the software to interact with the microphone and the speaker via the sound interface and a power management component that allows the software to interact with and manage the power source .

The BLUETOOTH driver which in one implementation is based on the BlueZ BLUETOOTH stack for LINUX based operating systems provides profile support for headsets and hands free devices dial up networking personal area networking PAN or audio streaming such as by Advance Audio Distribution Profile A2DP or Audio Video Remote Control Profile AVRCP . The BLUETOOTH driver provides JAVA bindings for scanning pairing and unpairing and service queries.

The libraries include a media framework that supports standard video audio and still frame formats such as Moving Picture Experts Group MPEG 4 H.264 MPEG 1 Audio Layer 3 MP3 Advanced Audio Coding AAC Adaptive Multi Rate AMR Joint Photographic Experts Group JPEG and others using an efficient JAVA Application Programming Interface API layer a surface manager a simple graphics library SGL for two dimensional application drawing an Open Graphics Library for Embedded Systems OpenGL ES for gaming and three dimensional rendering a C standard library LIBC a LIBWEBCORE library a FreeType library an SSL and an SQLite library .

The operating system runtime which in some implementations makes up a Mobile Information Device Profile MIDP runtime includes core JAVA libraries and a Dalvik virtual machine . The Dalvik virtual machine is a custom JAVA compatible virtual machine that runs a customized file format .DEX as well as unmodified JAVA files .CLASS .JAR . With regard to graphics rendering a system wide composer manages surfaces and a frame buffer and handles window transitions using the OpenGL ES and two dimensional hardware accelerators for its compositions.

The Dalvik virtual machine may be used with an embedded environment since it uses runtime memory very efficiently implements a CPU optimized byte code interpreter and supports multiple virtual machine processes per device. The custom file format .DEX is designed for runtime efficiency using a shared constant pool to reduce memory read only structures to improve cross process sharing concise and fixed width instructions to reduce parse time thereby allowing installed applications to be translated into the custom file format at build time. The associated byte codes are designed for quick interpretation since register based instead of stack based instructions reduce memory and dispatch overhead since using fixed width instructions simplifies parsing and since the 16 bit code units minimize reads.

The application libraries which generally make up the MIDP JAVA Specification Requests JSRs includes a view system a resource manager and content providers . The system services includes a status bar an application launcher a package manager that maintains information for all installed applications a telephony manager that provides an application level JAVA interface to the telephony subsystem a notification manager that allows all applications access to the status bar and on screen notifications a window manager that allows multiple applications with multiple windows to share the display and an activity manager that runs each application in a separate process manages an application life cycle and maintains a cross application history.

The applications which generally make up the MIDP applications include a home application a dialer application a contacts application a browser application and an image resizing application .

The telephony manager provides event notifications such as phone state network state Subscriber Identity Module SIM status or voicemail status allows access to state information such as network information SIM information or voicemail presence initiates calls and queries and controls the call state. The browser application renders web pages in a full desktop like manager including navigation functions. Furthermore the browser application allows single column small screen rendering and provides for the embedding of HTML views into other applications.

The persistent core system services such as the surface manager the window manager or the activity manager are hosted by system processes although application processes such processes associated with the dialer application may also be persistent. The processes implemented by the operating system kernel may generally be categorized as system services processes dialer processes browser processes and maps processes . The system services processes include status bar processes associated with the status bar application launcher processes associated with the application launcher package manager processes associated with the package manager activity manager processes associated with the activity manager resource manager processes associated with a resource manager that provides access to graphics localized strings and XML layout descriptions notification manger processes associated with the notification manager window manager processes associated with the window manager core JAVA libraries processes associated with the core JAVA libraries surface manager processes associated with the surface manager Dalvik JAVA virtual machine processes associated with the Dalvik virtual machine LIBC processes associated with the LIBC library and image resizing processes associated with the image resizing application .

The dialer processes include dialer application processes associated with the dialer application telephony manager processes associated with the telephony manager core JAVA libraries processes associated with the core JAVA libraries Dalvik JAVA virtual machine processes associated with the Dalvik Virtual machine and LIBC processes associated with the LIBC library . The browser processes include browser application processes associated with the browser application core JAVA libraries processes associated with the core JAVA libraries Dalvik JAVA virtual machine processes associated with the Dalvik virtual machine LIBWEBCORE processes associated with the LIBWEBCORE library and LIBC processes associated with the LIBC library .

The maps processes include maps application processes core JAVA libraries processes Dalvik JAVA virtual machine processes and LIBC processes . Notably some processes such as the Dalvik JAVA virtual machine processes may exist within one or more of the systems services processes the dialer processes the browser processes and the maps processes .

Computing device includes a processor memory a storage device a high speed interface connecting to memory and high speed expansion ports and a low speed interface connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed interface . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. The memory may also be another form of computer readable medium such as a magnetic or optical disk.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device may be or contain a computer readable medium such as a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. A computer program product can be tangibly embodied in an information carrier. The computer program product may also contain instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device memory on processor or a propagated signal.

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of functions is exemplary only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed expansion port . The low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as device . Each of such devices may contain one or more of computing device and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The device may also be provided with a storage device such as a microdrive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can execute instructions within the computing device including instructions stored in the memory . The processor may be implemented as a chipset of chips that include separate and multiple analog and digital processors. The processor may provide for example for coordination of the other components of the device such as control of user interfaces applications run by device and wireless communication by device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD Thin Film Transistor Liquid Crystal Display or an OLED Organic Light Emitting Diode display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provide in communication with processor so as to enable near area communication of device with other devices. External interface may provide for example for wired communication in some implementations or for wireless communication in other implementations and multiple interfaces may also be used.

The memory stores information within the computing device . The memory can be implemented as one or more of a computer readable medium or media a volatile memory unit or units or a non volatile memory unit or units. Expansion memory may also be provided and connected to device through expansion interface which may include for example a SIMM Single In Line Memory Module card interface. Such expansion memory may provide extra storage space for device or may also store applications or other information for device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for device and may be programmed with instructions that permit secure use of device . In addition secure applications may be provided via the SIMM cards along with additional information such as placing identifying information on the SIMM card in a non hackable manner.

The memory may include for example flash memory and or NVRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory memory on processor or a propagated signal that may be received for example over transceiver or external interface .

Device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS Global Positioning System receiver module may provide additional navigation and location related wireless data to device which may be used as appropriate by applications running on device .

Device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other similar mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

Although a few implementations have been described in detail above other modifications are possible. For example elements in the system and the process may be performed in a client and or server setting. Also resizing information may be included in an image at a location other than the border of the image such as a grid or an individual box. In some implementations the drawing information such as the content of the small text or the large text may be added to the image during the resizing of the image . For example the small text may be included within the first resized image and the large text may be included within the second resized image .

In other implementations text or other images are part of the image to be resized. A designer can designate the static region so that these portions of the image are not stretched when the image is resized. For example the design can specify that a portion of the image including text should remain unstretched e.g. be designated as a static region . When the image is stretched the static region having the text will not stretch. In this way a designer may avoid distorting the text or other images embedded in the image during resizing.

In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

