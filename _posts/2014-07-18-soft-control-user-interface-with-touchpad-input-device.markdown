---

title: Soft control user interface with touchpad input device
abstract: In one embodiment, a computing device displays a graphical parameter-control element in a graphical user interface indicating a range and a position value of a controllable parameter of an application of the computing device. The computing device may detect a touch event on a touchpad of the computing device. The computing device may determine that the touch event is a scrolling event, and scroll the position value along the range based on a direction of the scrolling event, and adjust the position value by a relative amount within the range mapping to a relative distance of the scrolling event along the touchpad.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09092078&OS=09092078&RS=09092078
owner: Facebook, Inc.
number: 09092078
owner_city: Menlo Park
owner_country: US
publication_date: 20140718
---
This application is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 13 275 145 filed 17 Oct. 2011.

The present disclosure relates generally to touch based user interfaces and more particularly to adjusting a controllable parameter of an application hosted by a computing device having a side mounted touchpad.

A touchpad is an input device including a surface that detects touch based inputs of users. A touch screen is an electronic visual display that detects the presence and location of user touch inputs. Mobile devices such as a mobile phone a tablet computer and a laptop computer often incorporate a touch screen or a touchpad to facilitate user interactions with application programs running on the mobile device.

Particular embodiments relate to touch based user interfaces that allows a user of a mobile device to adjust a controllable parameter of an application hosted by the mobile device by using touch inputs to a touchpad disposed on a lateral edge of the mobile device. These and other features aspects and advantages of the disclosure are described in more detail below in the detailed description and in conjunction with the following figures.

The invention is now described in detail with reference to a few embodiments thereof as illustrated in the accompanying drawings. In the following description numerous specific details are set forth in order to provide a thorough understanding of the present disclosure. It is apparent however to one skilled in the art that the present disclosure may be practiced without some or all of these specific details. In other instances well known process steps and or structures have not been described in detail in order not to unnecessarily obscure the present disclosure. In addition while the disclosure is described in conjunction with the particular embodiments it should be understood that this description is not intended to limit the disclosure to the described embodiments. To the contrary the description is intended to cover alternatives modifications and equivalents as may be included within the spirit and scope of the disclosure as defined by the appended claims.

A touchpad is an input device including a surface that detects touch based inputs of users. Similarly a touch screen is an electronic visual display that detects the presence and location of user touch inputs. So called dual touch or multi touch displays or touchpads refer to devices that can identify the presence location and movement of more than one touch input such as two or three finger touches. A system incorporating one or more touch based input devices may monitor one or more touch sensitive surfaces for one or more touch or near touch inputs from a user. When one or more such user inputs occur the system may determine the distinct area s of contact and identify the nature of the touch or near touch input s via geometric features and geometric arrangements e.g. location movement and determine if they correspond to various touch events e.g. tap drag swipe pinch . These touch events may then be processed by handler functions that register or subscribe as listeners to such events as illustrated in . illustrates an example touch screen of a mobile phone that hosts a browser client displaying a web page. In the example of touch screen of mobile phone displays an HTML JavaScript code snippet displaying a text string Tap on this text as listed below.

As a user taps on the text string Tap on this text. a touch event listener on TouchEvent can trigger an action of changing the text string from Tap on this text. to Boo .

Recognition of touch events by a system with one or more touch based input devices i.e. identifying one or more touch inputs by a user and determining corresponding touch event s may be implemented by a combination of hardware software and or firmware or device drivers . illustrates an example processing stack of a mobile device e.g. a smart phone with touch based input device s . Hardware layer can include one or more processors and various hardware input output devices such as camera communication interface and touch based input device e.g. touch screen touchpad . Drivers layer includes one or more drivers that communicate and control hardware layer for example a driver receiving and processing touch input signals generated by a touch screen display. Operating system runs computing programs and manages hardware layer via one or more drivers in driver layer . Libraries include one or more libraries used by one or more application programs in applications e.g. web browser address book etc. . For example touch events library can contain codes that interpret touch inputs to touch events or gestures and a web browser application program can access touch event library e.g. via function calls and process a web page with touch event handlers embedded within the page as illustrated in and in the HTML JavaScript code snippet above.

A user of an electronic device can control an application or a function hosted by the device by using various user interface controls and input devices to control one or more parameters associated with the application or function. illustrate an example digital camera. In the example of a user of digital camera can use viewfinder screen and other input devices to compose and focus an image. For example the user can use a hardware zoom lever to adjust focal length i.e. zoom in on an subject or zoom away from the subject. For example digital camera can display a zoom bar in viewfinder indicating a current value of focal length or zoom distance. For example after adjusting to a desirable zoom distance the user can press a hardware shutter button to capture the image e.g. capture a digital image and save the image in a flash memory card of digital camera as illustrated in .

Particular embodiments herein relate to a computing device such as a mobile phone netbook smartphone tablet laptop computer monitor or other portable device with a touch screen and one or more side mounted touchpads and methods of allowing users to use the one or more side mounted touchpads to control applications hosted by the computing device. Particular embodiments can improve user experience associated with mobile devices as the side mounted touchpad s can offload user interaction to the side mounted touchpad s and yield better usage of the touch screen e.g. uninterrupted viewing of a content displayed by the touch screen .

Mobile device may recognize touch inputs and determine one or more corresponding touch events or gestures. One or more applications hosted on mobile device may be configured to register a handler function that responds to the one or more touch events. In particular embodiments mobile device may recognize one or more user touch inputs performed on touch screen touchpad touchpad and or back mounted touch surface and determine one or more corresponding touch events. In particular embodiments mobile device may detect an upward scrolling event associated with touchpad based on a corresponding scrolling touch gesture of a user as illustrated in . In the example of a user touches touchpad in an upward motion e.g. the user s finger touches touchpad at a start location X moves the finger upwards while the finger is still in contact with touchpad and the finger lifts away from touchpad at an end location X wherein the end location X is closer to the top of mobile device then the start location X as indicated by the arrow in . A gesture recognition library of mobile device may access data generated by the touchpad and determine an upward scrolling event or gesture associated with touchpad . A handler function associated with an application or operating system shell may cause a document or other displayed content to scroll. In particular embodiments mobile device may determine a downward scrolling event associated with touchpad as illustrated in . In the example of a user touches touchpad in a downward motion e.g. the user s finger touches touchpad at a start location X moves the finger downwards while the finger is still in contact with touchpad and the finger lifts away from touchpad at an end location X wherein the start location X is closer to the top of mobile device then the end location X as indicated by the arrow in and mobile device may determine a downward scrolling event associated with touchpad . The upwards or downwards gestures made by a user may be controlled scrolling gestures where the movement is slow relative to a swiping gesture where the associated downward or upward movement is relatively abrupt or fast. A gesture recognition library of mobile device may interpret the inputs from touchpad to recognize either gesture type. A handler function may respond differently between a controlled scroll and a swipe gesture. For example a swipe gesture may cause an application to rapidly scroll a document based on the speed of the swipe. On the other hand an application may respond to a controlled scrolling event by scrolling the document or other content in a manner proportional to the user s movements relative to touchpad .

Additionally in particular embodiments mobile device may determine a relative distance for a scrolling event. For example mobile device can determine an absolute distance between a start location X and an end location X illustrated in or between a start location X and an end location X in and determine a relative percentage distance e.g. 60 by dividing the absolute distance by the length of touchpad .

In particular embodiments mobile device may identify a tap event associated with touchpad as illustrated in . In the example of a user taps or strikes lightly on touchpad as indicated by the arrow . A gesture recognition library of mobile device can interpret the user s touch input and identify the touch input corresponding to a tap event.

In other embodiments mobile device may identify touch events associated with back mounted touch surface as illustrated in . In the example of a user touches back mounted touch surface in an upward motion as indicated by the arrow . A gesture recognition library of mobile device can interpret the user s touch input and identify the touch input corresponding to an upward scrolling event or gesture associated with back mounted touch surface . In the example of a user touches back mounted touch surface in a downward motion as indicated by the arrow . A gesture recognition library of mobile device can interpret the user s touch input and identify the touch input corresponding to a downward scrolling event or gesture associated with back mounted touch surface . In the example of a user taps or strikes lightly on back mounted touch surface as indicated by the arrow . A gesture recognition library of mobile device can interpret the user s touch input and identify the touch input corresponding to a tap event associated with back mounted touch surface .

In contrast to using hardware buttons and or touch screen inputs to control a parameter of an application as illustrated in the examples of e.g. adjusting zoom distance of a camera application changing play time of a video illustrates an example method of controlling a parameter of an application by using a side mounted touchpad. Specifically the example method of may enable a user to control the parameter by scrolling along a side mounted touchpad or invoke an action by tapping on the side mounted touchpad.

As a listener for touch events the handler function can responsive to a touch event cause the application to adjust a controllable parameter of the application. In particular embodiments the application may display a graphical element indicating a linear range and a current value of a controllable parameter . In some embodiments the application may display the graphical element adjacent to the side mounted touchpad. illustrate an example user interface of a camera application hosted by a mobile device with a side mounted touchpad. For example a camera application hosted by mobile device can display zoom bar in the application s user interface indicating a linear range i.e. the length of the zoom bar and a current value of zoom distance. For example the camera application can display the zoom bar adjacent to side mounted touchpad .

In some implementations the mobile device may have an accelerometer that a client application and or operating system shell can poll in order to determine whether to rotate an image such as a video or photograph relative to the display. In one implementation the graphical element in such implementations may remain adjacent to the touchpad . In some implementations however the directionality of the graphical element and the corresponding touch inputs applied to touchpad may be inverted or rotated based on the orientation of the mobile device as sensed by the accelerometer and the current view. For example when in a portrait view mode as illustrated in the max zoom range may be at the upper portion of the graphical element upper right corner relative to the device display with the minimum zoom being at the bottom portion of the graphical element. If a user rotates the device to a landscape view the minimum and maximum zoom indicators may be reversed such that the minimum zoom indicator is now located in the corner of the display. A similar result may be achieved if a user rotates device 180 degrees relative to the view illustrated in . Accordingly the effect of the direction of a user s input relative to touchpad may vary depending on the orientation of the device .

In particular embodiments when a touch event occurs the handler function may determine if the touch event is a scrolling event . In particular embodiments if the handler function determines that the touch event is a scrolling event the handler function may cause the application to change the current value of the controllable parameter based on direction of the scrolling event . For example the camera application illustrated in can adjust the zoom distance displayed in the zoom bar by zooming in for an upward scrolling event as illustrated by the arrow in or zooming out for a downward scrolling event. In some embodiments the application may adjust the current value of the controllable parameter by an amount corresponding to a relative distance of the scrolling event. For example the camera application illustrated in can adjust the zoom distance by a same percentage of the total linear range as the relative percentage distance of the scrolling event. In other embodiments the application may adjust the current value of the controllable parameter to a value corresponding to the end location of the scrolling event. For example the camera application illustrated in can adjust the zoom distance to a value displayed adjacent to the end location of the scrolling event as illustrated in .

In particular embodiments the handler function may determine if the touch event is a tap event . In particular embodiments if the handler function determines the touch event is a tap event the handler function may cause the application to launch a pre determined action . For example a tap event as illustrated by the arrow in can cause the camera application to capture the image. In another implementation a tap event may cause the application to jump to a parameter value corresponding to the closest point of the tap event. In yet another implementation the tap gesture can cause the application to toggle display of the graphical element on and off. The tap event may be either a single tap or a double tap.

The application and functionality described above can be implemented as a series of instructions stored on a computer readable storage medium that when executed cause a programmable processor to implement the operations described above. While the mobile device may be implemented in a variety of different hardware and computing systems shows a schematic representation of the main components of an example computing platform of a client or mobile device according to various particular embodiments. In particular embodiments computing platform may comprise controller memory and input output subsystem . In particular embodiments controller which may comprise one or more processors and or one or more microcontrollers configured to execute instructions and to carry out operations associated with a computing platform. In various embodiments controller may be implemented as a single chip multiple chips and or other electrical components including one or more integrated circuits and printed circuit boards. Controller may optionally contain a cache memory unit for temporary local storage of instructions data or computer addresses. By way of example using instructions retrieved from memory controller may control the reception and manipulation of input and output data between components of computing platform . By way of example controller may include one or more processors or one or more controllers dedicated for certain processing tasks of computing platform for example for 2D 3D graphics processing image processing or video processing.

Controller together with a suitable operating system may operate to execute instructions in the form of computer code and produce and use data. By way of example and not by way of limitation the operating system may be Windows based Mac based or Unix or Linux based Android based or Symbian based among other suitable operating systems. The operating system other computer code and or data may be physically stored within memory that is operatively coupled to controller .

Memory may encompass one or more storage media and generally provide a place to store computer code e.g. software and or firmware and data that are used by computing platform . By way of example memory may include various tangible computer readable storage media including Read Only Memory ROM and or Random Access Memory RAM . As is well known in the art ROM acts to transfer data and instructions uni directionally to controller and RAM is used typically to transfer data and instructions in a bi directional manner. Memory may also include one or more fixed storage devices in the form of by way of example hard disk drives HDDs solid state drives SSDs flash memory cards e.g. Secured Digital or SD cards embedded MultiMediaCard or eMMD cards among other suitable forms of memory coupled bi directionally to controller . Information may also reside on one or more removable storage media loaded into or installed in computing platform when needed. By way of example any of a number of suitable memory cards e.g. SD cards may be loaded into computing platform on a temporary or permanent basis.

Input output subsystem may comprise one or more input and output devices operably connected to controller . For example input output subsystem may include keyboard mouse one or more buttons thumb wheel and or display e.g. liquid crystal display LCD light emitting diode LED Interferometric modulator display IMOD or any other suitable display technology . Generally input devices are configured to transfer data commands and responses from the outside world into computing platform . The display is generally configured to display a graphical user interface GUI that provides an easy to use visual interface between a user of the computing platform and the operating system or application s running on the mobile device. Generally the GUI presents programs files and operational options with graphical images. During operation the user may select and activate various graphical images displayed on the display in order to initiate functions and tasks associated therewith. Input output subsystem may also include touch based devices such as touchpad and touch screen. A touchpad is an input device including a surface that detects touch based inputs of users. Similarly a touch screen is a display that detects the presence and location of user touch inputs. Input output system may also include dual touch or multi touch displays or touchpads that can identify the presence location and movement of more than one touch inputs such as two or three finger touches.

In particular embodiments computing platform may additionally comprise audio subsystem camera subsystem wireless communication subsystem sensor subsystems and or wired communication subsystem operably connected to controller to facilitate various functions of computing platform . For example Audio subsystem including a speaker a microphone and a codec module configured to process audio signals can be utilized to facilitate voice enabled functions such as voice recognition voice replication digital recording and telephony functions. For example camera subsystem including an optical sensor e.g. a charged coupled device CCD or a complementary metal oxide semiconductor CMOS image sensor can be utilized to facilitate camera functions such as recording photographs and video clips. For example wired communication subsystem can include a Universal Serial Bus USB port for file transferring or an Ethernet port for connection to a local area network LAN . Additionally computing platform may be powered by power source .

Wireless communication subsystem can be designed to operate over one or more wireless networks for example a wireless PAN WPAN such as for example a BLUETOOTH WPAN an infrared PAN a WI FI network such as for example an 802.11a b g n WI FI network an 802.11s mesh network a WI MAX network a cellular telephone network such as for example a Global System for Mobile Communications GSM network an Enhanced Data Rates for GSM Evolution EDGE network a Universal Mobile Telecommunications System UMTS network and or a Long Term Evolution LTE network . Additionally wireless communication subsystem may include hosting protocols such that computing platform may be configured as a base station for other wireless devices.

Sensor subsystem may include one or more sensor devices to provide additional input and facilitate multiple functionalities of computing platform . For example sensor subsystems may include GPS sensor for location positioning altimeter for altitude positioning motion sensor for determining orientation of a mobile device light sensor for photographing function with camera subsystem temperature sensor for measuring ambient temperature and or biometric sensor for security application e.g. fingerprint reader . Other input output devices may include an accelerometer that can be used to detect the orientation of the device.

In particular embodiments various components of computing platform may be operably connected together by one or more buses including hardware and or software . As an example and not by way of limitation the one or more buses may include an Accelerated Graphics Port AGP or other graphics bus an Enhanced Industry Standard Architecture EISA bus a front side bus FSB a HYPERTRANSPORT HT interconnect an Industry Standard Architecture ISA bus an INFINIBAND interconnect a low pin count LPC bus a memory bus a Micro Channel Architecture MCA bus a Peripheral Component Interconnect PCI bus a PCI Express PCI X bus a serial advanced technology attachment SATA bus a Video Electronics Standards Association local VLB bus a Universal Asynchronous Receiver Transmitter UART interface a Inter Integrated Circuit IC bus a Serial Peripheral Interface SPI bus a Secure Digital SD memory interface a MultiMediaCard MMC memory interface a Memory Stick MS memory interface a Secure Digital Input Output SDIO interface a Multi channel Buffered Serial Port McBSP bus a Universal Serial Bus USB bus a General Purpose Memory Controller GPMC bus a SDRAM Controller SDRC bus a General Purpose Input Output GPIO bus a Separate Video S Video bus a Display Serial Interface DSI bus an Advanced Microcontroller Bus Architecture AMBA bus or another suitable bus or a combination of two or more of these.

Herein reference to a computer readable storage medium encompasses one or more non transitory tangible computer readable storage media possessing structure. As an example and not by way of limitation a computer readable storage medium may include a semiconductor based or other integrated circuit IC such as for example a field programmable gate array FPGA or an application specific IC ASIC a hard disk an HDD a hybrid hard drive HHD an optical disc an optical disc drive ODD a magneto optical disc a magneto optical drive a floppy disk a floppy disk drive FDD magnetic tape a holographic storage medium a solid state drive SSD a RAM drive a SECURE DIGITAL card a SECURE DIGITAL drive a MultiMediaCard MMC card an embedded MMC eMMC card or another suitable computer readable storage medium or a combination of two or more of these where appropriate. Herein reference to a computer readable storage medium excludes any medium that is not eligible for patent protection under 35 U.S.C. 101. Herein reference to a computer readable storage medium excludes transitory forms of signal transmission such as a propagating electrical or electromagnetic signal per se to the extent that they are not eligible for patent protection under 35 U.S.C. 101.

This disclosure contemplates one or more computer readable storage media implementing any suitable storage. In particular embodiments a computer readable storage medium implements one or more portions of controller such as for example one or more internal registers or caches one or more portions of memory or a combination of these where appropriate. In particular embodiments a computer readable storage medium implements RAM or ROM. In particular embodiments a computer readable storage medium implements volatile or persistent memory. In particular embodiments one or more computer readable storage media embody software. Herein reference to software may encompass one or more applications bytecode one or more computer programs one or more executables one or more instructions logic machine code one or more scripts or source code and vice versa where appropriate. In particular embodiments software includes one or more application programming interfaces APIs . This disclosure contemplates any suitable software written or otherwise expressed in any suitable programming language or combination of programming languages. In particular embodiments software is expressed as source code or object code. In particular embodiments software is expressed in a higher level programming language such as for example C Perl JavaScript or a suitable extension thereof. In particular embodiments software is expressed in a lower level programming language such as assembly language or machine code . In particular embodiments software is expressed in JAVA. In particular embodiments software is expressed in Hyper Text Markup Language HTML Extensible Markup Language XML or other suitable markup language

The present disclosure encompasses all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend. Similarly where appropriate the appended claims encompass all changes substitutions variations alterations and modifications to the example embodiments herein that a person having ordinary skill in the art would comprehend.

