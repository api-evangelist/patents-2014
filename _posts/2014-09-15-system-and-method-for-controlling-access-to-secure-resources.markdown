---

title: System and method for controlling access to secure resources
abstract: A system and method for controlling access to a secure resource in a device are disclosed. In some embodiments, the device may include a processor capable of receiving a first request from a first application of a plurality of applications executable by the processor, where the first request requests access to the secure resource, and the first request identifies the plurality of applications. In response to the first request, the processor is capable of generating a ticket associated with the secure resource and with each of the plurality of applications, and then storing the ticket in a memory. After receiving a second request from a second application requesting access to the secure resource, the processor is capable of granting the second application access to the secure resource, if the ticket associated with the secure resource exists and if the ticket is associated with the second application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384341&OS=09384341&RS=09384341
owner: BLACKBERRY LIMITED
number: 09384341
owner_city: Waterloo
owner_country: CA
publication_date: 20140915
---
This application is a continuation of U.S. patent application Ser. No. 13 486 145 filed Jun. 1 2012. The entire contents of U.S. patent application Ser. No. 13 486 145 is hereby incorporated by reference.

The present disclosure relates generally to computing and communication devices and in particular to controlling access to secure resources on a device.

Modern computing and communication devices such as laptops and mobile phones are being configured with an increasing number of applications. In some cases it may be desirable to provide some of those applications with access to secure resources on the device such as cryptographic keys e.g. symmetric keys and asymmetric keys secure files and secure data folders. To this end a device may be configured to prompt a user for a password whenever an application requests access to a secure resource.

In one broad aspect there is provided a system and a method for controlling access to a secure resource in a device the device comprising a processor and a memory wherein the processor is capable of receiving a first request from a first application of a plurality of applications executable by the processor the first request requesting access to the secure resource and the first request identifying the plurality of applications in response to the first request generating a ticket associated with the secure resource and with each of the plurality of applications storing the ticket in the memory receiving a second request from a second application of the plurality of applications the second request requesting access to the secure resource and after receiving the second request granting the second application access to the secure resource in response to determining that the ticket associated with the secure resource exists and that the ticket is associated with the second application.

In another broad aspect the processor receives a password before granting the second application access to the secure resource via a user interface in response to a prompt requesting the password.

In another broad aspect the processor is capable of displaying the prompt on a display communicably coupled to the processor.

In another broad aspect generating the ticket further comprises generating a message authentication code MAC for the ticket using a key an application identifier associated with the plurality of applications and a secure resource identifier.

In another broad aspect generating the ticket further comprises signing the ticket or data therein using a digital signature algorithm.

In another broad aspect the ticket is time limited and is configured to expire and the processor determines that the ticket has not expired before granting the second application access to the secure resource.

In another broad aspect the processor determines that each one of the plurality of applications is signed by a key associated with a same developer certificate before generating the ticket.

In another broad aspect the secure resource comprises at least one of a key in a keystore a data file or a secure data folder.

Reference is first made to for a general description of an example structure of a mobile device and how the mobile device operates and communicates with other devices. The mobile device sometimes referred to alternatively as a mobile station or portable electronic device may comprise a two way communication device with advanced data communication capabilities having the capability to communicate with other computer systems and devices. The mobile device may include the capability for voice communications data communications or a combination of the two. Depending on the functionality provided by the mobile device it may be referred to as a smartphone a data messaging device a two way pager a cellular telephone with data messaging capabilities a wireless Internet appliance a laptop computer a tablet computer a media player such as an MP3 player an electronic book reader or a data communication device with or without telephony capabilities . Although a mobile device is described herein by way of illustration embodiments described herein may be applicable to other computing devices other than mobile devices. For example embodiments described herein may be applied to other computing platforms that control access to secure resources in variant implementations.

Referring now to specifically a block diagram of a mobile device in one example implementation is shown generally as . Mobile device comprises a number of components the controlling component being microprocessor . Microprocessor controls the overall operation of mobile device . In some embodiments certain communication functions including data and voice communications are performed through communication subsystem . Communication subsystem receives messages from and sends messages to a wireless network .

In this example implementation of mobile device communication subsystem may be configured for cellular communication in accordance with the Global System for Mobile Communication GSM and General Packet Radio Services GPRS standards. The GSM GPRS wireless network is used worldwide and it is expected that other standards such as Enhanced Data GSM Environment EDGE and Universal Mobile Telecommunications Service UMTS may be employed. These standards are mentioned as examples only and other standards may be employed on computing devices to which embodiments described herein are applied.

New standards are still being defined but it is believed that they will have similarities to the network behavior described herein and it will also be understood by persons skilled in the art that the described embodiments are intended to use any other suitable standards that are developed in the future. The wireless link connecting communication subsystem with network represents one or more different Radio Frequency RF channels operating according to defined protocols specified for GSM GPRS communications. With newer network protocols these channels are capable of supporting both circuit switched voice communications and packet switched data communications.

The wireless network associated with mobile device may comprise a GSM GPRS wireless network in one example implementation of mobile device however other wireless networks may also be associated with mobile device in variant implementations. Different types of wireless networks that may be employed include for example data centric wireless networks voice centric wireless networks and dual mode networks that can support both voice and data communications over the same physical base stations. Combined dual mode networks include but are not limited to Code Division Multiple Access CDMA or CDMA2000 networks GSM GPRS networks as mentioned above and n generation e.g. 2.5G 3G 3.5G 4G etc. networks like EDGE UMTS High Speed Downlink Packet Access HSDPA High Speed Uplink Packet Access HSUPA High Speed Packet Access HSPA and Long Term Evolution LTE etc. Some older examples of data centric networks include the Mobitex Radio Network and the DataTAC Radio Network. Examples of older voice centric data networks include Personal Communication Systems PCS networks like GSM and Time Division Multiple Access TDMA systems.

Microprocessor also interacts with additional subsystems such as a Random Access Memory RAM flash memory display auxiliary input output I O subsystem serial port keyboard one or more speakers microphone short range communication subsystem and other device subsystems .

Some of the subsystems of mobile device perform communication related functions whereas other subsystems may provide resident or on device functions. By way of example display and keyboard may be used for both communication related functions such as entering a text message for transmission over network and device resident functions such as a calculator media player or task list. Operating system software used by microprocessor is typically stored in a persistent store such as flash memory which may alternatively be a read only memory ROM or similar storage element not shown . Those skilled in the art will appreciate that the operating system specific device applications illustrated as applications in below or parts thereof may be temporarily loaded into a volatile store such as RAM .

In some embodiments mobile device may send and receive communication signals over network after required network registration or activation procedures have been completed. Network access is associated with a subscriber or user of a mobile device . To identify a subscriber mobile device may require a Subscriber Identity Module or SIM card to be inserted in a SIM interface in order to communicate with a network. SIM is one type of a conventional smart card used to identify a subscriber of mobile device and to personalize the mobile device among other things.

By inserting SIM into SIM interface a subscriber can access subscribed services. Services could include web browsing and messaging such as e mail voice mail Short Message Service SMS media transfers such as music downloading or streaming and Multimedia Messaging Services MMS . More advanced services may include point of sale field service and sales force automation. SIM includes a processor and memory for storing information. Once SIM is inserted in SIM interface it is coupled to microprocessor . In order to identify the subscriber SIM contains some user parameters such as an International Mobile Subscriber Identity IMSI . An advantage of using SIM is that subscribers are not necessarily bound by any single physical mobile device. SIM may store additional subscriber information for a mobile device as well including datebook or calendar information and recent call information. In certain embodiments SIM may be a different type of user identifier and may be integral to mobile device or not present at all. By way of further examples a Universal Integrated Circuit Card UICC eUICC Embedded UICC Removable User Identity Module R UIM CDMA Subscriber Identity Module CSIM or Universal Subscriber Identity Module USIM may be employed.

Mobile device typically includes a power pack that supplies power to electronic components and that supports portability. The power pack may be of any type but by way of illustration it will be assumed that mobile device is a battery powered device and includes a battery interface for receiving one or more rechargeable batteries . Battery interface is coupled to a regulator not shown which assists battery in providing power V to mobile device . Although current technology makes use of a battery future technologies such as micro fuel cells may provide the power to mobile device .

Microprocessor in addition to its operating system functions enables execution of software applications on mobile device . A set of applications that control basic device operations including data and voice communication applications will normally be installed in flash memory or other non volatile storage on mobile device during its manufacture.

Additional applications may also be loaded onto mobile device through network auxiliary I O subsystem serial port short range communications subsystem or the other device subsystems . This flexibility in application installation increases the functionality of mobile device and may provide enhanced on device functions communication related functions or both. For example secure communication applications may enable electronic commerce functions and other such financial transactions to be performed using mobile device . Numerous other types of applications may be loaded onto mobile device or other computing devices including without limitation messaging applications e.g. e mail text instant video etc. voice communication applications calendar applications address book applications utility applications browser applications media player e.g. audio video etc. applications social network applications camera applications gaming applications productivity applications etc.

Serial port enables a subscriber to set preferences through an external device or software application and may extend the capabilities of mobile device by providing for information or software downloads to mobile device other than through a wireless communication network. The alternate download path may for example be used to load an encryption key onto mobile device through a direct and more reliable and trusted connection to provide secure device communication.

It should be noted that the term download and forms thereof as used herein in the specification and in the claims are used generally to describe a transfer of data from one system to another and is not intended to be limiting with regards to the origin or destination of the transfer for example. Accordingly where the term download and forms thereof are used in the specification and in the claims it is intended to encompass other forms of transfers including for example an upload or a sideload of data e.g. a Universal Serial Bus USB sideload .

Short range communications subsystem provides for wireless device connections to enable communication between mobile device and different systems or devices generally without the use of network . For example subsystem may include an infrared device and associated circuits and components for short range communication. Examples of short range communication would include standards developed by the Infrared Data Association IrDA Near Field Communication NFC Bluetooth and the 802.11 family of standards developed by IEEE.

In use a received signal such as a text message an e mail message or web page download will be processed by communication subsystem and input to microprocessor . Microprocessor will then process the received signal for output to display or alternatively to auxiliary I O subsystem . A subscriber may also compose data items such as e mail messages for example using keyboard in conjunction with display and possibly auxiliary I O subsystem . Auxiliary I O subsystem may include devices such as a touch screen mouse infrared fingerprint detector or a roller wheel with a dynamic button pressing capability. Further auxiliary I O subsystem may comprise a two dimensional navigation or scrolling component such as a track ball a joystick or a directional pad each optionally with a dynamic button pressing capability. Keyboard is an alphanumeric keyboard and or telephone type keypad. A composed item may be transmitted over network through communication subsystem .

For voice communications the overall operation of mobile device is substantially similar except that the received signals would be output to the one or more speakers and signals for transmission would be generated by microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem may also be implemented on mobile device . Although voice or other audio signal output is accomplished primarily through the one or more speakers display may also be used to provide additional information such as the identity of a calling party duration of a voice call or other voice call related information. Microphone can receive a supply of power in the form of a bias voltage and bias current from the rechargeable battery . Different types and configurations of microphone can be incorporated into the mobile device .

Referring now to specifically a block diagram of the communication subsystem of is shown. Communication subsystem comprises a receiver a transmitter one or more embedded or internal antenna elements Local Oscillators LOs and a processing module such as a Digital Signal Processor DSP .

The particular design of communication subsystem is dependent upon the network in which mobile device is intended to operate thus it should be understood that the design illustrated in serves only as one example. Signals received by antenna through network are input to receiver which may perform such common receiver functions as signal amplification frequency down conversion filtering channel selection and analog to digital A D conversion. A D conversion of a received signal allows more complex communication functions such as demodulation and decoding to be performed in DSP . In a similar manner signals to be transmitted are processed including modulation and encoding by DSP . These DSP processed signals are input to transmitter for digital to analog D A conversion frequency up conversion filtering amplification and transmission over network via antenna . DSP not only processes communication signals but generally also provides for receiver and transmitter control. For example the gains applied to communication signals in receiver and transmitter may be adaptively controlled through automatic gain control algorithms implemented in DSP .

The wireless link between mobile device and a network may contain one or more different channels typically different RF channels and associated protocols used between mobile device and network . A RF channel is a limited resource that must be conserved typically due to limits in overall bandwidth and limited battery power of mobile device .

When mobile device is fully operational transmitter is typically keyed or turned on only when it is sending to network and is otherwise turned off to conserve resources. Similarly receiver is periodically turned off to conserve power until it is needed to receive signals or information if at all during designated time periods.

Referring now to specifically a block diagram of a node of a wireless network is shown as . In practice network comprises one or more nodes . Mobile device communicates with a node within wireless network . In the example implementation of node is configured in accordance with General Packet Radio Service GPRS and Global Systems for Mobile GSM technologies. Node includes a base station controller BSC with an associated tower station a Packet Control Unit PCU added for GPRS support in GSM a Mobile Switching Center MSC a Home Location Register HLR a Visitor Location Registry VLR a Serving GPRS Support Node SGSN a Gateway GPRS Support Node GGSN and a Dynamic Host Configuration Protocol DHCP . This list of components is not meant to be an exhaustive list of the components of every node within a GSM GPRS network but rather a list of components that are commonly used in communications through example network .

In a GSM network MSC is coupled to BSC and to a landline network such as a Public Switched Telephone Network PSTN to satisfy circuit switched requirements. The connection through PCU SGSN and GGSN to the public or private network Internet also referred to herein generally as a shared network infrastructure represents the data path for GPRS capable mobile devices. In a GSM network extended with GPRS capabilities BSC may also contain a Packet Control Unit PCU that connects to SGSN to control segmentation radio channel allocation and to satisfy packet switched requirements. To track mobile device location and availability for both circuit switched and packet switched management HLR is typically shared between MSC and SGSN . Access to VLR may be controlled by MSC .

Station is generally a fixed transceiver station. Station and BSC together form the fixed transceiver equipment. The fixed transceiver equipment provides wireless network coverage for a particular coverage area commonly referred to as a cell . The fixed transceiver equipment generally transmits communication signals to and receives communication signals from mobile devices within its cell via station . The fixed transceiver equipment normally performs such functions as modulation and possibly encoding and or encryption of signals to be transmitted to the mobile device in accordance with particular usually predetermined communication protocols and parameters under control of its controller. The fixed transceiver equipment similarly demodulates and possibly decodes and decrypts if necessary any communication signals received from mobile device within its cell. Communication protocols and parameters may vary between different nodes. For example one node may employ a different modulation scheme and operate at different frequencies than other nodes.

For all mobile devices registered with a specific network permanent configuration data such as a user profile is stored in HLR . HLR also contains location information for each registered mobile device and can be queried to determine the current location of a mobile device. MSC is responsible for a group of location areas and stores the data of the mobile devices currently in its area of responsibility in VLR . Further VLR may also contain information on mobile devices that are visiting other networks. The information in VLR typically includes part of the permanent mobile device data transmitted from HLR to VLR for faster access. By moving additional information from a remote HLR node to VLR the amount of traffic between these nodes can be reduced so that voice and data services can be provided with faster response times and at the same time requiring less use of computing resources.

SGSN and GGSN are elements added for GPRS support namely packet switched data support within GSM. SGSN and MSC have similar responsibilities within wireless network by keeping track of the location of each mobile device . SGSN also performs security functions and access control for data traffic on network . GGSN provides internetworking connections with external packet switched networks and connects to one or more SGSN s via an Internet Protocol IP backbone network operated within the network . During normal operations a given mobile device must perform a GPRS Attach to acquire an IP address and to access data services. This feature is not present in circuit switched voice channels as Integrated Services Digital Network ISDN addresses are used for routing incoming and outgoing calls. Currently GPRS capable networks typically use private dynamically assigned IP addresses and a DHCP server connected to the GGSN . There are many mechanisms for dynamic IP assignment including using a combination of a Remote Authentication Dial In User Service RADIUS server and DHCP server.

Once the GPRS Attach is complete a logical connection is established from a mobile device through PCU and SGSN to an Access Point Node APN within GGSN . The APN represents a logical end of an IP tunnel that can either access direct Internet compatible services or private network connections. The APN also represents a security mechanism for network insofar as each mobile device must be assigned to one or more APNs and mobile devices typically cannot exchange data without first performing a GPRS Attach to an APN that it has been authorized to use. The APN may be considered to be similar to an Internet domain name such as myconnection.wireless.com .

Once the GPRS Attach is complete a tunnel is created and all traffic is exchanged within standard IP packets using any protocol that can be supported in IP packets. This includes tunneling methods such as IP over IP as in the case with some IPSecurity IPsec connections used with Virtual Private Networks VPN . These tunnels are also referred to as Packet Data Protocol PDP Contexts and there are generally a limited number of these available in the network . To maximize use of the PDP Contexts network will run an idle timer for each PDP Context to determine if there is a lack of activity. When a mobile device is not using its PDP Context the PDP Context can be deallocated and the IP address returned to the IP address pool managed by DHCP server .

Referring now to a block diagram illustrating components of a host system in one example configuration is shown. Host system will typically be a corporate office or other local area network LAN but may instead be a home office computer or some other private system for example in variant implementations. In this example shown in host system is depicted as a LAN of an organization to which a user of mobile device belongs.

LAN comprises a number of network components connected to each other by LAN connections . For instance a user s desktop computer with an accompanying cradle for the user s mobile device is situated on LAN . Cradle for mobile device may be coupled to computer by a serial or a USB connection for example. Other user computers are also situated on LAN and each may or may not be equipped with an accompanying cradle for a mobile device. Cradle facilitates the loading of information e.g. PIM data private symmetric encryption keys to facilitate secure communications between mobile device and LAN from user computer to mobile device and may be particularly useful for bulk information updates often performed in initializing mobile device for use. The information downloaded to mobile device may include certificates used in the exchange of messages. It will be understood by persons skilled in the art that user computers will typically be also connected to other peripheral devices not explicitly shown in .

Embodiments described herein relate generally to control of applications e.g. . Accordingly only a subset of network components of LAN are shown in for ease of exposition and it will be understood by persons skilled in the art that LAN will comprise additional components not explicitly shown in for this example configuration. More generally LAN may represent a smaller part of a larger network not shown of the organization and may comprise different components and or be arranged in different topologies than that shown in the example of .

In this example mobile device communicates with LAN through a node of wireless network and a shared network infrastructure such as a service provider network or the public Internet. Access to LAN may be provided through one or more routers not shown and computing devices of LAN may operate from behind a firewall or proxy server .

In a variant implementation LAN comprises a wireless VPN router not shown to facilitate data exchange between the LAN and mobile device . The concept of a wireless VPN router is relatively new in the wireless industry and implies that a VPN connection can be established directly through a specific wireless network to mobile device . A VPN connection may be a Transmission Control Protocol TCP IP or User Datagram Protocol UDP IP connection to deliver the messages directly to mobile device for example.

Many secure communication protocols rely on public and private encryption keys to provide confidentiality and integrity and on a Public Key Infrastructure PKI to communicate information that provides authentication and authorization. Data encoded using a private key of a private key public key pair can only be decoded using the corresponding public key of the pair and data encoded using a public key of a private key public key pair can only be decoded using the corresponding private key of the pair. Private key information is not intended to be made public whereas public key information is typically shared.

For example if a sender wishes to send a message to a recipient in encrypted form the recipient s public key is used to encrypt a message which can then be decrypted only using the recipient s private key. Alternatively in some encoding techniques a one time session key is generated and used to encrypt the body of a message typically with a symmetric encryption technique e.g. Triple DES . The session key is then encrypted using the recipient s public key e.g. with a public key encryption algorithm such as RSA which can then be decrypted only using the recipient s private key. The decrypted session key can then be used to decrypt the message body. The message header may be used to specify the particular encryption scheme that is to be used to decrypt the message. Other encryption techniques based on public key cryptography may be used in variant implementations. However in each of these cases only the recipient s private key may be used to facilitate decryption of the message and in this way the confidentiality of messages can be maintained.

As a further example a sender may sign a message using digital signature techniques. Generating a digital signature generally involves generating a digest of the message e.g. a hash of the message and using the sender s private key the resulting signature can then be appended to the outgoing message. The recipient uses the same technique as the sender e.g. using the same standard hash algorithm to obtain a digest of the received message. The recipient also uses the sender s public key to verify the digital signature in order to obtain what should be a matching digest for the received message. If the digests of the received message do not match this suggests that either the message content was changed during transport and or the message did not originate from the sender whose public key was used for verification. By verifying a digital signature in this way authentication of the sender and message integrity can be maintained.

An encoded message may be encrypted signed or both encrypted and signed. The authenticity of public keys used in these operations is validated using certificates. A certificate is a digital document issued by a certificate authority CA . Certificates are used to authenticate the association between users and their public keys and essentially provides a level of trust in the authenticity of the users public keys. Certificates contain information about the certificate holder with certificate contents typically formatted in accordance with an accepted standard e.g. X.509 .

For a public key to be trusted its issuing organization must be trusted. The relationship between a trusted CA and a user s public key can be represented by a series of related certificates also referred to as a certificate chain. The certificate chain can be followed to determine the validity of a certificate.

Certificate servers store information about certificates and lists identifying certificates that have been revoked. These certificate servers can be accessed to obtain certificates and to verify certificate authenticity and revocation status. For example a Lightweight Directory Access Protocol LDAP server may be used to obtain certificates and an Online Certificate Status Protocol OCSP server may be used to verify certificate revocation status.

User computers can obtain certificates from a number of sources for storage on computers and or mobile devices e.g. mobile device . These certificate sources may be private e.g. dedicated for use within an organization or public may reside locally or remotely and may be accessible from within an organization s private network or through the Internet for example. In the example shown in multiple PKI servers associated with the organization may reside on LAN . PKI servers may include a CA server for issuing certificates an LDAP server used to search for and download certificates e.g. for individuals within the organization and an OCSP server used to verify the revocation status of certificates.

Certificates may be retrieved from LDAP server by a user computer for example to be downloaded to mobile device via cradle . However in a variant implementation LDAP server may be accessed directly i.e. over the air in this context by mobile device and mobile device may search for and retrieve individual certificates through a mobile data server . Similarly mobile data server may be adapted to allow mobile device to directly query OCSP server to verify the revocation status of certificates.

In variant implementations only selected PKI servers may be made accessible to mobile devices e.g. allowing certificates to be downloaded only from a user s computer while allowing the revocation status of certificates to be checked from mobile device .

In variant implementations certain PKI servers may be made accessible only to mobile devices registered to particular users as specified by an IT administrator possibly in accordance with an IT policy for example.

Other sources of certificates not shown may include a Windows certificate store another secure certificate store on or outside LAN and smart cards for example.

Applications executable on a mobile device may be stored on an application server . Application server may have an application database not shown that stores applications for download and execution on the mobile device . To have access to the applications stored on the application server each user may have a user account managed by the application server . Access to the application server may be provided via a client application operating on mobile device although in variant embodiments access to the application server may be provided through a web browser for example.

As illustrated the application server may comprise an internal network server of the host system used to store applications to be deployed to the organization s mobile devices . In a variant embodiment the application server may additionally or alternatively provide an application store or application market that is accessible from the mobile device . The application store may allow users of a mobile device to search for purchase and download applications to their mobile device . In some embodiments the application server may reside outside of the host system on a remote system accessible via the public or private network for example.

For ease of understanding the described embodiments related to application control further illustrates a simplified view of a subset of components of the mobile device described above. The mobile device may run software applications sometimes referred to simply as apps that access computing resources on the mobile device . Applications may be stored in the flash memory of the mobile device or other persistent store and may access computing resources available on the mobile device when executed. Access may be in the form of the applications invoking application programming interfaces APIs made available by the OS to access the computing resources for example.

Computing resources may be associated with a hardware component e.g. sensors radios or peripherals described above or a software module e.g. ones that provide access to data or communication buses described above and may be made accessible to the application via an API provided by the operating system OS of the mobile device . For example the mobile device may allow applications to access a GPS subsystem that is capable of determining the physical location of the mobile device or a camera subsystem that is capable of capturing photographs or video. Other accessible resources may include access to software functionality e.g. encryption services or data e.g. phone book entries available on the mobile device for example.

An installation manifest not explicitly shown in that identifies the computing resources that an application may access when the application is executed on mobile device may be associated with the application . Accordingly when a given computing resource is identified in an installation manifest associated with an application the user can expect that computing resource to be accessed by the application though not necessarily in every instance when the application executes. Conversely when the installation manifest associated with the application fails to identify the computing resource as a resource that the application will access on the computing device when the application is executed then the application is not typically expected to access the computing resource.

The installation manifest may be uploaded with the application to the application server from a developer device by the application developer. The installation manifest may be stored with the application on the application server and subsequently provided with an application being downloaded to mobile device .

A software or application developer creating the application may include the installation manifest in an application manifest that describes the application which may be specifically formatted for the operating system OS that the application is intended to be executed on. The application manifest may be stored in an XML format for example.

In the example shown system comprises three applications . By way of illustration in the Figures individual instances of applications are labeled as etc. In general system may comprise fewer than or greater than three applications. Each of applications may represent any application executable by the device. For example applications may comprise one or more of a mail client a word processor a document viewer a multimedia viewer a web browser a mapping application or a video game.

Each application may request access to one or more secure resources during its execution. A secure resource may comprise any resource to which access is restricted. In some cases a secure resource may comprise one or more keys in a key store secure data files or secure data locations e.g. file folders or combinations thereof. For example a mail client may request access to a secure resource such as one or more cryptographic keys in a key store to encrypt sign decrypt or verify one or more email messages. In another example a document viewer may request access to a secure resource such as a secure data folder or more generally a secure data location in which documents to be viewed are stored. In still another example a video game may request access to a secure resource such as a personal documents folder for storing accessing and modifying saved game files. In yet another example a mapping application may request access to a secure resource such as GPS data provided by a GPS module executing on the device.

In accordance with some embodiments one or more security modules may control access to the secure resources on a device. In the example shown a security module controls access to each of the secure resources . In some figures individual instances of a security module may be labeled as etc. Access to a secure resource may be restricted and access may be granted or denied on a function by function basis. For example the security module may permit an application to view the secure resource copy the secure resource move the secure resource delete the secure resource rename the secure resource print the secure resource or edit the secure resource or any combination thereof.

The security module may use tickets as a mechanism for controlling access to the secure resources . In general a ticket may be in the form of a token or a packet of data that may be issued for authorization purposes. The data in the ticket may identify to certain devices or processing components that a particular operation has been authorized by the ticket s issuer for example. Generally an application may send to a security module a request requesting access to a secure resource . In response the security module may prompt a user for authorization to grant the application the requested access. If the user grants authorization the security module may generate a ticket associated with the application and with the secure resource and grant the application the requested access.

The application may include or refer to this ticket in subsequent requests. When the security module receives a request including the ticket the security module may grant the requested access without re prompting a user for authorization. In this way the ticket may serve as a proxy for a user s authorization. Also the ticket may be reused multiple times. Accordingly using tickets as a mechanism for controlling access to secure resources may conveniently reduce the number of prompts for authorization.

A ticket may be configured to be valid only for requests from an application that is specifically associated with the ticket. Also a ticket may be configured to only be valid for requests requesting access to secure resources that are associated with the ticket. Accordingly when a security module receives a request including a ticket the security module may verify the validity of the ticket before granting the requested access. For example the security module may verify that the requesting application is associated with the ticket and verify that the requested secure resources are associated with the ticket. If the ticket is not associated with the requesting application or if the ticket is not associated with the requested secure resources then the security module may deny the request.

In some embodiments a ticket may comprise an organized parcel of information. For example a ticket may comprise information formatted according to a specification such as Extensible Markup Language XML HyperText Markup Language HTML Comma Separated Values CSV or another custom specification. A ticket may be in the form of a discrete file or a ticket may be an instance of a class for example.

As previously noted a ticket may be associated with one or more applications and with one or more secure resources . For example a ticket formatted according to XML may comprise elements to identify a plurality of applications and to identify a plurality of secure resources as in the following simplified example 

A ticket comprising the above XML code would be associated with an application associated with application identifier ID and with an application associated with application ID . An Application ID as specified in an application manifest may be used for the application ID . Alternatively a specified process ID may be used. The ticket would also be associated with a secure resource associated with secure resource ID and with a secure resource associated with secure resource ID .

As described in further detail below security module may be configured to receive requests from applications for access to one or more of secure resources . For example security module may provide an Application Programming Interface API for receiving requests to access a secure resource e.g. an application may call a request access function RequestAccess appID resourceID ticket .

When the security module receives a request from an application requesting access to a specific secure resource the security module may determine whether the request comprises a valid ticket. For example the security module may determine whether the request includes a ticket that is associated with the requesting application and associated with the requested secure resource .

If the security module determines that the request does not comprise a valid ticket then the security module may initiate a procedure for generating a ticket. Generally the procedure for generating a ticket may comprise prompting a user for manual authorization to grant the requesting application the requested access. After the security module generates the ticket the security module may issue the ticket to the application that made the request. This allows the application to present the ticket to the security module in subsequent requests for access to the requested secure resources . When the security module receives a subsequent request and the request includes the ticket the security module may grant the requested access automatically without prompting a user for authorization. This may conveniently reduce the number of prompts for manual user authorization.

According to some embodiments system may comprise a single security module which governs access to all secure resources in the device as in . In variant embodiments as shown in for example system may comprise a plurality of security modules each of which controls access to some of the secure resources . For example access to secure resources and may be controlled by security module but may not be controlled by security modules or . Also a ticket associated with secure resources and may be generated by security module but not by security modules or

A security module may be configured to control access to certain resources to generate tickets associated with certain resources or both. In some embodiments a security module may be capable of only generating a ticket associated with some secure resources while being capable of granting access to different secure resources . For example security module may be capable of generating tickets associated with secure resources or but may not be capable of generating tickets associated with any of secure resources . Similarly security module may be capable of generating tickets associated with secure resources but may not be capable of generating tickets associated with any of secure resources or . However each of security modules and may be capable of granting access to secure resources upon the receipt of a request that includes a valid ticket. Therefore an application may submit a request for access to secure resources to any of security modules . This can result in reduced program logic and thus reduced processing time.

For example application may send a request to security module requesting access to secure resource . The security module may determine that the request did not comprise a valid ticket e.g. the request did not comprise a ticket that is associated with both application and secure resource . Following the determination security module may generate a ticket that is associated with both secure resource and application . Subsequently application may send a request to security module the request including the ticket and the request requesting access to secure resource . Even though security module may not be capable of generating a ticket associated with secure resource security module may be capable of checking the validity of the ticket e.g. determining that the ticket is associated with the requested secure resource and with the requesting application and capable of granting access to the secure resource . In this example the security module may validate the ticket and grant application access to the secure resource

Enabling a security module to generate tickets associated with only some secure resources and enabling the same security module to grant access to different secure resources may provide a balance between convenience and security. In some embodiments by limiting the generation of tickets to a single security module or a subset of security modules the conditions for generating such tickets may be better controlled. For example each security module may be configured to generate and issue tickets according to different policies. For example security module may require a user of the device to enter a password in response to a prompt before it will generate a ticket. By contrast security module may require a user to provide a fingerprint scan before it will generate a ticket. In this example access to secure resources and may be subject to less stringent security protocols than the security protocols that control access to secure resources 

In some embodiments more than one security module may control access to a secure resource . For example in access to secure resource is controlled by security modules and . As explained above in some embodiments security modules and may be capable of generating tickets associated with secure resource while security module may not be capable of generating tickets associated with secure resource . Also in some embodiments security modules and may be capable of granting access to secure resource upon the receipt of a valid ticket e.g. one that is associated with both the requesting application and with the requested secure resource while security module may not be capable of granting access to secure resource . In some embodiments each of security modules may be capable of granting access to secure resource upon the receipt of a valid ticket even though security module may not be capable of generating tickets associated with secure resource

In the examples of applications may be configured to receive requests from other applications for access to secure resources and to redirect those requests to their respective security module . In response security module may return an indication that access to the requested secure resources should be granted to the requesting application e.g. because the request included a valid ticket . Alternatively or in addition the security module receiving the access request may generate and return a ticket e.g. associated with the requesting application and associated with the requested secure resource for issuance to the requesting application .

When a security module generates a ticket associated with a requesting application and associated with secure resources the ticket may be presumed to be valid for that application to access those secure resources at that moment. Accordingly when security module generates a ticket and application issues the ticket to an application application may concurrently grant the application access to the requested resources without having the security module validate the ticket. This feature may eliminate a redundant ticket validation thus improving the speed and efficiency of the system.

In the example shown application controls access to secure resources and . Application controls access to secure resource . Each application may be configured to receive requests from applications for access to secure resource s . Applications may be capable of determining the validity of a ticket accompanying a request e.g. determining whether the ticket is associated with both the requesting application and the requested secure resource s . If the application determines that the ticket is not valid then the application may send a request to security module for security module to generate a ticket.

In the example shown two applications and are configured to send ticket generation requests to the same security module . This may permit ticket generation to be performed according to a security policy that applies to multiple applications . For example security module may follow a security policy that requires a user of the device to enter a password before a ticket will be generated. In this example this security policy can be set once and apply equally to ticket generation requests originating from either of application or application . This may help to unify security policies regarding access to secure resources . This may also help to reduce the amount of configuration required to set and update access control policies for the secure resources .

In the example shown an application may send a request including a ticket to an application requesting access to one or more secure resources . If the application determines that the ticket is not valid then the application may send an indication to the requesting application indicating that the ticket is not valid. In response to the indication that the ticket is not valid the requesting application may send a request to security module requesting a ticket that is associated with both the requesting application and with the requested secure resources . If the security module generates a ticket and issues the ticket to the requesting application then the requesting application may send a new request to the application for access to the secure resources . The new request may comprise the issued ticket. The application may validate the ticket and grant the requesting application access to the requested secure resources .

At an application submits a request for access to one or more secure resources . In some embodiments the application may submit the request directly to a security module e.g. as shown in system of . In some embodiments the application may submit the request to an application where application controls access to the requested secure resources e.g. as shown in system of . In some embodiments a plurality of security modules and a plurality of applications may each control access to a different subset of the requested secure resources . In this case the application may submit the request to each of the security modules and to each of the applications .

In some embodiments the request at may comprise an application identifier that identifies the requesting application . The request may also comprise one or more secure resource identifiers that identify the one or more secure resources . For example in the case of an application requesting access to a subset of keys in a keystore the request may comprise the application s AppID and a KeyID for each key or some SubsetID for a defined subset of keys .

In some embodiments none some or all of the application identifiers and the secure resource identifiers may be unique identifiers. For example applications and secure resources may be assigned identifiers that are sequentially numbered. The number assignment may be such that the same number is typically never assigned twice. In some embodiments an identifier may be quasi unique. For example applications and secure resources may be assigned identifiers that are randomly generated. A number generator may generate identifiers from among such a large number of possible identifiers that it may be highly improbable for the same identifier to be generated twice. In some embodiments an application identifier may be a hash of the application itself. Similarly a secure resource identifier may be a hash of the secure resource itself.

In some embodiments an identifier may be unique in context. For example applications may be assigned sequentially numbered identifiers that are unique among application identifiers. Also secure resources may be assigned sequentially numbered identifiers that are unique among secure resource identifiers. However there may be some application identifiers that have the same index as certain secure resource identifiers.

In some embodiments an identifier may not be unique. For example the same secure resource identifier may be associated with a plurality of secure resources. For example a secure resource A may be identified by a secure resource identifier 1 in requests from a first application. In contrast the secure resource B may be identified by the same secure resource identifier 1 in requests from a second application. When a security module receives an access request it may determine the requested secure resource is secure resource A or B using both the application identifier and the secure resource identifier. That is even though secure resource identifier 1 may be associated with both secure resources A and B secure resource identifier 1 in requests from the first application may be associated with secure resource A exclusively. Similarly secure resource identifier 1 in requests from the second application may be associated with secure resource B exclusively.

At it is determined whether a valid ticket exists. A ticket may be considered valid if it is associated with the requesting application and with the requested secure resources . There may be additional criteria that need to be met before a ticket is considered to be valid. Some examples of additional criteria are discussed in further detail below.

In some embodiments a security module may determine the validity of a ticket in respect of a request for access to secured resources e.g. in the embodiments of system shown in . In some embodiments each of a plurality of security modules may determine whether a ticket is valid in respect of the requested secure resources over which that security module controls access. For example in the example shown in an application may make a request for access to secure resources and . The application may send this request to security modules which may control access to secure resource and to security module which may control access to secure resource . Security module may determine the validity of the ticket in respect of the secure resources to which security module is capable of granting access. For example security module may determine whether the ticket is associated with the requesting application and with secure resource . Similarly security module may determine whether the ticket is associated with the requesting application and with secure resource

In some embodiments an application which controls access to the requested secure resources may determine the validity of a ticket e.g. in the embodiment of system shown in .

In most cases the result of a ticket validation will either be that the ticket is valid and the application is granted access to the requested secure resources at or else the ticket is invalid or there is no ticket and the method proceeds to .

At a prompt is displayed on the device. In some embodiments the prompt may ask for confirmation that the requesting application is trusted. If the user responds to the prompt with an indication that the requesting application is trusted the security module may generate a ticket at . Generating the ticket may comprise associating the ticket with both the requesting application and the requested secure resources as discussed in more detail below . The prompt may identify the requesting application . In some embodiments identifying the requesting application within the prompt may not be necessary if the requesting application is apparent e.g. because it is clear from the user interface which requesting application is active when the prompt is displayed .

In some embodiments the prompt may request user authorization for the requesting application to access the specific requested secure resource s . In some embodiments the prompt may identify the requested secure resources . For example the prompt may permit a user to identify one or more of the requested secure resource s to authorize. In this way a user may choose to authorize access to only a selected subset of the requested secure resources . If the user grants authorization for the requesting application to access a subset of the requested secure resource then security module may at generate a ticket with respect to the selected subset of secure resources . Generating the ticket may comprise associating the ticket with both the requesting application and each of the selected subset of secure resources .

In some embodiments user authentication may be performed at . For example the prompt may request a password or another form of verification such as biometric verification e.g. fingerprint palm scan retinal scan etc. . Alternatively the prompt may not require a password or other verification. In some cases a valid password is one that is assigned by an administrator or user of the device. In some cases a valid password is one that is specific to the requested secure resources . Where multiple secure resources are being requested the prompt may require multiple passwords. For example there may be a different password associated with keys in a keystore than with files in a directory and different keys or files may also have different passwords .

If the response to the prompt is that the application is not authorized to access any of the requested resources then the method ends at . However if the response to the prompt is that the application is authorized to access at least one of the requested resources then the method proceeds to ticket generation at .

At a ticket is generated by the security module . The security module may generate a ticket that is associated with both the requested secure resource s and the requesting application . For example the security module may generate a ticket comprising an application identifier and one or more secure resource identifiers. In some embodiments there may be one secure resource identifier per secure resource . Alternatively or in addition a plurality of secure resources may be identified by a secure resource identifier e.g. one identifier associated with a grouping of multiple keys in a keystore .

After the ticket is generated at the security module may return the ticket to the requesting application at . The method may then end at or the method may proceed to . At the application may be granted access to the secure resource s .

The application may make subsequent requests for access to secure resources e.g. at . Each subsequent request may comprise the ticket generated by the security module . If the ticket is determined to be valid e.g. at then the application may be granted access to the requested secure resources e.g. at without having to prompt the user for authorization. A ticket may be reused by an application for gaining access to secure resources for as long as the ticket is valid. Accordingly the use of tickets as a mechanism for controlling access to secure resources may reduce the number of prompts to a user for authorization.

In some embodiments a ticket may comprise application identifier s and secure resource identifier s both stored in an unsecure format. In some cases however this may not provide sufficient security. For example unprotected data in a ticket may be susceptible to modification and forgery to the benefit of a hacker or a malicious application. Accordingly in some embodiments a ticket may comprise additional security mechanisms such as for example a message authentication code MAC .

A MAC is a short piece of information e.g. a string of characters that is generated by a MAC algorithm. A MAC algorithm such as HMAC CBC MAC etc. is sometimes referred to as a keyed cryptographic hash function. Typically a MAC algorithm accepts as input a key and a message and outputs a MAC. For example a security module may execute a MAC algorithm using i a key e.g. a cryptographic key ii an application identifier and iii secure resource identifiers as inputs. The MAC may be applied to the contents of the entire ticket including ticket ID app IDs and resource IDs for example. Ticket integrity is protected so that the ticket ID app IDs and resource IDs and other inputs to the MAC cannot be changed by a rogue attacker. It will be understood that if only the application identifier and secure resource identifiers were provided as input to the algorithm without the key when generating a ticket a rogue application would not be prevented from making unauthorized copies of the ticket. Typically the key used with a MAC algorithm is a secret kept by the security module . For example the security module may be the only module with knowledge of the key.

The secret key used in a MAC algorithm cannot generally be deduced with knowledge of the message input and the resulting MAC. Accordingly a ticket may comprise both the message input e.g. an application identifier and one or more secure resource identifiers as well as the MAC without compromising the secret key.

The MAC may protect the data integrity and authenticity of a ticket s contents. For example when a security module is presented with a ticket comprising a MAC e.g. at the security module may repeat the MAC algorithm using the key known to the security module and the ticket contents e.g. the application identifier and resource identifiers stored in the ticket as inputs. The security module may then compare the generated MAC with the MAC stored in the ticket. If the two MACs are a match then they have been generated using the same key. So long as the secrecy of the key is not compromised a matching MAC attests to the integrity and authenticity of the ticket and its contents. In the context of ticket validation e.g. at a ticket may be determined to be valid only if the ticket s MAC matches a MAC generated using a key and the ticket s contents.

In some embodiments a security module and an application may have access to the same key. For example a security module may use the key to generate a MAC for including in a ticket. Subsequently an application may use the key to repeat the MAC algorithm and validate the ticket before granting access to the secure resources .

A key e.g. for use with a MAC algorithm may be stored in any suitable location. For example a key may be stored in volatile memory in non volatile memory or in hardware. In variant embodiments one or more algorithms associated with ticket generation of verification may be implemented in hardware.

In some embodiments the act of generating a MAC may comprise an API call to an external software module. For example a security module or an application may generate a MAC by first obtaining a key and then using the key with a MAC algorithm.

In some embodiments a security module or an application may request a MAC from an external software module. For example a hardware chip may store a key. The hardware chip may also be configured to receive a MAC request where the request comprises ticket contents e.g. application identifier s and secure resource identifier s and possibly other attributes. The hardware chip may generate and or provide a MAC as output in response to the request. This may provide additional security due to the relative inaccessibility of the key to a malicious application or hacker.

In variant embodiments as an alternative to the use of MAC tickets or some of the data therein may be digitally signed to achieve data origin authentication and data integrity. Digital signature algorithms such as RSA DSA and ECDSA may be employed. The private key used for signing may be stored in hardware or a smart card for example. By employing digitally signed tickets any application would be able to validate a ticket with the public key but no unauthorized applications will be able to produce valid tickets using the private key. This may be implemented where multiple security modules are employed and where some modules may verify tickets issued by other modules for example. In these embodiments determining the validity of a ticket at may additionally comprise verifying a digital signature associated with the ticket or data therein. If the digital signature fails then the ticket is determined to be invalid.

In some embodiments a ticket may be time limited. A ticket may comprise either an issue date and duration or an expiration date to define a time period in which the ticket is valid. Determining the validity of a ticket e.g. at may additionally comprise determining whether the ticket is expired. If it is then the ticket is determined to be invalid. In some embodiments a security module may include expiration data e.g. the expiration date or any other attributes as inputs to the MAC algorithm.

In some cases malicious software and hackers may be able to circumvent the time limitation of a ticket. For example an expired ticket may be artificially revived if a hacker is able to modify the system clock of the device such that the apparent system time is within the ticket s period of validity.

As an alternative or added security measure each ticket may comprise a ticket identifier e.g. a number or alphanumeric string of characters . As with application identifiers and secure resource identifiers a ticket identifier may be unique quasi unique or unique in context. The ticket identifier may also be used as an input into a MAC algorithm substantially as described above. In some cases a ticket identifier may permit a security module or an application to maintain a list of valid ticket identifiers a list of revoked ticket identifiers or combinations thereof. This may permit a time limited ticket which has expired to be recorded in the list of revoked tickets e.g. indexed by ticket identifier . Determining whether a ticket is valid e.g. at may comprise determining whether the ticket s ticket identifier is listed in a list of revoked ticket identifiers or listed in a list of valid ticket identifiers or both. For example if the ticket s ticket identifier is in a list of revoked ticket identifiers the ticket may be deemed invalid. This may defeat an attempt to revive an expired ticket by tampering with the system clock.

In some embodiments the use of tickets comprising ticket identifiers may permit a security module an application or an external system administrator to monitor ticket usage i.e. by ticket identifier . A ticket may be invalidated e.g. its ticket identifier may be added to the list of revoked ticket identifiers if that ticket s usage pattern raises security concerns e.g. if the ticket is always being used when an untrusted third party application is active . Ticket usage patterns which may invalidate a ticket may be set out in a policy file stored at the device.

The use of tickets as a mechanism for controlling access to secure resources may conveniently reduce the number of times a user is prompted for authorization. For example after a ticket is generated for an application e.g. following a single prompt for authorization that application may reuse that ticket multiple times in subsequent requests. A request which comprises a valid ticket may be granted without further prompting the user.

In one aspect the number of prompts for authorization can be further reduced by generating a ticket that is associated with more than one application in response to an access request from one application . This may be especially convenient where multiple applications desire access to a common set of secure resources and where those applications might have otherwise made independent requests for access to those secure resources and caused the display of a prompt for user authorization.

For example an application may at submit a request comprising a plurality of application identifiers. Some of the application identifiers may correspond to applications other than the requesting application itself. In another example an application may at submit a request comprising an application group identifier. The application group identifier may be associated with a plurality of applications .

At the device may display one prompt for authorization covering all of the applications identified in the request e.g. by a plurality of application identifiers or by at least one application group identifier . In some embodiments the prompt may identify the requesting application as well as each of the other applications identified in the request. In variant embodiments the prompt may only identify the requesting application .

If the user grants authorization at then at the security module may generate a ticket associated with each of the applications identified in the request. For example the security module may generate a ticket comprising an application identifier for each application identified in the request. If the ticket comprises an application group identifier then before generating the ticket the security module first determines an application identifier for each application associated with the application group identifier.

In variant embodiments the security module may generate a ticket comprising the application group identifier. In this case determining the validity of a ticket at may comprise the security module determining whether the requesting application is associated with the application group identifier stored in the ticket.

In some embodiments the prompt may allow the user to select which of the applications to authorize. After the selection security module may at generate a ticket associated with the requested secure resources and the selected applications .

Any of the applications associated with the ticket may subsequently use the ticket to access the secure resources associated with the ticket even if the application had not previously made its own request for access to those secure resources . In some embodiments the application that requested the ticket and which was issued the ticket may subsequently share the ticket with any of the applications now associated with the ticket. Sharing the ticket with an application may comprise storing a copy of the ticket in a memory store local to the application or storing a pointer i.e. memory location reference to the ticket in a memory store local to the application for example.

In some cases allowing for requests to identify applications other than the requesting application may be considered a security concern if it can dupe a user into inadvertently authorizing a malicious application.

In variant embodiments as an added measure of security a request may only identify multiple applications if all of the applications are by the same developer. For example the security module may refuse to generate a ticket for multiple applications unless all of the applications are signed by a key associated with the same developer certificate. This may permit a user to base their decision to grant authorization at least partly on their trust in the developer of the requesting application . In some embodiments the name of the developer may be displayed with the prompt for authorization.

In response to the ticket generation request at the security module may at display a prompt requesting authorization as discussed in detail above. If the user authorizes the ticket generation at then at the security module may generate a ticket and at issue the ticket to the requesting application . The application may then submit a request to application requesting access to the secure resources . The application may include the newly generated ticket with the request. At the application may determine whether the ticket is valid as discussed in detail above . If the application determines that the ticket is valid the application may grant the application access to the requested secure resources at . If the application determines that the ticket is not valid the application may indicate as such to the application e.g. return an error code indicating that the ticket is invalid . In response to the indication that the ticket is not valid the application may send a request for a ticket to security module .

A number of embodiments have been described herein. However it will be understood by persons skilled in the art that other variants and modifications may be made without departing from the scope of the embodiments as defined in the claims appended hereto.

