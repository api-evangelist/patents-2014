---

title: Anti-malware tool for mobile apparatus
abstract: A method, apparatus, and computer program for monitoring security of a mobile apparatus are disclosed. The method includes executing a security application in a mobile apparatus; monitoring, by the security application, user interface locking status of the mobile apparatus; determining, as a result of said monitoring, that the user interface has been locked; identifying an application that has caused said locking of the user interface; checking a reputation status of the identified application; upon detecting, as a result of said reputation status check, that the identified application has a bad reputation status, restricting operation of the identified application and unlocking the user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183392&OS=09183392&RS=09183392
owner: F-Secure Corporation
number: 09183392
owner_city: Helsinki
owner_country: FI
publication_date: 20140611
---
The invention relates to the field of computer security and particularly protecting a mobile device against malicious attacks.

Computer viruses and malicious software called malware have existed for decades in a desktop computing environment. With the rapid growth of mobile computing devices such as mobile phones and tablet computers virus and malware creators have started designing viruses and malware attacking mobile platforms.

According to an aspect of the invention there is provided a method comprising executing a security application in a mobile apparatus monitoring by the security application user interface locking status of the mobile apparatus determining as a result of said monitoring that the user interface has been locked identifying an application that has caused said locking of the user interface checking a reputation status of the identified application upon detecting as a result of said reputation status check that the identified application has a bad reputation status restricting operation of the identified application and unlocking the user interface.

According to another aspect there is provided an apparatus comprising at least one processor and at least one memory including a computer program code. The at least one memory and the computer program code are configured with the at least one processor to cause the apparatus to execute a security application in the apparatus monitor in the security application user interface locking status of the apparatus determine as a result of said monitoring that the user interface has been locked identify an application that has caused said locking of the user interface check a reputation status of the identified application upon detecting as a result of said reputation status check that the identified application has a bad reputation status restrict operation of the identified application and unlock the user interface.

According to another aspect there is provided a computer program product embodied on a non transitory distribution medium readable by a computer and comprising program instructions which when loaded into a computer execute a computer process comprising executing a security application in a mobile apparatus monitoring by the security application user interface locking status of the mobile apparatus determining as a result of said monitoring that the user interface has been locked identifying an application that has caused said locking of the user interface checking a reputation status of the identified application upon detecting as a result of said reputation status check that the identified application has a bad reputation status restricting operation of the identified application and unlocking the user interface.

The following embodiments are exemplary. Although the specification may refer to an one or some embodiment s in several locations this does not necessarily mean that each such reference is to the same embodiment s or that the feature only applies to a single embodiment. Single features of different embodiments may also be combined to provide other embodiments. Furthermore words comprising and including should be understood as not limiting the described embodiments to consist of only those features that have been mentioned and such embodiments may contain also features structures that have not been specifically mentioned.

Such mobile apparatuses are a potential target for malicious software malware attacks. Malware comprises various applications that have different functions. Some malware delete data for the functionality of the mobile apparatus while other malware lock the user interface. Ransomware is an example of the latter. Ransomware typically locks the user interface and informs the user that the user interface will be opened when the user pays a ransom. In a mobile apparatus the ransomware may employ a user interface lock function provided by an operating system of the mobile apparatus. In other examples the ransomware display a determined screen and blocks the use of any user input. The mobile OSs typically provide the user with less freedom with respect to making system configurations than PC OSs. With respect to removal of malware some malware preventing the use of a PC may be removed manually through a safe mode even if a security application is not able to remove the malware. In mobile platforms such a procedure is not possible. Therefore an effective security application executed in a mobile OS is crucial.

Computer security software are designed for mobile apparatuses as well. Referring to a security application may be installed to a mobile apparatus . The security application may communicate with a security server by using communication circuitries of the mobile apparatus . The connection between the security server and the mobile apparatus may be established through one or more computer networks comprising wired and or wireless networks. The security application may access the security server and retrieve latest definitions for malware to make reputation checks with respect to suspicious applications detected to be running in the mobile apparatus etc. The security server may store up to date definitions and statistics for known malware and each known malware may be associated in the security server with a bad reputation status. The security application may thus use the security server as a database to cross check a reputation status of a suspicious application detected in the mobile apparatus . In some embodiments the up to date database is transferred to the mobile apparatus in connection with a definitions update process.

This procedure may be used to detect and remove malware such as ransomware that typically locks the user interface and does not allow the mobile apparatus to respond to user inputs.

The locking status of the user interface may be monitored by monitoring events in computer programs executed in the mobile apparatus. The security application may monitor application programming interfaces API of the mobile apparatus or a computer program code executed in the mobile apparatus in order to detect the locking status. For example in Windows Phone OS the security application may search for the presence of PhoneApplicationFrame.Obscured event. Presence of this event indicates that a user interface is being covered which may be used as an indication that the user interface is locked. In Android OS the security application may monitor for a combination of a presence of an event Intent.ACTION SCREEN ON and a missing event Intent.ACTION USER PRESENT. The former event indicates that the screen is turned on while the latter event indicates that the user is not using the mobile apparatus. This combination may indicate that an application has taken over the user interface and locked it. An example of monitoring the API is monitoring a value of Keyguard API of Android by using a function isKeyguardLocked . Another embodiment monitors the activation of a screensaver wherein the activation of the screensaver may be determined as the user interface being locked. Alternatively the user interface may be detected to be locked when a user input does not deactivate the screen saver. Other explicit or implicit solutions for detecting the locking status may be used in various mobile operating systems. At least some of the above described embodiments may detect the locking caused by using a user interface locking function of the OS and locking caused by an application by locking a display to display a screen of the malware application.

In an embodiment of the process proceeds to block only after a determined number of failed unlocking attempts have been detected. After detecting a failed unlocking attempt in block the security application may increment a counter counting the number of failed unlocking attempts. If a current value of the counter is below the determined number of failed unlocking attempts the process may return to block . Otherwise the process may proceed to block . The determined number of failed unlocking attempts may thus be higher than one.

In another embodiment the security application measures the duration for how long the user interface has been locked. Upon expiry of a determined duration the security application may launch block .

In block the security application accesses a reputation database in order to determine whether the identified locking application is known to have a bad good or unknown reputation. As described above the reputation database may be stored in the security server or in a memory of the mobile apparatus . The reputation database may comprise a first record comprising applications associated with successful unlocking feature and a second record comprising application associated with failed unlocking feature. At least some of the applications comprised in the first record may be associated with both failed and successful unlocking feature. Accordingly the reputation database may store in its records identifiers of those applications that are known to have constant problems with unlocking and these identifiers may be stored in the second record and marked as having a bad reputation blacklist . The reputation database may also store in its records identifiers of those applications that are known to have problems with unlocking but that are also known to be unlocked successfully and or identifiers of those applications that are known to be unlocked successfully. These identifiers may be stored in the first record and marked as having a good reputation whitelist . The reputation database may store only one of the first record and second record in some embodiments. For example if the reputation database stores only the second record and if the security application does not find the identified application in the second record the identified application may be determined to have a good reputation.

The above described reputation check may be used to avoid false alarms caused by the user forgetting a correct password to unlock the locking state. For example if the security application detects failed unlocking attempt s and carries out blocks and the security application acquires in the reputation check relevant information on whether the failed unlocking attempt was caused by a suspicious application or a probable user error. If the reputation check shows that the application has a bad reputation the security application may determine the application as a potential malware in block and proceed to block . If the reputation check shows that the application has a good reputation the security application may determine that the failed unlocking attempt was a user error and end the process. As a consequence a false alarm will not cause restriction or even uninstall of an application that is not malware.

Thresholds used in categorizing the applications to the first record and second record and may be selected according to a design. It may be advantageous to insert an application to the second record if the application is associated with statistics that indicate that a significant majority of unlocking attempts have failed e.g. over 99 . Otherwise the application may be inserted into the first record . In connection with each unlocking attempt the security application may increment a counter counting successful and failed unlocking attempts with respect to each application that is detected to lock the user interface. The security application may then transfer thus gathered statistics to the reputation database stored in the security server so that other security applications may use improved statistics and that the security server may reliably determine applications having a bad reputation.

The processing system may refer to any one of the following a a hardware only circuit implementation such as an implementation in only analogue and or digital circuitry b a combination of hardware circuitry and software and or firmware such as as applicable i a combination of processor s or processor cores or ii portions of processor s software including digital signal processor s software and at least one memory that work together to cause the apparatus to perform specific functions and c circuits such as a microprocessor s or a portion of a microprocessor s that require software or firmware for operation even if the software or firmware is not physically present. The processing system may also cover an implementation of merely a processor or multiple processors or portion of a processor e.g. one or multiple cores of a multi core processor and its or their accompanying software and or firmware. The term processing system would also cover for example an integrated circuit an application specific integrated circuit ASIC and or a field programmable grid array FPGA circuit for the apparatus according to an embodiment of the invention.

Referring to the processor may be configured to execute an operating system OS of the personal computing device . The operating system may be any one of the above describe mobile operating systems but it may be another OS designed for mobile apparatuses. As known in the art the operating system manages hardware resources e.g. the processor s and provides services to applications executed in the personal computing device . The services may be provided through one or more APIs that serve as an interface between the applications and the operating system . The applications may comprise any known computer program applications including the security application game and or utility applications office applications professional applications related to any professional field a web browser etc. The apparatus may further comprise or be connected to a communication interface comprising hardware and or software for realizing a communication connectivity according to one or more communication protocols. The communication interface may comprise components providing the mobile apparatus with wireless communication capability e.g. the communication interface may comprise radio interface components providing radio communication capability. The operating system may configure the communication interface to provide a connection to the computer networks e.g. the Internet. The communication interface under the control of the operating system may be used to access the security server .

The security application may comprise an anti virus engine a firewall a network traffic monitor etc. for tracking any known attack vector to prevent a virus worm or malware from accessing the apparatus. The security application may also provide the above described functionality for protecting the apparatus against applications that lock the user interface and prevent unlocking it. Referring to the security application may comprise an interface to the operating system . The interface may be a software interface and it may be used to monitor instructions executed by the operating system APIs etc. The interface may further be used to access the reputation database in order to carry out the above described reputation checks. The security application may comprise a user interface locking unlocking detection module configured to monitor the locking status of the user interface and unlocking attempts in the above described manner. Upon detecting that the user interface has been locked and or that the user has failed in unlocking the user interface the user interface locking unlocking detection module may call a reputation check module to identify the application that has locked the user interface and to carry out a reputation check for the identified application in the above described manner. Upon discovering that the application that has locked the user interface has a bad reputation the reputation check module may call a quarantine module configured to unlock the user interface and to restrict the operation of the identified application. The quarantine module may prevent further actions by the application quarantine the application or delete the application. The security application may further output a notification through a display unit of the apparatus that a potentially harmful application has been detected and removed.

The apparatus may further comprise the user interface comprising a display unit an input device etc. The user interface may comprise a touch sensitive display one or more hard buttons etc.

The processes or methods described in may also be carried out in the form of a computer process defined by a computer program. The computer program may be in source code form object code form or in some intermediate form and it may be stored in some sort of carrier which may be any entity or device capable of carrying the program. Such carriers include transitory and or non transitory computer media e.g. a record medium computer memory read only memory electrical carrier signal telecommunications signal and software distribution package. Depending on the processing power needed the computer program may be executed in a single electronic digital processing unit or it may be distributed amongst a number of processing units.

The present invention is applicable to mobile apparatuses defined above but also to other suitable mobile ecosystems. The specifications of the mobile systems develop rapidly and such development may require extra changes to the described embodiments. Therefore all words and expressions should be interpreted broadly and they are intended to illustrate not to restrict the embodiment. It will be obvious to a person skilled in the art that as technology advances the inventive concept can be implemented in various ways. The invention and its embodiments are not limited to the examples described above but may vary within the scope of the claims.

