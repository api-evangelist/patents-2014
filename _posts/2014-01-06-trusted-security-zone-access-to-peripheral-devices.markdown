---

title: Trusted security zone access to peripheral devices
abstract: A method of trusted data communication. The method comprises executing a data communication application in a trusted security zone of a processor, wherein the processor is a component of a computer, commanding a controller of a peripheral device to execute a control application in a trusted security zone of the controller, wherein the controller is a component of the computer, commanding at least one of another peripheral device or a user interface device to not access a data bus of the computer, verifying that the controller is executing the control application in the trusted security zone of the controller, sending data from the processor to the controller over the data bus of the computer, and the controller one of transmitting the data sent by the processor on an external communication link, reading a memory storage disk, or writing to a memory storage disk.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09268959&OS=09268959&RS=09268959
owner: Sprint Communications Company L.P.
number: 09268959
owner_city: Overland Park
owner_country: US
publication_date: 20140106
---
This application is a continuation of and claims priority under 35 U.S.C. 120 to U.S. patent application Ser. No. 13 556 200 filed on Jul. 24 2012 entitled Trusted Security Zone Access to Peripheral Devices by Lyle W. Paczkowski et al. which is incorporated herein by reference for all purposes.

Computing platforms abound in daily life. We use sophisticated logic processors that execute complicated software and or firmware to perform a wide variety of activities. Increasingly confidential information is being stored manipulated and or communicated by these computing platforms. Examples of such confidential information comprises social security numbers credit card numbers authentication numbers financial accounts education related passwords medical records medical diagnostic information contact information confidential documents and other sensitive information. Because more and more sensitive information is present in these computing platforms the rewards for hacking the security of these computing platforms to access the information are increasing.

In an embodiment a method of trusted data communication is disclosed. The method comprises executing a data communication application in a trusted security zone of a processor wherein the processor is a component of a computer and commanding a controller of a first peripheral device to execute a control application in a trusted security zone of the controller wherein the controller of the first peripheral device is a component of the computer. The method further comprises commanding at least one of another peripheral device or a user interface device to not access a data bus of the computer and verifying that the controller of the first peripheral device is executing the control application in the trusted security zone of the controller. The method further comprises after verifying that the controller of the first peripheral device is executing the control application in the trusted security zone of the controller sending data from the processor to the controller of the first peripheral device over the data bus of the computer and the controller of the first peripheral device one of transmitting the data sent by the processor on an external communication link reading a memory storage disk or writing to a memory storage disk.

In an embodiment a universal serial bus USB drive is disclosed. The universal serial bus drive comprises a memory wherein the memory contains at least some confidential information a processor coupled to the memory a universal serial bus connector coupled to the processor and an application stored in the memory. When executed by the processor the application determines that a request to access the memory received by the universal serial bus connector is directed to the confidential information and when a message is received by the connector from the sender of the request to access memory that indicates that the sender is executing in a trusted security zone satisfies the request to access the memory. When no message is received by the connector from the sender of the request to access memory that indicates that the sender is executing in a trusted security zone the application does not satisfy the request to access the memory.

In an embodiment a method of accessing a memory disk drive is disclosed. The method comprises transmitting to a disk controller of a memory disk drive a command to execute in a trusted security zone of the disk controller transmitting to the disk controller a request for confirmation that the disk controller is executing in the trusted security zone of the disk controller and when a confirmation that the disk controller is executing in the trusted security zone of the disk controller is received transmitting to the disk controller a command to access a trusted security zone portion of the memory disk drive.

These and other features will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.

It should be understood at the outset that although illustrative implementations of one or more embodiments are illustrated below the disclosed systems and methods may be implemented using any number of techniques whether currently known or not yet in existence. The disclosure should in no way be limited to the illustrative implementations drawings and techniques illustrated below but may be modified within the scope of the appended claims along with their full scope of equivalents.

In an embodiment systems and methods for trusted communication with peripheral devices and or peripheral controllers is disclosed. In a typical computer system logic executes not only on a central processor but in peripheral devices such as a port controller a disk controller a radio transceiver and other devices. The peripheral devices may comprise microprocessors digital signal processors DSPs application specific integrated circuits ASICs field programmable logic arrays FPGAs complex programmable logic devices CPLDs or other logic processors. As such malware that may have been infiltrated into the executable logic of these peripheral devices may be able to monitor or sniff confidential information as it passes on a data bus of the computer system though the subject peripheral device may not have been addressed and or commanded to read the subject confidential information. Malware in a peripheral device may be able to access confidential information stored in a memory of the computer system. Confidential information may comprise credit card account numbers credit card authentication numbers personal data medical data and other information.

The present disclosure teaches transferring confidential information between two trusted logic processors thereby providing a continuity of trust while at the same time capturing or locking out other peripheral devices and thereby preventing them from potentially monitoring or sniffing the confidential information as it is transmitted on the data bus. This state of the computer system may be referred to as a trusted mode of operation. In an embodiment a logic processor of a peripheral device that is not a party to the trusted communication is commanded to execute in a trusted security zone of the logic processor of the peripheral device and while executing in its trusted security zone the logic processor of the peripheral executes a trusted routine or program that performs no substantive processing and does not read the data bus. The logic processors that are engaged in transmitting the confidential information may both execute trusted communication applications or programs in a trusted security zone of each of the logic processors. When executing in the trusted security zone each of these logic processors pause or idle any other normal applications or programs that were active. When the confidential information has been transported over the data bus the logic processor of the peripheral device and the other communication party may be commanded to execute in a normal security zone of the logic processor thereby resuming normal processing. The logic processors of the other peripheral controllers and or device controllers may likewise be commanded to resume executing in the normal security zone.

A universal serial bus USB drive may be plugged into a USB port of the computer system and a central processing unit of the computer system may attempt to read confidential information from the USB drive. The USB drive may execute logic in a processor that delays providing access to the confidential information to the central processing unit until the central processing unit sends a trust token to the USB drive that confirms that the central processing unit is executing in a trusted security zone. The processor in the USB drive may execute in a trusted security zone or may execute in a normal security zone for example when the processor of the USB does not comprise a trusted security zone.

A disk drive controller may mediate access to a disk drive. The disk drive may have a normal memory area and a trusted memory area. The disk drive controller may have a trusted security zone and the trusted memory area may be known only to the trusted security zone or may be accessible only from the trusted security zone. In an embodiment disk memory may be flagged as trusted memory space and the disk drive controller may begin executing in the trusted security zone when memory that is flagged as trusted is accessed.

A trusted security zone provides chipsets with a hardware root of trust a secure execution environment for applications and secure access to peripherals. A hardware root of trust means the chipset should only execute programs intended by the device manufacturer or vendor and resists software and physical attacks and therefore remains trusted to provide the intended level of security. The chipset architecture is designed to promote a programmable environment that allows the confidentiality and integrity of assets to be protected from specific attacks. Trusted security zone capabilities are becoming features in both wireless and fixed hardware architecture designs. Providing the trusted security zone in the main mobile device chipset and protecting the hardware root of trust removes the need for separate secure hardware to authenticate the device or user. To ensure the integrity of the applications requiring trusted data such as a mobile financial services application the trusted security zone also provides the secure execution environment where only trusted applications can operate safe from attacks. Security is further promoted by restricting access of non trusted applications to peripherals such as data inputs and data outputs while a trusted application is running in the secure execution environment. In an embodiment the trusted security zone may be conceptualized as hardware assisted security.

A complete trusted execution environment TEE may be implemented through the use of the trusted security zone hardware and software architecture. The trusted execution environment is an execution environment that is parallel to the execution environment of the main mobile device operating system. The trusted execution environment and or the trusted security zone may provide a base layer of functionality and or utilities for use of applications that may execute in the trusted security zone. For example in an embodiment trust tokens may be generated by the base layer of functionality and or utilities of the trusted execution environment and or trusted security zone for use in trusted end to end communication links to document a continuity of trust of the communications. For more details on establishing trusted end to end communication links relying on hardware assisted security see U.S. patent application Ser. No. 13 532 588 filed Jun. 25 2012 entitled End to end Trusted Communications Infrastructure by Leo Michael McRoberts et al. which is hereby incorporated by reference in its entirety. Through standardization of application programming interfaces APIs the trusted execution environment becomes a place to which scalable deployment of secure services can be targeted. A device which has a chipset that has a trusted execution environment on it may exist in a trusted services environment where devices in the trusted services environment are trusted and protected against attacks. The trusted execution environment can be implemented on mobile phones and tablets as well as extending to other trusted devices such as personal computers servers sensors medical devices point of sale terminals industrial automation handheld terminals automotive etc.

The trusted security zone is implemented by partitioning all of the hardware and software resources of the mobile device into two partitions a secure partition and a normal partition. Placing sensitive resources in the secure partition can protect against possible attacks on those resources. For example resources such as trusted software applications may run in the secure partition and have access to hardware peripherals such as a touchscreen or a secure location in memory. Less secure peripherals such as wireless radios may be disabled completely while the secure partition is being accessed while other peripherals may only be accessed from the secure partition. While the secure partition is being accessed through the trusted execution environment the main mobile operating system in the normal partition is suspended and applications in the normal partition are prevented from accessing the secure peripherals and data. This prevents corrupted applications or malware applications from breaking the trust of the device.

The trusted security zone is implemented by partitioning the hardware and software resources to exist in a secure subsystem which is not accessible to components outside the secure subsystem. The trusted security zone is built into the processor architecture at the time of manufacture through hardware logic present in the trusted security zone which enables a perimeter boundary between the secure partition and the normal partition. The trusted security zone may only be manipulated by those with the proper credential and in an embodiment may not be added to the chip after it is manufactured. Software architecture to support the secure partition may be provided through a dedicated secure kernel running trusted applications. Trusted applications are independent secure applications which can be accessed by normal applications through an application programming interface in the trusted execution environment on a chipset that utilizes the trusted security zone.

In an embodiment the normal partition applications run on a first virtual processor and the secure partition applications run on a second virtual processor. Both virtual processors may run on a single physical processor executing in a time sliced fashion removing the need for a dedicated physical security processor. Time sliced execution comprises switching contexts between the two virtual processors to share processor resources based on tightly controlled mechanisms such as secure software instructions or hardware exceptions. The context of the currently running virtual processor is saved the context of the virtual processor being switched to is restored and processing is restarted in the restored virtual processor. Time sliced execution protects the trusted security zone by stopping the execution of the normal partition while the secure partition is executing.

The two virtual processors context switch via a processor mode called monitor mode when changing the currently running virtual processor. The mechanisms by which the processor can enter monitor mode from the normal partition are tightly controlled. The entry to monitor mode can be triggered by software executing a dedicated instruction the Secure Monitor Call SMC instruction or by a subset of the hardware exception mechanisms such as hardware interrupts which can be configured to cause the processor to switch into monitor mode. The software that executes within monitor mode then saves the context of the running virtual processor and switches to the secure virtual processor.

The trusted security zone runs a separate operating system that is not accessible to the device users. For security purposes the trusted security zone is not open to users for installing applications which means users do not have access to install applications in the trusted security zone. This prevents corrupted applications or malware applications from executing powerful instructions reserved to the trusted security zone and thus preserves the trust of the device. The security of the system is achieved at least in part by partitioning the hardware and software resources of the mobile phone so they exist in one of two partitions the secure partition for the security subsystem and the normal partition for everything else. Placing the trusted security zone in the secure partition and restricting access from the normal partition protects against software and basic hardware attacks. Hardware logic ensures that no secure partition resources can be accessed by the normal partition components or applications. A dedicated secure partition operating system runs in a virtual processor separate from the normal partition operating system that likewise executes in its own virtual processor. Users may install applications on the mobile device which may execute in the normal partition operating system described above. The trusted security zone runs a separate operating system for the secure partition that is installed by the mobile device manufacturer or vendor and users are not able to install new applications in or alter the contents of the trusted security zone.

Turning now to a system is described. In an embodiment the system comprises a central processing unit CPU a memory a keyboard controller a display controller a disk controller a universal serial bus USB port controller an Ethernet port controller and a radio transceiver . The system further comprises a data bus and an address bus . The system may comprise other components and or communication pathways not shown. For example the system may comprise a variety of control lines or a control bus that is not shown. In an embodiment commands and or control signals may be carried on the data bus .

In an embodiment the system implements a computer system for example a desktop computer a laptop computer a notebook computer a server computer a database server computer or other computer. Some aspects of computer systems are described towards the end of this specification. While not inconsistent with the description of computer systems at the end of the specification the depiction of the system in is convenient for discussing some aspects of the embodiments of the disclosure. The system may also be embodied as a mobile device such as a mobile phone a personal digital assistant PDA a media player and other portable devices that have a radio frequency communication capabilty. In an embodiment the system may not comprise the disk controller or the Ethernet port controller .

The memory may be any of a variety of semi conductor memory such as read only memory ROM random access memory RAM flash memory static random access memory SRAM dynamic random access memory DRAM and the like. The system may also access disk memory not shown via the disk controller . In an embodiment access to the memory may be mediated by a memory controller not shown . The memory controller may execute software and or firmware instructions in a logic processor. Alternatively in another embodiment the memory may be accessed from the address bus and the data bus without mediation provided by a memory controller.

The keyboard controller may receive input from a traditional keyboard or from a touch input device such as a touch screen device. The keyboard controller or another controller may also receive input from a microphone. The keyboard controller may de bounce the keys of the keyboard buffer user input when the buses are busy send the input from the keyboard on the data bus to the CPU and provide other mediating services. The display controller may receive output from the CPU and send the output to a visual display in such a way as to present the output on the visual display. The disk controller may mediate requests to read from and to write to a disk drive not shown . The USB port controller may mediate requests to read from and to write to a USB drive. The Ethernet port controller may mediate requests to read from and to write to an Ethernet communication link. The radio transceiver may comprise a logic processor that modulates and demodulates signals. The radio transceiver may further comprise radio components for upconverting a modulated signal to a radio frequency signal amplifying the radio frequency signal and transmitting the radio frequency signal via an antenna not shown as well as for receiving a radio frequency signal via the antenna amplifying the received radio frequency signal and downconverting the radio frequency signal to a baseband signal. As is known to one skilled in the art the radio transceiver may provide a variety of further signal processing functions. In an embodiment each of the controllers and the radio transceiver may execute software and or firmware instructions in a logic processor such as a microprocessor a digital signal processor an application specific integrated circuit a field programmable logic array a complex programmable logic device or other logic processors.

The CPU may be considered to manage or control the memory the controllers and the radio transceiver by sending control signals. The CPU may be implemented as a logic processor for example a microprocessor a digital signal processor and or another logic processor. The CPU executes one or more software or firmware applications to provide the desired functionality of the system . The CPU may select devices by addressing them on the address bus . The CPU may read from or write to devices on the data bus . Some of the data transmitted or received may comprise confidential information that is desired to be processed using a continuity of trust. A continuity of trust may be considered to be provided when the CPU executes in a trusted security zone and writes to or reads from a peripheral device that likewise executes in a trusted security zone of the device for example in a trusted security zone of one of the controllers or of the radio transceiver .

As an example the CPU may execute a disk drive reading routine in a trusted security zone of the CPU may command the controllers and the radio transceiver to execute in a trusted security zone of their respective logic processors and to execute an idling program and may command the disk controller to execute a disk access routine in a trusted security zone of the logic processor of the disk controller . While the controllers and the radio transceiver execute the idling program they do not read from or write to the data bus . Additionally in an embodiment untrusted applications are not allowed to execute on the controllers or on the radio transceiver while they are executing in the trusted security zone. Under this condition which may be referred to as a trusted mode of operation the CPU may send a request to read the data from a specific address or range of addresses of the disk drive.

The disk controller may receive the request from the CPU and verify that the CPU is executing in the trusted security zone as indicated by a trust token sent by the CPU to the disk controller . The disk controller may then retrieve the requested data while executing a trusted routine in its trusted security zone and transmit this requested data over the data bus . After the data has been transmitted the trusted security mode of operation may be terminated and the CPU the controllers and the radio transceiver may return to executing in the normal security zone of their respective logic processors.

In an embodiment data stored on the disk coupled to the disk controller may comprise a trusted untrusted flag to designate the trust status of the subject unit of data. When the CPU requests to access the data the disk controller may first read the trust flag it may identify that the addressed data is trusted data. The disk controller may then execute in its trusted security zone and may send a message to the CPU asking that it enter the trusted security zone to complete disk access.

Turning now to a first universal serial bus USB drive is described. In an embodiment the first USB drive comprises a processor a memory and a universal serial bus connector . In some contexts the first USB drive may be referred to as a thumb drive. The first USB drive may be easily portable and inexpensive. The memory may comprise any kind of readable and writeable random access memory.

In an embodiment the first USB drive may be connected to the system and or the USB port controller by the USB connector . The first USB drive may store confidential information that it is desired to be read from or written to the memory for example by the CPU . The processor may determine that the CPU is attempting to write confidential information to or to read confidential information from the memory . In this case the processor may delay performing the requested access to the memory until the CPU sends a trust token indicating that the system has entered the trusted operation mode. In an embodiment the processor may send a message to the CPU requesting that the system enter the trusted operation mode. When the processor determines the CPU is attempting to write to or read from an area of the memory that does not contain confidential information the processor may satisfy the memory access request without expecting the system to enter a trusted operation mode. The confidential information may comprise a credit card account number a credit card authentication number a financial account number a financial account authentication number a social security number a telephone number personal data medical data or other information.

Turning now to a second USB drive is described. In an embodiment the second USB drive comprises a processor having a trusted security zone the memory and a universal serial bus connector . The second USB drive is substantially similar to the first USB drive with the difference that the processor further comprises the trusted security zone . In an embodiment when the second USB drive detects that the system is attempting to access the confidential information stored in the memory the processor begins executing the trusted security zone . The trusted security zone may wait for the system to send an indication via the USB port controller that the system is in the trusted operation mode and or send a message to the USB port controller to request the system to go into the trusted operation mode before handing requests to access the confidential information in the memory .

Turning now to a method is described. At block a data communication application is executed in a trusted security zone of a processor wherein the processor is a component of a computer. At block a controller of a first peripheral device is commanded to execute a control application in a trusted security zone of the controller wherein the controller of the first peripheral device is a component of the computer. This block may comprise sending a trusted flag or other indication that the trusted mode of operation should be entered by the processor to the controller. Of the first peripheral device. At block at least one of another peripheral device or a user interface device is commanded to not access a data bus of the computer. At block it is verified that the controller of the first peripheral device is executing the control application in the trusted security zone of the controller.

At block after verifying that the controller of the first peripheral device is executing the control application in the trusted security zone of the controller data is sent from the processor to the controller of the first peripheral device over the data bus of the computer. At block the controller of the first peripheral device one of transmits the data sent by the processor on an external communication link reading a memory storage disk or writing to a memory storage disk.

Turning now to a method is described. At block a command to execute in a trusted security zone of a disk controller is transmitted to the disk controller. At block a request for confirmation that the disk controller is executing in the trusted security zone of the disk controller is transmitted to the disk controller. At block when a confirmation that the disk controller is executing in the trusted security zone of the disk controller is received transmit to the disk controller a command to access a trusted security zone portion of the memory disk drive.

The DSP or some other form of controller or central processing unit operates to control the various components of the mobile device in accordance with embedded software or firmware stored in memory or stored in memory contained within the DSP itself. In addition to the embedded software or firmware the DSP may execute other applications stored in the memory or made available via information carrier media such as portable data storage media like the removable memory card or via wired or wireless network communications. The application software may comprise a compiled set of machine readable instructions that configure the DSP to provide the desired functionality or the application software may be high level software instructions to be processed by an interpreter or compiler to indirectly configure the DSP .

The DSP may communicate with a wireless network via the analog baseband processing unit . In some embodiments the communication may provide Internet connectivity enabling a user to gain access to content on the Internet and to send and receive e mail or text messages. The input output interface interconnects the DSP and various memories and interfaces. The memory and the removable memory card may provide software and data to configure the operation of the DSP . Among the interfaces may be the USB port and the infrared port . The USB port may enable the mobile device to function as a peripheral device to exchange information with a personal computer or other computer system. The infrared port and other optional ports such as a Bluetooth interface or an IEEE 802.11 compliant wireless interface may enable the mobile device to communicate wirelessly with other nearby handsets and or wireless base stations.

The keypad couples to the DSP via the interface to provide one mechanism for the user to make selections enter information and otherwise provide input to the mobile device . Another input mechanism may be the touch screen LCD which may also display text and or graphics to the user. The touch screen LCD controller couples the DSP to the touch screen LCD . The GPS receiver is coupled to the DSP to decode global positioning system signals thereby enabling the mobile device to determine its position.

It is understood that by programming and or loading executable instructions onto the computer system at least one of the CPU the RAM and the ROM are changed transforming the computer system in part into a particular machine or apparatus having the novel functionality taught by the present disclosure. It is fundamental to the electrical engineering and software engineering arts that functionality that can be implemented by loading executable software into a computer can be converted to a hardware implementation by well known design rules. Decisions between implementing a concept in software versus hardware typically hinge on considerations of stability of the design and numbers of units to be produced rather than any issues involved in translating from the software domain to the hardware domain. Generally a design that is still subject to frequent change may be preferred to be implemented in software because re spinning a hardware implementation is more expensive than re spinning a software design. Generally a design that is stable that will be produced in large volume may be preferred to be implemented in hardware for example in an application specific integrated circuit ASIC because for large production runs the hardware implementation may be less expensive than the software implementation. Often a design may be developed and tested in a software form and later transformed by well known design rules to an equivalent hardware implementation in an application specific integrated circuit that hardwires the instructions of the software. In the same manner as a machine controlled by a new ASIC is a particular machine or apparatus likewise a computer that has been programmed and or loaded with executable instructions may be viewed as a particular machine or apparatus.

The secondary storage is typically comprised of one or more disk drives or tape drives and is used for non volatile storage of data and as an over flow data storage device if RAM is not large enough to hold all working data. Secondary storage may be used to store programs which are loaded into RAM when such programs are selected for execution. The ROM is used to store instructions and perhaps data which are read during program execution. ROM is a non volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM is used to store volatile data and perhaps to store instructions. Access to both ROM and RAM is typically faster than to secondary storage . The secondary storage the RAM and or the ROM may be referred to in some contexts as computer readable storage media and or non transitory computer readable media.

I O devices may include printers video monitors liquid crystal displays LCDs touch screen displays keyboards keypads switches dials mice track balls voice recognizers card readers paper tape readers or other well known input devices.

The network connectivity devices may take the form of modems modem banks Ethernet cards universal serial bus USB interface cards serial interfaces token ring cards fiber distributed data interface FDDI cards wireless local area network WLAN cards radio transceiver cards such as code division multiple access CDMA global system for mobile communications GSM long term evolution LTE worldwide interoperability for microwave access WiMAX and or other air interface protocol radio transceiver cards and other well known network devices. These network connectivity devices may enable the processor to communicate with the Internet or one or more intranets. With such a network connection it is contemplated that the processor might receive information from the network or might output information to the network in the course of performing the above described method steps. Such information which is often represented as a sequence of instructions to be executed using processor may be received from and outputted to the network for example in the form of a computer data signal embodied in a carrier wave.

Such information which may include data or instructions to be executed using processor for example may be received from and outputted to the network for example in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embedded in the carrier wave or other types of signals currently used or hereafter developed may be generated according to several methods well known to one skilled in the art. The baseband signal and or signal embedded in the carrier wave may be referred to in some contexts as a transitory signal.

The processor executes instructions codes computer programs scripts which it accesses from hard disk floppy disk optical disk these various disk based systems may all be considered secondary storage ROM RAM or the network connectivity devices . While only one processor is shown multiple processors may be present. Thus while instructions may be discussed as executed by a processor the instructions may be executed simultaneously serially or otherwise executed by one or multiple processors. Instructions codes computer programs scripts and or data that may be accessed from the secondary storage for example hard drives floppy disks optical disks and or other device the ROM and or the RAM may be referred to in some contexts as non transitory instructions and or non transitory information.

In an embodiment the computer system may comprise two or more computers in communication with each other that collaborate to perform a task. For example but not by way of limitation an application may be partitioned in such a way as to permit concurrent and or parallel processing of the instructions of the application. Alternatively the data processed by the application may be partitioned in such a way as to permit concurrent and or parallel processing of different portions of a data set by the two or more computers. In an embodiment virtualization software may be employed by the computer system to provide the functionality of a number of servers that is not directly bound to the number of computers in the computer system . For example virtualization software may provide twenty virtual servers on four physical computers. In an embodiment the functionality disclosed above may be provided by executing the application and or applications in a cloud computing environment. Cloud computing may comprise providing computing services via a network connection using dynamically scalable computing resources. Cloud computing may be supported at least in part by virtualization software. A cloud computing environment may be established by an enterprise and or may be hired on an as needed basis from a third party provider. Some cloud computing environments may comprise cloud computing resources owned and operated by the enterprise as well as cloud computing resources hired and or leased from a third party provider.

In an embodiment some or all of the functionality disclosed above may be provided as a computer program product. The computer program product may comprise one or more computer readable storage medium having computer usable program code embodied therein to implement the functionality disclosed above. The computer program product may comprise data structures executable instructions and other computer usable program code. The computer program product may be embodied in removable computer storage media and or non removable computer storage media. The removable computer readable storage medium may comprise without limitation a paper tape a magnetic tape magnetic disk an optical disk a solid state memory chip for example analog magnetic tape compact disk read only memory CD ROM disks floppy disks jump drives digital cards multimedia cards and others. The computer program product may be suitable for loading by the computer system at least portions of the contents of the computer program product to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system . The processor may process the executable instructions and or data structures in part by directly accessing the computer program product for example by reading from a CD ROM disk inserted into a disk drive peripheral of the computer system . Alternatively the processor may process the executable instructions and or data structures by remotely accessing the computer program product for example by downloading the executable instructions and or data structures from a remote server through the network connectivity devices . The computer program product may comprise instructions that promote the loading and or copying of data data structures files and or executable instructions to the secondary storage to the ROM to the RAM and or to other non volatile memory and volatile memory of the computer system .

In some contexts the secondary storage the ROM and the RAM may be referred to as a non transitory computer readable medium or a computer readable storage media. A dynamic RAM embodiment of the RAM likewise may be referred to as a non transitory computer readable medium in that while the dynamic RAM receives electrical power and is operated in accordance with its design for example during a period of time during which the computer is turned on and operational the dynamic RAM stores information that is written to it. Similarly the processor may comprise an internal RAM an internal ROM a cache memory and or other internal non transitory storage blocks sections or components that may be referred to in some contexts as non transitory computer readable media or computer readable storage media.

While several embodiments have been provided in the present disclosure it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive and the intention is not to be limited to the details given herein. For example the various elements or components may be combined or integrated in another system or certain features may be omitted or not implemented.

Also techniques systems subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems modules techniques or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be indirectly coupled or communicating through some interface device or intermediate component whether electrically mechanically or otherwise. Other examples of changes substitutions and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein.

