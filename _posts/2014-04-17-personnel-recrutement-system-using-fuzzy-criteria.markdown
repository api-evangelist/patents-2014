---

title: Personnel recrutement system using fuzzy criteria
abstract: A data search system provides access to information about potential job candidates, in particular, their professional skills, work experience, education, professional activity and other aspects, which are of importance to a recruiter. The invention can be employed by recruiting agencies, HR departments, independent experts and other staffing agencies, as well as managers looking for new employees. Since there is usually no direct links between different profiles of the candidate, the system makes some distributed profiles “fuzzy” (i.e., unverified). These “fuzzy” profiles are also displayed during the search, and the user of the system can choose the needed profile from the database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09405807&OS=09405807&RS=09405807
owner: AMAZING HIRING, INC.
number: 09405807
owner_city: Redwood City
owner_country: US
publication_date: 20140417
---
This application claims priority to Eurasian Application No. 201300375 filed Apr. 18 2013 incorporated herein in its entirety.

The present invention relates to data search systems designed for personnel recruitment using fuzzy criteria.

A conventional method of searching for candidates is to search through so called job boards where active candidates i.e. those who are currently looking for job upload their CVs resumes providing a detailed account of their professional skills education certifications work experience at different companies and references. The problem of this conventional method is that the highly qualified candidates usually change their job by invitation so that they have no need to write up a CV and post it on a job website. Thus this conventional method can only be used to look for active candidates which is not sufficient.

Many candidates have their profiles accounts on various professional social networks and their own websites. The candidates can also join professional discussions on Internet forums and in case with programmers participate in open source projects. In order to find job candidates recruiters use various job seeking services e.g. dice.com monster.com superjob.ru headhunter.ru etc. professional social networks LinkedIn Xing Viadeo Zerply Moikrug.ru recreational social networks Facebook Google Plus Myspace VKontakte Twitter Tumblr Q A forums rsdn.ru stackoverflow.com quora.com expert exchange.com open source software repositories e.g. Github Google Code Bitbucket SourceForge Launchpad Redmine .

Nonetheless it is often difficult to find a suitable candidate since they might have no LinkedIn profile at all or their profile might provide only partial data e.g. a Github profile may contain only the name of the candidate and a list of projects they are participating in and a LinkedIn profile may provide only the name and the city of the candidate but no skills description or projects they have participated in .

As discussed above a known method for looking for passive candidates using professional social networks e.g. LinkedIn Xing Viadeo Zerply Moikrug.ru etc. is inefficient. The main problem of this method is that the search yields only the data that the candidate has filled in their profile. Highly qualified passive candidates usually have no need to give a full account of their achievements skills and work experience in their respective field. The reasons are the same as for the lack of their CVs on the job boards. For example highly qualified software developers can be distinguished mainly by their participation in open source software development projects or activity in giving answers to difficult problems posted on professional forums dedicated to software development e.g. Stackoverflow .

Yet another known method is to search for information about potential job candidates including passive ones on different Internet resources. The problem of this known method is that each individual profile account of the candidate might miss specific data needed to identify a qualified candidate such as their professional skills work experience projects they have participated in and or contacts. Another problem is that the search might yield different profiles of the same candidate but from different resources that may have been viewed earlier. Thus it increases the effort needed staff recruiters who have to look through various resources and spend much more time checking the same candidates than if they were monitoring only one resource.

Accordingly there is a need in the art for a system which creates a single distributed profile for the candidate which would combine all candidates profiles accounts on different network resources and supply the missing information for each individual profile.

Assessing candidates before an interview is hard to do and leads to very broad recruitment funnels companies have to interview a lot of candidates sometimes up to 20 30 to hire one.

Assessing candidates before an interview consists of two parts a qualification and b culture fit assessment.

A conventional method for assessment of qualifications can include having candidates pass some automatic tests however in a situation with a lack of candidates the candidates are not willing to spend a few hours to pass some tests so this method is often inefficient as it might turn away good candidates.

At the same time for many candidates there is enough publicly available information to assess qualification of a candidate including a his her career progression based on the information in a resume or in a profile on a professional social network b proficiency in a particular technology of companies the candidate worked at c online reputation of a candidate consisting of votes or likes when peers vote for or like good answers or good questions the candidate gives on highly professional forums or d for software developers there might be even available source code they have written for open source projects and e peer review of the source code other developers can fork code written by this developer or put a star on the code like it or follow the developer. All this information allows assessing qualification of a candidate prior to an interview.

Assessing culture fit is a problem that is often missed by someone out of the recruitment industry but experienced recruiters know that the probability of a particular candidate to be hired by a particular hiring manager is significantly higher if the candidate and the hiring manager have graduated from the same educational institution or worked in the same set of companies in the past or grown up in the same geographical area or in case of software developers participated in the same open source project.

Currently it is hard for recruiters to try assessing candidates by both criteria qualification and culture fit. It is just impossible to assess culture fit when a recruiter sees a profile with only some information available e.g. viewing Github profile containing only nickname and email of a candidate.

The present invention relates to data search systems designed for personnel recruitment using fuzzy criteria that substantially overcomes one or more disadvantages of the related art.

The inventive search system collects publicly available information from dozens of web sources identifies profiles of the same person on different sources and builds a consolidated profile.

As is known in the search engine industry for a search engine it is not enough to have a large collection of information one needs to have a ranking algorithm which gives most relevant results first.

The inventive search system has such an algorithm which ranks candidates based on various sets of criteria a qualification and b culture fit thus solving the problem of assessing a candidate prior to an interview. An important ranking criteria is also c potential interest of a candidate in changing his current job

The system assesses qualification of a candidate by using a his her career progression based on the information in a resume or in a profile on a professional social network b proficiency in a particular technology of companies the candidate worked at c online reputation of a candidate consisting of votes or likes when peers vote for or like good answers or good questions the candidate gives on highly professional forums c for software developers there might be even available source code they have written for open source projects and d peer review of the source code other developers can fork code written by this developer or put a star on the code like it or follow the developer. All this information allows assessing qualification of a candidate prior to an interview.

The system assesses culture fit for a candidate the hiring manager and the team by many parameters the simplest ones are a if the candidate and the hiring manager team have graduated from the same educational institution or b worked in the same set of companies in the past or c grew up in the same geographical area or d in case of software developers participated in the same open source project.

In addition to simple parameters there are many complex ones for instance if the candidate liked a few thousand objects on a social network e.g. Facebook and the hiring manager liked a few thousand objects on Facebook and there is a high intersection among those objects e.g. 80 overlap it indicates that interests of the candidate and the hiring manager have a lot in common.

The data search system provides access to information about potential job candidates in particular their professional skills work experience education professional activity and other aspects which are of importance for a recruiter. The invention can be employed by recruiting agencies HR departments independent experts and other staffing agencies as well as mangers looking for new employees. Since there is usually no direct links between different profiles of the candidate the system makes some distributed profiles fuzzy i.e. unverified . These fuzzy profiles are also displayed during the search and the user of the system can choose the needed profile s from the database.

According to an exemplary embodiment the fuzziness of linking some profiles into a distributed profile is used. For instance there might be two profiles having the same name and last name e.g. Jack Smith which studied in Stanford at the same time and after graduation worked at the same companies. If it turns out that both persons were raised in Austin Tex. and studied at the same high school at the same time the probability is very high that both profiles represent the same person. The system can capitalize on the high probability though there is a small chance that these two persons are different and not compatible business wise . This is the case when there is some fuzziness in the linkage of the two profiles into a distributed profile. The fuzziness can be weeded out later when more information is available e.g. when the system finds out that both profiles have the same email .

Additional features and advantages of the invention will be set forth in the description that follows and in part will be apparent from the description or may be learned by practice of the invention. The advantages of the invention will be realized and attained by the structure particularly pointed out in the written description and claims hereof as well as the appended drawings.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are intended to provide further explanation of the invention as claimed.

The present invention relates to data search systems designed for personnel recruitment using fuzzy criteria. Fuzzy criteria here might be skills that are not easy to define strictly e.g. Product Management Skills or Strong Software Development Background etc.

Many candidates have their profiles accounts on various professional social networks their own websites they also join professional discussions on Internet forums and in case with programmers participate in open source projects. According to an exemplary embodiment since there are no direct links between different profiles of the candidate the system makes some distributed profiles fuzzy i.e. unverified . These fuzzy profiles are also displayed during the search and the user of the system can choose the needed profile from a database.

The present invention unlike a conventional approach provides for an automated search for both active and passive job candidates generates distributed profiles that combine information gathered from different profiles accounts of the candidate registered on various network resources thus making it possible to find highly qualified candidates who would be missed otherwise. A recruiter can fill in the desired job requirements in a search query such as skills work experience education age etc. The search yields a number of distributed profiles wherein each such profile provides the necessary data. According to the exemplary embodiment Distributed or Consolidated profiles are stored in the system s database and the system itself is running in the cloud though it can be also run within a corporate data center . Profiles comprising a distributed profile are stored on different third party web sources in the cloud.

Currently recruiters have to search through various resources spending much time on each based on different estimations 30 40 of the recruiter s time is spent on candidate search on the Internet while many qualified candidates are missed because they have no profile account on the resource in question or their profile account does not provide enough data. According to the exemplary embodiment use of the distributed profiles reduces the time spent on search and makes it possible to locate highly qualified candidates who would be missed otherwise.

Furthermore the system increases search efficiency manifold as it greatly reduces recruiter s time spent on the search because the recruiter does not have to search through a number of various Internet resources. According to the exemplary embodiment the automated staff recruitment system includes 

The data storage contains candidates identification data and related information that has been verified. The user workstation is connected to the automated search unit so that the user can enter the search query parameters into the unit. The database management system provides data input to the database and extracts candidate related data from the database according to the search query parameters. The data cache stores the collected information and groups it according to candidates identification data and network resources from which the information is cached. The automated search unit searches for data according to the query parameters entered by the user at the workstation and to extracts candidate s information from the database according to the given criteria.

The cache data extracting unit is able to search for entries corresponding to the given criteria and to compare Internet profiles with the extracted database profiles entries. The system includes an entry comparing unit which transfers cached information to the data base if this information is verified and found to correspond to a real candidate s profile or stores the data in the cache providing the database with a link to the cache entry if the information is not verified and or its correspondence is fuzzy.

According to the exemplary embodiment the system includes an extra automated network data collecting unit which is able to connect to a network resource using identification data of a user of a given resource. Particularly if the user of the given resource also is the user of the candidate search system then the automated network data collecting unit uses its connection to find out whether some candidates belong to the first circle of the user of the given resource. The data cache stores data for a limited time.

Furthermore the data can be transferred from the cache to the database if it is verified by a user with administrator s rights and at least one user of the system should be identified as having such rights while at least one user of the system may have a second administrator profile with the right to confirm data correspondence to database profiles . The search query can rank entries according to the level of correspondence of the candidate s data to the search query parameters. The search query can also calculate a degree of correspondence e.g. as a weight coefficient based on the number of matches of key criteria . Also the system can rank search results according to the probability of a candidate responding to a job offer by the recruiter.

The probability calculation is based on secondary data regarding a desire of the candidate to change his or her current job. The probability can also be calculated based on the candidate s job search activity. Particularly the probability of the candidate changing their job is based on their network forum activity fluctuations and or financial indexes of their current employer and or information about possible cuts of the workforce by their current employer and or update statistics of the candidate s profile in professional social networks and other relevant data.

When searching for candidate s profiles accounts on the Internet resources the system can employ general search engines such as Google Yandex etc. When the search query result is displayed the candidates can be ranked according to the number and quality of their published works such as professional publications and patents in the areas corresponding to the skills and the keywords passed as search parameters. To this end publishing databases can be used to provide additional data for candidates profiles.

The quality of the papers can be accessed through external metrics e.g. citation index how many papers including patents cited or referenced a particular paper http en.wikipedia.org wiki Citation index reputation of scientific journals where the paper was published etc.

Also the candidates can be ranked according to the level of correspondence of their profiles to the profile of a potential hiring manager supervisor because if the candidate has similar education and experiences there is a higher chance of him working successfully with the supervisor. Additionally the supervisor will be more inclined to interview such candidate and offer him a job. The level of correspondence to the potential supervisor or a hiring manager is estimated by the system which checks whether both the candidate and the supervisor graduated from the same educational institutions and or worked in the same enterprise regardless of time periods participated in the same open source software development projects etc.

The same approach can be implemented to compare candidates profiles with those of current employees by creating a generalized profile of enterprise workers. The generalized profile can be created automatically by analyzing profiles of the team which has the opening. For instance if 80 of the team graduated from the same educational institution say MIT then the generalized profile will have MIT as education. Likewise if say 92 of the team worked at Google in the past then the generalized profile will have Google as a previous employer.

Another example suppose that a Job Description says C is a required skill upon analyzing team profiles one can figure out that 83 of the team in addition to C know Assembler. As a result both C and Assembler will be set as skills in the generalized profile. The profiles can be included into the database in order to improve the search quality. The generalized personal profile of a typical employee can be created using information about the age of employees educational institutions they attended enterprises they worked at music and messages posted in social networks they like. 

The search query parameters can be based on a real profile and the system can look for candidates corresponding to that profile and rank them accordingly while the user of the system can mark more less desirable points to be considered during the search. The level of correspondence in this case can be estimated based on one or several parameters such as similar professional skills education work experience published works similar professional interests similar things posted and liked in social networks.

Users of the system can provide it with the feedback on which candidates are a good fit for the job and which ones are not. It can be implemented with a special button e.g. or two buttons and on a candidate profile. When a hiring manager and or a recruiter tell s system a candidate is a good one the system takes this into account and adjusts search output appropriately. For instance it can analyze candidates that are a good fit for the job and build a generalized profile of a candidate who is a good fit for the job. The generalized profile can be built in a manner similar to building a generalized profile of a team.

The hiring manager can benefit from such a system because he might not need to create a formal Job Description by recruiter s request which might often be an embarrassing task for a technical team leader. The hiring manager and the recruiter can simply sit together and use the system by issuing a simple query to the system and then providing the system with the feedback on good candidates.

The exemplary system can be used in situation where there are several network resources either linked to each other or not containing information about several potential candidates. The information may be presented in the form of a CV resume or as a profile account. Some data may be missing or omitted and some data might be distorted because of the purpose of publishing i.e. it might contain inaccurate information or data copied from other candidates CVs or profiles.

Candidates may have their profiles on different resources or even several profiles on the same resource. From here on a candidate is a potential employee who is looked for by a recruiting agency using a special workstation. The candidate s profiles may contain no particular data needed to identify them. Thus the objective of the system is to find a candidate in the general database or integrate a new candidate if there is no profile.

Candidates profiles often do not contain links to other profiles on other resources which makes it difficult to locate the candidate registered on different resources.

The exemplary embodiment provides a method for creating a distributed profile to facilitate candidate search. The system allows to create a distributed profile using several profiles accounts if 

When creating a distributed profile the system locates profiles accounts of the candidate on various resources identifies the person using various occasionally fuzzy criteria and combines individual profiles accounts into a single distributed profile. 

According to the exemplary embodiment the system operates as follows. If the system has an access to an external candidates profiles database it performs indexation and organizes the candidates data according to their skills work experience education contacts. In case there are multiple external databases the system performs additional indexation and organization and then begins to create a distributed profile of a candidate based on their first and last name location education institution they attended during a given period of time enterprises they worked at given contacts personal image photo and other associated data.

In case the system is unable to combine two profiles reliably but there is a high probability that both profiles belong to the same person the system marks them as such providing a link between the two for the system users who verifies the information and either confirms or rejects the link.

The recruitment agency may opt to include their proprietary internal database to be used only inside the agency. In this case the system performs indexation of data in the internal database and then creates distributed profiles based on CVs from the internal database and external network profiles accounts. If needed the information in the internal database is updated using links to external candidates profiles. In case the system is unable to associate an external profile with the existing one reliably but there is a high probability it belongs to the same candidate the system provides a link to the external profile marking it for an additional check by the user i.e. a recruiter who then verifies the information and either confirms or rejects the link.

In order to improve quality of the search the system can collect data for a given specialization e.g. software development . Also the system helps to assess candidates according to their professional achievements by supplying missing information or verifying the information provided by candidates which enhances the preliminary assessment of candidates significantly. For instance highly qualified or high ranked candidates may add some extra achievements to their profiles e.g. a number of employees who worked under the candidate academic degrees and titles scientific works publications etc. The system can perform a search for the employments degrees and titles and verify them. Such preliminary assessment can help eliminate sub par candidates at early stages.

Low ranked or not very qualified candidates often have identical profiles but their achievements can be registered on various resources e.g. a number of bans likes and informative non informative posts . According to the exemplary embodiment the system can have a profile supplement feature if the recruiter is unsure whether to select a given candidate or not he can ask for additional information regarding key skills e.g. scientific or literary works forum posts etc. . As an option such information is a subject to copyright laws and will be deleted after viewing but the links can be saved if needed. In one exemplary embodiment the system may employ an anti plagiarism feature to verify the authorship. There are numerous anti plagiarism systems on the market. Generally what they do is split a paper into smaller chunks e.g. paragraphs and then search for these chunks in other published papers. The inventive system may employ an anti plagiarism feature search engines e.g. Google or scientific paper databases.

According to the exemplary embodiment the system uses cloud computing and includes the following elements 

Thus the user is able to analyze the profile node provided by the system and either confirms the distributed profile by approving the system s guess or rejects it giving a feedback suitable for further machine learning. Such positive or negative feedback enhances the precision of the fuzzy distributed profiles created by the system.

The search parameters may be entered at once or can be added and or refined later after the system displays search results. When displaying the results the system can show the user a condensed version of the candidate s profile containing only the parameters corresponding to those entered in a search query e.g. C MS SQL . The information provided in the condensed version should be sufficient for a recruiter to decide promptly whether to examine the given candidate more thoroughly or to skip him over and go to the next one. In particular the candidate s condensed profile can contain the following parameters 

The system conducts the search using the specified parameters and displays the result to the user who is able to modify the query e.g. change a list of enterprises a job candidate could have worked at or accept the variant s of query modification proposed by the system. As an option the system can propose to modify the list of skills used to search for candidates.

The unit uses HTTP protocol and also Application Programming Interface API and periodically also in background mode scans open network resources e.g. professional forums for developers professional social networks etc. . In order to find a specific set of documents on the Internet the unit can also address common search engines . Furthermore the unit can scan the internal database provided by the user in order to get data about candidates who have been already entered into the internal database and thus assess the efficiency of data collected from the Internet. Furthermore it can update or discard the information stored in the internal database using data from the Internet if it corresponds to the candidate listed on the network resource or it can use this information for further data verification if there is unique data belonging to different profiles of the candidate.

Also the data collected can be used to refine the information stored in the internal database . Documents obtained from the Internet a candidate s profile account a candidate s scientific article posts from professional forums etc. can be stored in the document database and subsequently be transferred alongside with the query response to the data analyzing unit or Parser which then extracts useful data from the documents.

The Internet data collecting unit can act indirectly following the request from the workstation user interface through DB access module to look for a specific candidate on a specific resource.

In order to form the URL queue the system adds up candidates profile page IDs which can be done based on the results yielded by general search engines using open information on users of various information sources and for each recruitment agency the queue is formed according the their own internal database .

The Internet data collecting unit or Robot stores each obtained document web page in the document database . If the unit fails to collect the document it provides the latest changes date and error codes instead. The Robot maintains the URL queue so that the information is updated periodically e.g. once a day or in parallel with profile database updates on the given network resource.

The data analysis unit or Parser extracts organized information about the candidate from the obtained documents such as first name last name skills etc. The information is transmitted to the profile database to be processed analyzed used to make up a distributed profile and displayed in the search report. In case the Internet data collection unit works indirectly following a request by the user a recruiter created by means of the workstation to search for a specific candidate on a specific resource the Parser analyzes the document DB and then transmits the organized information immediately to the profile comparison unit .

The profile comparison unit is responsible for searching for profiles belonging to a specific candidate which were obtained by the Internet data collecting unit from various resources. It is not a trivial task since candidates do not always explicitly mark their profiles on different websites and matching names dates of birth locations education institutions are not always a conclusive proof. Candidates may use different languages English Russian etc. omit some information e.g. date of birth and so on.

The profile comparison unit looks for matches between profiles in the profile database . As an option when a network profile account is transmitted for analysis to the profile comparison unit by the data analysis unit or Parser after the document has been obtained by the Internet data collecting unit according to the search query created by the user a recruiter the profile comparison unit may request the unit to obtain the candidates profiles from other information resources.

The full text search unit conducts a full text indexation of candidates profiles so that they can be searched later using keywords and phrases. Indexation follows the natural language morphology rules. When the recruiter prepares a search query using keywords and phrases the workstation user interface sends a request to the full text search module which returns to the interface a set of candidates distributed profiles where the keywords and phrases were found.

As an option the full text search unit may get a request from the profile comparison unit to search the database for profiles with given parameters during the process of making up a distributed profile. The users of the system create search queries by means of their workstations with the workstation user interface . The interface transmits search queries to the profile database access unit . The unit controls the access to the profile database and accelerates the data access through storing them in the data cache. When the cache is empty the unit sends queries immediately to the profile database .

The user i.e. a recruiter works at the workstation and fills in a search query by means of the workstation user interface which should contain one or several parameters such as 

l. contacts email address phone number skype and other means of communication Internet resources containing candidate s other profiles accounts 

m. whether the candidate belongs to the first second circle of acquaintances of the user of the system the recruiter .

Any search parameter can be marked as essential desirable undesired. Search parameters can be changed or modified after the search results are displayed on the workstation monitor. After the search query has been filled via the workstation user interface it is passed on to the profile database access unit and to the full text search unit . In case there is no data stored in the cache the profile database access unit takes the query and processes the query immediately in the profile database . Note that the workstation can be implemented on a cloud .

Then the cached profiles undergo a syntactic and if necessary content analysis in step . In an exemplary embodiment the profiles that cannot be analyzed are deleted from cache and omitted. As another option empty profiles from a specific resource may be marked as checked in order to avoid their repeated analysis. Subsequently the checked profiles are ignored by the Robot.

Cached and analyzed profiles are processed individually in step at which point the cached profiles are compared with real profiles included in the database. In case the cached profile matches multiple real profiles at once the profile is marked as reference and linked to several candidates which will be shown in further queries step . The situation when the cached profile matches multiple real profiles may occur if the profile author borrowed information from other job seekers or used vague information.

In case the cached profile is an exact match of a real profile it is marked as such in step and then the user of the system should confirm the match in step . If confirmed the cached profile data is entered into the main database in step and deleted from the cache in order to purge it. Otherwise the process moves to step to step .

If the analysis has found content in the cached profile but it does not correspond to any profile in the database or search parameters a new profile based on the cached profile data is created and entered into the database in step . After the cached profile has been fully processed the system can restart the sequence in step .

In case there are unverified profiles in the database a part of the report regarding them is prepared in step specifically marking the found profiles as unverified. If the database contains no unverified profiles the system runs one more check to find out if there is at least one item in the resulting report in step . If the report is empty the system prepares a request to conduct a search on external network resources in step . If external network resources contain profiles accounts in step the system prepares a part of the report regarding them in step specifically marking them as unverified. The process is finished in step .

The system conducts search using the specified parameters and then displays results to the user who is able to modify the query e.g. change the list of enterprises a job candidate could have worked at or accept the variant s of query modification proposed by the system. As an option the system can propose to modify the list of skills which is used to search for candidates.

When displaying search results the system first shows a condensed version of the candidate s profile containing only the parameters corresponding to those entered in a search query e.g. C MS SQL . The information provided in the condensed version should be enough for a recruiter to decide promptly whether to examine the given candidate more thoroughly or to skip them over and go to the next one. In particular the candidate s condensed profile may contain the following parameters 

When looking for a specific candidate with their name passed as a search parameter if the search query yields no results from the profile database the system can redirect the query immediately to the Internet data collecting unit. The unit sends the query to external network resources to find profiles accounts of the person.

If there are some the Internet data collecting unit transfers the documents to the data analysis unit which extracts organized information about the candidate and then transfers it to the profile matching unit which in turn may address the Internet data collecting unit with a request to find associated candidate data on other network resources to match network profiles accounts found and create a distributed profile of the candidate.

There are three types of high level tasks which the system performs 1 indexing the information on the Internet 2 building a distributed profile and 3 ranking search results based on different criteria.

Indexing the information might seem like a simple task but if it requires a high performance then it becomes a complex computational task.

Much of the difficulty in implementing algorithms and components lies in 2 building distributed profile based on incomplete information and 3 ranking search result assessing candidates prior to an interview.

With reference to an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer or a server or the like including a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit .

The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. The system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help transfer information between elements within the computer such as during start up is stored in ROM .

The computer may further include a hard disk drive for reading from and writing to a hard disk not shown a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM DVD ROM or other optical media.

The hard disk drive magnetic disk drive and optical disk drive are connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media provide non volatile storage of computer readable instructions data structures program modules and other data for the computer .

Although the exemplary environment described herein employs a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that other types of computer readable media that can store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks Bernoulli cartridges random access memories RAMs read only memories ROMs and the like may also be used in the exemplary operating environment.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system . The computer includes a file system associated with or included within the operating system one or more application programs other program modules and program data . A user may enter commands and information into the computer through input devices such as a keyboard and pointing device . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like.

These and other input devices are often connected to the processing unit through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port or universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor personal computers typically include other peripheral output devices not shown such as speakers and printers.

The computer may operate in a networked environment using logical connections to one or more remote computers . The remote computer or computers may be another computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated. The logical connections include a local area network LAN and a wide area network WAN . Such networking environments are commonplace in offices enterprise wide computer networks Intranets and the Internet.

When used in a LAN networking environment the computer is connected to the local network through a network interface or adapter . When used in a WAN networking environment the computer typically includes a modem or other means for establishing communications over the wide area network such as the Internet.

The modem which may be internal or external is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computer or portions thereof may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

Having thus described a preferred embodiment it should be apparent to those skilled in the art that certain advantages of the described method have been achieved.

It should also be appreciated that various modifications adaptations and alternative embodiments thereof may be made within the scope and spirit of the present invention. The invention is further defined by the following claims.

