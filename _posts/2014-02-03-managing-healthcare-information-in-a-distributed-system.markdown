---

title: Managing healthcare information in a distributed system
abstract: A system and method for managing healthcare information is disclosed. The data servers each include a data manager that comprises a controller, a grid engine, applications, an application manager and a user interface engine. The controller manages the core functions and the transmission of data between data manager components. The grid engine manages information sent between data servers. The applications are applications that are created by the user or downloaded as third-party applications. The application manager manages the creation and communication between applications. The user interface engine generates user interfaces for displaying the applications and collecting clinical trial data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08990834&OS=08990834&RS=08990834
owner: Medicity, Inc.
number: 08990834
owner_city: Salt Lake City
owner_country: US
publication_date: 20140203
---
This application is a continuation of and claims priority to U.S. application Ser. No. 13 280 287 filed Oct. 24 2011 titled Managing Healthcare Information in a Distributed System which claims priority under 35 USC 119 e to U.S. provisional patent Application Ser. No. 61 406 003 filed Oct. 22 2010 titled System and Method for Managing Healthcare Information each of which are incorporated by reference in its entirety.

The invention relates to managing healthcare information. In particular the invention relates to a distributed system for managing healthcare information across different platforms.

The exchange of electronic healthcare information over networks is increasing. The electronic healthcare information is exchanged between medical offices and other physicians local hospitals and clinics location and national labs and imaging centers insurance payers local pharmacies public health and government agencies and patients. This type of collaboration requires the practice to engage in numerous healthcare transactions with many different people and organizations. These transactions include ordering and scheduling tests and obtaining results referring and consulting on patients with other providers obtaining authorization and filing claims with insurance payers and prescribing and refilling medications. Physicians and their staff are frequently on the phone at the fax machine and on the Internet performing collaborative exchanges. Some of the cost associated with these exchanges would be reduced if more of the communications were performed electronically.

Previous attempts to overcome these problems suffer from deficiencies. For example some physicians have created electronic medical records EMRs however the physicians typically maintain an internal system and if they do exchange information it is only with hospitals payers labs and pharmacies. Thus the physicians are missing an opportunity for a larger exchange of information.

Health information exchanges HIEs are appearing in many communities however they lack widespread acceptance and their focus is on creating comprehensive patient centric records and not on enhancing clinical workflow for physician practices.

Other solutions suffer from deficiencies that prevent them from being adopted by physicians. For example most software is insufficient or too immature to meet the broad range of collaborative needs of a physician practice. In addition the costs of adopting the technology both for the licensing and the expense of re engineering the practice are often considered too great. Lastly the existing systems fail to match the established workflow that the physicians and staff are accustomed to performing. As a result the existing system must be restructured which requires manual intervention by the staff to complete the process.

The technology described in the invention overcomes the deficiencies and limitations of the prior art at least in part by providing a system and method for managing healthcare information. The data manager allows users to control the application as they see fit by configuring the settings and downloading different applications to include as part of the data manager. The data manager is securely connected to other collaborative partners in the community and works with local and remote computer systems. In addition because there are multiple data managers in the system that store different pieces of information there is no risk of a system wide failure.

In one embodiment a rendezvous engine acts as an intermediate between data servers. The data servers each include a data manager that comprises a controller a grid engine applications an application manager and a user interface engine. The controller manages the core functions and the transmission of data between data manager components. The grid engine manages information sent between data servers. The applications are applications that are created by the user or downloaded as third party applications. The application manager manages the creation and communication between applications. In one embodiment the application manager includes an application module for creating applications a certification module for certifying applications a collaboration module for generating a list of data servers that communicate with the data server that includes the collaboration module a contextual module for managing the interactions between the applications and a bridge module for managing the exchange of information between applications. The user interface engine generates user interfaces for displaying the applications and collecting clinical trial data.

A system and method for managing healthcare information are described below. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the technology described in the various example embodiments can be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to avoid obscuring the invention.

Reference in the invention to one embodiment an embodiment or an example embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the description. The appearances of the phrase in one embodiment in various places in the invention are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions that follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present embodiment of the invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards flash memories including USB keys with non volatile memory or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

The illustrated description of a system for managing healthcare information includes data servers . . . that are accessed by users . . . practice management software PMS an electronic medical records EMR application an application server and a rendezvous server . In the illustrated embodiment these entities are communicatively coupled via a network . The data servers . . . in are used by way of example. While illustrates three data servers . . . the description applies to any system architecture having one or more data servers. Data server is coupled to the network via signal line . A user accesses the data server via signal line . In one embodiment the data server is a master data server that manages the organization of some information for the other data servers . Data server is coupled to the network via signal line . A user accesses the data server via signal line .

In one embodiment the data server is a hardware server such as one powered by Medicity . The data server comprises a data manager and a storage device . The data manager manages healthcare information that is stored in the storage device and controls how long the information persists in the storage device . The data server is coupled to a local area network LAN via signal line .

In one embodiment the data server communicates over the LAN to access the EMR application via signal line and to access the PMS via signal line . The EMR application is software for managing electronic medical records that are kept by an enterprise such as a physician s office. The PMS is software for managing the day to day operations of a medical practice such as tracking patients scheduling appointments and managing billing including entering charges for services coding the services and submitting claims out to insurance companies. Although only the EMR application and PMS are depicted in this illustration as being connected to the LAN the data server could communicate over the LAN to access other systems and devices. The data server is described in greater detail below with reference to .

The system illustrates a distributed computing model where each data server runs a data manager . Each data manager exchanges information with other data managers . A community of data managers forms a grid which is a transmission network that supports the transportation of information. The data manager exchanges information with other data managers in a secure manner by limiting access to information to specific members of the system . Specifically a user of the data manager determines which other participants on the grid the user wants to participate with which eliminates the risk that others outside of the closed community will access the information.

The rendezvous server manages the asynchronous communication of information between data servers . . . . The rendezvous server accesses the network via signal line . Although only one rendezvous server is illustrated persons of ordinary skill in the art will recognize that multiple rendezvous servers are possible. The rendezvous server is described in greater detail with reference to .

The application server manages uploading purchasing and downloading of applications by a user of the data manager . The applications are downloaded by other data managers and incorporated into the data manager . The applications are described in greater detail below with reference to . In one embodiment the application server is stored on a master data server . The application server is coupled to the network via signal line .

In one embodiment the application server processes purchases by communicating with the rendezvous server to retrieve the user s identity billing the user for the purchase generating receipts and performing other functions known to those of ordinary skill in the art for completing a purchase. In one embodiment the application server distributes a percentage of the purchase price to the user that developed the application and keeps the rest of the purchase price as a service charge for maintaining an application store.

The network is a conventional type wired or wireless and may have any number of configurations such as a star configuration token ring configuration or other configurations known to those skilled in the art. Furthermore the network may comprise a local area network LAN a wide area network WAN e.g. the Internet and or any other interconnected data path across which multiple devices may communicate. In yet another embodiment the network may be a peer to peer network. The network may also be coupled to or includes portions of a telecommunications network for sending data in a variety of different communication protocols. In yet another embodiment the network includes Bluetooth communication networks or a cellular communications network for sending and receiving data such as via short messaging service SMS multimedia messaging service MMS hypertext transfer protocol HTTP direct data connection WAP email etc.

Referring now to the rendezvous server comprises a rendezvous engine a memory a processor a communication unit and a storage device for storing payload queues that are each coupled to the bus . The bus may represent one or more buses including an industry standard architecture ISA bus a peripheral component interconnect PCI bus a universal serial bus USB or some other bus known in the art to provide similar functionality. In one embodiment the rendezvous engine comprises a grid status manager a registration engine a sorter and a user interface engine . The rendezvous engine is also discussed in U.S. Pat. No. 7 653 634 entitled System for the Processing of Information between Remotely Located Healthcare Entities filed Oct. 30 2007 and U.S. Pat. No. 7 953 699 entitled System for the Processing of Information between Remotely Located Healthcare Entities filed Dec. 4 2009 each of which is herein incorporated by reference.

The processor comprises an arithmetic logic unit a microprocessor a general purpose controller or some other processor array to perform computations and provide electronic display signals to a display device. The processor is coupled to the bus for communication with the other components via signal line . Processor processes data signals and may comprise various computing architectures including a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture or an architecture implementing a combination of instruction sets. Although only a single processor is shown in multiple processors may be included. The processing capability may be limited to supporting the display of images and the capture and transmission of images. The processing capability might be enough to perform more complex tasks including various types of feature extraction and sampling. It will be obvious to one skilled in the art that other processors operating systems sensors displays and physical configurations are possible.

The memory stores instructions and or data that may be executed by processor . The memory is coupled to the bus for communication with the other components via signal line . The instructions and or data may comprise code for performing any and or all of the techniques described herein. The memory may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other memory device known in the art. In one embodiment the memory also includes a non volatile memory or similar permanent storage device and media such as a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device known in the art for storing information on a more permanent basis.

The communication unit transmits and receives data to and from the data servers and the application server . The communication unit is coupled to the bus via signal line . In one embodiment the communication unit includes a port for direct physical connection to the data servers the application server or to another communication channel. For example the communication unit includes a USB SD CAT 5 or similar port for wired communication with the user device . In another embodiment the communication unit includes a wireless transceiver for exchanging data with the data servers the application server or any other communication channel using one or more wireless communication methods such as IEEE 802.11 IEEE 802.16 BLUETOOTH or another suitable wireless communication method.

In yet another embodiment the communication unit includes a cellular communications transceiver for sending and receiving data over a cellular communications network such as via short messaging service SMS multimedia messaging service MMS hypertext transfer protocol HTTP direct data connection WAP e mail or another suitable type of electronic communication. In still another embodiment the communication unit includes a wired port and a wireless transceiver. The communication unit also provides other conventional connections to the network for distribution of files and or media objects using standard network protocols such as TCP IP HTTP HTTPS and SMTP as will be understood to those skilled in the art.

The grid status manager is software including routines for managing activity information received from the data managers . In one embodiment the grid status manager is a set of instructions executable by the processor to provide the functionality below for hosting a message queue for each data manager and receiving and verifying data manager session requests. In another embodiment the grid status manager is stored in the memory and is accessible and executable by the processor . In either embodiment the grid status manager is adapted for cooperation and communication with the processor and other components of the data manager via signal line .

The registration engine is software and routines for registering users for access to the data manager . In one embodiment the registration engine is a set of instructions executable by the processor to provide the functionality below for registering users. The registration engine receives a username and password generates a unique identifier that is associated with the data manager and receives user preferences for the user interface generated by the data manager such as preferred screen font size colors and how the applications are organized. In another embodiment the registration engine is stored in the memory and is accessible and executable by the processor . In either embodiment the registration engine is adapted for cooperation and communication with the processor and other components of the rendezvous engine via signal line . In one embodiment the registration engine communicates with a master data manager to coordinate registration. In another embodiment the registration engine is a component of the master data manager

The sorter is software and routines for handling payloads from data managers . In one embodiment the sorter is a set of instructions executable by the processor to put incoming payloads into the payload queue identify the destination for each payload place the new payloads from the payload queue in the outbox for the destination data managers via the communication unit and deletes payloads from the payload queue after receipt of a discard request.

Referring now to the data server comprises a data manager a memory a processor a communication unit and a storage device that are each connected to the bus . Those skilled in the art will recognize that some of the components of the data server have the same or similar functionality to the components of the rendezvous server so descriptions of these components will not be repeated here. For example the processor memory bus and communication unit are similar to the processor memory bus and communication unit respectively.

In one embodiment the data manager comprises a controller a grid engine applications an application manager a Virtual Care Team VCT module a scrubber module and a user interface engine .

The controller is software including routines for managing the core functions of the data manager and for transmitting data to the different components. In one embodiment the controller is a set of instructions executable by the processor to provide the functionality below for managing data. In another embodiment the controller is stored in the memory and is accessible and executable by the processor . In either embodiment the controller is adapted for cooperation and communication with the processor and other components of the data manager via signal line .

In one embodiment the controller performs core functions by listening for data by listening to ports scanning folders etc. inserting data into locations such as a TCP port folders etc. parsing by converting incoming data into objects such as Java objects analyzing by examining objects to determine actions saving data by creating a new topic or adding to a topic that is saved in the data storage formatting by rendering data into the required format such as by mapping translating and grouping sending packages of information for distribution and notifying by for example sending an email or a Web alert in response to an event occurring.

The grid engine is software including routines for managing healthcare information on the data server . In one embodiment the grid engine is a set of instructions executable by the processor to provide the functionality below for storing objects in the storage device generating and encrypting payloads generating a queue for outbound payloads uploading payloads to the rendezvous engine downloading payloads from the rendezvous engine generating a queue for inbound payloads decrypting and processing received payloads executing commands from a master data manager and performing maintenance activities. In another embodiment the grid engine is stored in the memory and is accessible and executable by the processor . In either embodiment the grid engine is adapted for cooperation and communication with the processor and other components of the data manager via signal line .

In one embodiment the storage device includes a node warehouse and a topic warehouse. The node warehouse stores identifiers for the other data managers i.e. other nodes in the system and information for authenticating data requests from the nodes such as public key infrastructure PKI information. The storage device is coupled to the bus via signal line .

The topic warehouse stores topic objects that include topic attributes and capsules. In one embodiment the topic attributes include an identifier e.g. a universally unique identifier UUID that is associated with open source software a list of participants a creation date a last modified date a description and a type. Capsules are serialized objects that are stored as name value pairs. In one embodiment a capsule includes an identifier e.g. HL7 original HL7 doctor patient audit a description and information particular to the type of information in the capsule such as information about a test a department a doctor a topic status a node ID patient information and audit information. Capsules support many data formats including Health Level Seven HL7 eXtensible Markup Language XML Portable Document Format PDF Tagged Image File Format TIFF WAVeform audio file WAV Digital Imaging and Communications in Medicine DICOM and Moving Picture Experts Group MPEG . Persons of ordinary skill in the art will recognize that other data formats are possible. The grid engine transmits the topics to any other data manager in the system . When a data manager makes a change to a copy of the topic the grid engine transmits the copy to the other data managers to update their copy of the topic.

Turning now to a more detailed embodiment of the grid engine is illustrated. The grid engine comprises a payload generator an inbox an outbox an uploader and a downloader . The payload generator performs authentication functions and generates payloads. In one embodiment the payload generator generates public private key pairs stores the private key in the data storage and transmits the public key to the other data managers that have access to the payloads.

The payload generator generates a payload that includes the topic object. In one embodiment the payload includes a class handler a payload type topic participants a payload topic a payload identifier an original agent identifier capsules and topics. The class handler is used to activate the grid engine of the data manager that receives the payload. The payload type is a topic or capsule. The topic participants is a list of data managers that have access to the topic. The payload capsule is a list of the identifier for the capsules contained in the payload. The payload identifier is a unique identifier for identifying the payload such as a UUID. The origin agent identifier is the unique identifier of the data manager that created the original payload.

Once the payload generator creates the payload the payload generator generates a payload header that includes the identifier for the recipient data manager and encrypts the payload with a public key of the recipient data manager . In one embodiment the payload generator encrypts the payload by encypting the topic attributes and the capsules with a 2048 bit Advanced Encryption Standard AES symmetric key incorporates a digital signature of the data manager that creates the payload with a Hash based Message Authentication Code HMAC and the payload is encrypted using a HyperText Transfer Protocol Secure HTTPS .

The outbox maintains an outbox queue. In one embodiment the outbox stores the payload created by the payload generator in an outbox queue periodically contacts the rendezvous engine establishes a secure sockets layer SSL uploads the content of the message outbox queue and sends discard requests to the rendezvous engine via the communication unit . The rendezvous engine places the payload in the outbox for the destination data manager . The designation data manager downloads the payload decrypts the AES key with its private key and uses the AES key to decrypt the payload.

The inbox maintains a message inbox queue by downloading any new messages from the rendezvous engine via the communication unit and puts the new messages in the message inbox queue.

The applications are software including routines for performing tasks. In one embodiment the applications are a set of instructions executable by the processor for performing tasks. In another embodiment the applications are stored in memory of the data server and are accessible and executable by the processor . In either embodiment the applications are adapted for cooperation and communication with the processor the storage device the controller the application manager the user interface engine and other components of the data server via the signal line .

The applications include any type of applications such as an enterprise application an accounting application a word processing application a media application etc. The applications are for performing tasks such as retrieving health care data of a patient processing payments received from an insurance provider authorizing payments ordering labs dictation software maintaining a healthcare registry e.g. bone marrow receiving health check up results of a patient from a lab sending prescriptions to a drugstore etc. In one embodiment the applications are developed by a user . In another embodiment the applications are third party applications that are downloaded from an application server and installed on the data server . The application server for example includes an application store that allows users to search browse purchase and download third party applications.

The application manager is software including routines for developing and managing the applications . In one embodiment the application manager is a set of instructions executable by the processor to provide the functionality described below for developing and managing the applications . In another embodiment the application manager is stored in memory of the data server and is accessible and executable by the processor . In either embodiment the application manager is adapted for cooperation and communication with the processor the storage device the controller the applications the user interface engine and other components of the data server via the signal line . The application manager is described in further detail with reference to .

The application module is software including routines for allowing users to develop and install applications on the data server . The application module receives a request submitted by the user to develop a new application install a third party application etc. from the controller . In one embodiment the application module includes a software development kit SDK comprising a set of development tools that allow users to develop applications . In another embodiment the application module allows users to download and install third party applications from an application server . In both embodiments the application module allows the users to define preferences and rules for the applications . The application module stores the rules and preferences in the storage device . In yet another embodiment the application module includes tools to develop application programming interfaces APIs to allow the data manager to interact with third party applications stored in the application server or any other data servers . In one embodiment the application module uses Java adapters to provide software developers with the tools for accessing different information platforms such as the data servers and local state and national registries. The application module transmits the newly created application to the application server via the communication unit to make it available to other users.

Examples of tools for accessing platforms include a journal API for creating updating and accessing data in personal journals a messaging API for accessing the secure messaging infrastructure to exchange information with other platforms a physician directory API for accessing a global directory of physicians and other provides that are on the grid a print service for accessing local printers an International Classification of Disease ICD lookup for accessing ICD 9 diagnosis tables a Current Procedural Terminology CPT lookup for accessing CPT procedural tables a Practice Management PM bridge for accessing data from the MPS bridge for demographic insurance and scheduling queries an Electronic Medical Records driver for accessing clinical data and other data queries and enabling the insertion of results reports referrals and other information a vocabulary mapping service for translating local terms to standardized terms e.g. Systemized Nomenclature of MEDicine SNOMED a formatting service for standardizing forms a community search for searching a Health Information Exchange HIE for patient information and a payer gateway for exchanging information with payers that make their services available in an electronic exchange.

The journal API is used to create a patient record. In one embodiment the journal API includes demographic information including name date of birth and address for a patient scheduling information including appointment type date and time clinical problems that are both current and historical for the patient procedures or treatments for the patient family history social history that includes lifestyle occupation environmental health risks and patient demographics such as marital status ethnicity and religion advanced directives including wills healthcare proxies and resuscitation wishes including both patient instructions and references to external documents alerts such as allergies and adverse reactions medications including current medications and relevant historical medication usage immunizations including immunization status and historical information about past immunizations medical equipment and any implanted or external devices vital signs including trends over time and baselines functional status including information about what is normal for the patient deviations from normalcy both positive and negative and extensive examples results including lab and procedure results and reports encounters including past healthcare encounters including activity and location and a plan of care including active incomplete or pending activities for the patient including orders appointments procedures referrals and services.

The certification module is software including routines for certifying the applications developed by the users . In one embodiment the certification module receives a message from the application module that a new application has been developed by a user . The certification module determines whether the new application is compatible with the applications that are installed on the data server . For example the certification module determines whether the new application includes APIs to interact with the applications . In another embodiment the certification module certifies that the new application can be uploaded to an application server . The certification module instructs the user interface engine to generate a user interface that displays a message. In one embodiment the message indicates that the new application is certified to be installed on the data server uploaded to the application server etc. In another embodiment the message indicates that the new application is not certified and includes a list of issues that need to be resolved for the new application to be certified.

The collaboration module is software including routines for generating a list of data servers that communicate with the data server . In one embodiment the list includes the applications installed in each of the data servers . The collaboration module generates the list in response to receiving a request submitted by a user to develop a new application. The user for example uses the list to develop APIs for the new application.

The contextual module is software including routines for managing the interactions between the applications . The contextual module receives a message from an application when the application performs a task. The contextual module analyzes the task for example analyzes a request submitted by the user the retrieved health care data of a patient etc. The contextual module determines if the analysis matches one or more rules or preferences that are defined for any other application installed on the data server . In response to determining a match with a rule or a preference of an application the contextual module transmits a notification to the application. The contextual module is described in further detail with reference to .

The bridge module is software including routines for managing the exchange of data between the applications and the computing systems for example PMS the EMR application diagnostic devices not shown etc. that are locally connected to a data server . The bridge module communicates data such as queries instructions messages health care data of a patient etc. between the applications and the local computing systems. The bridge module converts the data into a format that is compatible with the requirements of the destination. For example an application generates a query for retrieving a list of patients with leukemia from the EMR application . The bridge module converts the query into a HL7 standard and submits the query to the EMR . The bridge module receives the list of patients from the EMR converts the list into a PDF as requested by the application and transmits it to the application . The bridge module converts the data to HL7 standards Continuity of Care Document CCD Continuity of Care Record CCR Structured Query Language SQL PDF or any other format or standard known to a person of ordinary skill in the art.

The Virtual Care Team VCT module is software including routines for creating VCT records that are related to a specific patient and for collaborating with other data servers . In one embodiment the VCT module is a set of instructions executable by the processor to provide the functionality described below for creating VCT records and collaborating with other data servers . In another embodiment the VCT module is stored in memory of the data server and is accessible and executable by the processor . In either embodiment the VCT module is adapted for cooperation and communication with the processor the storage device the controller the user interface engine and other components of the data server via signal line .

A VCT record comprises health care data associated with a patient or a group of patients for example a family colleagues etc. . The health care data includes a patient identity ID demographic information information related to a care team of the patient insurance information prescriptions results allergies medical history referrals rules preferences etc. A care team of a patient is a group of data servers for example a primary physician a cardiologist an insurance provider etc. that are associated with the health care of the patient. The VCT module is described in further detail with reference to .

The creation module is software including routines for creating VCT records. The creation module receives a request submitted by a user for creating a VCT record for example a request submitted by a hospital administrator to create a VCT record for a new patient from the controller . The creation module generates a VCT record based on the information for example a registration form filled out by the patient etc. included in the request. In one embodiment where the information included in the request in insufficient the creation module retrieves additional information about the patient from local databases such as the PMS the EMR application etc. In another embodiment the creation module instructs the user interface engine to generate a user interface requesting additional information from the user . The creation module stores the VCT records in the storage device . The creation module generates a VCT record that is helpful for both transmitting information to other data servers and for transmitting a complete record to an application outside of the system .

The referral module is software including routines for transmitting and receiving referrals for a patient to and from other data servers . The referral module identifies one or more data servers for a patient from a directory of data servers in the storage device . In one embodiment the referral module identifies a data server responsive to receiving a request submitted by a user from the controller . The request for example is submitted by a primary care physician to identify a cardiologist for the patient. In another embodiment the referral module automatically identifies a data server based on a patient s VCT record. For example the referral module determines that a patient does not have insurance coverage from the patient s VCT record. The referral module then identifies an insurance provider for the patient. In yet another embodiment the referral module identifies a data server for a patient responsive to receiving an instruction from an application . The referral module identifies the data servers for a patient corresponding to the information in the patient s VCT record. For example the referral module identifies a clinic located within five miles of the patient s house a neurologist covered by the patient s insurance provider etc.

The referral module instructs the controller to transmit a referral to the data server . The instruction includes a copy of the patient s VCT record and information such as an identification of the data server methods to communicate with the data server etc. The referral module updates the VCT record of the patient by adding the data server to the care team of the patient. In one embodiment the referral module updates the VCT record of the patient in response to receiving an acknowledgment from the data server

The referral module also receives referrals transmitted by other data servers from the controller . The referral module retrieves the copy of the patient s VCT record from the referral and assigns a patient ID that is local to the data server . The referral module then creates a link between the local patient ID and the patient ID present in the VCT record. The referral module updates the copy of the patient s VCT record with the link and stores it in the storage device . The referral module also instructs the controller to transmit the link to the data servers from which the referral was received. The referral module is described in further detail with reference to .

The data receiver is software including routines for receiving new health care data associated with a patient from the controller . In one embodiment the data receiver receives new health care data submitted by a user . For example the data receiver receives the blood pressure level of a patient submitted by a nurse. In another embodiment the data receiver receives health care data from a computing system that is locally connected to the data server . For example the data receiver receives scan images of a patient s shoulder from an MRI scanner that is connected to the data server . In yet another embodiment the data receiver receives new health care data transmitted by other care team members of the patient for example prescriptions updated insurance coverage plan etc. In this embodiment the data receiver determines whether the new health care data is required by the data server based on rules and preferences stored in the storage . For example a cardiologist requires blood test results of a patient but not a physical therapist. In one embodiment the data receiver instructs the user interface engine to generate a user interface that displays the new health care data. In this embodiment a user for example a physician a nurse etc. selects the new health care data required for the data server . The data receiver retrieves the VCT record of the patient and updates it with the new health care data.

In one embodiment the data receiver performs reconciliation of new data that includes conflicting information. For example the new information is demographic information that does not match any patient data in the storage device . The data receiver determines different patients that might match the demographic information for example the data receiver identifies patients that match the demographic information if the numbers in the data of birth are transposed or the name Jon is replaced with John. The data receiver saves the rule for correcting the conflicting information in the storage device . In one embodiment the data receiver transmits the corrected data to the care team member that submitted the conflicting information via the communication unit for confirmation. If the same conflicting information is received in the future the data receiver corrects the information using the same rule.

The data transmitter is software including routines for transmitting health care data associated with a patient to the patient s care team members via the communication unit . The data transmitter receives new health care data associated with a patient from the data receiver . The data transmitter identifies the patient s care team members from the VCT record. The data transmitter then instructs the communication unit to transmit the new health care data to the patient s care team members. In one embodiment prior to instructing the communication unit the data transmitter formats the new health care data based on the preferences of each of the care team members. In another embodiment the data transmitter determines whether the new health care data can be transmitted to the care team members based on the rules for example care team member preferences patient s privacy rules HIPAA compliance etc. present in the patient s VCT record.

The advertisement module is software including routines for advertising a data server . The advertising module generates advertisements that include a unique identifier associated with the data server such as a UUID and instructs the controller to transmit them to other data servers . The advertisement includes the information about the data server such as health care services provided by the data server a list of physicians a list of insurance plans that cover the services provided by the data server location etc. The advertisements are advantageous as for example the other data servers transmit referrals to the data server based on these advertisements.

The scrubber module is software including routines for identifying individuals for a study such as a clinical trial and for scrubbing patient data of identifying information. In one embodiment the scrubber module is a set of instructions executable by the processor to provide the functionality described below for scrubbing identifying information in response to a request from an application . In another embodiment the scrubber module is stored in memory of the data server and is accessible and executable by the processor . In either embodiment the scrubber module is adapted for cooperation and communication with the processor the storage device the controller the applications the user interface engine and other components of the data server via the signal line . The scrubber module is described in further detail with reference to .

Referring now to one embodiment of the scrubber module is shown in more detail. is a block diagram of the scrubber module that includes an advertisement listing engine a participant identifying engine a data scrubbing engine a pseudo identifier generator engine and an advertisement response engine that are each coupled to signal line .

The advertisement listing engine registers an advertisement for recruiting potential participants for a study. The advertisement listing engine receives a request for potential participants for a study from an organization. The organization is any group that uses medical information such as a government health organization e.g. the CDC an insurance company and a clinical research organization e.g. a hospital .

The request includes an identifier such as a name for the study and patient factors for identifying potential participants for the study. For example a clinical research organization uses the scrubber module to identify a number of individuals that are available for a study to test a medication for a health condition where the patients are in a particular age group and have responded adversely to a different medication. The clinical research organization places an advertisement that includes input data for identifying the participants. The input data relates to a diagnosis medication lab results gender age location previous medical history such as previous illnesses a history of illnesses and other factors that are relevant to the study. In one embodiment the advertisement listing engine transmits the request to the participant identifying engine for an immediate identification of potential participants for the study. In another embodiment the participant identifying engine stores the request in the storage device for identification of potential participants for the study at a later time

The participant identifying engine identifies potential participants for a study based on the advertisement from an organization that is received from the advertisement listing engine . The participant identifying engine identifies individuals based on matching the input data with patient data and medical records. In one embodiment information for the identified individuals is transmitted to the data scrubbing engine . In another embodiment the number of identified individuals that match is transmitted to the advertisement response engine .

The data scrubbing engine modifies patient data to scrub it of identifying aspects. In one embodiment the data scrubbing engine receives a request from an application to scrub patient data. For example the patient data includes data related to an admission of a patient or a lab event. In another embodiment the data scrubbing engine receives the individuals that match the advertisement from the participant identifying engine . The data scrubbing engine receives patient data from a master patient index that is part of the data storage or stored in another location such as part of the EMR application . In one embodiment the data scrubbing engine modifies identifying information by removing demographic data. Identifiable demographic data includes name address birth date ethnicity government issued numbers such as a social security number and operational patient numbers such as a patient identifier. In another embodiment the data scrubbing engine modifies patient data by replacing the identifiable demographic data. For example the data scrubbing engine replaces the birth date with the age of the individual or transposes the digits for the birth date.

The data scrubbing engine requests a pseudo identifier from the pseudo identifier generator engine . The pseudo identifier generator engine generates a pseudo identifier for a patient. The data scrubbing engine receives the pseudo identifier from the pseudo identifier generator engine and associates the pseudo identifier with the patient by storing the pseudo identifier in the storage device .

In another embodiment the data scrubbing engine associates the pseudo identifier with the patient by storing the pseudo identifier with patient data in the master patient index. The data scrubbing engine transmits the pseudo identifier and other data to the application that requested the scrubbing or to the advertisement response engine . Therefore the pseudo identifier is used by an organization to retrieve medicals records of person without revealing the identity of the person. Also because the pseudo identifier is a static identifier that is consistently associated with the same patient the organization that requests the pseudo identifier tracks the same person over time. For example a clinical research company uses the scrubber module for a study for the same person over a period of 5 years.

The advertisement response engine responds to an advertisement for recruiting potential participants for a study. The advertisement response engine receives a number of patients that match the input data from the participant identifying engine or scrubbed information from the pseudo identifier generator . In one embodiment the advertisement response engine notifies a provider of care that the individuals are identified as potential participants for the study. In another embodiment the advertisement response engine sends basic statistics to the organization that requested the potential participants. For example the advertisement response engine informs the organization that a specific number of potential participants have been identified by the participant identifying engine .

The user interface engine is software including routines for generating a user interface in response to instructions received from the other data manager components. In one embodiment the user interface engine is a set of instructions executable by the processor to provide the functionality described below for generating a user interface for applications the VCT module or the scrubber module . In another embodiment the user interface engine is stored in memory of the data server and is accessible and executable by the processor . In either embodiment the scrubber module is adapted for cooperation and communication with the processor the storage device the applications the user interface engine and other components of the data server via the signal line . The user interface engine is described in further detail with reference to .

Turning now to user interface engine is a graphic representation of a user interface that is generated by the user interface engine for accessing at least one patient record. In this example the user interface displays a homepage of a medical office website for healthcare providers of that medical office. The homepage includes icons of underlying composite applications that are installed by a user to meet his or her unique needs. A user searches for a patient record by typing a first name of the patient a last name of the patient or any combination thereof in the search box and hitting the search button on the homepage . For example typing Angela in the search box retrieves a list of patients whose first name includes Angela. In addition the homepage includes a List All button that when selected displays the entire list of available patient records and a Create Record button that when selected displays a user interface for creating a record for a new patient.

Turning now to one embodiment of a user interface generated by the user interface engine for generating a request or advertisement for recruiting potential participants for a study is illustrated. The user interface displays a plurality of inputs for generating a request. The plurality of inputs includes an input for identifying or labeling the study. The user interface displays input area for capturing medical related criteria for creating input data that is used to identify patients for the study. In the example input area comprises diagnosis information allergy information medication information and lab result information. User interface displays a gender input for identifying one or all genders for the study. User interface displays an age input for identifying an age or age group for the study. A user submits the request or advertisement by pressing the submit button . Persons of ordinary skill in the art will recognize that other variables can also be displayed for generating the request such as a text box for specifying a location previous illnesses family history of illnesses etc. The advertisement listing engine receives the request and registers the request for identifying potential participants for the study.

The referral module of the data server then identifies a data server for example a physical therapist for the patient. The controller of the data server transmits a referral to the third data server . This referral comprises a copy of the patient s VCT record that includes the second patient ID and the first link. The referral module of the data server updates the VCT record to include the data server as a member of the care team of the patient. The referral module of the data server assigns a third patient ID for the referral. The referral module of the data server also generates a second link between the first patient ID the second patient ID and the third patient ID. The controller of the data server then transmits the second link to the data server . The referral module of the second data server updates the patient s VCT record to include the second link. The controller of the data server also transmits the second link to the data server . The referral module of the data server updates the patient s VCT record to include the second link and the data server as a member of the patient s care team.

The links are advantageous in scenarios for example when the data server receives health care information from the data server that is represented by the second patient ID. In this example the data server easily identifies and retrieves the VCT record of the patient based on the first link. Furthermore in this example although the data server was not referred by the data server the second link allows exchange of health care information associated with the patient between the data servers 

The foregoing description of the example embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the disclosure be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the invention may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the invention or its features may have different names divisions and or formats. Furthermore as will be apparent to one of ordinary skill in the relevant art the modules routines features attributes methodologies and other aspects of the disclosure can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the invention is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way known now or in the future to those of ordinary skill in the art of computer programming. Additionally the disclosure is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

