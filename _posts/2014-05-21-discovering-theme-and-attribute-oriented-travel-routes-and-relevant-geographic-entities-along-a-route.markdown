---

title: Discovering theme and attribute oriented travel routes and relevant geographic entities along a route
abstract: Methods, systems, and apparatus include computer programs encoded on a computer-readable storage medium, including a method for determining routes. Starting and destination points, and any user constraints, are identified for travel. Initial routes are determined between the starting and destination points. Each initial route is segmented into segments. Attribute oriented routes are determined using the segments. Entities associated with each segment are determined. Attributes are identified for each entity and are aggregated and ranked along all the determined initial routes, and emerging attributes are determined. Attribute oriented routes are determined based on the emerging attributes including: identifying a theme for an attribute oriented route, identifying a set of entities from the determined entities that are associated with the emerging attributes, and creating the attribute oriented route that passes through a region that includes the entities. At least one attribute oriented route and information related to the theme are provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09234765&OS=09234765&RS=09234765
owner: GOOGLE INC.
number: 09234765
owner_city: Mountain View
owner_country: US
publication_date: 20140521
---
This application claims priority to U.S. Provisional Application No. 61 831 390 filed on Jun. 5 2013. The disclosure of the prior application is considered part of and is incorporated by reference in the disclosure of this application.

An application such as a map application can provide a route between a starting point and a destination point that is designated by a user. Conventional map applications can provide the user with options regarding available routes such as options relating to tolls or types of roads i.e. freeways only and a user can be presented a route that satisfies designated options or other default constraints associated with the map applications.

In general one innovative aspect of the subject matter described in this specification can be implemented in methods that include a computer implemented method for determining routes. The method includes identifying a starting point and a destination point for travel by a user including any constraints of the user regarding the travel. The method further includes determining one or more initial routes between the starting point and the destination point. The method further includes for each initial route segmenting the route into a plurality of segments based on one or more criteria and determining attribute oriented routes using the segments. The method further includes determining one or more entities associated with each segment and identifying attributes for each determined entity. The method further includes aggregating and ranking the attributes along all the determined initial routes and determining one or more emerging attributes. Determining one or more attribute oriented routes based on the emerging attributes can include identifying a theme for an attribute oriented route based on one or more of the emerging attributes identifying a set of entities from the determined entities that are associated with the one or more emerging attributes and creating the attribute oriented route that passes through a region that includes the set of entities. The method further includes providing at least one attribute oriented route and information related to the theme to a device associated with the user.

These and other implementations can each optionally include one or more of the following features. Identifying can include receiving the starting point destination point and constraints and the constraints can include limitations that affect a choice of the attribute oriented route. Determining the one or more initial routes can further include determining a plurality of direct routes between the starting point and the destination point. The one or more criteria can include a distance criterion and segmenting can include segmenting the route into plural substantially equal segments. The one or more criteria can include a function and a segment can be a length equal to the function applied to a respective route. Segmenting the route can further include locating one or more intermediary points along the route in accordance with the criteria each intermediary point representing an end of one segment and a beginning of a new segment and determining one or more entities that are in proximity to each segment can further include for each intermediary point determining one or more entities in an area around a given intermediary point. Determining one or more entities in an area can include determining one or more entities in a radius around the intermediary point. Determining the entities in an area can include performing a geographical search around starting and end points for each segment. Aggregating and ranking the attributes along all the determined routes and determining one or more emerging attributes can further include accumulating the attributes evaluating the accumulated attributes to determine top attributes for entities along the determined routes and identifying the emerging attributes from the determined top attributes. Determining one or more attribute oriented routes can include scoring a region based on matching emerging attributes of the region as compared to one or more goals and determining routes within an area that maximize an aggregate rank based on the scoring under the constraints. The method can further include identifying regions along the determined routes based on the emerging attributes. The area can be a bounding area within which attribute oriented routes are selected. The one or more goals can define a set of optimization goals and the method can further include receiving the set of optimization goals from the user or deriving the set of optimization goals from a profile associated with the user. The method can further include optimizing routes in eliminating routes from the one or more attributed oriented routes based the constraints provided by the user. The constraints can include a total maximum travel time between the starting point and destination point. Determining one or more attribute oriented routes can further include searching the attribute oriented routes for one that passes through regions with highest aggregate scores for a set of selected attributes of the emerging attributes. A theme can be based on a set of emerging attributes.

In general another innovative aspect of the subject matter described in this specification can be implemented in computer program products that include a computer program product tangibly embodied in a computer readable storage device and comprising instructions. The instructions when executed by one or more processors cause the processor to identify a starting point and a destination point for travel by a user including any constraints of the user regarding the travel determine one or more initial routes between the starting point and the destination point for each initial route segment the route into a plurality of segments based on one or more criteria and determine attribute oriented routes using the segments including determine one or more entities associated with each segment identify attributes for each determined entity aggregate and rank the attributes along all the determined initial routes and determining one or more emerging attributes determine one or more attribute oriented routes based on the emerging attributes including identifying a theme for an attribute oriented route based on one or more of the emerging attributes identifying a set of entities from the determined entities that are associated with the one or more emerging attributes and creating the attribute oriented route that passes through a region that includes the set of entities and provide at least one attribute oriented route and information related to the theme to a device associated with the user.

These and other implementations can each optionally include one or more of the following features. Identifying can include receiving the starting point destination point and constraints and the constraints can include limitations that affect a choice of the attribute oriented route.

In general another innovative aspect of the subject matter described in this specification can be implemented in systems including a system comprising one or more processors and one or more memory elements including instructions. The instructions when executed cause the one or more processors to identify a starting point and a destination point for travel by a user including any constraints of the user regarding the travel determine one or more initial routes between the starting point and the destination point for each initial route segment the route into a plurality of segments based on one or more criteria and determine attribute oriented routes using the segments including determine one or more entities associated with each segment identify attributes for each determined entity aggregate and rank the attributes along all the determined initial routes and determining one or more emerging attributes determine one or more attribute oriented routes based on the emerging attributes including identifying a theme for an attribute oriented route based on one or more of the emerging attributes identifying a set of entities from the determined entities that are associated with the one or more emerging attributes and creating the attribute oriented route that passes through a region that includes the set of entities and provide at least one attribute oriented route and information related to the theme to a device associated with the user.

Particular implementations may realize none one or more of the following advantages. A user can be provided with a route that includes features associated with one or more themes that may be of interest to the user.

The details of one or more implementations of the subject matter described in this specification are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the subject matter will become apparent from the description the drawings and the claims.

Systems methods and computer program products are described for identifying travel routes e.g. related to the discovery and recommendation of relevant routes to users and interesting nearby places along routes. For example identification of routes can occur through the process of optimization inference and ranking of geographic entities and their attributes along a route. Systems methods and computer program products for identifying travel routes can equally apply to different modes of transportation along a route such as without limitation driving or walking. Selection and recommendation of routes can also be based on criteria through a process of optimization.

Conventional systems for example may deal with ways to optimize some cost of finding points of interest along a route or finding points of interest near the route or the inverse namely methods to generate routes given a list of points of interest. This disclosure deals with a different problem which is without any predetermined set of points of interest identifying routes that possess certain attributes or themes. Given a departure location and final destination for example routes can be discovered that are associated with certain themes such as routes going through wineries. Such themes or attributes can emerge from the geography and can also be optionally matched with a goal set of input attributes.

In some implementations identifying travel routes can enable discovery of interesting routes and enable reasoning ranking and understanding of entities along or within some distance from routes. Such entities can be drawn for example from a wide range of place types including but not limited to businesses events geographical regions such as populated places parks or neighborhoods etc.

In some implementations routes can be discovered and recommended based both on emergent attributes discovered through the process of inference for which routes may be interesting to users as well as based on users providing selection criteria and constraints.

In some implementations identifying travel routes can have applications in other areas such as any area that uses and or can be enhanced by discovering and recommending routes to users or other computer systems and applications such as in travel web search social networks and local search among others.

At a high level the TPS is an electronic computing device operable to receive transmit process store or manage data and information associated with the TPCS using a GUI providing a TPCS user hereinafter user with an efficient user friendly and secure presentation of data provided by or communicated within the TPCS . Specifically the TPS provides various integrated tools and associated functionality for example through a particular graphical user interface GUI used to compare among other things routes attribute oriented routes geographical features themes or the like by selecting defining editing and or confirming choices for components that make up a particular travel experience.

The TPS is responsible for receiving application requests for example route planning requests e.g. including requests for an attribute oriented route described below with reference to . For example requests can be received from one or more client applications associated with a particular client of the TPCS and responding to the received requests by processing the received vacation planning requests in a travel planning engine TPE rule engine and or user interface engine UIE and sending an appropriate response back to the requesting client application . In addition to requests from the client requests associated with a particular TPE rule engine and or UIE may also be sent from internal users external or third party users other automated applications not illustrated as well as any other appropriate entities individuals systems or computers associated with the TPS and or other components of the TPCS . In some implementations the TPS may also include or be communicably coupled with an e mail server a web server a caching server a streaming data server and or other suitable server.

At least a portion of the TPE rule engine and or UIE is executed using requests responses sent from to a client within and communicably coupled to the illustrated TPCS using network . In some implementations requests responses can be sent directly to TPS from a user accessing TPS directly. In some implementations the TPS may store a plurality of TPE rule engine and or UIE instances. In some implementations the TPS may comprise a web server where one or more of the components of TPS represent web based applications accessed and executed by the client using the network or directly at the TPS to perform the programmed tasks or operations of the various components of the TPS .

In some implementations any and or all of components of the TPS both hardware and or software may interface with each other and or an interface described below using an application programming interface API and or a service layer . The API may include specifications for routines data structures and object classes. The API may be either computer language independent or dependent and refer to a complete interface a single function or even a set of APIs. The service layer provides software services to the TPCS . The functionality of the TPS may be accessible for all service consumers using this service layer. Software services provide reusable defined business functionalities through a defined interface. For example the interface may be software written in JAVA C or other suitable language providing data in extensible markup language XML format or other suitable format.

While illustrated as an integrated component of the TPS in the TPCS alternative implementations may include the API and or service layer as a stand alone component in relation to other components of the TPCS . Moreover any or all parts of the API and or service layer may be implemented as a child or sub modules of another software module enterprise application or hardware module without departing from the scope of this disclosure.

The TPS includes an interface . Although illustrated as a single interface in two or more interfaces may be used according to particular needs desires or particular implementations of the TPCS . The interface is used by the TPS for communicating with other systems in a distributed environment including within the TPCS connected to the network for example the client as well as other systems not illustrated communicably coupled to the network . Generally the interface comprises logic encoded in software and or hardware in a suitable combination and operable to communicate with the network . More specifically the interface may comprise software supporting one or more communication protocols associated with communications such that the network or interface s hardware is operable to communicate physical signals within and outside of the TPCS .

The TPS includes a processor . Although illustrated as a single processor in two or more processors may be used according to particular needs desires or particular implementations of the TPCS . Generally the processor executes instructions and manipulates data to perform the operations of the TPS . Specifically the processor executes the functionality required to determine attribute oriented routes for travel.

The TPS also includes a memory that holds data for the TPS . Although illustrated as a single memory in two or more memories may be used according to particular needs desires or particular implementations of the TPCS . While memory is illustrated as an integral component of the TPS in alternative implementations memory can be external to the TPS and or the TPCS . In some implementations the memory holds manages the description and or data for all objects in the TPS includes one or more instances of transportation data entity data destination data and or user profile data .

The transportation data is data identifying available forms of transportation associated with various components of a trip. For example in some implementations the transportation data can be associated with air carriers trains boats ships subways taxi service bus service shuttle services and the like.

In some implementations the transportation data is accessed by the TPE and or the rule engine . For example the TPE and or the rule engine can access analyze and or process the transportation data and subsequently use the UIE to display appropriate results to a user using a particular client application e.g. an application that displays travel routes based at least in part on user inputs. In some implementations the transportation data can be accessed by a remote access system or software a local or remote client or other suitable TPCS component.

In some implementations the TPE can perform functions used for identifying attribute oriented routes. For example the TPE can identify initial routes that connect a user provided starting point to a user provided destination point. The TPE can segment each of the determined initial routes into segments having for example a predetermined length. The TPE can construct plural attribute oriented routes using the segments and identify one or more entities for each of the segments. The TPE can identify attributes such as Beach and winery as attributes in regions that include the determined segments and aggregate and rank the attributes that correspond to each of the initial routes. The TPE can produce or identify a set of attribute related routes from the segments and each attribute related route can be based on plural attributes e.g. wineries that are associated with entities e.g. specific wineries associated a given theme. The TPE can select at least one attribute oriented route for presentation to the user. The route s chosen for example can include the route having or being in proximity to the entities that have the most attributes that are perceived to be of interest to the user.

The entity data is data identifying entities associated with geographical regions. For example in some implementations the entity data can be associated with towns cities landmarks or other geographic features. Entity data can include local attractions and or any other suitable data with respect to a geographic region such as tourism information physical features events activities or other attributes associated with a specific entity.

In some implementations the entity data is accessed by the TPE and or the rule engine . For example the TPE and or the rule engine can access analyze and or process the entity data and subsequently use the UIE to display appropriate results to a user using a particular client application . In some implementations the entity data can be accessed by a remote access system or software a local or remote client or other suitable TPCS component. In some implementations the rule engine can be used e.g. by the TPE to access and use rules for identifying attribute oriented routes based on rules for selecting routes from segments that are associated with particular attributes e.g. because of their proximity to a given geographical feature or entity . The rules for example can identify maximum distances to add to a route in order to include a particular entity for consideration when determining an attribute oriented route. Other rules for generating attribute oriented routes are possible.

The destination data is a specific subset of the entity data identifying available destinations. For example in some implementations the destination data can be associated with geographic regions countries cities towns and the like. For example for a particular city the destination data may include and or indicate where to access name geographic coordinates population demographics weather data major highways available airports train stations bus stops location industry location attractions special events tax rates laws history and or any other suitable data with respect to a given city.

In some implementations the destination data is accessed by the TPE and or the rule engine . For example the TPE and or the rule engine can access analyze and or process the destination data and subsequently use the UIE to display appropriate results to a user using a particular client application . In some implementations the destination data can be accessed by a remote access system or software a local or remote client or other suitable TPCS component. For example after segmentation of initial routes a destination in proximity to a segment end can be identified. The destination data can be used to locate entities in proximity to the destination. Segmentation and entity location is discussed in greater detail below.

The user profile data is data associated with a particular user and or group of users. In some implementations the user profile data may include for example name address identification number such as a U.S. Social Security Number age birthdate place of birth nationality race religion sex marital status relationship status education level employer interests travel history prior TPCS system choices made data about friends and or acquaintances and other suitable user profile data. In one example the user profile data could be used by the TPE rule engine and or UIE to make proposals to a user about potential routes. If a user indicated in past TPCS transactions that they prefer beaches and mountain destinations the TPCS could provide current beach and mountain routes with a higher weighting in deciding which routes to present to a user. In some implementations the user profile data can also be used to filter and or recommend routes. For example a married female planning a vacation may be presented with romantic type routes. In some implementations user profile date can include preferences and or other inputs by the user e.g. input in the GUI that indicate specific user interests e.g. scenic drives French restaurants wine max distance to drive etc. . User preferences for example can be used as constraints when generating suggested routes.

In some implementations the user profile data can be among other things updated edited and or deleted by a suitable component of the TPCS such as the TPE and or client application . These operations can take place whether or not the user is accessing TPCS . For example the user can update their user profile data using the client application and or based on travel actions choices made by other users in a user s demographic group the user profile data can be updated to indicate a greater likelihood for the user to select certain travel. A particular user s choices made using client application can also result in the user profile data for the particular user being modified in some way.

In some implementations the user profile data is accessed by the TPE and or the rule engine . For example the TPE and or the rule engine can access analyze and or process the user profile data and subsequently use the UIE to display appropriate results to a user using a particular client application . In some implementations the user profile data can be accessed by a remote access system or software a local or remote client or other suitable TPCS component.

The travel planning engine TPE can be any application program module process or other software that may provide methods functionality for among other things providing route related component data to display analyzing and processing user input provided by the UIE providing instructions to the UIE interfacing with the rule engine to determine allowable desirable routes or combinations thereof and attending data related thereto such as travel time on a given route requesting analyzing processing and displaying third party route data and other services such a travel planning or vacation planning services . The TPE can also filter available component data e.g. entity data and destination data based upon for example user selections the user profile data and or other suitable data to present more personalized contextually appropriate data to a particular user. In these instances the TPE can provide methods functionality to recommend e.g. assign a higher weighting value particular routes based on user selections the user profile data and or other suitable data. In some implementations the TPE can interface with the rule engine UIE and or the client application as appropriate to provide filtering weighting proposals and or other suitable functionality.

Although illustrated as a single TPE in the TPS two or more TPEs may be used in the TPS according to particular needs desires or particular implementations of the specific environment. In some implementations the TPE can access process and or modify data associated with the transportation data entity data destination data user profile data and or other suitable data.

In some implementations a particular TPE can operate in response to and in connection with at least one request received from an associated client . Additionally the particular TPE may operate in response to and in connection with at least one request received from other TPEs including TPEs associated with other TPSs . In some implementations each TPE can represent a web based application accessed and executed by one or more remote clients across the network e.g. through the Internet or using at least one cloud based service associated with the TPE . For example part of a particular TPE may be a web based service associated with a TPE that is remotely called while another part of the particular TPE may be an interface object or agent bundled for processing at a remote client . Moreover any or all of a particular TPE may be a child or sub module of another software module not illustrated . Still further parts of the particular TPE may be executed or accessed by a user working directly at the TPS as well as remotely at a corresponding client . In some implementations the transportation data entity data destination data and or user profile data can be defined with and stored within the TPE as opposed to memory .

The rule engine can be any application program module process or other software that may provide methods to evaluate and or execute a rule instance not illustrated to support among other things calculating routes ranking routes ranking regions and other operations for filtering displaying and or selecting a theme emerging attributes and or optimizing a route. In some implementations the rule engine can interface with the TPE UIE and or the client application as appropriate to provide described functionality.

The above mentioned rule instance may represent conditions parameters variables algorithms instructions constraints references and any other appropriate information for determining allowable suggested desirable routes to a user. For example the rule instance may specify that selecting a particular city to be included in a particular route assists in satisfying one or more goals associated with a user.

Although illustrated as a single rule engine in the TPS two or more rule engines may be used in the TPS according to particular needs desires or particular implementations of the specific environment. In some implementations the rule engine can access process and or modify data associated with the transportation data entity data destination data user profile data and or other suitable data.

In some implementations a particular rule engine can operate in response to and in connection with at least one request received from an associated client . Additionally the particular rule engine may operate in response to and in connection with at least one request received from other rule engines including rule engines associated with other TPSes . In some implementations each rule engine can represent a web based application accessed and executed by one or more remote clients across the network e.g. through the Internet or using at least one cloud based service associated with the rule engine . For example part of a particular rule engine may be a web based service associated with a rule engine that is remotely called while another part of the particular rule engine may be an interface object or agent bundled for processing at a remote client . Moreover any or all of a particular rule engine may be a child or sub module of another software module not illustrated . Still further parts of the particular rule engine may be executed or accessed by a user working directly at the TPS as well as remotely at a corresponding client . In some implementations the transportation data entity data destination data and or user profile data can be defined with and stored within the rule engine as opposed to memory .

The user interface engine UIE can be any application program module process or other software that may provide a travel planning GUI environment for example a GUI displayed using a client . Other implementations consistent with this disclosure are envisioned and the provided figures are in no way intended to limit the scope of a particular GUI environment provided by the UIE . In some implementations a format of the GUI displayed data and or other characteristics associated with the GUI can be determined from the user profile data and or other suitable data. For example a user may prefer that displayed images are no smaller than a defined minimum dimension. The UIE can then display and modify other GUI elements as necessary to meet the user s request. The UIE can also modifies the GUI based upon user selections. For example if a user selects a specific city the UIE can change the GUI to display specific information about the selected city. In some implementations the UIE can interface with the TPE the rule engine and or the client application as appropriate to provide described functionality.

Although illustrated as a single UIE in the TPS two or more UIEs may be used in the TPS according to particular needs desires or particular implementations of the specific environment. In some implementations the UIE can access process and or modify data associated with the transportation data entity data destination data user profile data and or other suitable data.

A particular UIE may operate in response to and in connection with at least one request received from other UIEs including a UIE associated with another TPS as well as other components of the TPCS . In some implementations the UIE can be and or include a web server. In some implementations each UIE can represent a network based application accessed and executed using the network e.g. through the Internet or using at least one cloud based service associated with the UIE . For example a portion of a particular UIE may be a Web service associated with the UIE that is remotely called while another portion of the UIE may be an interface object or agent bundled for processing at a remote client . Moreover any or all of a particular UIE may be a child or sub module of another software module or enterprise application not illustrated without departing from the scope of this disclosure. Still further portions of the particular UIE may be executed or accessed by a user working directly at the TPS as well as remotely at a corresponding client .

The TPCS also includes a client . The client may be any computing device operable to connect to or communicate with the TPS using the network . In general the client comprises an electronic device operable to receive transmit process present and store any appropriate data associated with the TPCS .

The illustrated client further includes a client application . The client application is any type of application that allows the client to request view edit and or delete content on the client as well as to interact with the client . In some implementations the client application can be and or include a web browser. In some implementations the client application can use parameters metadata and other information received at launch to access a particular set of data applications etc. from the TPS . Once a particular client application is launched a user may interactively process a task event or other information associated with the TPS including among other things evaluating routes by selecting defining editing and or confirming choices for components that make up a route. Further although illustrated as a single client application the client application may be implemented as multiple client applications in the client .

The illustrated client is intended to encompass any computing device such as a desktop computer laptop notebook computer wireless data port smart phone personal data assistant PDA tablet computing device one or more processors within these devices or any other suitable processing device. For example the client may comprise a computer that includes a camera an input device such as a keypad touch screen or other device that can accept user information and an output device that conveys information associated with the operation of the TPS or the client itself including digital data visual information or a GUI as shown with respect to the client .

The illustrated client further includes an interface a processor and a memory . The interface is used by the client for communicating with other systems in a distributed environment including within the TPCS connected to the network for example the TPS as well as other systems not illustrated communicably coupled to the network . The interface may also be consistent with the above described interface of the TPS and or other interfaces within the TPCS . The processor may be consistent with the above described processor of the TPS and or other processors within the TPCS . Specifically the processor executes instructions and manipulates data to perform the operations of the client including the functionality required to send requests to the TPS and to receive and process respective responses. The memory may be consistent with the above described memory of the TPS and or other memories within the TPCS but storing objects and or data associated with the purposes of the client . Memory may also be used by the TPS and or other component not illustrated of the TPCS to store any type of data for the purposes of the client or of the storing component.

Further the illustrated client includes a GUI . The GUI interfaces with at least a portion of the TPCS for any suitable purpose including generating a visual representation in a web browser. The GUI may be used to view and navigate various internal external web pages associated with the TPS as well as to interact with all provided GUIs data and or functions associated with comparing and presenting routes. In some implementations the client application may act as a GUI interface for the TPS for example a particular user interface generated by the UIE . In some implementations the TPS and or other components of the TPCS can transmit executable components to the client application for analysis and execution on the client for example GUI code and or data gathering code and or provide content to the client application for display for example the changing cost of a travel destination based upon a specifically selected vacation component value s .

There may be any number of clients associated with or external to the TPCS . For example while the illustrated TPCS includes one client communicably coupled to the TPS using network alternative implementations of the TPCS may include any number of clients suitable to the purposes of the TPCS . Additionally there may also be one or more additional clients external to the illustrated portion of the TPCS that are capable of interacting with the TPCS using the network . Further the term client and user may be used interchangeably as appropriate without departing from the scope of this disclosure. Moreover while the client is described in terms of being used by a single user this disclosure contemplates that many users may use one computer or that one user may use multiple computers.

A starting point and a destination point are identified for travel by a user including any constraints of the user regarding the travel . For example a user using the GUI or some other interface can identify a starting point and a destination point e.g. as described below with reference to . In some implementations start and end points for routes can be provided through a web form or a text input box. Further additional user inputs such as constraints can be specified through various input methods including free form text queries sliders for indicating the distance from the route check boxes and or radio buttons to indicate preferences and other input methods.

In some implementations identifying the starting point and destination point can include receiving the starting point destination point and constraints e.g. from the GUI and the constraints can include limitations that affect a choice of the attribute oriented route. For example user input in the GUI can include constraints that the overall route is to be five hours or shorter. Other constraints are possible.

One or more initial routes are determined between the starting point and the destination point . For example the TPE can identify initial routes that connect the starting point and the destination point .

In some implementations determining the one or more initial routes can further include determining a plurality of direct routes between the starting point and the destination point. For example routes identified by the TPE can include routes that are identified solely on the basis of geographic considerations associated with distance and time. Other factors such as weather conditions and road construction can also be considered.

For each initial route the route is segmented into a plurality of segments based on one or more criteria . As an example the TPE can break each of the determined initial routes into segments where each segment is of a certain length as described below with reference to . Other factors in addition to or in combination with length can be used in segmenting a route such as topology road type condition and other factors.

In some implementations the one or more criteria can include a distance criterion and segmenting can include segmenting the route into plural substantially equal segments. For example the criteria may include a maximum distance e.g. 200 miles or a maximum time for a route as specified by the user and segmenting by the TPE can including segmenting each route into segments having a certain length e.g. 50 miles . Segments can also be determined based on time such as depending on speed limits on the segments and or other factors. Other criteria used in segmenting can include for example kid friendliness scenic quality e.g. is the segment scenic terrain features e.g. is the segment along the coast or in a valley and other criteria.

In some implementations the one or more criteria can include a function and a segment can be a length equal to the function applied to a respective route. For example a function used by the TPE can be a function that segments a route into equal portions e.g. F D 4 where a 200 mile route would be divided into 4 substantially equal 50 mile segments . In some implementations segmenting the route can further include locating one or more intermediary points along the route in accordance with the criteria each intermediary point representing an end of one segment and a beginning of a new segment. As will be discussed in greater detail below for each intermediary point one or more entities in an area around a given intermediary point can be determined in order to develop attribute oriented routes. For example the TPE can identify intermediate points such as via points that are included in the route. The TPE can also identify specific entities such as wineries that are near each of the intermediary points. Segments that are determined in this way may be of differing lengths e.g. adjusted so that the beginning and or the ending of each segment is near an entity.

In some implementations determining one or more entities in an area can include determining one or more entities in a radius around an intermediary point. For example for an entity to be considered by the TPE the entity may need to be within a radius of N miles or some other distance or time metric. In some implementations determining the entities in an area includes performing a geographical search around starting and end points for each segment. As an example the TPE can perform a search for entities e.g. businesses attractions etc. that are within the defined radius of an end point associated with a segment. Entity identification is discussed in greater detail below.

Attribute oriented routes are determined using the segments . In some implementations step can include the following sub steps. For example the TPE can construct plural attribute oriented routes using the segments as described below with reference to .

One or more entities associated with each segment are determined . For example the TPE can identify one or more entities e.g. specific coastal wineries for each of the segments as described below with reference to . Entities can be of the form of geographical features such as towns cities national parks attractions museums shopping malls and stores natural features e.g. waterfalls scenic overlooks historical sites restaurants or other geographic features.

Attributes are identified for each determined entity . The TPE for example can identify attributes such as Beach and winery as attributes in regions that include the determined segments as described below with reference to . Attributes can include attractions features reasons for tourism descriptors for the attractions features or reasons for tourism or the same. For example the attributes can correspond to popular and interesting beach towns along the attribute oriented route .

The attributes are aggregated and ranked along all the determined initial routes and one or more emerging attributes are determined . For example the TPE can aggregate and rank the attributes that correspond to each of the initial routes and the TPE can identify patterns of emerging attributes e.g. based on a large number of wineries in a region. In some implementations approaches can include aggregation counting or approaches can identify the most significant attributes relative to the general popularity of the certain attributes. For example if certain most or all tourist locations have a high density of hotels and restaurants then this might not be sufficient in identifying this attribute as being interesting and or significant. However relative to the general popularity of a particular attribute a beach might be more relevant and would rank higher.

In some implementations aggregating and ranking the attributes along all the determined routes and determining one or more emerging attributes can further include accumulating the attributes evaluating the accumulated attributes to determine top attributes for entities along the determined routes and identifying the emerging attributes from the determined top attributes. For example the TPE can keep track of a number of attributes e.g. by subject along each route e.g. five attributes related to wine. Based on the numbers of attributes that are related for example the TPE can identify emerging attributes e.g. to identify wine country as an emerging attribute e.g. if there are several wineries versus car museums as a non emerging attribute e.g. if there is a single car museum .

One or more attribute oriented routes are determined based on the emerging attributes including identifying a theme for an attribute oriented route based on one or more of the emerging attributes identifying a set of entities from the determined entities that are associated with the one or more emerging attributes and creating the attribute oriented route that passes through a region that includes the set of entities . For example the TPE can produce a set of attribute related routes e.g. including the attribute oriented route from the segments and each attribute oriented route can be based on plural attributes e.g. wine food and culinary attributes being associated with a wine country route that are associated with entities e.g. specific wineries restaurants museums tours or the like associated with a particular region. The theme of wine or wine country for example can be based on wine being an emerging attribute. In some implementations some combinations of available segments and attributes may not result in determining any attribute oriented routes such as if routes and or segments are too short and or go through uninhabited regions.

In some implementations determining one or more attribute oriented routes can include scoring a region based on matching emerging attributes of the region as compared to one or more goals and determining routes within an area e.g. a bounding area that maximizes an aggregate rank based on the scoring under the constraints. For example the TPE can score attribute oriented routes based on the number of emerging attributes discovered for each route and regions that are include can be scored e.g. based on the number of emerging attributes that a region contains.

In some implementations the process can further include identifying regions along the determined routes based on the emerging attributes. For example the TPE can identify a region between the starting point and the destination point e.g. as a region that is rich in wine related activities.

In some implementations the one or more goals can define a set of optimization goals and the method can further comprise receiving the set of optimization goals from the user or deriving the set of optimization goals from a profile associated with the user. For example the TPE can score regions based on goals e.g. interests provided by the user e.g. using the GUI and or goals determined or inferred from user profile data .

In some implementations determining the one or more attribute oriented routes can further include searching the attribute oriented routes for one that passes through regions with highest aggregate scores for a set of selected attributes of the emerging attributes. For example the TPE can identify e.g. and rank attribute oriented routes based on scores that represent the highest number of attractions of interest to the user.

At least one attribute oriented route and information related to the theme are provided to a device associated with the user . For example the TPE can select the attribute oriented route for presentation to the user. The theme can for example represent the sum of the emerging attributes that are associated with the selected route. The theme can be specific or be an indicator of a general topic associated with the emerging attributes that are associated with entities in proximity to a selected route.

In some implementations the process can further include optimizing routes in or eliminating routes from the one or more attributed oriented routes based the constraints provided by the user. For example the TPE can eliminate routes that exceed a length e.g. in distance or time that is designated by the user or some other criteria e.g. the route exceeds a total travel time or the route includes a visit to an attraction that exceeds a duration or cost specified by the user. Other criteria for optimizing or eliminating routes can be used. For example the length or maximum travel time can be constraints that the user specifies and the algorithm can use these constraints to produce results that satisfy user requirements for route optimization.

Discovering attribute oriented routes can be based on relevance criteria optimization constraints and relevant emerging attributes. For example let C be a set of constraints let G be the set of optimization goals and let R be a geographical region. Let A and B represent the origin e.g. starting point and destination e.g. destination point for the routes. Let ATTR represent an attribute or set of attributes of a region. Area A B is defined as a function that returns the bounding area within which occurs a search for optimal routes. Rank R G is defined as a function that scores a particular region R based on matching emerging attributes of the region with the optimization goals G. Two steps can be used for example to maximize ranks associated with routes. First for each region R Rank R G is compared to derive a matching score. Second a search occurs for routes within Area A B that maximize the aggregate of Rank R G under constraints C. The second step for example defines a search optimization function within a bounding area and makes use also of a routing function allowing the retrieval of navigable route information based on origin destination and set of via points to meet along the route.

Within the space of possible such routes an optimization can be applied to search for the top routes that maximize the aggregate rank of the regions under constraints. Typically constraints can define some time limit maximum number of via points limit on turns and directions and so on. Any appropriate optimization method can be used to perform this search.

Consider the following example. A user plans to travel between location A and location B and is looking for maximum five hour drive excursions that provide relevant experiences along the route. Suppose that the user is interested in scenic drives and is fond of French restaurants. In this example one of the constraints C is that driving time should be five hours or less. Optimization goals G can include a goal that parts of the suggested route are scenic and a goal that there are French restaurants along the route.

As a result Rank2 R G ATTR for example can be defined as a function that scores the set of attributes ATTR of the region R with the optimization goals G. For each region R Rank2 R G ATTR can be computed to derive a score for each attribute in R. Searching can occur for routes within Area A B that maximize n aggregates of Rank2 R G ATTR . That is routes are searched for within Area A B that have the highest aggregated scores of n selected attributes.

Consider the following example. A user plans to travel between location A and location B. A particular route can be found that goes along the coast near or within several interesting beach towns and another route can be found that goes through well known wineries. In this example Beach and winery are attributes of regions which can be scored by Rank2 R G ATTR . These routes can be returned or determined for example when the aggregates of Rank2 R G ATTR Beach and Rank2 R G ATTR Winery are highest e.g. compared with the aggregated scores of other attributes possibly found for other routes.

In another example a practical extension of the above formal approach can be used as follows. Given a repository of place data such as collections of businesses or points of interest or events and so on the following pre processing steps can be applied.

Geographic regions can be inferred with regard to some criteria. For example travel destinations can be inferred based on the density volume and popularity of places located within the destination. For example patent application Ser. No. 14 162 596 which is hereby incorporated in its entirety provides more detail for processes of inferring high level place entities such as regions and destinations from lower level places such as the collection of businesses within a region.

Emerging attributes can be extracted for the inferred regions. Typically a region can be described by a set of dominant attributes. For example in a travel application a destination e.g. a town can be described by a set of dominant travel related categories such as for example having Latin American Restaurants a Lake and Wineries. For example patent application Ser. No. 14 162 596 provides more detail on extracting emergent attributes for geographical regions.

In some implementations the following algorithm can be used to compute possible routes that are strongly related to particular attributes. For example the algorithm can be used to identify routes for an origin location A a destination location B a mapping service M and optionally a list of attributes of interest.

First mapping service M can be used to retrieve routes from location A to location B. For example a route minimally contains a collection of geographical positions along the route typically a collection of latitude and longitude position pairs.

Second for each route regions of interest are discovered such as interesting towns within a distance D form the route. Regions can be located within distance from a route for example by segmenting the route and for each position at the beginning of a segment retrieving regions of interest that are within D e.g. using similar techniques as used for discovering regions . For each discovered region the relevant attributes are retrieved and extracted. Attributes can be aggregated and rank by unity or numerical rank value to create a value sum of each attribute over entire discovered destinations for a route.

Third the top n attributes with highest values from aggregated list are selected. At this point for example n attributes exist that represent the top emerging attributes nearby a route. For example attributes such as Beach Winery and Great Outdoors may exist for some routes e.g. representing important destinations that have such attributes within some distance D from the route.

Fourth the regions having the top attributes are retrieved. Fifth routes going through or near the top attributed regions are retrieved and returned e.g. using a mapping service.

Referring to the selection of attribute oriented route e.g. using the algorithm described above demonstrates the discovery of a route that is different than what a typical GPS system map application or direction service provides. For example a route provided by a GPS or a direction service may be determined using major roads and optimized based on the duration of travel under traffic conditions. Conversely the attribute oriented route that is determined as described above shows a travel route going through popular and interesting beach towns along the coast which emerge from the geography that is within some distance of the origin and destination e.g. starting point and destination point respectively .

In some implementations the techniques described above can be used to locate routes based on users interests. For example users can look for travel routes that are near wineries or beach towns or national parks etc. and within constraints such as duration or length of travel.

In some implementations the techniques described above can be used to generate routes that are associated with emerging attributes in the geography which are not pre selected by users and letting users of the system explore and select routes that are associated with one or more such attributers.

In some implementations the techniques described above can be used during research and planning phases for discovering and recommending interesting routes and places of interest nearby these routes.

In some implementations the techniques described above can be used on the go in a mobile application via phone or other mobile devices to discover and recommend alternate traveling routes associated with certain themes. In some implementations alternate routes can be identified dynamically at runtime. For example if the current route is busy due to high traffic or an accident an alternate route can either be requested by the user or suggested automatically as a way to show a scenic option or a themed route.

In some implementations the techniques described above can be included in a discovery service e.g. through set of APIs to support other computer programs. For example the service can be used to discover routes associated with emerging or predefined themes or attributes e.g. given initial inputs of origin and destination.

Computing device includes a processor memory a storage device a high speed controller connecting to memory and high speed expansion ports and a low speed controller connecting to low speed bus and storage device . Each of the components and are interconnected using various busses and may be mounted on a common motherboard or in other manners as appropriate. The processor can process instructions for execution within the computing device including instructions stored in the memory or on the storage device to display graphical information for a GUI on an external input output device such as display coupled to high speed controller . In other implementations multiple processors and or multiple buses may be used as appropriate along with multiple memories and types of memory. Also multiple computing devices may be connected with each device providing portions of the necessary operations e.g. as a server bank a group of blade servers or a multi processor system .

The memory stores information within the computing device . In one implementation the memory is a computer readable medium. In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units.

The storage device is capable of providing mass storage for the computing device . In one implementation the storage device is a computer readable medium. In various different implementations the storage device may be a floppy disk device a hard disk device an optical disk device or a tape device a flash memory or other similar solid state memory device or an array of devices including devices in a storage area network or other configurations. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory the storage device or memory on processor .

The high speed controller manages bandwidth intensive operations for the computing device while the low speed controller manages lower bandwidth intensive operations. Such allocation of duties is an example only. In one implementation the high speed controller is coupled to memory display e.g. through a graphics processor or accelerator and to high speed expansion ports which may accept various expansion cards not shown . In the implementation low speed controller is coupled to storage device and low speed bus . The low speed bus e.g. a low speed expansion port which may include various communication ports e.g. USB Bluetooth Ethernet wireless Ethernet may be coupled to one or more input output devices such as a keyboard a pointing device a scanner or a networking device such as a switch or router e.g. through a network adapter.

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a standard server or multiple times in a group of such servers. It may also be implemented as part of a rack server system . In addition it may be implemented in a personal computer such as a laptop computer . Alternatively components from computing device may be combined with other components in a mobile device not shown such as computing device . Each of such devices may contain one or more of computing devices and an entire system may be made up of multiple computing devices communicating with each other.

Computing device includes a processor memory an input output device such as a display a communication interface and a transceiver among other components. The computing device may also be provided with a storage device such as a micro drive or other device to provide additional storage. Each of the components and are interconnected using various buses and several of the components may be mounted on a common motherboard or in other manners as appropriate.

The processor can process instructions for execution within the computing device including instructions stored in the memory . The processor may also include separate analog and digital processors. The processor may provide for example for coordination of the other components of the computing device such as control of user interfaces applications run by computing device and wireless communication by computing device .

Processor may communicate with a user through control interface and display interface coupled to a display . The display may be for example a TFT LCD display or an OLED display or other appropriate display technology. The display interface may comprise appropriate circuitry for driving the display to present graphical and other information to a user. The control interface may receive commands from a user and convert them for submission to the processor . In addition an external interface may be provided in communication with processor so as to enable near area communication of computing device with other devices. External interface may provide for example for wired communication e.g. via a docking procedure or for wireless communication e.g. via Bluetooth or other such technologies .

The memory stores information within the computing device . In one implementation the memory is a computer readable medium. In one implementation the memory is a volatile memory unit or units. In another implementation the memory is a non volatile memory unit or units. Expansion memory may also be provided and connected to computing device through expansion interface which may include for example a subscriber identification module SIM card interface. Such expansion memory may provide extra storage space for computing device or may also store applications or other information for computing device . Specifically expansion memory may include instructions to carry out or supplement the processes described above and may include secure information also. Thus for example expansion memory may be provide as a security module for computing device and may be programmed with instructions that permit secure use of computing device . In addition secure applications may be provided via the SIM cards along with additional information such as placing identifying information on the SIM card in a non hackable manner.

The memory may include for example flash memory and or MRAM memory as discussed below. In one implementation a computer program product is tangibly embodied in an information carrier. The computer program product contains instructions that when executed perform one or more methods such as those described above. The information carrier is a computer or machine readable medium such as the memory expansion memory or memory on processor .

Computing device may communicate wirelessly through communication interface which may include digital signal processing circuitry where necessary. Communication interface may provide for communications under various modes or protocols such as GSM voice calls SMS EMS or MMS messaging CDMA TDMA PDC WCDMA CDMA2000 or GPRS among others. Such communication may occur for example through transceiver e.g. a radio frequency transceiver . In addition short range communication may occur such as using a Bluetooth WiFi or other such transceiver not shown . In addition GPS receiver module may provide additional wireless data to computing device which may be used as appropriate by applications running on computing device .

Computing device may also communicate audibly using audio codec which may receive spoken information from a user and convert it to usable digital information. Audio codec may likewise generate audible sound for a user such as through a speaker e.g. in a handset of computing device . Such sound may include sound from voice telephone calls may include recorded sound e.g. voice messages music files etc. and may also include sound generated by applications operating on computing device .

The computing device may be implemented in a number of different forms as shown in the figure. For example it may be implemented as a cellular telephone . It may also be implemented as part of a smartphone personal digital assistant or other mobile device.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. Other programming paradigms can be used e.g. functional programming logical programming or other programming. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specific implementation details these should not be construed as limitations on the scope of any inventions or of what may be claimed but rather as descriptions of features specific to particular implementations of particular inventions. Certain features that are described in this specification in the context of separate implementations can also be implemented in combination in a single implementation. Conversely various features that are described in the context of a single implementation can also be implemented in multiple implementations separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the implementations described above should not be understood as requiring such separation in all implementations and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular implementations of the subject matter have been described. Other implementations are within the scope of the following claims. In some cases the actions recited in the claims can be performed in a different order and still achieve desirable results. In addition the processes depicted in the accompanying figures do not necessarily require the particular order shown or sequential order to achieve desirable results. In certain implementations multitasking and parallel processing may be advantageous.

