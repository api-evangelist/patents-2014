---

title: Monitoring handheld devices in a user testing mode
abstract: A system and method are presented for monitoring handheld devices in a testing environment. At least one handheld device is provided, typically several, that is capable of performing a first plurality of functions in a non-test mode, and a more limited number of functions in a test mode. In a test environment the handheld device should be set to perform in the test mode. In the event of the handheld device mode being changed from the test mode to non-test mode, the handheld device generates a non-test mode signal. A monitoring software application records the non-test mode signal. In one aspect, the monitoring application is embedded in a remote proctor device. The remote proctor device monitoring application may send a mode interrogation message to the handheld device, and the handheld device generates the non-test mode signal in response to the mode interrogation message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09450842&OS=09450842&RS=09450842
owner: Sharp Laboratories of America, Inc.
number: 09450842
owner_city: Camas
owner_country: US
publication_date: 20140922
---
This application is a Continuation of an application entitled SYSTEM AND METHOD FOR MONITORING HANDHELD DEVICES IN A USER TESTING MODE invented by Helen Crowell et al. Ser. No. 13 118 303 filed May 27 2011 which is incorporated herein by reference.

This invention generally relates to electronic academic testing and more particularly to a system and method for monitoring the use of handheld devices in a classroom testing environment.

Handheld devices are gaining more capabilities and features that can potentially be used by students to cheat on their exams. Currently some handheld calculators are allowed to be used during exams if they are in test mode only. Test mode disables access to applications or programs that could aid the user in taking a test or to files that may contain previously stored cheat notes. A flashing light emitting device LED light at the top of some handheld calculators is the only indicator that the device is in the testing mode. The teacher or proctor must visually search for the flashing LED light at the top of all handheld calculators used during the exam to verify the calculators remain in the test mode.

This solution may work fine for 10 students but for a typical class size of 40 students or a typical exam board class size of 80 students this manual search for LED lights can be ineffective. Also a student can distract the teacher or proctor during an exam thus stopping all visual searches for LED lights and enabling other students to get out of test mode to view cheat notes.

It would be advantageous if a teacher or proctor could easily monitor the use of handheld devices enabled to operate in a limited function test mode to prevent cheating in classroom testing environments.

Disclosed herein is a method for monitoring handheld devices which are set to operate in a limited function test mode. A proctor application periodically queries the status of all known handheld devices for test mode operation during an exam and the handheld device notifies the proctor application when it changes mode from test mode to normal mode non test mode . The monitoring results are logged and an at a glance display provides real time status for each handheld device to the teacher or proctor. When a handheld device exits out of test mode the teacher proctor is alerted in real time by updating a display with handheld device status. Exiting the test mode may also trigger the handheld device to begin capturing usage data such as screen shots of the handheld screen and log keystrokes until it returns hack to test mode. This captured data can be sent to the proctor application.

Accordingly a method is provided for monitoring handheld devices in a testing environment. At least one handheld device is assumed capable of performing a first plurality of functions in a non test mode and a more limited number of functions in a test mode. The handheld device is set to perform in the test mode. In the event of the handheld device mode being changed from the test mode to non test mode the handheld device generates a non test mode signal. A monitoring software application records the non test mode signal. In one aspect the monitoring application is embedded in a remote proctor device. The remote proctor device monitoring application sends a mode interrogation message to the handheld device and the handheld device generates the non test mode signal in response to the mode interrogation message.

In one aspect the remote proctor device monitoring application sends a capture activity message to the handheld device if it receives a non test mode signal. In response the handheld device transmits an activity message capturing real time handheld device user interface activity such as handheld device display screen shots and handheld device keyboard strokes.

Additional details of the above described method and a handheld device monitoring system for use in testing environments are provided below.

As used in this application the terms component module system and the like may be intended to refer to an automated computing system entity such as hardware firmware a combination of hardware and software software software stored on a computer readable medium or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a computing device and the computing device can be a component. One or more components can reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. In addition these components can execute from various computer readable media having various data structures stored thereon. The components may communicate by way of local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems by way of the signal .

The computer devices described below typically employ a computer system with a bus or other communication mechanism for communicating information and a processor coupled to the bus for processing information. The computer system may also include a main memory such as a random access memory RAM or other dynamic storage device coupled to the bus for storing information and instructions to be executed by processor. These memories may also be referred to as a computer readable medium. The execution of the sequences of instructions contained in a computer readable medium may cause a processor to perform some of the steps associated with monitoring a handheld device that is supposed to be operating exclusively in a test mode. Alternately some of these functions may be performed in hardware. The practical implementation of such a computer system would be well known to one with skill in the art.

As used herein the term computer readable medium refers to any medium that participates in providing instructions to a processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks. Volatile media includes dynamic memory. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium a CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave as described hereinafter or any other medium from which a computer can read.

A listening module is enabled as a sequence of software instructions stored in the handheld device local memory and executed by the processor . The listening module generates a non test mode signal in response to the handheld device mode being changed from the test mode to non test mode. A monitoring application enabled as a sequence of software instructions stored in local memory and executed by a processor records the non test mode signal. As shown in the monitoring application is embedded in the handheld device . For example the monitoring application can be opened and examined by a proctor after a test. Alternatively the monitoring application may be interrogated either during or after a test by a remote device via a hardwired or wireless interface.

The remote proctor device may be a personal computer PC Mac computer tablet workstation server PDA or handheld device. The processor or central processing unit CPU may be connected to memory via an interconnect bus . The processor may include a single microprocessor or may contain a plurality of microprocessors for configuring the computer device as a multi processor system. Further each processor may be comprised of a single core or a plurality of cores. The memory may include a main memory a read only memory and mass storage devices such as various disk drives tape drives etc. The main memory typically includes dynamic random access memory DRAM and high speed cache memory. In operation the main memory stores at least portions of instructions and data for execution by the processor .

The memory may also comprise a mass storage with one or more magnetic disk or tape drives or optical disk drives for storing data and instructions for use by processor . For a workstation PC for example at least one mass storage system in the form of a disk drive or tape drive stores the operating system and application software. The mass storage may also include one or more drives for various portable media such as a floppy disk a compact disc read only memory CD ROM or an integrated circuit non volatile memory adapter i.e. PC MCIA adapter to input and output data and code to and from the remote proctor device .

The remote proctor device network interface may be more than one interface shown by way of example as an interface for data communications via a network . The interface may be a modem an Ethernet card or any other appropriate data communications device such as USB. The physical communication links may be optical wired or wireless.

The remote proctor device may further include appropriate input output IO ports on lines and for user interface interconnection respectively with a display and a keyboard . For example the remote proctor device may include a graphics subsystem to drive the output display. The output display may include a cathode ray tube CRT display or liquid crystal display LCD . The input control devices for such an implementation may include the keyboard for inputting alphanumeric and other key information. The input control devices on line may further include a cursor control device not shown such as a mouse touchpad touchscreen trackball stylus or cursor direction keys. The links to the peripherals on line may be wired connections or use wireless communications.

In one aspect the remote proctor device monitoring application sends a mode interrogation message to the handheld device listening application . The handheld device listening application generates the non test mode signal in response to the mode interrogation message when the handheld device is in the non test mode. The remote proctor device monitoring application may send a capture activity message to the handheld device listening application in response to receiving the non test mode signal. Then the handheld device listening application transmits an activity message capturing real time handheld device user interface activity such as handheld device display screen shots handheld device keyboard strokes or both.

For example the remote proctor device monitoring application may send a periodic capture activity message with a period of n seconds. The handheld device listening application records handheld device user interface activity and periodically transmits the recorded handheld device user interface activity in response to the received periodic capture activity message.

In another aspect the monitoring application sends a warning message to the handheld device in response to receiving the non test mode signal and a handheld device user interface presents a warning indicator in response to the warning message. The warning may for example be a text message or icon on the display of the handheld device or an auditory signal.

In addition to generating the non test mode signal the handheld device listener application may also generate a test mode signal in response to the mode interrogation message when the handheld device is in the test mode. The remote proctor device monitoring application presents handheld device test non test mode status on a remote proctor device display . For example the display may show all handhold units operating in the test mode as a first color and all handheld units that generated a non test mode signal as a different color or as a flashing icon. Upon selecting the flashing icon the display can depict real time activity occurring at the handheld device. In one aspect the remote proctor device monitoring application receives a handheld device identifier with the non test mode signal transmitted by the handheld device listener application and cross references user names to handheld device identifiers.

The handheld device listener application may use a Representational State Transfer REST based HTTP protocol to communicate with the remote proctor device monitoring application . In one aspect the remote proctor device monitoring application uses a web services WS discovery application enabled as a sequence of software instructions in local memory executed by the processor to connect the listener application with the monitoring application .

The application monitoring the handheld devices status captures and displays the results for a teacher or proctor in real time. The exiting of the test mode by a handheld device that is supposed to be in test mode triggers an alert on the proctor s display and may automatically begin capturing screen shots of the handheld device s display and or logs key strokes that are all stored for later retrieval.

Before an exam begins all students handheld devices should be switched to test mode . During this process the student s handheld device communicates to the teacher s or proctor s monitoring application to register their handheld device and begins sending status information. This registration identifies the student s handheld device serial number test mode status and possibly other student information. Once all students handheld devices are registered and in test mode the exam begins and every N seconds the proctor s monitoring application queries all the handheld devices. Alternatively the handheld devices push their non test mode or test mode status to the proctor s monitoring application. N seconds is the refresh rate of how often queries are executed and can be configured to be any positive non zero number for example 40 seconds. Every N seconds the teacher s or proctor s monitoring application displays the latest results on a dashboard like at a glance display of all handheld devices test mode status. The results are captured at the refresh rate to a file for later review if one or more handheld devices change states exiting or entering test mode an alert is displayed on the proctor s display with the handheld device serial number and possibly other information for the student. The alert s remain on the display until the teacher or proctor acknowledges them. The handheld device exiting the test mode can also trigger a notification from the handheld device to the proctor s application initiating screen shots of activities on the handheld s display and log key strokes that are sent back to the proctor s monitoring application.

The handheld devices can communicate with the proctor s monitoring application via a wired or wireless restricted network in the exam room. The teacher s application can be software installed on a computer laptop or tablet device. The at a glance results can be presented on the display or screen type medium. The results are periodically captured based on the refresh rate and stored on the hard drive or memory device.

A web services WS discovery model can be used to discover and connect handheld device listening applications to the teacher monitoring application. All WS Discovery communications use multicast User Datagram Protocol UDP network communication protocols using Simple Object Access Protocol SOAP messaging in Extensible Markup Language XML format.

General communication with a single handheld device may be implemented using a proprietary Hypertext Transfer Protocol HTTP messaging protocol to invoke Application Programming Interface API functions. The HTTP messaging protocol can be implemented using a separate background process and separate port from the WS Discovery code. The teacher s monitoring application and handheld device listening application may use a REST based HTTP protocol to invoke API functions and return results. The handheld device listener application runs in the background. This application or background service runs constantly as long as the device is powered on. Its goal is to receive message requests from the teacher s monitoring application and generate responses. This service needs no user interface it is a process that runs by itself receiving network requests running API functions and generating results.

The getStatusAPI returns the status test mode or normal non test mode of the handheld device to the teacher s application. This API may also include battery level and WiFi signal strength. SQLite a software library that implements a self contained serverless zero configuration transactional SQL database engine may also be used.

Some of the following data may be useful in enabling communications between the handheld device and the remote proctor monitoring application 

The combination of the handheld device login with student s username and password and the device s MAC Address may be used to associate the device with a user.

Step provides a handheld device capable of performing a first plurality of functions in a non test mode and a second plurality of functions less than the first plurality of functions in a test mode. Step sets the handheld device to perform in the test mode. In the event of the handheld device mode being changed from the test mode to non test mode in Step the handheld device generates a non test mode signal. In Step a monitoring application enabled as a sequence of software instructions stored in local memory and executed by a processor records the non test mode signal. In one aspect recording the non test mode signal in Step includes the monitoring application embedded in the handheld device recording the non test mode signal. Alternatively in Step a remote proctor device embedding the monitoring application receives the non test mode signal from the handheld device.

In one variation in Step the monitoring application sends a warning message to the handheld device in response to receiving the non test mode signal. In Step a handheld device user interface presents a warning indicator in response to the warning message.

In one aspect in Step the remote proctor device monitoring application sends a mode interrogation message to the handheld device. Then generating the non test mode signal in Step includes generating the non test mode signal in response to the mode interrogation message. Alternatively the non test mode signal is pushed without the need for interrogation.

In another aspect in Step the remote proctor device monitoring application sends a capture activity message to the handheld device in response to receiving the non test mode signal. In Step the handheld device transmits an activity message capturing real time handheld device user interface activity such as handheld device display screen shots handheld device keyboard strokes or both. For example the remote proctor device monitoring application sending the capture activity message in Step may send a periodic capture activity message with a period of n seconds. Then the handheld device transmitting the activity message in Step includes the following substeps. In Step the handheld device records handheld device user interface activity and in Step the handheld device periodically transmits the recorded handheld device user interface activity in response to the received periodic capture activity message.

In one aspect in Step the handheld device generates a test mode signal in response to the mode interrogation message Step if the handheld device remains in the test mode and in Step the remote proctor device monitoring application presents a handheld device test non test mode status on a remote proctor device display. Alternatively the test mode signal may be pushed in Step without interrogation.

In another aspect receiving the non test mode signal from the handheld device in Step includes additionally receiving a handheld device identifier. Then in Step the remote proctor device monitoring application cross references user names to handheld device identifiers.

In one aspect generating the non test mode signal in Step includes a listener application enabled as a sequence of software instructions embedded in a local memory and executed by a processor performing the following substeps. In Step the handheld device determines if the handheld device is in the non test mode and Step uses a Representational State Transfer REST based HTTP protocol to communicate with the remote proctor device monitoring application. In the event of the handheld device remains in the test mode Step the handheld device listener application generates a test mode signal using the following substeps. Step determines if the handheld device is in the test mode and Step uses the REST based HTTP protocol to communicate with the remote proctor device monitoring application.

In another aspect prior the non test mode signal being generated in Step the remote proctor device monitoring application uses a web services WS discovery application in Step enabled as a sequence of software instructions in local memory executed by the processor to connect the handheld device listener application with the remote proctor device monitoring application.

A system and method have been provided for monitoring handheld devices in a testing environment. Examples of particular message structures hardware units and process flows have been presented to illustrate the invention. However the invention is not limited to merely these examples. Other variations and embodiments of the invention will occur to those skilled in the art.

