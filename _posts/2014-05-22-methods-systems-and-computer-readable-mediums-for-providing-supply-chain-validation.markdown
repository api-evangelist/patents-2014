---

title: Methods, systems, and computer readable mediums for providing supply chain validation
abstract: Methods, systems, and computer readable mediums for providing supply chain validation are disclosed. According to one exemplary embodiment, a method for validating a computing system comprises receiving, from a source entity and via an out of band delivery, validation information for validating the computing system, wherein the validation information is derived from one or more components of the computing system. The method also includes determining, using the validation information and reference information associated with the computing system, whether a configuration of the computing system has been modified and, in response to determining that the configuration of the computing system has been modified, generating information about a system modification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09449171&OS=09449171&RS=09449171
owner: VCE Company, LLC
number: 09449171
owner_city: Richardson
owner_country: US
publication_date: 20140522
---
The subject matter described herein relates to validation techniques. More specifically the subject matter relates to methods systems and computer readable mediums for providing supply chain validation.

Supply chain security has become a growing subject of interest for many individuals governments organizations and businesses. In particular many security concerns are raised when using people and organizations outside your own control to deliver goods or services because a trusted chain of custody is extremely difficult to verify. For example recent news articles have discussed an espionage and surveillance technique called interdiction where goods such as computers and or other electronics shipped from a manufacturer are intercepted in route to a customer modified e.g. to include surveillance hardware and or malicious software and then delivered to the unsuspected customer. Since a customer may believe delivered goods or services to be from a trusted source e.g. the manufacturer the customer may use the goods or services without validating the goods and or without discovering unwanted and or malicious modifications.

Methods systems and computer readable mediums for providing supply chain validation are disclosed. According to one exemplary embodiment a method for validating a computing system comprises receiving from a source entity and via an out of band delivery validation information for validating the computing system wherein the validation information is derived from one or more components of the computing system. The method also includes determining using the validation information and reference information associated with the computing system whether a configuration of the computing system has been modified and in response to determining that the configuration of the computing system has been modified generating information about a system modification.

The subject matter described herein includes methods systems and computer readable mediums for providing supply chain validation. For example supply chain validation may include methods and or techniques for independently validating that a computing system has been received unmodified or uncompromised. In this example the computing system to be validated may include one or more computing platforms comprising one or more computing system components CSCs such as compute components software components network components switching components storage components hardware components firmware components and or other elements. In some embodiments an exemplary computing system for providing and or performing supply chain validation may include a converged infrastructure system CIS such as for example a Vblock System from VCE Company LLC. A CIS can comprise multiple CSCs e.g. components physical resources and or virtual resources in a preconfigured or prepackaged computing platform where some CSCs are developed and or manufactured by multiple entities. For example an exemplary CIS can comprise data storage devices servers networking equipment and software for managing physical resources and or virtualized resources e.g. virtual servers .

In accordance with some aspects of the disclosed subject matter validation information associated with a computing system can be provided to a recipient via an out of band delivery e.g. a delivery that occurs separately and or at a different time from the delivery of the computing system . Exemplary validation information may include any information usable for validating a system or portions therein such as state information hardware measurements firmware measurements software measurements configuration measurements e.g. settings or parameter values associated with hardware firmware and or software and or fingerprints e.g. hash values signatures and or identifiers usable for validating a system or portions therein. For example validation information may include known or expected state information associated with a computing system as determined by a source entity prior to delivery of the computing system to a recipient. In this example the validation information may be used to validate that the computing system and or portions therein e.g. CSCs or groups of CSCs has not been modified during delivery.

In accordance with some aspects of the disclosed subject matter reference information associated with a computing system can be generated and used for validation purposes. Reference information may include any information usable for validating a system or portions therein. Exemplary reference information may include state information hardware measurements firmware measurements software measurements configuration measurements and or fingerprints usable for validating a system or portions therein. For example reference information may include current state information associated with a computing system such as when the computing system is received by a recipient.

In accordance with some aspects of the disclosed subject matter reference information and validation information can be based on or generated using similar if not identical information. In some embodiments reference information and validation information may be distinguishable based on when the respective information is generated and or by whom. For example validation information may be generated and provided from a manufacturer to a customer while reference information may be generated by the customer typically at reception or when performing validation. In this example supply chain validation may include identifying if a computing system has been modified or tampered with by comparing the provided validation information and the reference information. If no differences are found between the validation information and the reference information the computing system and supply chain may be considered validated.

In accordance with some aspects of the disclosed subject matter fingerprints may be generated and or used for validation purposes e.g. validation information and or reference information . Exemplary fingerprints may include a hash value a signature compressed data and or other identifiers for identifying or validating a computing system and or one or more portion s therein. In some embodiments fingerprints may be uniform in size e.g. bit length or format e.g. a standardized character set . In some embodiments fingerprints may have various sizes or formats. For example measurements associated with CSCs may be used to generate 64 bit fingerprints. In this example the 64 bit fingerprints along with other fingerprints and or measurements associated with a computing system may be used to generate a 2048 bit system fingerprint. In some embodiments fingerprint generation can be type dependent and or modular such that various CSCs groups of CSCs and or computing systems e.g. as a whole can be uniquely identified using fingerprints. For example CSCs in a computing system can be uniquely identifiable in the context of the hardware firmware software and specific configurations. However information or measurements needed to identify or validate one CSC or group of CSCs may be different than information or measurements needed to identify or validate another CSC or group of CSCs. By generating fingerprints that are modular a computing system and any CSCs or groups of CSCs therein can be uniquely identified and validated.

In accordance with some aspects of the disclosed subject matter various advantages can be readily appreciated over conventional methods that rely on visual inspection. Exemplary advantageous aspects associated with some aspects of the present disclosure can include automating the validation process or a substantial portion thereby increasing consistency and allowing repeatability providing validation information out of band from the delivery of a computing system such that the validation information is less likely to be compromised even if the computer system is compromised utilizing modular fingerprints such that validation can efficiently utilize measurements involving hundreds or thousands of data point providing information about detected system modifications with expanding granularity and detail and performing validation using validation information provided by a source entity as another measurement for system assurance.

Reference will now be made in detail to exemplary embodiments of the subject matter described herein examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

In some embodiments CIS may be configured to provide data center functionality cloud service functionality and or other functionality. CIS may be capable of communicating with other CISs e.g. located at various physical locations or sites and may communicate with various other entities such as network nodes e.g. servers hosting online sites and users. For example client may represent any entity e.g. software executing on a processor a web based interface etc. for allowing a user e.g. a human operator or an automated system to interact with CIS CSCs therein and or other entities. In some embodiments client may establish communication directly with CIS without using network .

In some embodiments CIS can comprise a CIS manager e.g. a CIS management module a repository virtualized infrastructure and or physical infrastructure . CIS manager may be any suitable entity for managing aspects of CIS or portions therein e.g. CSCs or groups of CSCs . CIS manager may be configured to communicate with various CSCs and or for managing various CSCs. For example CIS manager can be configured to access each CSC within CIS and return relevant information to client . For example CIS manager may be configured to manage performance resource utilization levels and other aspects associated with virtualized infrastructure and or physical infrastructure . In some embodiments CIS manager can comprise VCE Vision Intelligent Operations software and or firmware.

CIS manager can comprise or interact with a system validation module SVM . SVM can be any suitable entity e.g. software executing on a processor for performing one or more aspects associated with providing or performing supply chain validation system validation group validation and or element e.g. component validation. For example SVM may be configured to perform functionality associated with a reference monitor e.g. a hardware and software implementation of a security kernel responsible for authenticating and validating various system state measurements and or other information .

In some embodiments SVM can be configured to receive and use validation information provided by a source entity to determine whether a computing system such as CIS or a portion therein e.g. compute component or has been modified or compromised. In some embodiments SVM can be configured to generate reference information associated with a computing system e.g. at customer s reception of the computing system and can validate or attempt to validate the generated reference information using provided validation information. In some embodiments SVM can be configured to provide information about validation results including information about detected modifications e.g. to client via a user interface.

In some embodiments SVM can include one or more communications interfaces for communicating with various entities such as client other CISs and or one or more CSCs. Exemplary communications interfaces may receive or send messages associated with various protocols or formats. For example validation information from manufacturer may be stored in an encrypted extensible markup language XML file. In this example SVM may be configured to decrypt read and or otherwise use the validation information from the manufacturer. Exemplary communications interfaces may also include user interfaces for interacting with CIS or portions therein. Exemplary user interfaces may support automation e.g. via one or more scripting languages a representation state transfer REST application programming interface API a command line interface CLI and or a web based graphical user interface GUI .

In some embodiments SVM can include functionality for receiving obtaining and or generating validation information and or reference information e.g. measurements or fingerprints about various aspects of CIS . For example SVM may analyze state information associated with hardware software and or firmware in CIS and or a CSC therein e.g. compute component to obtain reference information that may uniquely identify CIS and or the CSC. In this example the reference information may include configuration information along with serial numbers or globally unique identifiers GUIDs associated with hardware software and firmware of the CIS or a CSC s therein.

In some embodiments SVM can include functionality for generating fingerprints or other identifiers for identifying CIS or portions therein e.g. CSCs or groups of CSCs . For example SVM may analyze and or gather measurements including serial numbers version numbers configuration information and or other information about a CSC. In this example SVM may provide the measurements as input to a hashing algorithm e.g. a hash function or a message digest function a compression algorithm or other logic to generate a fingerprint for uniquely identifying the CSC.

In some embodiments fingerprint generation may be modular and input information may be determined using one or more factors. Exemplary factors for fingerprint generation may include customer preferences preconfigured information e.g. a list of predefined measurements to gather for different types of CSCs dynamic information e.g. information based on current or on going measurements historical information and or other information. For example client or a source entity can identify minimum measurements to use in generating various fingerprints such as a central processing unit CPU identifier for a hardware fingerprint a firmware code version number for a firmware fingerprint and a sampling of configurations from one or more security hardening guides for a software fingerprint. In another example client or a source entity may identify different measurements to use when generating modular fingerprints for various CSCs.

In some embodiments fingerprints may be advantageous because of uniformity e.g. similar length or character sets size e.g. a fingerprint may be smaller in storage size than a concatenation of related measurements obscurity e.g. a fingerprint may obscure sensitive state information and or modularity e.g. a fingerprint can be generated using various information . For example fingerprints may compress or condense hundreds or even thousands of data points into relatively small data portions such as 32 bit or 64 bit data portions. In another example multiple CSCs related fingerprints may be used to generate an aggregate system fingerprint.

In some embodiments SVM can include functionality for analyzing validation information and or reference information for validation purposes. For example SVM may compare validation information and reference information associated with a computing system e.g. CIS . In this example the validation information may include a system fingerprint based on the computing system prior to the computing system leaving the manufacturer and the reference information may include a system fingerprint based on the computing system at the time of reception by client . If the validation information and the reference information are identical or vary within an acceptable range SVM may determine that the computing system has not been modified and that the supply chain for supplying the computing system is validated. However if the validation information and the reference information are different or vary outside an acceptable range SVM may determine that the computing system has been modified and that the supply chain for supplying the computing system is compromised.

In some embodiments SVM can include functionality for providing information about system modifications. For example SVM may include a user interface for displaying differences detected between validation information and reference information. In this example the user interface may allow a user to determine additional information about a system modification via drill down user interface UI elements. Additional information can be based on a variety of sources and may include numerous types of information including description of a modification possible identities of the modifying entity and mitigation actions to revert or mitigate the modification.

In some embodiments SVM can include functionality for storing validation information and or reference information e.g. measurements and or fingerprints for CIS or CSCs therein in repository . Repository can include any data storage unit e.g. a database storage component s or a plurality of databases that may be configured to store validation information and or reference information such as hardware measurements software measurements firmware measurements and or fingerprints. Although depicts repository as a local data storage unit residing on CIS repository can also be embodied as a data storage unit located at an online location e.g. a public distributed content site on a local proxy server in a customer s or system administrator s environment or on a different CIS without departing from the scope of the disclosed subject matter. Further repository may be implemented using one or more computing platforms devices or systems.

In some embodiments repository can be provisioned with validation information and or reference information from a second repository e.g. from another CIS or from an online location such as a known online site that may be hosted by the CIS manufacturer . For example various information may be obtained or copied from a second repository e.g. a second CIS an online site online repository or any other online location over network using secure copy SCP protocol file transfer protocol FTP secure file transfer protocol SFTP hypertext transfer protocol HTTP or any like protocol. In some embodiments CIS and a second CIS may be located at a common site and can be communicatively connected by a wired connection. In such a configuration repository may be provisioned with validation information from the second CIS via the wired connection. It is understood that the provisioning of repository with various information with the exemplary methods described above may be conducted via any automated or automatic manner. In addition information copied from a second repository and installed into repository may utilize any form of transportable mediums such as a compact disc CD flash memory a universal serial bus USB device and the like.

Virtualized infrastructure can comprise a virtualization environment configured to simulate components of a computing device e.g. a processor system memory and a storage device for executing one or more virtual machines VMs e.g. VM VM and VM . Each of VM VM and VM may be configured to perform various functions and or services such as web server functions or cloud application services and may interact with various nodes components and or users.

In some embodiments virtualized infrastructure can be associated with one or more virtual entities. Each virtual entity can comprise one or more CIS or portions therein e.g. CSCs from one or more CISs. In some embodiments virtualization manager may allow logical entities to be created deleted or modified using an API and or a GUI. Virtualization manager may be any suitable entity e.g. software executing in a virtual machine for managing aspects associated with virtualized infrastructure . In some embodiments virtualization manager may be configured to provide data center management through one or more communications interfaces. For example virtualization manager may communicate with one or more third party management tools using APIs.

Physical infrastructure can comprise hardware resources such as memory module s processor s network components compute components and one or more storage component s . Hardware resources may be communicatively connected to various other CSCs in CIS and other entities. Hardware resources can be configured for use by one or more virtual entities. In some embodiments network components e.g. network switches may be configured to enable communication between the components in CIS . In some embodiments one or more file share storage FSS systems not shown can be utilized to provide file system level access to a CIS across a local area network LAN .

Hardware resource manager can be any suitable entity e.g. software executed in a virtual machine for managing aspects associated with physical infrastructure . In some embodiments hardware resource manager may be configured to provision hardware resources via one or more communications interfaces. For example hardware resource manager may provision hardware resources for implementing one or more virtual entities in virtualized infrastructure . In some embodiments hardware resource manager may comprise any management component or entity such as a unified infrastructure manager UIM or a unified computing system UCS director entity which is configured to provision the physical hardware of CIS .

In some embodiments SVM may include or utilize processor s memory module s and storage component s . For example SVM may be communicatively connected to various resources via a system bus. In some embodiments processor s can include a microprocessor e.g. a trusted platform module TPM using trusted execution technology TXT CPU or any other like hardware based processing unit. In some embodiments SVM can be stored in memory module s which can include random access memory RAM read only memory ROM optical read write memory cache memory magnetic read write memory flash memory or any other non transitory computer readable medium. In some embodiments processor s and memory module s can be used to execute implement and or manage the operation of SVM . In some embodiments storage component s can include any storage medium or storage unit that is configured to store data accessible by processor s via a system bus. In some embodiments repository or portions thereof may utilize storage component s and or memory module s . In some embodiments repository and or storage component s can include or utilize one or more storage area networks.

As indicated above the subject matter disclosed herein can be implemented in software in combination with hardware and or firmware. For example the subject matter described herein can be implemented in software executed by a processor. In one exemplary implementation the subject matter described herein can be implemented using a computer readable medium having stored thereon computer executable instructions which when executed by a processor of a computer cause the computer to perform steps. Exemplary computer readable mediums suitable for implementing the subject matter described herein include non transitory devices such as disk memory devices chip memory devices programmable logic devices and application specific integrated circuits. In addition a computer readable medium that implements the subject matter described herein can be located on a single device or computing platform or can be distributed across multiple devices or computing platforms. For example SVM and or repository e.g. a system library or data therein may be located at a single computing system or may be distributed across one or more devices platforms and or systems. As used in the present disclosure the terms function or module refer to hardware firmware or software in combination with hardware and or firmware for implementing features described herein.

It will be appreciated that is for illustrative purposes and that various components their locations and or their functions as described above in relation to may be changed altered added or removed. Further while SVM is depicted as part of CIS in aspects of the present disclosure e.g. SVM may be implemented and or located on any computing system.

Referring to hardware data may represent information e.g. serial numbers GUIDs and or configuration information related to hardware components and modules such as chassis memory module s processor s network components compute components and or storage component s . Hardware measurements may represent measures values or other data for quantifying and or measuring hardware data . Exemplary hardware measurements may include hardware parameter values GUIDs and or serial numbers for various hardware related entities. Hardware fingerprint may represent an identifier e.g. a 64 bit signature or a hash value for identifying hardware related entities. For example SVM or a related entity may use a hashing algorithm and hardware measurements for generating hardware fingerprint .

Firmware data may represent information e.g. firmware version numbers and or configuration information related to firmware components and firmware related modules e.g. firmware in memory module s processor s network components compute components and or storage component s . Firmware measurements may represent measures values or other data for quantifying and or measuring firmware data . Exemplary firmware measurements may include firmware parameter values GUIDs firmware version numbers hash firmware values hash key firmware components firmware signature values and or serial numbers for various firmware related entities. Firmware fingerprint may represent an identifier e.g. a 64 bit signature or a hash value for identifying firmware related entities. For example SVM or a related entity may use a hashing algorithm and firmware measurements for generating firmware fingerprint .

Software data may represent information e.g. software version numbers and or configuration information related to software and software related modules e.g. software in memory module s processor s network components compute components and or storage component s . Software measurements may represent measures values or other data for quantifying and or measuring software data . Exemplary software measurements may include software parameter values GUIDs version numbers and or serial numbers for various software related entities. Software fingerprint may represent an identifier e.g. a 64 bit signature or a hash value for identifying software related entities. For example SVM or a related entity may use a hashing algorithm and software measurements for generating software fingerprint .

In some embodiments hardware measurements firmware measurements and or software measurements may be based on derived using or gathered from configuration information including information provided by client . For example a customer or client may complete a logical and or physical configuration survey and or identify configuration details from one or more security hardening guides. Exemplary configuration information usable for validation purposes can include accounts roles authentication methods permissions logging rules administrative communications running or active services disabled services and other information.

It will be appreciated that is for illustrative purposes and that additional and or different data and or measurements may be used to generate one or more fingerprints depicted in . For example a first CSC may be associated with a hardware fingerprint that is based on additional and or different hardware measurements than hardware fingerprint associated with a second CSC. In this example each hardware fingerprint can identify hardware associated with its respective CSC.

Referring to a hierarchy of fingerprints may be depicted. For example certain types of fingerprints may be aggregate fingerprints associated with one or more component fingerprint. Component fingerprints may represent fingerprints associated with CSCs. For example component fingerprint may represent a fingerprint associated with network component . In this example component fingerprint may be generated or based on hardware fingerprint firmware fingerprint and or software fingerprint associated with network component .

Environment fingerprints may represent fingerprints associated with operating environments e.g. groups of CSCs and or other portions of a computing system . For example environment fingerprint may represent a fingerprint associated with an environment containing compute component storage components s and network component . In this example environment fingerprint may be generated or based on component fingerprint component fingerprint and or component fingerprint .

System fingerprint may represent a fingerprint associated with a computing system. For example system fingerprint may represent a fingerprint associated with CIS including all CSCs and or environments therein. In this example system fingerprint may be generated or based on environment fingerprint and or environment fingerprint .

It will be appreciated that is for illustrative purposes and that additional and or different information may be used to generate one or more fingerprints depicted in . For example system fingerprint can be generated or based on hardware software and or configuration measurements associated with CSCs or environments with CIS along with fingerprints associated with these entities.

Referring to at step manufacturer may build configure and or assemble a computing system. For example manufacturer may use various CSCs in building and configuring CIS . Manufacturer may also assess the computing system to generate validation information. For example validation information may include known or expected values associated with the computing system and or other state information.

At step validation information may be secured and sent to customer . For example manufacturer may store validation information in an encrypted data file and send the encrypted data file to customer via a secure web based portal email or another service or method.

In some embodiments validation information may be exported using an XML data structure and may be uploaded to a customer portal. For example validation information may be part of or associated with a cryptographically signed file and or file hash value which may prevent or hinder third party from tampering with the validation information. In this example the validation information may be usable for various purposes e.g. customer support and or validating that a computing system has not been modified.

In some embodiments validation information may be sent out of band e.g. separately and or at different times from a related computing system . For example validation information for a computing system may be sent as an XML file in an encrypted email while the computing system may be delivered by a parcel delivery service.

At step manufacturer may attempt to send the computing system to customer . For example manufacturer may hire a carrier to transport a computing system to customer . In this example third party may intercept the computing system without the knowledge or consent of customer .

At step the computing system may be obtained and modified by third party . For example third party may be entity e.g. a foreign governmental agency a malicious organization or a competitor that is unauthorized by customer with regard to accessing or modifying a computing system. In this example third party may intercept the computing system via legal or illegal means and may modify the computing system e.g. for gathering intelligence and or for sabotage.

At step the computing system may be sent to customer . For example after being modified by third party third party may send the computing system to customer .

In some embodiments customer may load received validation information in SVM or another entity. For example customer may receive a secure data file and may decrypt and or validate that the secure data file has not been compromised e.g. modified to include fake or wrong information . In this example after validating received validation information customer may use the validation information to determine whether system tampering or other modifications occurred.

At step customer may use the validation information to validate the computing system and or its related supply chain. For example after receiving a computing system customer may use SVM to generate reference information e.g. state information or related information associated with the computing system and may compare the reference information with received validation information from manufacturer .

In some embodiments SVM and or another entity may generate or regenerate reference information and may time stamp this information to measure or detect differences in a computing system during various time periods. For example after receiving a computing system SVM may be configured to automatically re calculate fingerprints and or other measurements for every CSC in the computing system and compared this information against received validation information e.g. known or expected state information from manufacturer .

In some embodiments SVM and or another entity may use the validation information along with reference information to determine the integrity of the computing system and or portions there e.g. CSCs and or groups of CSCs such as a management infrastructure of CIS .

In some embodiments SVM and or another entity may generate and or provide information about a detected system modification. For example SVM may generate and display reference information alongside validation information provided by manufacturer . In this example SVM may utilize UI elements e.g. graphics and colors to emphasis differences between the data. In another example UI elements may be utilized to request or select detailed information about one or more modifications e.g. via an expandable tree list view.

In some embodiments SVM and or another entity may be configured to display or provide some information and or ignore some information about a system modification. For example SVM may be configured to ignore known drift or expected changes that typically occur upon receipt. In this example the known changes may be ignored or de emphasized such that unexpected or unknown changes are emphasized to the user.

It will be appreciated that is for illustrative purposes and that additional and or different steps than those depicted in may be used to validate a supply chain and or a computing system. Additionally it will be appreciated that steps depicted in may occur in a different order than depicted. For example steps may occur prior to or concurrently with step .

At step validation information for validating a computing system is received. The validation information may be from a source entity and received via an out of band delivery. In some embodiments the validation information may be derived e.g. received obtained and or based on information from one or more components e.g. CSCs of the computing system e.g. CIS .

In some embodiments a source entity e.g. an entity that provides a computing system and related validation information can include a seller or a manufacturer of a computing system. For example a source entity may include a seller or a manufacturer of CIS .

In some embodiments an out of band delivery involving validation information can be separate from a delivery of a computing system. For example prior to delivering a computing system e.g. CIS to a customer the manufacturer may generate validation information e.g. a system fingerprint associated with the computing system and store the validation information in a secure e.g. encrypted or signed XML file. In this example the manufacturer may provide the secure XML file to the customer via a digital delivery e.g. via the Internet social media an email or a text message or a physical delivery e.g. via a printout a CD ROM a flash drive or a hard drive .

In some embodiments validation information may be received via at least one member selected from a group consisting of an application programming interface API related message a representational state transfer REST API related message an XML related message a file transfer protocol FTP message a secure FTP SFTP message an hypertext transfer protocol HTTP message and some other technique.

In some embodiments validation information can be encrypted by the source entity e.g. prior to being sent to SVM . For example validation information may be stored in a file that is encrypted using advanced encryption standard AES with a key length of 256 bits AES 256 or another encryption standard and or key length e.g. AES 128 AES 512 Twofish 256 or pretty good privacy PGP .

In some embodiments validation information can include at least one member selected from a group consisting of a software measurement a hardware measurement a firmware measurement a serial number a GUID a version number configuration information and a fingerprint created obtained or derived from one or more of the components of the CIS .

At step it is determined using the validation information and reference information associated with the computing system whether a configuration of the computing system has been modified. For example when CIS is delivered to a customer SVM may be configured to identify or determine reference information e.g. measurements and or fingerprints representing current state information associated with CIS . In this example SVM may use the reference information and the validation information to determine whether any unexpected or unwanted differences are detected.

In some embodiments a configuration of a computing system can include hardware firmware and or software. For example a computing system may have a known configuration that includes particular CSCs such as memory module s processor s network components compute components and or storage component s . In this example any modification of one or more of these CSCs may indicate system tampering or modification.

In some embodiments determining whether the computing system has been modified can include determining the reference information associated with the computing system e.g. by identifying and or generating related fingerprints and comparing the reference information and the validation information.

At step in response to determining that the configuration of the computing system has been modified information about a system modification is generated. For example SVM may generate relevant information about a system modification e.g. reversion instructions and or identities of potential responsible parties and may inform a user e.g. via a GUI or other user interface that the computing system has been modified. In this example SVM may indicate detected discrepancies between validation information provided by a manufacturer and reference information generated at reception.

In some embodiments an exemplary user interface for providing information about a system modification may include UI elements that allow a user to drill down and or receive details about a system modification including general advice and or potential mitigation actions to perform e.g. actions for automatically reverting the detected system modification or for quarantining a compromised component or system portion.

In some embodiments a computing system to be validated can include at least one member selected from a group consisting of a CIS a computing platform a computing device multiple computing platforms multiple computing devices a backend computing system a network connected computing system and a computing system comprising components from various manufacturers.

It will be understood that various details of the subject matter described herein may be changed without departing from the scope of the subject matter described herein. Furthermore the foregoing description is for the purpose of illustration only and not for the purpose of limitation as the subject matter described herein is defined by the claims as set forth hereinafter.

