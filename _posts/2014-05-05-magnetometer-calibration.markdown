---

title: Magnetometer calibration
abstract: A real-time calibration system and method for a mobile device having an onboard magnetometer uses an estimator to estimate magnetometer calibration parameters and a magnetic field external to the mobile device (e.g., the earth magnetic field). The calibration parameters can be used to calibrate uncalibrated magnetometer readings output from the onboard magnetometer. The external magnetic field can be modeled as a weighted combination of a past estimate of the external magnetic field and the asymptotic mean of that magnetic field, perturbed by a random noise (e.g., Gaussian random noise). The weight can be adjusted based on a measure of the statistical uncertainty of the estimated calibration parameters and the estimated external magnetic field. The asymptotic mean of the external magnetic field can be modeled as a time average of the estimated external magnetic field.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09229084&OS=09229084&RS=09229084
owner: Apple Inc.
number: 09229084
owner_city: Cupertino
owner_country: US
publication_date: 20140505
---
This application is a divisional of and claims priority to U.S. application Ser. No. 12 899 392 entitled Magnetometer Calibration filed on Oct. 6 2010 the entire contents of which are incorporated herein by reference.

This disclosure relates generally to sensor measurement calibration and more particularly to calibrating magnetometer readings on a mobile device.

Modern mobile devices may include a variety of applications that depend on an accurate estimate of device location such as a map application or location based services LBS application. An integrated Global Positioning System GPS receiver and onboard sensors e.g. accelerometers gyroscopes can be used to determine location and orientation of the device and even provide a rough estimate of heading. To improve heading accuracy a magnetometer can be included on the device. Conventional magnetometer calibration procedures may require the user to maneuver the device in a defined pattern to generate data that can be used to calibrate the magnetometer. Such manual calibration procedures are required to be performed each time the magnetometer error exceeds a threshold value. Additionally the user may have to repeat the calibration procedure if performed incorrectly.

A real time calibration system and method for a mobile device having an onboard magnetometer uses an estimator to estimate magnetometer calibration parameters and a magnetic field external to the mobile device e.g. the earth magnetic field . The calibration parameters can be used to calibrate uncalibrated magnetometer readings output from the onboard magnetometer. The external magnetic field can be modeled as a weighted combination of a past estimate of the external magnetic field and the asymptotic mean of that magnetic field perturbed by a random noise e.g. Gaussian random noise . The weight can be adjusted based on a measure of the statistical uncertainty of the estimated calibration parameters and the estimated external magnetic field. The asymptotic mean of the external magnetic field can be modeled as a time average of the estimated external magnetic field.

In some implementations a differential statistics calculator can be used to determine differences between the calibrated magnetometer readings i.e. raw magnetometer readings corrected by estimated calibration parameters and the estimated external magnetic field projected into device coordinates. This enables possible detection as well as resolution of magnetic interference that can adversely affect heading calculations.

In some implementations a compass heading calculator can use the estimated external magnetic field and a three dimensional attitude estimate of the device to provide a responsive heading vector. A calibration level can be used with a World Magnetic Model WMM to determine compass heading accuracy.

In some implementations the attitude of the mobile device may not be available or accurate enough to estimate magnetometer calibration parameters. In such situations an attitude independent estimator can use an algebraic linearization formulation of a canonical calibration equation to estimate the bias vector based on an assumption that calibrated magnetometer readings lie on the surface of a sphere.

Various implementations of the subject matter described here may provide one or more of the following advantages. In one or more implementations the usage of the mobile device attitude information enables a more stable and more accurate estimation of magnetometer calibration parameters. More importantly accurate calibration can be achieved with less user motion e.g. less data required resulting in a speed up of the calibration process. Thus the magnetometer can be calibrated using motion data generated from a user s normal use of the mobile device without explicit user intervention.

Another advantage is provided by using the estimated external magnetic field projected into the device coordinate frame to provide smooth responsive calibrated magnetometer output that results in a more accurate and lag free heading vector for navigation applications running on the mobile device. Without the estimated external magnetic field calibrated magnetometer readings are obtained from raw uncalibrated readings corrected by the estimated calibration parameters. Since the raw readings are usually noisy the resulting magnetometer heading vectors have to be smoothed by a low pass filter which introduces noticeable lag.

The details of one or more implementations of magnetometer calibration are set forth in the accompanying drawings and the description below. Other features aspects and advantages will become apparent from the description the drawings and the claims.

The mobile device can include a display surface for presenting a user interface for facilitating user input to compass application . The display can be a touch sensitive surface capable of responding to multi touch input with one or more fingers or a stylus. One or more user interface display navigation aids such as a compass and or map can be presented on the display. In some implementations a heading is generated and presented on the display as text or graphical object e.g. a virtual compass with a needle or as audio output if the mobile device includes an acoustic speaker or headphone jack.

In some implementations raw or uncalibrated magnetometer readings are input to attitude dependent calibrator . The readings can be read from a magnetometer onboard the mobile device. A magnetometer is an instrument that can sense the strength and direction of the magnetic field in its vicinity. Magnetometers are useful for applications that require dead reckoning or headings such as navigation applications for vehicles aircraft watercraft and mobile devices e.g. smart phones . Electronic magnetometers are commercially available as integrated circuit chips.

Using the magnetometer for attitude and navigation aiding requires that any magnetic fields that are not caused by the Earth be accounted for. A calibration process can be used to remove magnetic forces caused by magnetic objects on the sensing device. For most magnetometers the bias error calibration on each of the three magnetometer axes are of main interest. For more accurate calibration the scale factor error for each axis can also be estimated. The bias errors can be specified in milliGauss mG and the scale factor errors can be fractions of one. A magnetic field correction can be performed by attitude dependent calibrator for each axis using the calibration parameters as described in reference to . The calibration parameters can be stored in calibration database for use in other processes.

In some implementations attitude dependent calibrator also receives device motion data as input. Device motion data can include attitude quaternion right arrow over q which provides the attitude orientation of the mobile device in a global reference coordinate frame and a gravitational acceleration vector right arrow over g in a device coordinate frame. The attitude quaternion right arrow over q can be derived from an angular rate sensor such as a gyroscope sensor e.g. a MEMS gyro sensor . The gyroscope sensor can sense angular rates about two or three axes of rotation e.g. roll pitch yaw . In some implementations the raw angular rate data is integrated into angular displacements and transformed into the attitude quaternion right arrow over q . In some implementations the angular rate data can be read in a three dimensional Cartesian sensor coordinate system and transformed to device coordinates using an appropriate coordinate transformation matrix Tor quaternion.

An output of attitude dependent calibrator is the calibrated magnetometer reading vector right arrow over r and an estimated external magnetic field vector right arrow over m in device coordinates. The estimated external magnetic field vector right arrow over m and gravitational acceleration vector right arrow over g can be input into compass heading calculator . Compass heading calculator can calculate a smooth heading of the mobile device from right arrow over m and right arrow over g using equations 1 5 as follows 

The smooth and lag free heading is a result of using the estimated external magnetic field vector right arrow over m rather than a low pass filtered calibrated magnetometer reading vector right arrow over r . Some magnetometer calibration systems apply a low pass filter to remove high frequency noise from right arrow over r . Such noise can cause jitter in a compass needle or indicator. A low pass filter can be applied to remove the jitter. The low pass filter however can cause a noticeable lag in a compass reading update. Using the estimated external magnetic field vector right arrow over m rather than a low pass filtered calibrated magnetometer reading vector right arrow over r removes the undesirable lag. 

In some implementations a calibration level lis output from attitude dependent calibrator or of and input into compass heading accuracy calculator where it can be used with the WMM and the heading output from compass heading calculator to compute a compass accuracy that is suitable for display to a user of compass application . Compass heading accuracy can be calculated by comparing the estimated inclination angle to that of the Earth field stored in the WMM modulated by calibration level l.

In some implementations an optional smoothing filter e.g. a low pass filter can be applied to a small buffer of uncalibrated magnetometer readings for less noisy raw input. Misalignment filter can be applied to the attitude quaternion right arrow over q to filter out attitude data that are misaligned with the raw magnetometer reading right arrow over r caused by differing sampling rates of the two. The output of misalignment filter can be an attitude matrix A e.g. direction cosine matrix which can be used to transform vector data from global reference coordinates to device coordinates.

In some implementations the uncalibrated magnetometer readings right arrow over r and the attitude matrix A are input into estimator . Attitude matrix can be a world to device coordinate transformation matrix A.

Estimator can be configured to provide estimates of bias and scale factor error vectors right arrow over b and right arrow over s and an estimate of the external magnetic field vector right arrow over m . In some implementations estimator can be a Kalman Filter KF formulation that estimates a state vector right arrow over x given by right arrow over x b bb s s s m m m . 6 

In some implementations an estimate of right arrow over m at time t can be calculated as a weighted combination of a past estimate of right arrow over m at time t 1 and an estimate of the asymptotic mean of right arrow over m denoted as vector right arrow over e and a random noise variable w e.g. Gaussian random noise which can be given by the formula 1 1 1 square root over 1 1 7 where is a dynamically adjusted tuning parameter valued between 0 1 right arrow over e is the asymptotic mean of right arrow over m given by a mean magnetic field model wis a random noise variable e.g. Gaussian random noise with zero mean and a standard deviation denoted as where in some implementations w N 0 . The asymptotic mean of the external magnetic field right arrow over e can be modeled mathematically as

In some implementations is dynamically adjusted based on the sum of the elements on the main diagonal or trace of the error covariance tr P . The trace of the error covariance matrix indicates the convergence properties of the estimator . The value of the trace tr P decreases as the estimation process converges. The tuning parameter can be dynamically adjusted to provide greater fidelity of right arrow over m in the beginning of the estimation process e.g. relies more on contributions of right arrow over m and then stabilizes towards the end of the estimation process when good convergence properties are indicated by the near zero trace of the error covariance tr P . For example may be initially set to 1.0 and then adjusted during the estimation process to a number less than 1.0 e.g. 0.4 as estimator converges resulting in the mean external magnetic vector right arrow over e having an increased contribution to the estimate of right arrow over m . Other methods can also be used to determine if the error covariance P has converged.

The state vector right arrow over x and an error covariance P can be updated using well known Kalman Filter formulations which typically include a time update phase and a measurement update phase as follows 

In some implementations the state transition matrix initial error covariance matrix P process noise matrix Q measurement matrix H measurement noise matrix R and state vector input Bright arrow over u are given by

The output of estimator includes estimates of bias and scale factor error vectors right arrow over b and right arrow over s and an estimate of the external magnetic field vector right arrow over m .

As shown in equation 7 right arrow over m is used to update the model of the external magnetic vector right arrow over m at time t. In addition right arrow over m which is in a global reference coordinates defined by the attitude matrix A is transformed to an external magnetic field vector in device coordinates right arrow over m using device coordinate transform e.g. attitude matrix A as follows right arrow over m Aright arrow over m . 20 

Calibration module receives estimated vectors right arrow over b and right arrow over s from estimator and calculates right arrow over r from uncalibrated magnetometer readings right arrow over r using the formula 21 where Iis a 3 3 identity matrix.

The estimated external magnetic field vector right arrow over m can be used by other functions of compass application or by other applications. For example right arrow over m and right arrow over r can be used by differential statistics calculator to calculate differential statistics based on a difference between right arrow over m and right arrow over r . For example the mean and variance of the magnitude difference dMag as well as the angle difference dAngle between right arrow over m and right arrow over r over a sliding window of time can provide a measure of deviation between right arrow over m and right arrow over r which if large can indicate the presence of magnetic interference typically from a magnetic object in the vicinity of the mobile device.

In some implementations attitude dependent calibrator includes drift handler for correcting the possible effects of accumulated yaw error in the attitude A e.g. caused by gyro scale factor error on the output of calibrator . Drift handler can receive statistics on dMag and dAngle from differential statistics calculator and use them to determine whether there is a yaw drift. For example if dAngle is small and varies primarily around gravity right arrow over g e.g. indicating yaw error and dMag is within a normal threshold drift handler sends a resync signal to resync module . In response to the resync signal resync module can correct right arrow over m based on right arrow over r .

In some implementations calibration level calculator calculates a calibration level lbased on the convergence properties on the bias vector estimates right arrow over b . More specifically a convergence measure is calculated based on the diagonal elements corresponding to the bias states in the error covariance matrix P and the standard deviation of the last n estimated bias values where n depends on the rate at which the calibrator is receiving magnetometer samples. For example a set of discrete calibration levels can be defined based on calculating the portion of tr P corresponding to the bias states and comparing the result to the threshold values defined for each calibration level l. In addition a standard deviation of the n bias values can also be calculated to determine if the bias values are stable e.g. the standard deviation is small . The calibration level lcan be used by compass heading calculator to compute compass accuracy e.g. compute error bounds .

In some implementations lcan be an integer representing a level of calibration accuracy where the larger the integer the greater the accuracy of the calibration. For example l 2 means a less accurate calibration than l 5. In some implementations lcan be used to reset the error covariance P. In some implementations when it is necessary to reset estimator from prior knowledge of a set of roughly correct calibration bias scale factor vectors and associated calibration level l lcan be used to initialize the error covariance matrix P as a fraction of the initial Pwhen no prior knowledge is available.

The calibration level lis also input into reset module where it is used with the corresponding set of calibration vectors right arrow over b and right arrow over s to trigger a reset of state vector right arrow over x and error covariance P of estimator . This ensures that estimates of vectors right arrow over b right arrow over s and right arrow over m stay adaptive to changing environments without the need of explicit user intervention such as a manual recalibration procedure performed by the user.

In some implementations interference handler receives deviation statistics from differential statistics calculator and uses the statistics to determine if a magnetic interference event has occurred. For a mobile device that includes components like a vibrator and an acoustic speaker the operation of these components can cause magnetic interference noise that can be picked up by the magnetometer sensor. Environmental magnetic interference is also commonplace in any metropolitan setting. To minimize the side effects caused by such interferences on the output of estimator interference handler can be configured to detect onset as well as disappearance of magnetic interference based on thresholding the output of the differential statistics calculator . For example in response to the delta magnitude dMag exceeding an interference threshold an interference detected signal can be sent to coasting module . During coast mode a recently stored right arrow over m when no interference was detected can be used instead of the current estimate of right arrow over m to compute the output right arrow over m and heading . When the magnetic interference falls below the interference threshold coasting stops. When a detected interference lasts beyond a time threshold a reset signal is sent to reset module causing it to reset estimator in order to re estimate the calibration vectors right arrow over b and right arrow over s . Based on the last calibration level l reset module can reset the error covariance P with new values e.g. larger values that will cause estimator to converge again on new magnetometer readings right arrow over r . The state vector right arrow over x can be reset with the last estimates of right arrow over b and right arrow over s . The new estimates can be used if they are stable and the interference is still present after a prolonged period of time indicating that the previous calibration estimates are likely inaccurate.

In some implementations the attitude of the mobile device may not be available or accurate enough to estimate magnetometer calibration parameters. In such situations an estimator can use an algebraic linearization formulation of a canonical calibration equation to estimate the bias vector based on an assumption that calibrated magnetometer readings lie on the surface of a sphere. The presence of a bias error vector will cause the center of the sphere to be offset from the origin of the magnetometer coordinate frame. The presence of scale factor error will cause the sphere to distort into an ellipsoid. This effect can be modeled by the general equation for an ellipsoid. When bias error and scale factor error are zero equation 22 below gives the equation of a sphere having its center at the origin of a three dimensional Cartesian reference coordinate frame 

A linear estimator e.g. a linear Kalman Filter can be used to estimate bias while avoiding the computational complexity and likely inaccuracies that would be introduced due to linear approximation that would be introduced by non linear estimator models e.g. an extended Kalman Filter . The algebraic linearization formulation introduces an intermediate unknown variable derived from the unknown radius of the sphere R and the unknown bias vector right arrow over b given by . 23 

The state vector right arrow over x of the estimator is thus given by right arrow over x b b b 24 where is modeled by 1 square root over 1 25 where is a weighting factor valued in 0 1 is an estimate of the asymptotic mean of and is a random variable e.g. Gaussian random variable with a certain given variance and zero mean. can be modeled separately as a time average of all past estimates of .

The state vector and error covariance matrix can be updated using the Kalman Filter formulation of equations 9 19 .

In some implementations process can begin when attitude dependent calibrator operating on a mobile device receives uncalibrated magnetometer readings and attitude data indicating a current attitude of the mobile device . The attitude data can be in the form of a direction cosine matrix or a quaternion. The attitude can be based on gyro sensor readings from an onboard gyro sensor and accelerometer readings from an onboard accelerometer.

The magnetometer readings and attitude data are input to an estimator which estimates magnetometer calibration parameters and an external magnetic field vector based on the uncalibrated magnetometer readings attitude data and a model of the asymptotic mean of the external magnetic field . In some implementations the calibration parameters can include bias and scale factor errors or just bias errors. In some implementations the estimator can be implemented using a Kalman Filter formulation. The external magnetic field vector can be modeled as a weighted combination of the estimate of the external magnetic field at the previous time step and a model of the asymptotic mean of the field perturbed by zero mean noise e.g. Gaussian noise using for example equation 7 . In some implementations the asymptotic mean of the magnetic field is modeled as a time average of past estimates of the external magnetic field using for example equation 8 . The weighting can be a dynamically adjustable tuning parameter which can be adjusted based on convergence properties of the estimator. For example if the estimator is a Kalman Filter then the trace of the main diagonal of the error covariance matrix can be used to determine the amount of adjustment during the estimation process. The smaller the trace the smaller the value of the tuning parameter as shown in equation 7 .

The estimated calibration parameters are used to calibrate the uncalibrated magnetometer readings using for example equation 21 .

Heading can be calculated using the estimated external magnetic field and gravity estimate projected into device coordinates using for example equations 1 5 . Optionally heading accuracy can be calculated using the calculated heading a calibration level and a WMM .

Sensors devices and subsystems can be coupled to peripherals interface to facilitate multiple functionalities. For example motion sensor light sensor and proximity sensor can be coupled to peripherals interface to facilitate orientation lighting and proximity functions of the mobile device. Location processor e.g. GPS receiver can be connected to peripherals interface to provide geopositioning. Electronic magnetometer e.g. an integrated circuit chip can also be connected to peripherals interface to provide data that can be used to determine the direction of magnetic North. Thus electronic magnetometer can be used as an electronic compass. Accelerometer can also be connected to peripherals interface to provide data that can be used to determine change of speed and direction of movement of the mobile device.

Camera subsystem and an optical sensor e.g. a charged coupled device CCD or a complementary metal oxide semiconductor CMOS optical sensor can be utilized to facilitate camera functions such as recording photographs and video clips.

Communication functions can be facilitated through one or more wireless communication subsystems which can include radio frequency receivers and transmitters and or optical e.g. infrared receivers and transmitters. The specific design and implementation of the communication subsystem can depend on the communication network s over which a mobile device is intended to operate. For example a mobile device can include communication subsystems designed to operate over a GSM network a GPRS network an EDGE network a WiFi or WiMax network and a Bluetooth network. In particular the wireless communication subsystems can include hosting protocols such that the mobile device can be configured as a base station for other wireless devices.

Audio subsystem can be coupled to a speaker and a microphone to facilitate voice enabled functions such as voice recognition voice replication digital recording and telephony functions.

I O subsystem can include touch screen controller and or other input controller s . Touch screen controller can be coupled to a touch screen or surface . Touch screen or surface and touch screen controller can for example detect contact and movement or break thereof using any of a plurality of touch sensitivity technologies including but not limited to capacitive resistive infrared and surface acoustic wave technologies as well as other proximity sensor arrays or other elements for determining one or more points of contact with touch screen .

Other input controller s can be coupled to other input control devices such as one or more buttons rocker switches thumb wheel infrared port USB port and or a pointer device such as a mouse or stylus. The one or more buttons not shown can include an up down button for volume control of speaker and or microphone .

In one implementation a pressing of the button for a first duration may disengage a lock of the touch screen and a pressing of the button for a second duration that is longer than the first duration may turn power to the device on or off. The user may be able to customize a functionality of one or more of the buttons. The touch screen can for example also be used to implement virtual or soft buttons and or a virtual keyboard.

In some implementations the device can present recorded audio and or video files such as MP3 AAC and MPEG files. In some implementations the device can include the functionality of an MP3 player. The device may include a pin connector that is compatible with accessories.

Memory interface can be coupled to memory . Memory can include high speed random access memory and or non volatile memory such as one or more magnetic disk storage devices one or more optical storage devices and or flash memory e.g. NAND NOR . Memory can store operating system such as Darwin RTXC LINUX UNIX OS X WINDOWS or an embedded operating system such as VxWorks. Operating system may include instructions for handling basic system services and for performing hardware dependent tasks. In some implementations operating system can include a kernel e.g. UNIX kernel .

Memory may also store communication instructions to facilitate communicating with one or more additional devices one or more computers and or one or more servers. Memory may include graphical user interface instructions to facilitate graphic user interface processing sensor processing instructions to facilitate sensor related processing and functions phone instructions to facilitate phone related processes and functions electronic messaging instructions to facilitate electronic messaging related processes and functions such as SMS and MMS web browsing instructions to facilitate web browsing related processes and functions media processing instructions to facilitate media processing related processes and functions GPS Navigation instructions to facilitate GPS and navigation related processes and instructions and camera instructions to facilitate camera related processes and functions. The memory may also store other software instructions not shown such as security instructions web video instructions to facilitate web video related processes and functions and or web shopping instructions to facilitate web shopping related processes and functions.

Memory can include instructions for magnetometer calibration and associated calibration data as well as other instructions for implementing the feature user interfaces and processes described in reference to .

Each of the above identified instructions and applications can correspond to a set of instructions for performing one or more functions described above. These instructions need not be implemented as separate software programs procedures or modules. Memory can include additional instructions or fewer instructions. Furthermore various functions of the mobile device may be implemented in hardware and or in software including in one or more signal processing and or application specific integrated circuits.

In some implementations both voice and data communications can be established over wireless network and the access device . For example mobile device can place and receive phone calls e.g. using voice over Internet Protocol VoIP protocols send and receive e mail messages e.g. using Post Office Protocol 3 POP3 and retrieve electronic documents and or streams such as web pages photographs and videos over wireless network gateway and wide area network e.g. using Transmission Control Protocol Internet Protocol TCP IP or User Datagram Protocol UDP . Likewise in some implementations the mobile device can place and receive phone calls send and receive e mail and text messages and retrieve electronic documents over the access device and the wide area network . In some implementations device or can be physically connected to the access device using one or more cables and the access device can be a personal computer. In this configuration device or can be referred to as a tethered device.

Devices and can also establish communications by other means. For example wireless device can communicate with other wireless devices e.g. other devices or cell phones etc. over the wireless network . Likewise devices and can establish peer to peer communications e.g. a personal area network by use of one or more communication subsystems such as the Bluetooth communication devices. Other communication protocols and topologies can also be implemented.

Device or can communicate with a variety of network services over the one or more wired and or wireless networks. In some implementations network services can include mobile device services . Mobile device services can provide a variety of services for device or including but not limited to calibration services mail services text messaging chat sessions videoconferencing Internet services location based services e.g. map services sync services remote storage downloading services etc. Remote storage can be used to store calibration data which can be made available to other users.

Device or can also access other data and content over the one or more wired and or wireless networks. For example content publishers such as news sites Rally Simple Syndication RSS feeds web sites blogs social networking sites developer networks etc. can be accessed by device or . Such access can be provided by invocation of a web browsing function or application e.g. a browser in response to a user touching for example a Web object.

The described features can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. A computer program is a set of instructions that can be used directly or indirectly in a computer to perform a certain activity or bring about a certain result. A computer program can be written in any form of programming language e.g. Objective C Java including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment.

Suitable processors for the execution of a program of instructions include by way of example both general and special purpose microprocessors and the sole processor or one of multiple processors or cores of any kind of computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. Some elements of a computer are a processor for executing instructions and one or more memories for storing instructions and data. Generally a computer will also include or be operatively coupled to communicate with one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in ASICs application specific integrated circuits .

To provide for interaction with a user the features can be implemented on a computer having a display device such as a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device such as a mouse or a trackball by which the user can provide input to the computer.

The features can be implemented in a computer system that includes a back end component such as a data server or a middleware component such as an application server or an Internet server or that includes a front end component such as a client computer having a graphical user interface or an Internet browser or any combination of them. The components of the system can be connected by any form or medium of digital data communication such as a communication network. Examples of communication networks include e.g. a LAN a WAN and the computers and networks forming the Internet.

The computer system can include clients and servers. A client and server are generally remote from each other and typically interact through a network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

One or more features or steps of the disclosed embodiments can be implemented using an Application Programming Interface API . An API can define on or more parameters that are passed between a calling application and other software code e.g. an operating system library routine function that provides a service that provides data or that performs an operation or a computation.

The API can be implemented as one or more calls in program code that send or receive one or more parameters through a parameter list or other structure based on a call convention defined in an API specification document. A parameter can be a constant a key a data structure an object an object class a variable a data type a pointer an array a list or another call. API calls and parameters can be implemented in any programming language. The programming language can define the vocabulary and calling convention that a programmer will employ to access functions supporting the API.

In some implementations an API call can report to an application the capabilities of a device running the application such as input capability output capability processing capability power capability communications capability etc.

A number of implementations have been described. Nevertheless it will be understood that various modifications may be made. For example elements of one or more implementations may be combined deleted modified or supplemented to form further implementations. Yet another example the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

