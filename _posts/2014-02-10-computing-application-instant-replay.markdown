---

title: Computing application instant replay
abstract: Various embodiments relating to providing video game instant replays are disclosed. In one embodiment, a currently playing video game is overseen by a platform-level instant replay companion that executes separately from any of a plurality of different video games. A most recently played portion of rendered gameplay from the currently playing video game is automatically and continuously recorded with the platform-level instant replay companion. A recorded gameplay segment from the most recently played portion of rendered gameplay is displayed with the platform-level instant replay companion.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09498717&OS=09498717&RS=09498717
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09498717
owner_city: Redmond
owner_country: US
publication_date: 20140210
---
When viewers watch live video broadcasts events may occur that may be of particular interest to the viewers. Such events having already been broadcast live may be replayed during the live broadcast shortly after the live occurrence in order for the viewers to analyze and enjoy again what has already taken place. Similarly when users are playing video games events may occur during live gameplay that are of particular interest to the users and the users may desire to view such events after they occur.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

Various embodiments relating to providing video game instant replays are disclosed. In one embodiment a currently playing video game is overseen by a platform level instant replay companion that executes separately from any of a plurality of different video games. A most recently played portion of rendered gameplay from the currently playing video game is automatically and continuously recorded with the platform level instant replay companion. A recorded gameplay segment from the most recently played portion of rendered gameplay is displayed with the platform level instant replay companion.

This description relates to providing instant replay functionality for any video game at a platform level of a computer gaming device. More particularly this description relates to displaying a recorded gameplay segment from a most recently played portion of rendered gameplay. For example the recorded gameplay segment may be displayed with a platform level instant replay companion that is executed separate from any particular video game of the computer gaming device. Accordingly the recorded gameplay segment may be viewed through a common platform controlled experience.

The computer gaming device includes an operating system configured to manage hardware resources of the computer gaming device. Further the operating system may be configured to monitor oversee or otherwise manage operation of various software programs services and applications running on the computer gaming device . For example a video game may be executed or played on the computer gaming device and the operating system may manage operation of the video game. The video game may be one of a plurality of different video games that the computer gaming device is configured to play.

Furthermore a platform level instant replay companion A and or platform level instant replay companion B may be executed on the computer gaming device. In particular the platform level instant replay companion may be executed separately from the video game and any other video games of the plurality of different video games configured to be played on the computer gaming device . In one example a platform level replay companion A is an application that runs while the video game is being played. In another example a platform level instant replay companion B is a part of the operating system.

The platform level instant replay companion may be configured to oversee any currently playing video game on the computer gaming device and provide instant replay functionality for that currently playing video game. In particular since the instant replay companion is executed at the platform level and not within any particular video game the instant replay functionality provided by the instant replay companion may be the same for every video game played on the computer gaming device. Moreover video games that are compatible with the computer gaming device may be made less complex relative to video games with built in game specific instant replay functionality. Game developers need not design game specific instant replay experiences. Rather every video game may interface with the platform level instant replay companion for instant replay functionality without additional effort from the developer. Such instant replay functionality will be discussed in further detail below with reference to an instant replay method shown in .

The graphics pipeline comprises one or more central processing units CPU one or more graphics processing units GPU an encoder a random access memory RAM device including a ring buffer a decoder an input output interface device a storage device and a display . It will be understood that the graphics pipeline may include additional and or alternative processing logic and other hardware blocks without departing from the scope of this disclosure.

In one example the CPU fetches game instructions from the video game . The CPU decodes the instructions into game data including drawing instructions for rendering video imagery of gameplay of the video game . The CPU passes the drawing instructions and other game data to the GPU . The GPU executes the drawing instructions to produce rendered image frames of the video game also referred to as rendered gameplay data . For example the image frames output from the GPU may be raw or uncompressed image data e.g. every pixel in an image frame has full color definition . The GPU sends the rendered gameplay data for display on the display .

Additionally the GPU sends the raw image frames of the rendered gameplay to the encoder to be compressed or otherwise encoded. For example the raw image frames may be encoded into MPEG 4 H.264 or another suitable image format. The encoder sends the encoded rendered gameplay data to the RAM device for recording in the ring buffer . The RAM device may include any suitable type of memory including SDRAM e.g. DDR GDDR etc. . Moreover the RAM device may be any suitable size.

In some embodiments the CPU and the GPU may be combined in a single package. In some embodiments the CPU or the GPU may be omitted. In some embodiments the RAM device may be integrated with the CPU and or GPU in a system on chip SOC configuration.

The ring buffer may be automatically and continuously loaded with rendered gameplay data from the encoder until filled. Once the ring buffer is filled an oldest portion of rendered gameplay data may be overwritten with new rendered gameplay data. Accordingly a most recently played portion of rendered gameplay from a currently playing video game may be automatically recorded in the ring buffer in a continuous fashion. The ring buffer may be any suitable size. In one example the ring buffer has a capacity of five minutes worth of rendered gameplay data. In other words the ring buffer continuously records the most recent five minutes of gameplay of the currently playing video game.

It will be understood that the ring buffer is merely one example of a storage mechanism and the rendered gameplay data may be stored in the RAM device in any suitable fashion. For example the rendered gameplay may be recorded in any suitable storage mechanism that abides by the first in first out FIFO principle.

When an instant replay is requested during gameplay of the currently playing video game a recorded gameplay segment from the most recently played portion of rendered gameplay stored in the ring buffer may be sent to the decoder .

It will be understood that the recorded gameplay segment may include any suitable amount of the rendered gameplay data stored in the ring buffer. For example the recorded gameplay segment may include some or all of the rendered gameplay data stored in the ring buffer. In one example a default length of the recorded gameplay segment is thirty seconds. In some embodiments a length of the recorded gameplay segment used for instant replay may be adjusted via the platform level instant replay companion. In some embodiments a length of the recorded gameplay segment used for instant replay may be adjusted on a per video game basis for example according to a parameter specified by the video game via an application programming interface API .

The decoder decodes the encoded rendered gameplay data of the recorded gameplay segment into raw gameplay data and sends the raw rendered gameplay data directly to the display . The display displays the recorded gameplay segment. In some embodiments the recorded gameplay segment is displayed while a game state of the currently playing video game is displayed. In particular the GPU continues to send current rendered gameplay data to the display during the instant replay. It will be understood that the rendered game state of the currently playing video game can be combined with the recorded gameplay segment in any suitable manner and or according to any suitable visual layout.

In some cases the game state includes a paused game state and in other cases the game state includes a current active game state. For example in a single player video game scenario the game state may be paused during the instant replay. In this scenario a static image of a virtual scene of the currently playing video game may be displayed while the instant replay of the recorded gameplay segment is displayed. In other words in the paused state a game state of the currently playing video game may not change while the recorded gameplay segment is displayed. In another example in a multiplayer video game scenario the game state may be a current active game state where other players continue to play the video game during the instant replay. In this scenario video images of a current state of a virtual scene of the currently playing video game may be displayed while the instant replay of the recorded gameplay segment is displayed. For example virtual characters may move and perform various actions within the virtual scene according to the current game state. In other words in the current active game state a game state of the currently playing video game may change while the recorded gameplay segment is displayed.

It will be understood that because the gameplay data that is recorded to the ring buffer is rendered by the GPU prior to being recorded the recorded rendered gameplay segment may be displayed directly from the ring buffer without having to be reprocessed by the GPU. Such an approach facilitates display of an instant replay on demand with little or no lag time. On the other hand if game data that is not rendered is recorded to the ring buffer then the game data would have to be rendered by the GPU before being displayed which may slow down the replay process.

In some embodiments the encoder and the decoder may be incorporated with the RAM device and the GPU sends the raw rendered gameplay data directly to the RAM device. Correspondingly in such embodiments the RAM device sends a recorded gameplay segment directly to the display for instant replay.

In some embodiments the encoder selectively sends the encoded rendered gameplay data to the storage device for long term storage such as in the case of a video game digital video recorder DVR . For example the rendered gameplay data may be sent to the storage device in response to user selection of a particular gameplay segment of the currently playing video game that the user desires to view again at a later time. In another example the video game may automatically select a particular gameplay segment for storage in the storage device . For example a gameplay segment may be automatically selected for storage in a video game DVR responsive to a user achieving a new high score accomplishing a game determined feat e.g. defeating AI boss defeating multi player opponent encountering multi player friend etc. or otherwise having an in game experience that the video game deems worthy.

For storage of rendered gameplay data the encoder sends the encoded rendered gameplay data to the input output interface device and the input output interface device performs a write operation to write the encoded rendered gameplay data to the storage device . Correspondingly for retrieval of rendered gameplay data the input output interface device performs a read operation on the storage device to retrieve the encoded rendered gameplay data. It will be understood that the storage device may take any suitable form including a hard disk drive solid state drive a combination thereof or another storage technology.

In some embodiments the encoder and the decoder may be incorporated with the RAM device or otherwise bypassed and the GPU may send the raw rendered gameplay data directly to the input output interface device for storage on the storage device . Correspondingly in such embodiments the input output interface device sends a recorded gameplay segment directly to the display for replay.

It is to be understood that by automatically and continuously recording the rendered gameplay of the currently playing video game to the RAM device the most recently played portion of rendered gameplay from the currently playing video game may be available on demand for display. In particular since the rendered gameplay may be displayed directly from the RAM device without any additional read write operations the rendered gameplay may be displayed with little or no lag time. In contrast when rendered gameplay is recorded to a video game DVR a write operation is performed to store the rendered game data on the storage device. Moreover in order to display the rendered game data the rendered game data is retrieved from the hard drive via a read operation. The video game DVR may be suitable for archiving and subsequent playback of gameplay at a later time. However the write operation the read operation and the relatively slower storage technology e.g. a hard disk drive collectively take more time to store retrieve rendered gameplay data than is suitable to provide instant replay during gameplay of a currently playing video game.

At the method may include overseeing a currently playing video game. For example the platform level instant replay companion may monitor game events to recognize when an instant replay is to be displayed.

At the method may include automatically and continuously recording a most recently played portion of rendered gameplay from the currently playing video game. For example rendered image frames may be continuously encoded and stored in a ring buffer of a RAM device while the currently playing video game is being played.

At the method may include determining whether an instant replay command is given. In some cases the instant replay command may be given by the video game. In some cases the instant replay command may be given via user input. If it is determined that an instant replay command is given then the method moves to . Otherwise the method returns to .

At the method may include displaying a recorded gameplay segment from the most recently played portion of rendered gameplay. In some embodiments the recorded gameplay segment may be displayed while a game state of the currently playing video game is displayed. In some embodiments the recorded gameplay segment may be displayed directly from the ring buffer of the RAM device.

It will be understood that the recorded gameplay segment may be displayed repeatedly without departing from the scope of this disclosure. Accordingly the user may analyze and enjoy the recorded gameplay segment over and over again as desired.

Optionally at the method may include editing the recorded gameplay segment to create a gameplay clip. For example a start time a stop time and a length of the recorded gameplay segment may be specified by the user via transport controls provided by the platform level instant replay companion. It will be understood that the platform level instant replay companion may provide any suitable transport or editing controls for editing the recorded gameplay segment.

Optionally at the method may include storing the gameplay clip in a video game DVR. For example a portion of a hard disk drive may be allocated for the video game DVR and the gameplay clip may be written to the hard disk drive for long term storage and playback at a later time. Further in some embodiments the gameplay clip may be sent to a remote computing machine via a service for sharing the gameplay clip with other users.

The above described method facilitates instant replay of any currently playing video game playing on a computer gaming device. In particular because the method is performed with the platform level instant replay companion the instant replay functionality works for any video game that is compatible with the computer gaming device. Moreover the instant replay experience is the same for any of the video games. For example instant replays displayed with the platform level instant replay companion may have the same visual appearance and transport controls. Furthermore by recording rendered gameplay to a RAM device and displaying the rendered gameplay directly from the RAM device recorded gameplay may be displayed on demand without any noticeable lag or load time.

The overlay is displayed in front of the current portion of the currently playing video game. In some embodiments the overlay partially obstructs a game state of the currently playing video game but the game state is still visible to the user. In other embodiments the overlay may completely obstruct the game state of the currently playing video game.

In some cases when the recorded gameplay segment is displayed the game state of the currently playing video game is a paused state. For example in a single player video game scenario the game state may be paused while the instant replay is displayed. In other cases when the recorded gameplay segment is displayed the game state of the currently playing video game is a current active game state e.g. the video game continues playing . For example in a multiplayer video game scenario the game state may be a current active game state where other players continue to play the video game while the instant replay is displayed.

The overlay includes transport controls to control playback of the recorded gameplay segment . The transport controls include a play pause button a fast forward button a rewind button and a save button. The play pause button starts stops playback of the recorded gameplay segment. The fast forward button moves forward in the recorded gameplay segment at a speed other than the normal playback speed. The rewind button moves backward in the recorded gameplay segment at a speed other than the normal playback speed. Note that in some cases the rewind button may move beyond a default starting point in the recorded gameplay segment to an earlier portion of rendered gameplay. This may be possible if the recorded gameplay segment is smaller than a most recently played portion of rendered gameplay stored in the ring buffer. The save button saves the recorded gameplay segment as a gameplay clip in a video game DVR for playback at a later time when the currently playing video game is not being played.

It will be understood that the transport controls may include any suitable control to navigate throughout the recorded gameplay segment and or a most recently played portion of rendered gameplay. In some embodiments the transport controls include editing controls to change the recorded gameplay segment for saving as a gameplay clip in the video game DVR. For example such controls may adjust a start time a stop time and a length of the recorded gameplay segment.

In some embodiments a companion computing device may be used to trigger display of an instant replay via the platform level instant replay companion. A companion computing device may be used in conjunction with a computer gaming device to provide a secondary gaming experience that enhances gameplay of a video game. Non limiting examples of a companion computing device include a portable gaming device a mobile computing device a smartphone etc. In one example the user provides input to the companion computing device that indicates an instant replay command. The instant replay command is sent from the companion computing device to the platform level instant replay companion on the computer gaming device. In response to receiving the command the platform level instant replay companion displays the recorded gameplay segment on the display. In another example the user provides input to the companion computing device that indicates an instant replay command. The instant replay command is sent from the companion computing device to the platform level instant replay companion on the computer gaming device. In response to receiving the command the platform level instant replay companion commands the companion computing device to display the recorded gameplay segment on a display of the companion computing device. In some cases the instant replay may be displayed on the companion computing device while a current gameplay state is displayed on the primary display.

Note that the above described scenarios may be used to trigger display of an instant replay and such scenarios may be similarly used to stop display of the instant replay. In some cases the instant replay may be stopped or returned to the current game state without user action once the recorded gameplay segment has ended.

In some embodiments the methods and processes described herein may be tied to a computing system of one or more computing devices. In particular such methods and processes may be implemented as a computer application program or service an application programming interface API a library and or other computer program product.

Computing system includes a logic machine and a storage machine . Computing system may optionally include a display subsystem a communication subsystem and or other components not shown in .

Logic machine includes one or more physical devices configured to execute instructions. For example the logic machine may be configured to execute instructions that are part of one or more applications services programs routines libraries objects components data structures or other logical constructs. Such instructions may be implemented to perform a task implement a data type transform the state of one or more components achieve a technical effect or otherwise arrive at a desired result.

The logic machine may include one or more processors configured to execute software instructions. Additionally or alternatively the logic machine may include one or more hardware or firmware logic machines configured to execute hardware or firmware instructions. Processors of the logic machine may be single core or multi core and the instructions executed thereon may be configured for sequential parallel and or distributed processing. Individual components of the logic machine optionally may be distributed among two or more separate devices which may be remotely located and or configured for coordinated processing. Aspects of the logic machine may be virtualized and executed by remotely accessible networked computing devices configured in a cloud computing configuration.

Storage machine includes one or more physical devices configured to hold instructions executable by the logic machine to implement the methods and processes described herein. When such methods and processes are implemented the state of storage machine may be transformed e.g. to hold different data.

Storage machine may include removable and or built in devices. Storage machine may include optical memory e.g. CD DVD HD DVD Blu Ray Disc etc. semiconductor memory e.g. RAM EPROM EEPROM etc. and or magnetic memory e.g. hard disk drive floppy disk drive tape drive MRAM etc. among others. Storage machine may include volatile nonvolatile dynamic static read write read only random access sequential access location addressable file addressable and or content addressable devices.

It will be appreciated that storage machine includes one or more physical devices. However aspects of the instructions described herein alternatively may be propagated by a communication medium e.g. an electromagnetic signal an optical signal etc. that is not held by a physical device for a finite duration.

Aspects of logic machine and storage machine may be integrated together into one or more hardware logic components. Such hardware logic components may include field programmable gate arrays FPGAs program and application specific integrated circuits PASIC ASICs program and application specific standard products PSSP ASSPs system on a chip SOC and complex programmable logic devices CPLDs for example.

The terms module program and engine may be used to describe an aspect of computing system implemented to perform a particular function. In some cases a module program or engine may be instantiated via logic machine executing instructions held by storage machine . For example the platform level instant replay companion may be instantiated via logic machine executing instructions held by storage machine . It will be understood that different modules programs and or engines may be instantiated from the same application service code block object library routine API function etc. Likewise the same module program and or engine may be instantiated by different applications services code blocks objects routines APIs functions etc. The terms module program and engine may encompass individual or groups of executable files data files libraries drivers scripts database records etc.

When included display subsystem may be used to present a visual representation of data held by storage machine . This visual representation may take the form of a graphical user interface GUI . As the herein described methods and processes change the data held by the storage machine and thus transform the state of the storage machine the state of display subsystem may likewise be transformed to visually represent changes in the underlying data. Display subsystem may include one or more display devices utilizing virtually any type of technology. Such display devices may be combined with logic machine and or storage machine in a shared enclosure or such display devices may be peripheral display devices.

When included communication subsystem may be configured to communicatively couple computing system with one or more other computing devices. Communication subsystem may include wired and or wireless communication devices compatible with one or more different communication protocols. As non limiting examples the communication subsystem may be configured for communication via a wireless telephone network or a wired or wireless local or wide area network. In some embodiments the communication subsystem may allow computing system to send and or receive messages to and or from other devices via a network such as the Internet.

As noted above an NUI interface system may be configured to provide user input to computing system . To this end the NUI interface system includes a logic machine and a storage machine . To detect the user input the NUI interface system receives low level input i.e. signal from an array of sensory components which may include one or more visible light cameras depth cameras and microphones . Other example NUI componentry may include one or more infrared or stereoscopic cameras a head tracker eye tracker accelerometer and or gyroscope for motion detection and or intent recognition as well as electric field sensing componentry for assessing brain activity. In some embodiments the NUI interface system may comprise or interface with one or more user input devices such as a keyboard mouse touch screen or game controller.

The NUI interface system processes the low level input from the sensory components to yield an actionable high level input to computing system . Such action may generate corresponding text based user input or other high level commands which are received in computing system . In some embodiments NUI interface system and sensory componentry may be integrated together at least in part. In other embodiments the NUI interface system may be integrated with the computing system and receive low level input from peripheral sensory components.

It will be understood that the configurations and or approaches described herein are exemplary in nature and that these specific embodiments or examples are not to be considered in a limiting sense because numerous variations are possible. The specific routines or methods described herein may represent one or more of any number of processing strategies. As such various acts illustrated and or described may be performed in the sequence illustrated and or described in other sequences in parallel or omitted. Likewise the order of the above described processes may be changed.

The subject matter of the present disclosure includes all novel and nonobvious combinations and subcombinations of the various processes systems and configurations and other features functions acts and or properties disclosed herein as well as any and all equivalents thereof.

