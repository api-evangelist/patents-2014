---

title: Secure connection certificate verification
abstract: One or more computer processors identify a first certificate that is used to establish a secure Internet connection. One or more computer processors identify a stored second certificate that shares at least one attribute with the first certificate. One or more computer processors determine a policy action based, at least in part, on a result of a comparison between an attribute of the first certificate and an attribute of the second certificate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09300656&OS=09300656&RS=09300656
owner: International Business Machines Corporation
number: 09300656
owner_city: Armonk
owner_country: US
publication_date: 20140821
---
The present invention relates generally to secure socket layer connections and more particularly to a review of certificates.

Transport Layer Security TLS and its predecessor Secure Sockets Layer SSL are cryptographic protocols designed to provide communication security over the Internet. The term SSL often refers to different variations of TLS and SSL. SSL uses certificates and asymmetric cryptography to authenticate the counterparty and to exchange a symmetric key public or private session key. Data flowing between the parties is encrypted with a session key which promotes data and message confidentiality. Additionally the session key allows for message authentication codes for message integrity and as a by product message authentication. Several versions of the protocols are in widespread use in applications such as web browsing electronic mail Internet faxing instant messaging and voice over Internet protocol VoIP . A property in a SSL context is forward secrecy so the short term session key cannot be derived from the long term asymmetric secret key.

Embodiments of the present invention disclose a method computer program product and system for determining a policy action for a connection in which certificates are utilized in a secure network connection on one or more computing devices. One or more computer processors identify a first certificate that is used to establish a secure Internet connection. One or more computer processors identify a stored second certificate that shares at least one attribute with the first certificate. One or more computer processors determine a policy action based at least in part on a result of a comparison between an attribute of the first certificate and an attribute of the stored second certificate. In one embodiment the method further includes executing the determined policy action on a client computing device.

Secure Sockets Layers SSL are cryptographic protocols or encryption protocols used to provide secure connections over the Internet and SSL as used herein refers to all protocols used to secure Internet connections such as transport layer security TLS . SSL utilizes X.509 certificates certificate authorities and a public key infrastructure to verify the relation between a certificate and its owner as well as to generate sign and administer the validity of certificates. While certificate authorities are in some scenarios more beneficial than verifying the identities via a web of trust embodiments of the invention recognize that certificate authorities are a weak point from a security standpoint allowing man in the middle attacks MITM .

Implementation of embodiments of the invention may take a variety of forms and exemplary implementation details are discussed subsequently with reference to the Figures.

Distributed data processing environment includes in line server computer client computing devices and web server domain name system DNS server and intelligence source server all interconnected over network . Network represents for example a telecommunications network a local area network LAN a wide area network WAN such as the Internet or a combination of the three and includes wired wireless and or fiber optic connections. Network includes one or more wired and or wireless networks that are capable of receiving and transmitting data voice and or video signals including multimedia signals that include voice data and video information.

In the depicted environment in line server computer is one or more of a management server a web server or any other electronic device or computing system capable of receiving and sending data. In this embodiment in line server computer is an in line server which oversees contacts between client devices and outside devices as opposed to a proxy server which acts as an intermediary for requests from clients seeking resources from other servers or computers. In an example in line server computer is a next generation intrusion prevention system or a next generation firewall. In other embodiments in line server computer represents a server computing system utilizing multiple computers as a server system such as in a cloud computing environment. In another embodiment in line server computer represents a laptop computer a tablet computer a netbook computer a personal computer PC a desktop computer a personal digital assistant PDA a smart phone or any programmable electronic device capable of communicating with client computing device web server DNS server and intelligence source server via network . In another embodiment in line server computer represents a computing system utilizing clustered computers and components to act as a single pool of seamless resources. In an embodiment in line server computer is used to identify certificates determine policy and regulate interactions between the client computers of an enterprise e.g. client computing device and web server via network . In line server computer includes policy program and database .

In the depicted embodiment database resides on in line server computer and contains certificate . In another embodiment database resides elsewhere in distributed data processing environment . A database is an organized collection of data. Database is implemented with any type of storage device capable of storing data that is accessed and utilized by in line server computer intelligence source server web server DNS server and client computing devices and such as a database server a hard disk drive or a flash memory. In other embodiments database represents multiple storage devices within in line server computer . Database stores certificates such as certificate which are secure socket layer SSL certificates that correspond to possible certificates from web servers such as web server . Database stores certificates from multiple web servers and intelligence sources for later comparison with a certificate utilized in an SSL connection.

In the depicted embodiment database stores certificates from past SSL connections. Database also receives a certificate update such as XML update from web server and stores the updated certificates in database to be referenced by policy program . In one example this connection is secure. In another embodiment policy program also accesses database to send and receive certificates to and from an outside certificate source such as intelligence source server . In one embodiment database is updated directly by a cloud based intelligence source such as through frequent updates with a local database or in real time calling out to the cloud via an API application programming interface to retrieve data for a particular domain.

In depicted distributed data processing environment policy program resides on in line server computer and identifies and reviews certificates to determine a policy for a SSL connection. In one embodiment policy program receives updated and or new certificates and stores the updated and or new certificates in database . In another embodiment policy program identifies the certificate that was utilized to establish the SSL connection and stores the certificate in database . In an embodiment policy program identifies certificates with the same domain name or uniform resource locator URL and determines if the attributes of the certificates match by comparing the content of the attributes. In another embodiment policy program determines the policy to implement based upon the certificate utilized for the purposes of the SSL connection and any certificates that are similar to the utilized certificate. In an embodiment policy program enforces actions based on the determined policy and the corresponding predetermined user settings. Policy program is depicted and described in further detail with respect to .

In the depicted embodiment client computing devices and are each one or more of a desktop computer a laptop computer a tablet computer a specialized computer server a smart phone or any programmable electronic device capable of communicating with in line server computer via network and with various components and devices within distributed data processing environment . In general client computing devices and each represent any programmable electronic device or combination of programmable electronic devices capable of executing machine readable program instructions and communicating with other computing devices via a network such as network . In one embodiment client computing devices and are connected to network via in line server computer . In another embodiment client computing devices and are connected directly to network but in line server computer still has access to client computing devices and and can implement policy and oversee connections to other computing devices.

User interface is a program that provides an interface between a user of client computing device and a plurality of applications not shown that reside on client computing device . A user interface such as user interface refers to the information such as graphic text and sound that a program presents to a user and the control sequences the user employs to control the program. There are many known types of user interfaces. In one embodiment user interface is a graphical user interface. A graphical user interface GUI is a type of user interface that allows users to interact with electronic devices such as a computer keyboard and mouse through graphical icons and visual indicators such as secondary notation as opposed to text based interfaces typed command labels or text navigation. In computing GUIs were introduced in reaction to the perceived steep learning curve of command line interfaces which require commands to be typed on the keyboard. The actions in GUIs are often performed through direct manipulation of the graphical elements.

In the depicted environment intelligence source server is one or more of a management server a web server or any other electronic device or computing system capable of receiving and sending data. In other embodiments intelligence source server represents a server computing system utilizing multiple computers as a server system such as in a cloud computing environment. In another embodiment intelligence source server represents one or more of a laptop computer a tablet computer a netbook computer a personal computer PC a desktop computer a personal digital assistant PDA a smart phone or any programmable electronic device capable of communicating with client computing device and in line server computer DNS server and web server via network In another embodiment intelligence source server represents a computing system utilizing clustered computers and components to act as a single pool of seamless resources. Intelligence source server communicates with policy program and database located on in line server computer to provide updated certificates and information regarding attributes of certificates. Intelligence source server also receives information from in line server computer regarding new and or updated certificates or new and or updated attributes of certificates.

In depicted distributed data processing environment domain name system DNS server represents one or more of a management server a web server or any other electronic device or computing system capable of receiving and sending data. In other embodiments DNS server represents a server computing system utilizing multiple computers as a server system such as in a cloud computing environment. In another embodiment DNS server represents one or more of a laptop computer a tablet computer a netbook computer a personal computer PC a desktop computer a personal digital assistant PDA a smart phone or any programmable electronic device capable of communicating with client computing device intelligence source server web server and in line server computer via network . In another embodiment DNS server represents a computing system utilizing clustered computers and components to act as a single pool of seamless resources. In an embodiment DNS server is a hierarchical distributed naming system for computing devices connected to the Internet. To further the embodiment DNS server translates domain names which are easily memorized by users into the numerical Internet protocol IP address needed for locating computer services and devices.

In depicted distributed data processing environment web server represents one or more of a management server a web server or any other electronic device or computing system capable of receiving and sending data. In other embodiments web server represents a server computing system utilizing multiple computers as a server system such as in a cloud computing environment. In another embodiment web server represents one or more of a laptop computer a tablet computer a netbook computer a personal computer PC a desktop computer a personal digital assistant PDA a smart phone or any programmable electronic device capable of communicating with client computing device intelligence source server DNS server and in line server computer via network . In another embodiment web server represents a computing system utilizing clustered computers and components to act as a single pool of seamless resources. In an embodiment web server communicates with a client computing device e.g. client computing device and provides a certificate from a Certified Authority for the SSL connection.

In depicted distributed data processing environment extensible markup language XML update resides on web server . In one embodiment XML update contains information regarding certificates and keys. In various embodiments web server sends XML update to either or both of intelligence source server and database . In an embodiment XML update is a file that database receives from the domain through a trusted channel. In an example a disc containing a XML formatted file is received from a business partner with whom this enterprise will interact. In another embodiment XML update may be any other update known in the art.

Policy program identifies a network connection and verifies that it is a SSL connection step . In one embodiment policy program monitors network connections between a client computing device such as client computing device and computing device not under in line server computer such as web server . Policy program identifies a SSL connection between a client computing device such as client computing device and another computing device such as web server . In an example a user of client computing device requests a webpage provided by web server . In this example a connection is established between client computing device and web server . Policy program identifies the connection and determines that the connection is a SSL connection. In this example policy program determines the connection is a SSL connection by identifying that a certificate has been utilized to establish the connection. In another embodiment policy program identifies all connections but does not verify that there is a SSL connection. In such an embodiment policy program proceeds to identify a certificate used in the connection see step and if there is no certificate policy program aborts operations for that connection. In another embodiment policy program identifies a SSL connection during a server to server communication.

Policy program identifies the certificate used in a SSL connection step . In one embodiment policy program identifies the certificate such as certificate which was utilized to establish the SSL connection. In this embodiment certificate was provided to a client computing device e.g. client computing device by web server to establish the SSL connection between the two devices. In line server computer identifies the certificate such as certificate which has been provided by web server to establish the SSL connection to the webpage web browser or web server. In this embodiment policy program waits for a SSL connection to be established and the completion of a SSL connection establishment protocol before policy program identifies the certificate utilized. In another embodiment policy program identifies the certificate before the establishment protocol is complete but waits until the establishment protocol is complete before proceeding with the next step. The establishment protocol includes certification that the domain name in the URL matches the name of the domain in the certificate the certificate is signed by a trusted certified authority CA or trusted intermediate CA and that the web server e.g. web server has access to the private key that matches the public key in the certificate. In another embodiment the establishment protocol includes any other known protocol in the art. Once the SSL connection is established policy program proceeds to the next step. In one example the establishment protocol for a SSL connection are not completed and the connection is terminated.

In an embodiment policy program uses deep packet inspection capabilities to capture the certificate that is utilized during the SSL connection. Deep packet inspection is a form of computer network packet filtering that examines the data part and or the header of a packet as the data passes an inspection point. Deep packet inspection comprises searching for protocol non compliance viruses spam intrusions and or defined criteria to decide whether the packet may pass or if the packet needs to be routed to a different destination for the purpose of collecting statistical information. The captured certificate is stored in a database such as database . In another embodiment policy program uses any method of capturing a certificate known in the art.

Policy program determines if the certificate is similar to a previous certificate decision . In the depicted embodiment policy program searches database for similar previous certificates which takes place in real time or at any time after the SSL connection has been established. In the depicted embodiment the previous certificates that policy program searches for similarity are one or more of certificates that have been previously captured by policy program updates to certificates e.g. XML update that have been received from browsers or web servers a trusted intelligence source e.g. intelligence source server or any other trusted source that has access to database . In another embodiment policy program searches a trusted remote certificate source. In an example this search is implemented if a local database is not used or as an additional location to search for a similar certificate.

By waiting for the SSL connection to be established a man in the middle attack is prevented. In an example in which the SSL connection is not established an attacker creates a legitimate certificate for a webpage redirects the victim s traffic from the intended webpage to a second webpage and the second webpage delivers the certificate for the first webpage. By waiting for the SSL connection to be established before comparing certificates redirect attacks or intercept traffic such as DNS cache poisoning and man in the middle attacks are detected. In an example before a connection is trying to establish the client computing device asks the DNS server for the IP address where the domain is hosted. Once the client computing device has received that IP address client computing device tries to establish a connection to the received IP address. So when the client is waiting for the SSL connection to be established the IP address can t change.

Policy program determines the similarities of the current certificate e.g. certificate as compared to a previous certificate by comparing multiple attributes from the previously stored certificates to those of the current certificate. In an example policy program searches for relevant certificates for comparison by searching for a common name attribute of the certificate which contains the domain or subdomain. If the common name matches then the certificate is identified as similar. In another example policy program determines that two certificates are similar if the CA serial number attribute of each certificate matches. In yet another embodiment the search is more in depth and searches multiple attributes of a certificate to determine the similarity. In an example of searching multiple attributes if 75 percent or more of the attributes from the previously stored certificate matches that of the current certificate policy program identifies the certificates as similar. In another embodiment a user can set the threshold for similarity. In one embodiment policy program uses alternative search techniques as would be known and understood to one skilled in the art.

Policy program compares identified similar certificates with the certificate from the current SSL connection. In the depicted embodiment policy program compares certificate with other located certificates in database . The attributes of certificate are checked against previous certificates. In one example each type of attribute has to match exactly for the attribute to be deemed the same. In another example if the attribute is within a user preset threshold such as 95 percent similar the attribute would be deemed to match. Attributes of a certificate comprise the version the serial number the algorithm ID the issuer which contains the name of the CA the organization the location the state the country the validity the subject which contains many personal details such as the common name the subject public key information including public key algorithm and subject public key the issuer unique identifier the subject unique identifier the extensions the signature algorithm and the certificate signature. In an embodiment in an instance when policy program finds no similar certificates to certificate policy program goes to end decision NO branch . In another instance policy program will continue to the next step but with no identified similar attributes.

If policy program determines that the certificate is similar to a previous certificate decision YES branch then policy program identifies policy actions based on the similarity of the certificates step . In the depicted embodiment policy program identifies a policy action for certificate based upon the similarity of attributes of a previously stored certificate. In an embodiment policy actions are preset by the user. The policy actions are preset by a user of the client device such as client computing device and are based upon which attributes match between the current certificate being utilized to establish the SSL connection e.g. certificate and a previously stored certificate in a local storage e.g. database a certificate stored in another non depicted database or a trusted source e.g. intelligence source server . In an example the user accesses policy program and preselects from a list of certificate attributes to determine policy actions for policy program to implement. In another example in line server computer stores for each client device policy actions that are based on the risk aversion deemed appropriate by a user of the client device. In one embodiment the preset policy actions are stored in database . In another embodiment the preset policy actions are stored on the client device. In another embodiment policy program queries the client device e.g. client computing device to determine the policy actions based upon the attributes of the certificate.

Some examples of policy actions include allow block or alert. These policy actions are triggered by policy program comparing each of the attributes or combinations of the attributes of the current certificate to a similar certificate. In an example if the country of the CA for certificate does not match the country for the CA for the previously stored similar certificate based upon the policy action for policy program is to block the connection. In another example the certificate signature algorithm for certificate has changed from a previously stored similar certificate and the policy action for policy program is to alert the user.

In one embodiment policy program sends a certificate to an outside source for analysis. In an example policy program does not find a previously stored certificate that is similar to certificate and in response sends certificate to intelligence source server . Intelligence source server is an outside trusted source that reviews the certificate to determine the authenticity and sends back a recommendation or a list of similarities and differences in attributes regarding the certificate utilized for the SSL connection and a certificate in the trusted source for policy program to determine which policy action to proceed with. In another example if no similar certificate is located to certificate policy program prompts the user to determine if certificate should be sent to intelligence source server . In one embodiment a certificate e.g. certificate sent by policy program is compared to certificates stored in a database located on intelligence source server to determine if there is an exact match in which case certificate would be verified as a valid certificate.

Policy program enforces an identified policy step . In the depicted embodiment policy program enforces the identified policy for certificate on a client computing device such as client computing device . In an example policy program allows the SSL connection to continue between client computing device and web server but sends an alert to the user of client computing device because no similar certificates to certificate have been located. This action is taken because the presets for client computing device indicate that there should only be an alert sent if no similar certificates are located. Various examples of alerts comprise visual e.g. popups tactile e.g. vibrations and or sound e.g. alarm .

Computer includes communications fabric which provides communications between computer processor s memory persistent storage communications unit and input output I O interface s . Communications fabric can be implemented with any architecture designed for passing data and or control information between processors such as microprocessors communications and network processors etc. system memory peripheral devices and any other hardware components within a system. For example communications fabric can be implemented with one or more buses.

Memory and persistent storage are computer readable storage media. In this embodiment memory includes random access memory RAM and cache memory . In general memory can include any suitable volatile or non volatile computer readable storage media. Software and data are stored in persistent storage for access and or execution by processor s via one or more memories of memory . With respect to in line server computer software and data represents policy program and database .

In this embodiment persistent storage includes a magnetic hard disk drive. Alternatively or in addition to a magnetic hard disk drive persistent storage can include a solid state hard drive a semiconductor storage device a read only memory ROM an erasable programmable read only memory EPROM a flash memory or any other computer readable storage media that is capable of storing program instructions or digital information.

The media used by persistent storage may also be removable. For example a removable hard drive may be used for persistent storage . Other examples include optical and magnetic disks thumb drives and smart cards that are inserted into a drive for transfer onto another computer readable storage medium that is also part of persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit includes one or more network interface cards. Communications unit may provide communications through the use of either or both physical and wireless communications links. Software and data may be downloaded to persistent storage through communications unit .

I O interface s allows for input and output of data with other devices that may be connected to computer . For example I O interface s may provide a connection to external device s such as a keyboard a keypad a touch screen and or some other suitable input device. External device s can also include portable computer readable storage media such as for example thumb drives portable optical or magnetic disks and memory cards. Software and data can be stored on such portable computer readable storage media and can be loaded onto persistent storage via I O interface s . I O interface s also connect to a display .

The programs described herein are identified based upon the application for which they are implemented in a specific embodiment of the invention. However it should be appreciated that any particular program nomenclature herein is used merely for convenience and thus the invention should not be limited to use solely in any specific application identified and or implied by such nomenclature.

The present invention may be a system a method and or a computer program product. The computer program product may include a computer readable storage medium or media having computer readable program instructions thereon for causing a processor to carry out aspects of the present invention.

The computer readable storage medium can be a tangible device that can retain and store instructions for use by an instruction execution device. The computer readable storage medium may be for example but is not limited to an electronic storage device a magnetic storage device an optical storage device an electromagnetic storage device a semiconductor storage device or any suitable combination of the foregoing. A non exhaustive list of more specific examples of the computer readable storage medium includes the following a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory a static random access memory SRAM a portable compact disc read only memory CD ROM a digital versatile disk DVD a memory stick a floppy disk a mechanically encoded device such as punch cards or raised structures in a groove having instructions recorded thereon and any suitable combination of the foregoing. A computer readable storage medium as used herein is not to be construed as being transitory signals per se such as radio waves or other freely propagating electromagnetic waves electromagnetic waves propagating through a waveguide or other transmission media e.g. light pulses passing through a fiber optic cable or electrical signals transmitted through a wire.

Computer readable program instructions described herein can be downloaded to respective computing processing devices from a computer readable storage medium or to an external computer or external storage device via a network for example the Internet a local area network a wide area network and or a wireless network. The network may comprise copper transmission cables optical transmission fibers wireless transmission routers firewalls switches gateway computers and or edge servers. A network adapter card or network interface in each computing processing device receives computer readable program instructions from the network and forwards the computer readable program instructions for storage in a computer readable storage medium within the respective computing processing device.

Computer readable program instructions for carrying out operations of the present invention may be assembler instructions instruction set architecture ISA instructions machine instructions machine dependent instructions microcode firmware instructions state setting data or either source code or object code written in any combination of one or more programming languages including an object oriented programming language such as Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The computer readable program instructions may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . In some embodiments electronic circuitry including for example programmable logic circuitry field programmable gate arrays FPGA or programmable logic arrays PLA may execute the computer readable program instructions by utilizing state information of the computer readable program instructions to personalize the electronic circuitry in order to perform aspects of the present invention.

Aspects of the present invention are described herein with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer readable program instructions.

These computer readable program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks. These computer readable program instructions may also be stored in a computer readable storage medium that can direct a computer a programmable data processing apparatus and or other devices to function in a particular manner such that the computer readable storage medium having instructions stored therein comprises an article of manufacture including instructions which implement aspects of the function act specified in the flowchart and or block diagram block or blocks.

The computer readable program instructions may also be loaded onto a computer other programmable data processing apparatus or other device to cause a series of operational steps to be performed on the computer other programmable apparatus or other device to produce a computer implemented process such that the instructions which execute on the computer other programmable apparatus or other device implement the functions acts specified in the flowchart and or block diagram block or blocks.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of instructions which comprises one or more executable instructions for implementing the specified logical function s . In some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or carry out combinations of special purpose hardware and computer instructions.

The descriptions of the various embodiments of the present invention have been presented for purposes of illustration but are not intended to be exhaustive or limited to the embodiments disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The terminology used herein was chosen to best explain the principles of the embodiment the practical application or technical improvement over technologies found in the marketplace or to enable others of ordinary skill in the art to understand the embodiments disclosed herein.

