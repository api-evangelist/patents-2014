---

title: Sharing a content item
abstract: A content item on a content management system can be shared using a generated sharing link. The sharing link can be a custom network address, such as a uniform resource locator (URL), which allows the content item to be accessed without authentication. The sharing index and a content path of the content items can be listed in a sharing index used to identify the content upon a request initiated by the sharing link. The content management system can generate a content link to a content item upon receiving a sharing input from a user indicating the user wants to share a content item. Alternatively, in some embodiments, sharing links can be pre-generated by the content management system and stored on the client device. The sharing link can stored directly to a data buffer on the client device, such as a clipboard, where it can be accessed by the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09628560&OS=09628560&RS=09628560
owner: Dropbox, Inc.
number: 09628560
owner_city: San Francisco
owner_country: US
publication_date: 20140310
---
This application claims priority to U.S. provisional application number 61 775 367 filed on Mar. 8 2013 which is expressly incorporated by reference herein in its entirety.

The present technology pertains to sharing content items and more specifically pertains to creating a sharing link to a content item.

Cloud storage accounts allow users to store their content items in an online storage account that can be accessed from any computing device with a network connection. Users can thus upload content items such as pictures songs documents etc. from a computing device to their online storage account and later access the content items from different computing devices.

In addition to enabling a user to access their content items from multiple computing devices cloud storage accounts can also enable a user to share their content items with other users. For example users can create links to their content items that can be used to access the shared content items. A user can provide the links to other uses to provide access to the content item.

Current systems of sharing a content item can be difficult to use which can deter users from sharing their content items. For example some systems require users to navigate a difficult user interface to create a sharing link to a content item. Further a network connection may be required to create a sharing link. Some systems can require that the user wait for a content item to be uploaded to the content management system prior to providing a sharing link to a user. Accordingly an improved method of sharing a content item is needed.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed are systems methods and non transitory computer readable storage media for sharing a content item. To enable a user to share a content item with other users a content management system can be configured to create a sharing link that is a custom network address such as a uniform resource locator URL which allows the content item to be accessed without authentication. The sharing link can be configured to request the content item from the content management system.

The content management system can use the sharing link to identify the content item and return it to a requesting user device. For example the content management system can include a sharing index that lists each sharing link along with a content path identifying the location of the content item associated with the sharing link. The content management system can thus use the sharing link received from a requesting client device to search the sharing index and return the content item.

In some embodiments the content management system can generate a content link to a content item upon receiving a sharing input from a user indicating that the user wants to share a content item. A sharing input can be received as a result of a user selecting a user interface element such as a button provided with a content item and prompting a user to share the content item. In some embodiments the user interface element can be configured to appear when a user scrolls over a content item. In some embodiments the user interface element can be presented as a window that appears upon a user right clicking on the content item. In some embodiments the sharing input can be received as a result of the user using a keyboard shortcut.

Upon receiving the sharing input a client device can send a sharing request to a content management system to generate a sharing link for the content item. The content management system can generate the sharing link and return it to the client device to be presented to the user.

Alternatively in some embodiments the content management system can pre generate sharing links that are stored on the client device. Upon receiving a sharing input from a user the client device can provide one of the locally stored sharing links rather than requesting that a new sharing link be generated by the content management system. The client device can then send a sharing request to the content management system that identifies the sharing link provided to the user as well as a content path identified with the shared content item. The content management system can use the data received in the sharing request to update the sharing index to associate the content path with the sharing link.

A sharing link can be provided to a user in multiple ways. In some embodiments the sharing link can be visually presented to the user. For example the sharing link can be presented as text on the client device that the user can copy to an e mail social networking post etc. to share the content item. Alternatively in some embodiments the sharing link can be stored to a data buffer on the client device such as a clipboard. The user can thus access the sharing link by using for example a paste function to enter the sharing link into an e mail social networking post etc.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.

The disclosed technology addresses the need in the art for sharing a content item stored on a content management system. To enable a user to share the content item with other users the content management system can be configured to create a sharing link that is a custom network address such as a uniform resource locator URL which allows the content item to be accessed without authentication. The sharing link can be configured to request the content item from the content management system.

The content management system can use the sharing link to identify the content item and return it to a requesting user device. For example the content management system can include a sharing index that identifies each created sharing link along with a content path identifying the location of the content item associated with the sharing link. The content management system can thus use the sharing link received from a requesting client device to search the sharing index and return the content item.

In some embodiments the content management system can generate a sharing link to a content item in response to a user requesting to share the content item. For example a sharing input received at a client device can indicate that a user wants to share a content item. Upon receiving the sharing input a client device can send a sharing request to a content management system to generate a sharing link for the content item. The content management system can generate the sharing link and return it to the client device to be made available to the user.

Alternatively in some embodiments sharing links can be pre generated by the content management system and stored on the client device prior to a user requesting to share a content item. Upon receiving a sharing input from a user requesting to share a content item the client device can provide one of the locally stored sharing links rather than requesting that a sharing link be generated by the content management system. This can be advantageous because the sharing link can be made available to the user without having to wait for the content management system to create the sharing link. Further the sharing link can be made available to the user while the client device is offline i.e. is not in network communication with the content management system.

In some embodiments the sharing link can be made available to a user in a data buffer on the client device such as a clipboard. The client device can store the sharing link received from the content management system in the data buffer. The user can then easily access the sharing link through for example a paste function to enter the sharing link into an e mail social networking post etc.

An exemplary system configuration is illustrated in wherein electronic devices communicate via a network for purposes of exchanging content and other data. The system can be configured for use on a wide area network such as that illustrated in . However the present principles are applicable to a wide variety of network configurations that facilitate the intercommunication of electronic devices. For example each of the components of system in can be implemented in a localized or distributed fashion in a network.

In system a user can interact with content management system through client devices . . . collectively connected to network by direct and or indirect communication. Content management system can support connections from a variety of different client devices such as desktop computers mobile computers mobile communications devices e.g. mobile phones smart phones tablets smart televisions set top boxes and or any other network enabled computing devices. Client devices can be of varying type capabilities operating systems etc. Furthermore content management system can concurrently accept connections from and interact with multiple client devices .

A user can interact with content management system via a client side application installed on client device . In some embodiments the client side application can include a content management system specific component. For example the component can be a stand alone application one or more application plug ins and or a browser extension. However the user can also interact with content management system via a third party application such as a web browser that resides on client device and is configured to communicate with content management system . In either case the client side application can present a user interface UI for the user to interact with content management system . For example the user can interact with the content management system via a client side application integrated with the file system or via a webpage displayed using a web browser application.

Content management system can make it possible for a user to store content as well as perform a variety of content management tasks such as retrieve modify browse and or share the content. Furthermore content management system can make it possible for a user to access the content from multiple client devices . For example client device can upload content to content management system via network . The content can later be retrieved from content management system using the same client device or some other client device .

To facilitate the various content management services a user can create an account with content management system . The account information can be maintained in user account database . User account database can store profile information for registered users. In some cases the only personal information in the user profile can be a username and or email address. However content management system can also be configured to accept additional user information.

User account database can also include account management information such as account type e.g. free or paid usage information e.g. file edit history maximum storage space authorized storage space used content storage locations security settings personal configuration settings content sharing data etc. Account management module can be configured to update and or obtain user account details in user account database . The account management module can be configured to interact with any number of other modules in content management system .

An account can be used to store content such as digital data documents text files audio files video files image files etc. from one or more client devices authorized on the account. The content can also include folders of various types with different behaviors or other mechanisms of grouping content items together. For example an account can include a public folder that is accessible to any user. The public folder can be assigned a web accessible address. A link to the web accessible address can be used to access the contents of the public folder. In another example an account can include a photos folder that is intended for photos and that provides specific attributes and actions tailored for photos an audio folder that provides the ability to play back audio files and perform other audio related actions or other special purpose folders. An account can also include shared folders or group folders that are linked with and available to multiple user accounts. The permissions for multiple users may be different for a shared folder.

The content can be stored in content storage . Content storage can be a storage device multiple storage devices or a server. Alternatively content storage can be a cloud storage provider or network storage accessible via one or more communications networks. Content management system can hide the complexity and details from client devices so that client devices do not need to know exactly where the content items are being stored by content management system . In one variation content management system can store the content items in the same folder hierarchy as they appear on client device . However content management system can store the content items in its own order arrangement or hierarchy. Content management system can store the content items in a network accessible storage SAN device in a redundant array of inexpensive disks RAID etc. Content storage can store content items using one or more partition types such as FAT FAT32 NTFS EXT2 EXT3 EXT4 ReiserFS BTRFS and so forth.

Content storage can also store metadata describing content items content item types and the relationship of content items to various accounts folders or groups. The metadata for a content item can be stored as part of the content item or can be stored separately. In one variation each content item stored in content storage can be assigned a system wide unique identifier.

Content storage can decrease the amount of storage space required by identifying duplicate files or duplicate segments of files. Instead of storing multiple copies content storage can store a single copy and then use a pointer or other mechanism to link the duplicates to the single copy. Similarly content storage can store files more efficiently as well as provide the ability to undo operations by using a file version control that tracks changes to files different versions of files including diverging version trees and a change history. The change history can include a set of changes that when applied to the original file version produce the changed file version.

Content management system can be configured to support automatic synchronization of content from one or more client devices . The synchronization can be platform agnostic. That is the content can be synchronized across multiple client devices of varying type capabilities operating systems etc. For example client device can include client software which synchronizes via a synchronization module at content management system content in client device s file system with the content in an associated user account. In some cases the client software can synchronize any changes to content in a designated folder and its sub folders such as new deleted modified copied or moved files or folders. The client software can be a separate software application can integrate with an existing content management application in the operating system or some combination thereof. In one example of client software that integrates with an existing content management application a user can manipulate content directly in a local folder while a background process monitors the local folder for changes and synchronizes those changes to content management system . Conversely the background process can identify content that has been updated at content management system and synchronize those changes to the local folder. The client software can provide notifications of synchronization operations and can provide indications of content statuses directly within the content management application. Sometimes client device may not have a network connection available. In this scenario the client software can monitor the linked folder for file changes and queue those changes for later synchronization to content management system when a network connection is available. Similarly a user can manually stop or pause synchronization with content management system .

A user can also view or manipulate content via a web interface generated and served by user interface module . For example the user can navigate in a web browser to a web address provided by content management system . Changes or updates to content in the content storage made through the web interface such as uploading a new version of a file can be propagated back to other client devices associated with the user s account. For example multiple client devices each with their own client software can be associated with a single account and files in the account can be synchronized between each of the multiple client devices .

Content management system can include a communications interface for interfacing with various client devices and can interact with other content and or service providers . . . collectively via an Application Programming Interface API . Certain software applications can access content storage via an API on behalf of a user. For example a software package such as an app on a smartphone or tablet computing device can programmatically make calls directly to content management system when a user provides credentials to read write create delete share or otherwise manipulate content. Similarly the API can allow users to access all or part of content storage through a web site.

Content management system can also include authenticator module which can verify user credentials security tokens API calls specific client devices and so forth to ensure only authorized clients and users can access files. Further content management system can include analytics module that can track and report on aggregate file operations user actions network usage total storage space used as well as other technology usage or business metrics. A privacy and or security policy can prevent unauthorized access to user data stored with content management system .

Content management system can include sharing module for managing sharing content publicly or privately. Sharing content publicly can include making the content item accessible from any computing device in network communication with content management system . Sharing content privately can include linking a content item in content storage with two or more user accounts so that each user account has access to the content item. The sharing can be performed in a platform agnostic manner. That is the content can be shared across multiple client devices of varying type capabilities operating systems etc. The content can also be shared across varying types of user accounts.

In some embodiments content management system can be configured to maintain a content directory identifying the location of each content item in content storage . The content directory can include a unique content entry for each content item stored in the content storage.

A content entry can include a content path that can be used to identify the location of the content item in content storage . For example the content path can identify the exact storage address of the content item in memory. In some embodiments the content path can identify multiple locations in memory each of which contains a portion of the content item.

Further the content path can include the name of the content item and a folder hierarchy associated with the content item. For example the content path can include a folder or path of folders in which the content item is placed as well as the name of the content item. Content management system can use the content path to present the content items in the appropriate folder hierarchy.

In addition to a content path a content entry can also include a user account identifier that identifies the user account that has access to the content item. In some embodiments multiple user account identifiers can be associated with a single content entry indicating that the content item has shared access by the multiple user accounts.

To share a content item privately sharing module can be configured to add a user account identifier to the content entry associated with the content item thus granting the added user account access to the content item. Sharing module can also be configured to remove user account identifiers from a content entry to restrict a user account s access to the content item.

To share a content item publicly sharing module can be configured to generate a sharing link which can be used to access the content item. In some embodiments a sharing link can be a custom network address such as a uniform resource locator URL which allows the content item to be accessed without any authentication. The generated sharing link can be used to identify the content item associated with the sharing link. Upon generating the sharing link sharing module can create an entry in a sharing index. The entry can include the generated sharing link and a content path of the content item that can be used to identify the location of the content item on content management system . Upon receiving a request via the sharing link content management system can search for the sharing link in the sharing index to identify the location of the content item. Content management system can thus return the content item to a requesting client device .

In some embodiments a sharing link can be created upon a user requesting to share a content item. For example client device can be configured to send a sharing request to content management system upon receiving a sharing input requesting to share a content item. Upon receiving the sharing request from client device content management system can be configured to create a sharing link and send the sharing link to client device which can be made available to the user to share the content item.

The sharing request sent to content management system can include the content path of the content item identified by the sharing input. Upon receiving the sharing request from client device content management system can be configured to generate a sharing link and create an entry in the sharing index including the generated sharing link and the content path received from client device . Content management system can send the created sharing link to client device which can be made available to the user to share the content item.

In some embodiments client device can send sharing request in response to receiving a sharing input indicating that a user of client device would like to share a content item. The sharing input can identify the content item that the user wishes to share with other users. For example in some embodiments client device can present the user with a user interface element such as button enabling a user to share content item A . Selection of the user interface element can result in the sharing input identifying content item A .

Upon receiving sharing request content management system can generate a sharing link X . Further content management system can add an entry in sharing index including the generated sharing link X and the content path foo received from client device . Content management system can send the generated sharing link X to client device in message . Client device can present the received sharing link X which can be used to share content item A .

Returning to the discussion of in some embodiments the sharing link returned to client device can be visually presented by client device . For example sharing module can be configured to cause client device to present the sharing link in a window. A user can then easily share the content item by copying the sharing link to an e mail a post to a social networking site etc.

In some embodiments the sharing link can be stored in a data buffer on client device where it can be accessible from multiple applications executed on client device . For example the sharing link can be stored in a data buffer such as a clipboard and a user can use a paste function to include the sharing link in e mails social networking posts etc.

In some embodiments client device can be configured to allot an amount of time in which the sharing link must be created. For example creation of a sharing link may be delayed due to lack of network connection slow network connection delay by content management system etc. To ensure that a user is not left waiting for the requested sharing link for an extended period of time client device can be configured to set a timer upon sending the sharing request to content management system . If the sharing link is not returned to client device within the allotted amount of time after sending the sharing request to content management system client device can be configured to present the user with an error message that the sharing link could not be created.

If the sharing link is returned to client device after the allotted amount of time has expired client device can store the received sharing link in a local memory on client device for later user. For example if the user later tries to publicly share the same content item client device can retrieve the sharing link from the local memory and make the sharing link available to the user. Thus client device can make the sharing link available to the user without having to send a sharing request to content management system . In this type of embodiment client device can be configured to check the local memory on client device for a sharing link to the content item prior to sending a sharing request to content management system .

Upon receiving the sharing input the method continues to block where the client device determines if a sharing link for the content item is stored in a local memory on the client device. For example a user may have previously requested to publicly share the content item and a resulting sharing link can be stored in a local memory of the client device and associated with the content item. The client device can search the local memory to determine if a sharing link to the content item is stored in the local memory.

If at block the client device determines that a sharing link to the content item is stored on the client device the method continues to block where a sharing link is stored in a data buffer such as a clipboard on the client device. The method then continues to block where a notification that the sharing link has been created is presented to the user. The method then continues to block where the received sharing link is stored in local memory and associated with the content item. The method then ends.

If at block the client device determines that a sharing link to the content item is not present in local memory the method continues to block where the client device sends a sharing request to the content management system. A sharing request can include the content path of the content item.

At block the client device can initiate a timer for receiving a response from the content management system. For example the client device can allot a predetermined amount of time after sending the sharing request to receive a response including the sharing link from the content management system.

At block the method determines if a sharing link was received within the predetermined amount of time allotted to receive a response from the content management system. If at block it is determined that a sharing link was received within the predetermined amount of time the method continues to block where the client device stores the received sharing link in the data buffer. The method then continues to block where the client device provides a notification to the user that the sharing link was stored in the data buffer. The method then continues to block where the received sharing link is stored in local memory and associated with the content item. The method then ends.

Alternatively if at block a sharing link is not received within the allotted time the method continues to block where an error message is presented to the user. For example the client device can present a message indicating that a sharing link could not be created and that the user can attempt to create the sharing link at a later time.

Although the sharing link was not received from the content management system within the allotted time the content management system can still return the sharing link to the client device. For example problems such as a network connection issue between the client device and the content management system can cause a delay that results in the sharing link being sent to the client device after the allotted time expires. Thus at block the client device determines if a sharing link is received by the client device. If at block a sharing link is not received from the content management system the method ends.

If at block a sharing link is received from the content management system the method continues to block where the received sharing link is stored in local memory on the client device and associated with the content item. Thus if a user selects to share the content item in the future the client device can provide the sharing link stored in local memory and a sharing request does not need to be sent to the content management system. The method then end.

Upon receiving the sharing request the method continues to block where the content management system generates the sharing link. The content management system can generate the sharing link in any of a variety of ways known in the art however it is preferable that each sharing link generated be unique.

Upon creating the sharing link the method continues to block where the content management system creates a new entry in a sharing index. The sharing index can be a list of sharing links created by the content management system. The sharing index can further list the content path corresponding to each sharing link listed in the sharing index. The content management system can add a new entry to the sharing index that includes the sharing link created by the content management system as well as the content path received from the client device.

The method then continues to block where the sharing link created by the content management system is sent to the client device where it can then be provided to a user. The method then ends.

Returning to the discussion of in some embodiments a sharing link can be pre cached in a local memory on client device which can be provided to the user upon receiving a sharing input. Pre caching a sharing link on client device provides several advantages over requesting a sharing link from content management system upon receiving a sharing input. For example by pre caching sharing links on client device client device can make a sharing link available to the user almost immediately without having to send a request to content management system . Thus client device can make the sharing link available to the user almost immediately upon receiving a sharing input. Further client device can make a sharing link available to the user even while client device is offline i.e. client device is not in network connection with content management system .

To pre cache sharing links on client device sharing module can create a sharing link and send the sharing link to client device . Client device can store the sharing links in a local memory on client device . Further sharing module can create a new entry in the sharing index that only includes the created sharing link sent to client device . Thus the new entry does not include a content path.

Upon receiving a sharing input client device can make the sharing link stored in local memory available to the user. Client device can then send a sharing request to content management system that includes the content path of the content item and the sharing link provided to the user. Upon receiving the sharing request sharing module can use the content path and sharing link to update the sharing index entry associated with the sharing link to include the content path received from client device .

Further content management system has created three sharing links X Y and Z and has also created an entry for each of the three sharing links in sharing index . As shown each entry in sharing index includes a value for a sharing link but no value for a content path.

Upon providing sharing link X to the user in response to receiving the sharing input client device can send sharing request to content management system . Sharing request can include the content path foo of content item A as well as the sharing link X provided to the user.

Content management system can use the sharing link X and content path foo to update sharing index . As shown content management system has updated the entry associated with sharing link X to include the content path foo received from client device .

Further in some embodiments content management system can send a new sharing link to replace sharing link X stored in local memory on client device in response to receiving sharing request . Alternatively in some embodiments client device can be configured to request new sharing links from content management system . For example client device can be configured to request new sharing links from content management system upon a determination that the number of sharing links stored in local memory is low for example if only one unallocated sharing link is available.

If at block the client device determines that there are no available sharing links in the local memory the method continues to block where an error message is presented to the user. For example the error message can alert the user that a sharing link cannot be provided at that time and the user should try again later. The method then ends.

If at block the client device determines that there is an available sharing link stored in the local storage the method continues to block where the client device stores the available sharing link in a data buffer. The method then continues to block where the client device notifies the user that the sharing link has been stored in the data buffer.

At block the client device sends a sharing request to the content management system. The sharing request can include the sharing link and the content path associated with the content item. The method then continues to block where a new sharing link can be received from the content management system. The new sharing link can be stored in the local storage and provided to a user in response to receiving future sharing inputs.

Upon generating the sharing link the content management system can create a new entry in a sharing index. The sharing index can list sharing links generated by the content management system along with the content path of the content item to which the respective sharing link provides access. The new content entry created by the content management system can include the generated sharing link and have no value for the content path.

Upon creating the entry in the sharing index the content management system can send the sharing link to the client device where it can be stored in a local memory on the client device.

At block the content management system can receive a sharing request from the client device. The sharing request can include the sharing link along with a content path. The method then continues to block where the content management system updates the entry in the sharing index associated with the sharing link to include the content path received from the client device. The method then ends or alternatively is repeated.

Returning to the discussion of one advantage of the disclosed technology is that a sharing link can be provided to a user without the content item itself being stored on content management system . For example a user can select to share a content item on client device prior to the content item being uploaded to content management system .

Although the sharing link can be made available to the user the sharing link will not provide access to the content until the content item is uploaded to content management system . Sharing module can therefore be configured to determine if a content item requested via a sharing link is stored on content management system and return an error message to a user if the content item is not stored on content management system .

In some embodiments client device can be configured to create a share link to a content item as it is created on client device . For example a user can create a content item on client device using functionality provided by client device such as taking a picture with a camera of client device or by taking a screenshot of the screen presented on client device .

Client device can be configured to regard creation of a content item on client device as a sharing input to share the newly created content item. Thus upon a user creating a content item by for example taking a screenshot of client device client device can be configured to make a sharing link to the newly created client device available to the user. For example in some embodiments client device can send a sharing request to content management system for a sharing link. Alternatively in some embodiments client device can make a pre cached sharing link stored in local memory on client device available to the user of client device .

Thus upon a user creating a new content item client device can make a sharing link to access the content item available by for example storing the sharing link in a data buffer on the client device. The user can then share the content item by pasting the sharing link stored in the data buffer into an e mail social networking post etc.

While content management system is presented with specific components it should be understood by one skilled in the art that the architectural configuration of system is simply one possible configuration and that other configurations with more or less components are also possible.

The content item request can be sent using a sharing link created to share the content item. For example in some embodiments the content item request can be sent upon a user selecting the sharing link. Alternatively in some embodiments the content item request can be sent upon a user entering the sharing link into a URL field in a web browser application.

Upon receiving the content item request the method continues to block where the content management system identifies the entry in the sharing index associated with the requested content item. For example the content item request can include the sharing link and the content management system can use the sharing link to search the sharing index for the corresponding entry.

At block the content management system determines if the identified sharing index entry includes a data path. For example in embodiments in which the sharing link is provided to a user from a local memory on a client device the client device may not have yet sent the content path of the content item to the content management system.

If at block there is no content path included in the sharing index entry the method continues to block where an error message is returned to the requesting client device. The error message can indicate that the requested content item is not yet available.

If at block the sharing index entry does include a content path the method continues to block where the content management system locates the content item using the content path. At block the content management system determines if the content item is stored on the content management system.

If at block it is determined that the content item is not stored on the content management system the method continues to block where an error message is sent to the requesting user device. The error message can indicate that the content item is not yet stored on the content management system. In some embodiments the error message can indicate an upload status of the content item. For example the error message can indicate whether the content item has begun uploading and if so what percentage has completed uploading to the content management system. Further the error message can include an estimated completion time of an upload.

If at block the content management system determines that the content item is stored on the content management system the method continues to block where the content management system can return the content item to the requesting client device. The method then ends.

To enable user interaction with the computing device an input device can represent any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems can enable a user to provide multiple types of input to communicate with the computing device . The communications interface can generally govern and manage the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

Storage device is a non volatile memory and can be a hard disk or other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards solid state memory devices digital versatile disks cartridges random access memories RAMs read only memory ROM and hybrids thereof.

The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device can be connected to the system bus . In one aspect a hardware module that performs a particular function can include the software component stored in a computer readable medium in connection with the necessary hardware components such as the processor bus display and so forth to carry out the function.

Chipset can also interface with one or more communication interfaces that can have different physical interfaces. Such communication interfaces can include interfaces for wired and wireless local area networks for broadband wireless networks as well as personal area networks. Some applications of the methods for generating displaying and using the GUI disclosed herein can include receiving ordered datasets over the physical interface or be generated by the machine itself by processor analyzing data stored in storage or . Further the machine can receive inputs from a user via user interface components and execute appropriate functions such as browsing functions by interpreting these inputs using processor .

It can be appreciated that exemplary systems and can have more than one processor or be part of a group or cluster of computing devices networked together to provide greater processing capability.

For clarity of explanation in some instances the present technology may be presented as including individual functional blocks including functional blocks comprising devices device components steps or routines in a method embodied in software or combinations of hardware and software.

In some embodiments the computer readable storage devices mediums and memories can include a cable or wireless signal containing a bit stream and the like. However when mentioned non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

Methods according to the above described examples can be implemented using computer executable instructions that are stored or otherwise available from computer readable media. Such instructions can comprise for example instructions and data which cause or otherwise configure a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Portions of computer resources used can be accessible over a network. The computer executable instructions may be for example binaries intermediate format instructions such as assembly language firmware or source code. Examples of computer readable media that may be used to store instructions information used and or information created during methods according to described examples include magnetic or optical disks flash memory USB devices provided with non volatile memory networked storage devices and so on.

Devices implementing methods according to these disclosures can comprise hardware firmware and or software and can take any of a variety of form factors. Typical examples of such form factors include laptops smart phones small form factor personal computers personal digital assistants and so on. Functionality described herein also can be embodied in peripherals or add in cards. Such functionality can also be implemented on a circuit board among different chips or different processes executing in a single device by way of further example.

The instructions media for conveying such instructions computing resources for executing them and other structures for supporting such computing resources are means for providing the functions described in these disclosures.

Although a variety of examples and other information was used to explain aspects within the scope of the appended claims no limitation of the claims should be implied based on particular features or arrangements in such examples as one of ordinary skill would be able to use these examples to derive a wide variety of implementations. Further and although some subject matter may have been described in language specific to examples of structural features and or method steps it is to be understood that the subject matter defined in the appended claims is not necessarily limited to these described features or acts. For example such functionality can be distributed differently or performed in components other than those identified herein. Rather the described features and steps are disclosed as examples of components of systems and methods within the scope of the appended claims.

