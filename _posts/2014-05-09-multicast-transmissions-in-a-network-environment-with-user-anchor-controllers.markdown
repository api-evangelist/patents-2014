---

title: Multicast transmissions in a network environment with user anchor controllers
abstract: According to one embodiment of the invention, a non-transitory computer readable medium for improving the scalability and redundancy of a wireless communications network. One embodiment of the non-transitory computer readable medium comprises instructions that determine whether a same data stream is being received by a first access point from each of two or more network devices of a plurality of network devices, responsive at least to the determining operation, select a particular network device, of the plurality of network devices, for transmitting the data stream to the first access point, and configure the plurality of network devices such that the particular network device transmits the data stream to the first access point without any other network devices in the plurality of network devices transmitting the same data stream to the first access point.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09456314&OS=09456314&RS=09456314
owner: Aruba Networks, Inc.
number: 09456314
owner_city: Sunnyvale
owner_country: US
publication_date: 20140509
---
Embodiments of the present disclosure relate to improving the scalability and redundancy of a wireless communications network. One embodiment of the present disclosure further relates to an architecture of a wireless communications network that has the ability to create and share state information among network devices.

In recent years Wireless Local Area Network WLAN technologies have emerged as a fast growing market. Among the various WLAN technologies Institute of Electrical and Electronics Engineers IEEE 802.11 standard is the dominating technology and is frequently used for WLANs.

Client devices within WLANs communicate with access points in order to obtain access to one or more network resources. An access point referred to as an AP is a digital device that operates as a gateway for a client device to establish a connection e.g. a communicative coupling with one or more networks e.g. the Internet an intranet etc. . For example an AP may be implemented as a wireless AP WAP which is configured to communicate wirelessly with one or more client devices as well as communicate with a networked device associated with the one or more networks such as a controller for example through a wired connection.

With respect to enterprise networks and other types of expansive multiple controller based networks conventional WLAN architectures do not manage controllers resources efficiently. For instance a client device that is communicatively coupled to a first AP may switch to a second AP due to a change in location of the client device failure of the first AP a better signal strength for the second AP or for a number of other reasons. The second AP then determines whether to grant the client device access to one or more network resources.

When a client device switches from a first AP to a second AP the first AP and second AP may be managed by separate controllers. Currently the controllers do not forward data e.g. state information of transferred client devices. So if by switching controllers the client device crosses an Open Systems Interconnection OSI Layer 3 L3 boundary therefore switching IP subnets a communication tunnel e.g. a Generic Routing Encapsulation GRE tunnel may be created between the first controller and the second controller. In this situation the network traffic of the client device that is received via the second AP may be routed to both the second controller and to the first controller via the GRE tunnel. One advantage of this situation is that all of the state information and client sessions for the client device are maintained. However the network traffic takes a longer path because it is routed through two controllers and two controllers are serving the client device therefore wasting network resources. Furthermore a network wide table is required to implement the tunneling system as each original controller must be maintained for each client device. This creates scalability issues as the number of client devices and controllers increases.

In a second situation a client device may switch from a first AP to a second AP where the APs are managed by separate controllers but the controllers are in the same IP subnet i.e. the client device does not cross a L3 boundary . In this situation there is no mechanism to indicate to the controllers that a communication tunnel should be created between the first controller and the second controller. The second controller now manages the client device but the second controller does not have any of the state information of the client device. Therefore the client sessions of the client device must be discarded the client device must be re authentication and the client sessions and state information must be recreated. This creates a disruption in the connection for the client device and wastes resources of the network because the state information of the client device previously existed.

Additionally conventional multiple controller based WLAN architectures support client matching namely seamless matching of client devices with corresponding APs that are better able to provide network connectivity or communications as a whole with those client devices. For instance according to conventional client matching techniques a controller may attempt to direct a client device to a targeted AP within a first set of APs through a blacklisting function in which all APs controlled by the controller except for the targeted AP are precluded from associating with the client device. This may require the client device to disconnect from its current AP e.g. transmit a De authentication message in response to a prolonged connectivity disruption and begin to seek to associate with another AP. When the controller performing the blacklisting function manages all of the APs this strategy is effective. However if a second set of APs managed by a second controller is adjacent to the first set managed by the first controller the client device may associate with an AP of the second set and disrupt the targeting process of the first controller. The first controller does not communicate with the second controller and therefore cannot notify the second controller of its intention to direct the client device to a particular AP.

The approaches described in this section are approaches that could be pursued but not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.

Various embodiments of the disclosure relate to the configuration of access points APs and controllers within a Wireless Local Area Network WLAN . Multiple APs may be managed by a single controller on the network. A client device may associate with a first AP in order to connect to the network and roam from AP to AP expecting to maintain connectivity. According to one embodiment of the disclosure when a client device initially joins a network it is managed by a single controller. As the client device roams from AP to AP throughout the network the controller maintains management of the client device. If the client device needs to be managed by a different controller the information stored on the first controller is transitioned to the second controller.

In current architecture a controller that handles a client device does not communicate state information regarding the client device to a second controller when the client device transitions from the first controller to the second controller. State information may include authentication information firewall session information multicast information gateway information and or optimization information for a particular client device.

By providing an architecture and mechanism for controllers within a WLAN to communicate the scalability performance reliability and redundancy of the wireless network is improved dramatically. Embodiments herein relate to one or more of the following 1 client device steering to a controller 2 AP steering to a controller 3 client device synchronization and redundancy across controllers or 4 enhanced multicast proxy among controllers.

A cluster of controllers may comprise a network entity serving one or more wireless clients. All of the controllers within a cluster include the same functionalities and capabilities so that any individual controller may serve any individual AP and any individual client device. This allows for the balancing of the workload among all of the controllers in any preferred distribution scheme. For example in one embodiment the workload may be balanced as evenly as possible among the controllers. Furthermore more client devices may be served when multiple controllers communicate than when a single controller handles all APs and all client devices on a network.

The number of controllers within a cluster is not static. The number of controllers may increase or decrease for numerous reasons. Examples of such reasons may include but are not limited or restricted to the addition of a new controller to the system the failure or the purposeful deactivation of a controller e.g. to perform a software upgrade on the controller .

In addition when one controller handles all APs and all client devices on a network there is a large fault domain. When a controller that handles all or a large percentage of the APs or clients on the network fails or is unavailable the impact is highly detrimental to the network. By distributing the workload of one or more APs or one or more client devices across a cluster of controllers having the same functionalities and capabilities there is less of an impact when a controller fails or is unavailable to handle APs or client devices.

In one embodiment when all controllers within a cluster include the same functionalities and capabilities an all active redundancy scheme may be implemented.

Herein certain terminology is used to describe features within embodiments of the invention. For example the term network device generally refers to electronic equipment which may be configured with an antenna system that enables transmission and or receipt of wireless messages over a wireless network. Hence the network device is further adapted with circuitry to support wireless connectivity with other network devices being part of the wireless network. Different types of network devices may include but are not limited to 1 a client device and 2 an edge device.

Herein the term client device may refer to a stationary network device e.g. desktop computer television set top box video gaming console etc. or a mobile network device capable of connecting to one or more wireless networks. Illustrative examples of mobile network devices may include among others a tablet laptop netbook bar code scanner a digital camera and or a mobile handset such as a smartphone or a personal digital assistant PDA. Likewise the term access point or AP is a network device a type of edge device in particular that controls access to a network where the AP may be deployed as a wired access point that featured wired connectivity with one or more client devices or as a wireless access point that featured wireless connectivity with one or more client devices. Of course the AP also may represent other types of edge devices such as a wireless base station a cellular base station or any device configured as a hot spot or gateway for network connectivity.

It is contemplated that a network device includes hardware logic such as one or more of the following i processing circuitry ii one or more communication interfaces such as a radio e.g. component that handles the wireless data transmission and or reception and or a physical connector to support wired connectivity and or iii memory in the form of a non transitory computer readable storage medium e.g. a programmable circuit a semiconductor memory such as a volatile memory such as random access memory RAM or non volatile memory such as read only memory power backed RAM flash memory phase change memory or the like a hard disk drive an optical disc drive etc. or any connector for receiving a portable memory device such as a Universal Serial Bus USB flash drive portable hard disk drive or the like.

The term cluster of controllers refers to one or more controllers comprising a network entity serving one or more wireless clients. When a cluster of controllers comprises a plurality of controllers the controllers are able to communicate data among all controllers within the cluster of controllers. The controllers comprising a cluster of controllers may include controllers of multiple capacities.

Herein the term logic is generally defined as hardware and or software. For example as hardware logic may include processing circuitry e.g. a microcontroller any type of processor a programmable gate array an application specific integrated circuit etc. semiconductor memory combinatorial logic or the like. As software logic may be one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an object method implementation an applet a servlet a routine a source code an object code a shared library dynamic load library or one or more instructions. These software modules may be stored in any type of a suitable non transitory storage medium described above or transitory computer readable transmission media e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals digital signals .

The term link is a physical or logical communication path between two or more network devices. Examples of a link may include a wireless link that supports the transfer of wireless messages over certain radio frequency RF channels and or bands or cellular frequency channels and or bands as well as the logic associated therewith.

The term message generally refers to information transmitted as information in a prescribed format where each message may be in the form of a packet a frame an IEEE 802.11 frame or any other series of bits having the prescribed format.

The term control scope refers to the network serviced by a cluster of controllers. For instance the control scope of a cluster of controllers may comprise all access points APs and client devices serviced by the cluster of controllers.

The term load balancing includes among other things reassigning one or more client devices to one or more controllers based on the number of client devices assigned to a particular controller the amount of network traffic being managed by a particular controller the type of network traffic being managed by a particular controller or the increase or decrease of the number of controllers within the cluster of controllers. Furthermore load balancing may refer to the reassignment of one or more APs to one or more controllers based on the number of APs assigned to a particular controller the amount of network traffic being managed by a particular controller or AP the type of network traffic being managed by a particular controller or AP or the increase or decrease of the number of controllers within the cluster of controllers or the number of APs within the control scope of the cluster of controllers.

The phrase an assigned client device refers to a client device that has joined a network and has state information stored on a single controller. The controller that is storing the state information is the primary controller of the client device. The network traffic coming from the assigned client device is transmitted only to the primary controller not other controllers within the cluster of controllers from the AP with which the client device is associated. The assigned client device remains assigned to the primary controller until the primary controller goes offline or if load balancing requires the AP to be assigned with a different controller.

The phrase an assigned access point AP refers to an AP that is managed by a single controller within the cluster of controllers. The controller that manages the assigned AP is the primary controller of the AP. The assigned AP remains assigned to the primary controller until an error occurs with the primary controller. Examples of possible errors with a controller include but are not limited or restricted to a failure of the controller the controller being taken offline or possibly when load balancing is performed.

The term an associated client device refers to a client device that has joined the network and requested to transmit its network traffic through the AP. An associated client device does not necessarily stay associated with the particular AP for the life of its time connected to the network. Instead a client device may roam throughout the network and associate with various APs.

The term table refers to an arrangement of data according to a selected organization. Examples of a table may include but are not limited or restricted to a collection of one or more rows and columns a bucket map a linked list a hash table or any other data structure that maintains correspondence of data. A table may store a plurality of data.

Lastly the terms or and and or as used herein are to be interpreted as an inclusive or meaning any one or any combination. Therefore A B or C or A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions steps or acts are in some way inherently mutually exclusive.

As this invention is susceptible to embodiments of many different forms it is intended that the present disclosure is to be considered as an example of the principles of the invention and not intended to limit the invention to the specific embodiments shown and described.

Access point AP steering to a controller consists of the act of assigning an AP to a controller within a cluster of controllers. The controller to which the AP is assigned is the AP s primary controller. The primary controller of an AP is responsible for handling the management of the assigned AP and pushing controller bucket map configurations to the AP. The controller configuration may be represented by for example a table a linked list or other data structures that maintain correspondence of information. A controller bucket map configuration table allows the AP to know how to map a client device attempting to associate with the AP to the appropriate controller. The particulars associated with the controller bucket map configuration tables and the primary controller will be discussed later. Furthermore the primary controller of an AP also coordinates multicast traffic delivery which will also be discussed later.

When an AP is initially being configured to handle network traffic from client devices the AP may be assigned to a controller within the cluster of controllers. The determination or identification of the assignment of the AP may be made based on among other things a radio frequency RF neighborhood AP type or AP link characteristics the physical location of one or more APs the type of security offered e.g. Wired Equivalent Privacy WEP Data Encryption Standard DES Advanced Encryption Standard AES Internet Protocol Security IPSec etc. a hash value obtained through a hash function of an identifier of an AP e.g. a media access control MAC address the detection of a security threat associated with one or more APs or the detection of a load on one or more APs being above or below a particular threshold. Another reason for steering one or more APs to one or more particular controllers may be based on the time of day or day of the week. For instance it may be beneficial to reduce the power consumption of the network by powering down particular controllers or APs at a certain time of the day e.g. 9 pm 6 am or on one or more days of the week e.g. Saturday and Sunday .

In one embodiment the controller initially contacted by the AP attempting to be configured may handle at least in part the determination as to which controller of the cluster of controllers is assigned to the AP. In other embodiments a managing controller of the cluster of controllers may be responsible for AP assignments or in the alternative or in addition to the managing controller the AP or a Software Defined Networks SDN application may make the determination for AP assignment.

Referring to a block diagram of an exemplary network system is illustrated. Controllers and comprise a cluster of controllers within a single network. AP is assigned to controller AP is assigned to controller and AP is assigned to controller .

According to this embodiment of the disclosure each AP and is a stationary device within the network and therefore remains assigned to a single primary controller until i the primary controller fails ii the primary controller is taken offline or iii load balancing requires the AP to be assigned with a different controller. However when the primary controller goes offline or load balancing requires the AP to be assigned to a different controller it becomes necessary to reassign the AP to a different controller. Furthermore it may be beneficial to steer one or more APs to one or more particular controllers based on the characteristics or events discussed above regarding the initial steering of an AP to a controller.

An AP to controller bucket map configuration table is stored on each AP within the control scope of the cluster of controllers and on each controller within the cluster. The AP to controller configuration table maintains the correspondence of each AP and controller to which the AP is assigned. Therefore when a controller becomes unavailable to manage one or more APs the AP to controller configuration table storing the AP to controller assignments will be updated by the cluster of controllers in the same manner as will be discussed below regarding a client device to controller configuration table storing the client device to controller assignments.

The reassignment of an AP from one controller to a second controller within the cluster of controllers may occur for multiple reasons including but not limited or restricted to AP type one or more attributes of the AP e.g. a level of security the AP may offer priority level of the AP typical data being transmitted to from the client devices associated with the AP or location of the AP heuristics or guidance from a managing controller controller failure purposefully removing a controller from the network e.g. for a software upgrade or balancing the workload on the network. In one instance the clusters may determine that load balancing is necessary due to the number of hash collisions occurring within the current AP to controller configuration table.

Determining to which controller to steer an AP for reassignment may be made by multiple sources. For instance the primary controller of the AP that needs to be reassigned may make the determination as to which controller should become the primary controller of the AP. In a second embodiment a managing controller of the cluster of controllers may make the determination as to which controller should become the primary controller of the AP. In yet another embodiment a Software Defined Networks SDN application may make the determination as to which controller should become the primary controller of the AP.

Referring to an exemplary diagram of a flowchart illustrating a process of reassigning a client device from a first primary controller to a second primary controller when redundancy is incorporated is provided. To further assist in the explanation of the process are provided. In the embodiment discussed with and three controllers comprise the cluster of controllers controller  controller  and controller .

Referring to an exemplary diagram illustrating an initial state of an AP to controller configuration table prior to beginning the process of reassigning an AP is provided. Column represents the index value computed from the hash value computed from the MAC address of an AP herein after corresponding index value that denotes the entry within the AP to controller configuration table in which the AP is to access. Column represents the primary controller of the corresponding index value. Column represents the standby controller of the corresponding index value. A standby controller of a corresponding index value is not currently managing any AP mapped to that index value. The standby controller of a first corresponding index value is the primary controller for one or more APs of a second index value.

Referring to in block the controller to be taken offline is identified. In this exemplary embodiment controller  is to be taken offline so a software upgrade may be performed. In block the AP to controller configuration table is updated by only changing the standby column. The updated AP to controller configuration table may then be distributed to all of the APs within the control scope of the cluster of controllers and to all of the controllers within the cluster block . For example as seen in the AP to controller configuration table of includes an updated standby column representing the standby controllers col. . It is seen in the column that controller  has been removed from being a standby controller. For example as seen in the content of the entry has been updated from controller  to controller .

In block the AP to controller configuration table is updated a second time but by only changing the primary column. The updated AP to controller configuration table may then be distributed to all of the APs within the control scope of the cluster and to all of the controllers within the cluster block . For example as seen in the AP to controller configuration table of includes an updated column representing the primary controllers col. . It is seen in col. that controller  has been removed from being a primary controller. Therefore controller  is no longer carrying any network traffic and may be taken offline for among other reasons a software upgrade process.

In other embodiments there may be additional columns representing multiple standby controllers. Referring to the AP to controller configuration table of is seen with a fourth column representing second standby controllers col. . Column provides a secondary backup controller in case both the primary controller col. and the first standby controller column fail for a particular corresponding index value. For example if the primary controller of corresponding index value 1 controller  entry and the first standby controller of corresponding index value 1 controller  entry were to fail controller  the second back up controller of corresponding index value 1 entry would manage the APs of corresponding index value 1.

The AP to controller configuration table may vary in size depending on among other things the number of controllers within the cluster and or the number of APs within the control scope of the cluster.

Client device steering to a controller consists of the act of assigning a client device to a controller within a cluster of controllers. When a client device initially joins a network it may be assigned to a particular controller. The controller to which a client device is assigned is generally referred to as the client device s primary controller. A primary controller of a client device is responsible for handling all wireless network traffic from to the client device. The primary controller of a client device also stores state information for that client device.

Previously when a client device would roam to an AP assigned to a controller other than the primary controller nothing would be done with the accumulated state information stored within the primary controller because the individual controllers did not communicate regarding controller relationships with client devices. Therefore the primary controller of the AP to which the client device roamed was required to begin developing the state information of the client device on its own.

In contrast one embodiment of the disclosure is directed to a network control scheme that enables a controller within a cluster to remain the primary controller for a client device as the client device roams from AP to AP without regard to which IP subnet each AP resides or which controller each AP is assigned as long as each AP is within the control scope of the cluster. As a client device roams the state information of the client device is retained by its primary controller. Since the primary controller does not change as the client device roams the state information of the client device does need not to be recreated when the client roams to an AP that is not assigned to the client device s primary controller. Instead the AP will query the primary controller for the state information and direct all network traffic to from the client device to from the primary controller.

Referring to a block diagram of an exemplary network system is illustrated. Controllers and comprise a cluster of controllers within a single network. The AP is assigned to the controller the AP is assigned to the controller and the AP is assigned to the controller . The client device is assigned to the controller the client device is assigned to the controller and the client device is assigned to the controller . The client devices and are all currently associated with the AP . With the client device being assigned to the controller the controller stores the state information of and manages the network traffic of the client device . Similarly the controller stores the state information of and manages the network traffic of the client device and the controller stores the state information of and manages the network traffic of the client device .

Referring to a block diagram of the exemplary network system of where one client device has roamed is illustrated. Herein it is seen that the client device is now associated with the AP . This may be for example a result of the client device roaming. However even though the client device is now associated with the AP the client device will remain assigned to the controller because the AP is within the control scope of the cluster. In this case the AP obtains state information of the client device from a data path that does not include the primary controller of the AP i.e. the controller .

Therefore illustrates one embodiment in which a client device roams from a first AP managed by a first controller to a second AP within the control scope of the cluster managed by a second controller but the primary controller does not change. In this situation the second AP determines or identifies which controller is the primary controller of the client device and obtains state and managing information of the client device from the primary controller. This prevents the need to recreate any state information by a controller within the cluster when a client device roams.

In one embodiment when a client device initially attempts to associate with an AP the network does not attempt to actively steer the client. Instead each AP implements a hash function to determine whether the client device has already been assigned to a controller or if the client device is new to the system.

Referring to an exemplary diagram of a flowchart illustrating a client device attempting to associate with an AP is provided. In block a client device attempts to associate with an AP. In block the AP obtains an identifier of the client device e.g. a MAC address .

In block the AP performs a hash function on the MAC address of the client device and obtains a hash value and subsequently obtains an index value from the hash value. In block the AP references a controller bucket map configuration table to determine which controller within the cluster of controllers corresponds to the index value. Once the AP has determined which controller corresponds to the index value the AP queries the corresponding controller to determine whether the controller is storing state information of the client device block . In block the controller queried by the AP determines whether it is storing state information of the client device. If the controller is not storing state information of the client device NO at block then it is determined that the client device is new to the network so the controller creates the state information and starts the client sessions such as on control protocol internet protocol TCP IP sessions secure shell SSH sessions etc. block .

The hash function which is the same for each AP computes a hash value based on the MAC address of a client device. The AP maps the hash function to an index value in a client device to controller configuration table e.g. a hash table . The client device to controller configuration table is stored on each AP and each controller. Each time an AP generates the hash value of a client device s MAC address the hash value maps to the same index value in the client device to controller configuration table. Each index value corresponds to the controller managing the network traffic for all client devices whose MAC address maps to that index value. Therefore when the client device attempts to associate with an AP e.g. as a result of roaming the hash value generated by the AP will always correspond to the same index value in the client device to controller configuration table and therefore to the controller managing the network traffic of the client device. As a controller managing a client device the primary controller of that device the primary controller manages the network traffic being sent from and received by the client device and also manages the state information of the client device. Furthermore if the controller to which the index value corresponds does not contain any state information of the client device the client device had never previously attempted to join the network.

Still referring to once the controller corresponding to the index value creates the sessions and state information of the client device block the AP obtains the state information of the client device block . Also when the controller corresponding to the hash value is storing state information of the client YES at block the AP obtains the state information of the client device block . Once the AP has obtained the state information of the client device the AP transmits any network traffic to from the client device to from the primary controller controller corresponding to the index value block .

The client device to controller configuration table may vary in size. In one embodiment the client device to controller configuration table may consist of 128 entries and in a second embodiment the client device to controller configuration table may consist of 256 entries.

In one embodiment the client device to controller configuration table may be configured so that an equal number of index values within the client device to controller configuration table correspond to each controller within the cluster. Referring to an illustration of an exemplary controller bucket map configuration table pertaining to a cluster of controllers wherein each controller is represented an equal number of times is provided. In this embodiment four controllers comprise the cluster controller  controller  controller  and controller . Column represents the index value that denotes the entry within the client device to controller configuration table in which the AP is to access. Column represents the controller corresponding to the computed index value. The content of one entry within column repeats every fifth row. For example the contents of col. rows . . . is controller  while the contents of col. rows . . . is controller . Each controller is represented 64 times 256 4 in the client device to controller configuration table so the probability that a client device will be assigned to any one controller is equal for each controller. In an embodiment where each controller is represented an equal number of times within the client device to controller configuration table the workload is likely to be evenly distributed among the controllers. The MAC address of a client device attempting to join the network has an equal probability corresponding to each index value and therefore there is an equal probability of the client device being assigned to any single controller.

However the client device to controller configuration table may be arranged so one or more controllers appear at a higher density than one or more controllers. This would alter the probability of a client device being assigned to a particular controller. For example the client device to controller configuration table may be configured to purposefully increase the probability of client devices joining the network being assigned to a particular controller. This may be desirable if one controller contains a larger amount of memory and or processing power than another controller. Referring to an illustration of an exemplary client device to controller configuration table pertaining to a cluster of controllers wherein each controller is not represented an equal number of times within the client device to controller configuration table is provided. As in the embodiment of four controllers comprise the cluster of controllers controller  controller  controller  and controller . Column represents the index value computed from the hash value computed from the MAC address of a client device herein after corresponding index value that denotes the entry within the client device to controller configuration table in which the AP is to access. Column represents the controller corresponding to the computed index value. The content of entries within column have no repetitive pattern and no two controllers necessarily appear an equal number of times. For example controller  which is seen to fill the entries of col. row etc. may appear more or less times than for example controller . By configuring the client device to controller configuration table to contain a higher density of a first controller a client device joining the network is more likely to be assigned to the first controller than the other controllers. Therefore it is possible to initially attempt to purposefully assign more client devices to one or more controllers than other controllers by controlling the configuration of the client device to controller configuration table.

The location of the appearance of a controller within the client device to controller configuration table i.e. index value has no relevance as to the controller s probability of being selected as a primary controller for a client device joining the network. Each index value has an equal probability of corresponding to the hash value generated by the AP. Therefore all appearances of a single controller may be grouped together e.g. the first 64 index values within a client device to controller configuration table of 256 index values or located throughout the client device to controller configuration table e.g. randomly allocated 64 index values within the client device to controller configuration table .

In addition the more index values in the client device to controller configuration table the higher the level of granularity of load balancing that can be achieved. For example a client device to controller configuration table with 8 entries pertaining to a cluster of controllers comprising four controllers results in 4096 ways of configuring the client device to controller configuration table i.e. 8 . In contrast a client device to controller configuration table with 256 entries pertaining to the same cluster of controllers results in over four billion 4 294 967 296 ways of configuring the client device to controller configuration table i.e. 256 . Therefore the probability that any one controller is assigned as a new client device s primary controller may be controlled to a more precise percentage as the number of entries in the client device to controller configuration table grows.

Although the client device to controller configuration table may be configured so that the initial assignment of client devices to controllers within the cluster is likely to assign client devices in a desired manner there is no guarantee that the desired result will occur. This is because the assignments are based on the hash values computed in an unpredictable manner by the hash function of the APs. Therefore it may be advantageous or necessary to be able to reassign or steer one or more particular client devices to a different controller within the cluster of controllers.

The reassignment of a client device from one controller to a second controller within the cluster of controllers may occur for multiple reasons including but not limited or restricted to client device type e.g. mobile telephone or laptop one or more attributes of the client device e.g. security clearance of the client device priority level of the client device typical data being transmitted to from the client device or location of the client device heuristics or guidance from a managing controller controller failure purposefully removing a controller from the network e.g. for a software upgrade or balancing the workload on the network. In one instance the clusters may determine that load balancing is necessary due to the number of hash collisions occurring within the current client device to controller configuration table. A high number of collisions may imply that one or more controllers are managing a high number of client devices. Load balancing may allow for a more even distribution of the client devices across the controllers of the cluster of controllers. Therefore when a high number of collisions is detected the workload on the cluster is rebalanced in order to attempt to avoid a large disparity in the workloads being managed by each controller.

Another example of a reason to steer one or more client devices includes security needs of particular controllers e.g. required security clearance levels of a client device . For instance it may be necessary to place client devices requiring a first level of security on a first controller and client devices requiring a second higher level of security on a second controller. Alternatively client devices may be steered to particular controllers based on the type of service required by the client device. Client devices of high importance may be placed on one or more secure high performance controllers and client devices of less importance on other controllers. For example a cluster of controllers may steer personal mobile phones to a first set of controllers and steer enterprise laptops to a second set of controllers that are more secure than the first set of controllers. Other possibilities for reasons for reassigning a client device include among others the physical location of the client the type of data the client device is sending and or receiving where data from a client device is being transmitted or performance of one or more client devices.

In some embodiments the current Layer 2 domain of the controller may be considered when determining to which controller to reassign a client device. In one embodiment the cluster will ensure the controller to which the client device is to be reassigned is on the same Layer 2 domain as the current primary controller of the client device. This prevents the new primary controller from having to de authenticate and re authenticate the client device.

In other embodiments a cost model may be taken into consideration when determining to which controller to reassign a client device. A cost model may take into consideration multiple factors and determine a weighted number corresponding to assigning the client device to one or more controllers. Examples of factors that may be taken into consideration include but are not limited or restricted to the central processing unit CPU and available memory of each controller the link cost and link distance between the AP associated with the client device and each controller link performance and or link delay.

Referring to an exemplary diagram of a flowchart illustrating a process of reassigning a client device from a first primary controller to a second primary controller when redundancy is incorporated is provided. To further assist in the explanation of the process FIGS. A C are provided. In the embodiment discussed with and three controllers comprise the cluster of controllers controller  controller  and controller .

Referring to an exemplary diagram illustrating an initial state of a client device to controller configuration table prior to beginning the process of reassigning a client is provided. Column represents the index value computed from the hash value computed from the MAC address of a client device herein after corresponding index value that denotes the entry within the client device to controller configuration table in which the AP is to access. Column represents the primary controller of the corresponding index value. Column initially empty represents the standby controller of the corresponding index value. A standby controller of a corresponding index value is not currently managing any client device mapped to that index value.

Referring to in block the controller to be taken offline is identified. In this exemplary embodiment controller  is to be taken offline so a software upgrade may be performed. In block the client device to controller configuration table is updated by only populating the rows of the standby column having controller  as the primary controller. The updated client device to controller configuration table is then distributed to all of the APs within the control scope of the cluster of controllers and to all of the controllers within the cluster block . For example as seen in the client device to controller configuration table of includes an updated standby column representing the standby controllers col. for index values 1 5 and 6.

In block a data synchronization by each controller that has been updated in the standby column is performed. For example as seen in the content of the entry has been updated to contain controller . Therefore during the data synchronization process controller  will obtain a copy of the state information of any client devices of corresponding index value 1.

In block the client device to controller configuration table is updated a second time but by only changing the primary column. The updated client device to controller configuration table is then distributed to all of the APs within the control scope of the cluster and to all of the controllers within the cluster block . For example as seen in the client device to controller configuration table of includes an updated column representing the primary controllers col. . It is seen in col. that controller  has been removed from being a primary controller. Therefore controller  is no longer carrying any network traffic and may be taken offline for among other reasons a software upgrade process.

Still referring to in block the APs associated with client device s that have been reassigned to a new controller now direct network traffic to from client device s to from the appropriate controller s based on the updated client device to controller configuration table as seen in . For example the APs associated with any client devices of corresponding index value 5 will now direct network traffic to from those client devices to from controller  instead of controller .

The above embodiment provides the benefit of allowing for a gradual upgrade in software among the controllers of the cluster. Controllers may be taken offline for a software upgrade or for other reasons in increments thereby creating minimal disruption to the network. This reassignment process also allows for an incremental addition of the controllers to the cluster.

An associated AP must be aware of a controller failing or being taken offline in order to transmit data from a client device to the correct controller. An associated AP is notified by its primary controller that a controller has failed. Each controller within the cluster periodically transmits a signal e.g. a heartbeat signal to each controller in the cluster. When a controller fails or is taken offline the other controllers recognize this as soon as a heartbeat is no longer received from the controller that failed or was taken offline. In one embodiment the heartbeat signals may be as frequent as 10 times per second. The primary controller of each AP notifies the AP that the controller failed and the AP knows to look to the standby column in the client device to controller configuration table for any index having to the controller that failed or was taken offline as the primary controller. Furthermore when an updated client device to controller configuration table is distributed an AP is notified by its primary controller. An AP assigned to the controller that failed is notified by the standby controller of the AP.

The various reasons for reassigning a client device from a first controller to a second controller can be grouped into two categories nondeterministic events and deterministic events. Nondeterministic events are events whose time of occurrence is unknown in advance to the cluster and the APs within the control scope of the cluster of controllers. These include among others a controller failure. Deterministic events are events whose time of occurrence is known in advance to the system. These include among others load balancing software updates to one or more controllers or an increase or decrease in the number of controllers in the cluster.

With nondeterministic events there is a possibility of losing state information of client devices connected to the network when redundancy is not implemented. In one embodiment with redundancy implemented the standby controllers always maintain an up to date copy of the state information of the client devices for whom they act as the standby controller. In that embodiment whenever state information of a client device is changed the controller acting as the standby controller is notified and the copy of the state information of that client device is updated.

In other embodiments in order to preserve the resources of the cluster of controllers the cluster of controllers may not always maintain an up to date copy of the state information of each client device. Instead the cluster of controllers may periodically resynchronize the state information of one or more client devices. For instance the cluster may be configured to synchronize state information of each client device for whom it acts as the standby controller. The frequency of synchronization may be dynamically adjusted. In some embodiments the frequency of resynchronize may be based on extended service set identification ESSID i.e. network name or the importance of each client device. Furthermore the cluster of controllers may synchronize only certain portions of state information based on the particular type of network traffic being transmitted to from the client device and or the length particular sessions created by the client device. For example a plurality of TCP IP sessions may be created by a controller when a client device first opens a web browser application in order to load data of the website. These TCP IP sessions typically have a short live span for example one or two seconds so the cluster does not want to waste resources by synchronizing these sessions. Therefore in some embodiments the cluster of controllers may synchronize only some client device sessions within the state information of the client device based on the lifespan of the session.

When the client device to controller configuration table changes it may not be necessary to de authenticate and re authenticate each client device with the new primary controller. The need for de authentication and re authentication may be based on whether network layer connectivity of the old primary controller and the new primary controller. In one embodiment all controllers of the cluster are placed on the same Layer 2 domain. In a second embodiment controllers of the cluster may be placed on separate Layer 2 domains. In a third embodiment one or more controllers of the cluster may be placed on a Layer 2 domain and one or more controllers of the cluster may be placed on a Layer 3 domain.

The communication between controllers within the cluster allows state information of each client device being reassigned to be transitioned to the new primary controller. As long as the old primary controller and the new primary controller are on the same Layer 2 domain no de authentication and re authentication is necessary. In this case the heartbeat from the AP to the client device is still present so the client device may not even know that its primary controller has changed. However if the old primary controller and the new primary controller are on separate Layer 2 domains de authentication and re authentication processes are required because the IP address the client device previously used is no longer valid.

When the new primary controller and the old primary controller are different Layer 3 domains the cluster will need to perform de authentication and re authentication processes when a client device is reassigned.

Determining to which controller to steer a client device may be made by multiple sources. For instance the AP associated with a client device that needs to be reassigned may make the determination as to which controller should become the primary controller of the client device. In a second embodiment the primary controller of the client device that needs to be reassigned may make the determination as to which controller should become the primary controller of the client device. In yet another embodiment the primary controller of the client device to be reassigned and the AP associated with the client device to be reassigned may work together to make the determination as to which controller should become the primary controller of the client device.

In some embodiments multiple client device to controller configuration table are managed by the cluster of controllers. For example the cluster of controllers may manage multiple networks each having a different ESSID. For example a corporation may employ two separate networks a first network for employees and a second network for guests. The employee network may among other things offer more services provide a higher level of security and or extend to a larger physical area. In such an embodiment an employee s client device connected to the employee network would be placed in a first client device to controller configuration table. An AP within the control scope of the cluster of controllers may determine which client device to controller configuration table to reference to determine a client device s primary controller based on the ESSID broadcasted by the client device.

Client devices may initially be assigned or reassigned without the use of a client device to controller configuration table in some embodiments. In the case of an initial assignment the AP with which the client device associates may query each controller within the cluster to determine to which controller to assign the client device joining the network. Alternatively the controller to which the AP is assigned may query the other controllers. A determination may be made based on among other things each controller s current work load the number of client devices currently assigned to each controller the physical location of the client device or the security level required by the client device. In the case of a reassignment the AP currently assigned to a controller that needs to have one or more of its client devices reassigned may query each controller to determine to which controller to reassign client devices whose MAC addresses correspond to a particular index value. In another embodiment the controller that is attempting to have one or more of its client devices reassigned may query the other controllers.

As discussed above some embodiments of the invention may implement redundancy within the cluster of controllers. When redundancy is implemented within the cluster the client device to controller configuration table stored on each controller within the cluster and each AP within the control scope of the cluster contains at least a column representing an index value computed from the hash value computed by an AP a column representing the primary controller corresponding to the index value and a column representing the standby controller corresponding to the index value.

Referring to a second exemplary diagram of a table illustrating an initial state of a client device to controller configuration table prior to beginning the process of reassigning a client is provided. Column represents the index value corresponding to the MAC address of a client device herein after corresponding index value column represents the primary controller of the corresponding index value and column represents the standby controller of the corresponding index value.

When a primary controller becomes unavailable to handle APs or client devices e.g. it fails or is taken offline an AP supporting a client device assigned to the unavailable controller will rely on support by the corresponding standby controller for instructions on how to manage the client device. The AP will begin directing network traffic from the client device to the standby controller. This allows for the client device to continue operating on the network with minimal disruption. When a primary controller becomes unavailable the cluster will update the client device to controller configuration table and distribute the updated client device to controller configuration table to all of the APs within the control scope of the cluster and all of the controllers within the cluster.

In the primary controller for the client devices of corresponding index value 1 entry is controller  entry . The standby controller for the client devices of corresponding index value 1 is controller  entry . Therefore controller  does not backup the state information for all of the client devices assigned to controller  but only backs up those client devices of corresponding index value 1 entry . To explain further the primary controller of corresponding index value 5 entry is also controller  entry . The standby controller of corresponding index value 5 entry is controller  entry . Therefore with the primary controller the same for corresponding index values 1 and 5 controller  comparing the standby controllers of corresponding index values 1 and 5 controller  and controller  respectively it can be seen that the standby controllers back up state information of client devices on a per index value basis as two different controllers backup state information of different client devices currently assigned to one controller.

For example in if controller  were to fail the APs associated with client devices whose primary controller is controller  would be required to determine the index value to which each client device s MAC address corresponds i.e. either index value 2 or index value 4 . Each AP would then rely on support by the corresponding standby controller for each index value. For instance if the MAC address of a client device assigned to controller  corresponds to index value 4 the associated AP will rely on the support by controller  if controller  fails. In contrast if the MAC address of a client device assigned to controller  corresponds to index value 2 the associated AP will rely on support by controller  if controller  fails.

Upon failure of a controller e.g. controller  the cluster of controllers will update the client device to controller configuration table and distribute the updated client device to controller configuration table to all of the controllers within the cluster and all of the APs within the control scope of the cluster. Referring to the client device to controller configuration table of is seen with updated primary controller and standby columns. As is seen in controller  because of its failure no longer appears in either the primary controller column col. or the standby controller column col. . Furthermore the client device to controller configuration table of is seen to have updated the primary controller column col. by replacing controller  with the corresponding standby controller e.g. controller  for index value 2 and controller  for index value 4 . The standby controller column col. was also updated with an active controller not assigned as the primary controller for that index value e.g. controller  for index value 2 and controller  for index value 4 .

In other embodiments there may be additional columns representing multiple standby controllers. Referring to the client device to controller configuration table of is seen with a fourth column representing second standby controllers col. . Column provides a secondary backup controller in case both the primary controller col. and the first standby controller col. fail for a particular corresponding index value. For example if the primary controller of corresponding index value 1 controller  entry and the first standby controller of corresponding index value 1 controller  entry were to fail controller  the second back up controller of corresponding index value 1 entry would manage the client devices of corresponding index value 1.

The standby configurations discussed above may be called an all active redundancy scheme. This is so because as the standby controller backs up the state information of the client devices of the corresponding index value it may also be actively managing other client devices. For example referring again to the primary controller of corresponding index value 2 is controller  entry . Controller  is also the standby controller corresponding to the key index . Therefore as controller  backs up the state information of the client devices of corresponding index value 1 it also serves at the primary controller for the client devices of corresponding index value 2.

The all active redundancy scheme differs from a redundancy scheme that employs one controller as an primary controller and one controller that only serves to back up the primary controller without managing any client devices until the primary controller fails. An example of the latter redundancy scheme is redundant array of independent disks RAID .

For example in a RAID scheme there may be 10 client devices being actively managed by controller A which would require the state information of the 10 client devices to be backed up on controller B. Therefore if controller A and controller B fail the state information for all 10 client devices would be lost. In contrast if 10 client devices are being actively managed by a single controller within a cluster of controllers the state information of the 10 client devices may be backed up by several other controllers within the cluster. Therefore if two controllers fail the state information for all 10 client devices will not be lost. Furthermore when one controller is taken offline for any reason the cluster updates the client device to controller configuration table stored on each controller and AP and resynchronizes the state information for any controllers that now serve as a backup controller for a different index value.

A second issue with a RAID scheme is that controller B must be the same size as controller A because controller B backs up all of controller A. However the redundancy in a cluster of controllers does not require that all or any of the controllers be the same size. As discussed above in accordance with both controller  and controller  back up portions of controller . There is no requirement that controller  controller  and or controller  are the same size.

Enhanced multicast proxy among a cluster of controllers is a mechanism for orchestrating the communication between the controllers within a cluster to increase the efficiency of transmitting multicast streams to client devices connected to the cluster of controllers. When multiple client devices are connected to a cluster of controllers and are subscribed to one or more of the same multicast groups it is desirable to avoid transmitting multiple copies of each multicast stream over the network.

Referring to a diagram of an exemplary network system including a multicast router is illustrated. A cluster of controllers includes the controllers and . Each controller communicates with the multicast router . The controller serves as the primary controller for the AP and the client device . The controller serves as the primary controller for the client device . The controller serves as the primary controller for the AP and the client devices and . Each of the controllers and subscribes to one or more multicast streams on behalf of their respective client devices. The multicast streams are then forwarded from each controller and to the AP with which the client devices and are associated.

One issue to consider is that a wireless network is typically not assigned one large grouping of consecutive IP addresses therefore a wireless network may consist of multiple virtual local area networks VLANs . For example a corporation with 1 000 employees may receive consecutive IP addresses to assign to client devices in groupings of 256 IP addresses. In this situation one grouping comprises a single VLAN. Since there are 1 000 employees at least four such VLANs will be required to accommodate the client devices on the network. If multiple client devices each on a different VLAN are all associated with the same AP and all of the client devices subscribed to the same multicast streams there is potential for wasted resources on the network due to unnecessary copies of the multicast stream being distributed. Therefore in one embodiment each controller may be on a separate VLAN.

Referring to a diagram of the exemplary network system of illustrating the multicast transmission paths e.g. a data stream path is provided. It is seen that the AP is only receiving multicast transmission from the controller . In order to avoid the transmission of unnecessary copies of a single multicast stream over the network the cluster of controllers utilizes the communication among the controllers. The cluster allows the primary controller of the AP with which the client devices are associated herein after associated AP to be the multicast subscriber for the client devices associated with the AP and distribute the multicast stream s . Therefore if multiple client devices associated with a single AP subscribe to the same multicast stream the primary controller of the associated AP i.e. the controller will notify the multicast router of a subscription to the particular multicast stream only once as opposed to each client device sending its own subscription notification e.g. Internet Group Management Protocol IGMP join . Furthermore only the primary controller of the associated AP needs to subscribe to the multicast stream. There in one embodiment when the primary controller of the associated AP acts as the multicast subscriber only one copy of a multicast needs to be sent from the multicast router to the primary controller and the primary controller only needs to send one copy per SSID or BSS down to the client devices through the associated AP.

In the cluster organization the primary controller acts as the multicast subscriber for client devices associated with the AP assigned to the primary controller regardless of whether the primary controller for the associated AP is the primary controller for one or more client devices associated with the AP. For example referring to the controller will subscribe to the multicast router on behalf of the client devices associated with the AP . The controller is not the primary controller for the client devices and but because the client devices and are associated with the AP and the controller is the primary controller for the AP the controller serves as the multicast subscriber on behalf of the client devices and as well as the client device for which the controller serves as the primary controller.

In another embodiment the cluster of controllers may determine a controller other than the primary controller of the associated AP is to transmit the multicast stream to the associated AP. The determination may be made based on among other things the number of copies of the multicast stream being received by an associated AP from a plurality of controllers. For example if the number of copies received by the associated AP is above a given threshold the cluster may determine a particular controller within the cluster that is best suited to transmit the multicast stream to the associated AP.

However there may be issues with delivering every multicast stream via multicast. For example if client devices go into a sleep mode as a result of a period of nonuse the rate at which a multicast stream is transmitted may not be sufficient to wake up the device in order for the client device to receive the multicast stream however the rate at which unicast streams are transmitted is typically sufficient to wake up a client device . Alternatively transmitting a multicast stream to a small number of client devices may be more costly to the network than converting the multicast stream into a unicast stream and transmitting an individual copy to each subscribing client device.

Therefore in one embodiment the primary controller for the AP associated with one or more client devices may deliver one or more multicast streams via unicast. This is accomplished using a dynamic multicast optimization DMO process. This means that the primary controller for the AP determines whether to send multicast streams via multicast or via unicast based on various factors. Examples of the various factors include but are not limited or restricted to the number of client devices associated with the AP the number of streams to which the client devices are subscribed network conditions e.g. radiofrequency RF environment or channel quality transmission rates of unicast and multicast to the client devices and or the number of client devices subscribed to a particular multicast stream. The primary controller for the AP is aware of the multicast subscriptions of each client device that is associated with the AP and contains logic to decide whether one or more multicast streams should be sent via unicast instead of multicast.

For example if a primary controller for an AP is managing the transmission of multicast streams for two or three client devices the primary controller for the AP may decide to send the multicast streams via unicast but if the primary controller for the AP is managing a larger number of client devices such as ten 10 client devices for example the primary controller for the AP may decide to send the multicast streams via multicast.

In one embodiment when a multicast stream is sent via multicast the group key necessary to decrypt the stream is known by each client device on the same SSID. Furthermore in this or another embodiment when a multicast stream is sent via unicast each client may be required to have a client device specific key in order to decrypt the stream.

When sending a multicast stream via unicast the primary controller for the AP coordinates with the set of primary controllers of each client device associated with the AP to convert the multicast stream into unicast. Each primary controller of a client device associated with the AP transmits the unicast stream to its one or more client devices associated with the AP. This distributes the workload over the entire set of primary controllers of a client device associated with the AP therefore in such an embodiment each primary controller of a client device must be subscribed to each multicast stream to which its client devices are subscribed.

As is illustrated in as the primary controller for the AP the controller serves as the multicast subscriber for the client devices and because the client devices are associated with the AP . When the controller decides to transmit a multicast stream to each subscribing client device via multicast the controller transmits the multicast stream to the AP which in turn transmits a single copy of the multicast stream. In this situation the client devices and all know the group key to decrypt the multicast stream. In this embodiment the controllers and may stop receiving the multicast stream from the multicast router or continue receiving the multicast stream if the multicast stream is to be forwarded to other access points not shown .

Referring to a second diagram of the exemplary network system of illustrating the multicast transmission paths is provided. In an embodiment wherein the controller decides to transmit a multicast stream to each subscribing client device via unicast the controller tells the primary controllers of the client devices associated with the AP to convert the multicast stream to a unicast stream. Therefore the controllers and would convert the multicast stream to unicast and transmit the unicast stream with a client device specific key because the controllers are the primary controller of the client device and the client devices and respectively. It is illustrated in that the AP is receiving unicast transmission converted from multicast from the controllers and .

The cluster of controllers must also be able to handle the transmission of multicast streams when client devices roam from an AP assigned to a first controller to an AP assigned to a second controller within the cluster of controllers. When this occurs the controller forwarding the multicast subscriptions of the roaming client device has changed.

Referring to a diagram of the exemplary network system of now with a roaming client device is illustrated. In the embodiment of the client device is now associated with the AP which is assigned to the controller . In this situation the controller forwards the multicast subscriptions for the client devices and while the controller forwards the multicast subscriptions for the client device .

Once the client device associates with the AP the controller as the primary controller of the client device notifies the controller that the client device is now associated with the AP and that the controller no longer needs to forward the multicast subscriptions of the client device . The controller will reconsider whether it should adjust how it is transmitting one or more multicast streams i.e. via multicast or unicast based on one or more factors including the number of client devices associated with the AP . As the primary controller of the client device the controller knows that it needs to manage the subscriptions of the client device because the client device is associated with the AP for which the controller serves as the primary controller . In another embodiment when a client device roams to and associates with an AP controlled by a controller other than the primary controller of the client device the primary controller of the client device will notify the primary controller of the newly associated AP of the new association. The primary controller of the newly associated AP will then reconsider whether it should adjust how it is transmitting one or more multicast streams i.e. via multicast or unicast .

Any combination of the above features and functionalities may be used in accordance with one or more embodiments. In the foregoing specification embodiments have been described with reference to numerous specific details that may vary from implementation to implementation. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense. The sole and exclusive indicator of the scope of the invention and what is intended by the applicants to be the scope of the invention is the literal and equivalent scope of the set of claims that issue from this application in the specific form in which such claims issue including any subsequent correction.

