---

title: Pre-segment point cloud data to run real-time shape extraction faster
abstract: A method, apparatus, system, and computer readable storage medium provide the ability to pre-segment point cloud data. Point cloud data is obtained and segmented. The segment information is stored. An indexing structure is created and instantiated with the point cloud data and the segment information. Based on the segment information, a determination is made regarding points needed for shape extraction. Needed points are fetched from the indexing structure an used to extract shapes. The extracted shapes are used to cull points from the point cloud data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09508186&OS=09508186&RS=09508186
owner: Autodesk, Inc.
number: 09508186
owner_city: San Rafael
owner_country: US
publication_date: 20141107
---
This application claims the benefit under 35 U.S.C. Section 119 e of the following and commonly assigned U.S. provisional patent application s which is are incorporated by reference herein 

Provisional Application Ser. No. 61 901 069 filed on Nov. 7 2013 by Ronald Poelman and Oytun Akman entitled Pre Segment Point Cloud Data to Run Real Time Shape Extraction Faster. 

This application is related to the following and commonly assigned patent application which application is incorporated by reference herein 

U.S. patent application Ser. No. 14 536 232 entitled OCCLUSION RENDER MECHANISM FOR POINT CLOUDS by Paulus Jacobus Holverda and Ronald Poelman filed on the same data herewith which application claims the benefit under 35 U.S.C. Section 119 e of Provisional Application Ser. No. 61 901 067 filed on Nov. 7 2013 by Paul Holverda and Ronald Poelman entitled Occlusion Render Mechanism for Point Clouds. 

The present invention relates generally to point cloud data and in particular to a method apparatus and article of manufacture for pre segmenting point cloud data to run real time shape extraction faster.

Point cloud shape feature extraction is a highly desired technique to facilitate the computer aided design CAD workflow. CAD designers don t want to snap to point clouds but prefer to work with planes corners and center lines. Laser scanners sample a surface without any knowledge of what is being sampling. Snapping to inferred geometry in real time is problematic enough points need to be available to create a decent representation and fitting geometry is computationally intensive on a large and or reduced set of points . Accordingly what is needed is the capability to quickly and accurately extract shapes features from a point cloud. To better understand these problems a description of prior art point cloud systems may be useful.

Point clouds are often created by reality capture devices such as laser three dimensional 3D scanners that measure a large number of points e.g. from thousands to many billions of points 3D coordinates on the surface of an object and output a point cloud as a data file. The point cloud represents the visible surface of the object that has been scanned or digitized. With the increased usage of such reality capture devices large point cloud data sets are more frequently created for consumption by design applications. The challenge that design software faces is visualizing and using this data efficiently in the applications. While the point cloud data set is often very large the number of points an application is capable of handling for visualization and other needs is a small fraction a few million points for example. Prior art methods fail to provide the ability to process the massive volume of points in real time e.g. preserving a ten 10 frames per second or faster rate to read a small fraction of points that have the property of accurately representing the original data set without loss of detail or information that causes misrepresentation of the original data.

Point cloud visualization and applications are increasingly important in design especially due to the decrease in the price point of the technology. Point clouds can contain an enormous number of points. One of the major challenges is representing the set of points while providing the ability to extract a small subset that is highly representative of the spatial region of interest.

As described above a point cloud is created using a laser beam scanner that scans objects surfaces to obtain millions of points. For example an image scanner on top of a car that drives through a city may obtain millions upon millions of points. If such points are rendered in a certain environment different viewpoints may be queried requested and displayed to a user. However with a point cloud if a scene is rendered the depth component may not map properly. As a result a visualization of a point cloud may require one thousand 1000 times of overdraw before the correct visualization is achieved.

Prior art methodologies may attempt to select a subset of the points in a quick and efficient manner. One approach divides a volume of interest into equal size rectangular 3D cells. Each of the thousands of cells may contain millions of points. The issue arises as to how to determine how many and which points to select from in a cell. Further point cloud data resulting from a scanner may have various artifacts that are undesirable. Accordingly there is a desire to eliminate the scanner artifact to normalize the point selection and to obtain a uniform distribution real depiction of the distribution of the point cloud data regardless of the location of the scanner. Many prior art approaches have attempted to solve such problems. Such approaches range from nearest neighbor based approaches to frequency domain based approaches. Concepts of downsampling borrowed from image processing techniques have also been incorporated in solutions to view large point data sets. Goals of some techniques include noise removal and optimal representation at the expense of computation and with freedom to modify the original point set.

In addition as described above to facilitate CAD workflows a CAD system may extract shapes features from the points. It is desirable to perform such extraction in real time. If the extraction is attempted on a large set of points it can be computationally intensive. However if the extraction is attempted on a minimized set of points the error rate increases e.g. shape extraction fitting may not be accurate and or may not be possible due to an insufficient number range of points . Accordingly what is needed is a method and apparatus that reduces the number of points from a point cloud in order to properly accurately and efficiently extract shapes features.

During the indexing process e.g. the creation of an octree of scanned point cloud data the point cloud data is segmented. Segment information e.g. the bounding box of the various segments are stored into the indexed file. When later reading the point cloud data e.g. during a snap to inferred geometry query the segment information is used to only fetch the points necessary to perform a shape extraction. Once shape extraction is performed the shapes can then be fetched in real time in response to the desired user operation e.g. a snap operation .

In the following description reference is made to the accompanying drawings which form a part hereof and which is shown by way of illustration several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.

Embodiments of the invention pre segment data from a point cloud and store a bounding box of a segment into an indexed file that is used during shape feature extraction.

In one or more embodiments computer is communicatively coupled to or may comprise a laser scanner . Such a laser scanner may consist of a field measurement device capable of producing a 3D representation of present conditions through the collection of individually measured points. The set of all points collected and registered with another after the scanning process is referred to as a point cloud. Such a point cloud may be stored in data storage devices within the scanner in memory and or in any other device capable of storing such information. The laser scanner may utilize a variety of scanning methods including aerial static and mobile. Such laser scanning may scan millions of point in seconds without climbing on equipment and or conducting contact measurements.

In one embodiment the computer operates by the general purpose processor A performing instructions defined by the computer program under control of an operating system . The computer program and or the operating system may be stored in the memory and may interface with the user and or other devices to accept input and commands and based on such input and commands and the instructions defined by the computer program and operating system to provide output and results.

Output results may be presented on the display or provided to another device for presentation or further processing or action. In one embodiment the display comprises a liquid crystal display LCD having a plurality of separately addressable liquid crystals. Alternatively the display may comprise a light emitting diode LED display having clusters of red green and blue diodes driven together to form full color pixels. Each liquid crystal or pixel of the display changes to an opaque or translucent state to form a part of the image on the display in response to the data or information generated by the processor from the application of the instructions of the computer program and or operating system to the input and commands. The image may be provided through a graphical user interface GUI module . Although the GUI module is depicted as a separate module the instructions performing the GUI functions can be resident or distributed in the operating system the computer program or implemented with special purpose memory and processors.

In one or more embodiments the display is integrated with into the computer and comprises a multi touch device having a touch sensing surface e.g. track pod or touch screen with the ability to recognize the presence of two or more points of contact with the surface. Examples of multi touch devices include mobile devices e.g. iPhone Nexus S Droid devices etc. tablet computers e.g. iPad HP Touchpad portable handheld game music video player console devices e.g. iPod Touch MP3 players Nintendo 3DS PlayStation Portable etc. touch tables and walls e.g. where an image is projected through acrylic and or glass and the image is then backlit with LEDs .

Some or all of the operations performed by the computer according to the computer program instructions may be implemented in a special purpose processor B. In this embodiment some or all of the computer program instructions may be implemented via firmware instructions stored in a read only memory ROM a programmable read only memory PROM or flash memory within the special purpose processor B or in memory . The special purpose processor B may also be hardwired through circuit design to perform some or all of the operations to implement the present invention. Further the special purpose processor B may be a hybrid processor which includes dedicated circuitry for performing a subset of functions and other circuits for performing more general functions such as responding to computer program instructions. In one embodiment the special purpose processor B is an application specific integrated circuit ASIC .

The computer may also implement a compiler that allows an application or computer program written in a programming language such as COBOL Pascal C FORTRAN or other language to be translated into processor readable code. Alternatively the compiler may be an interpreter that executes instructions source code directly translates source code into an intermediate representation that is executed or that executes stored precompiled code. Such source code may be written in a variety of programming languages such as Java Perl Basic etc. After completion the application or computer program accesses and manipulates data accepted from I O devices and stored in the memory of the computer using the relationships and logic that were generated using the compiler .

The computer also optionally comprises an external communication device such as a modem satellite link Ethernet card or other device for accepting input from and providing output to other computers .

In one embodiment instructions implementing the operating system the computer program and the compiler are tangibly embodied in a non transitory computer readable medium e.g. data storage device which could include one or more fixed or removable data storage devices such as a zip drive floppy disc drive hard drive CD ROM drive tape drive etc. Further the operating system and the computer program are comprised of computer program instructions which when accessed read and executed by the computer cause the computer to perform the steps necessary to implement and or use the present invention or to load the program of instructions into a memory thus creating a special purpose data structure causing the computer to operate as a specially programmed computer executing the method steps described herein. Computer program and or operating instructions may also be tangibly embodied in memory data storage device and or data communications devices thereby making a computer program product or article of manufacture according to the invention. As such the terms article of manufacture program storage device and computer program product as used herein are intended to encompass a computer program accessible from any computer readable device or media.

Of course those skilled in the art will recognize that any combination of the above components or any number of different components peripherals and other devices may be used with the computer .

A network such as the Internet connects clients to server computers . Network may utilize ethernet coaxial cable wireless communications radio frequency RF etc. to connect and provide the communication between clients and servers . Clients may execute a client application or web browser and communicate with server computers executing web servers . Such a web browser is typically a program such as MICROSOFT INTERNET EXPLORER MOZILLA FIREFOX OPERA APPLE SAFARI GOOGLE CHROME etc. Further the software executing on clients may be downloaded from server computer to client computers and installed as a plug in or ACTIVEX control of a web browser. Accordingly clients may utilize ACTIVEX components component object model COM or distributed COM DCOM components to provide a user interface on a display of client . The web server is typically a program such as MICROSOFT S INTERNET INFORMATION SERVER .

Web server may host an Active Server Page ASP or Internet Server Application Programming Interface ISAPI application which may be executing scripts. The scripts invoke objects that execute business logic referred to as business objects . The business objects then manipulate data in database through a database management system DBMS . Alternatively database may be part of or connected directly to client instead of communicating obtaining the information from database across network . When a developer encapsulates the business functionality into objects the system may be referred to as a component object model COM system. Accordingly the scripts executing on web server and or application invoke COM objects that implement the business logic. Further server may utilize MICROSOFT S Transaction Server MTS to access required data stored in database via an interface such as ADO Active Data Objects OLE DB Object Linking and Embedding DataBase or ODBC Open DataBase Connectivity .

Generally these components all comprise logic and or data that is embodied in or retrievable from device medium signal or carrier e.g. a data storage device a data communications device a remote computer or device coupled to the computer via a network or via another data communications device etc. Moreover this logic and or data when read executed and or interpreted results in the steps necessary to implement and or use the present invention being performed.

Although the terms user computer client computer and or server computer are referred to herein it is understood that such computers and may be interchangeable and may further include thin client devices with limited or full processing capabilities portable devices such as cell phones notebook computers pocket computers multi touch devices and or any other devices with suitable processing communication and input output capability.

Of course those skilled in the art will recognize that any combination of the above components or any number of different components peripherals and other devices may be used with computers and .

As described above when attempting to render millions billions of points in real time a point cloud is processed. Such processing may result in a significant bottleneck. Consequently as part of the processing points that are not relevant to the screen space representation may be culled. To cull such points systems may attempt to calculate planes polygons with textures to represent the point cloud and cull the point cloud data using such planes polygons e.g. as described in the copending application cross referenced above . One issue that arises is how to quickly and efficiently recognize the planes polygons as a representation of the point cloud. Embodiments of the invention provide a methodology and system for facilitating the extraction of shapes features planes polygons.

At step at a relevant tree depth distance determined by size or amount of points a plane fitting methodology is run e.g. based on RANSAC RANdom Sample Consensus . RANSAC is an iterative method used to estimate parameters of a mathematical model from a set of observed data that contains outliers. Accordingly at step embodiments of the invention iteratively attempt to find all of the planes and clip them with the bounds of the relevant tree depth leaf node. Examples of such a plane fitting include least squares fitting LSF and principal component analysis PCA . In LSF an iterative method is used to find the best fit plane with the least squares constraint of the distances from the scanned points to the plane e.g. see Wang M. and Tseng Y. H. 2004 Lidar data segmentation and classification based on octree structure International Archives of Photogrammetry and Remote Sensing Vol. 20 B3 pp. 308 313 which is incorporated by reference herein .

More specifically in step an attempt is made to create and fit planes on all the points within a predefined level of detail of the octree. The number of planes is dependent on the amount of points that conform to the plane fitting procedure and within a certain threshold. In this regard the threshold may determine whether a maximum and or minimum number of points are present in a predefined level. For example a minimum number of points may be required in order to perform plane fitting e.g. one or two points may not comply with the minimum threshold number of points while ten points may be sufficient . Similarly too many points may be overly burdensome to perform the plane fitting e.g. consumes a disproportionate amount of processing and or time .

In view of the above if level is identified as the relevant level the points within the nodes below level would be used for the plane fitting procedures. Thus the appropriate octree level may be determined based on size of the bounds of the level or amount of points.

If based on the number amount of points the plane fitting process may progressively select sequential levels of the octree until a sufficient maximum number of points per node for processing has been reached. For example suppose the plane fitting can process a maximum number of 25 000 points. If level has one million points the plane fitting may proceed to level which may have 125 000 points. Since 125 000 is still beyond the maximum number of permissible points the plane fitting may proceed to level which could have 15 625 points per node. Since level provides a number of points per node within the processing threshold the plane fitting may identify level as the relevant level.

During the plane fitting the detected planes are clipped with the bounds of the determined leaf node level of the octree to create representative polygons.

Returning to at step additional processing may be performed on the planes polygons as necessary in order to display render the point cloud in an efficient manner.

While the steps performed in may be useful and expedite the processing culling points in a point cloud performing such steps in real time on millions billions of points may be problematic. To facilitate the processing embodiments of the invention pre segment the point cloud data during step of .

At step a segmentation based methodology is executed e.g. a depth image based segmentation methodology .

At step the surface normals are refined by assigning each point to a surface type such as smooth planar jump edge etc. and updating its normal information using its neighbors that belong to the same surface type. Refinement step increases the normal precision especially on the edge points.

At step the 3D points are clustered into segments e.g. using a region growing methodology algorithm . During region growing two points are assigned to the same segment if they are spatially close plane to point distances and the angle between their surface normals is smaller than some certain threshold. The clustering starts with selecting a seed point and recursively adding new neighbor 8 neighborhood points to the seed point s segment if the neighbor points satisfy the conditions explained above.

When the clustering region growing step is finished all 3D points are assigned to a segment at step . illustrates a point cloud that has been segmented in accordance with one or more embodiments of the invention. Calculated segments may be shown in different colors illustrated as different shades of gray in . Moreover during the segmentation steps and various information parameters such as planarity homogeneity and bounding box are also extracted for each segment.

Returning to from the results at step the segment identification including the bounding box for the segment is stored at step .

At step an indexing structure e.g. an octree structure for the point cloud data is created generated.

At step the point cloud data and the segment information e.g. the segment identification and the bounding box are stored in the indexing structure. It may be noted that since the data is being read for processing into the octree this additional pre segmenting computation is cheap i.e. the additional computation does not consume significant processing or time . The segment information e.g. bounding box and segment ID may be stored in the octree indexing structure or may be stored in a separate file. In addition steps and may be combined into a single storage operation.

Once stored in the octree the indexing process is complete and the indexing structure can be used to provide real time shape extraction when working with the point cloud data e.g. in steps i.e. when extracting points and shapes from an indexing structure .

At step when invoking a query e.g. of the indexing structure to snap to inferred geometry the segment information e.g. the bounding boxes of the segments is used to determine which points are needed for shape extraction.

At step the points are used to extract shapes i.e. a shape extraction methodology is executed using the fetched points . Embodiments of the invention are not limited to particular shape extraction methodologies. Some methodologies may be non real time with no manual intervention while others are real time and less precise. Embodiments of the invention may combine the best of both online and offline methodologies. For instance least squares based shape extraction methods can be used to fit the best shape to the points from the same segments. While this approach is sensitive to outliers it is fast and computationally cheap. On the other hand computationally more expensive but robust and accurate methods utilizing non linear optimization methods or RANSAC least squares can be used when the shape extraction algorithms are not required to run in real time.

Thus as described above when working with point cloud data users may often desire to perform a snap operation e.g. move the cursor to a particular point location attach objects to a point object such as a vertex corner plane midpoint center etc. . Performing such a snap operation in real time is also highly desirable. However working with millions of points in point cloud data such real time operations are often difficult if not impossible. Accordingly geometry is often inferred from point cloud data. Snapping to inferred geometry is problematic enough points need to be available to create a decent representation and fitting geometry is computationally intensive. Embodiments of the invention overcome such problems using the pre segmenting steps described above. Once pre segmented the segment information is used during the shape feature extraction process. In this regard the shape feature extraction process utilizes the segment information to retrieve only those points that are needed to provide a decent and workable representation of the point cloud data. More specifically once pre segmented e.g. steps the characteristics of the segment and the segment parameters information can be used to cull points and fetch shapes in real time e.g. steps . Such characteristics parameters of the segment may include the segment s size in 2D 3D bounding box homogeneity if the segment consists of smooth surfaces and planarity if the surface is planar .

In view of the above during the indexing process the data is pre segmented and the bounding box of the segment is stored into the indexed octree file. Thereafter when utilizing the indexed point cloud data the pre segmented data is used to quickly determine and fetch points necessary for shape extraction.

This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example any type of computer such as a mainframe minicomputer or personal computer or computer configuration such as a timesharing mainframe local area network or standalone personal computer could be used with the present invention.

In summary embodiments of the invention provide very accurate high frame rate shape extraction on very large point clouds. Such shape extraction allows CAD users to work with inferred geometry without feeling the operation that provides the accurate real time shape extraction.

The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description but rather by the claims appended hereto.

