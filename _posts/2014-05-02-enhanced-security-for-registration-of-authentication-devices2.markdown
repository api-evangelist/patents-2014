---

title: Enhanced security for registration of authentication devices
abstract: A system, apparatus, method, and machine readable medium are described for enhanced security during registration. For example, one embodiment of a method comprises: receiving a request at a relying party to register an authenticator; sending a code from the user to the relying party through an authenticated out-of-band communication channel; and verifying the identity of the user using the code and responsively registering the authenticator in response to a positive verification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09577999&OS=09577999&RS=09577999
owner: NOK NOK LABS, INC.
number: 09577999
owner_city: Palo Alto
owner_country: US
publication_date: 20140502
---
This invention relates generally to the field of data processing systems. More particularly the invention relates to an apparatus and method for secure registration of authentication devices.

Systems have also been designed for providing secure user authentication over a network using biometric sensors. In such systems the score generated by an authenticator and or other authentication data may be sent over a network to authenticate the user with a remote server. For example Patent Application No. 2011 0082801 801 application Describes a Framework for user registration and authentication on a network which provides strong authentication e.g. protection against identity theft and phishing secure transactions e.g. protection against malware in the browser and man in the middle attacks for transactions and enrollment management of client authentication tokens e.g. fingerprint readers facial recognition devices smartcards trusted platform modules etc .

The assignee of the present application has developed a variety of improvements to the authentication framework described in the 801 application. Some of these improvements are described in the following set of US Patent Applications Co pending Applications which are assigned to the present assignee Ser. No. 13 730 761 Query System and Method to Determine Authentication Capabilities Ser. No. 13 730 776 System and Method for Efficiently Enrolling Registering and Authenticating With Multiple Authentication Devices Ser. No. 13 730 780 System and Method for Processing Random Challenges Within an Authentication Framework Ser. No. 13 730 791 System and Method for Implementing Privacy Classes Within an Authentication Framework Ser. No. 13 730 795 System and Method for Implementing Transaction Signaling Within an Authentication Framework and Ser. No. 14 218 504 Advanced Authentication Techniques and Applications hereinafter 504 application .

Briefly the Co Pending Applications describe authentication techniques in which a user enrolls with authentication devices or Authenticators such as biometric devices e.g. fingerprint sensors on a client device. When a user enrolls with a biometric device biometric reference data is captured by the biometric sensor of the authentication device e.g. by swiping a finger snapping a picture recording a voice etc . The user may subsequently register the authentication devices with one or more servers over a network e.g. Websites or other relying parties equipped with secure transaction services as described in the Co Pending Applications and subsequently authenticate with those servers using data exchanged during the registration process e.g. cryptogtaphic keys provisioned into the authentication devices . Once authenticated the user is permitted to perform one or more online transactions with a Website or other relying party. In the framework described in the Co Pending Applications sensitive information such as fingerprint data and other data which can be used to uniquely identify the user may be retained locally on the user s authentication device to protect a user s privacy. The 504 application describes a variety of additional techniques including techniques for designing composite authenticators intelligently generating authentication assurance levels using non intrusive user verification transferring authentication data to new authentication devices augmenting authentication data with client risk data and adaptively applying authentication policies and creating trust circles to name just a few.

Described below are embodiments of an apparatus method and machine readable medium for implementing advanced authentication techniques and associated applications. Throughout the description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances well known structures and devices are not shown or are shown in a block diagram form to avoid obscuring the underlying principles of the present invention.

The embodiments of the invention discussed below involve authentication devices with user verification capabilities such as biometric devices or PIN entry. These devices are sometimes referred to herein as tokens authentication devices or authenticators. While certain embodiments focus on facial recognition hardware software e.g. a camera and associated software for recognizing a user s face and tracking a user s eye movement some embodiments may utilize additional biometric devices including for example fingerprint sensors voice recognition hardware software e.g. a microphone and associated software for recognizing a user s voice and optical recognition capabilities e.g. an optical scanner and associated software for scanning the retina of a user . The user verification capabilities may also include non biometric modalities like PIN entry. The authenticators might use devices like trusted platform modules TPMs smartcards and secure elements for cryptographic operations.

In a mobile biometric implementation the biometric device may be remote from the relying party. As used herein the term remote means that the biometric sensor is not part of the security boundary of the computer it is communicatively coupled to e.g. it is not embedded into the same physical enclosure as the relying party s computer . By way of example the biometric device may be coupled to the relying party via a network e.g. the Internet a wireless network link etc or via a peripheral input such as a USB port. Under these conditions there may be no way for the relying party to know if the device is one which is authorized by the relying party e.g. one which provides an acceptable level of authentication strength and integrity protection and or whether a hacker has compromised or even replaced the biometric device. Confidence in the biometric device depends on the particular implementation of the device.

The term local is used herein to refer to the fact that the user is completing a transaction in person at a particular location such as at an automatic teller machine ATM or a point of sale POS retail checkout location. However as discussed below the authentication techniques employed to authenticate the user may involve non location components such as communication over a network with remote servers and or other data processing devices. Moreover while specific embodiments are described herein such as an ATM and retail location it should be noted that the underlying principles of the invention may be implemented within the context of any system in which a transaction is initiated locally by an end user.

The term relying party is sometimes used herein to refer not merely to the entity with which a user transaction is attempted e.g. a Website or online service performing user transactions but also to the secure transaction servers implemented on behalf of that entity which may performed the underlying authentication techniques described herein. The secure transaction servers may be owned and or under the control of the relying party or may be under the control of a third party offering secure transaction services to the relying party as part of a business arrangement.

The term server is used herein to refer to software executed on a hardware platform or across multiple hardware platforms that receives requests over a network from a client responsively performs one or more operations and transmits a response to the client typically including the results of the operations. The server responds to client requests to provide or help to provide a network service to the clients. Significantly a server is not limited to a single computer e.g. a single hardware device for executing the server software and may in fact be spread across multiple hardware platforms potentially at multiple geographical locations.

Turning first to the illustrated embodiment includes a client equipped with one or more authentication devices sometimes referred to in the art as authentication tokens or Authenticators for enrolling and verifying an end user. As mentioned above the authentication devices may include biometric device such as fingerprint sensors voice recognition hardware software e.g. a microphone and associated software for recognizing a user s voice facial recognition hardware software e.g. a camera and associated software for recognizing a user s face and optical recognition capabilities e.g. an optical scanner and associated software for scanning the retina of a user and support for non biometric modalities such as PIN verification. The authentication devices might use trusted platform modules TPMs smartcards or secure elements for cryptographic operations and key storage.

The authentication devices are communicatively coupled to the client through an interface e.g. an application programming interface or API exposed by a secure transaction service . The secure transaction service is a secure application for communicating with one or more secure transaction servers over a network and for interfacing with a secure transaction plugin executed within the context of a web browser . As illustrated the Interface may also provide secure access to a secure storage device on the client which stores information related to each of the authentication devices such as a device identification code user identification code user enrollment data e.g. scanned fingerprint or other biometric data protected by the authentication device and keys wrapped by the authentication device used to perform the secure authentication techniques described herein. For example as discussed in detail below a unique key may be stored into each of the authentication devices and used when communicating to servers over a network such as the Internet.

As discussed below certain types of network transactions are supported by the secure transaction plugin such as HTTP or HTTPS transactions with websites or other servers. In one embodiment the secure transaction plugin is initiated in response to specific HTML tags inserted into the HTML code of a web page by the web server within the secure enterprise or Web destination sometimes simply referred to below as server . In response to detecting such a tag the secure transaction plugin may forward transactions to the secure transaction service for processing. In addition for certain types of transactions e.g. such as secure key exchange the secure transaction service may open a direct communication channel with the on premises transaction server i.e. co located with the website or with an off premises transaction server .

The secure transaction servers are coupled to a secure transaction database for storing user data authentication device data keys and other secure information needed to support the secure authentication transactions described below. It should be noted however that the underlying principles of the invention do not require the separation of logical components within the secure enterprise or web destination shown in . For example the website and the secure transaction servers may be implemented within a single physical server or separate physical servers. Moreover the website and transaction servers may be implemented within an integrated software module executed on one or more servers for performing the functions described below.

As mentioned above the underlying principles of the invention are not limited to a browser based architecture shown in . illustrates an alternate implementation in which a stand alone application utilizes the functionality provided by the secure transaction service to authenticate a user over a network. In one embodiment the application is designed to establish communication sessions with one or more network services which rely on the secure transaction servers for performing the user client authentication techniques described in detail below.

In either of the embodiments shown in the secure transaction servers may generate the keys which are then securely transmitted to the secure transaction service and stored into the authentication devices within the secure storage . Additionally the secure transaction servers manage the secure transaction database on the server side.

One embodiment of the invention employs secure transaction confirmation techniques during registration. As such various registration and secure transaction operations will initially be described with respect to followed by a detailed description of embodiments of the invention for secure registration of authentication devices.

A secure key provisioning protocol such as the Dynamic Symmetric Key Provisioning Protocol DSKPP may be used to share the key with the client over a secure communication channel see e.g. Request for Comments RFC 6063 . However the underlying principles of the invention are not limited to any particular key provisioning protocol.

Turning to the specific details shown in once the user enrollment or user verification is complete the server generates a randomly generated challenge e.g. a cryptographic nonce that must be presented by the client during device registration. The random challenge may be valid for a limited period of time. The secure transaction plugin detects the random challenge and forwards it to the secure transaction service . In response the secure transaction service initiates an out of band session with the server e.g. an out of band transaction and communicates with the server using the key provisioning protocol. The server locates the user with the user name validates the random challenge validates the device s authentication code if one was sent and creates a new entry in the secure transaction database for the user. It may also generate the key write the key to the database and send the key back to the secure transaction service using the key provisioning protocol. Once complete the authentication device and the server share the same key if a symmetric key was used or different keys if asymmetric keys were used.

The secure transaction confirmation is designed to provide stronger security for certain types of transactions e.g. financial transactions . In the illustrated embodiment the user confirms each transaction prior to committing the transaction. Using the illustrated techniques the user confirms exactly what he she wants to commit and commits exactly what he she sees displayed in a window of the graphical user interface GUI . In other words this embodiment ensures that the transaction text cannot be modified by a man in the middle MITM or man in the browser MITB to commit a transaction which the user did not confirm.

In one embodiment the secure transaction plugin displays a window in the browser context to show the transaction details. The secure transaction server periodically e.g. with a random interval verifies that the text that is shown in the window is not being tampered by anyone. In a different embodiment the authentication device has a trusted user interface e.g. providing an API compliant to GlobalPlatform s TrustedUI .

The following example will help to highlight the operation of this embodiment. A user chooses items for purchase from a merchant site and selects check out. The merchant site sends the transaction to a service provide which has a secure transaction server implementing one or more of the embodiments of the invention described herein e.g. PayPal . The merchant site authenticates the user and completes the transaction.

The secure transaction server receives the transaction details TD and puts a Secure Transaction request in an HTML page and sends to client . The Secure Transaction request includes the transaction details and a random challenge. The secure transaction plugin detects the request for transaction confirmation message and forwards all data to the secure transaction service . In an embodiment which does not use a browser or plugin the information may be sent directly from the secure transaction servers to the secure transaction service on the client .

For a browser based implementation the secure transaction plugin displays a window with transaction details to the user e.g. in a browser context and asks the user to provide authentication to confirm the transaction. In an embodiment which does not use a browser or plugin the secure transaction service the application or the authentication device may display the window . The secure transaction service starts a timer and verifies the content of the window being displayed to the user. The period of verification may be randomly chosen. The secure transaction service ensures that user sees the valid transaction details in the window e.g. generating a hash on the details and verifying that the contents are accurate by comparing against a hash of the correct contents . If it detects that the content has been tampered with it prevents the confirmation token signature from being generated.

After the user provides valid verification data e.g. by swiping a finger on the fingerprint sensor the authentication device verifies the user and generates a cryptographic signature sometimes referred to as a token with the transaction details and the random challenge i.e. the signature is calculated over the transaction details and the nonce . This allows the secure transaction server to ensure that the transaction details have not been modified between the server and the client. The secure transaction service sends the generated signature and username to the secure transaction plugin which forwards the signature to the secure transaction server . The secure transaction server identifies the user with the username and verifies the signature. If verification succeeds a confirmation message is sent to the client and the transaction is processed.

One embodiment of the invention implements a query policy in which a secure transaction server transmits a server policy to the client indicating the authentication capabilities accepted by the server. The client then analyzes the server policy to identify a subset of authentication capabilities which it supports and or which the user has indicated a desire to use. The client then registers and or authenticates the user using the subset of authentication tokens matching the provided policy. Consequently there is a lower impact to the client s privacy because the client is not required to transmit exhaustive information about its authentication capabilities e.g. all of its authentication devices or other information which might be used to uniquely identify the client.

By way of example and not limitation the client may include numerous user verification capabilities such as a fingerprint sensor voice recognition capabilities facial recognition capabilities eye optical recognition capabilities PIN verification to name a few. However for privacy reasons the user may not wish to divulge the details for all of its capabilities to a requesting server. Thus using the techniques described herein the secure transaction server may transmit a server policy to the client indicating that it supports for example fingerprint optical or smartcard authentication. The client may then compare the server policy against its own authentication capabilities and choose one or more of the available authentication options.

One embodiment of the invention employs transaction signing on the secure transaction server so that no transaction state needs to be maintained on the server to maintain sessions with clients. In particular transaction details such as transaction text displayed within the window may be sent to the client signed by the server. The server may then verify that the signed transaction responses received by the client are valid by verifying the signature. The server does not need to persistently store the transaction content which would consume a significant amount of storage space for a large number of clients and would open possibility for denial of service type attacks on server.

One embodiment of the invention is illustrated in which shows a website or other network service initiating a transaction with a client . For example the user may have selected items for purchase on the website and may be ready to check out and pay. In the illustrated example the website or service hands off the transaction to a secure transaction server which includes signature processing logic for generating and verifying signatures as described herein and authentication logic for performing client authentication e.g. using the authentication techniques previously described .

In one embodiment the authentication request sent from the secure transaction server to the client includes the random challenge such as a cryptographic nonce as described above the transaction details e.g. the specific text presented to complete the transaction and a signature generated by the signature processing logic over the random challenge and the transaction details using a private key known only by the secure transaction server .

Once the above information is received by the client the user may receive an indication that user verification is required to complete the transaction. In response the user may for example swipe a finger across a fingerprint scanner snap a picture speak into a microphone or perform any other type of authentication permitted for the given transaction. In one embodiment once the user has been successfully verified by the authentication device the client transmits the following back to the server 1 the random challenge and transaction text both previously provided to the client by the server 2 authentication data proving that the user successfully completed authentication and 3 the signature.

The authentication module on the secure transaction server may then confirm that the user has correctly authenticated and the signature processing logic re generates the signature over the random challenge and the transaction text using the private key. If the signature matches the one sent by the client then the server can verify that the transaction text is the same as it was when initially received from the website or service . Storage and processing resources are conserved because the secure transaction server is not required to persistently store the transaction text or other transaction data within the secure transaction database .

The particular implementation shown in includes a secure transaction plugin for establishing communication with the secure enterprise or Web destination sometimes referred to simply as server or relying party using techniques previously discussed. For example the secure transaction plugin may identify a specific HTML tag inserted into the HTML code by a web server . Thus in this embodiment the server policy is provided to the secure transaction plugin which forwards it to the secure transaction service implementing the policy filter .

The policy filter may determine the client authentication capabilities by reading the capabilities from the client s secure storage area . As previously discussed the secure storage may comprise a repository of all of the client s authentication capabilities e.g. identification codes for all of the authentication devices . If the user has already enrolled the user with its authentication devices the user s enrollment data is stored within the secure storage . If the client has already registered an authentication device with a server then the secure storage may also store an encrypted secret key associated with each authentication device.

Using the authentication data extracted from the secure storage and the policy provided by the server the policy filter may then identify a subset of authentication capabilities to be used. Depending on the configuration the policy filter may identify a complete list of authentication capabilities supported by both the client and the server or may identify a subset of the complete list. For example if the server supports authentication capabilities A B C D and E and the client has authentication capabilities A B C F and G then the policy filter may identify the entire subset of common authentication capabilities to the server A B and C. Alternatively if a higher level of privacy is desired as indicated by user preferences in then a more limited subset of authentication capabilities may be identified to the server. For example the user may indicate that only a single common authentication capability should be identified to the server e.g. one of A B or C . In one embodiment the user may establish a prioritization scheme for all of the authentication capabilities of the client and the policy filter may select the highest priority authentication capability or a prioritized set of N authentication capabilities common to both the server and the client.

Depending on what operation has been initiated by server Registration or Authentication the secure transaction service performs that operation on the filtered subset of authentication devices and sends the operation response back to server via the secure transaction plugin as shown in . Alternatively in an embodiment which does not rely on a plugin component of a Web browser the information may be passed directly from the secure transaction service to the server .

Because the user has not previously registered with enhanced security determined at the server transmits its server policy to the client at . As mentioned the server policy may include an indication of the authentication capabilities supported by the server . In the illustrated example the server policy is passed to the secure transaction service via transaction .

At transaction the secure transaction service compares the server policy with the capabilities of the client and potentially other information such as device priority scheme and or user preferences as described above to arrive at a filtered list of authentication capabilities. The filtered list of devices then generate key pairs at transactions and and provide the public portions of these key pairs to secure transaction service which in turn sends these as registration response back to server at . The server attests the authentication devices and stores public keys in secure transaction database. The Token Attestation employed here is the process of validating authentication device identity during registration. It allows the server to cryptographically ensure that the device reported by the client is really who it claimed to be.

Alternatively or in addition at the user may be provided with an opportunity to review the list and or select specific authentication capabilities to be used with this particular server . For example the filtered list may indicate the option to use authentication with a fingerprint scan facial recognition and or voice recognition. The user may then choose to use one or more of these options when authenticating with the server .

The techniques described above for filtering a server policy at a client may be implemented at various different stages of the series of transactions described above e.g. during device discovery device registration device provisioning user authentication etc . That is the underlying principles of the invention are not limited to the specific set of transactions and the specific transaction ordering set forth in .

Moreover as previously mentioned a browser plugin architecture is not required for complying with the underlying principles of the invention. For an architecture which does involve a browser or browser plug ins e.g. such as a stand alone application or mobile device app the transaction diagram shown in and the rest of the transaction diagrams disclosed herein may be simplified such that the browser is removed and the secure transaction service communicates directly with the server .

Various organizations including the European Central Bank ECB and Federal Financial Institutions Examination Council FFIEC recommend the use of strong authentication for financial transactions. Moreover the European Network and Information Security Agency ENISA has recently proposed that financial institutions should treat all customer devices as compromised. While the secure transaction confirmation method as described above provides sufficient protection even in the case of compromised clients as long as the authentication device is not compromised the registration techniques described above for registering authentication devices over a network even though they are generally secure do not operate under the assumption that the client device has been compromised and may therefore be vulnerable to malware on the device.

To enhance security during device registration one embodiment of the invention includes uses an out of band communication channel to send a secret code from the relying party to the user or from the user to the relying party. This out of band communication channel is used only once to register an authenticator. The authenticator can then be used for subsequent authentication or transaction confirmation steps without requiring the use of this channel. In addition secure transaction confirmation techniques including the use of a secure display may be used e.g. such as described above with respect to to allow the user to confirm the secret code sent via the out of band transmission.

Explicit authentication may be performed for example using biometric techniques e.g. swiping a finger on a fingerprint authentication device and or by the user entering a secret code. Non intrusive authentication techniques may be performed based on data such as the current detected location of the client device e.g. via a GPS sensor other sensed user behavior e.g. measuring the gait of the user with an accelerometer and or variables such as the time since the last explicit authentication. Regardless of how the authentication results are generated the assurance calculation module uses the results to determine an assurance level indicating a likelihood that the legitimate user is in possession of the client device . The secure communication module establishes secure communication with the relying party e.g. using a secure encryption key as discussed herein . Public private key pairs or symmetric keys may be stored within a secure storage device which may be implemented as a cryptographically secure hardware device e.g. a security chip or using any combination of secure hardware and software.

As illustrated in the client device may include various additional components such as a Web browser various mobile apps and other hardware software components. In some of the embodiments described herein the authenticator us assumed to be compromised thereby necessitating the secure registration techniques described herein. However this assumption may not have any impact on the remaining hardware software components of the client device which may operate normally without affecting the underlying principles of the invention.

One embodiment of a method for performing registration with enhanced security is illustrated in . At a user attempts to register an authentication device with an online service such as relying party with secure transaction services as described herein . For example the user may have purchased a new device with new authentication devices capabilities such as a new fingerprint authenticator. Alternatively the user may have installed a new authenticator on an existing client device and or may be accessing the online service for the first time using an existing authenticator.

At in response to the authentication attempt a secret code is sent from the service to the user or from the user to the service via an out of band communication channel. For example in one embodiment a hash of the public key generated during the registration process see e.g. transaction in is used to generate the secret code which is then sent via the out of band channel. In one particular embodiment a hash operation such as an SHA 256 SHA 1 or SHA 3 hash operation is applied to the public key to generate a secret code comprising a hash value.

In one embodiment the secret code is generated by the relying party and sent via an out of band channel to the user e.g. via standard mail or email etc . In another embodiment the secret is securely displayed on the client device using a secure transaction confirmation operation the user may then copy the securely displayed secret code e.g. the hash of the public key and send it to the relying party via the out of band communication channel.

Various different types of out of band channels may be employed. As used herein an out of band channel is a different type of communication channel than that used for standard registration and authentication. In one embodiment the out of band channel comprises non electronic mail. For example the relying party may mail the hash value to the known address of the user using a postal service. In another embodiment the out of band channel may comprise an electronic channel such as email text messaging e.g. short message service SMS instant messaging or any other type of communication channel using a destination address associated with the user known at the relying party.

Regardless of which out of band channel is used at the secret code e.g. the public key hash received through the out of band channel is used to verify the registration. For example in an embodiment in which a public key hash was securely displayed on the client the user submits the public key hash displayed on the secure display over the out of band channel. In an embodiment in which the code is sent from the relying party to the client over an out of band channel the user may confirm the secret code on the client e.g. via a secure transaction confirmation operation . In one embodiment the secure transaction confirmation techniques described herein see e.g. and associated text may be used to securely display the public key hash on the display for the user s verification and or to allow the user to copy the public key hash and send it back to the relying party via the out of band channel.

If the verification is successful determined at e.g. if the public key hash received as part of the registration matches the public key hash sent via the out of band channel then registration is confirmed at . If however the public key hash doesn t match or if a threshold amount of time passes before the public key hash is received via out of band channel then registration is denied at .

In one embodiment various other data may be displayed for the user to verify during the registration process. For example in one embodiment a unique code associated with the user s account on the relying party is also displayed using the transaction confirmation and secure display techniques and verified by the user . This unique code associating the user with the relying party is sometimes referred to herein as an AppID. In some embodiments where a relying party offers multiple online services a user may have multiple AppIDs with a single relying party one for each service offered by the relying party .

Various different implementations may be employed including a post registration embodiment in which the user is known to the relying party ahead of time a pre registration embodiment in which the user registers with the relying party before the relying party identifies the user e.g. according to the respective Know Your Customer KYC rules and hybrid embodiments which involve quasi simultaneous registration e.g. using an existing code known by both the user and the relying party .

At the user visits the relying party s web site and the relying party s web application detects that the user s device is equipped with enhanced authentication capabilities e.g. such as those described herein for remote authentication over a network .

At the user initiates registration with the relying party. For example a series of transactions such as shown in may be performed to generate a public private key pair for the authenticator. At the relying party sends a secret e.g. the hash of the registered public key to the user using an out of band method e.g. postal mail electronic mail SMS etc .

At the relying party triggers a secure transaction confirmation operation. For example in one embodiment a message may be displayed to the user with the secret and potentially the unique account ID code asking the user to confirm the information e.g. I confirm the public key hash received through the out of band method is identical to the one displayed at this time on my secure display and it was registered to the AppID shown there . At the user may then accept the transaction if the secret and ID code match what is displayed within the secure display thereby confirming the registration at . If the user rejects the transaction at e.g. because the information displayed does not match the secret and or ID code then the registration is denied at .

At the user visits the relying party s web site and the relying party s web application detects that the user s device is equipped with enhanced authentication capabilities e.g. such as those described herein for remote authentication over a network .

At the user accepts registration with the relying party. For example a series of transactions such as shown in may be performed to generate a public private key pair for the authenticator. At the relying party triggers a secure transaction confirmation operation. For example in one embodiment a message may be displayed to the user potentially with the unique account ID code asking the user to confirm the information e.g. I confirm registration and will send signed the public key hash shown below via an authenticated out of band channel .

At the user transfers the public key hash shown on the secure display via an authenticated out of band channel e.g. a signed letter . At the relying party verifies the public key hash sent in with the public key hash received in step and might accept the registration at . If the values don t match the relying party rejects the registration at

At the user initiates registration with the relying party. For example a series of transactions such as shown in may be performed to generate a public private key pair for the authenticator. At the relying party triggers a transaction confirmation operation for the registration request. For example a message may be displayed in the secure display requesting confirmation that the user wishes to register at the relying party e.g. I want to register at and will undergo KYC later . In addition the secure display may display the code e.g. a hash of the public key and the AppID. Note that this code may or may not be a secret code.

At the user sends the code to the relying party using an authenticated out of band mechanism. For example in one embodiment the user may physically bring a printout of the hash to a branch office of the relying party shows it as part of the KYC confirmation. Alternatively the user may enter the code into a form which is part of the identification procedure. Alternatively the user may send the secret via email postal mail SMS or any other type of authenticated out of band channel.

At the relying party performs a verification of the code e.g. comparing the public key hash to the hash value computed on the public key received during registration from that user . If a match is confirmed at then the registration is confirmed at . If a match is not confirmed then registration is denied at .

Some users already have credentials such as an electronic ID card with an Identity Certificate on it. Using this Identity certificate the out of band method can be replaced by an electronic method using the electronic ID card as illustrated in .

At the user visits relying party s web site and the relying party s web application detects that the user s device is equipped with enhanced authentication capabilities e.g. such as those described herein for remote authentication over a network .

At the user accepts registration with the relying party. For example a series of transactions such as shown in may be performed to generate a public private key pair for the authenticator. At the relying party triggers a transaction confirmation operation for the registration request. For example the secure display of the transaction confirmation may display a message requesting confirmation that the user wishes to register at the relying party using existing credentials e.g. I want to register at and will use an identification based on my eID card . In addition the secure display may display to the user the secret e.g. a hash of the public key and the AppID.

At the user creates an authentication object e.g. a document or binary file including the AppID and the hash of the public key signs this object using the private key related to the existing credentials e.g. the Identity Certificate on the user s electronic ID card . At the relying party verifies the signed object and extracts the Identity Data from the credentials e.g. the Identity Certificate . In addition the relying party compares this public key hash extracted from the signed object to the hash value computed on the public key received during registration from that user. If they match determined at then the registration is confirmed at . If not then registration is denied at .

As illustrated in the computer system which is a form of a data processing system includes the bus es which is coupled with the processing system power supply memory and the nonvolatile memory e.g. a hard drive flash memory Phase Change Memory PCM etc. . The bus es may be connected to each other through various bridges controllers and or adapters as is well known in the art. The processing system may retrieve instruction s from the memory and or the nonvolatile memory and execute the instructions to perform operations as described above. The bus interconnects the above components together and also interconnects those components to the optional dock the display controller display device Input Output devices e.g. NIC Network Interface Card a cursor control e.g. mouse touchscreen touchpad etc. a keyboard etc. and the optional wireless transceiver s e.g. Bluetooth WiFi Infrared etc. .

According to one embodiment of the invention the exemplary architecture of the data processing system may used for the mobile devices described above. The data processing system includes the processing system which may include one or more microprocessors and or a system on an integrated circuit. The processing system is coupled with a memory a power supply which includes one or more batteries an audio input output a display controller and display device optional input output input device s and wireless transceiver s . It will be appreciated that additional components not shown in may also be a part of the data processing system in certain embodiments of the invention and in certain embodiments of the invention fewer components than shown in may be used. In addition it will be appreciated that one or more buses not shown in may be used to interconnect the various components as is well known in the art.

The memory may store data and or programs for execution by the data processing system . The audio input output may include a microphone and or a speaker to for example play music and or provide telephony functionality through the speaker and microphone. The display controller and display device may include a graphical user interface GUI . The wireless e.g. RF transceivers e.g. a WiFi transceiver an infrared transceiver a Bluetooth transceiver a wireless cellular telephony transceiver etc. may be used to communicate with other data processing systems. The one or more input devices allow a user to provide input to the system. These input devices may be a keypad keyboard touch panel multi touch panel etc. The optional other input output may be a connector for a dock.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

Elements of the present invention may also be provided as a machine readable medium for storing the machine executable program code. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnetic or optical cards or other type of media machine readable medium suitable for storing electronic program code.

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. For example it will be readily apparent to those of skill in the art that the functional modules and methods described herein may be implemented as software hardware or any combination thereof. Moreover although some embodiments of the invention are described herein within the context of a mobile computing environment the underlying principles of the invention are not limited to a mobile computing implementation. Virtually any type of client or peer data processing devices may be used in some embodiments including for example desktop or workstation computers. Accordingly the scope and spirit of the invention should be judged in terms of the claims which follow.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

