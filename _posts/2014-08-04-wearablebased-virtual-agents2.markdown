---

title: Wearable-based virtual agents
abstract: Virtual agents may be implemented on a wearable device. The wearable device may include an input device to receive input and a communication component to send the input to a computing device for processing and to receive a response for the input. The wearable device may also include an output device to output the response via the virtual agent as part of a conversation with a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09563618&OS=09563618&RS=09563618
owner: Next IT Corporation
number: 09563618
owner_city: Spokane Valley
owner_country: US
publication_date: 20140804
---
This Application claims priority to and is a continuation of U.S. patent application Ser. No. 12 564 546 filed Sep. 22 2009 which is incorporated herein by reference.

Traditional information retrieval IR techniques typically rely on vocabulary term matching when searching through documents to identify documents for a response. Specifically these IR techniques typically sort through large numbers of documents a knowledge base to identify those documents having vocabulary words and or phrases that match a user s typed input. As a result documents that are potentially valuable to the user and relevant to their input but that do not happen to have matching vocabulary words and or phrases often are neither retrieved nor returned to the user. These are referred to as missed results. Conversely documents that are not of value to the user but that happen to have matching vocabulary words and or phrases are often retrieved and or returned to the user. These are false alarm results. One aspect of an IR system is to reduce both the number of misses and the number of false alarms.

Various embodiments may be generally directed to information retrieval techniques for reducing both the number of misses and the number of false alarms when searching for documents in a knowledge base. Various embodiments may be generally directed to searching and retrieving documents based on a natural language input. Such natural language processing techniques provide specific answers to queries submitted by a user while avoiding the need for the user to sort through a set of search results such as might be provided by standard keyword based searches. Some embodiments may be particularly directed to natural language processing techniques for improving the efficiency of accessing knowledge bases.

Knowledge bases provide a way in which a suite of intelligent applications referred herein as ActiveAgent can provide users with specific pre defined responses. ActiveAgent can take the form of a virtual expert or agent that understands phrases inputted by a user and provides a response to the user. Knowledge bases can cover the entire scope of information that ActiveAgent uses along with al of its capabilities. In at least some embodiments knowledge base files themselves are written in a programming language known as FPML Functional Presence Markup Language a language similar to XML. This includes master FPML files optional FPML files lex files and other auxiliary files such as input files dictionary files other text files to impact scoring and contextual awareness files for example. For additional information on FPML the reader is referred to commonly owned U.S. patent application Ser. No. 10 839 425 titled DATA DISAMBIGUATION SYSTEMS AND METHODS and U.S. patent application Ser. No. 11 169 142 titled METHODS AND SYSTEMS FOR ENFORCING NETWORK AND COMPUTER USE POLICY the disclosures of which are incorporated herein by reference in their entirety.

Various embodiments may be directed to implicature based natural language processing techniques for acquiring and maintaining concepts during an interactive session between a natural language processing system and the user for the purpose of resolving ambiguous input patterns provided in a natural language input.

Various embodiments may be directed to goal based natural language processing techniques for providing an abstract representation of a user s intention based on the content of the natural language input.

Various embodiments may be directed to meta search based natural language processing techniques for providing additional related information in response to a pattern provided in a natural language input submitted by the user. The meta search based natural language processing technique enables the natural language processing system to provide multiple responses to the user rather than providing only a single response to the user e.g. the meta search provides expanded search results in addition to the response that is associated with a unit whose natural language input pattern was matched by the user s input pattern.

Various embodiments may be directed to auto clarification based natural language processing techniques for resolving ambiguities that arise when the concepts found in a pattern in the natural language input submitted by the user are not sufficient for the natural language processing system to identify a single matching unit upon which to base a response to the user.

Various embodiments may comprise a combination of two or more of the above embodiments. Various other embodiments are described and claimed and may provide various advantages associated with natural language processing which will be described with reference to specific embodiments below.

In one embodiment the interface device may be implemented as a handheld portable device such as a personal digital assistant PDA mobile telephone sometimes referred to as a smart phone tablet personal computer PC kiosk desktop computer or laptop computer or any combination thereof. Examples of smart phones include for example Palm products such as Palm Treo smart phones Blackberry smart phones and the like. Although some embodiments of the interface device may be described with a mobile or fixed computing device implemented as a smart phone personal digital assistant laptop desktop computer by way of example it may be appreciated that the embodiments are not limited in this context. For example a mobile computing device may comprise or be implemented as any type of wireless device mobile station or portable computing device with a self contained power source e.g. battery such as the laptop computer ultra laptop computer PDA cellular telephone combination cellular telephone PDA mobile unit subscriber station user terminal portable computer handheld computer palmtop computer wearable computer media player pager messaging device data communication device and so forth. A fixed computing device for example may be implemented as a desk top computer workstation client server computer and so forth. In one embodiment the interface device may be implemented as a conventional landline telephone for voice input and or speech recognition applications for example.

The interface device may provide voice and or data communications functionality in accordance with different types of cellular radiotelephone systems. Examples of cellular radiotelephone systems may include Code Division Multiple Access CDMA systems Global System for Mobile Communications GSM systems North American Digital Cellular NADC systems Time Division Multiple Access TDMA systems Extended TDMA E TDMA systems Narrowband Advanced Mobile Phone Service NAMPS systems 3G systems such as Wide band CDMA WCDMA CDMA 2000 Universal Mobile Telephone System UMTS systems and so forth.

The interface device may be configured as a mobile computing device to provide voice and or data communications functionality in accordance with different types of wireless network systems or protocols. Examples of suitable wireless network systems offering data communication services may include the Institute of Electrical and Electronics Engineers IEEE 802.xx series of protocols such as the IEEE 802.1a b g n series of standard protocols and variants also referred to as WiFi the IEEE 802.16 series of standard protocols and variants and so forth. The mobile computing device also may utilize different types of shorter range wireless systems such as a Bluetooth system operating in accordance with the Bluetooth Special Interest Group SIG series of protocols including Bluetooth Specification versions v1.0 v1.1 v1.2 v1.0 v2.0 with Enhanced Data Rate EDR as well as one or more Bluetooth Profiles and so forth. Other examples may include systems using infrared techniques or near field communication techniques and protocols such as electromagnetic induction EMI techniques. An example of EMI techniques may include passive or active radio frequency identification RFID protocols and devices.

The interface device is configured to couple to the communications interface . The interface device may form part of a wired communications system a wireless communications system or a combination of both. For example the interface device may be configured to communicate information over one or more types of wired communication links such as a wire cable bus printed circuit board PCB Ethernet connection peer to peer P2P connection backplane switch fabric semiconductor material twisted pair wire co axial cable fiber optic connection and so forth. The interface device may be arranged to communicate information over one or more types of wireless communication links such as a radio channel satellite channel television channel broadcast channel infrared channel radio frequency RF channel WiFi channel a portion of the RF spectrum and or one or more licensed or license free frequency bands. In wireless implementations the interface device may comprise one or more interfaces and or components for wireless communication such a one or more transmitters receivers transceivers amplifiers filters control logic wireless network interface cards WNICs antennas and so forth.

In one embodiment the communication interface may be implemented as a leased line point to point connection between the interface device and the natural language processor over a Local Area Network LAN . In another embodiment the communication interface may be implemented as a circuit switched dedicated circuit path created between the interface device and the natural language processor . In another embodiment the communication interface may be implemented as a packet switched device for transporting packets via a shared single point to point or point to multipoint link across a carrier internetwork. Variable length packets may be transmitted over Permanent Virtual Circuits PVC or Switched Virtual Circuits SVC . In yet another embodiment the communication interface may be implemented as a cell relay similar to packet switching but using fixed length cells instead of variable length packets. Data may be divided into fixed length cells and then transported across virtual circuits.

In one embodiment the natural language processor may be implemented as a general purpose or dedicated computer system configured to execute a core of specific algorithms functions and or software applications to provide natural language processing functionality. The natural language processor may comprise a computer system or network of computer systems referred to herein as a language and response processor designated for executing e.g. running one or more than one specific natural language software application to provide natural language processing in response to the natural language input submitted by the user via the interface device . Each of the specific natural language software applications may be representative of a particular kind of natural language processing algorithm.

In various embodiments the natural language software applications may include without limitation an implicature module for acquiring and maintaining concepts during an interactive session for the purpose of resolving ambiguous input patterns a meta search module for providing additional related information in response to a user s input pattern an auto clarification module for resolving ambiguities that arise when the concepts found in a user s input pattern are not sufficient for the system to identify a single matching unit and an opportunistic context switching module for providing an abstract representation of a user s intention when the user does not respond to a prompt with the information that was requested and instead asks a question that is unrelated to the current information retrieval goal. The opportunistic context switching module is described more particularly in . Specific implementations of each of these software applications are subsequently discussed in accordance with the described embodiments.

In one embodiment the language and response processor may comprise an information retrieval engine IRE component to retrieve and return relevant documents in the response based on the natural language input submitted by the user . In one embodiment the IRE may utilized concepts techniques as described in commonly owned U.S. Provisional Patent Application Ser. No. 61 122 203 titled LEVERAGING CONCEPTS WITH INFORMATION RETRIEVAL TECHNIQUES AND KNOWLEDGE BASES which is incorporated herein by reference in its entirety. The IRE may be implemented as a search engine designed to search for information on a variety of networks or knowledge bases . The results of the search may be presented in the response as a list commonly called search results. The information in the response may comprise web pages images information documents and or other types of files collectively referred throughout the remainder of this specification as documents. In various embodiments the IRE may be maintained by human editors may operate algorithmically or may be implemented as a combination of algorithmic and human input. The knowledge base may be contained within the natural language processor or may be coupled thereto over one or more networks.

The natural language input entered by the user may comprise one or more than one phrase. The natural language processor attriburtes zero or more concepts to a phrase within the natural language input entered by the user . The natural language processor can index i.e. build an index or indices documents in the knowledge base based on the respective concept s attributed to the phrase in the natural language input . In this manner the natural language processor is able to relatively quickly provide the response to the user by querying the index and returning retrieving any documents with one or more concepts matching those attributed to the phrase within the natural language input .

In one embodiment the knowledge base may comprise a collection of documents e.g. web pages printer document format PDF files images information and other types of files that contain specific elements or components e.g. pieces of the information that the user may wish to access. These individual elements or components of the information are referred to as the responses . The knowledge base may contain a very large number of responses .

A unit is a pairing of patterns of words terms concepts or phrases provided in the natural language input with a suitable response from the knowledge base that should trigger that response . The unit pairings associated with any given response may comprise many patterns contained in the natural language input that should elicit that response . For example the response Our savings accounts are free but do require that you maintain a balance of 300 from the natural language processor may be the appropriate response for any one of the following patterns contained in the natural language input 

A concept is a technique employed by the natural language processor to return and or retrieve more relevant documents in a response . As previously discussed the natural language processor may employ techniques associated with leveraging concepts. In this context the concept may be defined as a breakdown of critical ideas contained in phrases in the natural language input . Zero or more concepts can be attributed to a phrase entered by the user when the natural language input is received by the natural language processor . One or more concepts can also be attributed to individual documents available to the natural language processor for responding to the user s phrase in the natural language input . The natural language processor can index the documents i.e. build an index or indices based on the respective concepts s in order to respond relatively quickly to the phrase in the natural language input submitted by the user . The natural language processor queries the index and returns and or retrieves any documents having one or more concepts matching those attributed to the phrase in the natural language input .

A concept may comprise various components. As previously discussed the concept may be defined as a breakdown of critical ideas. In at least some implementations the concept comprises patterns of one or more components. Although these components may vary based on specific implementations a concept may comprise a vocabulary component Vocab a helper term component Helper Term and or a building block component Building block . As subsequently described a concept may comprise each of these components alone or in combination. Various examples of Vocabs Helper Terms and or Building Blocks are described individually below. In addition some concepts also may comprise one or more wild cards Wild Cards also described below. A concept is considered to be triggered or hit when a phrase in the natural language input received by the natural language processor completely matches at least one or the patterns associated with a concept .

A vocabulary component of a concept e.g. Vocab comprises a grouping or list of unambiguous synonyms and misspellings. The name of a particular grouping or list of synonyms and misspellings of a vocabulary component may be identified as a vocabulary term Vocab Term . For convenience and clarity Vocab Terms often end with the suffix vocab. The particular groupings of unambiguous synonyms and misspellings associated with the Vocab Terms AccountVocab PriceVocab and BankVocab are described below as illustrative examples.

For example the Vocab Term AccountVocab may comprise a list of the following particular groupings of unambiguous synonyms and misspellings of the word account 

As another example the Vocab Term PriceVocab may comprise a list of the following particular groupings of unambiguous synonyms and misspellings of the word price 

In the PriceVocab example above the word cost is included in the Vocab Term because a user would most likely consider the vocabulary terms words price and cost to be synonymous.

As a further example the Vocab Term BankVocab may comprise a list of the following particular groupings of unambiguous synonyms and misspellings of the word bank 

In the BankVocab example above the user would most likely consider the vocabulary terms words bank lender and credit union to be synonymous.

Vocabulary terms words that do not have unambiguous synonyms but nevertheless function substantially in the same manner as vocabulary terms word are referred to as Helper Terms. A typical Helper Term does not have an associated vocabulary component Vocab like a concept does. Helper Terms consist primarily of conjunctions such as for example 

Building Blocks are a list of either Vocab Helper Terms or a list of concepts that may be useful when categorized together. For example the Building Block Anatomy Vocab Building Block may be defined using the following vocabulary terms where each of these vocabulary terms would comprise a list of particular groupings of unambiguous synonyms and misspellings of various words associated with the word anatomy 

Once the Vocab Terms are bundled together they can be used in a concept pattern. The Anatomy building block also includes Vocab Terms which include unambiguous synonyms and misspellings associated with the word anatomy. The following example illustrates the use of an anatomy Building block that contains five Vocab Terms and reduces the number of concept patterns from ten to two 

The following example of a Vocab Building Block named types of Accounts concept Building Block or simply Accounts Building Block may be used to reduce the number of necessary concept patterns.

Concepts may be created or built through any suitable means and this can be performed manually automatically or any combination thereof. As noted above a concept is usually made up of components comprising patterns of Vocabs helper Terms and Building blocks and occasionally Wild Cards listed within the concept . For example the above concept Building block types of accounts may be all or part of a pattern making up the concept account types. Additional examples of patterns that may make up a savings account concept where the Helper Term for does not end with the suffix vocab include 

In concepts both order and proximity are important both of which are optional when creating any given pattern. To select a particular order for a pattern of a concept the pattern should specify a particular order i.e. ordering with respect to two or more of the pattern s Vocab Helper Terms and or Building blocks. For example with respect to order a pattern of a concept specifying the order savings account is different from the pattern of a concept specifying the order account savings. To select a particular proximity for a pattern of a concept the pattern should specify the proximity of two or more of the pattern s Vocab Helper Terms and or Building Blocks. A pattern of a concept specifying that the terms savings and account are to be positioned next to one another would be different from the pattern of a concept with the phrase savings in my account. 

It will be appreciated that for most patterns in the natural language input it is advantageous to specify both an order and a proximity for a pattern of a concept . In the above example a pattern of a concept Savings Account in the natural language input has a very different meaning than the patterns of concepts Account Savings and Savings in my Account. Concepts also have their own associated test questions for the purposes of testing. Examples of test questions that the user may include in the natural language input for the pattern of a concept Savings Account may comprise 

A unit among other features described herein matches concepts extracted from the natural language input . A unit is comprised of one or many individual units where each unit generates a single response . The concept patterns for an individual unit are specified with no regard to order. This improves the likelihood of a correct answer and limits the number of individual units in the FPML knowledge base and allows autoclarification.

It will be appreciated that a single natural language input from the user may not always be sufficient for the knowledge base to provide a meaningful response . In such cases the natural language processor may prompt the user to provide additional information. This back and forth interactive dialog between the natural language processor and the user may continue until there is sufficient information collected from the user to enable the natural language processor to provide a suitable response .

As previously discussed various embodiments may be directed to implicature based natural language processing techniques for acquiring and maintaining concepts during an interactive session between the natural language processor and the user for the purpose of resolving ambiguous input patterns provided in the natural language input by the user . The implicature module e.g. software application acquires and maintains the concepts during an interactive session between the natural language processor and the user for the purpose of resolving ambiguous input patterns entered by the user . For example 

As another example consider the following interaction between the user and the natural language processor that provides information about the United States US Army 

A goal is an abstract representation of an intention of either the user or the natural language processor . For example consider the fictional airlines Next Airlines. The user may navigate to the Next Airlines web site with the intention i.e. the goal of booking air travel. In order to achieve the goal e.g. booking air travel certain pieces of information are required. For example if the goal is to book air travel it is necessary to obtain the departure city the destination city days of travel and so on from the user . Thus the goal has slots of information or goal variables that must be filled in before the natural language processor can provide the user with the response thus completing the goal . It will be appreciated that the slots referring to the goal variables tracked during an interactive session are variable storage memory locations allocated by the natural language processor as needed.

A goal can extract multiple goal variables from a single natural language input or through multiple inputs. The order that the information is provided does not matter to the Goal . In other words a goal is able to extract multiple goal variables when the user supplies more than one piece of information without regard to the ordering of information. For example a goal may extract departure city destination city and day of the week with a single user input even when the sentences are structured differently such as the sentences below 

If the user does not provide in a single natural language input pattern all of the slot information e.g. goal variables needed to complete the goal then the natural language processor will enter into initiate an interactive dialog with the user to obtain the missing information and the prompts presented to the user by the natural language processor will be based on the empty slots which represent goal variables with unknown values.

A goal may comprise a portion of the overall knowledge base . When a goal is active the natural language processor preferentially tries to complete the goal but does not exclude other goals or units . The user may be non responsive to a prompt and instead ask for information more appropriately answered by another goal or by a unit in which case a tangential goal or unit is returned. illustrates a diagram of one embodiment of an opportunistic context switching module . In the illustrated embodiment the opportunistic context switching module handles the scenario where the user does not respond to a prompt with the information that was requested by the natural language processor and instead asks a question that is unrelated to the current active goal. The user may initiate an interactive dialog with the natural language processor as previously discussed. The interactive dialog may result in session goals comprising one or more primary goals to where n is an integer. Often times the user will not respond to the prompt from the language processor with the information that was requested. Instead the user may ask a question that is unrelated to one of the primary goals at hand at which time the opportunistic context switching module initiates the tangential request and will delay activity related to the primary goal. As shown in the illustrated diagram by way of example and not limitation the primary goal is active and has captured two variables variable 1 and variable 4 which are complete. The primary goal has three unknown variables variable 2 in progress variable 3 unknown and variable m unknown . The primary goal has prompted the user for information related to variable 2. In this example variable 2 is not yet determined because the user responded to the prompt with an unrelated natural language input. Hence variable 2 is labeled unknown. Since the user is non responsive to the prompt and instead asks for information more appropriately answered by another goal or by a unit the opportunistic context switching module redirects the dialog to the tangential goal or unit. Upon completion of the tangential request the opportunistic context switching module returns the user to the primary goal .

It will be appreciated by those skilled in the art that typical information retrieval engines are generally unable to process such tangent requests or goals in general.

The natural language processor however is able to deal with such tangents by shelving the current goal and beginning to work on completing a new goal. Tangential requests may be initiated by either the user or the natural language processor . once the new goal is complete the natural language processor will switch back to a previously uncompleted goal and will continue where it left off trying to fill in missing slot information. Opportunistic context switching enables sophisticated interactive dialogs between the user and the natural language processor such as the following 

Once the user submits a natural language input the natural language processor initiates a primary search to search for concepts in an agent database . The meta search based natural language processing technique then performs a secondary search across all the units using only the material concepts that were found in the user s natural language input pattern. This allows the natural language processor to located the units which did not perfectly match the original natural language input pattern thus allowing the natural language processor to provide additional related response to the user . The natural language processor provides the additional related responses information in response to the natural language input pattern submitted by the user e.g. here is more information you may be interested in . . . as previously discussed the primary response and the additional related responses together form the response back to the user .

In this example the computing device comprises one or more processor circuits or processing units one or more memory circuits and or storage circuit component s and one or more input output I O circuit devices . Additionally the computing device comprises a but that allows the various circuit components and devices to communicate with one another. The bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. The bus may comprise wired and or wireless buses 

The processing unit may be responsible for executing various software programs such as system programs applications programs and or modules to provide computing and processing operations for the computing device . The processing unit may be responsible for performing various voice and data communications operations for the computing device such as transmitting and receiving voice and data information over one or more wired or wireless communications channels. Although the processing unit of the computing device is shown in the context of a single processor architecture it may be appreciated that the computing device may use any suitable processor architecture and or any suitable number of processors in accordance with the described embodiments. In one embodiment the processing unit may be implemented using a single integrated processor.

The processing unit may be implemented as a host central processing unit CPU using any suitable processor circuit or logic device circuit such as a as a general purpose processor. The processing unit also may be implemented as a chip multiprocessor CMP dedicated processor embedded processor media processor input output I O processor co processor microprocessor controller microcontroller application specific integrated circuit ASIC filed programmable gate array FPGA programmable logic device PLD or other processing device in accordance with the described embodiments.

As shown the processing unit may be coupled to the memory and or storage component s through the bus . The memory bus may comprise any suitable interface and or bus architecture for allowing the processing unit to access the memory and or storage component s . Although the memory and or storage component s may be shown as being separate from the processing unit for purposes of illustration it is worthy to note that in various embodiments some portion or the entire memory and or storage component s may be included on the same integrated circuit as the processing unit . Alternatively some portion or the entire memory and or storage component s may be disposed on an integrated circuit or other medium e.g. hard disk drive external to the integrated circuit of the processing unit . In various embodiments the computing device may comprise an expansion slot to support a multimedia and or memory card for example.

The memory and or storage components s represent one or more computer readable media. The memory and or storage component s may be implemented using any computer readable media capable of storing data such as volatile or non volatile memory removable or non removable memory erasable or non erasable memory writeable or re writeable memory and so forth. The memory and or storage component s may comprise volatile media e.g. random access memory RAM and or nonvolatile media e.g. read only memory ROM Flash memory optical disks magnetic disks and the like . The memory and or storage component s may comprise fixed media e.g. RAM ROM a fixed hard drive etc. as well as removable media e.g. a Flash memory drive a removable hard drive an optical disk . Examples of computer readable storage media may include without limitation RAM dynamic RAM DRAM Double Data Rate DRAM DDRAM synchronous DRAM SDRAM static RAM SRAM read only memory ROM programmable ROM PROM erasable programmable ROM EPROM electrically erasable programmable ROM EEPROM flash memory e.g. NOR or NAND flash memory content addressable memory CAM polymer memory e.g. ferroelectric polymer memory phase change memory ovonic memory ferroelectric memory silicon oxide nitride oxide silicon SONOS memory magnetic or optical cards or any other type of media suitable for storing information.

The one or more I O devices allow a user to enter commands and information to the computing device and also allow information to be presented to the user and or other components or devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone a scanner and the like. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card . The computing device may comprise an alphanumeric keypad coupled to the processing unit . The keypad may comprise for example a QWERTY key layout and an integrated number dial pad. The computing device may comprise a display coupled to the processing unit . The display may comprise any suitable visual interface for displaying content to a user of the computing device . In one embodiment for example the display may be implemented by a liquid crystal display LCD such as a touch sensitive color e.g. 76 bit color thin film transistor TFT LCD screen. The touch sensitive LCD may be used with a stylus and or a handwriting recognizer program.

The processing unit may be arranged to provide processing or computing resources to the computing device . For example the processing unit may be responsible for executing various software programs including system programs such as operating system OS and application programs. System programs generally may assist in the running of the computing device and may be directly responsible for controlling integrating and managing the individual hardware components of the computer system. The OS may be implemented for example as a Microsoft Windows OS Symbian OS Embedix OS Linux OS binary Run time Environment for Wireless BREW OS java OS or other suitable OS in accordance with the described embodiments. The computing device may comprise other system programs such as device drivers programming tools utility programs software libraries application programming interfaces APIs and so forth.

Various embodiments have been set forth which provide information retrieval techniques for reducing both the number of misses and the number of false alarms when searching for documents in the acknowledge base. Various embodiments of language processing techniques have been set forth for searching and retrieving documents based on a natural language input. Such natural language processing techniques provide specific answers to queries submitted by a user while avoiding the need for the user to sort through a set of search results such as might be provided by standard keyword based searches. Various embodiments of natural language processing techniques have been set forth for improving the efficiency of accessing knowledge bases.

Various embodiments may be described herein in the general context of computer executable instructions such software program modules components being executed by a computer. Generally program modules include any software element arranged to perform particular operations or implement particular abstract data types. Software can include routines programs objects components data structures and the like that perform particular tasks or implement particular abstract data types. An implementation of these modules or components and techniques may be stored on and or transmitted across some form of computer readable media. In this regard computer readable media can be any available medium or media useable to store information and accessible by a computing device. Some embodiments also may be practiced in distributed computing environments where operations are performed by one or more remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

Although some embodiments may be illustrated and described as comprising functional components or modules performing various operations it can be appreciated that such components or modules may be implemented by one or more hardware components software components and or combination thereof. The functional components and or modules may be implemented for example by logic e.g. instructions data and or code to be executed by a logic device e.g. processor . Such logic may be stored internally or externally to a logic device on one or more types of computer readable storage media. Examples of hardware elements may include processors microprocessors circuits circuit elements e.g. transistors resistors capacitors inductors and so forth integrated circuits application specific integrated circuits ASIC programmable logic devices PLD digital signal processors DSP field programmable gate array FPGA logic gates registers semiconductor device chips microchips chip sets and so forth. Examples of software may include software components programs applications computer programs application programs system programs machine programs operating system software middleware firmware software modules routines subroutines functions methods procedures software interfaces application program interfaces API instruction sets computing code computer code code segments computer code segments words values symbols or any combination thereof. Determining whether an embodiment is implemented using hardware elements and or software elements may vary in accordance with any number of factors such as desired computational rate power levels heat tolerances processing cycle budget input data rates output data rates memory resources data bus speeds and other design or performance constraints.

It also is to be appreciated that the described embodiments illustrate example implementations and that the functional components and or modules may be implemented in various other ways which are consistent with the described embodiments. Furthermore the operations performed by such components or modules may be combined and or separated for a given implementation and may be performed by a greater number or fewer number of components or modules.

It is worthy to note that any reference to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase in one embodiment in the specification are not necessarily all referring to the same embodiment.

Unless specifically stated otherwise it may be appreciated that terms such as processing computing calculating determining or the like refer to the action and or processes of a computer or computing system or similar electronic computing device that manipulates and or transforms data represented as physical quantities e.g. electronic within registers and or memories into other data similarly represented as physical quantities within the memories registers or other such information storage transmission or display devices.

It is worthy to note that some embodiments may be described using the expression coupled and connected along with their derivatives. These terms are not intended as synonyms for each other. For example some embodiments may be described using the terms connected and or coupled to indicate that two or more elements are in direct physical or electrical contact with each other. The term coupled however may also mean that two or more elements are not in direct contact with each other but yet still co operate or interact with each other. With respect to software elements for example the term coupled may refer to interfaces message interfaces API exchanging messages and so forth.

While certain features of the embodiments have been illustrated as described above many modifications substitutions changes and equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the scope of the embodiments.

