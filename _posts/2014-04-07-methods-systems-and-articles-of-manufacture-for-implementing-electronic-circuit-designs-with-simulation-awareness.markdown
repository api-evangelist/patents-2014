---

title: Methods, systems, and articles of manufacture for implementing electronic circuit designs with simulation awareness
abstract: Disclosed are methods, systems, and articles of manufacture for implementing electronic designs with simulation awareness. A schematic is identified or created and simulated at the schematic level to characterize the functional behavior of the circuit or to ensure the circuit design meets the required design specifications. Physical data of a component of the design is identified, created, or updated, and the electrical parasitic associated with physical data is characterized. One or more electrical characteristics associated with the parasitic is further characterized and mapped to the simulator to re-simulate the circuit design to analyze the impact of parasitics. Some embodiments re-run the same simulation process incrementally in an interactive manner by accepting incremental design or parameter changes from the design environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09223925&OS=09223925&RS=09223925
owner: Cadence Design Systems, Inc.
number: 09223925
owner_city: San Jose
owner_country: US
publication_date: 20140407
---
This application is a divisional application of U.S. patent application Ser. No. 12 982 790 filed on Dec. 30 2010 and entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURE FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH SIMULATION AWARENESS which claims the benefit of U.S. Provisional App. Ser. No. 61 367 398 filed on Jul. 24 2010 and entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURE FOR CONSTRAINT VERIFICATION FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH ELECTRICAL AWARENESS U.S. Provisional App. Ser. No. 61 367 412 filed on Jul. 24 2010 and entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURE FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH ELECTRICAL AWARENESS U.S. Provisional App. Ser. No. 61 367 404 filed on Jul. 24 2010 and entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURES FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH ELECTRO MIGRATION AWARENESS U.S. Provisional App. Ser. No. 61 367 406 filed on Jul. 24 2010 and entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURES FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH IR DROP AWARENESS U.S. Provisional App. Ser. No. 61 367 407 filed on Jul. 24 2010 and entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURES FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH SIMULATION AWARENESS U.S. Provisional App. Ser. No. 61 367 410 filed on Jul. 24 2010 and entitled METHOD APPARATUS AND ARTICLE OF MANUFACTURE FOR PROVIDING IN SITU CUSTOMIZABLE INFORMATION IN DESIGNING ELECTRONIC CIRCUITS WITH ELECTRICAL AWARENESS . The entire contents of the aforementioned U.S. patent application and U.S. provisional patent applications are hereby expressly incorporated by reference in their entirety.

This application is related to U.S. patent application Ser. No. 12 982 721 entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURE FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH ELECTRICAL AWARENESS and filed on Dec. 30 2012 U.S. patent application Ser. No. 12 982 762 entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURE FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH ELECTRO MIGRATION AWARENESS and filed on Dec. 30 2012 U.S. patent application Ser. No. 12 982 628 entitled METHOD APPARATUS AND ARTICLE OF MANUFACTURE FOR PROVIDING IN SITU CUSTOMIZABLE INFORMATION IN DESIGNING ELECTRONIC CIRCUITS WITH ELECTRICAL AWARENESS and filed on Dec. 30 2012 and U.S. patent application Ser. No. 12 982 732 entitled METHODS SYSTEMS AND ARTICLES OF MANUFACTURE FOR CONSTRAINT VERIFICATION FOR IMPLEMENTING ELECTRONIC CIRCUIT DESIGNS WITH ELECTRICAL AWARENESS and filed on Dec. 30 2012. The entire disclosures of the above applications are hereby expressly incorporated by reference in their entireties in the instant Application.

The recent advances in very deep sub micron VDSM integrated circuits ICs have brought new challenges in the physical design methodology process of integrated systems. In modern electronic circuits geometries become smaller clock frequencies increase and on chip interconnections gain increased importance in the prediction of performance.

Conventional electronic circuit design tools focus on post layout verification of the layout when the physical design of the entire chip design is complete and detailed information about the parasitics of the physical designs and the currents drawn by the transistors are known. In other words conventional circuit synthesis step is followed by layout synthesis and each step is carried out independent of the other. This is again followed by a physical or formal verification step to check whether the desired performance goals have been achieved after layout generation and extraction. These steps are carried out iteratively in such conventional approaches till the desired performance goals are met. These conventional approaches basically perform post layout verification on the complete layout identify the problems modify the layout perform simulation s again with the modifications to ensure various goals are met and re perform the post layout verification again to see for example if all design rules are fulfilled. Nonetheless such conventional approaches waste a lot of computing resources in this iterative approach.

Therefore what is needed is a method a system and a computer program product for implementing incremental extraction based simulation for electronic circuit designs.

In various embodiments the process begins with the creation of a schematic that describes the design. The schematic may include one or more schematic circuit elements various parameters on these schematic elements and a description of the connectivity between these schematic elements. The schematic of the circuit is then used to generate a netlist which is typically a textual representation of the schematic elements the parameters on those elements the connectivity between those elements. This netlist is passed on to a circuit simulator to simulate the circuit. The results of the simulation are used by the designer to analyze the functional behavior of the circuit and ensure that the circuit meets the required design specifications.

As part of the design process a physical design corresponding to the circuit is created or modified by the layout designer. The electrical parasitics such as the resistances and capacitances of the interconnect wires are extracted from the physical design. The impact of physical design decisions such as geometric dimensions and placement of devices and interconnect or the creation of multiple devices in layout from one device in the schematic e.g. fingers m factors is not known until the verification process is done. Once a custom physical design is complete to the point that LVS and DRC is performed and passed during the verification stage parasitic extraction and simulation may be performed. This method allows the designer to simulate the impact of physical design beginning with the first net and may be used with partial layout s in some embodiments.

Various embodiments will be described for more efficiently transferring physical design data such as electrical parasitics to the simulator. Some embodiments will use the existing custom design flow. Some of the embodiments describe new systems and methods or process flows to reduce the amount of parasitic data and the amount of redundant design data when only one or more nets or devices are created or modified. The reduction of data allows for a faster flow from parasitic extraction to generation of simulation results in that less redundant data is transferred mapped through the binder or stored computed within the simulator.

A simple example is a long two terminal wire that has several jogs and may span several metal levels. The parasitic description of this wire may have 100 resistors in series that can simply be summed and effectively represented by a smaller or reduced set e.g. one effective resistance. The parasitic description may have 100 coupling capacitances that can be lumped to ground effectively producing a smaller or reduced set. Another example is where a designer knows that some set Q nets of a total of P nets will dictate some performance aspect of the device. This approach allows the designer to use a more comprehensive set of parasitics for the Q nets and to significantly reduce the parasitics for the other P Q nets.

Various embodiments of the invention are directed to a method system and computer program product for implementing electronic circuit designs with simulation awareness in a single embodiment or in some embodiments. Other objects features and advantages of the invention are described in the detailed description figures and claims.

Various embodiments will now be described in detail with reference to the drawings which are provided as illustrative examples of the invention so as to enable those skilled in the art to practice the invention. Notably the figures and the examples below are not meant to limit the scope of the present invention. Where certain elements of the present invention can be partially or fully implemented using known components or methods or processes only those portions of such known components or methods or processes that are necessary for an understanding of the present invention will be described and the detailed descriptions of other portions of such known components or methods or processes will be omitted so as not to obscure the invention. Further the present invention encompasses present and future known equivalents to the components referred to herein by way of illustration.

Referring to which illustrates a top level diagram for implementing various embodiments of the methods or systems for implementing electronic circuit designs with simulation awareness the method or system for implementing electronic circuit designs with simulation awareness comprises the process or module for identifying determining or updating physical data of a net a device or a component hereinafter a component collectively of an electronic circuit physical design on a computing node a terminal or a server having a user interface hereinafter a computing node in various embodiments.

In these embodiments the method or the system needs only a partial layout that comprises merely one component such as an interconnect wire segment a via or a via cluster to perform its intended functions of implementing electronic circuit design with simulation awareness. In other words some embodiments as described herein do not require a complete physical layout that have gone through the complete placement global routing and detail routing stages. That is the method and system provide the designers with the ability to implement the electronic circuit design with simulation awareness from the first component the first device or the first net in the physical design without going through costly iterations between the physical design and the post layout verification design flows. For example even if a physical design contains only one segment of an interconnect and the remainder of the physical design has not been completed yet the method or the system may still determine whether this particular interconnect segment meets one or more simulation related constraints or performance expectations and whether and what kind of adjustments need to be made to the design to ensure the compliance of the one or more simulation related constraints or performance expectations. In some embodiments an adjustment comprises creation of a new route or a segment thereof or modification of an existing route or a segment thereof. In some embodiments an adjustment comprises placement of a component in a physical design of an electronic circuit design.

In some embodiments the physical data may be related to a net which comprises one or more wires or interconnects connecting various other components together in an electronic circuit design. In some embodiment the physical data may be related to a single component in the physical design e.g. a layout of the electronic circuit. For example the method or the system may be applied to determine whether an interconnect segment complies with one or more simulation related constraints or performance expectations. In this example the physical data may comprise for example the width the length the cross sectional area along the segment overlap of a metal object and via object etc. In some embodiments the physical data may be related to a device which comprise a physical layers of materials with specific geometric dimensions comprise a source gate and a drain. A device may be for example a field effect transistor. In this example the physical data may comprise the description of physical device layers and geometric descriptions that define the gate source and drain regions. The physical data may also include the placement of electrical contacts to connect the device to interconnect wiring. In various embodiments the physical data may further comprise the material and its associated physical e.g. physical or electrical attributes.

For example the physical data for a wire segment may comprise the material e.g. Copper Aluminum Tungsten etc. one or more physical attributes such as the electrical resistivity.

In some embodiments the process for identifying determining or updating physical data of a net a device or a component of an electronic circuit physical design are invoked from within a physical design tool or flow such as a layout editor while the designer is implementing or modifying the physical design of the electronic circuit rather than from a post layout verification tool or flow.

In some embodiments the drawn geometries of the physical design objects may be combined with manufacturing models to estimate manufactured geometries for those objects or statistical distributions associated with the object. In this approach the as manufactured geometries can be used with the parasitic models to provide a more accurate estimate of the electrical parasitics R L or C.

In a single embodiment or in some embodiments the method or system for implementing electronic circuit designs with simulation related constraints or performance expectations comprises the process or module for identifying determining or characterizing an electrical parasitic that is associated with the component in the physical design at . In some embodiments the method or the system may also comprise the process or module for identifying determining or characterizing a device parameter that is associated with the component in the physical design at . In some embodiments the method or the system may also comprise the process or module for identifying determining or characterizing an electrical parasitic or a device parameter that is associated with the component in the physical design at . In these embodiments the electrical parasitic and the device parameter are collectively referred to as electrical parasitic or simply parasitic .

In some embodiments the one or more electrical parasitics comprise resistance self or coupled inductance or capacitance that is associated with the physical data. In the previous example of an interconnect segment in a physical design the method or the system may characterize the resistance of this particular interconnect segment by using the electrical resistivity the length of the segment and the cross sectional area along the segment. In some embodiments the system monitors and tracks the relevant physical data associated with the creation or change to the design for example the creation of a net or the widening of a wire segment in a net. Resistance and capacitance models can be applied automatically to compute the parasitic data. Thus parasitics may be generated interactively as physical design objects are created or modified. The set of partial design objects including a set of one or more objects that is interactively analyzed may form a partial layout. The data is stored for use with subsequent electrical analysis steps and may additionally be displayed in parasitic form.

In a single embodiment or in some embodiments the method or system for implementing electronic circuit designs with simulation related constraints or performance expectations comprises the process or module for characterizing one or more electrical parasitics that are associated with the physical data and the process or module of characterizing one or more electrical characteristics associated with the one or more electrical parasitics and physical data.

In a single embodiment or in some embodiments the electrical parasitic data associated with the physical data is provided to a simulator for static or transient analysis at . The simulator is run to produce voltage or current data for device and interconnect components of the design. The results stored displayed or compared against a previous simulation run.

In a single embodiment or in some embodiments the electrical parasitic data associated with the physical data is provided to a matrix solver for static or transient analysis. The matrix solver is run. In a single embodiment or in some embodiments the method or system for implementing electronic circuit designs with simulation related constraints or performance expectations comprises a flow where the simulator or solver is invoked after a single net has been created or modified.

The method or the system may comprise providing the one or more electrical parasitics to one or more simulators one or more matrix solvers or a combination of simulator s and matrix solver s at in one or more embodiments. The method or the system may then invoke the one or more simulators the one or more matrix solvers or a combination of simulator s and matrix solver s to generate various voltage or current data for device and interconnect components of at least a portion of the electronic circuit design. In some embodiments the portion of the electronic circuit design comprise only a partial physical design of the electronic circuit design and the partial physical design does not and will not pass a layout versus schematic LVS check or verification due to the lack of one or more components in the partial physical design.

Some embodiments B C may use netlists generated from either the schematic design or the implemented physical design. A process flow from schematic design to simulation is shown In . A schematic is created that may include one or more schematic circuit elements various parameters on these schematic elements and a description of the connectivity between these schematic elements . The schematic of the circuit is then used to generate a netlist which is typically a textual representation of the schematic elements the parameters on those elements and the connectivity between those elements. The netlist is passed on to a circuit simulator to simulate the circuit . The results of the simulation are used by the designer to analyze the functional behavior of the circuit and ensure that the circuit meets the required design specifications.

The parasitic aware simulation flow from schematic design is illustrated in in some embodiments. A schematic is created that may include one or more schematic circuit elements via for example a computing node a terminal or a server having a user interface in various embodiments. Various parameters on these schematic elements and a description of the connectivity between these schematic elements. The schematic of the circuit is then used to generate a netlist which is typically a textual representation of the schematic elements the parameters on those elements and the connectivity between those elements . A physical design object e.g. wire via or via cluster or set of objects are created or modified or . In some cases the physical design may be loaded into a design tool and connectivity and device recognition software is ran to better characterize the electrical nature of the design in some embodiments or .

In some embodiments the characterization of electrical parasitics associated with physical data may be done with a two stage approach. This process begins with the selection a particular net or partial net. In the first stage the process identifies where along that net that a geometric description should be created. The geometric descriptions may include wire widths and spacings conductor and ILD inter layer dielectrics thicknesses or thickness of barrier materials. A common description may be created and provided via an API application programming interface. 

The second stage may include one or more components that may translate convert transform or map hereinafter map the geometric description to an equivalent parasitic value such as a resistance capacitance or inductance. This translation conversion transformation or mapping hereinafter mapping may be done with mathematical algorithm s or model s that is are often referred to as parasitic extraction. The model s may be created through the use of semi empirical methods that combine models or knowledge of the underlying physics with data provided by a solver such as but not limited to an EM electro migration solver. In some cases the mapping for capacitance may also be done with a solver such as but not limited to an EM solver.

In some embodiments the second stage may use parasitic extraction for some nets and a field solver for other nets. In some embodiments the second stage may use a combination of parasitic extraction for resistance s and a field solver for capacitance s on the same net. In some embodiments the characterization of electrical parasitics is conducted with extraction tools that map geometric dimensions and patterns to corresponding parasitics such as but not limited to R L or C. In some embodiments the characterization of electrical parasitics includes the use of field solvers such as but not limited to one or more EM field solvers that map geometric dimensions and patterns to capacitance s .

The electrical parasitics associated with the some percentage e.g. one or more nets of the physical design are mapped to the schematic design in some embodiments . In order to evaluate the impact of these parasitics on the functional behavior of the circuit these parasitics need to be mapped and stitched to a flattened representation of the schematic. The flattening of the schematic hierarchy enables the capturing of unique representations of circuit elements in cases where multiple instances of the same circuit element exists within the hierarchy in some embodiments. The flattening process mimics an elaboration of the schematic that is performed by the simulator in the original simulation of the schematic without parasitics as described above.

In some embodiments the components used in the physical design to implement the devices in the layout may not necessarily have the same names as the ones used on the schematic. They may have different names for the terminals and nets representing their connectivity on the layout. There might further be several components on the layout corresponding to the same circuit element on the schematic for example m factor parameters on schematic devices can cause a 1 to M mapping between circuit elements instances on the schematic and physical component instances on the layout. Further the design hierarchy might differ between the schematic and the layout. For example there could be multiple levels of schematic hierarchy corresponding to a single level of layout hierarchy. There may be several levels of layout hierarchy as well in some embodiments.

The connection nodes of the parasitics on the layout therefore need to be correctly mapped to their schematic counter parts in order to be able to correctly stitch these parasitics into the schematic domain in some embodiments. In these embodiments the hierarchical schematic layout binding step in the process performs such a mapping of devices from the layout hierarchy to the schematic hierarchy while taking into account the various mappings between the schematic and layout devices including differences in names of devices and or nets differences in names of terminals and 1 to M mappings between schematic layout devices.

Once the parasitic node names are mapped to the schematic nodes names the stitching process inserts parasitic schematic components on the flattened schematic. This process removes original wired connections for each of the nets on the schematic with their corresponding parasitic network elements in some embodiments.

In some embodiments the layout is not fully complete. The partial layout may only contain layout components corresponding to certain critical devices in the layout. The layout may further only contain routing information for certain critical nets. In such cases only the parasitic elements corresponding to elements in the parasitic layout are mapped back to the schematic. Only those elements are stitched in to the flattened schematic.

The resulting flattened schematic with parasitic elements is used to create a netlist for simulation purposes or in some embodiments. In these embodiments the netlist contains the circuit description with devices from the original schematic representation and the additional parasitic devices corresponding to the parasitics fetched and mapped from the layout. This netlist is passed on to a circuit simulator to simulate the functional behavior of the circuit with parasitics. In some embodiments the results of the simulation are used by the designer to analyze the functional behavior of the circuit and evaluate if the circuit meets the required design specifications in the presence of parasitics from the layout.

Some embodiments may generate a netlist directly from the physical design as shown in . In these embodiments this approach reduces eliminates the need to map the parasitic data back to the schematic representation. This approach may also generate significantly more data which slows the building of the netlist and completion of the simulation. As such some embodiments may implement various methods to reduce the parasitics to speed up the simulation. In some embodiments the results of the simulation are used by the designer to analyze the functional behavior of the circuit and evaluate if the circuit meets the required design specifications in the presence of parasitics from the layout. In some embodiments device parameters such as parameters associated with well proximity effects area of source and drain and perimeter.

In a single embodiment or in some embodiments the method or system for implementing electronic circuit designs with simulation related constraints or performance expectations comprises the process or module for characterizing one or more electrical parasitics that are associated with the physical data at . In some embodiments the one or more electrical parasitics comprise resistance self or coupled inductance or capacitance that is associated with the physical data. In the previous example of an interconnect segment in a physical design the method or the system may characterize the resistance of this particular interconnect segment by using the electrical resistivity the length of the segment and the cross sectional area along the segment. In some embodiments the system monitors and tracks the relevant physical data associated with the creation or change to the design for example the creation of a net or the widening of a wire segment in a net. Resistance and capacitance models can be applied automatically to compute the parasitic data. Thus parasitics may be generated interactively as physical design objects are created or modified. The set of partial design objects including a set of one or more objects that is interactively analyzed may form a partial layout. The data is stored for use with subsequent electrical analysis steps and may additionally be displayed in parasitic form.

In a single embodiment or in some embodiments the electrical parasitic data associated with the physical data is provided to a simulator for static or transient analysis at . The simulator is run to produce voltage and current data for device and interconnect components of the design. The results stored displayed or compared against a previous simulation run.

The methods or systems as illustrated in may further comprise the process or module for displaying the simulation result s in a user interface on a display apparatus . More details about displaying various information or data in a user interface are described in U.S. application Ser. No. 12 982 628 entitled METHOD APPARATUS AND ARTICLE OF MANUFACTURE FOR PROVIDING IN SITU CUSTOMIZABLE INFORMATION IN DESIGNING ELECTRONIC CIRCUITS WITH ELECTRICAL AWARENESS and filed on Dec. 30 2012 with the instant Application the contents of which are hereby incorporated by reference in their entirety.

Some embodiments may use a mapping to allow for electrical parasitics associated with the physical design to be usable by the simulator . For example a single device in the schematic representation may be implemented as multiple devices in the physical design. In this case the parasitics that describe each physical device will not match the schematic. Some embodiments may use the mapping to reduce the parasitics to an equivalent representation that matches the schematic. Some embodiments may use the mapping to modify the schematic to more closely resemble the physical design and stitch in the parasitic data where appropriate. The processes or modules and and the computing node are substantially similar to corresponding processes or modules described with respect to A C and A B and thus will not be repeated.

Some embodiments may use the simulator results to optimize the design such as device W L width length parameters contact locations proximity to the gate finger or m factor implementations or interconnect location or size . It shall be noted that the processes or modules and as well as the computing node are substantially similar to the corresponding processes or modules illustrated in and thus will not be repeated here.

Some embodiments may reduce the amount of parasitic data that is provided to simulation . The reduction of data allows for a faster flow from parasitic extraction to generation of simulation results in that less data is transferred less data has to be mapped to the schematic and the simulator has to process and store less data. In some embodiments the reduction will include the consolidation of resistor values that are in series or parallel. In some embodiments the reduction may include the use of selected wire fracturing where the geometric wire shapes are separated and an equivalent resistance or capacitance values is determined.

A simple example is a long two terminal wire that has several jogs and may span several metal levels. The parasitic description of this wire may have 100 resistors in series that can simply be summed and effectively represented by a smaller or reduced set e.g. one effective resistance. The parasitic description may have 100 coupling capacitances that can be lumped to ground effectively producing a smaller or reduced set. Another example is where a designer knows that some set Q nets of a total of P nets may dictate some performance aspect of the device. This approach allows the designer to use a more comprehensive set of parasitics for the Q nets and to significantly reduce the parasitics for the other P Q nets.

Moreover the process or module of characterizing one or more electrical characteristics associated with one or more electrical parasitics may comprise identifying or determining current such as the peak current the maximum sustained current the average current or the RMS current by performing simulation s for each terminal of a component device or net. In addition or in the alternative the current waveforms duty cycle s frequency ies or pulse widths may also be considered in some embodiments. In some embodiments the RMS currents may be used with analog designs or reliability critical applications where self healing effect need not be considered. In some embodiments the average currents may be used in for example some digital signal nets where self healing effects need to be considered.

The process or module for characterizing one or more electrical parasitics may further comprise using a linear solver to determine the current s or voltage s of a net device or component in some embodiments. For example the process or module for characterizing one or more electrical parasitics may identify the current s from the schematic enabled simulation s and then invoke a linear matrix solver to solve for the current flows through the net in the physical design by using the conductance. It shall be noted that the method or the system may invoke one or more different solvers such as a non linear solver a commercial circuit simulation tool or a combination thereof hereinafter solver etc. to achieve substantially the same purpose.

In some embodiments the process or module of performing one or more simulations may further comprise the process or module of specifying one or more parameters that are relevant to the simulation and or identifying or receiving one or more electrical parasitics from the physical design or a portion thereof in some embodiments. The method or the system may further comprise the process or module for providing live processing and transfer of data to the simulation environment via for example one or more application programming interfaces APIs in some embodiments. The method or the system may optionally comprise the process or module for storing displaying or transferring the live simulation result s in one or more embodiments.

In some embodiments the process or module of performing one or more simulations may further comprise the process or module of specifying one or more parameters that are relevant to the simulation and or identifying or receiving one or more electrical parasitics from the physical design or a portion thereof in some embodiments. The process or module of performing one or more simulations may further be performed based at least in part upon the one or more parameters or the one or more electrical parasitics in some embodiments. The method or the system may also comprise storing one or more waveforms that result from the one or more simulations to a computer readable storage medium in one or more embodiments. The method or the system may further comprise the process or module of post processing various data or results of the one or more simulations in the simulation environment or by using one or more scripts in one or more embodiments. In addition or in the alternative the method or the system may comprise the process or module for storing the one or more live simulation results in a computer readable storage medium displaying the one or more live simulation results in a user interface or transferring the one or more live simulation results .

In some embodiments the process or module of performing one or more simulations may further comprise the process or module of specifying one or more parameters that are relevant to the simulation and or identifying or receiving one or more electrical parasitics from the physical design or a portion thereof in some embodiments. The process or module of performing one or more simulations may further be performed based at least in part upon the one or more parameters or the one or more electrical parasitics in some embodiments. The process or module of performing one or more simulations may further comprise the process or module of computing currents in some embodiments. In some embodiments the currents comprise RMS root mean square current s the peak current s the DC direct current current s the average current s or a combination thereof.

The method or the system may further comprise streaming data or result s of the one or more simulations live to the simulation or physical design environment in some embodiments. The method or the system may further comprise the process or the module for storing the data results various scalars or vectors that result from the one or more simulations in a computer readable storage medium . In addition or in the alternative the method or the system may further comprise the process or module of storing the one or more live simulation results in a computer readable storage medium displaying the one or more live simulation results in a user interface or transferring the one or more live simulation results.

In some embodiments the process or module for characterizing the electrical parasitics associated with the physical data may further take some temperature or thermal data into account when characterizing the electrical parasitics . The temperature or thermal data may also be forwarded to the process or module for specifying one or more simulation parameters analysis points or corners for the characterization of the electrical characteristics associated with the electrical parasitics in one or more embodiments. The specified simulation parameters analysis points or analysis corners may then be forward to the process or module of performing one or more simulations to characterize the electrical characteristics in some embodiments.

For example the process or module may perform one or more simulations to determine current s voltage s and or current density ies that is are associated with the physical data in some embodiments. In some embodiments the reduced electrical parasitics may also be forward to the process or module for performing one or more simulations to characterize the electrical characteristics. The method or the system may then assemble the characterized electrical characteristics e.g. the current s voltage s and or current density ies that are associated with the physical data in some embodiments.

The method or the system may then proceed to the physical design level to identify create or modify a net a device or a component hereinafter component of a partial layout or a complete layout in some embodiments. Once the net device or component in the physical design is identified created or modified at the method or the system may then perform the process or invoke the module to further perform the interactive synchronization of the physical design and schematic to map the physical data of the identified created or modified component to the schematic design in some embodiments.

The method or the system may then proceed to perform the process or invoke the module to further perform one or more simulations in some embodiments. In some other embodiments after the method or the system performs the process or invokes the module the method or the system may first proceed to update the schematic design and then proceeds to to perform one or more simulations based on the updated schematic design.

A detailed flow diagram is shown in describing a method for analyzing the impact of parasitics from the physical design on the functional behavior of the circuit by stitching parasitics to a flattened schematic in some embodiments.

The process begins with the creation or identification of a schematic that describes the design in one or more embodiments. The schematic may include one or more schematic circuit elements various parameters on these schematic elements and a description of the connectivity between these schematic elements. The schematic of the circuit is then used to generate a netlist which is typically a textual representation of the schematic elements the parameters on those elements and the connectivity between those elements . This netlist is passed on to a circuit simulator to simulate the circuit . The results of the simulation may be stored in a computer accessible storage medium displayed on a display apparatus or transferred and may also be used by the designer to analyze the functional behavior of the circuit and ensure that the circuit meets the required design specifications.

As part of the design process a physical design corresponding to the circuit is created or modified by the layout designer in some embodiments. The electrical parasitics such as the resistances and capacitances of the interconnect wires are extracted from the physical design in some embodiments.

In order to evaluate the impact of these parasitics on the functional behavior of the circuit these parasitics may need to be mapped and stitched to a flattened representation of the schematic in some embodiments. In these embodiments the flattening of the schematic hierarchy enables the capturing of the unique representations of circuit elements in embodiments where multiple instances of the same circuit element exist within the hierarchy. The flattening process mimics an elaboration of the schematic that is performed by the simulator in the original simulation of the schematic without parasitics as described in several preceding paragraphs with reference to the respective figures.

The components used in the physical design to implement the devices in the layout may not necessarily have the same names as the ones used on the schematic in some embodiments. In these embodiments they may have different names for the terminals and nets representing their connectivity on the layout. There might further be several components on the layout corresponding to the same circuit element on the schematic for example m factor parameters on schematic devices may cause a 1 to M mapping between circuit element instances on the schematic and the physical component instances on the layout. In some embodiments the design hierarchy might differ between the schematic and the layout. For example there could be multiple levels of schematic hierarchy corresponding to a single level of layout hierarchy. There may further be several levels of layout hierarchy as well in some embodiments.

The connection nodes of the parasitics on the layout therefore need to be correctly mapped to their schematic counter parts in order to be able to correctly stitch these parasitics into the schematic domain. The hierarchical schematic layout binding process in the process flow performs such a mapping of devices from the layout hierarchy to the schematic hierarchy while taking into account the various mappings between the schematic and layout devices including differences in names of devices and or nets differences in names of terminals and 1 to M mappings between schematic and layout devices.

Once the parasitic node names are mapped to the schematic nodes names the stitching process inserts parasitic schematic components on the flattened schematic in some embodiments. This process removes original wired connections for each of the nets on the schematic with their corresponding parasitic network elements.

Often times the layout is not fully complete in some embodiments. In these embodiments the partial layout may only contain layout components corresponding to certain critical devices in the layout. The layout may further only contain routing information for certain critical nets. In such cases only the parasitic elements corresponding to elements in the parasitic layout are mapped back to the schematic. Only those elements are stitched in to the flattened schematic in these embodiments.

The resulting flattened schematic with parasitic elements may be used to create a netlist for simulation purposes in some embodiments. The netlist contains the circuit description with devices from the original schematic representation and the additional parasitic devices corresponding to the parasitics fetched and mapped from the layout. This netlist is passed on to a circuit simulator to simulate the functional behavior of the circuit with parasitics . The results of the simulation may be stored in a computer accessible storage medium displayed on a display apparatus or transferred and may also be used by the designer to analyze the functional behavior of the circuit and evaluate if the circuit meets the required design specifications in the presence of parasitics from the layout.

A detailed flow diagram is shown in describing a method for analyzing the impact of parasitics from the physical design on the functional behavior of the circuit by stitching parasitics within the simulator through a standard parasitic exchange format in some embodiments.

The process begins with the identification or creation of a schematic that describes the design in some embodiments. In these embodiments the schematic may include one or more schematic circuit elements various parameters on these schematic elements and a description of the connectivity between these schematic elements. The schematic of the circuit may then be used to generate a netlist which is typically a textual representation of the schematic elements the parameters on those elements and the connectivity between those elements. This netlist is passed on to a circuit simulator to simulate the circuit . The results of the simulation may be stored in a computer accessible storage medium displayed on a display apparatus or transferred and may also be used by the designer to analyze the functional behavior of the circuit and ensure that the circuit meets the required design specifications.

As part of the design process a physical design corresponding to the circuit is created or modified by the layout designer in one or more embodiments. The electrical parasitics such as the resistances and capacitances of the interconnect wires are extracted from the physical design in some embodiments.

In order to evaluate the impact of these parasitics on the functional behavior of the circuit these parasitics need to be mapped to a flattened representation of the circuit as seen by the simulator. The flattened representation mimics an elaboration of the schematic that is performed by the simulator in the original simulation of the schematic without parasitics as described in various paragraphs with reference to the corresponding figures above in various embodiments.

The components used in the physical design to implement the devices in the layout may not necessarily have the same names as the ones used on the schematic in some embodiments. In these embodiments they may have different names for the terminals and nets representing their connectivity on the layout. There might further be several components on the layout corresponding to the same circuit element on the schematic in some embodiments for example m factor parameters on schematic devices can cause a 1 to M mapping between circuit elements instances on the schematic and physical component instances on the layout. Further the design hierarchy might differ between the schematic and the layout in some embodiments. For example there could be multiple levels of schematic hierarchy corresponding to a single level of layout hierarchy. There could also be several levels of layout hierarchy as well in some embodiments.

The connection nodes of the parasitics on the layout therefore need to be correctly mapped to their schematic counter parts in order to be able to correctly stitch these parasitics into the schematic domain in some embodiments. In these embodiments the hierarchical schematic layout binding process in the process flow as described above performs such a mapping of devices from the layout hierarchy to the schematic hierarchy while taking into account the various mappings between the schematic and layout devices including differences in names of devices and or nets differences in names of terminals and 1 to M mappings between schematic and layout devices in one or more embodiments.

To simulate the circuit with parasitics the parasitic network information needs to be communicated to the simulator. The parasitics in the layout are typically stored within the Open Access OA database DB representation. These OA DB based parasitics are converted to a Standard Parasitics Exchange Format SPEF in some embodiments. This is typically a textual representation of the parasitic network information in some embodiments.

In order for the simulator to be able to read in the parasitic information from the SPEF Data and stitch into the schematic netlist the names of the connection nodes of the parasitic network in the SPEF Data need to correspond to nodes of the circuit device components in the original schematic netlist provided to the simulator in some embodiments. Name Mapping is therefore performed to convert the names of the parasitic connection nodes from the schematic namespace to the simulation namespace in these embodiments.

Various simulation parameters and stitching options are further defined to direct the simulator to stitch in the assembled and formatted SPEF DATA in some embodiments. Such options might include directives for the simulator to stitch in SPEF DATA for multiple nets from multiple SPEF DATA files.

Often times the layout is not fully complete. The partial layout may only contain layout components corresponding to certain critical devices in the layout in some embodiments. The layout may further only contain routing information for certain critical nets. In such embodiments only the parasitic elements corresponding to elements in the parasitic layout are mapped back to the schematic and inserted into the SPEF DATA.

The stitching of the SPEF parasitic data to the original schematic netlist is performed by the simulator in some embodiments. This approach has the advantage that another schematic netlist need not be explicitly created for the simulator. The simulator may work off the original schematic netlist that was generated to simulation without parasitics.

The simulator performs a simulation of the circuit with devices from the original schematic representation and the additional parasitic elements corresponding to the parasitics fetched and mapped from the layout in some embodiments. The results of the simulation may be stored in a computer accessible storage medium displayed on a display apparatus or transferred and may also be used by the designer to analyze the functional behavior of the circuit and evaluate if the circuit meets the required design specifications in the presence of parasitics from the layout.

The process begins with the identification or creation of a schematic that describes the design in one or more embodiments. The schematic may include one or more schematic circuit elements various parameters on these schematic elements and a description of the connectivity between these schematic elements in some embodiments. The schematic of the circuit is then used to generate a netlist which is typically a textual representation of the schematic elements the parameters on those elements and the connectivity between those elements in some embodiments. This netlist is passed on to a circuit simulator to simulate the circuit in these embodiments. The results of the simulation may be stored in a computer accessible storage medium displayed on a display apparatus or transferred and may also be used by the designer to analyze the functional behavior of the circuit and ensure that the circuit meets the required design specifications in these embodiments.

The simulator may however be configured to run in an interactive mode within the design simulation environment with the capability of accepting further inputs from the environment via a simulation kernel interface SKI interface in some embodiments. Such an interface allows further incremental re runs of the same simulator process by accepting incremental design or parameter changes from the design environment in some embodiments. The following paragraphs describe how this incremental re run mode may be used to analyze the impact of parasitics interactively in some embodiments.

As part of the design process a physical design corresponding to the circuit is created or modified by the layout designer in one or more embodiments. The electrical parasitics such as the resistances and capacitances of the interconnect wires are extracted from the physical design in some embodiments.

In order to evaluate the impact of these parasitics on the functional behavior of the circuit these parasitics need to be mapped to a flattened representation of the circuit as seen by the simulator in some embodiments. The flattened representation mimics an elaboration of the schematic that is performed by the simulator in the original simulation of the schematic without parasitics as described in various paragraphs with reference to the corresponding figures above.

The components used in the physical design to implement the devices in the layout may not necessarily have the same names as the ones used on the schematic in some embodiments. In these embodiments they may have different names for the terminals and nets representing their connectivity on the layout. There might further be several components on the layout corresponding to the same circuit element on the schematic for example m factor parameters on schematic devices can cause a 1 to M mapping between circuit element instances on the schematic and physical component instances on the layout. Further the design hierarchy might differ between the schematic and the layout in some embodiments. For example there could be multiple levels of schematic hierarchy corresponding to a single level of layout hierarchy. There may also be several levels of layout hierarchy as well in some embodiments.

The connection nodes of the parasitics on the layout therefore need to be correctly mapped to their schematic counter parts in order to be able to correctly stitch these parasitics into the schematic domain. The hierarchical schematic layout binding process in the process flow performs such a mapping of devices from the layout hierarchy to the schematic hierarchy while taking into account the various mappings between the schematic and layout devices including differences in names of devices and or nets differences in names of terminals and 1 to M mappings between schematic and layout devices in some embodiments.

To simulate the circuit with parasitics the parasitic network information needs to be communicated to the simulator. The parasitics in the layout are typically stored within the Open Access OA database DB representation. These OA DB based parasitics are converted to Simulation Kernel Interface SKI format in some embodiments. This is a format suitable to pass the parasitic network information from the environment via a simulation kernel interface. Such a format allows the design environment to pass incremental changes from the layout in the form of new modified parasitics to the simulator.

In order for the simulator to be able to read in the parasitic information from the SKI Data and stitch into the schematic netlist the names of the connection nodes of the parasitic network in the SPEF Data need to correspond to nodes of the circuit device components in the original schematic netlist provided to the simulator in some embodiments. Name Mapping is therefore performed to convert the names of the parasitic connection nodes from the schematic namespace to the simulation namespace in some embodiments.

Often times the layout is not fully complete in some embodiments. In these embodiments the partial layout may only contain layout components corresponding to certain critical devices in the layout. The layout may further only contain routing information for certain critical nets. In such embodiments only the parasitic elements corresponding to elements in the partial layout are mapped back to the schematic and inserted into the SKI DATA.

When the simulator is configured to run in an interactive mode within the design simulation environment the updated new parasitic information is provided to the simulator via a simulation kernel interface in some embodiments. Such an interface allows further incremental re runs of the same simulator process by accepting incremental changes to the parasitic network information.

The stitching of the SPEF parasitic data to the original schematic netlist is performed by the simulator incrementally. This has the advantage that another schematic netlist and full parasitic information need not be explicitly created for the simulator in some embodiments. In these embodiments the simulator may work off the original schematic netlist that was generated to simulate without parasitics. Further for incremental changes within a reasonable scope the simulator may preserve much of its previous in memory state and perform a re simulation of the circuit with just the incremental design changes from the updated new parasitics.

The simulator performs a simulation of the circuit with devices from the original schematic representation and the additional parasitic elements corresponding to the parasitics fetched and mapped from the layout in some embodiments. The results of the simulation are used by the designer to analyze the functional behavior of the circuit and evaluate if the circuit meets the required design specifications in the presence of parasitics from the layout.

The process begins with the identification or creation of a schematic that describes the design in one or more embodiments. The schematic may include one or more schematic circuit elements various parameters on these schematic elements and a description of the connectivity between these schematic elements. The schematic of the circuit may then be used to generate a netlist which is typically a textual representation of the schematic elements the parameters on those elements and the connectivity between those elements in some embodiments. This netlist is passed on to a circuit simulator to simulate the circuit in one or more embodiments. The results of the simulation may be stored in a computer accessible storage medium displayed on a display apparatus or transferred and may also be used by the designer to analyze the functional behavior of the circuit and ensure that the circuit meets the required design specifications.

The simulator may however be configured to run in an interactive mode within the design simulation environment with the capability of accepting further inputs from the environment via a simulation kernel interface SKI in some embodiments. Such an interface allows further incremental re runs of the same simulator process by accepting incremental design or parameter changes from the design environment in some embodiments. The following paragraphs describe how this incremental re run mode may be used to analyze the impact of parasitics interactively in some embodiments.

As part of the design process a physical design corresponding to the circuit is created or modified by the layout designer in some embodiments. The electrical parasitics such as the resistances and capacitances of the interconnect wires are extracted from the physical design in some embodiments.

In order to evaluate the impact of these parasitics on the functional behavior of the circuit these parasitics need to be mapped to a flattened representation of the circuit as seen by the simulator in some embodiments. In these embodiments the flattened representation mimics an elaboration of the schematic that is performed by the simulator in the original simulation of the schematic without parasitics as described in several preceding paragraphs with reference to the corresponding figures.

The components used in the physical design to implement the devices in the layout may not necessarily have the same names as the ones used on the schematic in some embodiments. In these embodiments they may have different names for the terminals and nets representing their connectivity on the layout. There might further be several components on the layout corresponding to the same circuit element on the schematic in some embodiments for example m factor parameters on schematic devices can cause a 1 to M mapping between circuit element instances on the schematic and physical component instances on the layout in some embodiments. Further the design hierarchy might differ between the schematic and the layout in some embodiments. For example there could be multiple levels of schematic hierarchy corresponding to a single level of layout hierarchy. There may also be several levels of layout hierarchy as well.

The connection nodes of the parasitics on the layout therefore need to be correctly mapped to their schematic counter parts in order to be able to correctly stitch these parasitics into the schematic domain in some embodiments. The hierarchical schematic layout binding process in the process flow performs such a mapping of devices from the layout hierarchy to the schematic hierarchy while taking into account the various mappings between the schematic and layout devices including differences in names of devices and or nets differences in names of terminals and 1 to M mappings between schematic and layout devices in some embodiments.

To simulate the circuit with parasitics the parasitic network information needs to be communicated to the simulator. The parasitics in the layout are typically stored within the Open Access OA database DB representation in some embodiments. Sometimes the parasitic information can amount to large amounts of data and converting them to other formats ends up utilizing more disk space. Instead the simulator may directly read the parasitics from the OA DB. This approach in these embodiments has the advantage that the storage and reading of parasitics is done efficiently. The simulator and the simulation environment only need to convey to the simulator the ids of parasitic networks that changed . This approach further allows the design environment to pass incremental changes from the layout in the form of new modified parasitic ids to the simulator to in some embodiments.

In order for the simulator to be able to read in the parasitic information from the OA DB Data and stitch into the schematic netlist the names of the connection nodes of the parasitic network in the OA DB Data may need to correspond to nodes of the circuit device components in the original schematic netlist provided to the simulator in some embodiments. Name Mapping information is also conveyed to the simulator to map the names of the parasitic connection nodes from the schematic namespace to the simulation namespace.

Often times the layout is not fully complete in some embodiments. In these embodiments the partial layout may only contain layout components corresponding to certain critical devices in the layout. The layout may further only contain routing information for certain critical nets in some embodiments. In such embodiments only the ids of parasitic elements corresponding to elements in the partial layout are provided to the simulator .

When the simulator is configured to run in an interactive mode within the design simulation environment the updated new parasitic id information is provided to the simulator via a simulation kernel interface SKI in some embodiments. Such an interface allows further incremental re runs of the same simulator process by accepting incremental changes to the parasitic network information.

The stitching of the OA DB parasitic data to the original schematic netlist is performed by the simulator incrementally in some embodiments. This approach in these embodiments has the advantage that another schematic netlist and full parasitic information need not be explicitly created for the simulator in these embodiments. The simulator may work off the original schematic netlist that was generated to simulate without parasitics. Further for incremental changes within a reasonable scope the simulator can preserve much of its previous in memory state and perform a re simulation of the circuit with just the incremental design changes from the updated new parasitics in some embodiments.

The simulator performs a simulation of the circuit with devices from the original schematic representation and the additional parasitic elements corresponding to the parasitics fetched and mapped from the layout in some embodiments. The results of the simulation are used by the designer to analyze the functional behavior of the circuit and evaluate if the circuit meets the required design specifications in the presence of parasitics from the layout.

According to one embodiment computer system performs specific operations by one or more processor or processor cores executing one or more sequences of one or more instructions contained in system memory . Such instructions may be read into system memory from another computer readable usable storage medium such as static storage device or disk drive . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and or software. In one embodiment the term logic shall mean any combination of software or hardware that is used to implement all or part of the invention.

Various actions or processes as described in the preceding paragraphs may be performed by using one or more processors one or more processor cores or combination thereof where the one or more processors one or more processor cores or combination thereof executes one or more threads. For example the act of specifying various net or terminal sets or the act or module of performing verification or simulation etc. may be performed by one or more processors one or more processor cores or combination thereof.

The term computer readable storage medium or computer usable storage medium as used herein refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media and volatile media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory .

Common forms of computer readable storage media includes for example electromechanical disk drives such as a floppy disk a flexible disk or a hard disk a flash based RAM based such as SRAM DRAM SDRAM DDR MRAM etc. or any other solid state drives SSD magnetic tape any other magnetic or magneto optical medium CD ROM any other optical medium any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read.

In an embodiment of the invention execution of the sequences of instructions to practice the invention is performed by a single computer system . According to other embodiments of the invention two or more computer systems coupled by communication link e.g. LAN PTSN or wireless network may perform the sequence of instructions required to practice the invention in coordination with one another.

Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution. In an embodiment the computer system operates in conjunction with a data storage system e.g. a data storage system that contains a database that is readily accessible by the computer system . The computer system communicates with the data storage system through a data interface . A data interface which is coupled to the bus transmits and receives electrical electromagnetic or optical signals that include data streams representing various types of signal information e.g. instructions messages and data. In embodiments of the invention the functions of the data interface may be performed by the communication interface .

In the foregoing specification the invention has been described with reference to specific embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. For example the above described process flows are described with reference to a particular ordering of process actions. However the ordering of many of the described process actions may be changed without affecting the scope or operation of the invention. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

