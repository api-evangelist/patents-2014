---

title: Snapshots in a hybrid storage device comprising a magnetic disk and a solid state disk
abstract: One or more snapshots of data stored over a period of time are maintained in a hybrid storage device comprising a magnetic disk and a solid state disk, wherein a selected snapshot stores information that allows recovery of data that is stored in the hybrid storage device at a selected point in time of the period of time. The hybrid storage device receives an input/output (I/O) command from a computational device. A category of a plurality of categories to which the I/O command belongs is determined, wherein the plurality of categories comprise writing to an unused block, writing to a used block, reading from an unused block, and reading from a used block. In response to determining the category to which the I/O command belongs, the I/O command is handled by one of the magnetic disk and the solid state disk based on the determined category.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09317373&OS=09317373&RS=09317373
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09317373
owner_city: Armonk
owner_country: US
publication_date: 20141106
---
This application is a continuation of application Ser. No. 12 914 491 filed on Oct. 28 2010 which is incorporated herein by reference in its entirety.

The disclosure relates to a method a system and a computer program product for snapshots in a hybrid storage device comprising a magnetic disk and a solid state disk.

Backup of data may be performed in certain computer storage systems. In certain situations high efficiency backups may be performed by using copy on write technology that provides a snapshot of a storage system at a point in time. Snapshots that allow the recovery of the state of a storage system at particular points in time may be performed in certain server based storage system or in certain snapshot capable file systems. Snapshot mechanisms may primarily be used in enterprise systems.

In contrast to enterprise systems in certain products used by consumers direct attached storage and snapshot incapable file systems may be used. In such products that are used by consumers the capability of snapshot based backup may not be found. Many consumers may rarely if ever perform backups because mechanisms for backup may be inconvenient or time consuming.

Provided are a method a system and a computer program product in which one or more snapshots of data stored over a period of time are maintained in a hybrid storage device comprising a magnetic disk and a solid state disk wherein a selected snapshot stores information that allows recovery of data that is stored in the hybrid storage device at a selected point in time of the period of time. The hybrid storage device receives an input output I O command from a computational device. A category of a plurality of categories to which the I O command belongs is determined wherein the plurality of categories comprise writing to an unused block writing to a used block reading from an unused block and reading from a used block. In response to determining the category to which the I O command belongs the I O command is handled by one of the magnetic disk and the solid state disk based on the determined category.

In additional embodiments a determination is made that a first snapshot taken at a first point in time exists on the magnetic disk and that a second snapshot at a second point in time is to be generated. The second snapshot at the second point in time is generated. The second snapshot is stored on the solid state disk wherein the second snapshot stores changes that have taken place since the first snapshot taken at the first point in time.

In further embodiments the handling of the I O command by one of the magnetic disk and the solid state disk based on the determined category further comprises handling the I O command via the magnetic disk in response to determining that the category is writing to an unused block and in response to determining that the category is writing to a used block handling the I O command via the solid state disk.

In additional embodiments the handling of the I O command by one of the magnetic disk and the solid state disk based on the determined category further comprises performing in response to determining that the category is reading from a used block i determining whether the used block is on the magnetic disk or on the solid state disk ii in response to determining that the used block is on the magnetic disk handling the I O command via the magnetic disk and iii in response to determining that the used block is on the solid state disk handling the I O command via the solid state disk. Additionally in response to determining that the category is reading from an unused block a predetermined fixed response is returned to the computational device. In further embodiments the one or more snapshots comprise a first snapshot stored in the magnetic disk and incremental snapshots taken subsequent to the first snapshot stored in the solid state disk and wherein all data that is changed is maintained in the solid state disk. Furthermore in response to determining that free space on the solid state disk is less than a predetermined threshold a plurality of snapshots are coalesced to free up space on the solid state disk. Also in response to determining that an incremental snapshot stored in the solid state disk is to be merged with the first snapshot stored in the magnetic disk all blocks in the incremental snapshot stored in the solid state disk are copied onto the magnetic disk to overwrite oldest blocks present in the magnetic disk.

In the following description reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments. It is understood that other embodiments may be utilized and structural and operational changes may be made.

Certain embodiments provide a snapshot mechanism within a hybrid storage device comprising a magnetic disk and a solid state disk that are interfaced and housed within the hybrid storage device. The snapshot mechanism is implemented within the hybrid device and software that exists within a computational device to interact with the hybrid storage device does not have to be modified to implement the snapshot mechanism.

The coupling of the computational device to the hybrid storage device may be via a network wherein the network may be any network known in the art such as the Internet an intranet a Local area network LAN a Storage area network SAN a Wide area network WAN a wireless network etc. The computational device may alternatively be connected to the hybrid storage device without a network such as through direct lines common bus systems etc. in a manner known in the art. Also the network may be part of one or more larger networks or may be an independent network or may be comprised of multiple interconnected networks. In certain embodiments the computational device and the hybrid storage device of may be a cloud component part included in a cloud computing environment.

In certain embodiments the computational device may have an operating system and a storage driver implemented within the computational device . In storage driver may be software that allows the hybrid storage device to interact with the operating system of the computational device .

In certain embodiments snapshots that indicate the state of the hybrid storage device at selected points in time may be maintained within the magnetic disk and the solid state disks . . . . For example in certain embodiments the magnetic disk may store a base snapshot that includes indications of the files stored in the hybrid storage device at 10 AM and the solid state disks . . . may store an additional snapshot that includes indications of the files stored in the hybrid storage device at 10 30 AM. The additional snapshot may store indications of the files that have changed since the base snapshot was taken at 10 AM.

In certain embodiments the snapshot and I O processing application may at particular instants i.e. points of time generate snapshots of the hybrid storage device without any intervention from the computational device . Additionally the snapshot and I O processing application may also receive I O commands from the computational device and execute the I O commands within the hybrid storage device .

In certain embodiments data may be stored in the hybrid storage device in blocks wherein a block may comprise any fixed length of data. For example in certain embodiments a block may be 512 bytes.

Initially all of the blocks on the hybrid storage device may be unused. A used block is a block on which data has been written. In certain embodiments I O requests from the computational device to the hybrid storage device are of four categories 

In certain embodiments the snapshot and I O processing application that executes on the hybrid storage device interprets the I O requests of the four different categories and responds to the computational device .

Control starts at block in which the hybrid storage device receives an I O command from the computational device and determines the category of the I O command.

If the category of the I O command is write to unused block i.e. the I O command is a request to write to an unused block of the hybrid storage device then the snapshot and I O processing application of the hybrid storage device handles at block the I O command via the magnetic disk of the hybrid storage device and as a result data is written to the magnetic disk .

If the category of the I O command is write to used block i.e. the I O command is a request to write to a used block of the hybrid storage device then the snapshot and I O processing application of the hybrid storage device handles at block the I O command via the solid state disk of the hybrid storage device and as a result data is written to the solid state disk .

If the category of the I O command is read from used block i.e. the I O command is a request to read from a used block of the hybrid storage device then the snapshot and I O processing application determines at block whether the used block of the hybrid storage device is on the solid state disk or on the magnetic disk . If the used block is on the solid state disk then the snapshot and I O processing application of the hybrid storage device handles at block the I. O command via the solid state disk of the hybrid storage device and as a result data is read from the solid state disk . However if the used block is on the magnetic disk then the snapshot and I O processing application of the hybrid storage device handles at block the I. O command via the magnetic disk of the hybrid storage device and as a result data is read from the magnetic disk .

If the category of the I O command is read from an unused block i.e. the I O command is a request to read from an unused block of the hybrid storage device then the snapshot and I O processing application of the hybrid storage device returns at block a predetermined response such as 0 to the computational device to indicate that data cannot be read from an unused block.

Therefore illustrates certain embodiments that show how the hybrid storage device that stores snapshots responds to various categories of I O requests received from the computational device . It should be noted that previously written blocks on the magnetic disk remains unchanged.

If at point in time t reference numeral a new snapshot is needed any existing blocks on the solid state disk is preserved and subsequent write requests to used blocks are written to new positions on the solid state disk in the working blocks region . The new snapshot delta S reference numeral indicates the files that have changed since the taking of the snapshot S reference numeral via a bitmap or some other data structure. To recover the state of the system to point in time t reference numeral the delta S reference numeral snapshot and the snapshot S reference numeral may be used. At various points in time additional incremental snapshots shown as delta S reference numerals delta Sn reference numeral may be generated. Each incremental snapshot stores differences in files from the immediately previous snapshot. As a result to recover the state of the hybrid storage system at point in time to reference numeral the snapshot S stored in the magnetic medium and the incremental snapshots . . . shown in the solid state disk may be used.

In certain embodiments starting with an initial empty snapshot S only new blocks are created and existing blocks are not modified. In this case all the new blocks may be stored on the magnetic disk as the new blocks do not change the used blocks. The file system however does change to reflect new files. So the snapshots on the solid state disk may include only file system changes which are often relatively small. There may be adequate free space on a solid state disk to store the file system changes if the solid state disk is large as a proportion of the magnetic disk. In certain embodiments changes other than file system changes may be stored in the snapshots. For example in systems that do not have any file system the changes stored in the snapshots are not file system changes.

In other embodiments starting with a full initial snapshot S only existing blocks are changed. All the changes may be stored on the solid state disk. The solid state disk may soon run out of space. Old snapshots are then coalesced to free up space. To prevent the situation where space can be exhausted a predetermined threshold for solid state device space usage may be set. If a user continues changing data even after crossing the threshold the hybrid storage device may coalesce the oldest snapshot S in order to continue. If coalescing S does not free sufficient space then snapshots S S and so on may also be coalesced. In the worst case this forced action may last until all the snapshots on the solid state disk are coalesced whereupon all four categories of I O request may be handled by the magnetic disk. The hybrid storage device may then operate in the same way as a conventional hard disk drive. Such embodiments guarantee that a user will not lose the latest changes even if all of the previous snapshots are coalesced. This is no worse than a conventional hard disk drive.

Ordinarily average usage may fall somewhere between the two extreme cases described above. Some users may tend to create new block relatively more in comparison to modifying existing blocks. For example operating systems software and other applications multi media files etc remain relatively unchanged.

Although the system or software using the hybrid storage device is unaware of the snapshot function there may still be a need for snapshot management software. So there may have to be some mechanism for the user to manage the enhanced or hybrid storage device . This can be achieved in certain embodiments through specific driver software either implemented under Basic Input Output System BIOS Extensible Firmware Interface EFI or in the operating system. It is possible to have specific drivers for all major operating systems but handling under BIOS EFI causes certain embodiments to be much simpler. The management of snapshots including creation deletion coalescence and reversion can all be provided through software independently of the operating system. The management software may reside in a hidden partition of the magnetic disk and may be loaded prior to operating system start up by BIOS or EFI. Once the management job is complete it can chain load the operating system and make itself invisible thereafter. Using this method neither the BIOS EFI nor the operating may need any modification.

In certain embodiments an operating system restart may be needed to permit snapshot management. If a user needs online snapshot administration device drivers may be loaded into the operating system to meet this requirement.

Control starts at block in which one or more snapshots of data stored over a period of time are maintained in a hybrid storage device comprising a magnetic disk and a solid state disk wherein a selected snapshot stores information that allows recovery of data that is stored in the hybrid storage device at a selected point in time of the period of time.

The hybrid storage device receives at block an input output I O command from a computational device . A category of a plurality of categories to which the I O command belongs is determined at block wherein the plurality of categories comprise writing to an unused block writing to a used block reading from an unused block and reading from a used block . In response to determining the category to which the I O command belongs the I O command is handled at block by one of the magnetic disk and the solid state disk based on the determined category.

Control proceeds to block wherein in response to determining that free space on the solid state disk is less than an predetermined threshold plurality of snapshots are coalesced to free up space on the solid state disk.

Therefore illustrate certain embodiments in which the hybrid storage device provides a snapshot mechanism that uses both solid state disks and copy on write technologies. The operating system may need no modifications to the existing driver software. There is little or no knowledge of the snapshot technology mechanism storage needed by the users as the snapshot technology mechanisms are implemented in certain embodiments within the hybrid storage device . The implementation costs may be low in comparison to enterprise solutions.

In certain embodiments the performance of magnetic disks may degrade if the I O request involves blocks that are not contiguous. For this reason the magnetic disks may require defragmentation. Fragmentation occurs when data is changed. By storing all changed data on solid state disks rather than on disk the data on disk remains contiguous and improves performance.

The described operations may be implemented as a method apparatus or computer program product using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof. Accordingly aspects of the embodiments may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the embodiments may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied there.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider . Java is a trademark or registered trademark of Sun Microsystems Inc.

Aspects of the present invention are described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable medium that can direct a computer other programmable data processing apparatus or other devices to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer other programmable data processing apparatus or other devices to cause a series of operational steps to be performed on the computer other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

In certain embodiments the computational device and the hybrid storage device of may be cloud component parts included in a cloud computing environment. In the cloud computing environment the systems architecture of the hardware and software components involved in the delivery of cloud computing may involve a plurality of cloud components communicating with each other. For example in certain embodiments the computational device of may provide clients and other servers and software and or hardware components in the networked cloud with storage and data processing services. The computational device may provide reliable storage services and access to the hybrid storage device to meet quality of service requirements for customers in the cloud. The computational device may communicate with clients to provide storage and other services for the storage devices through a web interface or other application programming interface.

Certain embodiments may be directed to a method for deploying computing instruction by a person or automated processing integrating computer readable code into a computing system wherein the code in combination with the computing system is enabled to perform the operations of the described embodiments.

The terms an embodiment embodiment embodiments the embodiment the embodiments one or more embodiments some embodiments and one embodiment mean one or more but not all embodiments of the present invention s unless expressly specified otherwise.

The terms including comprising having and variations thereof mean including but not limited to unless expressly specified otherwise.

The enumerated listing of items does not imply that any or all of the items are mutually exclusive unless expressly specified otherwise.

Devices that are in communication with each other need not be in continuous communication with each other unless expressly specified otherwise. In addition devices that are in communication with each other may communicate directly or indirectly through one or more intermediaries.

A description of an embodiment with several components in communication with each other does not imply that all such components are required. On the contrary a variety of optional components are described to illustrate the wide variety of possible embodiments of the present invention.

Further although process steps method steps algorithms or the like may be described in a sequential order such processes methods and algorithms may be configured to work in alternate orders. In other words any sequence or order of steps that may be described does not necessarily indicate a requirement that the steps be performed in that order. The steps of processes described herein may be performed in any order practical. Further some steps may be performed simultaneously.

When a single device or article is described herein it will be readily apparent that more than one device article whether or not they cooperate may be used in place of a single device article. Similarly where more than one device or article is described herein whether or not they cooperate it will be readily apparent that a single device article may be used in place of the more than one device or article or a different number of devices articles may be used instead of the shown number of devices or programs. The functionality and or the features of a device may be alternatively embodied by one or more other devices which are not explicitly described as having such functionality features. Thus other embodiments of the present invention need not include the device itself.

At least certain operations that may have been illustrated in the figures show certain events occurring in a certain order. In alternative embodiments certain operations may be performed in a different order modified or removed. Moreover steps may be added to the above described logic and still conform to the described embodiments. Further operations described herein may occur sequentially or certain operations may be processed in parallel. Yet further operations may be performed by a single processing unit or by distributed processing units.

The foregoing description of various embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description but rather by the claims appended hereto. The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

