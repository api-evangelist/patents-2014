---

title: Information processing apparatus, information processing method, and program
abstract: An information processing apparatus which has a display device includes a display control unit and a launching unit. The display control unit may cause the display device to display a device management screen corresponding to an image processing apparatus. The launching unit may input identification information indicating launching in response to an instruction via the device management screen to an application associated with the image processing apparatus. In addition, the launching unit may launch the application associated with the device management screen according to the instruction input via the device management screen displayed on the display device by the display control unit.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09317232&OS=09317232&RS=09317232
owner: CANON KABUSHIKI KAISHA
number: 09317232
owner_city: Tokyo
owner_country: JP
publication_date: 20140827
---
This application is a divisional of U.S. Patent application Ser. No. 12 905 997 filed Oct. 15 2010 which claims the benefit of and priority to Japanese Patent Application No. 2009 250921 filed Oct. 30 2009 the entire contents of each of which are hereby incorporated by reference herein in their entirety.

The present invention relates to an information processing apparatus an information processing method and a program.

A peripheral apparatus control system enables a personal computer hereinafter referred to as PC user to access a peripheral apparatus via an appropriate interface such as Universal Serial Bus USB Ethernet registered trademark or wireless local area network LAN . PC users can effectively use this kind of control system for various purposes in their houses and offices. An example of the peripheral apparatus is for example a printer a copying machine a facsimile machine a scanner a digital camera or combinations of these devices or functions thereof.

Windows registered trademark 7 which is provided by Microsoft Corporation includes newly introduced functions to manage peripheral apparatuses connected to a PC. For example Devices and Printers is a window that displays a peripheral apparatus or a plurality of apparatuses connected to the PC. Device Stage registered trademark is a visual screen that displays a link to a unique application or service provided by each apparatus. Therefore PC users can easily access and use various functions and services relating to respective peripheral apparatuses.

Conventionally transmission of a print instruction from a Windows registered trademark application to a peripheral apparatus e.g. a printer a scanner a copying machine or a multifunction peripheral has been performed according to the following procedure. More specifically as discussed in Japanese Patent Application Laid Open No. 2005 85132 the procedure includes enabling a user to select an apparatus as an output destination after launching an application and perform input and output operations for the selected peripheral apparatus.

For example there is an application hereinafter referred to as a recovery application capable of recovering settings of an information processing apparatus that relate to an output destination apparatus. If there is a plurality of printer icons created for a single output destination apparatus the recovery application can delete unnecessary printer icon s other than a target printer icon that a user wants to use. However in a case where various applications are launched from the Device Stage it is doubtless that a user wants to use a printer icon associated with the Device Stage. Therefore when a user uses a print application launched from the Device Stage it is rare that the user operates a wrong printer icon. Accordingly the recovery application launched from the Device Stage is not required to perform processing for deleting other printer icons.

The present invention is directed to a technique capable of preventing processing of each application from being uselessly performed.

According to an aspect of the present invention an information processing apparatus having a display device includes a display control unit and a launching unit. The display control unit may cause the display device to display a device management screen corresponding to an image processing apparatus. The launching unit may input identification information indicating launching in response to an instruction via the device management screen to an application associated with the image processing apparatus. In addition the launching unit may launch the application associated with the device management screen according to the instruction input via the device management screen displayed on the display device by the display control unit.

Exemplary embodiments of the present invention can prevent the processing of each application from being uselessly performed.

Further features and aspects of the present invention will become apparent from the following detailed description of exemplary embodiments with reference to the attached drawings.

Various exemplary embodiments features and aspects of the invention will be described in detail below with reference to the drawings.

In the following exemplary embodiment it is assumed that a Devices and Printers screen see can be displayed when it is selected from a start menu screen of the Windows. Further a Device Stage screen see of each apparatus can be opened when it is selected from the Devices and Printers screen.

For example in a case where the selected apparatus is a printer the Device Stage screen can display a link to an application that enables a user to open photos or documents to display or print. Further the Device Stage screen can display a link to a status monitor that displays information indicating an operational state of an apparatus e.g. a printer or a scanner on a display device e.g. liquid crystal display device LCD . Further widespread use of the internet enables a user to use various online services via the internet by connecting information processing apparatuses and peripheral apparatuses. For example if the Device Stage screen provides a link to a support site on the internet that is provided by a manufacturer of an apparatus a user can easily access the intended site relating to his her apparatus.

A multifunction printer hereinafter referred to as MFP can be constituted by a color inkjet printer a color facsimile machine or a color scanner. The MFP is an example of the peripheral apparatus according to the present exemplary embodiment. The MFP has a model name Kmmn which is manufactured by ABC Corporation. The peripheral apparatus i.e. an image processing apparatus according to the present exemplary embodiment is not limited to the MFP and can be constituted by a printer a copying machine a facsimile machine a scanner a digital camera or any other apparatus having comparable functions. illustrates an example of a hardware configuration of the MFP . The MFP is connected to the PC via the network to perform bi directional communications.

The PC includes an application which can be constituted by an executable file .EXE for Windows. As an example function relating to the present exemplary embodiment the application can display device management screens illustrated in . The PC further includes a printer driver see and a FAX driver .

The PC further includes a scanner driver . The network is a private network constructed in a house of a user i.e. a client who uses the MFP . The MFP is connected to the PC via the network and can be commonly used among a plurality of users in the house. The network is an office network constructed in the building of ABC Corporation. The PC connected to the network includes a web server that provides a web site of ABC Corporation via the internet.

A compact disk read only memory CD ROM is a portable storage medium that can be inserted into the PC . The CD ROM can store software programs and electronic files. Control files data to be used in device management hereinafter referred to as device management control files and are respectively distributed from the web server and the CD ROM . The PC can use an analog telephone line for facsimile transmission or reception. A flash memory can be inserted into a dedicated slot not illustrated of the MFP as a storage that can be referred to by the PC .

A printer has a model name Defg which is manufactured by XYZ Corporation. The printer is a device different from the MFP in type. For example the printer may be a laser printer having a single function or an inkjet printer. A print engine may be any one of an inkjet type an electrophotographic type a color type or a monochrome type.

As illustrated in the PC includes a random access memory RAM a hard disk drive HDD serving as a storage unit a keyboard KBD serving as an input unit and a central processing unit CPU serving as a control unit. The PC further includes a liquid crystal display device LCD serving as a display unit a network board NB serving as a communication control unit and a bus that connects the above described functional units of the PC . The HDD can be replaced with a portable CD ROM or a built in ROM that can also serve as a storage unit.

An application such as the device management and respective modules software programs illustrated in and can be stored in the HDD . The CPU can execute each module software program loaded into the RAM from the HDD if necessary. Therefore the CPU can realize functions of the application such as the device management and various functions of respective modules software programs illustrated in and .

The RAM temporarily stores print data which are mainly transmitted from the PC . The recording unit performs printing based on the print data stored in the RAM . Further the RAM temporarily stores image data read by the reading unit facsimile transmission data received from the PC and facsimile reception data received by the facsimile control unit . The communication unit includes a connection port for the network and a connection port for the analog telephone line . The communication unit controls analog communications such as Ethernet and facsimile communications.

The recording unit includes a recording unit and an electric circuit. The recording unit includes an inkjet type recording head color ink tanks a carriage and a recording sheet conveyance mechanism. The electric circuit such as an application specific integrated circuit ASIC controls the recording head to generate pulses for printing based on the print data. When a user performs a printing operation or a facsimile transmission operation via a print application contents image data of a displayed file that is opened by the application are temporarily stored as a spool file in the HDD of the PC .

The stored spool file data is for example print command type data or intermediate drawing command type enhanced metafile EMF type data which can be interpreted by a printing apparatus. Then pieces of the image data are converted via the printer driver or the FAX driver into print data or facsimile transmission data including a command for controlling the MFP and then transmitted via the network to the MFP . When the MFP receives the print data the recording unit converts the received print data into pulses for printing and prints an image on a recording sheet. When the MFP receives the facsimile transmission data the facsimile control unit converts the received facsimile transmission data into facsimile communication protocols and transmits the converted data to a facsimile machine of a transmission destination via the analog telephone line .

The operation unit includes a power button a reset button and other various buttons which enable a user to operate the MFP . The display unit is for example constituted by a touch panel liquid crystal display device. The display unit can display an operational state of the MFP and various setting information and telephone numbers and can receive input by the user. The reading unit includes a color image sensor and an electric circuit constituted by ASIC for image processing. The facsimile control unit is constituted by a facsimile modem or an analog communication circuit. The facsimile control unit controls transmission and reception of facsimile data according to facsimile communication protocols.

The apparatus illustrated in can communicate with the MFP illustrated in via a network . The network is a network constituted by at least one of the network the internet and the network or by a combination thereof.

For providing a support for network connection devices Windows Vista OS includes an extended plug and play function which is referred to as Plug and Play Extensions PnP X as an initially installed standard function.

However the N PnP function is used in the present exemplary embodiment which is a function comparable to the PnP X function. A device driver group includes a standard driver group incorporated as standard software programs in a program package for the OS and an IHV made driver group that can be provided from the IHV. An application device driver interface DDI interface includes an Application Programming Interface API and a Device Driver Interface DDI .

The application for device management hereinafter referred to as device management is a standard software program incorporated in the program package for the OS. A recovery application is described below with reference to . The recovery application is an example application that is associated with the image processing apparatus. A print application is described below with reference to . An application group includes the device management the recovery application and the print application . The device management manages and executes a Devices and Printers folder illustrated in and a device management screen illustrated in . The software configuration of the PC illustrated in is applicable to the PC illustrated in and the PC and the PC illustrated in .

A spooler includes a printer queue that performs queuing of print jobs. A printer queue folder displays the queued print jobs. A print processor can change a print layout and can perform special processing on a printed image. A graphics driver which serves as a core part of the printer driver performs image processing for printing based on a drawing command transmitted from the GDI and generates a print control command. A UI module can provide a user interface of the printer driver and can control the user interface.

A language monitor which serves as a data communication interface I F can control transmission and reception of data. A status monitor can display an ink remaining amount of each ink usable by the MFP and also display warning error and other states. A port monitor can perform processing for receiving data from the language monitor and transmitting the received data to an appropriate port. The port monitor can further perform processing for receiving data from the MFP via a class driver .

The class driver is a low level module closest to the port. In the present exemplary embodiment the class driver corresponds to a driver for a unique protocol WSD or IHV printer class which controls the port e.g. a network port in the present exemplary embodiment . The printer driver is a driver provided by ABC Corporation the manufacturer of the MFP .

The N PnP control stack the WSD control stack the IP Network control stack the Ethernet control stack and the application DDI interface are modules provided by the OS. The GDI illustrated in partly corresponds to the application DDI interface . More specifically the GDI is an interface that can be called by the application. The graphics driver is functionally operable to convert data input via the GDI interface into a DDI command. The graphics driver and the UI module correspond to the standard driver group and the N PnP control stack illustrated in . The IHV native protocol control stack has a function that corresponds to the function of the port monitor illustrated in although it is a portion that the IHV can provide as an extension function of the OS.

In the present exemplary embodiment a device named as XYZ Defg and a device named as ABC Kmmn are printers currently available for the PC . A default mark is a mark indicating a system default printer. Thus illustrates a state that the device named as XYZ Defg is set as the default printer. If a user clicks on a symbol mark indicating the device named as ABC Kmmn with a mouse or the like the device management screen illustrated in can be displayed.

In step S the device management starts processing according to the flowchart illustrated in when the PC e.g. the PC is connected to a device e.g. the MFP via the network . In step S the PC acquires a device identification ID of the device i.e. the MFP . The device ID acquired in step S is for example MFG ABC MDL Kmmn CLS PRINTER CMD K4 DES ABC Kmmn which is expressed using a character string. The PC can acquire a device ID of any printer function of the MFP from the MFP via the network . The device ID includes the following information.

Next in step S the device management determines whether installation of the driver e.g. the printer driver and the FAX driver is already completed. If it is determined that there is not any installed driver NO in step S then in step S the device management installs the driver e.g. the printer driver and the FAX driver . If the installation of the driver e.g. the printer driver and the FAX driver is successfully completed a printer mark corresponding to the newly installed driver is registered to the Devices and Printers folder illustrated in .

If it is determined that the driver e.g. the printer driver and the FAX driver is already installed YES in step S the processing proceeds to step S.

Then in step S the device management determines whether the device management control file see is not yet installed. To perform the determination processing in step S the device management can refer to manufacturer information MFG and model information MDL included in the device ID to check whether the installed device management control file matches with the driver the printer driver and the FAX driver .

If it is determined that the installation of the control file is not yet completed NO in step S then in step S the device management executes processing for installing the device management control file as illustrated in and completes the processing. If it is determined that the device management control file is already installed YES in step S then in step S the device management terminates the processing procedure illustrated in .

When the device management determines to execute the processing for installing the device management control file in step S in in step S illustrated in the device management starts file installation processing First in step S the device management confirms a device ID of the device the MFP connected via the network .

In step S the device management searches for a device management control file dedicated to the MFP i.e. the device connected to the PC based on the manufacturer information MFG and the model information MDL included in the device ID.

An example of a device management control file illustrated in includes descriptions relating to the device the MFP . More specifically the manufacturer MFG ABC is included in an element indicating a description and the model MDL Kmmn is included in an element indicating a description . The device management control file is an example of device management control data. The device management searches for the device management control file dedicated to the device i.e. the MFP from among device management control files stored in the web server or the CD ROM inserted in the PC based on the information described in the elements and .

In step S the device management determines whether a device management control file or a device management control file has been found. If it is determined that the device management control file or the device management control file is detected YES in step S then in step S the device management stores the detected device management control file in the HDD of the PC . In step S the device management terminates the file installation processing illustrated in .

In the present exemplary embodiment the device management detects and installs the device management control file that corresponds to the device the MFP . If it is determined that neither the device management control file nor the device management control file has been detected NO in step S then in step S the device management terminates the processing procedure without installing any device management control file.

The recovery application includes a launching source determination unit an application control unit a connection device search unit a recovery processing execution unit and a recovery item determination unit . The device management screen is launched and displayed when a device is selected from the Devices and Printers folder illustrated in . Here a case in which the device selected from the folder illustrated in is the device and the device management screen is launched as illustrated in is described as an example.

In step S the device management starts device management screen launch processing in response to selection of the device from the Devices and Printers folder .

Next in step S the device management control unit acquires a device name of the device selected from the Devices and Printers folder . In the present exemplary embodiment the device management control unit acquires a device name ABC Kmmn of the selected device as a control target device.

Next in step S the device management control file reading unit loads the device management control file based on the device name acquired in step S. More specifically the device management control file reading unit loads the device management control file stored in step S illustrated in based on the device name acquired in step S.

Then in step S the device management control file reading unit analyzes a content described in the device management control file illustrated in and extracts parses required information. In step S the device management control unit causes the display unit to display the device management screen according to the content of the data parsed by the device management control file reading unit . Then in step S the device management control unit terminates the processing procedure illustrated in .

The device management control file illustrated in includes in addition to the above described element and the element that are information required in installation information necessary to construct the device management screen .

The device management screen includes an upper field in which a device icon a device name and manufacturer information are displayed. The data of the device icon is stored as a part of data stored in the device management control file storage unit although not illustrated. Further the displayed device name is the name of the device selected from the Devices and Printers folder . The displayed manufacturer information is a character string designated in the element .

The device management screen includes a lower field in which links to various functions relevant to the device are displayed. More specifically a printer queue button a print setting button an ink remaining amount button a device status button and an application A launch button are displayed. An element indicating a description illustrated in includes five elements denoted by each describing a button and its function.

First the first element is described in detail. An element indicating a description Open Printer Queue includes a character string Open Printer Queue to be displayed on the printer queue button . An element indicating a description open Printer Queue includes a code open Printer Queue that represents a printer queue folder displaying function program . Although not illustrated in the drawings the printer queue folder has a function of displaying a state of a print job.

Therefore in step S the device management control file reading unit parses the element and the display unit displays the character string described in the element on the printer queue button illustrated in . If the printer queue button is pressed the function described in the element is executed and as a result the printer queue folder is displayed.

Next the second element is described in detail. An element indicating a description Printing Preferences includes a character string Printing Preferences to be displayed on the print setting button . An element indicating a description printing Preferences includes a code printing Preferences that represents a print setting dialog displaying function program . Although not illustrated the print setting dialog is a print setting screen that can be provided by the UI module of the printer driver .

Therefore in step S the device management control file reading unit parses the element and the display unit displays the character string described in the element on the print setting button illustrated in . If the print setting button is pressed the function described in the element is executed and as a result the print setting dialog is displayed.

Next the fifth element is described in detail. An element indicating a description Launch Application A includes a character string Launch Application A to be displayed on the application A launch button .

An element indicating a description ProgramFiles YABCYApplication A.exe devmng devname includes a code ProgramFiles YABCYApplication A.exe devmng devname that represents an application A illustrated in launching function.

Therefore in step S the device management control file reading unit parses the element and the display unit displays the character string described in the element on the application A launch button illustrated in . If the application A launch button is pressed the function described in the element is executed and as a result an application A screen illustrated in is displayed. The application A corresponds to the recovery application illustrated in .

If a user presses the application A launch button on the device management screen in step S the device management control unit provided in the device management illustrated in executes the content of the element illustrated in via the link execution unit and starts the application A launch processing.

Next in step S the application control unit transmits the content described in the element to the launching source determination unit . According to the example illustrated in the element includes a description devmng that is identification information indicating launching of the application from the device management screen and a description devname that indicates a device name. When the print application is launched the link execution unit replaces the description devname with the device name managed by the Devices and Printers folder illustrated in .

In the present exemplary embodiment the device is selected when the device management screen is launched. Therefore in step S the OS acquires a device name icon name ABC Kmmn having been set as an icon name illustrated in . Further the OS transmits the acquired device name icon name to the launching source determination unit .

Next in step S the connection device search unit searches for printers that are currently connected. Next in step S the connection device search unit confirms whether at least one printer is connected. If it is determined that there is not any printer being currently connected NO in step S it is unfeasible to identify a recovery target printer. Therefore in step S the connection device search unit displays a message screen illustrated in to instruct a user to connect a printer to be recovered.

If it is determined that there is at least one printer being currently connected YES in step S the connection device search unit advances the processing to step S. In step S the connection device search unit determines whether a plurality of printers is currently connected. If it is determined that only one printer is currently connected YES in step S then in step S the connection device search unit determines the recovery target printer.

If it is determined that two or more printers are currently connected NO in step S then in step S the launching source determination unit determines whether the launching source is the device management screen based on an argument when the launching operation is started.

In the present exemplary embodiment the element includes a designation devmng based on which the recovery application is launched. Therefore the launching source determination unit determines that the launching source is the device management screen YES in step S . For example in a case where the recovery application is not launched from the device management screen the designation devmng is not included in the argument. In this case the launching source determination unit determines that the launching source is not the device management screen.

If the launching source determination unit determines that the launching source is not the device management screen NO in step S then in step S the recovery application displays a message screen illustrated in to instruct the user to disconnect printer s except for the recovery target printer.

If the launching source determination unit determines that the launching source is the device management screen YES in step S it is regarded that the recovery target printer is already determined. Therefore the processing of the recovery application proceeds to step S. In step S the launching source determination unit confirms whether the device name acquired by the connection device search unit coincides with a device name associated with the device management screen of the launching source.

If it is determined that the compared device names are the same YES in step S then in step S the recovery application determines the recovery target printer. If it is determined that the compared device names are different NO in step S then in step S the recovery application displays a message screen illustrated in to instruct the user to connect a printer having the device name associated with the device management screen.

In the present exemplary embodiment the device name associated with the device management screen is the device name of each printer. However the device name can be an identifier e.g. serial number of the printer. In this case the identifier is stored in the device management screen and is required to be transmitted to the recovery application as a parameter when the recovery application is launched.

Next in step S the launching source determination unit confirms whether the launching source is the device management screen. If it is determined that the launching source is not the device management screen NO in step S then in step S the recovery application displays a regular recovery screen illustrated in . The recovery screen illustrated in includes a plurality of selectable items i.e. items that the user can select corresponding to respective functions that can be provided by the recovery application . For example as apparent from delete unnecessary print job and bring printer into on line state are displayed as the selectable items relating to the functions of the recovery application .

On the other hand if it is determined that the launching source is the device management screen YES in step S then in step S the recovery application deletes unnecessary recovery items selectable items from the regular recovery screen. Then in step S the recovery application displays a message screen illustrated in .

In an environment in which various applications are launched using the device management screen a printer icon used by the user in the application can be identified. Therefore performing processing for deleting an unnecessary printer icon is useless for the recovery application . Further it is unnecessary to display an item delete unnecessary icon see an icon in for the user.

Accordingly in step S the recovery item determination unit deletes unnecessary recovery items when the launching is performed using the device management screen. For example the recovery item determination unit regards the recovery item delete unnecessary icon the icon in as an unnecessary item. When an application is launched from the device management screen a printer icon that the user wants to use can be identified. Accordingly the recovery item determination unit may regard a recovery item designate as default printer see an icon in as an unnecessary item to be deleted. The recovery item to be deleted can be preliminarily set in a setting file for each application. In this case it is useful that the setting file is correctable so that a deletion target item can be arbitrarily changed.

In step S the recovery application displays the screen illustrated in or which displays recovery items. In step S the recovery application terminates the recovery function launch processing.

When the recovery application is launched from the device management screen it is notified that the device management screen is the launching source so that the recovery application can display a screen including an appropriate notification as illustrated in . Further among the recovery items corresponding to regular functions provided by the recovery application it is feasible to delete unnecessary recovery item s preliminarily determined so that functions provided to a user are limited to only the ones appropriate for the user.

If a recovery execution button illustrated in or a recovery execution button illustrated in in the recovery application is selected by a user in step S the application control unit starts the recovery processing. First in step S the application control unit acquires a recovery item selected on the recovery screen displayed in step S in .

In step S the application control unit executes the recovery processing according to the selected recovery item acquired in step S. For example the application control unit stores recovery processing results e.g. success or failure in the recovery processing in the RAM . Further the HDD can store any data relating to processing authority user right and executable processing allowed to the authority while associating them with each other.

For example the application control unit searches for the data based on log in user rights identifies processing that can be executed based on the user rights and determines whether processing recovery processing to be executed by the application control unit is executable.

Then if it is determined that the recovery processing is unexecutable based on the log in user rights the application control unit stores a result of failed recovery processing and the cause of failure in this case the recovery processing has failed due to disqualification of user rights in the RAM . Further for example the application control unit can refer to a return value obtainable in execution of Application Programming Interface API relating to the recovery processing provided by the OS to identify disqualification of user rights as the cause of failure in the recovery processing.

Next in step S the application control unit confirms whether the recovery processing is successful referring to the recovery processing result stored in the RAM . If it is determined that the recovery processing is successfully completed YES in step S then in step S the recovery application displays a recovery result indicating that the recovery processing is successfully completed. Then in step S the recovery application terminates the recovery processing. If it is determined that the recovery processing is failed NO in step S then in step S the launching source determination unit confirms whether the launching source is the device management screen.

If it is determined that the launching source is not the device management screen NO in step S then in step S the recovery application displays a recovery result indicating that the recovery processing is failed. Subsequently in step S the recovery application terminates the recovery processing. If it is determined that the launching source is the device management screen YES in step S then in step S the application control unit confirms whether the cause of failure in the recovery processing is disqualification of operational rights referring to the information stored in the RAM .

If it is determined that the cause of failure in the recovery processing is disqualification of operational rights YES in step S the processing of the application control unit proceeds to step S. In step S the application control unit raises the user rights and records information instructing launching of the recovery application from the device management screen in an application control information storing unit of the information processing apparatus.

In the present exemplary embodiment the application control information storing unit is the HDD provided in the information processing apparatus and can be presumed as a registry of Windows OS. Subsequently in step S the recovery application displays a recovery result that includes recommendation with respect to re execution of the recovery function from the device management screen. Further in step S the recovery application terminates the recovery processing.

As described above the launching source determination unit identifies the launching source in step so that the application A can perform processing specialized for the device management screen only when the launching source is the device management screen.

On the other hand if it is determined that the cause of failure in the recovery processing is not the disqualification of operational rights NO in step S the application control unit determines that the recovery application launched from the device management screen is inoperable in the user s environment. Therefore in step S the application control unit records information instructing deletion of the application A launch button in the application control information storing unit of the information processing apparatus. Subsequently in step S the recovery application displays the recovery result indicating that the recovery processing is failed. Further in step S the recovery application terminates the recovery processing.

A device management control file illustrated in corresponds to a part of the device management control file illustrated in . The device management control file includes a description of information relating to the device management screen or a device management screen . The device management refers to the information recorded in the application control information storing unit in step to select the device management screen or the device management screen as a screen to be displayed. A procedure for display determination is described below.

The device management control file includes an element which describes a condition for displaying the application A launch button on the device management screen . An exist attribute indicates that there is information recorded in the application control information storing unit . The element includes a description of FALSE as an attribute value. In short the description in the element indicates a condition that there is not any information recorded in the application control information storing unit .

If there is not any information recorded in the application control information storing unit the Launch Application A button is displayed on the device management screen . Processing to be executed in response to selection of the Launch Application A button is described above with reference to and .

On the other hand if there is information recorded in the application control information storing unit in step the condition indicated by the element is not satisfied. The device management control file includes the next describing another condition as an element . The element includes a description TRUE as an attribute value of the exist attribute. The description TRUE indicates that information recorded in the application control information storing unit is essential. Further the element includes a description admin as an attribute value of an elevation attribute. The description admin indicates a condition that the information recorded in the application control information storing unit in step can be launched based on administrator rights. In other words the condition described in the element can be satisfied when the information recorded in the application control information storing unit in step includes an instruction to launch based on the administrator rights. If the condition described in the element is satisfied the device management screen illustrated in can be displayed.

A character string Launch Application A Administrator rights is necessary is set to the application A launch button on the device management screen . Therefore a user can clearly recognize that the function corresponding to the button requires the administrator rights to launch. Further an icon simply indicating the application A is displayed. The icon can be replaced by another icon indicating that the function requires the administrator rights to launch.

Therefore in a case where the application A does not require the administrator rights the application A can be launched based on ordinary rights. On the other hand in a case where the application A requires the administrator rights the application A can be launched based on administrator rights. Thus the application launch processing using the device management screen can be optimized.

If the application A launch button is pressed by a user the device management launches the recovery application according to a code ProgramFiles ABCYApplicationA.exe devmng debname admin described in an element . In this case the element includes an instruction admin. Therefore the link execution unit launches the recovery application based on the administrator rights.

Further if in step S it is determined that the cause of failure in the recovery processing is not the disqualification of operational rights the application control unit can determine that the recovery processing is infeasible in the user s environment and can delete the application A launch button from the device management screen . If the cause of failure in the recovery processing is not the disqualification of operational rights NO in step S then in step S the recovery application records a setting indicating non display of the application in the application control information storing unit . In this case if information is already present in the application control information storing unit the recovery application deletes the information from the application control information storing unit .

In the device management screen launch processing the information recorded in the application control information storing unit is essential because an element includes a description TRUE as an attribute value of the exist attribute. Further the element includes a description TRUE as an attribute value of a taskdisable attribute.

The description in the element indicates that the information recorded in the application control information storing unit instructs non display of the application A launch button. In short the condition described in the element can be satisfied when the information recorded in the application control information storing unit includes an instruction to delete the application A launch button. If the condition described in the element is satisfied a device management screen illustrated in can be displayed. As indicated by a blank space the device management screen does not include the application A launch button.

Further if the information recorded in the application control information storing unit in step is recorded in a memory area dedicated to each user as information relating to a current log in user of the PC the display content of the device management screen can be switched for each user. The memory area dedicated to each user is for example an area HKEY CURRENT USER of a registry. For example the above described configuration enables the device management to display the device management screen for a user who is not required to have the administrator rights and display the device management screen for a user who is required to have the administrator rights.

The application described in the first exemplary embodiment is the recovery application capable of changing printer settings to appropriate ones. An application described in a second exemplary embodiment is a print application to be launched from the device management to create and output various print products. The print application has the capability of printing any one of different types of print products such as a photoprint an album a DVD CD label and a calendar as described below according to a user s operation.

A system configuration of a peripheral apparatus control system according to the present exemplary embodiment is similar to the system configuration according to the first exemplary embodiment illustrated in . Further although not illustrated in the drawings hardware configurations of a PC and a printer are similar to the configurations illustrated in . A software configuration of the PC is similar to the configuration illustrated in . A configuration of a printer driver in the PC is similar to the configuration illustrated in . Thus descriptions of these configurations are omitted. Further in the present exemplary embodiment the application A is a print application .

In the present exemplary embodiment the Devices and Printers folder illustrated in can be displayed on the LCD of the information processing apparatus. The Devices and Printers folder indicates driver icons of printers and facsimile machines that are in usable states by the information processing apparatus. If a user clicks on the symbol mark indicating the device named as ABC Kmmn with the mouse the device management screen illustrated in can be displayed.

Device connection processing device management control file installation processing and device management screen launch processing according to the present exemplary embodiment are similar to those described with reference to the flowcharts illustrated in and and therefore their descriptions are not repeated.

A device management control file illustrated in is a device management control file used in the present exemplary embodiment. illustrates a part of the device management control file according to the present exemplary embodiment. The device management control file includes an element and an element which are similar to those described in the device management control file illustrated in according to the first exemplary embodiment.

The element includes a description TRUE as an attribute value of a photoprint attribute. The element includes a description TRUE as an attribute value of an album attribute. These descriptions indicate a condition that the presence of photoprint and album as application control information is recorded in print application termination processing and according to presence of absence the application control information the display content can be switched.

None of the application control information to be recorded in the print application termination processing is present in an initial state. Therefore buttons corresponding to an element and an element are not displayed. On the other hand an element does not include any preceding element . Therefore the corresponding application A launch button is constantly displayed. As a result the device management screen is displayed to have a format similar to the above described device management screen illustrated in . In the present exemplary embodiment the application A is the print application .

An element an element and an element include a code to be executed when a button corresponding to the element the element and the element is pressed respectively. Among the codes described in the elements and a description ProgramFiles YABCYApplicationA.exe designates a location of an execution module of the print application .

Further a description devmng is a first command line option that indicates launching of the application from the device management screen. A description photo included in the element and a description album included in the element are a second command line option which is an example of function identification information designating a function to be executed in the print application .

The element does not include the second command line option designating the function to be executed. A description devname represents a device name which can be replaced by an actual device name when the print application is launching as described in the first exemplary embodiment.

Hereinafter print application launch processing is described below with reference to a flowchart illustrated in . A program relating to processing illustrated in the flowchart in i.e. the print application is stored in the HDD and can be executed by the CPU when the program is loaded into the RAM from the HDD .

If a user presses the application A launch button on the device management screen the device management control unit of the device management illustrated in executes the content of the element illustrated in via the link execution unit . Accordingly in step S the application control unit starts application A launch processing.

Next in step S the application control unit acquires the content described in the element as information indicating a launching source and a launching function of the print application and stores the acquired information in a predetermined area of the RAM managed by the print application . Then in step S the application control unit determines whether the acquired content includes the second command line option that designates a function to be executed. The element does not include the second command line option. Therefore the processing of the application control unit proceeds to step S.

In step S the application control unit transmits the content of the element to the launching source determination unit . The launching source determination unit determines whether the content of the element includes the first command line option that indicates launching of the application from the device management screen. The element includes the first command line option. Therefore the launching source determination unit determines that the application is launched from the device management screen. The processing proceeds to step S.

In step S the application control unit acquires application control information to be recorded in the application termination processing from the application control information storing unit and reduces the number of items to be displayed on the menu screen based on the acquired information. However as described above the application control information to be recorded in the application termination processing is not present in the initial state. Therefore there is not any item to be deleted. Subsequently in step S the application control unit displays a menu screen illustrated in on the LCD of the PC via the UI control unit .

Subsequently in step S the application control unit determines a print function to be launched which can be selected from photoprint album DVD CD label and calendar based on the user s input acquired in step S. Then in step S the application control unit terminates the print application launch processing illustrated in . Subsequently the application control unit integrally controls the UI control unit the editing processing unit and the print processing unit to execute the function determined in step S.

If it is determined that the acquired content includes the launching function designation information YES in step S then in step S the application control unit acquires the second command line option.

Then in step S the application control unit determines the print function to be launched which can be selected from photoprint album DVD CD label and calendar based on the acquired second command line option. For example if a parameter in the second command line is photo included in the element illustrated in the application control unit determines to launch the photoprint print function. If the parameter in the second command line is album included in the element the application control unit determines to launch the album print function. In this case the application control unit can skip the processing in step S. Therefore the application control unit can directly execute the designated function without displaying the menu screen .

Further if in step S it is determined that the application is not launched from the device management screen it can be regarded that execution of the print application is not related to the device management . In this case the application control unit skips the menu display item reduction processing see step S and advances the processing to step S in which the application control unit displays the menu screen . Accordingly in a case where the print application is not launched from the device management screen the menu screen including all display items can be constantly displayed.

Next an example print product creation operation that can be performed by the print application is described below with reference to and . illustrates an example UI display screen captioned as selection of image which is a first stage of an album creation function provided by the print application . illustrates an example UI display screen captioned as editing which is a second stage of the album creation function. The album creation function provided by the print application enables a user to create an album including at least one text body page inserted between a front cover and a back cover all pages of which are printed on pieces of paper having the same size.

If in step S in the flowchart illustrated in the album button is selected on the menu screen illustrated in a selection of image screen of the album creation function illustrated in can be displayed on the LCD of the information processing apparatus. Similar processing is performed when album is acquired as the second command line option in step S. To this end the application control unit the UI control unit and the editing processing unit cooperatively perform the processing.

The selection of image screen includes a folder display selection field in which a folder configuration of the HDD of the information processing apparatus can be displayed. Further the selection of image screen includes an image display selection field . If a specific folder e.g. a Scenery folder is selected by a user operation reduced images an image etc. of image files recorded in the selected folder can be displayed in the image display selection field .

The selection of image screen further includes a front cover image area a page image area and a back cover image area which are located at the lower part of the screen. If the user selects any one of the reduced images displayed in the image display selection field with the mouse and performs a drag and drop operation to move the selected image into the front cover image area a copy of the reduced image can be displayed in the front cover image area . Then an image file corresponding to the reduced image can be designated as a target image to be located in the front cover of an album to be created.

The page image area and the back cover image area are similar to the front cover image area and can be used when an image is designated as an image to be located on the text body page and when an image is designated as an image to be located on the back cover of the album.

If a next button is pressed the print application completes selection of target images to be located on respective pages. Then the processing of the print application proceeds to an editing stage of adjusting the layout of the images. If an end button is pressed the print application terminates the processing. In this case the print application termination processing is executed as described below.

When the processing proceeds to the editing stage the editing processing unit locates the images selected in the selection of image screen on respective paper surface areas of the front cover the text body page and the back cover. Further the application control unit the UI control unit and the editing processing unit cooperatively display an editing screen of the album creation function illustrated in on the LCD of the information processing apparatus.

The editing screen includes a front cover display field in which a reduced image of the front cover page can be displayed. The editing screen further includes a page display field and a back cover display field which are similar to the front cover display field . As illustrated in an enlarged image of a page selected in the page display field can be displayed in a page editing field . The page editing field is different from the paper surface in aspect ratio. The paper surface is longer in the vertical direction than the page editing field . Therefore a user can manipulate a scroll bar to designate a part of the paper surface to be displayed in the page editing field .

The user can edit the page layout by moving adding and deleting an intended object on the page image displayed in the page editing field . In this case images texts and graphics are main objects that can be edited. However the objects to be edited are not limited to these items. Further the editing processing performed on these objects is not different from processing performed by a general image editing application although not described below.

If a print button is pressed the application control unit transmits created album data to the print processing unit . The print processing unit prints an album having a predetermined size which corresponds to the reduced images displayed in the front cover display field the page display field and the back cover display field .

A device designated by the link execution unit of the device management which replaces the command line parameter devname when the print application is launched can be used as a print designation printer. If the above described designation is not present a system standard printer to which the default mark see is attached can be used. The application control unit can display a dialog box or a similar UI that enables a user to select a desired printer as a print designation.

If an end button is pressed the print application terminates the processing. In this case the print application termination processing is executed as described below.

Other functions i.e. photoprint DVD CD label and calendar creation functions are essentially similar to the above described album creation function although they may be different in layout editable object type editing target paper surface area size shape and number of pages. Thus descriptions of these functions are omitted.

Next an example of processing for terminating the print application is described below with reference to a flowchart illustrated in and a drawing illustrated in . is a flowchart illustrating an example of print application termination processing. illustrates an example of a message screen that the print application can display on the LCD of the information processing apparatus during processing.

If the end buttons and are pressed in respective stages of the album creation function provided by the print application then in step the application control unit starts the print application termination processing. If similar buttons are pressed on screens dedicated to other functions i.e. photoprint DVD CD label and calendar creation functions the application control unit similarly starts the print application termination processing.

First in step S the application control unit transmits information indicating the launching source of the print application which was stored in the RAM in the application launching processing see step S to the launching source determination unit . The launching source determination unit determines whether the launching source is the device management screen referring to the acquired information. If it is determined that the launching source is the device management screen YES in step S the processing proceeds to step S.

Next in step S the application control unit acquires information indicating the creation function having been executed by the print application which is the photoprint album DVD CD label or calendar creation function.

Next in step S the application control unit displays a button registration confirmation message illustrated in on the LCD of the information processing apparatus via the UI control unit .

A message text includes a function name based on the function information acquired in step S and inquires a user whether to display a button for enabling a user to directly launch a function corresponding to the function name without opening the menu screen on the device management screen of the device management . Although illustrates a message example to be displayed when the album creation is performed a similar display containing a function name can be performed using the message text when other function is performed.

Subsequently in step S the application control unit acquires a user s input via the UI control unit to determine the next processing to be performed. If the user presses a YES button YES in step S the processing of the application control unit proceeds to step S.

Then the application control unit writes into the application control information storing unit information necessary to additionally display the launch button of the function corresponding to the function information acquired in step S on the device management screen of the device management . Further at the same time if any information for displaying another function launch button is present the application control unit deletes the information.

For example if the function information acquired in step S is the album creation the application control unit records information indicating album in the application control information storing unit i.e. the registry . Then if information photoprint required to display a photoprint launch button or information relating to DVD CD label creation or calendar creation is present in the registry the application control unit deletes the remaining information. The information album and photoprint correspond to the elements and of the device management control file illustrated in respectively.

On the other hand if the user presses a NO button on the button registration confirmation message illustrated in the application control unit immediately terminates the print application processing without executing the processing in step S i.e. without updating the registry .

If in step S the launching source determination unit determines that the launching source is not the device management the application control unit skips the sequential processing in step S to step S and immediately terminates the print application processing.

Subsequently an example of an operation that can be performed when the screen of the device management is opened again after the print application is launched from the device management is described below with reference to and . illustrates an example UI display screen of the device management. illustrates an example UI display screen of the print application.

In the present exemplary embodiment it is assumed that the YES button is pressed by a user on the message screen illustrated in to terminate the print application after the album creation is completed. In this case in step S information indicating album is recorded in the application control information storing unit .

If the device management resumes from this condition the device management control file reading unit of the device management reads the device management control file from the device management control file storage unit . Further the device management control unit acquires the information recorded in the application control information storing unit . When the display unit is controlled based on the acquired information a device management screen illustrated in can be displayed.

The element included in the device management control file indicates that a button display condition is satisfied when the information indicting album is present in the application control information storing unit . In a case where the device management is opened in the above described state the condition described in the element can be satisfied. Therefore a button accompanied by a character string Create Album described in the element is displayed.

On the other hand information indicating photoprint described in the element as a display condition is not present. Therefore a button accompanied by a character string Print Photos described in the element does not appear. Further a button accompanied by a character string Launch Application A described in the element does not have any preceding element. Therefore the button can be constantly displayed as described above.

If the newly added button is pressed the link execution unit launches the print application according to the element corresponding to the button in the device management control file . Thus the print application launch processing illustrated in is executed. In this case in step S it is determined that the acquired content includes the launching function designation information.

In step S the album creation is acquired as the launching function designation information based on the second command line option album included in a command line character string of the element . Then the application control unit terminates the print application launch processing without executing the processing in step S to display the menu screen . The processing directly proceeds to the first stage of the album creation see screen .

On the other hand if the button is pressed on the device management screen of the device management the link execution unit launches the print application according to the element corresponding to the button in the device management control file . Thus the print application launch processing illustrated in is executed. In this case in step S it is determined that the acquired content does not include the launching function designation information. And in step S it is determined that the launching source is the device management screen. Thus the processing proceeds to step S.

Then the number of menu items to be displayed is reduced based on the information stored in the application control information storing unit . More specifically the information indicating album is present in the application control information storing unit . Therefore the album button corresponding to the information indicating album is deleted from the menu screen. As a result in step S a menu screen illustrated in is displayed. The menu screen does not include the album button which is present on the menu screen illustrated in .

Processing operations to be performed in response to selection of respective buttons and on the menu screen are similar to the processing operations performed in response to selection of the buttons and on the menu screen illustrated in .

As described above the button enabling a user to directly launch the function having been actually executed in the print application is additionally displayed on the device management screen of the device management . Therefore the present exemplary embodiment can reduce the number of operations required to launch the function that may be reused by the user. Further the present exemplary embodiment dynamically updates a button to be displayed to enable a user to directly launch a function when the print application is operated. Therefore processing for calling a different function is feasible when the device management screen is opened next. In other words the operability of the software group illustrated in can be improved for the user.

When an application is launched from the device management the function additionally displayed on the device management screen of the device management is deleted from the menu screen of the print application . Thus the present exemplary embodiment can delete unnecessary options to be displayed from an application UI without reducing the number of functions that can be executed by the print application . The deletion of display items on the menu screen is performed only when it is determined that the launching source is the device management YES in step S of . Accordingly the present exemplary embodiment can prevent UI processing of the print application from being uselessly executed in an environment in which the device management is present. Further the present exemplary embodiment can improve the operability for a user. In this case no adverse effect is given to functions of the print application in an environment in which the device management is not present or in a case where a launching method not using the device management is employed.

According to the above described embodiment in the initial state the application control information storing unit does not store any information relating to the display of each function button such as photoprint or album. However it may be useful to display a predetermined function button in the initial state if the function button is frequently used.

Further the button registration confirmation message is displayed to inquire a user about registration of an additional button when the application control information is updated in the print application termination processing. However to reduce the number of user operations it may be useful to cancel the inquiry and constantly update the application control information.

Further in the above described exemplary embodiment the device management displays the button corresponding to the latest function having been executed by the print application when the application control information is updated. Alternatively it may be useful to count the frequency of use of each function after the print application is installed on the information processing apparatus and display a particular button on a screen of the device management based on a comparison between recorded data to indicate a function that has been most frequently used in a specific period. Further the device management may be controlled to simultaneously add and display a plurality of function buttons.

According to the above described exemplary embodiments launching of an application from the Device Stage is recognized by the application so that useless processing of the application can be prevented. Further according to the above described exemplary embodiments if it is determined that the application is required to provide different processing the display of the Device Stage can be changed to an appropriate one. Subsequently when the application is launched next time processing for calling a different function from the Device Stage can be performed. Thus the operability can be improved for apparatus users.

Aspects of the present invention can also be realized by a computer of a system or apparatus or devices such as a CPU or MPU that reads out and executes a program recorded on a memory device to perform the functions of the above described embodiment s and by a method the steps of which are performed by a computer of a system or apparatus by for example reading out and executing a program recorded on a memory device to perform the functions of the above described embodiment s . For this purpose the program is provided to the computer for example via a network or from a recording medium of various types serving as the memory device e.g. computer readable medium . In an example a computer readable medium may have a program stored thereon that causes a computer associated with a display device to operate as an information processing apparatus as described herein. In another example a computer readable medium may have a program stored thereon that causes an information processing apparatus to perform a method as described herein.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all modifications equivalent structures and functions.

