---

title: Local survivability in a distributed contact center environment
abstract: A system and method for local survivability in a distributed contact center environment has a first processor in a first contact center node receiving a first request for interaction. The first processor transmits a first message to a second contact center node in response to the request for interaction. The first message is configured to invoke a first resource associated with the second contact center node for handling the interaction via the first resource. The first processor monitors connection with the second contact center node. The first processor receives a second request for interaction, and further determines lack of connection with the second contact center node. In response to determining lack of connection with the second contact center node, the first processor refrains from transmitting a second message to the second contact center node. According to one embodiment, the second message is for invoking a second resource associated with the second contact center node for handling the interaction via the second resource.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09588830&OS=09588830&RS=09588830
owner: GENESYS TELECOMMUNICATIONS LABORATORIES, INC.
number: 09588830
owner_city: Daly City
owner_country: US
publication_date: 20140320
---
As cloud and distributed computing models become more common place there is great potential to apply these patterns in the contact center space. A contact center utilizes different resources to accomplish various support tasks. Such resources include contact center agents with various specialties or skills computing and voice resources for handling telephony calls emails and other interactions and other information and communications technology ICT conventional in the art.

A typical contact center deployment for a large enterprise includes one or more data centers with several branch sites distributed over different geographic locations. The main contact center resources including computing resources and databases are hosted at the data center. Each branch site is coupled to the data center over a data communication network and includes local resources such as for example local media resources local PBX web servers and the like.

There are situations that cause local branches to lose communication with the data center. In those situations it is desirable for the local branches to survive locally and continue to provide contact center services without access to resources located at the data center.

In other situations the data center and or local branches may be overloaded with too many requests. In this scenario it may be desirable to obtain additional capacity from other contact center sites if those other sites have excess capacity.

According to one embodiment the present invention is directed to a system and method for local survivability in a distributed contact center environment. A first processor in a first contact center node receives a first request for interaction. The first processor transmits a first message to a second contact center node in response to the request for interaction. The first message is configured to invoke a first resource associated with the second contact center node for handling the interaction via the first resource. The first processor monitors connection with the second contact center node. The first processor receives a second request for interaction and further determines lack of connection with the second contact center node. In response to determining lack of connection with the second contact center node the first processor refrains from transmitting a second message to the second contact center node. According to one embodiment the second message is for invoking a second resource associated with the second contact center node for handling the interaction via the second resource.

According to one embodiment of the invention the first or second resource is a media port of a media server associated with the second contact center node. The interaction may be a voice call and the handling of the interaction may be playing media during the voice call.

According to one embodiment of the invention the first or second message is a request for media service.

According to one embodiment of the invention in response to determining lack of connection with the second contact center node handling the interaction via a local resource provided by the first contact center node.

According to one embodiment of the invention the first processor transmits to a peer node coupled to the first node in a peer to peer network a third message indicative of capacity of the local resource of the first contact center node. The third message may be for requesting additional capacity and in response to the third message the peer node may provide the requested additional capacity. The providing the additional capacity to the first contact center node may include handling a second interaction received by the first processor by the peer node via a local resource at the peer node.

According to one embodiment of the invention in response to determining lack of connection with the second contact center node a contact center agent associated with the second contact center node is prompted to re log into the first contact center node.

As a person of skill in the art should appreciate embodiments of the present invention allow a contact center site to survive locally and provide contact center services without access to resources located at a central site. Contact center nodes are also coupled to one another in a peer to peer network which allow overloaded nodes to receive capacity from other nodes that have spare capacity. In this manner effective use of resources may be made across contact center sites and deployments. The sharing of resources with an overloaded contact center also helps the overloaded contact center maintain and or improve its service levels. The sharing of resources may be within the same distributed contact center across distinct contact centers and or the like.

These and other features aspects and advantages of the present invention will be more fully understood when considered with respect to the following detailed description appended claims and accompanying drawings. Of course the actual scope of the invention is defined by the appended claims.

In general terms embodiments of the present invention are directed to a system and method for local survivability and resource sharing in a distributed contact center environment. In this regard a contact center node is coupled to another contact center node over a distributed network architecture such as for example a peer to peer P2P network. A contact center node may be described as a computer node having hardware software and network capabilities to provide contact center services for end customers as well as communicate with other computer nodes over the P2P network. According to one embodiment each contact center node is hosted at a contact center site that may function autonomously from other contact center sites. The contact center site may refer to a physical geographic location including the various components of the contact center node as well as other contact center equipment or a virtual location where the physical contact center equipment may be distributed over various physical locations but that work together to form the virtual contact center site. According to this embodiment each contact center site has or is associated with contact center resources such as agents media resources computing resources and the like that may be used for handling requests arriving at the contact center site. A typical request may be a request for interaction by a contact center customer. In the various embodiments the term interaction is used generally to refer to any real time and non real time interaction that uses any communication channel including without limitation telephony calls PSTN VoIP mobile calls emails vmails voice mail through email web collaboration video chat screen sharing text messages social media messages web real time communication e.g. WebRTC calls and the like.

According to one embodiment one or more of the contact center sites may be coupled to a central site such as for example a central data center hosting one or more of the contact center resources. When present the central site may work in conjunction with the associated contact center sites to process an interaction for the contact center. According to one embodiment contact center services may still be provided despite loss of connection to the central site. The loss of connection may be due to failure in a communication link to the central site and or failure of one or more nodes hosted by the central site. Other reasons might be power outage human error e.g. misconfiguration and the like.

According to one embodiment the various contact center nodes share resource capacity information with each other so that overloaded contact center nodes may utilize resources of contact center nodes with spare capacity. In some instances the nodes sharing the resources may be associated with different entities such as for example different contact centers or different deployments e.g. a premise deployment sharing resources with a cloud deployment . In this manner effective use of resources may be made amongst the various contact center nodes.

According to one exemplary embodiment each CC site includes resources e.g. personnel computers telecommunication equipment and the like to enable delivery of services via telephone or other communication mechanisms. Such services may vary depending on the type of contact center and may include customer service e.g. help desk emergency response order taking etc. telemarketing and the like. The CC sites may provide CC services for a single enterprise or for different enterprises. In either case according to one embodiment each CC site functions autonomously from the other CC sites without a central data center. In this regard each CC site maintains its own group of agents collectively referenced as and maintains other resources for handling interactions with customers of the enterprise for which contact center services are being provided. Although the group of agents maintained by a CC site depends on the preference of the agents the agents may also in some situations move from one site to another depending on for example failure of a branch or other reasons such as for example depending on tasks scheduled for the agent.

According to one embodiment each CC site hosts a CC node collectively referenced as configured with one or more CC resources. The CC node may be a computing device including a processor and memory such as for example a computing device described with respect to . The CC node may also be configured to hardware and software for providing media connectivity. According to one embodiment the CC nodes are coupled to each other over the wide area network utilizing a peer to peer P2P network architecture. In this regard the interconnected nodes also referred to as peer nodes share data and resources with each other without such data and resources passing through a centralized server. According to one embodiment a node consuming resources from another node may at a different time be a node providing resources to that other node. According to another embodiment a node consuming resources to another node does not share its own resources with that other node.

Other distributed network architectures may be used instead of the P2P network architecture. For example an architecture utilizing a client server model may be used instead of the P2P architecture where the clients nodes are connected to the central server central controller and the nodes are not aware of each other.

According to one embodiment each CC node internally measures its resource capacity and identifies a state of such capacity. One of three capacity states may be identified for a particular resource 1 nominal 2 spare and 3 overload.

When consumption of the particular resource is above the upper threshold the state of the resource capacity transitions from the nominal to the overload state . At this point the CC node may request additional capacity from other CC nodes in the network.

Similarly as a CC node becomes less active due to fewer requests to the node consumption of the particular resource may fall below the lower threshold . In this case the capacity state of the resource transitions from the nominal to the spare state . At this point the CC node may publish its additional capacity to allow CC nodes that have identified themselves to be in overload state to re assign requests to the node with spare capacity.

According to one embodiment the CC node also hosts a mass storage device which may take form of a hard disk or disk array as is conventional in the art. According to one exemplary embodiment of the invention such as when the CC node is hosted by a central data center the mass storage device stores one or more databases relating to agent data e.g. agent profiles schedules etc. customer data e.g. customer profiles interaction data e.g. details of each interaction with a customer including reason for the interaction disposition data time on hold handle time etc. and or the like. According to one embodiment some of the data e.g. customer profile data may be provided by a third party database such as for example a third party customer relations management CRM database. According to the latter embodiment the central data center may be deemed to be another node site but with functionality of a central data center. The third party database may be provided for example by an external service. The third party database may also be incorporated into the contact center core functions as an enhancement to those core functions.

According to one embodiment customers potential customers or other end users collectively referred to as customers desiring to receive services from the contact center may initiate inbound contact to the contact center via their end user devices not shown . Each of the end user devices may be a communication device conventional in the art such as for example a telephone wireless phone smart phone personal computer electronic tablet and or the like. Users operating the end user devices may initiate manage and respond to telephone calls emails chats text messaging web browsing sessions and other multi media interactions.

Inbound and outbound interactions from and to the end users devices may traverse a telephone cellular and or data communication network depending on the type of device that is being used and the type of media channel that is invoked. For example the communications network may include a private or public switched telephone network PSTN the wide area network and or the like. The communications network may also include a wireless carrier network including a code division multiple access CDMA network global system for mobile communications GSM network and or any 3G or 4G network conventional in the art.

According to one exemplary embodiment the contact center includes a media gateway coupled to the PSTN network for receiving and transmitting telephony calls between end users and the contact center. The media gateway may take the form of an automatic call distributor a private branch exchange PBX an IP based software switch and or any other switch or gateway configured to receive Internet sourced calls and or telephone network sourced calls. According to one exemplary embodiment of the invention the media gateway is coupled to a SIP Session Initiation Protocol server which may for example serve as an adapter or interface between the media gateway and the remainder of the routing monitoring and other call handling components of the contact center. Although SIP is used as an example protocol to which the server adheres a person of skill in the art will understand that any other protocol other than SIP may be used for processing telephony calls between customers and the contact center. According to one embodiment the SIP server in various nodes are coupled to one another over data links to allow for example call metadata to be passed from one SIP server to another in the event a call arriving at one node is to be passed to another node.

According to one embodiment interactions other than telephony interactions are received by an enterprise server and forwarded to the interaction server for further handling. The other types of interactions may include for example email vmail voice mail through email chat video text messaging web social media co browsing web real time communication WebRTC and the like. In this regard the enterprise server may take the form of an email server web server and or the like. According to one embodiment video and WebRCTC calls are handled by the SIP server instead of the interaction server . Also according to one embodiment a central interaction server handles the various non telephony interactions for the contact center. Multiple interactions servers may also be deployed in other embodiments. The multiple interaction servers may allow handling of various non telephony interactions concurrently. The multiple interactions servers may also serve as backup servers that are passive during normal operation but become active when the central interaction server is down. The same may apply for other components of the CC node such as for example the routing server .

The routing server may be configured to work with the SIP servers and or interaction server for routing interactions to a contact center target based on a routing strategy associated with a particular route point e.g. a called number . Depending on the type of routing strategy configured for the route point different options voice treatments and routing is performed for the interaction.

The media server may be configured to identify parameters e.g. available media ports on the media server for establishing voice conversations between a customer and a contact center target. The media server is also configured to deliver media to customers and or agents. For example the media server may be invoked to provide initial greeting messages to a calling customer and interactive voice response IVR treatment to obtain basic customer information e.g. identification information reason for the call etc. . If the customer or agent is placed on hold the media server may be invoked to play music for the holding customer or agent. In another example if a conversation between the customer and agent is to be recorded the call may traverse the media server so that the customer and agent may engage in a three way conversation with the media server and the media server may record the conversation and store the recorded conversation in a database.

The statistics server may be configured to gather store analyze and or deliver data regarding various resources of the contact center. Such data may include data regarding agent availability average handling time average hold time total talk time after work time average speed of answer service level statistics abandonment rate patience rate and the like. The delivery of statistics data may be to subscribing clients such as for example delivery of agent status to the routing server and real time statistics to reporting applications.

The capacity server may be configured to monitor the capacity of various resources of the CC site and provide the capacity information to for example one or more other nodes of the P2P network. Depending on the capacity state of the various resources the capacity server may also be configured to request for additional capacity if one or more resources are overloaded or provide additional capacity if there is spare capacity. The capacity server may be configured to keep track of the resources being shared with others so that it may charge for usage of the resources. In this regard conventional billing and or accounting functionality may be included in the capacity server. Although the capacity server is described as a functionally separate unit a person of skill in the art should recognize that functions of the capacity server may be performed by other servers such as for example the routing server or another resource manager not shown that may be configured to control occupancy of for example the media servers.

The CC node may include other servers as will be conventional in the art. For example the CC node may include a configuration server for configuring the various servers and other aspects of contact center functionality as will be appreciated by a person of skill in the art. The CC node may also include one or more reporting servers configured to provide real time reporting based on statistics data provided by the statistics server .

According to one embodiment a telephony call is received by the media gateway and the SIP server is invoked for further handling. The SIP server invokes the routing server e.g. by sending an event message for retrieving a routing strategy for routing the call to an appropriate target. If the call is to be routed to a contact center agent the routing server identifies an appropriate agent for routing the call. The selection of an appropriate agent may be based for example on a routing strategy employed by the routing server and further based on information about agent availability skills and other routing parameters provided for example by the statistics server .

The routing server signals the SIP server with information on the agent to which the call is to be routed. In this regard the SIP server transmits one or more SIP messages to establish a connection between the customer end device and an agent device collectively referenced as . Collected information in the mass storage device about the caller and or the caller s historical information may also be provided to the agent device for aiding the agent in better servicing the call. In this regard each agent device may include a telephone adapted for regular telephone calls VoIP calls and the like. The agent device may also include a computer for communicating with one or more servers of the contact center and performing data processing associated with contact center operations and for interfacing with customers via voice and other multimedia communication mechanisms.

According to one embodiment if there are no available agents to handle the call the media server may be invoked for playing different types of media e.g. music while the call is put on hold. The media server may also be configured to provide messages indicative of how long the customer has to wait before an agent becomes available to handle the call. According to one embodiment agents at other CC sites may be invoked to handle the call if there are no available agents at the current CC site.

According to one exemplary embodiment of the invention the routing server is enhanced with functionality for managing back office offline activities that are assigned to the agents. Such activities may include for example responding to emails responding to letters attending training seminars or any other activity that does not entail real time communication with a customer. Once assigned to an agent an activity may be pushed to the agent or may appear in the agent s workbin collectively referenced as as a task to be completed by the agent. The agent s workbin may be implemented via any data structure conventional in the art such as for example a linked list array and or the like. The workbin may be maintained for example in buffer memory of each agent device .

During normal operation requests e.g. telephone calls emails and other interactions from different external sources e.g. customers are received in acts by a corresponding node . In a typical multi site contact center environment a customer does not generally pick a particular site to which the call is to be initially sent. Instead a central logic such as for example an SCP service control point determines the site to which to forward the call.

In act CC node A detects spare capacity for one or more resources and in acts and CC node A sends a spare capacity message to CC nodes B and C . The spare capacity message may identify for example the type of spare capacity that CC node A can provide. For example if node A has spare agents the specific types of skills associated with the spare agents may be provided along with the spare capacity message.

In act CC node B receives another contact center request and in act CC node B detects an overloaded state for the resource needed to handle the new request. Given that CC node A has signaled that it has spare capacity CC node B transmits a request for capacity in act . The request for capacity may identify for example the type of capacity that is requested. For example if the requested capacity is for an agent with specific types of skills the requested skills are identified in the request message. Assuming that CC node A still has spare capacity the node provides an OK signal in act and in act CC node B reroutes the CC request to CC node A for handling. The rerouting of a voice call for example may invoke the SIP servers in both nodes for exchanging SIP messages with one another. According to one embodiment such borrowing of server type spare may call for CC node A to have connectivity to resources of CC node B. For example in one embodiment CC node A executes the routing strategy of CC node B and or calculates statistics for CC node B.

According to one embodiment the capacity server at CC node A and or CC node B may be configured with logic to keep track of the amount of resources being borrowed by CC node B from CC node A for then billing CC node B for use of such resources.

As an overloaded CC node redistributes requests to other nodes it will eventually settle back to a nominal capacity state at which point it releases the borrowed resources. According to one embodiment the borrowing and or release of resources may be contract based. For example a CC node may borrow resources for a certain time period and pay for such resources regardless of actual use of the resources and when the time period expires the borrowed resources are automatically released.

According to one embodiment a rerouting or transfer of a particular request utilizes the standard protocols associated with it. For example for IVR and voice call interactions SIP transfer mechanisms may be employed to transfer the interaction from one CC node to another. For example the transfer may be effectuated via REFER or re INVITE SIP messages. In addition each CC node may include properly configured edge devices to enable the successful transfer of voice traffic between contact center sites. Such an edge device may be for example a conventional session border controller. Other interactions such as email and social engagements may utilize protocols such as for example HTTP REST IMAP POP3 SMTP XMPP or any other protocol conventional in the art to send requests associated with such interactions between the nodes.

According to one embodiment the transfer or rerouting of requests from one CC node to another includes transferring data related to the interaction. Such data may be for example data on the customer and information on the customer s past interactions which may be maintained in the mass storage device hosted by the a particular CC node. The transfer of data may entail using JSON JavaScript Object Notation with an HTTP request. In one embodiment data may be shared between the nodes via database replication. According to one embodiment Cassandra data nodes are used to store and share data. According to one embodiment proprietary protocols such as for example Genesys ISCC Inter Site Call Contro may also be used to transfer data directly between SIP servers.

In act CC node B detects nominal capacity for the overloaded CC resource and in act CC node B transmits a message to CC node A to release the resource used by CC node A in handling the rerouted requests from CC node B.

In act CC node B receives a new CC request. Assuming that CC node B is still functioning in its nominal capacity with respect to the resource to be used to handle the new request the CC node B handles the request using the resource in its nominal capacity in act .

Referring to the scenario of CC node A providing its spare capacity to handle requests forwarded by overloaded CC node B CC node A continues to receive its own CC requests in addition to requests forwarded by CC node B. According to one embodiment CC node reclaims its resources if its own requirements consume the spare capacity it has been sharing. According to one embodiment the reclaiming may require approval by the current CC node using the resource.

In acts and overloaded CC node B receives a CC request and reroutes the request to CC node A with spare capacity.

In act CC node A detects that it has transitioned from a spare capacity state to a nominal capacity state and in act transmits a message to CC node B to reclaim the shared capacity. According to one embodiment CC node A may transition from spare capacity state to nominal capacity state if consumption of the resource being monitored is above the lower threshold .

CC node B transmits an acknowledgment back to CC node A in act and refrains from transmitting new interactions requests to CC node A. If CC node B is still functioning in an overloaded state CC node B may try to seek other peer nodes with spare capacity to which the new requests may be rerouted. According to one embodiment if CC node A is under contract to continue providing it with its resources CC node A may try to seek other peer nodes with spare capacity if its capacity state transitions from nominal to overload. This may be done by sending messages similar to messages discussed with respect to but with one or more node nodes that have indicated they have spare capacity. If no other such nodes are available CC node B or node A may handle the new requests according to one of various standard mechanisms including for example putting the requests on hold until capacity becomes available rerouting requests to secondary resources within CC node B that are not functioning in an overload state and or the like. In the latter example if a particular resource e.g. agent with a particular skill level is identified as being the preferable resource in handling an external request and the preferred resource is in an overloaded state CC node B may be configured to expand the resource pool to include agents with lower skill levels e g skill level 3 until the particular resource transitions back to its nominal capacity.

In act CC node A reclaiming its spare capacity completes processing current requests from CC node B but refuses new ones.

As networks grow publishing capacity messages and other events to all nodes may be non optimal. According to one embodiment instead of all nodes publishing events to all other others in the P2P network one or more nodes are designated as a master node. In addition to functioning as a normal CC node the master nodes may have the additional responsibility of distributing spare and overload capacity messages to the other participating nodes in the P2P network. Depending on the size of the network multiple master nodes may be designated. In this manner no single node may be overloaded with message distribution tasks.

According to one embodiment master nodes may be configured with additional intelligence for the distribution of messages. The additional intelligence may include for example forecasting logic for forecasting consumption patterns based on historical events received from various nodes. For example a node that is frequently changing from the nominal to spare capacity states may not be an ideal node to which to reassign requests. Also before providing a spare media resource capacity to a peer node the master node may be configured to calculate the additional network bandwidth consumption between the nodes and potential for voice quality degradation. The master node may also have intelligence to select from various nodes with spare capacity based on other attributes of the nodes such as for example the geographic location of the nodes in relation to the geographic location of the node with the overload capacity. For example a node with spare capacity that is local to the node with the overload capacity may be preferred to another node with spare capacity that is in a more distant geographic location. In yet another example in the event of various nodes with overload capacities and a limited number of nodes with spare capacity an overloaded node that is related to the node with the spare capacity e.g. both nodes are part of the same enterprise joined to the same data center etc. may be serviced before an overloaded node with no particular relation to the node with the spare capacity e.g. a node associated with a different enterprise .

The master node forwards the request for additional capacity via message to a node with spare capacity such as for example CC node A . According to one embodiment the message to the node with spare capacity includes identification of the node that is requesting the spare capacity such as for example CC node B. CC node A then communicates directly or indirectly via the master node with CC node B to transmit a message indicating that it will provide the additional capacity to CC node B. In response to the message CC node B reroutes requests to CC node A via message s as discussed above with respect to .

According to one embodiment any CC node having sufficient CPU memory and network bandwidth may be a candidate to become a master node. In one embodiment the selection of the master node is random or semi random and may or may not take into account the CPU memory and network bandwidth considerations. Master nodes may also be designated based on other factors such as for example geographic considerations. For example a CC node in the middle of the U.S. may be designated as the master node to handle the message distribution task for peer nodes in the U.S. A CC node in the middle of Europe may be designated as another master node for handling message distribution tasks for peer nodes in Europe. Master nodes may be assigned and or reassigned as the network of peer nodes grow.

According to one embodiment when a CC node joins the P2P network configuration settings of the CC node identify the IP address of the master node with which it should communicate. In another embodiment the CC node joining the P2P network may first connect to a registration server not shown for receiving the IP address of the master node.

According to one embodiment capacity monitoring and messaging responsibilities are handled by the capacity server included in the CC node . If the CC node is also a master node the capacity server may be configured with additional logic for identifying nodes to which capacity requests are to be forwarded based on for example forecast results and load balancing consideration.

According to one embodiment the capacity server is configured to monitor a set of resources that may be available for sharing with other nodes. In one example the resources that are monitored and shared include contact center workers e.g. agents and media resources e.g. for IVR interactions . Of course other resources of the CC node may also be monitored and shared as will be appreciated by a person of skill in the art such as for example computing power for automated responses e.g. automatically responding to inbound emails reporting resources e.g. reporting server and the like.

The capacity server may be configured to monitor resources on any level of granularity as determined for example based on the configuration settings of the CC node. For example the capacity server may be programmed to monitor agent resources based on agent skill sets e.g. language product specialization business area geographic location and the like. Resource information that may be relatively static such as information relating to agents may be shared with the CC nodes or at least the master nodes using caching mechanisms conventional in the art. Also in a multi tenancy environment where resources on for example a cloud environment are shared by multiple contact centers the monitoring of resources may be on a tenant by tenant basis.

In regards to media resources that may be shared with other CC nodes according to one embodiment such media resources are tied to the media server . The media server may be invoked to handle a request that utilizes the IVR. According to one embodiment the audio prompts for the IVR are provided by the media server . The media server may also be invoked for other capabilities such as for example managing conferencing calls providing call recording playing music on hold and the like.

Media ports of the media server are consumed when providing media services. In order to determine the capacity state of the media ports and hence the capacity of the media server the capacity server may be configured to monitor for example an incoming rate of requests in embodiments where the requests are first routed to the IVR. An average time in the IVR may also be calculated. According to one embodiment if the monitored incoming rate of requests and or average time in the IVR exceeds a forecast incoming rate and or time by a particular amount the capacity server may be configured to conclude that media resources are in an overload state. On the other hand if the monitored incoming rate of requests and or average time in the IVR is below a forecast incoming rate and or time by a particular amount the capacity server may conclude that the media resources are in a spare state. If the monitored incoming rate of requests and or average time in the IVR is equal to a forecast incoming rate and or time within particular lower and upper boundaries the media resources may be deemed to be in a nominal state.

CPU power is also consumed by the media server in providing media services. According to one embodiment a node may have multiple CPUs each CPU dedicated to one or more services. For example the media server may have its own dedicated CPU. Consumption of the CPU power may be monitored and compared against an expected amount of CPU consumption for determining whether CPU capacity is nominal spare or overloaded. In the event that there is spare CPU power the excess may be shared with other nodes that have indicated overloaded usage of their own CPU power for the same type of service.

According to one embodiment CPU power may also be consumed due to performing automated processing in response to incoming requests such as for example automatically transmitting response emails in response to incoming emails. In the event that one node has spare CPU capacity such spare CPU capacity may be made available for use by a node with overloaded CPU usage. For example requests that require automated processing may be automatically forwarded to a node with spare CPU capacity for processing by that node. In another embodiment the node with overload CPU capacity may instantiate one of its servers for carrying out the automated processing on the node with spare CPU capacity.

With respect to agents the capacity server may be configured to monitor a number of agents that are logged in and their usage. Usage may be based on the number of incoming requests traffic load including required service time and or other Erlang measures and the number of agents that are used or to be used to service the requests. For example the contact center may determine that based on a forecast of 10 calls coming in during a particular forecast period 10 agents will be used to handle the calls and thus staff the contact center with 10 agents. As long as the contact center experiences a call volume in the vicinity of 10 for the forecast time period e.g. between 7 and 10 calls the capacity server may determine that the usage of agent resources is nominal. However if the call volume falls below a particular number during the forecast period such as for example below 7 the capacity server may determine that there is excess agent capacity. If the call volume increases over a particular number during the forecast period such as for example above 13 the capacity server may determine that there is overloaded agent capacity. According to this example if the actual call volume is 5 for the forecast time period the capacity server may determine that 2 agents are available for sharing. In another embodiment capacity server may determine that all 5 agents who are not busy handling calls are available for sharing.

The capacity server may be configured to consider other factors that impact usage of agents such as for example to whom the requests get routed based on routing strategies what skills are required for incoming requests compared to the skills of the agents available and the percentage of time in which agents are busy with calls and the like. For example if the current call volume of calls requiring skill set X is five and there are currently five agents who are sitting idle not handling calls the capacity server may still determine that the node is in an overload capacity for agents with skill set X if none of the five agents have the skill set X to handle the calls. The same may apply for calls requiring agents in a particular geographic location relative to the incoming call. As a person of skill will appreciate the finer granularity of monitoring agent resources e.g. factoring in skills the better the sharing of appropriate agent resources.

According to one embodiment the capacity server may be configured with one or more forecasting models for forecasting different contact center metrics. Forecasting may also be done by other servers or systems such as for example a workforce management system. According to one embodiment forecasting models may also be used for forecasting expected interaction volume agent occupancy rate abandonment rate average hold time and or other contact center metrics as will be understood by a person of skill in the art. The forecast information may be used to determine capacity states of one or more contact center resources and or for foreseeing when capacity of a particular resource may transition from one capacity state to another. For example workforce management tools may provide trend information predicting potential increases in requests e.g. increased requests due to the holiday season . Scheduling information may also be included in the forecast. For example knowing that additional agents of certain skills are scheduled to start at the beginning of the next shift may also influence the capacity state.

As person of skill in the art will appreciate the forecasting models may be based on historical trends statistical analyses queue system theory and the like and may use well known algorithms such as for example Erlang A B or C formulas.

As an example forecasts may include making predictions relating to interaction volume overhead and staffing for a particular forecast period. Forecasts may also be made in regards to usage of particular resources based on for example expected interaction volume. For example occupancy of agents and or media resources may be forecast based on predicted traffic to the contact center.

Forecasts may be based on parameters such as particular time periods of the day certain days of the week events holidays and the like. An event such as a sales promotion or marketing campaign for example may cause a predictable peak in interaction volume. Other events may cause shrinkage of available resources. For example the forecast model may forecast a certain number of agents calling in sick on the day of the Super Bowl.

In a specific example if 1000 calls are anticipated between 9 00 am and 9 15 am on Apr. 18 2013 the predicted interaction volume for this period is 1000. The predicted staffing that is calculated to be needed to handle the 1000 calls may be for example 100 agents. However if 10 of agents are predicted to not be available to handle the calls the forecast staffing need may be 111 agents instead of 100. The prediction of 10 of the agents not being available may be due to agents taking vacations calling in sick or being engaged in other exceptions which may not be considered to be a work activity such as for example training meetings breaks meals and other non working states resulting in shrinkage in the actual number of agents who are available to do the work.

In another example forecasting models may indicate that inbound requests increase or decrease at particular time periods of the day certain days of the week during holidays in response to specific events and the like. For example inbound requests may double on Mondays during 11 00 am and 2 00 pm. Such information may be used for example to decide whether spare capacity should be shared with another node or not. For example although a CC node may operate in spare capacity prior to 11 00 am the CC node may not make such capacity available to other CC nodes after 10 30 am in anticipation of increased requests at 11 00 am.

Setting up a network of multiple site contact centers is typically complex and time consuming and may require that all sites be integrated together in a fashion. To simplify the setup and configuration of the sites or nodes a federation model may be used where the P2P network is deemed to represent a federation and the CC nodes are deemed to be federation members.

According to one embodiment a registrar node is configured to handle the discovery and authentication of each peer node joining the network. Any of the CC nodes may be designated as the registrar node. For example the registrar node may be an additional process running on a designated CC node the master node or a separate node. According to one embodiment the registrar node may be similar to a SIP Registrar but may also include additional capabilities not provided by a SIP Registrar.

In act CC node A desiring to join the P2P network transmits a registration request for registering with the registrar node . According to one embodiment the registrar node is accessible to the various CC nodes via the HTTP protocol. According to one embodiment the address of the registrar node is configured into each node such as for example in the configuration settings of each node. The address of the registrar node may also be obtained based on domain name system DNS discovery capability.

In act the registrar node initially rejects the request due to a lack of authorization and requests authentication from CC node A

In act CC node A resends the registration request with proper authentication data and the registrar node proceeds to authenticate the CC node A based on the authentication data. The authentication may be via one of various typical authorization mechanisms conventional in the art including for example credentials and certificate based authentication. OAuth protocols conventional in the art may also be employed for the authentication.

Other nodes already registered within the federation will be notified of the new peer node. For example a message may be transmitted to CC node B in action with information on the new peer node A.

In act the registrar node accepts the new node and sends to the node a map of the other nodes in the federation. According to one embodiment the map includes a list of the registered nodes in the federation along with an IP address of each peer node. According to one embodiment once authenticated node A is a trusted node and may communicate directly with the other peer nodes in the map without being re authenticated. In this regard certificates may be issued to the trusted nodes to be used when communication with the peer nodes. The certificates may be renewed periodically meaning that the trusted nodes may be re authenticated periodically.

According to one embodiment there are instances when one peer node may not wish to accept a new node into the federation. This may happen for example in a cross enterprise use case.

In act CC node X desiring to join the P2P network transmits a registration request. In act CC node X transmits its authentication data and in act CC node X is authenticated by the registrar

In act the registrar node informs CC node A of the new peer node X and CC node A accepts the new peer in act via an OK message.

In act the registrar node also informs CC node B of the new peer node X but node B decides that it will not accept the new peer upon consulting a list of trustworthy nodes in act . There may be various reasons why CC node B will not accept the new node. For example CC node X may be associated with a different enterprise or may be located in a different geographic location.

According to one embodiment the registrar node accepts the new peer in the federation since at least one node in the federation has accepted the new peer. However if all pre registered nodes block the new peer the registrar node rejects the registration request.

The registrar node then keeps track of which nodes have agreed to participate in the federation and sends an appropriate map to CC node X in act . For example CC node X receives a map listing CC nodes A and X but not CC node B. On the other hand CC node B receives a map listing CC nodes A and B but not CC node X

The process starts and in act the capacity server monitors for a criterion for determining whether it should check the current capacity. The criterion may be for example a set time elapse of time period a user invoked command and or the like.

Once a determination is made that the capacity check should be made the capacity server calculates or detects in act the current consumption or utilization of the resource. In this regard if agent resources are to be monitored the capacity server communicates with for example the statistics server for identifying occupancy of agents. The occupancy information may be as simple as indicating that the agent is busy doing something or as complicated as indicating the particular type of activity that the agent is currently involved in e.g. inbound voice outbound campaign email chat back office work training etc. the communications medium utilized for the activity e.g. voice text email etc. how long the agent has been involved in the activity and the like. The capacity server may also measure other current contact center metrics such as for example a current interaction volume.

In another example if the resource to be monitored are media ports on the media server the capacity server may determine the number of media ports that are currently in use and according to one embodiment the amount of time in which each port has been in use the current interaction volume and the like. In yet another example if the resource to be monitored is CPU usage the capacity server may determine the level of CPU consumption as well as identification of a number of requests that each server is processing at the given time.

In act the capacity server determines whether the capacity state of the resource is nominal. In this regard the capacity server compares forecast contact center metric and or scheduled resources against current metrics obtained in act . For example if the current interaction volume is between lower and upper thresholds of the forecast interaction volume and or the current agency occupancy rate is between lower and upper thresholds of the forecast agent occupancy rate the contact center may be deemed to be in a nominal capacity state with respect to agent resources. In a more concrete example if it is forecast that between 40 and 44 calls are expected at a particular time interval that need to be routed to agents and only 42 calls are detected the agent resources may be deemed to have nominal capacity. In addition or alternatively from measuring interaction volume if it is forecast that the agent occupancy rate will be between 89 and 97 and the current occupancy rate is 95 agent resource may be deemed to have nominal capacity.

For media server resources if it is predicted that 80 90 of the media ports will be used during a particular time interval and the current consumption of the media ports is 85 the media server may be deemed to be functioning at a nominal capacity.

If the resource is at a nominal capacity the capacity server sets in act the capacity state of the resource as being in a nominal capacity state. Such state data may be maintained for example in memory of the CC node along with an identifier of the resource.

In act the capacity server transmits a nominal capacity message to one or more other peer nodes over the wide area network .

Referring again to act if the capacity server determines that the capacity state of the resource is not nominal it determines in act whether the capacity state of the resource is spare capacity. According to one embodiment if the current consumption as calculated in act is below the lower threshold the capacity state of the resource may be deemed to be in a spare capacity state. In this case the capacity server sets in act the capacity state of the resource as being in a spare capacity state.

Even if the capacity server has determined that there is spare capacity there may be reasons why it would not be desirable to share the spare capacity with others at this time interval. For example forecasting models may indicate that although there is spare capacity at the current time interval no such spare capacity is forecast to be available in a following time interval. This may occur for example if a certain number of agents available during the current interval are scheduled to be on break during a next interval or if an increased number of interactions are forecast during the next interval. Accordingly in act the capacity server determines whether the spare resource is to be shared.

If the answer is YES the capacity server transmits in act a spare capacity message to one or more other peer nodes over the wide area network . According to one embodiment resources that are reported as spare do not include capacity that has been borrowed from another node under a contract. In other embodiments resources that are reported as spare may include capacity borrowed under a contract. However because reclaiming borrowed spare capacity may not be easy once provided to another node for use the node providing the extra capacity may need to seek for spare resources somewhere else.

Referring again to act if the capacity server determines that the capacity state of the resource is not spare capacity the resource is in an overload capacity state where the current consumption of the resource is above the upper threshold . Accordingly in act the capacity server proceeds to set the capacity state as being in an overload state.

In act the capacity server transmits an overload capacity message to one or more peer nodes over the wide area network . The transmitting of the overload capacity message may also be conditional. For example if the borrowing node is to pay for borrowing resources but it has no budget for paying for such resources it may decide not to send the overload capacity message until it has the funds to pay.

In addition to the deployment model discussed above where each CC site acts autonomously from other CC sties there are several other deployment models that may benefit from the P2P mechanisms discussed above. Such other deployment models include an enterprise deployment cross enterprise deployment and cloud deployment.

Each branch CC site is coupled to the data center over the wide area data communication network and includes in addition to local agent resources other local resources such as for example local media resources web servers and the like. Such other local resources are provided via branch CC nodes 

According to one embodiment centralized services are provided by the CC central nodes of the data center . For example IVR services may be provided centrally for all interactions and subsequently routed to available agents. According to one embodiment the voice network may be deployed so that voice traffic always arrives at the data center . According to another embodiment routing strategies may be setup on the various CC nodes to push the interactions to the data center for central processing e.g. via the IVR .

It may be desirable to force centralized processing at the data center in order to implement the P2P mechanism. For example centralized IVR services may be provided at the data center until the data center s IVR resource is in an overload capacity. In this case local IVR resources provided by the branch CC nodes may be invoked to share its local IVR resource with the data center . According to one embodiment the local IVR resource shared with the data center is configured to provide substantially the same IVR experience to the customer as when the customer interacts with the IVR at the data center . For example the same or similar audio prompts are retrieved and played by the local media server in providing the local IVR service.

According to one embodiment the enterprise deployment of provides for local survivability of the branch CC sites even if communication is lost between the branch CC nodes and the data center . When the branch CC sites function in the local survivability mode contact center services are still capable of being provided despite the loss of connection to the data center . There may be different reasons for local survivability 1 there is a loss of connection between the branch CC sites and the data center but both the branch sites and the data center are operational 2 service loss due to the data center being out of service and 3 there is partial connectivity or service loss e.g. only for voice but not for email .

According to one embodiment when in local survivability mode interactions from customers may still be accepted and routed to agents in the contact center. Text messages emails and chat sessions may still be possible with agents of the contact center. In some embodiments the quality or type of contact center service may be reduced during local survivability. For example agents may not have access to interaction histories maintained at the data center when connection to the data center is lost or the data center is out of service.

During normal operation requests from different external sources including requests for interaction are received by CC node F in act and forwarded to the data center for processing in act . For example the request may be a request for telephony interaction arriving at the media gateway . In response to receipt of the request the SIP server may be invoked to determine that the request is to be forwarded to an IP address associated with the data center for receiving centralized services from the data center. Although for simplification purposes the request is described as being forwarded a person of skill in the art should recognize that the forwarding of the request may entail generating a new request based on the original request.

According to one embodiment the IP address to which the request is forwarded may be for example the IP address of the SIP server and or media server hosted by the CC central node . The identification of the IP address may be for example by the routing server in response to executing a routing strategy to route the request. For example the routing strategy may indicate that all telephony interactions are to be first handled by providing IVR treatment. According to one embodiment if the connection to the data center is functioning normally the routing server may be configured to identify the IP address of the SIP server and or media server hosted by the CC central node. The routing server may also identify the CC central node by name and a mapping routine may be invoked to identify the actual IP address.

In act CC node F forwards the request to the data center . This may include exchanging SIP messages between CC node F and the CC central node . The SIP messages may identify for example the type of service e.g. specific media service requested via the request. A voice connection e.g. utilizing RTP protocol may further be established between a sender of the external request and a resource at the data center. For example if the service to be provided by the data center is IVR treatment a voice connection is established between an end device of the sender and a port on the media server hosted by the CC central node . Of course other services may be provided by the data center such as for example playing music call conferencing call recording and the like. Non voice services that may be provided by the data center may include automated responses to email chat text and the like. The data center may also receive requests regarding configuration updates report generation and the like.

According to one embodiment data maintained centrally in the mass storage device that is hosted by the data center is retrieved in providing the centralized services. Such data may include for example customer data including data on the customer s past interactions.

CC node F continually checks if the data center is reachable in acts and as does CC node G in act . Any one of various well known mechanisms may be used for this determination as will be understood by a person of skill in the art such as for example Ping SIP messages HTTP Inter Server Connection Control and the like. As a person of skill in the art should appreciate the checking of viability of the data center may be decoupled from the receiving and forwarding of requests. For example the nodes may periodically ping the data center for checking whether communication with the data center is possible. The frequency of the pings may be intelligently adjusted as needed.

If the connection check times out in act and the data center does not return a response within a set time period CC node F transitions to a local survivability mode in act and processes future requests locally. The lack of response from the data center may be due to the data center being down either fully or partially e.g. for one media type and not for another . Alternatively the connection to CC node F may be down either fully or partially e.g. for one media type and not for another . If the data center is down CC node G also transitions to a local survivability mode. If it is just the connection to CC node F that is down CC node G does not transition to the local survivability mode unless its connection is also down.

According to one embodiment the transitioning of CC node F to local survivability mode may include the capacity server setting a flag indicative that it is now in local survivability mode. In addition the capacity server may also be configured to awaken sleeping stand by survivability resources such as for example a stand by interaction server.

In act CC node F receives a CC request from the external source . The CC request is one that would typically be forwarded to the data center . In response to the request in act the SIP server or routing server determines whether the local survivability mode flag has been set. In response to the flag being set the SIP server refrains from forwarding the request to the CC central node at the data center . Instead in act CC node F processes the request locally. In this regard the SIP server at CC node F may forward the request to a local media server hosted by CC node F for providing for example IVR treatment for the request call recording and or the like. According to one embodiment the IP address of the local media server may be identified by the routing server upon the local survivability mode flag being set. The IP address of the local media server is identified in lieu of the IP address of the SIP server and or media server hosted by the CC central node. According to one embodiment while CC node F is in local survivability mode it may exchange resource capacity with other peer nodes such as for example CC node G . CC node F and CC node G may share each other resources if one node has spare capacity while the other node is in need of additional capacity.

Once the data center connection is restored as depicted in the embodiment of the data center timely responds to the message in act to check the connection. In act CC node F transitions to a normal mode. This may entail for example unsetting the local survivability mode flag and putting stand by resources that were awakened back in stand by mode. In act CC node F forwards to the data center external requests received in act for processing by the data center.

According to another embodiment local survivability upon loss of communication with the CC central node in the data center is made possible by designating the branch CC nodes as a standby system for the data center operation. According to this embodiment agents log into the SIP server of the CC central node during normal operation. Branch CC nodes remain idle until an event occurs that disables the data center . When such an event occurs the agents log into a designated branch node whether it is CC node F or CC node G

According to one embodiment a notification may be sent to the agents logged into the data center via an application e.g. a desktop application installed in a respective agent device . For example the desktop application may be configured to transmit heartbeat messages to the CC central node . In response to lack of response to the heartbeat messages within a preset timeout period the desktop application may be configured to display a message on an agent display device to inform the agent of the lack of response. The message may further prompt the agent to manually log into the SIP server at one of the branch CC nodes . According to one embodiment the desktop application may be configured to retrieve data on the branch CC node secondary node to which the agent is designated and prompt the agent to log into the particular branch CC node. Data on the secondary node associated with an agent may be retrieved from for example the agent s profile record.

According to one embodiment the message to the agent may be a message to call an IVR application on the designated secondary node in order to re log the agent onto the secondary node. The IVR application may be configured to play prompts to guide the agent in the re log process. The data captured by the IVR application may then be provided to the SIP server on the secondary node to effectuate the re log process.

Alternatively the desktop application may be configured to automatically re log the agent into the designated secondary node in response to detecting loss of communication with the CC central node primary node . According to one embodiment the agent maintains his or her directory number used to reach the agent.

According to one embodiment a session border controller not shown at the border of the wide area network and the data center and or other network elements may also be configured to monitor connection with the CC central node . In response to detecting loss of communication the session border controller also referred to as an edge device may be configured to automatically forward inbound telephony communication to the CC central node to an appropriate CC branch node . Identification of the appropriate CC branch node to which to forward an inbound telephony communication may be determined based on configuration settings at for example the session border controller. The configuration settings may include for example the IP address of the appropriate SIP server to which to forward the communication.

According to one embodiment the agent devices as well as other network elements such as the session border controller continue to monitor to detect restored connection with the CC central node when the CC central nodes return to normal operation. In response to detecting the restored connection the agents are prompted to re log into the data center. According to one embodiment an auto logout message may be sent to the branch CC nodes to disconnect all agents forcing the agents to re log into the primary node. The network elements may also stop the redirection of telephony communication to the CC branch nodes and instead target requests back to the data center enabling graceful transition instead of abrupt disconnection of current calls.

In addition to the enterprise deployment as discussed above with respect to a cross enterprise deployment may also benefit from the P2P mechanisms discussed above.

According to one embodiment as resources at the contact center premise represented as the data center and branch CC sites becomes overloaded additional resources may be obtained from the outsourcer site . The outsourcer site includes an outsourcer CC node which may be similar to the CC nodes of the prior embodiments. According to one embodiment the outsourcer site is separate from the enterprise associated with the data center and branch CC sites . Resources in the outsourcer site may be available to be shared to other peer members in a federation upon the outsourcer CC node being accepted into the federation. The acceptance of the outsourcer CC node into the federation may be done according to the mechanism discussed above with respect to . For example the outsourcer CC node may register itself with a registrar node similar to the registrar node of . The registration of the outsourcer CC node is accepted if at least one of the federal nodes accepts the peer.

According to one embodiment although the outsourcer CC node is configured to provide additional capacity to the contact center premise the outsourcer does not push its own load to the contact center premise.

According to one embodiment additional controls and constraints may be introduced in the sharing of resources between the various CC nodes. For example if the outsource services multiple enterprises the external outsourcer node may not send requests back to the enterprise that did not originate the request.

According to one embodiment connectivity between the outsourcer and the main enterprise data center is established via a wide area network so that voice and HTTP traffic may be exchanged between the companies.

According to one embodiment an auction house for outsourcers may be set up to make their services and resources available to various corporations. Companies may select the outsourcer based on their price and possible feedback or reviews of the outsourcers. Companies may also publish their outsourcing requirements at the auction house for bids from the outsourcers.

Once a company has one or more outsourcers selected the company may via the main data center setup their federation registrar to allow the outsourcer to join their network for overload services as discussed above. There may be two contract models for outsourcing 1 interaction volume based and 2 agent resources based. In both cases the outsourcing may be for a defined period of time.

In a hybrid cloud deployment model some contact center services are provided via resources at the data center and or branch sites while other services are provided via resources on the cloud site . For example inbound traffic may be directed to the cloud CC nodes for initial IVR treatment and then routed to on premise agents over data link via a wide area network similar to wide area network . According to one embodiment data link traverses the MPLS network.

In another example agents may be logged into the CC cloud nodes but corporate data may be retrieved from the data center over data link via a wide area network similar to wide area network . The corporate data may include for example information on the customers of the enterprise which are maintained for example in a customer relations management CRM database. In this regard the data link may be a secure data link provided using for example a secure data communications protocol conventional in the art.

With respect to sharing of resources and local survivability the cloud nodes may be a P2P node to the CC central nodes and or branch CC nodes . According to one embodiment most if not all contact center services are provided by the premise resources via the CC central node and or CC branch nodes . According to this embodiment the CC cloud nodes are stand by nodes that share their resources when the premise resources are in overloaded capacity states and or during an emergency e.g. when connection to the data center is lost . In this regard the cloud node may be treated as an outsourcer site similar to outsourcer site in the cross enterprise deployment. In this case the agents and other cloud CC resources are not necessarily un trusted commodities but additional company resources. According to one embodiment when the branch CC sites lose connection to the data center agents at the branch CC sites may log into the CC cloud nodes either manually or automatically at the cloud site .

According to another embodiment most if not all contact center services are provided by the CC cloud nodes with the premise nodes acting as stand by nodes.

Telephony calls from customers are also routed to the CC cloud nodes and connected to the agents via the CC cloud nodes. According to one embodiment certain information such as for example customer information is stored in the data center and retrieved over the secure data link .

Requests from the customers are forwarded to the premise nodes either the CC central node or branch CC nodes until connection to the CC cloud nodes are restored. According to one embodiment each of the premise nodes act as a peer to the other nodes for sharing resources with one another.

Depending on the deployment and what services or information is maintained by the CC cloud nodes loss of connection to the cloud nodes may mean reduced levels of functionality when the premise nodes are functioning in the local survivability mode. For example if CRM data is maintained in the CC cloud nodes the CRM data may not be available when the premise nodes are used during local survivability. Of course if data is centralized in the data center functionality of the premise nodes during local survivability may be the same as normal cloud operations.

Once the cloud connections are re established the agents may re log into the CC cloud nodes . As described in the above embodiments relating to local survivability the re log sequence may be automated in the agent s desktop application and or via each node s own processing.

Each of the various servers controllers switches gateways engines and or modules collectively referred to as servers in the afore described figures may be a process or thread running on one or more processors in one or more computing devices e.g. executing computer program instructions and interacting with other system components for performing the various functionalities described herein. The computer program instructions are stored in a memory which may be implemented in a computing device using a standard memory device such as for example a random access memory RAM . The computer program instructions may also be stored in other non transitory computer readable media such as for example a CD ROM flash drive or the like. Also a person of skill in the art should recognize that a computing device may be implemented via firmware e.g. an application specific integrated circuit hardware or a combination of software firmware and hardware. A person of skill in the art should also recognize that the functionality of various computing devices may be combined or integrated into a single computing device or the functionality of a particular computing device may be distributed across one or more other computing devices without departing from the scope of the exemplary embodiments of the present invention. A server may be a software module which may also simply be referred to as a module. The set of modules in the contact center may include servers and other modules.

The various servers may be located on a computing device on site at the same physical location as the agents of the contact center or may be located off site or in the cloud in a geographically different location e.g. in a remote data center connected to the contact center via a network such as the Internet. In addition some of the servers may be located in a computing device on site at the contact center while others may be located in a computing device off site or servers providing redundant functionality may be provided both via on site and off site computing devices to provide greater fault tolerance. In some embodiments of the present invention functionality provided by servers located on computing devices off site may be accessed and provided over a virtual private network VPN as if such servers were on site or the functionality may be provided using a software as a service SaaS to provide functionality over the internet using various protocols such as by exchanging data using encoded in extensible markup language XML or JavaScript Object notation JSON .

The central processing unit is any logic circuitry that responds to and processes instructions fetched from the main memory unit . It may be implemented for example in an integrated circuit in the form of a microprocessor microcontroller or graphics processing unit GPU or in a field programmable gate array FPGA or application specific integrated circuit ASIC . The main memory unit may be one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the central processing unit . As shown in the central processing unit communicates with the main memory via a system bus . As shown in the central processing unit may also communicate directly with the main memory via a memory port .

A wide variety of I O devices may be present in the computing device . Input devices include one or more keyboards mice trackpads trackballs microphones and drawing tablets. Output devices include video display devices speakers and printers. An I O controller as shown in may control the I O devices. The I O controller may control one or more I O devices such as a keyboard and a pointing device e.g. a mouse or optical pen.

Referring again to the computing device may support one or more removable media interfaces such as a floppy disk drive a CD ROM drive a DVD ROM drive tape drives of various formats a USB port a Secure Digital or COMPACT FLASH memory card port or any other device suitable for reading data from read only media or for reading data from or writing data to read write media. An I O device may be a bridge between the system bus and a removable media interface .

The removable media interface may for example be used for installing software and programs. The computing device may further comprise a storage device such as one or more hard disk drives or hard disk drive arrays for storing an operating system and other related software and for storing application software programs. Optionally a removable media interface may also be used as the storage device. For example the operating system and the software may be run from a bootable medium for example a bootable CD.

In some embodiments the computing device may comprise or be connected to multiple display devices which each may be of the same or different type and or form. As such any of the I O devices and or the I O controller may comprise any type and or form of suitable hardware software or combination of hardware and software to support enable or provide for the connection to and use of multiple display devices by the computing device . For example the computing device may include any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices . In one embodiment a video adapter may comprise multiple connectors to interface to multiple display devices . In other embodiments the computing device may include multiple video adapters with each video adapter connected to one or more of the display devices . In some embodiments any portion of the operating system of the computing device may be configured for using multiple display devices . In other embodiments one or more of the display devices may be provided by one or more other computing devices connected for example to the computing device via a network. These embodiments may include any type of software designed and constructed to use the display device of another computing device as a second display device for the computing device . One of ordinary skill in the art will recognize and appreciate the various ways and embodiments that a computing device may be configured to have multiple display devices

A computing device of the sort depicted in and may operate under the control of an operating system which controls scheduling of tasks and access to system resources. The computing device may be running any operating system any embedded operating system any real time operating system any open source operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system capable of running on the computing device and performing the operations described herein.

The computing device may be any workstation desktop computer laptop or notebook computer server machine handheld computer mobile telephone or other portable telecommunication device media playing device gaming system mobile computing device or any other type and or form of computing telecommunications or media device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein. In some embodiments the computing device may have different processors operating systems and input devices consistent with the device.

In other embodiments the computing device is a mobile device such as a Java enabled cellular telephone or personal digital assistant PDA a smart phone a digital audio player or a portable media player. In some embodiments the computing device comprises a combination of devices such as a mobile phone combined with a digital audio player or portable media player.

As shown in the central processing unit may comprise multiple processors P P P P and may provide functionality for simultaneous execution of instructions or for simultaneous execution of one instruction on more than one piece of data. In some embodiments the computing device may comprise a parallel processor with one or more cores. In one of these embodiments the computing device is a shared memory parallel device with multiple processors and or multiple processor cores accessing all available memory as a single global address space. In another of these embodiments the computing device is a distributed memory parallel device with multiple processors each accessing local memory only. In still another of these embodiments the computing device has both some memory which is shared and some memory which may only be accessed by particular processors or subsets of processors. In still even another of these embodiments the central processing unit comprises a multicore microprocessor which combines two or more independent processors into a single package e.g. into a single integrated circuit IC . In one exemplary embodiment depicted in the computing device includes at least one central processing unit and at least one graphics processing unit .

In some embodiments a central processing unit provides single instruction multiple data SIMD functionality e.g. execution of a single instruction simultaneously on multiple pieces of data. In other embodiments several processors in the central processing unit may provide functionality for execution of multiple instructions simultaneously on multiple pieces of data MIMD . In still other embodiments the central processing unit may use any combination of SIMD and MIMD cores in a single device.

A computing device may be one of a plurality of machines connected by a network or it may comprise a plurality of machines so connected. shows an exemplary network environment. The network environment comprises one or more local machines also generally referred to as local machine s client s client node s client machine s client computer s client device s endpoint s or endpoint node s in communication with one or more remote machines also generally referred to as server machine s or remote machine s via one or more networks . In some embodiments a local machine has the capacity to function as both a client node seeking access to resources provided by a server machine and as a server machine providing access to hosted resources for other clients . Although only two clients and three server machines are illustrated in there may in general be an arbitrary number of each. The network may be a local area network LAN e.g. a private network such as a company Intranet a metropolitan area network MAN or a wide area network WAN such as the Internet or another public network or a combination thereof.

The computing device may include a network interface to interface to the network through a variety of connections including but not limited to standard telephone lines local area network LAN or wide area network WAN links broadband connections wireless connections or a combination of any or all of the above. Connections may be established using a variety of communication protocols. In one embodiment the computing device communicates with other computing devices via any type and or form of gateway or tunneling protocol such as Secure Socket Layer SSL or Transport Layer Security TLS . The network interface may comprise a built in network adapter such as a network interface card suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein. An I O device may be a bridge between the system bus and an external communication bus.

According to one embodiment the network environment of may be a virtual network environment where the various components of the network are virtualized. For example the various machines may be virtual machines implemented as a software based computer running on a physical machine. The virtual machines may share the same operating system. In other embodiments different operating system may be run on each virtual machine instance. According to one embodiment a hypervisor type of virtualization is implemented where multiple virtual machines run on the same host physical machine each acting as if it has its own dedicated box. Of course the virtual machines may also run on different host physical machines.

Other types of virtualization is also contemplated such as for example the network e.g. via Software Defined Networking SDN . Functions such as functions of the session border controller and other types of functions may also be virtualized such as for example via Network Functions Virtualization NFV .

It is the Applicant s intention to cover by claims all such uses of the invention and those changes and modifications which could be made to the embodiments of the invention herein chosen for the purpose of disclosure without departing from the spirit and scope of the invention. The particular manner in which template details are presented to the user may also differ. Thus the present embodiments of the invention should be considered in all respects as illustrative and not restrictive the scope of the invention to be indicated by claims and their equivalents rather than the foregoing description.

