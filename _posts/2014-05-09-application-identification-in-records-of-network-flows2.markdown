---

title: Application identification in records of network flows
abstract: In one embodiment, a method is provided for improving data center and endpoint network visibility and security. The method comprises detecting a communication flow of a plurality of packets over a network, and generating a flow identifier that uniquely identifies the communication flow. After determining an application associated with the communication flow, a flow record is generated. The flow record includes the flow identifier and an indication of the application associated with the communication flow. The indication of the application may be, for example, a hash of the application binary file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09660833&OS=09660833&RS=09660833
owner: Cisco Technology, Inc.
number: 09660833
owner_city: San Jose
owner_country: US
publication_date: 20140509
---
In a computer network a communication flow may be defined by a plurality of messages e.g. packets between a source and a destination. Any time two devices interact over a packet network e.g. the Internet a communication flow can be defined by identifying all of the packets that are addressed from the first device to the second device. Since a communication flow may be bidirectional the flow also includes all of the packets addressed from the second device to the first device.

NetFlow records allow data centers to monitor communication flows between virtual machines VMs as well as communication flows between VMs and outside services. This provides network visibility to network and data center administrators. Currently Netflow records document the size of the communication flow e.g. number of bytes time duration the source and destination addresses of the machines in the communication flow e.g. Internet Protocol IP addresses and port numbers as well as the application protocol of the communication flow e.g. Hypertext Transfer Protocol HTTP .

In one embodiment a method is provided for improving data center and endpoint network visibility and security. The method comprises detecting a communication flow of a plurality of packets over a network and generating a flow identifier that uniquely identifies the communication flow. After determining an application associated with the communication flow a flow record is generated. The flow record includes the flow identifier and an indication of the application associated with the communication flow.

Communication monitoring such as that afforded by the NetFlow functionality in network elements in computer networks allows for administrators to provide services to tailor the network properties provided to specific communication flows. For example communication flows that require a certain Quality of Service QoS can be provided with an appropriate network path to satisfy the QoS requirements. In another example a communication flow that is determined to be related to known malware can be stopped limiting the damage from the malware.

Encrypted communication flows provide a challenge in determining appropriate network requirements since the encryption masks the transport protocol as well as the content of the flow. Additionally as various types of applications begin to make use of the same transport protocols insight into the protocol of a communication flow becomes insufficient to determine appropriate network requirements. Network visibility and security may be improved by providing a direct link between the application and the traffic seen on the network. Knowing that a binary file responsible for network traffic is a known good binary or known bad binary can affect the security decisions made by network components and or administrators. Additionally unknown binaries may be subject to further analysis to aid in detecting potential zero day malware.

Referring to a system is shown that enables an endpoint to generate flow records of its communication flows according to the techniques presented herein. Endpoint includes flow record agent which is used to generate and propagate flow records of communication flows with other endpoints such as endpoint . Another example of a type of endpoint is shown at data center with virtual machine VM and hypervisor . All of these endpoints communicate over network . Flow record collector also communicates over network and is configured to collect the flow record from endpoint endpoint and or data center . Cloud application reputation and information service classifies applications and provides feedback to the flow record collector . In one example the cloud reputation service provides trustworthiness data on applications to classify the applications as known good known bad or unknown applications.

Only one data center and two endpoints are shown in but any number of endpoints and or data centers may be included in system . Endpoint devices and may take a variety of forms including a desktop computer laptop computer server mobile cellular phone tablet computer Internet telephone etc. Only endpoint is shown with flow record agent but any or all of the other endpoints or the VM s of endpoint may include a similar flow record agent. Network may be any type of network e.g. any combination of Internet intranet local area network LAN wide area network WAN wired network wireless network etc. that connects computing devices e.g. endpoint devices and data center and flow record collector .

Referring now to a simplified block diagram of an endpoint configured to provide a flow records is shown. Endpoint includes among other possible components a processor to process instructions relevant to monitoring a communication flow memory to store a variety of data and software instructions e.g. flow record agent application etc. . The endpoint also includes a network interface unit e.g. network interface card to communicate with other endpoints and flow record collector . Application may initiate or accept communication flows with other endpoints through network interface unit . In one example application may be an executable binary file. Alternatively application may comprise a dynamic library e.g. .dll .dylib .so etc. interpreted code e.g. Java .jar files etc or scripted content e.g. Javascript HTML5 etc . Flow record agent has a view of all of the network activity on the endpoint as well as application and user information associated with all of the network data. The agent may generate flow records e.g. NetFlow records for all network communication to and from endpoint . The flow records include application identification information and may further include user identification information. In one example the application identification comprises a hash of the application binary i.e. the executable file. In another example the application identification comprises a hash of a dynamic library or interpreted code file and the flow record may further comprise a parent application field such as the Java Virtual Machine JVM process that is hosting the interpreted Java file.

Memory may comprise read only memory ROM random access memory RAM magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physical tangible e.g. non transitory memory storage devices. The processor is for example a microprocessor or microcontroller that executes instructions for implementing the processes described herein. Thus in general the memory may comprise one or more tangible non transitory computer readable storage media e.g. a memory device encoded with software comprising computer executable instructions and when the software is executed by the processor it is operable to perform the operations described herein.

Referring now to a simplified block diagram of a data center configured to provide flow records for a plurality of virtual machines is shown. Data center includes a plurality of virtual machines and and a network interface unit that allows the virtual machines to communicate over network . Hypervisor includes a flow record agent that uses an introspection application programming interface API to monitor the network activities of the virtual machines and . The hypervisor uses introspection API to see network and file activity. The introspection API may also have the ability to interrogate or inspect processes running in a user s VM from an agent process e.g. agent running in a protected management VM or in the hypervisor .

Data center includes a processor to process instructions relevant to supporting virtual machines and as well as hypervisor . Data center also includes memory to store a variety of data and software instructions e.g. flow record agent communication flows etc. . Memory may comprise ROM RAM magnetic disk storage media devices optical storage media devices flash memory devices electrical optical or other physical tangible e.g. non transitory memory storage devices. The processor is for example one or more microprocessors or microcontrollers that execute instructions for implementing the processes described herein with respect to a plurality of virtual machines. Thus in general the memory may comprise one or more tangible non transitory computer readable storage media e.g. a memory device encoded with software comprising computer executable instructions and when the software is executed by the processor it is operable to perform the operations described herein.

Referring now to a simplified block diagram shows endpoint recording a communication flow according to the techniques presented herein. In this example endpoint and endpoint establish a communication flow e.g. a flow of packets in both directions for a session. Flow record agent transmits a flow record to flow record collector . The flow record identifies the communication flow as well as the application that initiated the communication flow . Alternatively in an example in which communication flow was initiated by endpoint the flow record identifies the application that accepted the communication flow in endpoint .

Flow record collector may collect flow records from a plurality of endpoints and or data centers. As the flow record collector collects the flow records it may transmit a query for application information from a cloud application reputation and information service . The cloud application reputation service can build a reputation database of different applications. The application identification may be extracted from the flow records and used as a key in the query. The cloud application reputation and information service given the key provided may return feedback about the application e.g. to the flow record collector . The flow record collector this receives application reputation and information data from the cloud application reputation and information service allowing the flow record collector to display the applications and information about the applications used on the network. The flow record collector may also provide this data to a security and event management system SIEM . The same information may be used for detecting botnets and or other malware running on the endpoints.

In one example the communication flow is encrypted to maintain privacy from any intermediate node on the network . Since the flow record agent resides on the endpoint it is able to generate the flow record before the communication flow leaves the endpoint in an encrypted form. The flow record may be transmitted to the flow record collector either encrypted or unencrypted regardless of whether the communication flow is encrypted or unencrypted.

In another example the flow record is compatible with the NetFlow standard and includes any data typically found in a NetFlow record. In this example the flow record collector is a Netflow collector probe. One example of a flow record compatible with Netflow version 9 is presented below 

Referring now to an example process for monitoring communication flows is shown. In step a flow record agent detects a communication flow and generates a flow identifier at step . The flow identifier may include a source IP address and port number and a destination IP address and port. The agent determines an application associated with the communication flow at step . In step the agent modifies a flow identifier to indicate the application associated with the communication flow. In one example the agent resides on an endpoint and the agent detects the communication flow when an application on the endpoint initiates the communication flow. Alternatively the agent may detect the communication flow when an application on the endpoint accepts a communication flow initiated by another endpoint. In another example the flow record agent is run by a hypervisor that has visibility into a plurality of virtual machines.

In another example the agent determines the application associated with the communication flow as well as the user that is running that application. The agent may generate a flow record that identifies the communication flow the application associated with the communication flow and the user associated with the application. The flow record may also include a hash of the application binary to identify the application. Since the hash of the application binary would differ for each version of the application or if the application has been modified e.g. by malware the hash is specific to the actual application responsible for that particular communication flow.

Including the application hash in the flow record enables a flow record collector to have visibility into which application is responsible for a communication flow rather than simply seeing the application protocol that is used in the communication flow. For example if a malware application uses Secure Shell SSH protocol to communicate with a Command and Control C C server the techniques presented herein provide the hash of the actual malware file or malware application. This enables the flow record collector to amass a listing of all of the applications that are responsible for network traffic and classify them as known good applications known bad applications or unknown applications. Security analysts may be most interested in known bad and unknown applications and may be able to report on the activities of malware more effectively. Analysis of known good applications may be used for example to determine how much data is transferred from a known good application to a cloud location e.g. exfiltration analysis.

The flow record agent includes at least the following four abilities 1 to see network traffic 2 given a particular network flow e.g. defined by a 5 tuple to deterministically establish which process as seen directly on the endpoint has created the connection to this flow 3 to correlate the user who is running the application and 4 to access the binary files for corresponding processes in order to build a hash of the binary image and any other relevant data from the endpoint.

Referring now to an example process for monitoring communication in a data center is shown. In step the flow record agent resident in the hypervisor of a data center is started. When started the agent uses an API to see both file activity and network activity. The API may also provide for interrogating running processes communicating on the network. Once the user VMs get started and begin to communicate over the network the agent monitors network communications at step . Responsive to a determination in step that there is a new communication flow the agent collects data for a flow record at step . The data for the flow record identifies the flow and may comprise a source IP address and port and a destination IP address and port.

Using an introspection API provided to the hypervisor the agent determines the application responsible for the new communication flow in step . The agent generates a cryptographic hash of the application binary at step to identify the exact application that is responsible for the communication flow. When the communication flow terminates as determined at step or after a predetermined timeout as determined at step the agent generates a flow record at step . The flow record includes the data identifying the communication flow e.g. source and destinations addresses the application identifier e.g. the hash of the application binary and may further include information relevant to the communication flow and or application e.g. user time information number of packets etc. .

The agent may transmit the flow record to a flow record collector in step . The flow record may be transmitted as they are generated by the agent. Alternatively the agent may store the flow records until a flow record collector requests the flow records from the agent.

In summary the techniques presented herein provide for a way to securely and authoritatively provide application identification within flow records such as NetFlow records. This provides improved data center and endpoint network visibility and security.

In one embodiment the techniques presented herein provide for a computer implemented method of monitoring communications. The method includes detecting a communication flow of a plurality of packets over a network and generating a flow identifier that uniquely identifies the communication flow. After determining an application associated with the communication flow a flow record is generated. The flow record includes the flow identifier and an indication of the application associated with the communication flow.

In another form an apparatus is provided comprising a network interface unit and a processor. The network interface unit is configured to enable communications over a network. The processor is configured to detect a communication flow of a plurality of packets over the network and generate a flow identifier that uniquely identifies the communication flow. The processor is further configured to determine an application associated with the communication flow and generate a flow record. The flow record comprises the flow identifier and an indication of the application associated with the communication flow.

In yet another form one or more computer readable storage media are provided encoded with software comprising computer executable instructions. When the software is executed a processor is directed to detect a communication flow of a plurality of packets over a network and generate a flow identifier that uniquely identifies the communication flow. The instructions cause the processor to determine an application associated with the communication flow and generate a flow record. The flow record comprises the flow identifier and an indication of the application associated with the communication flow.

The above description is intended by way of example only. Various modifications and structural changes may be made therein without departing from the scope of the concepts described herein and within the scope and range of equivalents of the claims.

