---

title: Systems, methods, and computer program products for managing access control
abstract: Systems, methods, and computer program products are provided for managing access control. A first set of access control rules is stored in a memory of mobile communication device. The mobile communication device receives from a trusted server over a communication network a notification message indicating that an access control rule has been updated in a secure element. In response to receiving the notification message, the mobile communication device retrieves from the secure element a second set of access control rules including at least the access control rule that has been updated. The first set of access control rules is updated based on the second set of access control rules retrieved from the secure element. An applet stored on the secure element is accessed via an application running on the mobile communication device, in accordance with the updated first set of access control rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09495558&OS=09495558&RS=09495558
owner: GOOGLE INC.
number: 09495558
owner_city: Mountain View
owner_country: US
publication_date: 20140325
---
The present application claims priority to U.S. Provisional Application No. 61 805 410 filed on Mar. 26 2013 the entire contents of which are hereby incorporated by reference herein.

Example aspects described herein relate generally to mobile wallets in mobile communication devices for use in mobile commerce and more particularly to systems methods and computer program products for managing access control for mobile communication devices that utilize secure elements.

Mobile communication devices also referred to herein as mobile devices are becoming more and more versatile and are being used in an increasing number of ways to make various everyday tasks simpler and or more efficient. One area in which mobile devices are being used is mobile commerce. For example mobile devices are being made to include mobile wallets which may be used to conduct financial transactions e.g. payments and or non financial transactions e.g. venue admissions without the need for physical cash checks credit cards tickets and or the like. In order to safeguard sensitive information e.g. payment account information that mobile wallets utilize in conducting such transactions some mobile devices are made to include and or are communicatively coupled to a secure element that stores such sensitive information.

Controlling access to the secure element is necessary for both security and business reasons. To this end conventional access control specifications e.g. Global Platform Access Control GPAC for example as described in Global Platform Device Technology Secure Element Access Control Version 1.0 Document Reference GPE SPE 013 May 2012 86 pages Gemalto Access Control GAC and Public Key Cryptography Standard No. 15 PKCS15 each of which is hereby incorporated by reference herein in its entirety typically require access control rules also referred to herein as simply access rules to be stored on the secure element.

In general each access rule in a set of access rules stored on the secure element indicates whether a particular application stored on the mobile device is permitted to access a particular applet stored on the secure element. Any given one of the access rules may correspond to one or more of the applications stored on the mobile device and one or more of the applets stored on the secure element.

Some access control specifications permit the access rules stored in the secure element to be updated e.g. added modified or deleted for example by way of a wireless communication protocol such as an over the air OTA communication protocol. The secure element also stores a refresh tag e.g. a flag a date a time and or another type of temporal indicator that includes a value that indicates when any of the access rules stored on the secure element was most recently updated. Each time any of the access rules stored on the secure element is updated in the secure element the value of the refresh tag in the secure element is updated as well.

In some cases an enforcer module also referred to herein as enforcer residing on the mobile device retrieves from the secure element and stores the set of access rules. According to some access control specifications the enforcer is required to periodically poll the refresh tag to determine whether any of the access rules stored in the secure element has been updated since the last time the enforcer retrieved the access rules from the secure element. In addition to periodic polling the enforcer polls the refresh tag of the secure element each time access control is to be enforced e.g. upon receiving a request for access to information and or performance of an action that is protected by the rules such as a request to open a secure communication channel using an application or applet stored on the secure element . If upon polling the refresh tag the enforcer determines that one or more pertinent access control rules has been updated since the most recent polling then the enforcer retrieves from the secure element an updated set of access rules or a subset of the updated set of access rules and updates a local set of rules stored on the mobile communication device so as to be consistent with the rules stored in the secure element. One example of such a polling scheme may be found in GlobalPlatform Device Technology Secure Element Access Control Version 1.0 Document Reference GPE SPE 013 Section 5 Remote Interface Based on RAM May 2012 86 pages the entire contents of which are hereby incorporated by reference herein.

In one example in order to enable the enforcer to determine whether any of the access rules stored in the secure element has been updated since the last time the enforcer retrieved the access rules from the secure element each time the enforcer retrieves from the secure element and stores the access rules the enforcer also retrieves from the secure element and stores the refresh tag that includes a value that indicates when the set of access rules stored on the secure element was most recently updated. In this way the enforcer may determine whether any of the access rules stored in the secure element has been updated since the last time the enforcer retrieved the access rules from the secure element by comparing the value of the refresh tag stored in the secure element to the value of the refresh tag stored by the enforcer.

If the value of the refresh tag stored in the secure element matches the value of the refresh tag stored by the enforcer then that would indicate that the access rules stored by the enforcer are up to date that is that none of the access rules stored in the secure element has been updated since the last time the enforcer retrieved the access rules from the secure element. If on the other hand the value of the refresh tag stored in the secure element does not match the value of the refresh tag stored by the enforcer then that would indicate that the access rules stored by the enforcer are not up to date that is that one or more of the access rules stored in the secure element has been updated since the last time the enforcer retrieved the access rules from the secure element. In this case the enforcer would retrieve from the secure element and store the updated set of access rules and the updated value of the refresh tag.

One drawback however to polling schemes such as the scheme described above is that they can result in an inefficient utilization of computing resources such as the utilization of processor power processor time memory communication channels and the like. For instance when no updates have been made to the access rules polling the refresh tag periodically would needlessly render a processor of the mobile communication device busy.

Likewise when no updates have been made to the access rules polling the refresh tag upon receiving a request for information and or an action protected by the rules would needlessly render the processor busy and would also negatively impact the user s experience by delaying the granting of the request until after the polling has been completed.

Moreover even when an update has been made to the access rules polling the refresh tag upon receiving a request for information and or an action protected by the rules would negatively impact the user s experience by delaying the granting of the request until after both the polling of the refresh tag and the updating of the local access rules have been completed.

Given the foregoing it would be beneficial to enable access rules to be updated and enforced in an efficient manner that improves both the user s experience and the utilization of computing resources.

The example embodiments herein provide systems methods and computer program products for managing access control.

In accordance with one example aspect herein a first set of access control rules is stored in a memory of mobile communication device. The mobile communication device receives from a trusted server over a communication network a notification message indicating that an access control rule has been updated in a secure element. In response to receiving the notification message the mobile communication device retrieves from the secure element a second set of access control rules including at least the access control rule that has been updated. The first set of access control rules is updated based on the second set of access control rules retrieved from the secure element. An applet stored on the secure element is accessed via an application running on the mobile communication device in accordance with the updated first set of access control rules.

In another example embodiment the notification message is pushed to the mobile communication device each time the trusted server transmits an update message to the secure element to cause at least one access control rule of the second set of access control rules to be updated.

In one example herein the trusted server pushes the notification message to the mobile communication device by way of a notification server.

In accordance with some example aspects herein a plurality of applets stored on the secure element are accessed in succession without performing a polling process of a refresh tag of the secure element in between each accessing.

A request to access the applet is communicated in one example and the retrieving of the second set of access control rules from the secure element is performed before the communicating of the request to access the applet.

The access control rule that has been updated indicates whether the application has permission to access the applet stored on the secure element in accordance with another example herein.

The terms payment product and card may be used interchangeably herein to refer to a product such as for example a credit card a general purpose reloadable GPR card and or the like that may be used to conduct financial transactions.

The term service provider data as used herein generally refers to data relating to one or more service providers service provider systems and or services provided by one or more service providers. In some example embodiments herein service provider data refers to any data associated with a service provider that is stored in a wallet database and or in a wallet client database.

The terms access control rule and access rule may be used interchangeably herein to refer to a rule that governs access to information stored on a secure element. For example an access rule may indicate which applications installed on a mobile communication device are permitted to access which applications applets and or other information stored on a secure element coupled to or installed in the mobile communication device. One example set of access rules that may be stored on a secure element and or by an enforcer and or by another component of a mobile device is provided below in Table 1.

Each of the example access rules shown in Table 1 indicate whether a particular mobile device application e.g. as identified by a corresponding hash value is allowed or disallowed to access a particular applet e.g. as identified by an application identifier AID stored on the secure element.

Another example set of access rules that may be stored on a secure element and or by an enforcer and or by another component of a mobile device is provided below in Table 2.

The example access rules shown in Table 2 indicate conditions e.g. whether an application is signed with a particular certificate based upon which access to one or more or all applets stored on the secure element is allowed or disallowed.

Presented herein are novel and inventive systems methods and computer program products for managing access control. In accordance with some aspects described herein systems methods and computer program products are provided that enable access rules to be updated and enforced in an efficient manner that improves both the user s experience and the utilization of computing resources e.g. the utilization of processor power processor time memory communication channels and the like .

Unlike existing approaches to managing access control which employ an inefficient polling scheme whereby for example a refresh tag associated with access rules is periodically polled irrespective of whether any updates have been made to the access rules in accordance with the example aspects described herein a triggers scheme is provided such that updates to access rules need only be retrieved upon the access rules having been updated.

Also the example aspects described herein unlike existing approaches avoid the need to poll the refresh tag upon receiving a request for information and or an action protected by the access rules. The user s experience is thus improved since the granting of the request need not be delayed until after both the polling of the refresh tag and the updating of the local access rules have been completed.

The mobile device may be a cellular phone a tablet computer or another type of electronic device with connectivity to one or more mobile networks. As will be described in further detail below in connection with the mobile device includes several components such as for example a mobile wallet and a secure element which enable the mobile device to be used to conduct financial transactions e.g. payments and or non financial transactions e.g. venue admissions without the need for physical cash checks credit cards tickets and or the like. Although the secure element is shown in as being included within the mobile device this is for convenience only and should not be construed as limiting. In other example embodiments the secure element may be external to and or removable from the mobile device .

The mobile device is communicatively coupled to the TSM by way of the network . The network may be a mobile phone cellular network a radio network a WI FI network and or another type of network. In some example embodiments the network is operated by a corresponding mobile network operator MNO not shown in . The network may be referred to as an over the air OTA network since it enables systems and or devices to communicate using wireless standards.

The TSM is a module implemented in hardware and or software that functions as an intermediary between entities e.g. service provider systems mobile wallets secure elements etc. in a mobile commerce environment. In one example embodiment herein the TSM represents a central TSM managed by a mobile wallet provider e.g. a provider of the mobile wallet . The TSM for example manages communications between entities such as the SP systems and the mobile device e.g. the mobile wallet the secure element and or any other component of the mobile device and also provides interfaces for communication with other computer systems. The TSM communicates with the mobile device via the network using security protocols such as for example a GlobalPlatform secure channel protocol secure sockets layer SSL transport layer security TLS and or another security protocol.

The TSM also provisions applets such as contactless applets associated with the service provider systems to the mobile device for use by the mobile wallet for example. The TSM remotely distributes and remotely manages e.g. by updating access rules for the applets the contactless applets by communicating with the secure element .

As will be described in further detail below in connection with in one example embodiment a notification service running on the TSM or on a separate notification server is used to provide the mobile device with notifications regarding updates to access rules. In this way updates to access rules need only be retrieved from the secure element upon the access rules having been updated. This enables access rules to be updated and enforced in an efficient manner that improves both the user s experience and the utilization of computing resources e.g. the utilization of processor power processor time memory communication channels and the like . Also the example aspects described herein avoid the need to poll the refresh tag upon receiving a request for information and or an action protected by the access rules. The user s experience thus may be improved since the granting of the request need not be delayed until after both the polling of the refresh tag and the updating of the local access rules have been completed.

The notification server may be communicatively coupled to the mobile device by way of the network which as described above may be a mobile phone cellular network a radio network a WI FI network and or another type of network. In some example embodiments the notification server is communicatively coupled to the mobile device by way of an additional network e.g. a mobile phone cellular network a radio network a WI FI network and or another type of network not shown in that is distinct from the network . The notification server may be communicatively coupled to the TSM by way of a direct connection a proprietary network the network and or any other type of communication path.

In one example embodiment the TSM manages communications between the mobile wallet and one of the SP systems in order to request and obtain data for use in a mobile financial or non financial transaction. For example the TSM provides access rules to the secure element by way of the network the access rules indicating which applications e.g. the mobile wallet installed on the mobile device have permission to access which information e.g. applets stored on the secure element . The TSM may provide the access rules upon an initial installation of a corresponding application on the mobile device and or may provide updates to the access rules after the corresponding application has been installed on the mobile device . The updates to the access rules may be initiated by the TSM by the SP systems by the mobile device and or by any other entity e.g. an entity not shown in .

The TSM is communicatively coupled to the SP systems by way of the network . The network may be a virtual private network VPN a network using Hypertext Transfer Protocol HTTP standards the Internet and or another type of network.

The SP systems in some example embodiments are systems owned operated maintained and or provided by service providers to enable customers or consumers to utilize one or more services of the service provider.

Having described the example system for managing access control reference will now be made to to describe in further detail the example mobile device . As shown in the mobile device includes the mobile wallet and the secure element which are mentioned above in connection with . Although the secure element is shown in as being included within the mobile device this is for convenience only and should not be construed as limiting. In other example embodiments the secure element may be external to the mobile device .

The mobile device also includes a processor a memory an enforcer and locally stored e.g. stored locally in one or more memories of the mobile device access rules . It should be understood that although not shown in for purposes of convenience the mobile device may include other components such as a mobile operating system other applications a display e.g. a touchscreen display a user interface a keyboard an antenna and or the like. Additionally although not shown in for purposes of convenience the components of mobile device may be interconnected via any number of paths such as a communication bus direct point to point links and or the like.

In general the processor executes instructions that may be stored in the memory the mobile wallet the enforcer the secure element and or in any other component of the mobile device to enable the mobile device to perform certain functions. The memory may also store data that is generated and or used by the processor in executing such instructions.

The mobile wallet is an interactive application stored in a non transitory memory of the mobile device . In one example embodiment the mobile wallet includes instructions that when executed by the processor enable the mobile communication device to 1 access information or utilize one or more services provided by the service provider systems 2 communicate with the service provider systems and or 3 interact with contactless services and or control the operation of contactless hardware of the mobile device for example to conduct contactless transactions and or process commerce information such as offer and or loyalty information.

The mobile wallet also includes instructions which when executed by the processor cause the mobile device to act as an instrument for processing transactions such as financial transactions in one example. The mobile wallet provides an interface for receiving inputs and displaying outputs. The mobile wallet communicates with the secure element and applets described below stored on the secure element using commands transmitted via application programming interfaces APIs not shown in .

In one example the mobile wallet stores data e.g. an account number corresponding to an account provided by the service provider for use via the mobile wallet and or any other type of data associated with the mobile wallet and or with a service provider that the mobile wallet utilizes to perform certain functions. For instance the mobile wallet may store applet data regarding one or more applet s e.g. the applets described below that the mobile wallet uses to access and or interact with the applets .

The secure element is a platform onto which service account information and corresponding applications may be added stored personalized and managed. The secure element includes hardware and software and implements interfaces and protocols that enable the secure storage of data such as credentials service account information and applications also referred to herein as applets that may be used for conducting financial and or non financial transactions. In one example the applets may correspond to a service e.g. payment commerce ticketing offered by a service provider e.g. a service provider associated with one of the SP systems .

The secure element may be implemented in different form factors such as for example a Universal Integrated Circuit Card UICC an embedded secure element and or a separate chip or secure device e.g. a near field communication NFC enabler that can be inserted into a slot on the mobile device . In one example embodiment the mobile wallet communicates with the secure element using ISO 7816 commands in order to conduct contactless transactions. The secure element also stores security critical applets such as those involving payment and account credentials which require secure hardware storage and a secure execution environment.

The secure element includes secure element access rules and one or more applets collectively . In one example embodiment the one or more applets are associated with respective ones of the SP systems . . . described above in connection with . The applets may be in one example contactless applets associated with the service provider systems which are provisioned by the TSM on the mobile device for use by the mobile wallet . The TSM remotely distributes and remotely manages the contactless applets by accessing the secure element for example to provide updates to access rules associated with the applets.

The applets may include instructions that when executed by the processor enable a user of the mobile device to communicate with and or utilize one or more services provided by the corresponding service provider. For example an applet provided by a payment product issuer may enable the user to check a balance of the user s account view transaction history and or other notifications regarding the user s account and or the like.

The enforcer is a module implemented in hardware and or software that enforces access rules that govern which applications installed on the mobile device are permitted to access which information e.g. applets stored on the secure element . In some example embodiments herein the enforcer utilizes the memory of the mobile device and or utilizes a separate memory included in the enforcer not shown in to store data and or instructions that the enforcer uses to execute one or more functions e.g. to enforce access rules . As will be described in further detail below in connection with in accordance with one example embodiment updates to the access rules are provided to the secure element by the TSM . The enforcer also stores a local set of access rules e.g. which may be stored on the memory of the mobile device that mirror the access rules stored in the secure element . In this way the mobile wallet may access one or more of the applets in the secure element in accordance with the local access rules without having to retrieve the access rules in the secure element .

Having described an example system for managing access control reference will now be made to to describe an example procedure for managing access control in accordance with an example embodiment herein. In the following description of the procedure reference will also be made to certain elements of e.g. one or more of elements through and or of e.g. one or more of elements through which are described in further detail above.

At step the enforcer locally e.g. in a memory local to the mobile device stores an initial version of the access rules which in one example are received not shown in from the TSM upon an initial provisioning of the applets on the secure element . The initial version of the access rules may include a plurality of access rules corresponding to the plurality of applets . . . respectively. Additionally although not shown in for purposes of convenience in one example a copy duplicate of the initial version of the access rules is also stored on the secure element in the form of the access rules upon the initial provisioning of the applets on the secure element .

At step the TSM communicates an update to one or more access rules stored on the secure element . The update may be triggered by a service provider system the TSM itself by an administrator computer not shown in the Figures coupled to the TSM and or by another system. The update may include for example new credentials a new payment account number and or the like to be used in connection with any of the applets .

Upon receiving the update from the TSM at block the updated access rules are stored in the secure element .

Once the access rules are successfully updated the TSM communicates at step a notification message to the enforcer indicating that at least one of the access rules has been updated.

In one example embodiment the enforcer is configured such that the receipt of the notification message communicated at step triggers the enforcer to retrieve at step the updated access rules from the secure element . By virtue of this trigger the enforcer may avoid the need to poll the refresh tag of the secure element whether periodically and or upon receiving a request to access information on the secure element to determine whether the access rules are up to date. That is in accordance with this example embodiment no polling of the refresh tag is required unless and until a notification message is received by the enforcer indicating that the access rules have been updated. In this way processing resources may be more efficiently utilized and network traffic may be decreased since unnecessary polling messages may be discontinued.

At step the enforcer updates the locally stored access rules based on the updated access rules retrieved from the secure element at step .

At step the enforcer receives a request for access to an applet stored on the secure element . The request for access to the applet may in one example be triggered by a request from a user to access a payment product associated with the applet e.g. an applet associated with one of the SP systems and provided via the mobile wallet .

At step the enforcer retrieves from the locally stored access rules one or more access rules that are associated with the applet to which access was requested at step .

At step the enforcer grants or denies access to the applet stored in the secure element that was requested at step in accordance with the one or more corresponding access rules retrieved at step from the locally stored access rules . Since no polling of the refresh tag is required upon receiving at step the request for access the user experience may be improved since the granting of the request need not be delayed until after both the polling of the refresh tag and the updating of the local access rules have been completed.

At step the enforcer receives a subsequent request for access to an applet stored on the secure element . The applet to which access is requested at step may be the same as or different from the applet to which access was requested at step .

At step the enforcer retrieves from the locally stored access rules one or more access rules that are associated with the applet to which access was requested at step .

At step the enforcer grants or denies access to the applet stored in the secure element that was requested at step in accordance with the one or more corresponding access rules retrieved at step from the locally stored access rules. Again since no polling of the refresh tag is required upon receiving at step the request for access the user experience may be improved since the granting of the request need not be delayed until after both the polling of the refresh tag and the updating of the local access rules have been completed. Additionally since no polling of the refresh tag need be performed in between successively received requests for access to applets processing resources may be more efficiently utilized.

Having described a first example procedure for managing access control reference will now be made to to describe another example procedure for managing access control in accordance with an example embodiment herein.

As will be apparent from the description below one difference between the example procedure described above and the example procedure described below is that the procedure employs an optional notification server . In one example embodiment the notification server provides the TSM with communication protocol flexibility. For instance the TSM may push notifications to the mobile device by using WI FI 3G 4G LTE the Short Message Service SMS protocol or any other suitable communication protocol. In one example the TSM may utilize the notification server to push notifications to the mobile device by using a communication protocol that is different from the communication protocol s available by way of the network .

At step the enforcer locally stores an initial version of the access rules which in one example are received not shown in from the TSM upon an initial provisioning of the applets on the secure element . The initial version of the access rules may include a plurality of access rules corresponding to the plurality of applets . . . respectively. Additionally although not shown in for purposes of convenience in one example a copy duplicate of the initial version of the access rules is also stored on the secure element in the form of the access rules upon the initial provisioning of the applets on the secure element .

At step the TSM communicates an update to one or more access rules stored on the secure element . The update may be triggered by a service provider system the TSM itself by an administrator computer not shown in the Figures coupled to the TSM and or by another system. The update may include for example new credentials a new payment account number and or the like to be used in connection with any of the applets .

Upon receiving the update from the TSM at block the updated access rules are stored in the secure element .

At step upon successfully updating the access rules stored in the secure element the TSM communicates to the notification server a request that the notification server push a notification message to the enforcer to indicate that the access rules have been successfully updated.

Upon receiving at step the request from the TSM the notification server communicates at step a notification message to the enforcer indicating that at least one of the access rules has been updated.

In one example embodiment the enforcer is configured such that the receipt of the notification message communicated at step triggers the enforcer to retrieve at step the updated access rules from the secure element . By virtue of this trigger the enforcer may avoid the need to poll the refresh tag of the secure element whether periodically and or upon receiving a request to access information on the secure element to determine whether the access rules are up to date. That is in accordance with this example embodiment no polling of the refresh tag is required unless and until a notification message is received by the enforcer indicating that the access rules have been updated. In this way processing resources may be more efficiently utilized and network traffic may be decreased since unnecessary polling messages may be discontinued.

At step the enforcer updates the locally stored access rules based on the updated access rules retrieved from the secure element at step .

At step the enforcer receives a request for access to an applet stored on the secure element . The request for access to the applet may in one example be triggered by a request from a user to access a payment product associated with the applet e.g. an applet associated with one of the SP systems and provided via the mobile wallet .

At step the enforcer retrieves from the locally stored access rules one or more access rules that are associated with the applet to which access was requested at step .

At step the enforcer grants or denies access to the applet stored in the secure element that was requested at step in accordance with the one or more corresponding access rules retrieved at step from the locally stored access rules . Since no polling of the refresh tag is required upon receiving at step the request for access the user experience may be improved since the granting of the request need not be delayed until after both the polling of the refresh tag and the updating of the local access rules have been completed.

At step the enforcer receives a subsequent request for access to an applet stored on the secure element . The applet to which access is requested at step may be the same as or different from the applet to which access was requested at step .

At step the enforcer retrieves from the locally stored access rules one or more access rules that are associated with the applet to which access was requested at step .

At step the enforcer grants or denies access to the applet stored in the secure element that was requested at step in accordance with the one or more corresponding access rules retrieved at step from the locally stored access rules. Again since no polling of the refresh tag is required upon receiving at step the request for access the user experience may be improved since the granting of the request need not be delayed until after both the polling of the refresh tag and the updating of the local access rules have been completed. Additionally since no polling of the refresh tag need be performed in between successively received requests for access to applets processing resources may be more efficiently utilized.

The example embodiments described above such as for example the systems and procedures depicted in or discussed in connection with or any part or function thereof may be implemented by using hardware software or a combination of the two. The implementation may be in one or more computers or other processing systems. While manipulations performed by these example embodiments may have been referred to in terms commonly associated with mental operations performed by a human operator no human operator is needed to perform any of the operations described herein. In other words the operations may be completely implemented with machine operations. Useful machines for performing the operation of the example embodiments presented herein include general purpose digital computers or similar devices.

The computer may include without limitation a processor device a main memory and an interconnect bus . The processor device may include without limitation a single microprocessor or may include a plurality of microprocessors for configuring the computer as a multi processor system. The main memory stores among other things instructions and or data for execution by the processor device . The main memory may include banks of dynamic random access memory DRAM as well as cache memory.

The computer may further include a mass storage device peripheral device s portable storage medium device s input control device s a graphics subsystem and or an output display . For explanatory purposes all components in the computer are shown in as being coupled via the bus . However the computer is not so limited. Devices of the computer may be coupled via one or more data transport means. For example the processor device and or the main memory may be coupled via a local microprocessor bus. The mass storage device peripheral device s portable storage medium device s and or graphics subsystem may be coupled via one or more input output I O buses. The mass storage device may be a nonvolatile storage device for storing data and or instructions for use by the processor device . The mass storage device may be implemented for example with a magnetic disk drive or an optical disk drive. In a software embodiment the mass storage device is configured for loading contents of the mass storage device into the main memory .

The portable storage medium device operates in conjunction with a nonvolatile portable storage medium such as for example a compact disc read only memory CD ROM to input and output data and code to and from the computer . In some embodiments the software for storing an internal identifier in metadata may be stored on a portable storage medium and may be inputted into the computer via the portable storage medium device . The peripheral device s may include any type of computer support device such as for example an input output I O interface configured to add additional functionality to the computer . For example the peripheral device s may include a network interface card for interfacing the computer with a network .

The input control device s provide a portion of the user interface for a user of the computer . The input control device s may include a keypad and or a cursor control device. The keypad may be configured for inputting alphanumeric characters and or other key information. The cursor control device may include for example a mouse a trackball a stylus and or cursor direction keys. In order to display textual and graphical information the computer may include the graphics subsystem and the output display . The output display may include a cathode ray tube CRT display and or a liquid crystal display LCD . The graphics subsystem receives textual and graphical information and processes the information for output to the output display .

Each component of the computer may represent a broad category of a computer component of a general and or special purpose computer. Components of the computer are not limited to the specific implementations provided here.

Portions of the example embodiments of the invention may be conveniently implemented by using a conventional general purpose computer a specialized digital computer and or a microprocessor programmed according to the teachings of the present disclosure as is apparent to those skilled in the computer art. Appropriate software coding may readily be prepared by skilled programmers based on the teachings of the present disclosure.

Some embodiments may also be implemented by the preparation of application specific integrated circuits field programmable gate arrays or by interconnecting an appropriate network of conventional component circuits.

Some embodiments include a computer program product. The computer program product may be a storage medium or media having instructions stored thereon or therein which can be used to control or cause a computer to perform any of the procedures of the example embodiments of the invention. The storage medium may include without limitation a floppy disk a mini disk an optical disc a Blu Ray Disc a DVD a CD ROM a micro drive a magneto optical disk a ROM a RAM an EPROM an EEPROM a DRAM a VRAM a flash memory a flash card a magnetic card an optical card nanosystems a molecular memory integrated circuit a RAID remote data storage archive warehousing and or any other type of device suitable for storing instructions and or data.

Stored on any one of the computer readable medium or media some implementations include software for controlling both the hardware of the general and or special computer or microprocessor and for enabling the computer or microprocessor to interact with a human user or other mechanism utilizing the results of the example embodiments of the invention. Such software may include without limitation device drivers operating systems and user applications. Ultimately such computer readable media further includes software for performing example aspects of the invention as described above.

Included in the programming and or software of the general and or special purpose computer or microprocessor are software modules for implementing the procedures described above.

As can be appreciated in view of the foregoing description the example aspects herein provide a system method and computer readable medium for managing access control that enable access rules to be updated and enforced in an efficient manner that improves both the user s experience and the utilization of computing resources e.g. the utilization of processor power processor time memory communication channels and the like .

Unlike existing approaches to managing access control which employ an inefficient polling scheme whereby for example a refresh tag associated with access rules is periodically polled irrespective of whether any updates have been made to the access rules in accordance with the example aspects described herein updates to access rules are retrieved only upon the rules having been updated.

Also the example aspects described herein unlike existing approaches avoid the need to poll the refresh tag upon receiving a request for information and or an action protected by the access rules. The user s experience is thus improved since the granting of the request need not be delayed until after both the polling of the refresh tag and the updating of the local access rules have been completed.

While various example embodiments of the invention have been described above it should be understood that they have been presented by way of example and not limitation. It is apparent to persons skilled in the relevant art s that various changes in form and detail can be made therein. Thus the invention should not be limited by any of the above described example embodiments but should be defined only in accordance with the following claims and their equivalents.

In addition it should be understood that the figures are presented for example purposes only. The architecture of the example embodiments presented herein is sufficiently flexible and configurable such that it may be utilized and navigated in ways other than that shown in the accompanying figures.

Further the purpose of the Abstract is to enable the U.S. Patent and Trademark Office and the public generally and especially the scientists engineers and practitioners in the art who are not familiar with patent or legal terms or phraseology to determine quickly from a cursory inspection the nature and essence of the technical disclosure of the application. The Abstract is not intended to be limiting as to the scope of the example embodiments presented herein in any way. It is also to be understood that the procedures recited in the claims need not be performed in the order presented.

