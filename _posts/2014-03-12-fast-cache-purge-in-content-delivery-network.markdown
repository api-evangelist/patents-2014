---

title: Fast cache purge in content delivery network
abstract: Processing a purge request is disclosed. The purge request is received. An availability state for each content distribution node in a group of content distribution nodes is tracked. Based on the purge request, one or more purge instructions are generated for one or more available state content distribution nodes of the group. Based on the purge request, one or more queued purge instructions are queued for one or more unavailable state content distribution nodes of the group. It is determined that the one or more available state content distribution nodes of the group have completed processing the one or more purge instructions generated for the one or more available state content distribution nodes. Based at least in part on the queuing of the one or more queued purge instructions for the one or more unavailable state nodes, an indication that the purge request has been completed is authorized.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09002990&OS=09002990&RS=09002990
owner: Instart Logic, Inc.
number: 09002990
owner_city: Palo Alto
owner_country: US
publication_date: 20140312
---
Traditionally purging e.g. removing or modifying stored content served by a content delivery network CDN can often take up to 24 hours. In order to confirm that an indicated content has been purged across the entire CDN a purge request must be propagated out to the entire CDN network and a confirmation of completion of the purge request e.g. confirmation that the indicated content of the purge request has been removed from the local storage cache of the node must be received from every content delivery node of the CDN. In CDNs with a large number of nodes it is likely that some of the nodes are temporarily unreachable for a few seconds to a few hours at various different times due to maintenance upgrades and or errors. If a node is unavailable the desired content purge cannot be completed and confirmed until the node becomes available again to process the purge request. Often other processes and services cannot proceed until a confirmation of the desired content purge is received. Therefore there exists a need to reduce the amount of time required to confirm a purge of desired content.

The invention can be implemented in numerous ways including as a process an apparatus a system a composition of matter a computer program product embodied on a computer readable storage medium and or a processor such as a processor configured to execute instructions stored on and or provided by a memory coupled to the processor. In this specification these implementations or any other form that the invention may take may be referred to as techniques. In general the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein the term processor refers to one or more devices circuits and or processing cores configured to process data such as computer program instructions.

A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.

A content distribution network manager is disclosed. In some embodiments a purge request is received from a client. For example a request to remove and or update an indicated content being provided via a content distribution network is received from a content provider that initially provided the indicated content to be served to users by the content distribution network. One or more purge instructions are generated for one or more available content distribution nodes of a content distribution network. For example an instruction to purge an indicated content is provided to content distribution nodes that are online and available to receive the instruction. In some embodiments it is determined that the one or more available content distribution nodes have completed processing the one or more generated purge instructions. One or more purge instructions are queued for one or more unavailable content distribution nodes of the content distribution network. For example the purge instruction is placed in each purge instruction queue associated with each unavailable offline node to allow the unavailable node to process the queued purge instruction when the unavailable node becomes available. An indication is authorized to provide that the purge request has been completed based on the queued instruction s for the one or more unavailable nodes. For example it is indicated that the purge request has been completed even though the unavailable nodes have not processed purge instruction in their queues because the unavailable nodes will process the queued purge instructions before the unavailable nodes can become available to serve content.

Content distribution manager communicates with nodes and via network . Network and network may be the same network or different networks. For example network and network are both the Internet. In another example network is the Internet and network is a local area network. Content distribution manager may include one or more devices and servers. Content distribution manager maintains an availability status e.g. whether a node is online offline or in a transitional state of each node of the content distribution network managed by content distribution manager . The status may be updated by manager and or directly by a node. The status may be stored in storage . Examples of storage include a database a table a hash table a list a memory and any other data structure or device configured to store data. Storage may be connected to manager directly via network and or network . Content distribution manager maintains a separate purge instruction queue for each node of the content distribution network maintained by manager . The queue includes purge instructions ready to be provided to an associated node when the node is ready to receive the instruction. For example if a node is unavailable the queue stores queued purge instructions ready to be provided to the node when the node becomes available again. The queue for each node may be stored in storage and or another storage data structure of manager . For each received purge request manager adds in each purge instruction queue of the content distribution nodes of the content distribution network to be purged a corresponding instruction to purge the specified content of the purge request from the cache storage of each node.

One or more of the following may be included in networks and a direct or indirect physical communication connection mobile communication network Internet intranet Local Area Network Wide Area Network Storage Area Network a wireless network a cellular network and any other form of connecting two or more systems communication devices components or storage devices together. Although example instances of components have been shown to simplify the diagram additional instances of any of the components shown in may exist. Any of the components shown in may be physically integrated in a single hardware component or may represent a plurality of hardware components. Components not shown in may also exist. Manager and storage may be one of a plurality of replicated redundant systems and or devices.

At a purge request is received. The purge request may specify that content is to be removed and or updated from cache storage of content distribution nodes of a content distribution network. The content distribution network may include one or more nodes that mirror content and provide content to various users that may be able to obtain content faster from one content distribution node over another node. In some embodiments the purge request is received from a content provider such as an origin server that provides content to be served distributed by a content distribution network e.g. CDN . For example the purge request is received from client at content distribution manager of . In some embodiments the purge request is received from a user that accesses a receiver of the purge request via an interface provided by the receiver. For example content distribution manager of provides a web interface to allow an authorized user to provide the purge request. In some embodiments the purge request has been provided using an API of the receiver of the purge request. The purge request may identify the content e.g. content location address to be purged. For example the purge request identifies one or more uniform resource identifiers URIs and or uniform resource locators URLs of the content to be purged. The purge request may be encrypted.

In some embodiments the received purge request is verified. For example verification is performed to determine whether a requestor of the purge request is authorized to provide a request to purge an identified content of the purge request. If the purge request is determined as unauthorized the process may end and an error message may be sent to the requestor.

At one or more purge instructions based on the request are queued for each node to be purged. In some embodiments the nodes to be purged include all member content distribution nodes e.g. edge nodes of a content distribution network. In some embodiments the nodes to be purged may be identified in a listing stored by a content distribution manager such as manager of . The list of nodes to be purged e.g. list of content distribution nodes of a content distribution network may be dynamically generated and or statically configured. The list may also be updated e.g. automatically updated dynamically determined and or manually configured as nodes of a content distribution network are removed and or added. In some embodiments a content distribution manager may mange a plurality of content distribution networks the content distribution network associated with the request is determined and the nodes of the determined distribution network are selected as the nodes to be purged.

In some embodiments each node to be purged is associated with a separate queue that may include one or more queued purge instructions. The purge instruction based on the purge request instructs a node to purge e.g. remove or update a specified content of the purge request from a storage of the node. The queues of the nodes of a content distribution network are stored and or managed by a content distribution manager e.g. manager of . In some embodiments the queues are managed using Advanced Message Queuing Protocol AMQP . For example RabbitMQ software is utilized to implement and manage the queues. The queue of each node managed by the content distribution manager may be configured as a first in first out FIFO queue. For example the oldest purge instruction entry is removed for processing before newer entries. In some embodiments when a purge instruction is placed in the queue the purge instruction is associated with a time value e.g. timestamp .

The nodes to be purged may be in different availability states. For example a node that is functioning normally and available to serve distribute content to users is in an available state e.g. online status a node that is not available to serve distribute content to users is in an unavailable state e.g. offline status and a previously unavailable node that is in the process of becoming available is in a transition state e.g. ready to be online status . The availability state of each node of a content distribution network may be tracked by the content distribution manager. For example the content distribution manager detects and updates a listing e.g. stored in storage of of the availability state of each node.

When a node of a content distribution network is available e.g. online it actively processes purge instructions stored in its queue. For example each online node periodically checks whether any purge instructions are stored in its queue and requests purge instructions from its queue e.g. in FIFO order one by one for processing. When a node is not available e.g. offline the queue of the node stores queued purge instructions to allow the node to process the queued purge instructions when the node becomes available to process the instructions. A purge instruction implementing the received purge request is placed in each queue of content distribution nodes of a content distribution network to be purged. In an alternative embodiment if a node is available the purge instruction may be directly issued to the node without storing the purge instruction in a queue.

At it is verified that all available nodes have purged their storage with respect to the purge request. In some embodiments when a node successfully processes a provided purge instruction e.g. clear specified content from local storage cache of the node the node provides a confirmation that the purge instruction has been successfully processed by the node. This confirmation may be received by the content distribution manager and the manager tracks whether the purge instructions of a specific purge request have been successfully completed e.g. tracked using storage of . In some embodiments it is verified that all available nodes purged their storage with respect to the purge request if all nodes of a content distribution network that are indicated to be available e.g. online have provided a confirmation that a provided purge instruction corresponding to the purge request has been successfully completed.

At a confirmation is provided that the purge request has been successfully completed. For example a provider of the purge request is provided an indication that the indicated content to be purged in the request will effectively no longer be provided by a content distribution network. This confirmation may allow the receiver of the confirmation to implement a change a process a service an update and or an upgrade that relies on the indicated content of the request to be no longer provided by the content distribution network. In some embodiments the confirmation may be provided even though unavailable nodes e.g. offline nodes have not purged their individual cache storage by processing the purge instructions corresponding to the purge request because each unavailable node is configured to process the purge instruction in its queue before the unavailable node becomes available. In some embodiments the confirmation is only provided if the verification of is made and it is verified that a purge instruction corresponding to the purge request has been successfully added to each queue of any nodes that are unavailable. In some embodiments the confirmation is only provided if the verification of is made it is verified that all transitional nodes purged their storage with respect to the purge request e.g. successfully completed the purge instruction corresponding to the purge request and it is verified that a purge instruction corresponding to the purge request has been successfully added to each queue of any nodes that are unavailable.

At it is verified that all purge instructions corresponding to a purge request have been added to each queue for at least each unavailable node of a content distribution network. In some embodiments the purge request is the purge request received in of and the queue is the queue utilized in of . In some embodiments a content distribution manager e.g. manager of tracks an availability state e.g. a node can be either in available unavailable or transitional state of each content distribution node of the content distribution network. In some embodiments for each tracked node that is known to be in an unavailable state e.g. offline status and not available to serve content to requestors it is verified that a purge instruction implementing the purge request has been added to the unavailable node s purge instruction queue. In some embodiments for each purge request statuses of the purge instructions corresponding to the purge request are tracked and for each node that is identified to be in an unavailable state the purge instruction status of the node identifies whether the purge instruction of the purge request has been added to the node s queue. When the purge instruction is added to a queue of a node the purge instruction status of each node is updated to identify that the instruction has been added and the verification of may be performed by checking this purge instruction status of nodes that are indicated to be in an unavailable state. In some embodiments the verification of may be made as a confirmation that unavailable nodes have completed the purge instruction even though unavailable nodes have not purged their storage by processing the purge instructions in their queues because each node is configured to process required purge instructions before the unavailable node becomes available.

At it is verified that all purge instructions corresponding to the purge request have been successfully completed for at least each available node of the content distribution network. In some embodiments for each node of the content distribution network that is known to be in an available state e.g. online and ready to serve distribute cached content it is verified that the purge instruction has been successfully processed and completed e.g. content indicated by the instruction has been purged by the node . If the purge instruction has not been completed for an available node the process waits until the purge instruction has been completed by the node before providing the verification in . In some embodiments for each purge request statuses of the purge instructions corresponding to the purge request are tracked and for each node that is identified to be in an available state the purge instruction status of the node identifies whether a confirmation has been received that the purge instruction of the purge request has been successfully completed by the node. For example when a node obtains a purge instruction from its queue and successfully processes the purge instruction the node provides a notification that the purge instruction has been completed to a content distribution manager that tracks the completion of purge instructions. When the purge instruction has been successfully completed by a node the purge instruction status of the node for the particular purge request is updated to identify that the instruction has been completed and the verification of may be performed by checking the purge instruction status of nodes that are indicated to be in an available state.

At it is verified that all purge instructions corresponding to the purge request have been successfully completed for at least each node of the content distribution network that is in a transitional state. In some embodiments for each node of the content distribution network that is known to be in the transitional state e.g. node is not currently serving distributing stored content as an available node but the node is preparing e.g. processing purge instructions in its queue to become an available node it is verified that the purge instruction has been successfully completed. If the purge instruction has not been completed by a transitional node the process waits until the purge instruction has been completed before providing the verification in . In some embodiments for each purge request statuses of the purge instructions corresponding to the purge request are tracked and for each node that is identified to be in a transitional state the purge instruction status of the node identifies whether a confirmation has been received that the purge instruction of the purge request has been successfully completed by the node. For example when a node obtains a purge instruction from its queue and successfully processes the purge instruction the node provides a notification that the purge instruction has been completed to a content distribution manager that tracks the completion of purge instructions. When the purge instruction has been successfully completed by a node the purge instruction status of the node for the particular purge request is updated to identify that the instruction has been completed and the verification of may be performed by checking the purge instruction status of nodes that are indicated to be in a transitional state. In an alternative embodiment step is optional.

At it is determined that a purge complete indication may be provided with respect to the purge request. In some embodiments the determination of is only made if the verifications have been successfully completed for steps and . In some embodiments the determination of is only made if the verifications have been successfully completed for at least steps and . The determination in may allow the confirmation to be provided in of .

At an indication is received that a node is unavailable. The node may be unavailable because the node has encountered an error is being upgraded is being updated is being maintained etc. In some embodiments the node is a content distribution node e.g. edge node of a content distribution network. An unavailable node may be not available to serve distribute content. The indication may be received by a content distribution manager that tracks an availability state of the node. In some embodiments the indication is received from the node. For example the node provides a message that the node has encountered an error and or will become unavailable e.g. due to upgrade update etc. . In some embodiments the indication is received if the node does not provide a message. For example the node provides a heartbeat message periodically and the indication is received if the heartbeat message has not been received within a period amount of time. In another example the content distribution manager periodically sends a status inquiry message to the node and the indication is received if the node does not respond to the status inquiry message.

At an availability state of the node is indicated as unavailable. For example a stored status indicator of the node is updated as offline. In some embodiments indicating the state includes modifying a data structure of a content distribution manager that tracks the availability state of nodes of a content distribution network. For example a list entry corresponding to the node is updated to indicate that the node is unavailable. The state indicated in may be used in of to at least in part determine whether the node is unavailable.

At a request for a next purge instruction from a queue of a node that is indicated to be unavailable is received. In some embodiments the next purge instruction from the queue is the purge instruction added to the queue in of . In some embodiments the request is received from the node that is indicated to be in an unavailable state. For example the node was previously indicated to be unavailable in of and the node has provided the request for the next purge instruction in order to process a backlog of one or more purge instructions in its queue in preparation to become available again to serve distribute content as a part of a content distribution network.

At it is determined whether an unprocessed purge instruction exists in the queue and whether a time value associated with the next purge instruction if applicable is chronologically before a threshold time. For example it is determined whether any purge instruction is left in the queue of the node and if there exists an instruction in the queue a purge instruction with the oldest timestamp e.g. purge instruction in the queue is provided in FIFO order is selected as the next purge instruction to be provided.

In some embodiments determining whether the time value associated with the next purge instruction is chronologically before the threshold time includes determining whether a timestamp of the next purge instruction e.g. timestamp indicates when the next purge instruction was added to the queue is chronologically before the threshold time. In some embodiments the threshold time is associated with a current time when the determination is made. For example the threshold time is a dynamic value determined by subtracting a predetermined amount of a time period e.g. 5 minutes from a current time. This may allow verification of whether FIFO processing of queued purge instructions has reached a state of the queue where any purge instruction potentially still waiting in the queue to be processed has been added to the queue within the last predetermined amount of time e.g. narrowing the amount of purge instructions that can remain queued in the queue before the node transitions to a transitional state . In some embodiments the threshold time is associated with a time when the node began processing queued purge instructions in its queue after becoming unavailable. For example the threshold time is set as the time when the first purge instruction was requested from the queue of the node after the node become unavailable.

If at it is determined that the next purge instruction exists in the queue and the time value associated with the next purge instruction is chronologically before the threshold time at the next purge instruction is provided to the requestor. For example the next purge instruction is removed from the queue and provided to the node for processing and completion. Once a notification is provided that provided a purge instruction has been successfully completed by the node the process returns to .

If at it is determined that the next purge instruction does not exist in the queue or the time value associated with the next purge instruction is chronologically not before the threshold time at an availability state of the node is indicated as transitional and a current time value is stored as a reference time value. For example a stored availability status indicator of the node is updated as ready to become online. In some embodiments indicating the status includes modifying a data structure of a content distribution manager that tracks availability state of content distribution nodes of a content distribution network. For example a data structure entry corresponding to the availability state of the node is updated to indicate that the node is in the transitional state. When a node is in the transitional state the node may be unavailable to serve distribute requested content as a part of a content distribution network but unlike the unavailable state adding a purge instruction of a purge request in its queue without having the transitional state node process and complete the purge instruction does not allow a confirmation to be provided that the purge request has been processed e.g. as compared to an unavailable state node where adding the purge instruction to its queue would be sufficient . The state entry indicated in may be used in of to at least in part determine whether the node is in a transitional state. Determining the reference time may include determining a current time when the node is placed in the transitional state and recording the current time as the reference time.

At any remaining purge instructions in the queue of the node with a time value chronologically before the reference time is provided for processing in chronological order. For example the node requests a next purge instruction from its queue and the next purge instruction is provided e.g. in FIFO order of the queue for processing by the node. The node indicates when it has successfully processed the purge instruction. The applicable purge instructions are provided in order until there does not exist any remaining purge instruction in the queue that has a time value e.g. timestamp of when the instruction was added to the queue before the reference time. Thus the transitional state may allow a node to process queued purge instructions while not requiring additional purge instructions added to its queue while the node is in the transitional state to be completed before the node switches its availability state to become available.

At an availability state of the node is indicated as available. For example a stored status indicator of the node is updated as online In some embodiments indicating the state includes modifying a data structure of a content distribution manager that tracks availability states of nodes of a content distribution network. For example a data structure entry corresponding to the node is updated to indicate that the node is available. The state entry indicated in may be used in of to at least in part determine whether the node is available.

At a next purge instruction is requested from a queue of a node. In some embodiments the next purge instruction from the queue is the purge instruction added to the queue in of . In some embodiments the request of is received in or of . In the event the next purge instruction does not exist e.g. queue is empty the process may end and the process may be repeated e.g. periodically .

At the next purge instruction is received and processed. In some embodiments processing the purge instruction includes clearing an indicated content of the purge instruction from a storage cache of the node. For example a cache of the node is cleared of a content referenced by a location address specified in the purge instruction. In some embodiments processing the purge instruction includes replacing refreshing an indicated content of the purge instruction in a storage of the node. For example a cache of the node is of an indicated content and or reloaded with a content referenced by a location address specified in the purge instruction.

At a confirmation is provided that the purge instruction has been completed. For example the confirmation is provided to a content distribution manager e.g. manager of to allow the content distribution manager to track completion of the purge instruction an availability status of the node and or when a next purge instruction should be provided.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive.

