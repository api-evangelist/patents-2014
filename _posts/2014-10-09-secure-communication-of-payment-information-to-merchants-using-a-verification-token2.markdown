---

title: Secure communication of payment information to merchants using a verification token
abstract: Disclosed are apparatuses, systems, and methods pertaining to the secure communication of payment information from portable consumer devices, such as credit cards, to online merchants using verification tokens.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09582801&OS=09582801&RS=09582801
owner: Visa International Service Association
number: 09582801
owner_city: San Francisco
owner_country: US
publication_date: 20141009
---
This application is a continuation application of U.S. patent application Ser. No. 12 878 947 filed Sep. 9 2010 which claims priority to U.S. Provisional Patent Application No. 61 241 367 entitled Secure Communication of Payment Information to Merchants Using a Verification Token filed Sep. 10 2009 the contents of both of which are hereby incorporated in their entirety by reference for all purposes.

Also U.S. patent application Ser. No. 12 878 947 is a continuation in part of prior application Ser. No. 12 780 657 entitled Verification of Portable Consumer Devices filed May 14 2010 and a continuation in part of prior application Ser. No. 12 712 148 entitled Verification of Portable Consumer Devices filed Feb. 24 2010 the contents of both applications being hereby incorporated in their entirety by reference for all purposes. Both of said prior application Ser. Nos. 12 780 657 and 12 712 148 claim priority to U.S. Provisional Patent Application No. 61 178 636 entitled Dynamic Data Authentication filed May 15 2009 the contents of which are all hereby incorporated in their entirety by reference for all purposes.

As methods and devices for engaging in financial transactions have increased old problems such as fraud and counterfeiting persist.

One of the primary sources of fraud which is prevalent in the credit card industry is skimming. Skimming refers to the electronic copying of a card s magnetic stripe data to create counterfeit cards.

Skimming is predominantly a phenomenon afflicting magnetic stripe based transactions. This is because the magnetic stripe which is placed on the back of a transaction card and stores a variety of data on three separate tracks is a passive medium. In other words the digital content of the magnetic stripe can be perfectly copied without any difference between the copy and the original.

One of the primary means by which skimming can be prevented is for the consumer to closely monitor the whereabouts of his transaction card. This may allow the consumer to prevent the card from being swiped through inappropriate devices. However as contactless cards evolve the classic skimming problem comes along with it. In fact in a wireless environment the opportunity to skim magnetic stripe data is more prevalent. In a wireless environment a potential skimmer need not physically possess the card to be skimmed nor have access to any of the physical equipment e.g. POS terminal communication lines etc. which is required for skimming in a wire based environment. A skimmer can without the knowledge of the consumer or merchant intercept the wireless transaction and copy the data being transmitted from the card to POS terminal. Similar types of interceptions can occur for online purchases.

To address the above problems a dCVV or a dynamic card verification value can be used. For example various systems and methods for generating dCVV s are discussed in U.S. patent application Ser. No. 10 642 878 entitled Method and System for Generating a Dynamic Verification Value filed on Aug. 18 2003 and in U.S. patent application Ser. No. 11 764 376 entitled On Line Payment Transactions filed on Jan. 29 2008. Both of these applications are incorporated herein by reference in their entirely for all purposes.

In addition to generating a dCVV a dCVV can be more effective for preventing fraud when it is securely received by a consumer. However securely receiving and using a dCVV cannot overly interfere with a consumer s experience conducting a transaction. A consumer might not use the dCVV or a consumer might conduct fewer transactions if the inconvenience of receiving and using a dCVV is too great.

Embodiments of the invention are directed to addressing the above problems and other problems individually and collectively.

Disclosed are apparatuses methods and systems pertaining to the communication of payment information to online merchants and or payment processing networks using verification tokens that read identification information from portable consumer devices.

One embodiment of the invention is directed to a verification token that reads identification information from a portable consumer device and securely provides the identification information to a validation entity. The exemplary verification token comprises a peripheral interface adapted to couple to a peripheral interface of a computer a reader adapted to read identification information from portable consumer devices a computer readable medium a data processor electrically coupled to the token s peripheral interface reader and the computer readable medium and code embodied on the computer readable medium that directs the data processor to perform various actions. In an exemplary implementation the verification token comprises code that directs the data processor to communicate with a computer by way of the apparatus peripheral interface and to access to a networking facility of the computer code embodied on the computer readable medium that directs the data processor to transmit at least a portion of identification information to the validation entity by way of the networking facility of the computer the at least a portion of the identification information preferably being transmitted in encrypted form.

In some implementations of the above embodiment the verification token also receives a uniform resource identifier URID to the validation entity from the portable consumer device as read by the token s reader. The uniform resource identifier URID may comprise a conventional uniform resource locator URL an internet protocol address IP address or any other type of identifier that can identify an entity on a communications network. The validation entity receives the identification information from the verification token and sends the identification information to a merchant. The validation entity may validate the identification information before sending the identification information to the merchant. The validation entity may be associated with operated by and or owned by the merchant. Also in this implementation the portable consumer device may be associated with the merchant co branded by the merchant and an issuing bank and or provided by the merchant. The merchant may correlate the identification information it receives from the validation entity with an online transaction being conducted at the merchant s website and may use the identification information to process the online transaction.

In other implementations of the above embodiment a portion of the account number of the portable consumer device is associated with a particular merchant such as in the case of a co branded credit card e.g. co branded between the merchant and an issuing bank . In these implementations the validation entity can determine the merchant identity by comparing a selected portion of each account number it receives against a list numbers of known co branded cards and send the identification information to the merchant determined by the comparison action. The validation entity may validate the identification information before sending the identification information to the merchant or it may leave that action to the merchant s website to perform.

In an implementation of a further embodiment to the above described embodiment the verification token comprises a uniform resource identifier URID to the validation entity or receives such a URID from the portable consumer device. The verification token further comprises code that directs the data processor to obtain an merchant identifier that identifiers a merchant and sends the merchant identifier to the validation entity along with the at least a portion of the identification information read from the portable consumer device. The validation entity uses the merchant identifier to send the received identification information read from the portable consumer device to the merchant. The validation entity may validate the received identification information before sending it to the merchant. The validation entity may be associated with operated by and or owned by a payment processing network an issuing bank or a third party. The merchant identification information may comprise a uniform resource identifier URID to the merchant.

Another embodiment of the invention is directed to a method comprising establishing a communication link between a verification token and a computer the computer having a networking facility an Internet browser and a display having a merchant web page of a merchant displayed thereon by the Internet browser reading identification information from a portable consumer device into the verification token transmitting using the networking facility of the computer at least a portion of the read identification information from the verification token to an entity that can provide at least a portion of the read identification information to the merchant.

Another embodiment of the invention is directed to a method comprising coupling a verification token to a first computer using a peripheral interface of the first computer the first computer having a networking facility and a display the verification token comprising a peripheral interface adapted to couple to the peripheral interface of the first computer a reader adapted to read identification information from portable consumer devices a computer readable medium and a data processor the verification token being configured to read identification information of a portable consumer device using the reader and to send at least a portion of the read identification information to a validation entity using the networking facility of the first computer displaying a merchant web page on the first computer s display the merchant web page being provided by a second computer and presenting a portable consumer device to the reader of the verification token to send identification information contained in the portable consumer device to the merchant via the validation entity wherein the validation entity is different from the first and second computers.

Another embodiment of the invention is directed to a computer program product embodied on a tangible computer readable medium that can be used by a validation entity. The exemplary computer program product comprises code embodied on the computer readable medium that directs a data processor to communicate with a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer the verification token being configured to read a portable consumer device for identification information and to cause at least a portion of the identification information to be sent to the data processor using the networking facility of the computer code embodied on the computer readable medium that directs a data processor to receive identification information sent by the verification token and code embodied on the computer readable medium that directs a data processor to send data representative of at least a portion of the received identification information to a merchant computer.

Another embodiment of the invention is directed to a computer program product embodied on a tangible computer readable medium that can be used by a validation entity. The exemplary computer program product comprises code embodied on the computer readable medium that directs a data processor to receive identification information of a portable consumer device read and sent by a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer code that directs a data processor to apply at least one validation test on a piece of information sent by the verification token the validation test producing a result of pass or fail and code that directs a data processor to send if the result of the at least one validation test is pass data representative of at least a portion of the received identification information to a merchant computer.

Another embodiment of the invention is directed to a method that can be used by a validation entity. The exemplary method comprises receiving at a server identification information of a portable consumer device read and sent by a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer selecting a merchant to send at least a portion of the received identification information to and sending from the server data representative of at least a portion of the received identification information to a computer of the selected merchant.

Another embodiment of the invention is directed to a computer program product embodied on a tangible computer readable medium that can be used by a merchant computer system. The exemplary computer program product comprises code embodied on the computer readable medium that directs a data processor to present a website portal providing various web pages that enable a plurality of users to select at least one product or service for purchase the code directing the data processor to create an active purchase session for each user that is actively pursuing a purchase code embodied on the computer readable medium that directs a data processor to receive messages from one or more validation entities each validation message including data representative of at least a portion of the identification information of a portable consumer device and code embodied on the computer readable medium that directs a data processor to correlate the data received in a message from a validation entity to an active purchase session.

Another embodiment of the invention is directed to a merchant processing system. The exemplary system comprises a first component that communicates with a verification token over a communications network with a computer disposed between the verification token and the communications network the verification token being coupled to the computer by way of a peripheral interface of the computer and configured to access a networking facility of the computer the verification token being configured to read a portable consumer device for identification information and to cause at least a portion of the identification information to be sent in encrypted form to the first component using the networking facility of the computer the first component receives encrypted identification information sent by the verification token and decrypts the encrypted identification information. The system further comprises a second component that processes purchases from consumers over a communications network and that receives data representative of decrypted identification information from the first component the second component correlating the data received from the first component with a purchase that is it processing.

Another embodiment of the invention is directed to a method that can be used by a merchant computer system. The exemplary method comprises presenting from a server a website portal providing various web pages that enable a plurality of users to select at least one product or service for purchase the code directing the data processor to create an active purchase session for each user that is actively pursuing a purchase receiving messages from one or more validation entities each validation message including data representative of at least a portion of the identification information of a portable consumer device and correlating the data received in a message from a validation entity to an active purchase session.

In each of the embodiments described above and in each of the embodiments described below the communications between the computer and the validation entity may be facilitated by and or conveyed through a gateway e.g. a proxy server server entity etc. that is disposed between the computer and the validation entity. The gateway may act as an intermediary between a plurality of verification tokens and their associated computers on the one side and a plurality of validation entities on the other side. The gateway may receive one or more initial communications from a verification token via a computer in communication with the token and may determine from information in the one or more initial communications an appropriate one of the validation entities to use to fulfill the token s request. For example each verification token may be configured to operate with portable consumer devices issued by many different issuing banks or other such entities and one or more of the validation entities may be configured to process requests from portable consumer devices issued by respective issuing banks or other such entities. The gateway may determine an appropriate one of validation entities to use based upon the identification information that the token read from a portable consumer device and sent to the gateway in an initial communication. In one implementation the gateway redirects the token to the determined appropriate validation entity with further communications occurring directly between the verification token and the appropriate validation entity. In another implementation the communications between the verification token and the appropriate validation entity may be conveyed through the gateway after the gateway has initially determined the identity of the appropriate validation entity based upon one or more initial communications with the token . This latter implementation may comprise relatively simple passing through of communications between the token and the appropriate validation entity with minimal processing by the gateway or may comprise having the gateway virtually present itself as the appropriate validation entity to the verification token. Such virtual presentation may involve the gateway decrypting each message from the verification token communicating with the appropriate validation entity to formulate a response to the token s message and encrypting and sending a response message to the verification token. The gateway may also conduct one or more validation tests on behalf of the appropriate validation entity particularly those related to validating the verification token. In this case the gateway does not need to send to the appropriate validation entity those communications it receives from the token that pertain to validation tests that the gateway is handling. The gateway may be associated with or operated by a payment processing network.

Further details regarding embodiments of the invention are provided below in the Detailed Description with reference to the Figures. Further embodiments are also disclosed therein.

Embodiments disclosed herein pertain to the secure communication of identification information e.g. payment information of portable consumer devices to merchants. A portable consumer device comprises a device that holds identification information pertaining to an account held by a user with another entity which is typically an entity that holds extends or credits items of value to the user e.g. monetary funds credits debts etc. . Portable consumer devices encompass credit cards charge cards debit cards bank cards prepaid cards and other cards that identify an account held by a user with another entity. The cards are capable of existing in both passive forms e.g. card with a magnetic stripe and active forms e.g. integrated circuit cards or smartcards and further encompass portable electronic devices that in whole or in part function as such cards. Such portable electronic devices can include memory cards account tokens fobs stickers cellular telephones including near field communications phone keychain devices such as the Speedpass commercially available from Exxon Mobil Corp. personal digital assistants transponders smart media pagers and other mobile electronic devices.

The identification information held by e.g. embodied on a consumer portable device comprises at least an account number and preferably at least one of the following a digital fingerprint of a magnetic stripe of the portable consumer device or a variable datum that varies each time the portable consumer device is read for its identification information as illustrated in . The magnetic stripe carries at least the account number of the device. The account number identifies the consumer account within at least one payment processing network and may comprise a primary account number PAN it may also comprise alphanumeric characters. The digital fingerprint of the magnetic stripe is representative of the distribution of magnetic particles that form the magnetic stripe and is generated by a specialized card reader that samples the distribution of magnetic particles when the card is swiped. The variable datum may comprise number characters alphanumeric characters or a cryptogram e.g. cryptograph . The values of the variable datum vary in a way that is known to both the portable consumer device and an authorization entity the latter of which may be an issuing bank or a payment processing network. The variable datum encompasses the dynamic CVV dCVV and CVC3 card verification values generated by smartcards both the contact and contactless forms as well as cryptograms generated by many smartcards e.g. cryptogram . The datum values may be pre stored in a computer readable medium of the device and in a computer readable medium of the authorization entity or may be generated by each of the device and the entity as needed e.g. generated on the fly using a confidential algorithm known to the device and the entity or by a known algorithm that uses confidential keys or confidential information. The variable datum may comprise or may be accompanied by a counter value that indicates the number of times the portable consumer device has generated the variable datum the counter value may assist the authorization entity in retrieving the variable datum from the entity s computer readable medium or in generating the variable datum from the algorithm. However a counter value is not necessary and the authorization entity may deduce the number of times the device has generated the variable datum from the history of authorization requests made for the device or an algorithm that does not require a counter may be used.

The identification information may further comprise the name of the account holder e.g. the user the expiration date of the card service codes and discretionary data. As an example the identification information may include the conventional payment data stored on the tracks of the magnetic stripe of a conventional credit card e.g. Track 1 Track 2 and or Track 3 .

The identification information of a portable consumer device is read by a reader which is an electrical component that can read the identification information from a portable consumer device and provide the identification information to another electrical component. A reader may comprise one or more of the following a magnetic stripe reader which may include fingerprint sampling circuitry a card contact reader and a contactless reader the latter of which is commonly known as an RFID reader RFID being an acronym for radio frequency identification . A reader for reading fingerprints of magnetic stripes may include a security module that comprises a proprietary algorithm that generates a digital fingerprint from the sampled fingerprint data and that encrypts the digital fingerprint with a nonce word using an encryption key. Readers are predominantly found at point of sales locations of merchants.

A typical credit card transaction flow using a portable consumer device at a point of sales location is described next. The user s portable consumer device is provided to the user by or on behalf of an issuing bank. The issuing bank extends credit to the user represents the user in credit card transactions and pays merchants for the purchases made by the user. A user presents his or her portable consumer device to a merchant at a point of sales location to pay for an item or service. The merchant uses a reader to read the user s portable consumer device and sends the identification information read from the device along with merchant s information and the transaction amount to an acquiring bank. The merchant may also read the portable consumer device for the printed card verification value e.g. the CVV value printed on the backs of many credit cards and may send this along as part of the transaction information sent to the acquiring bank. The acquiring bank represents and vouches for the merchant in credit card transactions. The acquiring bank forwards the transaction information to a payment processing network such as VisaNet for authorization. A payment processing network generally encompasses a collection of one or more data processing server computers subsystems networks and operations used to support and deliver one or more of the following authorization services exception file services and clearing and settlement services. Payment processing networks encompass bank processing networks credit card payment processing network etc. An exemplary payment processing network may include VisaNet . Exemplary payment processing networks are able to process one or more of the following credit card transactions debit card transactions and other types of commercial transactions. A payment processing network may use any suitable wired or wireless network including the Internet to communicate with acquiring banks and issuing banks.

Prior to the occurrence of a credit card transaction the payment processing network has established a protocol with each issuing bank on how the bank s transactions are to be authorized. In some cases such as when the transaction amount is below a threshold value the payment processing network will authorize the transaction based on information that it has about the user s account without consulting the issuing bank and will accept the liability if the transaction turns out to be fraudulent. In other cases such as when the transaction amount is above a threshold value the payment processing network will forward the transaction information on to the issuing bank for verification and authorization. As part of the authorization process the payment network or the issuing bank may verify the digital fingerprint or the varying datum provided by the portable consumer device. The digital fingerprint is stored at the issuing bank and may be securely provided to the payment processing network by the issuing bank for storage and subsequent use. The algorithm for generating the varying datum is stored at the issuing bank and may be securely provided to the payment processing network for storage and subsequent use. As also part of the authorization process the payment network or the issuing bank may verify the printed card verification value e.g. CVV which is stored at the issuing bank and may be securely provided by the issuing bank to the payment processing network for storage and subsequent use. The degree to which the payment processing network is involved in the verification of the consumer portable device and the authorization of the transaction is typically configured according to the wishes of the issuing bank. Once the transaction is authorized the payment processing network sends an authorization indication to the acquiring bank which sends the authorization indication on to the merchant. In order to reduce fraud merchants are not allowed to store digital fingerprints variable datum and printed card verification values CVVs for more than 24 hours.

When a user wishes to make an online purchase with a merchant over the Internet the user types in the credit card account number cardholder name expiration date and the printed card verification value into respective fields on the merchant s checkout page. In this case the card s magnetic fingerprint or the card s variable datum is not used in the transaction and they are not available to the payment processing network or the issuing bank to aid in verifying that the card was actually present during the transaction. Accordingly there is a greater risk of fraud with such online purchases. For example a store clerk can copy down the account information and printed verification value during a transaction at a point of sales location and can later use the copied information to make an online purchase. As another example a hacker can install spyware on the user s computer to intercept the account information and printed verification value and use it to make fraudulent purchases at other online merchants. Other avenues of potential fraud exist. Embodiments of the invention are directed to mitigating these types of fraudulent activity.

In some implementations validation entity and merchant website are part of a merchant system for a merchant that offers a co branded credit card e.g. co branded portable consumer devices . This possibility is illustrated by the dashed line that connects validation entity with merchant website . The merchant system may be owned and operated by the merchant or owned by another party and operated on behalf of the merchant. In other implementations entity may determine the identity of the merchant from some of the digits of the account number provided in the identification information where such digits are assigned to a merchant of a cobranded credit card. In yet other implementations validation entity receives information that identifies a merchant the merchant identification information or merchant identifier from verification token along with the identification information for device and if valid securely forwards data representative of the identification information for device on to the merchant identified by the merchant identification information. For this the merchants may be screened and verified by validation entity beforehand and secure communication channels between entity and the verified merchants may be established beforehand. Depending upon implementations the data representative of the identification information sent to the merchant by entity may comprise a portion or all of the received and verified identification information or may comprise a substitute account number that the merchant is to use in place of the PAN or a payment processing transaction number or a combination of the above e.g. card holder name substitute account number and payment processing transaction number . In each of the above implementations user does not need to input payment information into the merchant s checkout page. Instead once merchant website receives the data representative of the validated identification information from entity the data may be entered on the checkout page by merchant website and displayed to the user on user interface with the account number and CVV value for device being partially and or fully masked with non related characters such as asterisks e.g. . Once the data is filled in user may commit to the purchase transaction and complete the transaction by clicking on a Submit button or Continue button of the checkout page. Validation entity may also provide the user s shipping and or billing address address information to the merchant so that the user need not fill this information into the merchant s checkout page. Validation entity may obtain the address information from verification token from the issuing bank for device or from an account that user has set up with validation entity described below in greater detail .

Merchant website may use a number of techniques to correlate the data representative of the validated identification information that it receives from validation entity with the active purchasing sessions that it is processing. First if validation entity and merchant website are part of a merchant system merchant website may have previously established a secure e.g. password protected merchant account for user where the user has registered the account information for his or her portable consumer device . In this case merchant website may compare the incoming validated identification information from validation entity with the account information of the active purchasing sessions that it is handling to find a match. In another case the merchant website may have asked user to provide a portion of the identification information of device on its checkout page such as the last four or five digits of the account number and account holder s last name. Merchant website can compare this partial amount of information against the incoming identification information from validation entity to make the correlations.

After user commits to the purchase transaction merchant website sends the data representative of the identification information the purchase information and the merchant information to acquiring bank which in turn sends the data and information to payment processing network for authorization. This is known as an authorization request and the data and information that merchant website sends is known as the transaction information e.g. the collection of the data representative of the identification information the purchase information and the merchant information . The data representative of the validated identification information sent to merchant website by validation entity may include an CVC3 value or dCVV value as described above. Merchant website may include this value with the transaction information sent to network and or may include a printed CVV value with the transaction information the printed CVV value being read from device and entered on the merchant s checkout page by user or token . Payment processing network and issuing bank can then perform the actions that they normally perform to authorize the transaction such as checking whether the merchant is in good standing and checking the account limit of user to ensure that there are sufficient funds to cover the purchase price of the transaction and checking the CVC3 dVCC or CVV values. In the transaction request that it sends merchant may provide an indication that the identification information was read by a verification token and validated by validation entity which gives payment processing network and issuing bank an extra degree of assurance that the user s portable consumer device was present during the transaction. Instead or in addition thereto validation entity may convey an indication to payment processing network that it validated device s identification information for a transaction on merchant website .

In addition to helping ensure that portable consumer device was actually present during the transaction between user and merchant the communication of the data representative of the identification information from verification token to merchant by way of validation entity can be done in encrypted channels that are secure against a man in the middle attack that a fraudster may try on the user s computer . That is even if the fraudster installs a Trojan horse program on the user s computer that logs the user s key strokes one the computer s keyboard and sends them to the fraudster s computer the identification information e.g. credit card account number and card holder name cannot be obtained by the Trojan horse program since the information is not typed into the merchant s web page by the user but is instead securely sent to merchant by validation entity .

As indicated above the identification information read from portable consumer device may include a cryptogram e.g. cryptogram generated by the device as the variable datum. In such cases where device is adapted to generate and provide such a cryptogram card reader provides the user s device with dummy transaction information that is known to both token and validation entity . The dummy transaction information may include a static transaction amount and a static merchant name depending upon the type of cryptogram to be generated. The dummy transaction information may be different for each token . The user s device uses the transaction information to generate the cryptogram. The user s device typically has a counter value often called the Application Transaction Counter ATC which is included in the cryptogram computation and which is incremented with each transaction. The counter reduces the chances of a fraudster guessing the cryptogram value. In some cases user s device may need a PIN to activate the computation of the cryptogram. For this token may display a pop up window on the user s computer that requests the entry of a PIN by the user and token may provide the pin to the user s device along with the request for the cryptogram.

In further implementations validation entity may obtain a dynamic device verification value for the portable consumer device as part of validating the device s identification information. For the sake of clarity and without loss of generality this device verification value is referred to as a dCVV2 value so as to distinguish it from the following 1 the CVC3 or dCVV values generated by smartcards described above 2 the printed CVV values found on the backs of credit cards and 3 the CVV field found on the merchant s checkout page. The dCVV2 value comprises a variable datum e.g. a multi digit number and can be used to complete the purchase transaction. Validation entity may obtain the dCVV2 value by generating it from pre stored data or by receiving it from payment processing network or issuing bank in response to a request for it. If it did not receive the dCCV2 value from processing network validation entity provides the dCVV2 value to payment processing network along with the identification information of device so that network can correlate the dCVV2 value to the user s account. Validation entity also provides the dCVV2 value to one or both of merchant and verification token . If the dCVV2 value is provided to verification token token may fill in the CVV field found on the merchant s checkout page with the provided dCVV2 value or may display the provided dCVV2 value to user so that the user can fill in the CVV field with the dCVV2 value. If the dCVV2 value is provided to merchant merchant may fill in the CVV field on the merchant s own checkout page with the provided dCVV2 value or may check it against the value entered on its checkout page by user or token to gain further assurance for itself that device was present during the transaction. In either case the dCVV2 value reaches both the merchant and payment processing network . When user authorization the transaction such as by clicking the Submit button or Continue button on the merchant s checkout page merchant sends the dCVV2 value along with the user s payment information e.g. the data representative of identification information of device merchant information and transaction information to network via its acquiring bank as part of its authorization request for the transaction.

Next payment processing network can compare incoming authorization requests from merchants such as forwarded by acquiring banks against the information it receives from validation entity such as by looking at account numbers and can match e.g. correlate incoming authorization requests with validation information and dCVV2 values previously sent to it by validation entity . If a match between the dCVV2 value provided in an authorization request and the dCVV2 value previously provided by entity is found then payment processing network has a very high degree of assurance that consumer portable device was present and in the possession of user at the time the purchase transaction was made. This provides a greater degree of assurance in comparison to the reliance on CCV values printed on the backs of credit cards. Payment processing network and issuing bank can then undertake the other actions that they perform to authorize the transaction such as those described above. In these implementations where dCVV2 values are used payment processing network does not need to validate the digital fingerprint and or the variable datum of the portable consumer device if those actions have been done by validation entity . Payment processing network may however perform those validate actions for merchant point of sales transactions. 

As a further feature which is useful when multiple devices have been allocated under one account number e.g. multiple cards under one PAN for a household the identification information that token collects and provides to validation entity may include a device identifier alone with the account number. This device identifier uniquely identifies one of the devices allocated under the account number. Provision entity may further use the device identifier to obtain different dCVV2 values for the different devices allocated under the account number.

A first validation test that validation entity may apply pertains to verifying that verification token is authentic. For this verification token may send its serial number to validation entity along with a message encrypted by an encryption key with the message and encryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number uniquely assigned to the token . Validation entity has a database of serial numbers and corresponding uniquely assigned encryption keys and can validate that verification token has sent the correct message for the serial number. Validation of the correct message serves to authenticate verification token . If the first validation test is failed validation entity may record the serial number of the failed token and the source IP address from which the failed token made the request in a database such as a database described below . A second validation test that validation entity may apply pertains to verifying that verification token has not been involved in fraudulent transactions. For this validation entity may also have a database that tracks the serial numbers of verification tokens that have been used in fraudulent activities and may check the serial number of verification token against this database. The second validation test may further comprise checking the token serial number and or the IP address from which an incoming dCVV2 request was originated the source IP address of the message against the previously described database that stores token serial numbers and IP addresses associated with requests that have failed the first validation test. If a token serial number or IP address is found in this database the second validation test may be deemed to have been failed. Checking the token serial numbers and or the IP addresses in this way prevents replay attacks by fraudsters. It may be appreciated that the database of serial numbers of tokens that failed the first validation test may be combined with the database of serial numbers of tokens involved in fraudulent activities. This combined database as well as the two other databases may be generically termed as a database of serial numbers of suspicious tokens. Additional validation tests are described below in greater detail.

The user s computer may comprise a desktop computer a laptop computer or any portable electronic device that has a networking facility and a peripheral interface for communicating with one or more peripheral devices. Computer has one or more processors a tangible computer readable medium coupled to processor s that stores instruction codes software that direct processor s and that stores data used by processor s and a user interface coupled to processor s . Networking facility and peripheral interface which were previously described above are also coupled to processor s with networking facility also being coupled to first communications network . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. for user to receive information from computer and to provide input to computer . Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory. Computer readable medium stores an operating system for computer which enables processes and applications to be run by processor s . The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility peripheral interface and other components of computer . The operating system may be complex and full featured such as found on desk top computers or simplified such as found on cell phones PDAs and many other types of portable electronic devices.

Networking facility of computer may comprise software and hardware that enable a process running on computer to communicate with a communications network such as network to send and receive messages data and the like to one or more entities coupled to the communications network. The hardware of facility may comprise dedicated hardware separate from processor s or the shared use of processor s or a combination thereof. The software of facility may comprise firmware software stored in computer readable medium or another computer readable medium portions of the operating system or a combination of any of the preceding items. Networking facility is preferably a non exclusive resource allowing access to the communications network by other processes and applications being run by computer . Peripheral interface of computer comprises a wired or wireless connection that enables a peripheral device separate from computer to communicate with the computer. Conventional wired connections include universal serial bus USB connectors USB ports serial ports parallel ports and PCMCIA ports. Conventional wireless connections include infra red IR base stations and Bluetooth base stations that are built into computer or that are coupled to a peripheral interface of computer .

In addition to reader and peripheral interface described above verification token further comprises a processor a tangible computer readable medium coupled to processor holding data and codes that direct the operation of processor a security module coupled to processor and adapted to securely store one or more encryption keys and to encrypt and decrypt data for token a reader coupled to processor and adapted to read portable consumer devices and a peripheral interface coupled to processor and adapted to communicate to computer by way of peripheral interface . Processor may comprise a conventional microprocessor and computer readable medium may comprise a combination of semiconductor memory and non volatile storage such non volatile memory. illustrates an exemplary implementation of computer readable medium which include the storage of several datum elements described in greater detail below processor codes that direct the operation of processor and processor memory which processor may use in carrying out its tasks. Referring back to security module may comprise encryption and decryption circuitry which may include one or more processors and may comprise one or more encryption keys stored in a secured memory. Security module may also include firewall security circuitry that protects verification token from attacks from hackers conducted through peripheral interface . Reader may comprise a convention reader as described above. Peripheral interface may comprise a wired or wireless connection adapted to communicate with peripheral interface of computer . As indicated above conventional wired connections include universal serial bus connectors USB ports serial ports parallel ports and PCMCIA ports. Conventional wireless connections may include infrared and Bluetooth remote stations. When using a conventional wired connection with peripheral interface verification token may be detachably coupled to computer at peripheral interface such as at a USB port connector. illustrates an exemplary verification token with a USB port connector male type as part of its peripheral interface . Also illustrate in is computer its peripheral interface having a USB port connector female type to which USB connector is plugged into the user interface of computer e.g. screen and keyboard the user s portable consumer device RFID type card user and the presentation of a dCVV2 value on user interface . Token may further include a visual indicator such as a light emitting diode LED that it lights when it is ready to read a user s device and may further include an audible indicator such as a piezoelectric buzzer that sounds when token is finished with reading a user s device . The visual and audible indicators may be operated by the circuitry of reader . In other implementations one or more of these indicators may be operated by processor through I O commands.

Referring back to verification token further comprises various codes embodied on computer readable medium that direct data processor to perform respective actions e.g. processor codes shown in . A first code directs data processor to communicate with computer by way of peripheral interface so as to gain access networking facility of computer . The first code may comprise code that directs data processor to send a device driver to computer and an instruction to install the device driver in the computer s operating system wherein the device driver is a collection of instructions to be run by computer that enables computer to recognize the verification token and communicate with the verification token and enables the token s data processor to make function calls to various application program interfaces API s of the computer s operating system such as those related to networking and accessing networking facility . So called self installing drivers are known to the art and can be used here. They comprise one or more function calls to an application programming interface API of the computer s operating system such as the device manager s API. The first code may be configured to work with a selected operating system such as Windows or Symbian OS or may be configured to work with several operating systems. In the latter case the first code may include several device drivers for the various operating systems and instructions that query computer for its operating system type and select and install the driver most appropriate for the computer s operating system. The device drivers may be stored in a section of computer readable medium as illustrated in the example of . The first code may further include as an option instructions that direct processor to generate an I O signal that causes the above described visual indicator to be lit in response to processor gaining access to networking facility of computer .

Referring back to a second code of verification token directs data processor to receive identification information read from portable consumer device by the reader . The second code may include code that directs the data processor to receive a universal resource identifier URID of a validation entity as read from portable consumer device by the reader . The second code may comprise instructions that direct processor to contact reader at periodic intervals through an I O command to determine if the reader has any data for the processor and to read the data when data is indicated as being present. The second code may further direct processor to contact reader through an I O command to clear the data after processor has read it or reader may be configured to clear the data after it has sensed that processor has read it or after a period of time greater than the periodic contact interval used by processor . In another implementation reader may be configured to generate an interrupt signal to processor when data is present and the second code may include instructions that direct processor to respond to the interrupt signal by reading the data from reader and clearing the interrupt. The second code may further include as an option instructions that direct processor to generate an I O signal that causes the above described audible indicator to sound in response to processor receiving data from reader . The above instructions may include conventional I O instructions that direct the communications with reader and the indicators. Different portable consumer device may store and provide different URIDs to different validation entities . A uniform resource identifier URID may comprise a uniform resource locator URL an Internet protocol address IP address or any other type of identifier that can identify an entity on a communications network. If a portable consumer device does not provide a URID to validation entity verification token may store a URID to a default validation entity . In some configurations some verification tokens may be co branded with respective issuing banks and or co branded merchants and only work for portable consumer devices that are co branded with the same issuing banks merchants and each issuing bank merchant may have its own validation entity with its own URID. In such a configuration these verification tokens may store the URIDs to their respective co branded validation entities . Instead of or in addition to this configuration some verification tokens may be associated with respective payment processing networks and each such network may have its own validation entity . In such a configuration these verification tokens may store the URIDs to their respective associated validation entities . Accordingly the second code of verification token may be further configured to direct data processor to only use a default URID stored by token or to use a default URID if consumer portable device does not provide token with a URID to entity . As yet another implementation verification token may include code that directs processor to select one of a number of URIDs stored in token based on a bank number provided in the identification information or embedded in the account number. The above further direction and codes may be implemented with conventional I O instructions memory access instructions and CPU logical and control instructions. One or more URIDs to validation entities may be stored in computer readable memory as illustrated in the example shown in .

Referring back to A third code of verification token directs data processor to establish communications with validation entity using networking facility of computer . The operating system of computer comprises one or more software modules and application programs generically called network services modules herein that can access networking facility and set up communications sessions to entities on communications network . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels the OS Services Layer and the Base Services Layer of the Symbian operating system Internet browsers and the like. Each of these network services modules is non exclusive e.g. capable of serving more than one processor and more than one process application and provides an application programming interface API to a collection of functions that a processor can access using respective function calls. With these API facilities a collection of function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The third code of verification token comprises such a collection of function calls to the API of a network services module of computer including one or more function calls that provide the universal resource identifier URID for validation entity and an instruction to establish a session with the validation entity. The session may be a secure socket layer or secure transport layer session e.g. SSL session with mutual authentication. As part of establishing the session in some implementations the third code of verification token may include directing data processor to provide or to cause to be provided a network address for the token to the computer s network services module and to validation entity . The network address may be static or dynamic the latter of which may be obtained through API function calls to the computer s network services module. The network address may an IP address.

If token wishes to use an Internet browser for a network services module it may further comprise API function calls to the computer s operating system to initiate an instance of the browser and provide it with access to the browser instance. In some implementations such as when verification entity stores the URID of validation entity the third code may direct the data processor to establish communications with validation entity well before user presents consumer portable device to reader and before processor reads device data from reader . Verification token and validation entity may keep the communications session active until device is presented to reader and between times that device is presented to reader by intermittently exchanging heartbeat messages. For example verification token may periodically aperiodically or randomly send messages to validation entity confirming its presence in the session and validation entity may send a reply message confirming its presence in the session.

The third code may be executed in response to data being received by processor from reader or may be executed prior to receiving data from reader . In the latter case the third code may include as an option instructions that direct processor to send an I O command to reader to enable its reading capability after processor has established communications with validation entity .

A fourth code of verification token directs the data processor to transmit at least a portion of identification information to validation entity by way of networking facility of computer wherein the identification information is preferably transmitted in encrypted form. If an SSL session has been established the fourth code may direct data processor to pass the identification information to the computer s network services module using appropriate function calls to the API for the network services module and the identification information may be transmitted in the SSL session where the transmitted and received data are encrypted by a session key. For an additional layer of security the fourth code may further comprise code that directs processor to encrypt the identification information with the help of security module using an encryption key stored in token before providing it to networking facility . These instructions may include conventional I O instructions that direct the communications with security module to pass the identification information to module and to receive back the encrypted information. An encryption key for this may be stored in computer readable medium or in security module .

A fifth code for some implementations of verification token directs data processor to obtain merchant identification information that identifies the merchant of merchant website and the previously described fourth code may further include code that directs the data processor to transmit the merchant identification information to validation entity by way of the networking facility of computer . The fifth code may further include code that directs data processor to display a dialog box to user on computer that prompts the user to enter a merchant name or identifier into a dialog box where the merchant identifier may be displayed on the merchant s checkout page. The code may comprise function calls to the graphical user interface of the operating system of computer to open read and then close a dialog box on user interface . This code may also comprise code that directs processor to execute function calls to the computer s internet browser to query the browser for the URL or URID or network address e.g. IP address of the entity that provided the content of its active browser session which presumed to be the merchant s checkout page and instructions that direct processor to extract the merchant s name or identifier from the obtained URL or URID. Instead of extracting the merchant name or identifier from the obtained URL or URID the fifth code may include code that directs processor to execute function calls to the computer s internet browser to query a special field on its active browser session which is the merchant s checkout page where the special field has been pre arranged by the merchant to contain the merchant s identifier and is known to token for this purpose. The fifth code may further include code that directs processor to collect a merchant transaction identifier along with the merchant identifier either by asking the user to enter this transaction identifier into the above described dialog box or by obtaining it from another special field on the merchant s checkout page which has been pre arranged by the merchant to contain this transaction identifier. The above described codes can be readily augmented to implement this collection of the transaction identifier. The merchant transaction identifier which may comprise a number can be provided to entity by token along with the identification information of device and the merchant identifier. Entity may then include this transaction identifier with the other information it sends to merchant so that merchant can match the information from entity to the transaction that it is conducting with user at its website with the correlation being done on the basis of matching the received transaction identifier to the transaction identifier that has been assigned by the merchant to the transaction that the merchant is conducting with user . The previously described fourth code may further include code that directs the data processor to transmit the merchant transaction identifier to validation entity by way of the networking facility of computer . Alternatively or in addition the above described transaction identifier may comprise the network address e.g. IP address of the user s computer . Both validation entity and merchant will see the same network address for the user s computer within any given time period for conducting a transaction and merchant can use the computer s network address to correlate the data received from validation entity to the active purchase session. Validation entity may obtain the network address of computer from the token which in turn obtains it from the active browser session or may obtain the network address from the source IP address of the network packets it receives from computer token .

Verification token may be configured to work with a selected validation entity as a default if it does not read a URID of a validation entity from portable consumer device . If a URID of a validation entity from portable consumer device is read then the default is overridden. This configuration enables verification token to be used for other purposes such as described in co pending U.S. patent application Ser. No. 12 780 657 entitled Verification of Portable Consumer Devices filed May 14 2010. Also verification token may be cobranded to a specific merchant and may have the URID of the cobranded validation entity stored in its memory. In this case the above fifth code and the corresponding collection of merchant identifier is not needed.

In yet further implementations verification token may contain the URID of validation entity which handles validation requests for several different co branded portable consumer devices . In addition each of these co branded devices may hold a URID to a co branding merchant. The merchant URID is read by verification token such as directed by the above described second code and provided to validation entity as the merchant identifier along with the device s identification information as directed by the above described four code. Validation entity can then send the validated identification information to the merchant URID.

In view of the above disclosure the above codes of verification token can be readily implemented by one of ordinary skill in the art without undue experimentation. The use of function calls to various application programming interfaces APIs of the operating system of computer its support modules facilities and its applications is well known to the software art and one of ordinary skill in the art will be able to construct instructions and API function calls to implement the above described codes and tasks in view of this disclosure without undue experimentation.

As indicated above validation entity may use a first validation test to validate verification token . For this verification token may send its serial number to validation entity along with a message encrypted by an encryption key with the message and encryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number. Validation entity has a database of serial numbers and the corresponding uniquely assigned encryption keys or stored algorithms for generating said keys and can validate that verification token has sent the correct message for the serial number. For this verification token may comprise a serial number and unique encryption key embodied in a computer readable medium the unique encryption key being unique to verification token see for an exemplary implementation Serial Number and Datum for Encrypted message and code that directs data processor to send the serial number and a message encrypted by the unique encryption key to validation entity . The message may be pre stored on the computer readable medium e.g. stored in Datum for Encrypted message in or derivable from information known to both verification token and validation entity such as a message derived from an algorithm applied to the current date serial number of token and or session key of the communications session between token and entity . In this manner the message sent by token to validation entity is verifiable by validation entity using information stored at the validation entity. The computer readable medium for the above tasks may be located in computer readable medium and or security module . The above codes may include I O instructions to security module and function calls to the API of the computer s network services module.

As an option verification token may send from time to time one or more pieces of machine unique information of computer to validation entity which may check this information against a database of computer information associated with known fraudsters. Such machine unique information may include the serial numbers of processors disk drives and operating systems of computer . Verification token may comprise code that directs data processor to obtain one or more pieces of machine unique information from computer and to send the machine specific information to validation entity . This code may include function calls to the API of the computer s operating system to obtain the information and function calls to the API of the computer s network services module to send the information to validation entity .

As another option verification token may be configured to prompt user for a password to activate one or more features of token . The password may be stored on a computer readable medium located in security module or in computer readable medium see for an exemplary implementation of the latter . The password may be provided to user on a piece of paper by the provider or seller of token . Token may be sent to user through the mail by or on behalf of an issuing bank or may be purchased by user in a store. Token may be configured to require that the password be entered each time the user wishes to present a consumer portable device and or each time token is coupled to a computer . For this verification token may further comprise code embodied on computer readable medium that directs data processor to prompt the user to enter a password on a keyboard of computer in response to token being initially coupled to computer and or in response to device being presented to token to read a password entered by the user and to compare the entered password against a stored password embodied on the computer readable medium. This code may comprise API function calls to the graphical user interface of the operating system of computer to open a display box on user interface to request and receive a password from user I O instructions memory access instructions and CPU logical and control instructions. Verification token may further comprise one or more of the following 

These codes may be done with I O instructions memory access instructions and CPU logical and control instructions. They alone or in combination prevent the transmission of identification information to entity when the entered password is not the same as the stored password and thereby comprise code embodied on the computer readable medium that directs the data processor for doing so. One of ordinary skill in the art will be able to construct the instructions and API function calls to implement the above described codes in view of this disclosure without undue experimentation. As further protection validation token may further comprise code embodied on computer readable medium that directs data processor to establish a user name for the token by presenting user with a dialog box to receive input designating a username and by storing the username in computer readable medium example shown in . The above codes for processing the password may be further augmented to include requesting a username for the token and comparing the received username with the stored username for a match and including a match as a condition that must be met in each of the four above codes that initiate or allow various actions to be done. These codes may be done with I O instructions memory access instructions and CPU logical and control instructions.

In further implementations validation token may further comprise code embodied on computer readable medium that directs data processor to establish one or more shipping addresses and or billing addresses in the token that token can provide to validation entity along with the identification information and merchant information that it sends to entity . Each shipping address and or billing address may be associated with a portable consumer device. The code may direct processor to present a series of dialog boxes to the user by way of the computer s user interface to receive the address information and the account number or last four digits thereof of the portable consumer device that is to be associated to the address information and to store the address information in a computer readable medium such as medium as illustrated by the example shown in . Token may further comprise code embodied on computer readable medium that directs data processor to access the address information in response to a request being sent to validation entity the address information may be selected among many stored addresses based on the account number sent in the request and to include the address information in the other information that token sends to entity in the request. The code may direct data processor to encrypt the address information with an encryption key stored in token . The code may be configured to direct processor to only send the address information when the locations for the information on the merchant checkout page are blank thereby allowing the user to override any address information that may be stored in token . As another approach the code may direct data processor to fill the address information into appropriate locations of a merchant checkout page such as when a dCVV2 value is received back from validation entity . The code may be configured to direct processor to only fill in the address information when the locations for the information on the merchant checkout page are blank. The filling code may be further configured to direct data processor to use shipping and or billing information stored on portable consumer device when shipping and or billing information is not store in token for the account number of device and further if the locations for the shipping information on the merchant checkout page are blank. The filling code may include code that directs data processor to locate a browser session on the computer that has a form fields for address information and or a device verification value and to fill the address fields with the selected address information. This can include function calls to the API of the Internet browser to search the active web page or all open web pages for an input field marked as name address city postal code country and CVV and to input the datum of the selected address information into the appropriate fields. The above codes may be implemented with API function calls I O instructions memory access instructions and CPU logical and control instructions.

In each of the embodiments described herein pertaining to verification token token may send the identification information pertaining to portable consumer device to computer in a number of forms including 1 unaltered form clear form 2 encrypted form 3 hashed formed e.g. encoded 4 signed form 5 or any combination of these forms. These forms may be generated by portable consumer device verification token computer or any combination thereof. In addition verification token and validation entity may perform a mutual authentication process before verification token sends the identification information. Token may also send the merchant and or transaction information in any of the above forms as well.

In each of the embodiments described herein pertaining to verification token the above codes of token and the identification information read from device by token may be stored independently of computer and may be secure from programs including spyware and other malicious programs running on computer . In such implementations the identification information is put in secure form e.g. encrypted hashed signed or combination thereof by verification token before the information is provided to computer . Accordingly securing the information is not dependent upon the security of computer . Symmetric or asymmetric keys may be used for encryption and signing. The keys for a verification token may be unique with respect to other verification tokens that is the keys for a token may be unique to that token . Keys for a token and particularly symmetric keys may be based upon a uniquely assigned serial number for the verification token which the token can communicate to validation entity in an initial communication. Both the verification token and the validation entity may have a shared secret on how to derive a key from the token s serial number such as by manipulating and or replacing selected digits of the serial number. A number of keys may be derived from the unique serial number using respective shared secrets. Thus the challenge and response messages used in a mutual authentication process between a verification token and a validation entity may be signed using respective keys derived from the serial number of the verification token.

It may be appreciated that in some implementations of verification token may be configured to work with selected consumer payment devices such as those issued by a selected bank or configured to work with a selected merchant website .

Verification token may further comprise codes that directs processor to send heartbeat messages to validation entity to send a unique identifier of the token to entity and to obtain one or more unique identifiers of computer from computer and to send these unique identifiers to entity .

Having described various embodiments and implementations of verification token various embodiments and implementations of validation entity are now described. Validation entity comprises a system having one or more servers coupled to a communications network that can receive a request from a verification token to process e.g. to validate the identification information that the token has read from a portable consumer device and to forward data representative of at least a portion of the identification information to the appropriate merchant website if the identification information passes one or more validation tests. If the validation tests are passed validation entity may also as an option provide a device verification value dCVV2 to token and the payment processing network . One of the servers of entity is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a user interface one or more databases and a networking facility the latter of which is coupled to first and second communications networks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of entity to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of entity . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of entity also comprises one or more network services modules that can access networking facility and set up communications sessions to entities on communications networks and and with SMS relay server . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Validation entity conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Validation entity can process identification information transmitted from a plurality of different verification tokens e.g. millions of tokens and can process any number of transmissions by a particular token . Before receiving identification information for a portable consumer device from a token the issuing bank for the device may provide validation entity with the digital magnetic fingerprint of the device and or the algorithm that the device uses to generate the device s variable datum e.g. CVC3 dCVV cryptogram . When validation entity receives identification information from a verification token for a specific portable consumer device it can access its record of the digital magnetic fingerprint and or datum cryptogram algorithm for the specific device and compares the received fingerprint and or variable datum e.g. CVC3 dCVV cryptogram against its record of the fingerprint and or variable datum the record of the variable datum being computed according to algorithm in the entity s records . If the received fingerprint and or variable datum match es the recorded fingerprint and or variable datum validation entity can validate the identification information and forward data representative of at least a portion of it to the appropriate merchant as determined by one or more of the following 1 on an a priori basis in the case of a co branded card 2 by examining a portion of the account number against a listing of co branded cards 3 by receiving an indication from the token of the intended merchant. Depending upon implementations the data representative of at least a portion of the identification information sent to the merchant by entity may comprise a portion or all of the received and verified identification information or may comprise a substitute account number that the merchant is to use in place of the PAN or a payment processing transaction number or a combination of the above e.g. card holder name substitute account number and payment processing transaction number . Entity may obtain the substitute account number and or payment processing transaction number from payment processing network and entity may provide network with some or all of the identification information that corresponds to the substitute account number and or payment processing transaction number. In this way network will be able to correlate the incoming transaction having the substitute account number and or payment processing transaction number with the user s account specified by the identification information received by entity . Alternatively entity can generate one or both of the substitute account number and or payment processing transaction number and send it them to payment processing network along with the identification information. The transaction number may comprise alphanumeric characters and may be sent by merchant to acquiring bank and then to network in a discretionary data field present in current credit card processing flows.

Validation entity comprises a plurality of codes embodied on computer readable medium for directing processor s to conduct various actions. Validation entity may comprise a first code that directs data processor to communicate with a plurality of verification tokens over communications network with a computer disposed between each verification token and the communications network. The first code can include code for establishing a communication session with each token which may include establishing a secure socket layer SSL session with mutual authentication and encryption based on a triple DES algorithm and instructions for sending and receiving messages to verification token through the communications session. The first code may also include instructions to send heartbeat messages to the verification token and to receive heartbeat messages from the token to keep the session alive between times that identification information is not being sent. The first code may also include instructions that direct data processor s to receive and verify an encrypted serial number or other identification uniquely assigned to the verification token not to the device in order to validate the authenticity of the token. The first code may also include instructions that direct data processor s to compare the token s serial number or other unique identification against a first list of tokens known to have been used to conduct fraudulent activities. If found on the first list the first code can direct processor s and hence validation entity to decline processing of any identification information sent by token and refuse to forward identification information from the token to merchant websites . The first code may also include instructions that direct data processor s to send a message to a verification token to request that the token send to entity a unique datum of information about computer such as the serial number of processor or disk drive of computer . Entity may further comprise code that directs the processor to compile a second list of serial numbers of computers known to be used to conduct fraudulent activities and the first code may further comprise instructions that direct processor to compare the information it receives about the computer that each verification token communicates through against this second list. If a token is found to be using a computer that is on the second list the first code may direct processor to add the serial number of the token to the first list. Validation entity can then decline processing of any identification information sent by a token that provides computer information found on the second list and can refuse to forward identification information from the token to merchant websites . These actions may be effected by code that directs processor to take the actions.

A second code directs data processor to receive identification information sent by the verification token in the communication session established by the first code. If the identification information is encrypted with an encryption key that has been assigned beforehand to the token i.e. an encryption key that is different from a session key of an SSL session the second code may further direct data processor to decrypt the identification information. The identification information may be encrypted by a session key of an SSL session or by an encryption key stored in verification token and known to validation entity or may be doubly encrypted by both keys.

By validating token against the above first and second lists i.e. by verifying that token has not thus far been involved in fraudulent activities validation entity has some degree of confidence that the identification information sent by token is valid and can in some implementations forward the identification information to the appropriate merchant website. To increase the degree of confidence validation entity may further comprise a third code that directs data processor to compare a digital fingerprint received in the identification information if present with the stored copy of the digital fingerprint that entity has for the account number provided with the identification information. If the digital fingerprints match to an acceptable degree validation entity can validate the identification information and forward it to the appropriate merchant website. If there is no digital fingerprint in the received identification information the third code may include instructions that direct data processor to compare the variable datum received in the identification information if present with a copy of the variable datum for the account number provided with the variable datum in the received identification information. Processor may generate the copy of the variable datum from an algorithm stored at entity or from a list of values for the variable datum stored at entity . If the received variable datum and entity s copy of the variable datum match then validation entity can validate the identification information and forward it to the appropriate merchant website. The above validation tests and further exemplary codes for implementing the validation tests are described in a section below in greater detail.

Validation entity further comprises a fourth code that directs data processor to forward e.g. send data representative of at least a portion of the received identification information to the appropriate merchant in response to validation entity validating the token and or identification information in any of the ways described above. In a first set of implementations validation entity is associated with a selected merchant and validation entity may send the data to the website of that selected merchant. In these implementations the fourth code may comprise instructions that direct data processor to send the data to a website of the selected merchant. In a second set of implementations validation entity may process a number of portable consumer devices that are co branded by a number of merchants and associated issuing banks where the co branded devices associated with each co branded merchant have account numbers that incorporate a common sub number e.g. co branded bank number . In these implementations the fourth code may comprise instructions that direct data processor to identify the common sub number in the account number provided in each received and validated identification information to compare the identified common sub number against a list of sub numbers of the co branded devices to find a match to a merchant in order to select a merchant to send the information to and to send the data representative of at least a portion of the identification information to a website of the selected merchant. In a third set of implementations validation entity may receive an indication of the merchant along with the received identification information and the fourth code may include instructions that direct data processor s to select a merchant based on the merchant identification information and to send the data representative of at least a portion of the validated identification information to a website of the selected merchant. As indicated above the merchant indication may be a URID or network address e.g. IP address to a website of the selected merchant. Entity may have a database that associates such websites with merchant identification. In any of the above implementations an particularly in the latter implementation the code may direct data processor s to also send the last name or full name of the holder of portable consumer device so that merchant can correlate the validated identification information to an open purchase session on its website. The code may also direct data processor s to also send any transaction identifier that it receives from token . The code may also direct data processor s to obtain the network address of computer from the source IP address field of the network packets sent from computer and to send this network address as the transaction identifier to merchant .

If the above described data representative of at least a portion of the received identification information comprises a substitute account number and or a payment processing transaction number then the fourth code further comprises instructions that direct data processor s to obtain one or both of these numbers either by generating them or requesting them from payment processing network . In this case the fourth code further directs data processor s to send at least a portion of the received identification information to payment processing network so that network can correlate the received identification information with these numbers when they are received in a transaction from an acquiring bank .

Validation entity may be configured to implement two or more of the above general sets of implementations. For example validation entity may have code that directs data processor s to examine communications from each token for an indication of a merchant. If a merchant indication is provided then this code of validation entity may direct data processor s to send the validated identification information to the identified merchant third set of implementations . If a merchant indication is not provided then this code of validation entity may direct data processor s to examine the account number for a sub number that is on a list of common sub numbers of the co branded devices to find a match to a merchant and if found to forward the validated identification information to the matched merchant second set of implementations . If this code of validation entity does not find a matching sub number it may then direct data processor s to forward the validated identification information to a selected merchant.

Validation entity may send to merchant computer all of the information that website needs to complete the transaction such as shipping address card expiration date card holder name etc. All of this information may be conveyed to validation entity by consumer portable device through token or validation entity may have all the information securely stored at its location in one of its databases or validation entity may obtain the information from an issuing bank or payment processing network . When verification token is co branded with a specific merchant validation entity can also obtain the serial number of token and provide it to merchant computer and merchant computer can use the received token serial number to correlate the other information received from validation entity to the active purchase session of the user as described below in greater detail. Entity may comprises additional codes that direct its processor s to perform these actions.

As indicated above validation entity may be further configured to generate or otherwise obtain a dCVV2 value for the identification information that it has validated and to send the dCVV2 value and identification information to both the merchant and payment processing network . For this validation entity may comprise code that directs processor to generate the dCVV2 value or obtain a dCVV2 value for the issuing bank and to send it to both the merchant website and the payment processing network along with the validated identification information. Instead of sending the dCVV2 value to the merchant or in place thereof validation entity may send the dCVV2 value to token where token or user may enter the dCVV2 value into the CVV field of the merchant s checkout page. If both merchant and token receive the dCVV2 value from validation entity then merchant can use the dCVV2 value it receives from user and token via entry onto the merchant check out page to verify that it has properly correlated the identification information received from entity with the user s purchase session. Exemplary codes for processing the dCCV2 value by entity are described section below in greater detail.

Verification entity may further comprise code that directs processor to send an alert text message to the communication device of user or send an alert e mail message to an e mail account of user when one or more of the following events occurs 1 when verification token initiates communications with entity 2 when verification token reads a portable consumer device of user 3 when verification entity receives identification information from a portable consumer device or a verification token associated with user 4 when verification entity validates said identification information 5 when verification entity sends validated identification information to a merchant and optional sends a dCVV2 value to other entities and 6 when verification entity denies a request to send identification information to a merchant. The alerts sent by entity may include information related to the events that triggered the alerts such as a portion of account number involved and the merchant name. The alert text messages may be sent from networking facility to an SMS relay server that is coupled to one of communications networks and along with the phone number or network address of the user s communication device . The SMS relay server has an interface to one or more mobile communication networks and can relay the text message to the phone number or network address provided by processor . Validation entity may comprise the relay server. Email alerts may be sent directly to the user s e mail account from networking facility . For this networking facility may comprise a conventional mail agent which is well known to the art.

In view of this disclosure one of ordinary skill in the art will be readily able to construct the code and instructions to implement the above described codes without undue experimentation.

Validation entity may comprise a website accessible to the user that enables the user 1 to create a password protected management account associated with the serial number of the token the latter of which may be provided on a slip of paper originally sent with the token 2 to associate an e mail address to be used for one or more of the above described alerts 3 to associate a mobile number and or URID e.g. network address of the user s communications device to be used for one or more of the above described alerts and 4 to select one or more of the above described alert conditions The website may also enable the user to provide and associate the account numbers for one or more of the user s devices with the password protected account and may further enable the user to associate the e mails and mobile numbers for the alerts to particular devices according to their account numbers. The website may also enable the user to associate a shipping address and or billing address to one or more specific device account numbers which validation entity may provide to merchant along with the identification information with each request for sending such information is made by token for such a specified device account number. This association may include an option that the user can select for a specified device account that directs entity to obtain the address information from the issuing bank for the specified device account. The website may also enable the user to associate a shipping address and or billing address to the token itself which validation entity may provide to merchant for each request to send identification information to a merchant in which a shipping address and or billing address has not been associated to the device account number or contained in the request from token .

One of databases may be assigned to hold the above described password protected accounts of the users. When validation entity receives a request from verification token to send identification information to a merchant code in entity can direct processor s to query this database to find the user s password protected account e.g. identify the user from the token s serial number and or the account number sent in the identification information to determine what text message alerts and emails are to be generated and sent based on the parameters stored in the password protected account to identify the mobile phone number or universal resource identifier e.g. network address of the personal communication device to which to sent the messages and or to identify the email address to which to send the messages and to send the determined messages to the identified destinations. One or more alerts pertaining to a particular request may be combined together into a single text message or email to the user. Entity can also have code that directs data processor s to determine from the account record if any shipping address information or billing address information is to be sent with the communication to the merchant by looking up the settings that the user may have provided for the device account number indicated in the request message and to send the address information to merchant according to the found settings. The above codes and actions can be implemented with HTML page codes XML page codes and the like e.g. web pages conventional I O instructions memory access instructions database API function calls CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As described above a first validation test that validation entity may apply pertains to verifying that verification token is authentic. For this verification token may send its serial number to validation entity along with a test message encrypted by an encryption key with the test message and encryption key or corresponding decryption key being known to token and entity but not the general public and with the encryption key further being uniquely assigned to the token s serial number. Validation entity may access a database of token serial numbers and corresponding uniquely assigned encryption keys or corresponding decryption keys in one of databases and may determine whether verification token has sent a correct test message for the serial number that the token provided. The test message may be fixed or variable in the latter case it may be generated based on information known to both token and entity . The test message may be encrypted and decrypted by a triple DES algorithm which can be implemented by a number of well known sets of computer instructions using a single symmetric encryption key. The test message may also be encrypted by a first key of an asymmetric encryption key set at the verification token and decrypted by the second key the decryption key of the asymmetric encryption key set at validation entity which can be implemented by a number of well known sets of computer instructions. To validate the encrypted test message sent by token entity can decrypt the test message using the key that it has and can compare the decrypted test message to a set of acceptable messages for a match. Entity may also validate the encrypted test message in the reverse way by encrypting the set of acceptable messages and comparing the encrypted test message sent by token to its set of encrypted acceptable messages. If the sent test message is correct the first validation test can be deemed to have been passed otherwise the first validation test is deems to have failed.

To implement the above validation test validation entity may comprise code embodied on computer readable medium that directs data processor to receive one or more messages from verification token via networking facility that has the token s serial number and encrypted test message code that directs data processor to obtain from one of databases a key that has been assigned to the received serial number of the token and one or more acceptable messages that can be accepted as the correct test message and code that directs the data processor to validate the encrypted test message from the token using the encrypted test message the obtained key and the obtained one or more acceptable messages. The latter validation code may comprise code that directs data processor to decrypt the encrypted test message using the obtained key and code that directs data processor to compare the decrypted test message to the one or more acceptable messages to determine if the first validation test has been passed in the case of a match between the decrypted test message and an acceptable message or has been failed in the case of no such match . In addition or as another approach the above validation code may comprise code that directs data processor to encrypt the obtained acceptable messages with the encryption key for token as found in the database according to the token s serial number to compare the encrypted test message from token to the one or more encrypted acceptable messages to determine if the first validation test has been passed in the case of a match between the encrypted test message and an encrypted acceptable message or has been failed in the case of no such match . An acceptable message may be obtained by accessing it directly from one of databases or by generating it from information stored in one or more of databases . As an option if the first validation test is failed validation entity may record the serial number of the failed token and the source IP address from which the failed token made the request in one of databases . For this validation entity may further comprise code that directs data processor to obtain the source IP address from the request message and to store the source IP address and the token s serial number as one record or two separate records in one of databases which may be called the failed validation database . This information may be accessed as port of the second validation test described below. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic and logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a second validation test validation entity may have a database in databases that tracks the serial numbers of verification tokens that have been used in fraudulent activities e.g. suspicious tokens and validation entity may check the serial number of verification token against this database. If a check of this database indicates that verification token has not been involved in fraudulent activity or is not otherwise suspicious the second validation test can be deemed to have been passed. To assist in tracking fraudulent activity back to a verification token validation entity may send the serial number of token along with the dCVV2 value and account number that it sends to payment processing network . If network later finds out that the transaction processed with the account number provided by token was fraudulent it can send a message to that effect to validation entity and entity may then enter the serial number of the token into the database of tokens used in fraudulent activities. To implement the second validation test validation entity may comprise code embodied on computer readable medium that directs data processor to receive a message from verification token via networking facility that has the token s serial number code that directs data processor to have the received serial number compared with serial numbers stored in a database of databases that stores serial numbers of suspicious tokens used in fraudulent transactions to determine if the second validation test has been passed no fraudulent activity or has been failed fraudulent activity . This code may further include instructions that direct processor to obtain the source IP address of the message from token and to compare the source IP address and the serial number of token to IP addresses and serial numbers in the failed validation database for a match. If a match is found the second validation test may be deemed to have been failed. Checking the token serial numbers and IP addresses in this way prevents retry attacks by fraudsters. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a third validation test validation entity may send a message to verification token requesting that token send it one or more pieces of computer specific information about computer such as the serial numbers of one or more of the following the computer s processor one or more of the computer s disk drives the computer s operating system. Validation entity may receive this information and check it against a database storing computer specific information of suspicious computers known to have been involved in fraudulent activity. If a check of this database indicates that the computer used by verification token has not been involved in fraudulent activity the third validation test can be deemed to have been passed. To assist in tracking fraudulent activity back to computer validation entity may send the serial number of token and the computer specific information along with the dCVV2 value and account number that it sends to payment processing network . If network later finds out that the transaction processed with the account number provided by token was fraudulent it can send a message to that effect to validation entity and entity may then enter the serial number of the token into the database of suspicious tokens used in fraudulent activities and the computer specific information into the database of suspicious computers known to have been involved in fraudulent activity. To implement the third validation test validation entity may comprise code embodied on computer readable medium that directs data processor to send a message to verification token requesting computer specific information if verification token has not sent such information beforehand without prompting code that directs data processor to receive one or more data messages from verification token via networking facility that have the token s serial number and the computer specific information and code that directs data processor to have the received computer specific information compared with computer specific information stored in a database of databases that stores computer specific information of suspicious computers used in fraudulent transactions to determine if the third validation test has been passed no fraudulent activity or has been failed fraudulent activity . The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a fourth validation test validation entity may compare a digital fingerprint received in the identification information if present with the stored copy of the valid digital fingerprint that entity has for the account number specified by the identification information. If the digital fingerprints match to an acceptable degree e.g. the degree of similarity or correlation of the two fingerprints being above a selected level of similarity validation entity can deem the fourth validation test as being passed. The degree of similarity between the two fingerprints may be assessed by applying a correlation function to the two fingerprints. Such correlation functions are well known to the art. Before receiving identification information for a portable consumer device from a token the issuing bank for the device may provide validation entity with the valid digital magnetic fingerprint of the device which entity may store in one of databases . When validation entity receives identification information from a verification token for a specific portable consumer device it accesses databases for its record of the valid digital fingerprint and compares the received fingerprint against the valid digital fingerprint to assess a degree of similarity and to determine if the fourth validation test has been passed e.g. the degree of similarity between the two fingerprints is above a selected level or has been failed e.g. the degree of similarity between the two fingerprints is below the selected level . To implement the fourth validation test validation entity may comprise code embodied on computer readable medium that directs data processor to obtain the stored valid digital fingerprint for the account from one of databases and code that directs data processor to compare the received digital fingerprint and the stored valid digital fingerprint for similarity to determine if the forth test is passed sufficient similarity or failed not sufficient similarity . The latter code may comprise code that directs data processor to generating a value representative of the similarity between the two fingerprints by applying one or more correlation functions to the fingerprints and comparing the value against a selected level. Such correlation functions also known as probabilistic models are known to the credit card art. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

As a fifth validation test validation entity may perform a fifth validation test that compares a variable datum e.g. CVC3 dCVV cryptogram received as part of the identification information if present with a set of one or more acceptable values for the variable datum that validation entity has for the account number provided as part of the identification information. If the values match validation entity can deem the fifth validation test as being passed. There are number of ways that the variable datum can be configured to vary with time. As some examples the variable datum can be configured to have its value vary with each use of portable consumer device and device can provide a counter value in the datum or along with the datum. Validation entity or a payment processing network can use the counter value to determine what value the variable datum should have for the given counter value. This determination may be done based on an algorithm that is a function of the counter value and or other possible variables or a look up table whose entries are correlated to the counter value the table may be cyclically repeated . The algorithm may comprise one or more random number generators each of which accepts a starting seed value whose value can be selected to customize the algorithm to a particular portable consumer device . The values of the look up table may be based on the output of the algorithm. The variable datum may also be based on time date or other information known to both verification token and entity which may or may not use a counter value. Additional ways of generating the values of a variable datum are discussed in U.S. patent application Ser. No. 10 642 878 entitled Method and System for Generating a Dynamic Verification Value filed on Aug. 18 2003 now issued as U.S. Pat. No. 7 761 374 and in U.S. patent application Ser. No. 11 764 376 entitled On Line Payment Transactions filed on Jan. 29 2008 now issued as U.S. Pat. No. 7 740 168. Both of these applications are incorporated herein by reference in their entirely for all purposes. In some implementations there may be slight differences in the starting information that device and entity use in generating their respective datum values such as differences in the times of their clocks and entity may generate a set of acceptable datum values based on possible slight differences in the starting information and may compare the datum value received from device with each member of the set to determine if a match exists.

A cryptogram which typically has more characters than a CVC3 value or a dCVV value may be generated by an algorithm in a similar way as described above except that a piece of transaction information is usually included as an input to the algorithm. As previously described below if token seeks a cryptogram from a cryptogram enabled device it provides device with dummy transaction information which is known to both token and validation entity but not known to the general public. When the variable datum received by entity from token comprises a cryptogram which may be deduced from the character length of the variable datum or the account number of the device validation may look up the dummy transaction information in one of its databases based upon the serial number of token . Validation entity may determine the identity of the issuing bank for the device based on the device s account number and may request the current value of the card s Application Transaction Counter ATC from the issuing bank . Entity may then generate the cryptogram based on the dummy transaction information the ATC and other information used in the algorithm and compare the generated cryptogram with the cryptogram received from token . If the cryptograms match validation entity can deem the fifth validation test as being passed. In some implementations there may be slight differences in the ATC values that device and entity use in generating their respective cryptograms and entity may generate a set of acceptable cryptograms based on small incremental differences in the ATC value and may compare the cryptogram received from device with each member of the set to determine if a match exists. If a match cannot be found the fifth validation test is deemed to have been failed. As another approach validation entity may forward a request for the cryptogram s value to the issuing bank along with a copy of the dummy transaction information. Validation entity may then compare the cryptogram received back from the issuing back to that received from token to determine whether there is a match. As yet another approach validation entity may forward the dummy transaction information and the cryptogram received from token to the issuing bank with a request that the bank determine whether the cryptogram is valid or not and to send its determination to validation entity . Validation entity may then determine that the fifth validation test is passed if the bank sends an indication that the cryptogram received from token is valid and failed otherwise.

Before receiving identification information for a portable consumer device from a token the issuing bank for the device may provide validation entity with the look up table algorithm including any seed values or other data elements that the device uses to generate the device s variable datum e.g. CVC3 dCVV or cryptogram which entity may store in one of its databases . When validation entity receives identification information from a verification token for a specific portable consumer device it accesses its record of the look up table algorithm or other data elements for the specific device to determine its value or set of values for the device s variable datum and compares the received value for a variable datum e.g. CVC3 dCVV or cryptogram against its value or set of acceptable values for the variable datum to determine if the fifth validation test has been passed e.g. a match in values is found or has been failed e.g. a match has not been found . To implement the fifth validation test validation entity may comprise code embodied on computer readable medium that directs data processor to access the one or more stored data elements used to obtain the variable datum for the account from one of databases code that directs data processor to obtain one or more acceptable values for the variable datum from the one or more stored data elements and code that directs data processor to compare the received variable datum and the one or more acceptable values for a match to determine if the fifth test is passed a match is found or failed a match is not found . The code that directs data processor to obtain one or more acceptable values may be based upon the look up table method described above or any of the algorithm based methods described above. The codes may include instructions that direct data processor to determine if a received variable datum comprises a cryptogram and if so to obtain the dummy transaction information from a database based upon the serial number of the token. Depending upon the implementation for processing cryptograms the code may further include instructions that direct data processor to determine the identity of the issuing bank and to obtain an ATC value for the device from the bank and to generate one or more acceptable values of the cryptogram using the dummy transaction information the ATC value and other inputs used in the algorithm. Also the code may further include instructions that direct data processor to send the account information and the dummy transaction information to the identified issuing bank with a request for one or more acceptable cryptogram values. Also instead of directing processor to obtain one or more acceptable cryptogram values and to compare the cryptogram received from token to the acceptable cryptogram values the code may include instructions that direct data processor to obtain the dummy transaction information as described above to identify the issuing bank as described above to send the account information dummy transaction information and the cryptogram received from token to the identified bank with a request that the bank send back an indication of whether or not the cryptogram is valid and to pass or fail the fifth validation test based on the indication sent back by the issuing bank. The above codes can be implemented with conventional I O instructions API function calls to databases memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

Validation entity may be configured to perform one or more of the above validation tests and may be configured to send the validated identification information to merchant as described above and to optionally send a dCCV2 value to verification token and or merchant and to payment processing network if one or more of the tests are passes. Validation entity may comprise code embodied on computer readable medium that directs data processor to execute a selected one or more of the validation tests and track the pass fail results and code that directs data processor to take the above actions if a selected number of tests have been passed.

Since the dCVV2 value is being sent to both the merchant directly or relayed through verification token and the payment processing network which may forward it to the issuing bank validation entity may use any method to generate the dCCV2 value and need not use the method used by portable consumer device to generate the variable datum e.g. the CVC3 or dCVV . Validation entity may generate the dCVV2 values using a pseudo random number generator or a look up table or a sequential counter such as when distributing the values from that counter over different accounts . The dCVV2 generation process can be done on a per transaction basis fully dynamic or for a group of transactions semi dynamic the latter being for a particular device or a group of devices . If two or more devices are assigned under a common account number the identification information sent by token may comprises a device identifier as well as an account number and validation entity may use the device identifier to distinguish between the devices and to generate different dCVV2 values for the devices that are under a common account number. Validation entity may use a particular dCVV2 value for a particular device over a selected time period such as three days and then select another dCVV2 value for the particular device for the next selected time period and so on. Moreover validation entity may receive the dCVV2 values to use during the selected time periods from the issuing bank of the device in advance of the selected time periods and store them for later use as determined by entity s clock. This permits validation entity to omit the action of sending the dCVV2 values to payment processing network . The device verification value provided by validation entity may have the same format as the CVC3s and dynamic CVVs dCVVs output by existing smartcard credit cards e.g. a string of 3 or 4 numbers . As another approach validation entity may send a message to the issuing bank for portable consumer device to request a value to provide as the dCVV2 value this request may include the account number and any device identifier. The above codes and actions can be implemented with conventional I O instructions memory access instructions CPU arithmetic instructions CPU logic instructions and CPU control instructions. In view of this disclosure the codes may be implemented by one of ordinary skill in the art without undue experimentation.

Exemplary Merchant Computer may comprise a system having one or more servers coupled to a communications networks and that can interact with the user through computer to arrange a purchase transaction and receive identification information and other information regarding the transaction from validation entity to process e.g. to correlate with open transactions and to complete correlated open transactions . One of the servers of merchant is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a operator interface one or more databases and a networking facility the latter of which is coupled to first and second communications networks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of Merchant to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of merchant . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of Merchant computer also comprises one or more network services modules that can access networking facility and set up communications sessions to entities on communications networks and . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Merchant computer conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Merchant computer comprises a plurality of codes embodied on computer readable medium for directing data processor s to conduct various actions. Merchant computer may comprise a first code that directs data processor s to present a website portal to computers that provides various web pages that enable users to select products and or services for purchase and that provides each such user with a checkout web page where the user s payment information can be entered. The first code may direct data processor s to require the user to login into the user s previously created merchant side account before reaching the checkout web page. In this manner merchant computer will know the user s name which will enable it to correlate validated identification information from validation entity to the active purchase session. The user merchant side account may also store the account numbers of one or more portable consumer devices or the last four digits thereof that user has registered for use at the merchant site. The above aspects of the first code may be implemented by generating and outputting various HTML and XML pages to the user s computer and other codes known to the art for implementing online merchant websites. This aspect of the first code is known to the art and can be implemented by one of ordinary skill in the art without undue experimentation.

As a novel aspect compared to the prior art the first code may further direct data processor s to provide a transaction identifier within the URID of the checkout web page or within the contents of the checkout web page such as in an HTML or XML field or the like where the field may be visible or hidden. This transaction identifier can be read by verification token as described above and feedback to merchant computer via validation entity along with the identification information of a portable consumer device and can thus further help merchant computer correlate information from validation entity to one of the active purchase sessions being handled by processor s under the direction of the first code. An another novel aspect the first code may further direct data processor s to provide a merchant identifier within the URID of the checkout web page or within the contents of the checkout web page such as in an HTML or XML field or the like where the field may be visible or hidden. In those cases where device token and or validation entity are not co branded with the merchant the merchant identifier will enable validation entity to determine the identity of the merchant and the communication channel e.g. URID to use to relay information to the merchant. The above novel aspects can be implemented with HTML XML code or the like without undue experimentation by one of ordinary skill in the art in view of this disclosure. As a further novel aspect the first code may direct data processor s to create a data structure stored in tangible computer readable memory that lists each active purchase session and the user s name the identity of the user s merchant side account and or transaction identifier for each active purchase session. In order to facilitate the ability to send inter process communications the data structure also preferably lists the corresponding process identification number for the purchase session. Typically the first code will direct the data processor s to create a respective process thread for each active purchase session where each process thread will execute a section of the first code for the active purchase session. As another approach where the network address e.g. IP address of the user s computer is used for the transaction identifier the first code may direct data processor s to create a data structure stored in tangible computer readable memory that lists each active purchase session the network address of the corresponding user computer for that active purchase session and corresponding process identification number for the purchase session. This data structure may optionally include the user names and identities of their merchant side accounts. In view of this disclosure this aspect of the first code can be readily implemented using conventional computer control and memory access instructions by one of ordinary skill in the art without undue experimentation.

Merchant computer may further comprise a second code that directs data processor s to receive messages from validation entity and to correlate the data in each received message to one of the active purchase sessions. A secure communication channel may be established between merchant computer and validation entity and the second code may direct data processor s to handle the session encryption keys and mutual authentication with validation entity which may include decrypting the data sent in the messages form entity . In the case where device is cobranded with the merchant the second code may direct data processor s to identify the user s merchant side account based upon the account number received in the information sent by validation entity and to thereafter identify the active purchase session based upon the identity of the merchant side account. In some cases this can be simplified when the identification information of device contains the identity e.g. account number of the user s merchant side account. In cases where token is cobranded with the merchant validation entity may send the serial number of token to merchant computer and the second code can direct data processor s to identify the user s merchant side account based upon the serial number of the token the serial number being uniquely assigned among the tokens and to thereafter identify the active purchase session based upon the identity of the merchant side account. In cases with device and token are not cobranded with merchant and the second code can direct data processor s to identify the user s merchant side account based upon the user name provided in the data sent by entity . In cases where there are several user merchant side accounts with the same user name the second code may direct processor s to select the merchant side account that is active and or the merchant side account that has the same address information or network address of computer as present in the data sent by entity and or the merchant side account that has a previously registered bank account number PAN or portion thereof that is the same that as provided in the message from entity . Also if a transaction identifier is present within the message sent by entity the second code may direct data processors s to identify the active purchase session based upon the transaction identifier received from entity . As indicated above this transaction identifier may comprise the network address e.g. IP address of the user s computer . For these various correlation approaches the second code may direct data processors s to access one of the above described data structures of active purchase sessions created under the direction of the first code. In view of this disclosure the second code can be readily implemented by one of ordinary skill in the art without undue experimentation using computer control and memory access instructions function calls to network services operating system calls database function calls etc.

Once the active purchase session is identified by data processors s the second code may direct data processor s to send the data provided in the message from entity to the identified e.g. correlated active purchase session. This can be done by a inter process communication of data from the process thread that is executing the second code to the process thread that is executing a section of the first code for the active purchase session. The inter process communication may be accomplished by appropriate function calls to the operating system which are known to the art. In response to receiving the inter process communication the process thread for the active purchase session accepts the provided data and updates its data structure with the received payment information present in the data. This can include placing the substitute account number as the PAN for the transaction and placing the payment processing number in an appropriate discretionary field that is pre agreed upon with payment processing network . This action may be directed by a section of the first code that is being executed by the process thread for the active purchase session. This part of the first code may comprises a third code that directs data processor s to resend the merchant checkout page to the user s computer with an indication that the payment information has been received. This indication may take the form of providing a merchant checkout page with asterisk characters filling in the fields for the payment information. The process thread under the direction of the first code is now ready to receive the user s final approval and commitment to the purchase such as by waiting for and receiving the user s submission of the checkout page such as by the user s clicking on the Submit button or Continue button on the checkout page. Once the user s submission is received the first code directs data processor s to submit the standard transaction approval request which is sent to payment processing network which is typically sent by way of acquiring bank . In view of this disclosure the second code can be readily implemented by one of ordinary skill in the art without undue experimentation using computer control and memory access instructions function calls to network services operating system calls database function calls etc

It may be appreciated that in some co branded embodiments validation entity and merchant computer may be two components owned and operated by a merchant.

In view of the above discussion it may be appreciated that a method that can be conducted by a merchant may comprise presenting from a server a website portal providing various web pages that enable a plurality of users to select at least one product or service for purchase the code directing the data processor to create an active purchase session for each user that is actively pursuing a purchase receiving messages from one or more validation entities each validation messaging including data representative of at least a portion of the identification information of a portable consumer device and correlating the information received in a message from a validation entity to an active purchase session.

In some of the above exemplary embodiments the merchant website provides a transaction identifier on its merchant checkout page and verification token obtains the transaction identifier and sends it to validation entity . In turn entity can send the transaction identifier to merchant with the other information it normally sends so that merchant can correlate the information received from entity to an active purchase session. It is also possible that validation entity can generate this transaction identifier and send it to both verification token and merchant to assist in the correlation process at the merchant computer. The transaction identifier may take the form of a dummy personal account number PAN generated by entity and which token enters into the PAN field of the merchant checkout page. The dummy PAN may start with a sequence of numbers that the merchant recognizes as a dummy PAN e.g. a dummy bank code and may be unique over a certain time duration such as a week e.g. enough time to complete and process the transactions. User submits the merchant checkout page and the merchant computer system scans the PAN and recognizes it as a dummy PAN and then examines a queue of messages from entity for a matching message having the same dummy PAN as the transaction identifier. When found merchant computer system uses the payment information contained in the matching message. Instead of providing the transaction identifier as a dummy PAN to be placed in the PAN field of the checkout page the merchant may provide a separate field in the checkout page to enter it and a separate button for the user to click to submit the transaction number to the merchant. Merchant can then response by resending an updated checkout page that acknowledges receipt of the payment information and the user can commit to the purchase by clicking the Submit button or Continue button. Merchant computer system may further comprise codes that direct processor s to perform the above actions. Validation entity may further comprise codes that direct its processor s to generate a transaction identifier and to send the transaction identifier to both verification token and merchant computer system . Verification token may further comprises codes that direct its processor to receive the transaction identifier and to enter it on a designated field of the merchant checkout page such as the PAN field or another field provided by the merchant. The code is similar in construction to the code that directs processor to enter the dCVV2 value into the CVV field of the merchant checkout page.

In each of the embodiments described herein the communications between computer and validation entity may be facilitated by and or conveyed through a gateway e.g. a proxy server server entity etc. that is disposed between computer and validation entity . Such a gateway is shown at in . Gateway may act as an intermediary between a plurality of verification tokens A B . . . and their associated computers A B . . . on the one side and a plurality of validation entities A B . . . on the other side. Tokens A B . . . may be constructed and configured the same as token shown in and may interact with respective computers A B . . . respective users A B . . . and respective portable consumer devices A B . . . Computers A B . . . may be the same as computer shown in and may be coupled to the first communications networks as described above. First communications network second communications network merchant websites acquiring banks issuing banks and payment processing network are coupled to one another as described above. First and second communications networks are also coupled to a plurality of validation entities A B C . . . each of which may be constructed and configured the same as validation entity shown in .

In the below discussion of the embodiments and implementations shown in a reference number without a suffix A B or C generically refers to each of the suffixed items e.g. entity refers to each of A B C .

Gateway may receive one or more initial communications from one of verification tokens A B . . . via one of computer A B . . . in communication with the token and may determine from information in the initial communication s an appropriate one of a plurality of validation entities A B C . . . to use to fulfill the token s request. For example each verification token A B . . . may be configured to operate with portable consumer devices issued by many different issuing banks or other such entities and one or more of the validation entities may be configured to process requests from portable consumer devices issued by respective issuing banks or other such entities. Gateway may determine an appropriate one of validation entities A B C . . . based upon the identification information that the token read from a portable consumer device and sent to the gateway in an initial communication. For example a portion of the account number in the identification information may comprises an unique identifier assigned to the bank that issued the portable consumer devices from which the identification information was read.

In one implementation after gateway has determined an appropriate validation entity for the token s request the gateway may redirect the token to conduct further communications with the determined appropriate validation entity or may direct the determined validation entity to contact the token to conduct further communications. In another implementation all communications between the verification token and the determined appropriate validation entity may be conveyed through gateway after the gateway has initially determined the identity of the appropriate validation entity based upon one or more initial communications with the token . This latter implementation may comprise relatively simple passing through of communications between the token and the appropriate validation entity with minimal processing by gateway or may comprise having the gateway virtually presenting itself as the appropriate validation entity to the verification token. Such virtual presentation may involve gateway decrypting each message from the verification token communicating with the appropriate validation entity to formulate a response to the token s message and encrypting and sending a response message to the verification token. In each of the above implementations and in other implementations gateway may also conduct one or more validation tests on behalf of the appropriate validation entity particularly those related to validating the verification token. In this case the gateway does not need to send to the determined appropriate validation entity those communications it receives from the token that pertain to validation tests that the gateway is handling. Gateway may be associated with or operated by payment processing network or the owner thereof. It may be appreciated that in each of these implementations Gateway acts as an entity that can provide a device verification value dCVV2 value to token just as in the case that validation entity can provide a device verification value to token when entity is directly contacted by token .

Referring to gateway comprises a system having one or more servers coupled to a communications network that can receive a request from a verification token to process as described above. One of the servers of gateway is shown in the server comprises one or more processors electrically coupled to each of a tangible computer readable medium a user interface one or more databases and a networking facility the latter of which is coupled to first and second communications networks and . User interface comprises one or more video output devices e.g. displays screens and one or more input devices e.g. keyboard mouse trackball etc. which enable an administrator of gateway to receive information from the server and to provide input to the server. Computer readable medium may comprise a combination of semiconductor memory and non volatile storage such as one or more disk drives and or non volatile memory.

Computer readable medium stores an operating system for the server which enables processes and applications to be run by processor s and enables codes for directing the operation of processor s to be run. The operating system provides services to these processes and applications and enables these processes and applications to access components of user interface portions of computer readable medium networking facility and other components of entity . The operating system may be full featured. Specifically the operating system provides one or more I O communications modules that enable processor s to communicate with user interface and databases . Each I O communications module has an application programming interface API with a collection of functions that a processor can call in order to access the components. The operating system of entity also comprises one or more network services modules that can access networking facility and set up communications sessions to entities on communications networks and and with SMS relay server . Such network services modules include Microsoft s Windows Communications Foundation e.g. .NET 3.0 .NET 4.0 etc. Apple s CFNetwork Framework the networking section of the Unix and Linux operating system kernels and the OS Services Layer and the Base Services Layer of the Symbian operating system and the like. Each of these network services modules can be non exclusive e.g. capable of serving more than one processor and more than one process application and each provides an application programming interface API which has a collection of functions that a processor can call in order to manage communications with another entity. With these API facilities a collection of API function calls can be readily constructed for a processor to execute that enables the processor to establish a communications channel with an entity on a communications network coupled to networking facility and to exchange messages and data with the entity. The above operating system modules and APIs all include instructions that direct the operation of processor s .

One or more databases may be configured as database servers which processor s can access via networking facility over a private communications network which is illustrated by the dashed line in . Gateway conventionally has a clock for tracking time and dates for various applications. Clock may be a simple counter of seconds or fractions thereof that can be read by processor by an I O operation or may comprise a more complex arrangement of hardware or firmware that can provide the various components of the current date and time year month day hour minute and second in various registers that can be read by processor through the execution of one or more I O operations.

Gateway may comprise code embodied on computer readable medium that directs data processor to communicate with a computer and an associated verification token using networking facility over communications network . This code may include instructions that establish a communications session with computer including the option of establishing an SSL session with mutual authentication and encryption based on a triple DES algorithm and instructions for sending and receiving messages to verification token through the communications session. Gateway may further comprise code embodied on computer readable medium that directs data processor to receive encrypted identification information sent by verification token and code that directs data processor to decrypt the encrypted identification information. The identification information may be encrypted by a session key of an SSL session or by an encryption key stored in verification token and known to gateway or may be doubly encrypted by both keys. The latter key may be uniquely assigned to the token as described above. Gateway may further comprise code embodied on computer readable medium that directs data processor to determine from the received identification information and or the token s identity e.g. the token s serial number the appropriate one of the validation entities A B C . . . to be used for further processing of the request from verification token . For this data processor may access one of databases for a correlation list that relates identification information or portions thereof to validation entities and or for a correlation list that relates token identifiers to validation entities and may then compare the information received from the token with the correlation list s to determine the appropriate one of the validation entities . Gateway may further comprise code embodied on computer readable medium that directs data processor to apply one or more validation tests as previously described above and to continue processing the request from token if a selected number of validation tests are passed. Various ways of continuing the processing are described below in various possible implementations of gateway . The above codes for gateway and codes for gateway described below may be implemented in any number of programming languages. Furthermore one of ordinary skill in the art will be readily able to construct instructions to implement these codes in view of this disclosure without undue experimentation.

In one implementation gateway may further comprise code embodied on computer readable medium that directs data processor to send a communication to token by way of its associated computer informing the token to contact the determined appropriate validation entity to process its request. This communication may include a URID for the determined appropriate validation entity. Token may then communicate with the determined appropriate entity as described above and no changes to entity are needed. In this implementation of gateway the code may further direct data processor to send a communication to the determined appropriate validation entity that informs the entity of the request from the token along with an indication of the identification information sent by token and informs the entity that the token will be contacting it for a dCVV2 value for the identification information as sent to gateway by the token . This communication by gateway can serve as an additional security measure that assures the appropriate validation entity that the subsequent contact by token is legitimate.

In another implementation gateway may further comprise code embodied on computer readable medium that directs data processor to send a communication to the determined appropriate validation entity with the identification information and other information received from the verification token and with a request for the validation entity to process the request and to send the dCVV2 value or other information as outlined above to the verification token by way of its associated computer . This communication to the determined appropriate validation entity may include a URID for the verification token . The codes of the validation entity previously described above may be augmented to direct the entity s processor to receive above described communication from gateway and to initiate communications with the requesting token . The codes of validation entity need not need to direct the entity s processor to receive the identification information from the requesting token as that may have been provided to the entity by gateway however as an added security measure the requesting token may provide the identification information to entity and the entity may include the code to receive the identification information and other information from the token. In this implementation of gateway the code for gateway may further direct data processor to send a communication to the verification token via the associate computer informing the token that the determined appropriate validation entity will be communication with it to potentially send a dCVV2 value.

Other exemplary embodiments for Gateway are possible and are described in co pending patent application Ser. No. 12 780 657 entitled Verification of Portable Consumer Devices filed May 14 2010 the contents which is incorporated in their entirety by reference for all purposes.

From the above description it may be appreciated that validation entities and gateway are separate entities from computers and are separate entities from verification tokens . It may also be appreciated that in several embodiments and implementations thereof that computers validation entities and gateway are addressed as separate network nodes on communications network e.g. have different network addresses in the communication packets and that tokens communicate through the network nodes of computers to entities and or gateway e.g. computers construct and decode network communication packets for tokens . It may be also appreciated that in several embodiments and implementations of token token may unconditionally send the read identification information to validation entity and or gateway without requiring a validation between the token and the user such as may be provided by the entry of a PIN or the provision of a biometric sample e.g. fingerprint and that token may send the read identification information in a relatively short amount of time such as within one minute of being read and typically within ten seconds .

Embodiments of the invention are not limited to the above described embodiments. For example although separate functional blocks are shown for an issuer payment processing system and acquirer some entities perform all of these functions and may be included in embodiments of invention.

It should be understood that various embodiments of the present invention as described above can be implemented in the form of control logic using computer software in a modular or integrated manner. Based on the disclosure and teachings provided herein a person of ordinary skill in the art will know and appreciate other ways and or methods to implement embodiments of the present invention using hardware and a combination of hardware and software.

Any of the software components or functions described in this application may be implemented as software code to be executed by a processor using any suitable computer language such as for example C C C Java C or Perl using for example conventional or object oriented techniques. The software code may be stored as a series of instructions or commands on a computer readable medium such as a random access memory RAM a read only memory ROM a magnetic medium such as a hard drive or a floppy disk or an optical medium such as a CD ROM. Any such computer readable medium may reside on or within a single computational apparatus and may be present on or within different computational apparatuses within a system or network.

The above description is illustrative and is not restrictive. Many variations of the invention and embodiments thereof will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention should therefore be determined not with reference to the above description but instead should be determined with reference to the pending claims along with their full scope or equivalents.

One or more features from any embodiment may be combined with one or more features of any other embodiment without departing from the scope of the invention.

A recitation of a an or the is intended to mean one or more unless specifically indicated to the contrary.

All patents patent applications publications and descriptions mentioned above are herein incorporated by reference in their entirety for all purposes. None is admitted to be prior art.

