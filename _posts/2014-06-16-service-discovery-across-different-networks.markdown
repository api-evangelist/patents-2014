---

title: Service discovery across different networks
abstract: Systems and techniques for service discovery and media sharing are described. For example, a described technique includes identifying, at a first device, a streaming service; receiving a request to establish communication with a second device, the first device and the second device being on different first networks, the first networks being different local multicast networks; and providing, in response to the request, service information to the second device to cause the second device to internally publish multicast domain name system (mDNS) information regarding the streaming service such that the streaming service is (i) discoverable by the second device via a mDNS query and (ii) accessible through a second network that interconnects the first networks.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09350559&OS=09350559&RS=09350559
owner: Asurion, LLC
number: 09350559
owner_city: Nashville
owner_country: US
publication_date: 20140616
---
Devices can use a multicast domain name system mDNS service to publish and discover services e.g. printing media file sharing on the same local multicast network. For example a printer can publish its printing service via mDNS using a multicast data packet other devices receiving the packet can discover the service and make the printing service available to applications such as a word processor. In another example a media hub can publish its media service via mDNS other devices can discover the service and start receiving content from the media hub. Further wireless devices such as cellphones smartphones or tablets can include a mDNS service process to publish or discover services on the same local wireless multicast network.

This document describes among other things technologies relating to service discovery such as for use for media sharing. In one aspect a described technique includes receiving at a first device e.g. target device viewee device etc. service information for a streaming service provided by a second device e.g. host device viewer device etc. the first device and second device being on different first networks the first networks being different local multicast networks inserting an entry in a mDNS cache of the first device based on the service information such that the streaming service is discoverable by the first device via a mDNS query and accessible through a second network that interconnects the first networks and sending streaming information from the first device to the second device through the second network for the streaming service. Other forms of this aspect may include corresponding systems apparatus and computer software encoded on a non transitory computer readable storage medium.

These and other implementations may include one or more of the following features. Implementations can include receiving a request to share a display of the first device with the second device. In some implementations inserting the entry is conditional based on an acceptance of the request. Sending streaming information can include streaming display data associated with a display of the first device. The second device can be configured to reproduce the display of the first device using the display data. Sending streaming information can include streaming audio data. Implementations can include performing the mDNS query based on a service type and a domain the service type being associated with the streaming service provided by the second device. Sending the information can include using an network address that is returned by the mDNS query. Performing the mDNS query can include searching the mDNS cache sending an Internet Protocol IP multicast packet or both to discover hosts that provide the service type. Receiving the service information can include receiving over a unicast connection through the second network a version of a mDNS service record that was published by the second device on a corresponding one of the first networks. Implementations can include establishing a virtual private network VPN tunnel between the first device and the second device over the second network. Sending the information can include transmitting data packets through the VPN tunnel. In some implementations the service information can include a VPN address of the second device that is associated with the VPN tunnel. The entry can include a name associated with the streaming service and the VPN address of the second device. Establishing the VPN tunnel can include establishing the VPN tunnel with a VPN server using an Internet Protocol security IPsec protocol. Other forms of this aspect may include corresponding systems apparatus and computer software encoded on a non transitory computer readable storage medium.

These and other implementations may include one or more of the following features. In another aspect a technique can include providing at a first device a streaming service receiving a request to establish communication with a second device the first device and the second device being on different first networks the first networks being different local multicast networks and providing in response to the request service information to the second device to cause the second device to internally publish mDNS information regarding the streaming service such that the streaming service is discoverable by the second device via a mDNS query and accessible through a second network that interconnects the first networks. Implementations can include receiving a media stream from the second device through the second network and forwarding the media stream to a third device. Receiving the request can include receiving a request from the third device. Implementations can include establishing a VPN tunnel between the first device and the second device over the second network and receiving a media stream from the second device through the VPN tunnel. The service information can include a VPN address of the first device that is associated with the VPN tunnel. Establishing the VPN tunnel can include establishing the VPN tunnel with a VPN server using an IPsec protocol.

In another aspect an apparatus can include a memory configured to store data including a mDNS cache a network interface configured to exchange data on at least a first network and a processor coupled with the memory and the network interface. The processor can be configured to receive over the first network service information for a streaming service provided by a host device that resides on a second network the first network and the second network being different local multicast networks insert an entry in the mDNS cache based on the service information such that the streaming service is discoverable by the apparatus via a mDNS query and accessible through a third network that interconnects the first network and the second network and send streaming information to the host device for the streaming service through the third network.

This and other implementations may include one or more of the following features. Implementations can include a display coupled with the processor where the processor is configured to receive a request to share the display with the host device and where the entry is inserted in the mDNS cache based on an acceptance of the request. The streaming information can include display data associated with the display and where the host device is configured to reproduce the display using the display data. The streaming information can include video data audio data or both. The processor can be configured to perform the mDNS query based on a service type and a domain the service type being associated with the streaming service provided by the host device and send the streaming information based on an network address that is returned by the mDNS query. The mDNS query can include searching the mDNS cache sending an IP multicast packet or both to discover hosts that provide the service type. The processor can be configured to establish a VPN tunnel with the host device over the third network and send the streaming information through the VPN tunnel. The service information can include a VPN address of the host device that is associated with the VPN tunnel. The entry can include a name associated with the streaming service and the VPN address of the host device. In some implementations the VPN tunnel is configured to use an IPsec protocol.

In another aspect a system can include a host device configured to provide a streaming service and a server. The server can be configured to receive a request to establish communication with a target device the host device and the target device being on different first networks the first networks being different local multicast networks. The server can be configured to provide in response to the request service information to the target device to cause the target device to internally publish mDNS information regarding the streaming service such that the streaming service is discoverable by the target device via a mDNS query and accessible through a second network that interconnects the first networks.

This and other implementations may include one or more of the following features. The host device can be configured to receive a media stream from the target device through the second network and forward the media stream to a viewer device. The request can be responsive to a request transmitted by the viewer device. The host device can be configured to establish a VPN tunnel with the target device over the second network and receive a media stream from the target device through the VPN tunnel. In some implementations the service information includes a VPN address of the host device that is associated with the VPN tunnel. In some implementations the VPN tunnel is configured to use an IPsec protocol.

Particular configurations of the technology described in this document can be implemented so as to realize none one or more of the following potential advantages. A described technology can be used to extend a discovery range of a streaming service beyond a local network. For example devices on different local multicast networks can discover services on the other network. A discovery range of a streaming service can be extended without modifying a native application that is configured to use the streaming service. For example a media sharing application can republish service information such that an unmodified streaming service client application can automatically detect the new streaming service and begin using the service.

Details of one or more implementations of the subject matter described in this document are set forth in the accompanying drawings and the description below. Other features aspects and potential advantages of the subject matter will become apparent from the description the drawings and the claims.

Devices can employ one or more service discovery routines to rapidly find and use services provided by other devices. Various examples of protocols for service discovery include DNS Based Service Discovery DNS SD and multicast DNS mDNS . One particular protocol implementation is Bonjour. Bonjour has features including service discovery hostname resolution and address assignment. However some service discovery protocols use multicast data packets and may be limited to a local multicast network. Thus devices on different local multicast networks may not be able to discover each other because their multicast data packets may not be routed beyond their respective local multicast networks.

As a result of limiting mDNS service publication to a local network devices on a different local network will not receive the multicast IP packet and accordingly will not discover the service being provided by device . Moreover the local networks may be using private IP addresses that are not by themselves routable on the Internet. For example both local networks may be using the private IP address space of 192.168.0.0 16 or both may be using the 169.254.0.0 16 for link local addressing. As a result the network address contained in the multicast IP packet for reaching the service would be a private address that is not routable on the public network .

To solve this problem service information contained in the multicast IP packet can be forwarded to a device on a different local network . In some implementations an intermediary server can perform such forwarding. In some implementations the intermediary server can provide a medium e.g. a website that enables devices to discover each other and one or more associated services. For example device can inform the intermediary server that it is providing the service e.g. send information including a service identification string and a network address port to reach the corresponding service via a network pathway on the public network such as a VPN tunnel . To create a network pathway between device and device a VPN tunnel for example can be formed between these devices. In some implementations device and device independently establish connections with the VPN server and are assigned respective VPN addresses. Thereafter data packets addressed with a VPN address can flow between the devices via the VPN server . The service information provided to the device on a different local network can include a VPN address of the device providing the service such that the device would use the VPN address to access the service .

Upon receiving the forwarded service information from the intermediary server device can process the forwarded service information by using a mDNS internal republication routine . The republication routine can internally publish 125 the service information by inserting a record for the service in a local mDNS cache of device . In some implementations internally publishing mDNS information can include inserting a service record into the local mDNS cache without transmitting or receiving a mDNS multicast packet. Applications executing on device can discover the service when they trigger a DNS query e.g. a mDNS query using a name associated with the service such as a service identifier string. A response to the DNS query can include information based on one or more records matching in whole or in part a service identifier string contained within the DNS query.

A wireless access point AP can provide wireless connectivity between the viewee device and the public network . Another wireless AP can provide wireless connectivity between the media server and the public network . The viewee device can communicate with the media server through a VPN tunnel . A VPN server can be configured to provide the VPN tunnel . In some implementations the VPN server is configured to secure the VPN tunnel by using an Internet Protocol security IPsec protocol. In some implementations the VPN server is configured to use a Point to Point Tunneling Protocol PPTP .

The viewer device can send a request to the media server for establishing a remote viewing session with the viewee device . In turn the media server can cause the viewee device to internally publish the streaming service provided by the media server for example by sending service information for the service to an application running on the viewee device that is configured to perform an internal publication. Based on a user approval at the viewee device and discovery of the streaming service after internal publication a media stream can be streamed from the viewee device to the media server which can provide the media stream to the viewer device . In some implementations the viewee device uses a first protocol such as Apple s AirPlay protocol to stream display data to the media server and the media server uses a second protocol such as a Hypertext Transfer Protocol HTTP based streaming protocol to stream the received display data to the viewer device via a website. As depicted by the media server and the viewer device are different devices. However in some implementations the media server and the viewer device are the same device.

In some implementations the viewee device and media server can use Bonjour from Apple. Bonjour includes mechanisms for publishing discovering and using IP based services. Bonjour supports three fundamental operations each of which is a part of zero configuration network services Publication e.g. advertising a service Discovery e.g. browsing for available services and Resolution e.g. translating service instance names to addresses and port numbers for use . Apple s AirPlay protocol uses Bonjour. For example the media server can advertise its streaming service e.g. an AirPlay media service on a local network associated with AP using Bonjour. Note that such advertising on the local network can use a private non routable IP address of the media server for a local network provided by AP

Typically AirPlay publishes two services to the local network to inform others on the network that there is an available destination where wireless devices such as mobile phones based on the iOS operating system are available for screen sharing. These services have names and associated port numbers for example  airplay. tcp. and port are for video streaming and  raop. tcp and port are for sound streaming. However Bonjour local service discovery is based on multicast DNS and therefor can be limited to the local network. Since the viewee device is on a different local network the media server can directly send service information which includes AirPlay s service names and port numbers to the viewee device . Rather than receiving a mDNS multicast packet from the media server the service information can be sent over a unicast connection via public network and an application on the viewee device can directly insert the unicasted service information into a mDNS data structure such as a cache. For example the viewee device can use an application programming interface API provided by a C library called DNS SD for publishing and discovering DNS services on a local network. Based on receiving the service information over a unit connection the viewee device can use the DNS SD library to internally publish two AirPlay bonjour DNS services airplay. tcp and  raop. tcp which can cause entries to be inserted into a mDNS cache that are based on the received service information. In the example of the IP address included the inserted entries for the media server will be one that is reachable by the viewee device i.e. the IP address of the destination is the IP address of the media server provided by the VPN tunnel and not for example a private non routable IP address of the media server for a local wireless network provided by AP

If the request is accepted at an accept response is sent to the viewer device at . At service information is received for a streaming service provided by a viewer device. The viewee device and viewer device are on different local multicast networks. In some implementations receiving the request is combined with receiving the service information e.g. the request includes the service information. In some implementations the viewer device sends the service information based on receiving the accept response. Service information can include a service type value domain name network address such as an IP address and one or more service parameters associated with the service type value. Various examples of service parameters can include a device identifier session identifier server version encryption key encryption initialization vector latency value or timestamp. Other types of service parameters are possible.

At an entry is inserted in a mDNS cache of the viewee device based on the service information. Inserting an entry in a mDNS cache can include calling a routine of a mDNS library using one or more data elements of the service information such as a domain name service type network port value and a network address. The mDNS routine can cause an entry to be created and inserted into the viewee device s mDNS cache.

At an application on the viewee device is invoked to discover the streaming service including performing a mDNS query based on a service type and a domain name. In some implementations the application is a display sharing application such as a client that is complaint with Apple s Airplay protocol. In some implementations the application uses predetermined values for the service type and the domain name for the mDNS query. In some implementations performing the mDNS query can include searching the mDNS cache sending a multicast packet on a local network or both to discover hosts that provide the service type. In some cases the mDNS query can return multiple providers of the service type. In such cases the viewee device can select one of the providers before proceeding. Selecting a provider can include prompting for and receiving user input.

At a result of the mDNS query is used to stream display data associated with the display to the viewer device. The result of the mDNS query can include a network address such as an IP address associated with the viewer device. using the result at can include establishing a TCP connection with the viewer s IP address placing display data and or audio data into data packets and sending the data packets over the TCP connection. In some implementations an application can transmit an H.264 encoded video stream over a TCP connection. In some implementations the video stream is packetized with a 128 byte header. In some implementations the video stream includes an associated Advanced Audio Coding AAC audio stream such as one based on AAC ELD. The audio stream can be transmitted in accordance with the AirTunes protocol. In some implementations a master clock associated with the streams can be synchronized using a Network Time Protocol NTP .

At the web server sends a notification to viewee device in response to the remote session request. In some implementations the notification is a push notification. In some implementations the notification includes a VPN address of the viewer device . In some implementations the notification includes service information that contains a service name corresponding to a streaming service provided by the viewer device a VPN address of the viewer device and a port number of a port listening for incoming streaming service communications.

At the viewee device performs a permission check in response to receiving the notification. In some implementations the permission check includes displaying a message on a display of the viewee device asking for permission to share the display of the viewee device with the viewer device . In some implementations receiving the notification causes a media sharing application to be launch that handles the permission check. In some implementations the media sharing application can require a user login or registration with a media sharing website which can be provided by web server . At the viewee device establishes a VPN connection with the VPN server based on a successful permission check. In some implementations the media sharing application uses a predetermined network address to reach the VPN server .

At the viewee device performs an internal publication based on a successful permission check. In some implementations the media sharing application performs the internal publication by using an API to access a mDNS process running on the viewee device . Performing the internal publication can include using a mDNS based API to insert an entry e.g. service record into a local mDNS cache. In some implementations the service record is for a streaming service based on service information contained in the notification. Once inserted the mDNS process can inform interested processes about the new record. For example a client on the viewee device that is associated with the steaming service can be launched to access the service. The client can retrieve one or more service records matching a service identifier associated with the streaming service. Upon retrieving the client can discover the streaming service provided by the viewer device . If there are multiple matching records the client can display a dialog box on a display of the viewee device to receive a user based input as to which viewer device to select. In the example shown viewer device can be selected by the user. At the viewee device sends stream data through the VPN tunnel to the viewer device . In some implementations the client associated with the steaming service sends the stream data.

At the web server sends a notification e.g. a push notification to the viewee device . In some implementations the web server retrieves a network address in a database that corresponds to the viewee identifier and sends the push notification to the retrieved network address. The push notification can include service information to enable the viewee device to use a streaming service provided by the media server . In some implementations the push notification includes a viewer identifier corresponding to the viewer device . In some implementations the push notification includes service information containing a VPN address of the media server .

At the viewee device performs a permission check in response to receiving the notification. In some implementations the permission check includes displaying a message on a display of the viewee device asking for permission to share the display of the viewee device . In some implementations the viewee device can send a status response to the web server to indicate that the notification is accepted rejected or ignored. In some implementations the web server can forward the status response to the media server .

At the media server establishes a VPN connection with the VPN server . In some implementations the media server establishes a VPN connection in response to an acceptant of the push notification. At the viewee device establishes a VPN connection with the VPN server in response to accepting the notification. At the viewee device performs an internal publication based on the service information contained within the notification. At the viewee device sends stream data through the VPN tunnel to the media server . At the media server sends the stream data to the web server . At the web server renders the stream data via a website. At the viewer device receives the stream data via the website. In some implementations the media server outputs e.g. to a converter an HDMI signal corresponding to the stream data. The converter can be configured to transform the HDMI signal into a web based streaming format such that the viewer device can view the web based stream via the website.

The wireless communication device can send and receive data packets over one or more wireless interfaces. For example the processor can send and receive data packets via one or more transceivers and antennas . Various examples of wireless interface technology include interfaces based on Long Term Evolution LTE Global System for Mobile Communications GSM IEEE 802.11a b g n ac and Code Division Multiple Access CDMA technologies such as CDMA2000 and WCDMA. Other types of wireless interface technologies are possible. The wireless communication device can download application software over one or more of these wireless interfaces and store the application software on a memory structure such as the NVM structure or the RAM structure . In some implementations the one or more transceivers are configured to use multicast over an IEEE 802.11 wireless standard to wirelessly transmit or receive multicast packets.

The NVM structure stores software such as a wireless device OS and application software such as a screen sharing application and mDNS routines that are accessible by a mDNS API. In some implementations the mDNS routines can read and write to a mDNS cache that is stored in the RAM structure . The processor can load software from the NVM structure into the RAM structure and can start to execute the software from the RAM structure . In some implementations the processor directly executes software from the NVM structure . In some implementations the processor includes multiple processor cores.

At and in response to the request service information is generated that includes a network address of the target device on a second network that interconnects the first networks. The service information can include a service name and a network port value. At the service information is provided to the target device to cause the target device to internally publish mDNS information regarding the streaming service such that the streaming service is discoverable by the target device via a mDNS query and accessible through the second network. At streaming data is forwarded from the target device to the requesting device. In some implementations the streaming data is received through a VPN tunnel from the target device and transmitted to the requesting device. Transmitting the streaming data to the requesting device can include streaming data through a web browser using a Transport Layer Security TLS or a Secure Sockets Layer SSL protocol. In some implementations both the requesting device and the target device log in to a service sharing website that is configured to exchange service sharing requests. In some implementations the requesting device is the host device. In some implementations the requesting device and the host device are separate devices.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium computer readable medium refers to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN peer to peer networks having ad hoc or static members grid computing infrastructures and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

Although a few implementations have been described in detail above other modifications are possible. Moreover other mechanisms for detecting impersonation on a social network may be used. In addition the logic flows depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. Other steps may be provided or steps may be eliminated from the described flows and other components may be added to or removed from the described systems. Accordingly other implementations are within the scope of the following claims.

