---

title: Methods, devices, and systems for communicating behavioral analysis information
abstract: Methods, systems and devices for communicating behavior analysis information using an application programming interface (API) may include receiving via the API a request to register the second module to access an operation of a behavioral monitoring system of the mobile computing device, and exchanging authentication information between the first module and the second module to accomplish mutual authentication. Aspects may include receiving via the API a request for version identification information that may be used by the server to determine how to interpret, evaluate, or crowd-source information, and exchanging version identification information between the first module and the second module to cause the second module to send the information to the server. Aspects may further include receiving via the API a provision malware model request including a command causing the first module to send a malware or classifier model to a behavioral monitoring system of the mobile computing device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09609456&OS=09609456&RS=09609456
owner: QUALCOMM Incorporated
number: 09609456
owner_city: San Diego
owner_country: US
publication_date: 20140724
---
This application is a continuation in part of U.S. patent application Ser. No. 13 796 595 entitled Communicating Behavior Information in a Mobile Computing Device filed Mar. 12 2013 which claims the benefit of priority to U.S. Provisional Patent Application No. 61 752 144 entitled Devices and Methods of Communicating Behavior Information in a Client Cloud Architecture filed Jan. 14 2013 U.S. Provisional Patent Application No. 61 646 590 entitled System Apparatus and Method for Adaptive Observation of Mobile Device Behavior filed May 14 2012 and U.S. Provisional Application No. 61 683 274 entitled System Apparatus and Method for Adaptive Observation of Mobile Device Behavior filed Aug. 15 2012 the entire contents of all of which are hereby incorporated by reference for all purposes.

This application also claims the benefit of priority to U.S. Provisional Application No. 61 971 172 entitled Methods Devices and Systems for Communicating Behavioral Analysis Information filed Mar. 27 2014 the entire contents of all of which are hereby incorporated by reference for all purposes.

Cellular and wireless communication technologies have seen explosive growth over the past several years. This growth has been fueled by better communications hardware larger networks and more reliable protocols. Wireless service providers are now able to offer their customers an ever expanding array of features and services and provide users with unprecedented levels of access to information resources and communications. To keep pace with these service enhancements mobile electronic devices e.g. cellular phones tablets laptops etc. have become more powerful and complex than ever. This complexity has created new opportunities for malicious software software conflicts hardware faults and other similar errors or phenomena to negatively impact a mobile device s long term and continued performance and power utilization levels. Accordingly identifying and correcting the conditions and or mobile device behaviors that may negatively impact the mobile device s long term and continued performance and power utilization levels is beneficial to consumers.

The various aspects include methods of communicating behavior analysis information between modules of a mobile computing device by exchanging information regarding behavior features observed in the mobile device between a first module in the form of a behavior API module on the mobile device and a second module in the form of a client module of the mobile device via an application programming interface the exchanged information including behavior features used by one of the first module and the second module to determine whether a mobile device behavior is benign or not benign. In an aspect the method may also include receiving via the API a request from the client module to register the second or client module to access an operation of a behavioral monitoring system of the mobile computing device and exchanging authentication information between the first module e.g. a behavior API and the second e.g. client module to accomplish mutual authentication.

In a further aspect the method may include receiving via the API a request for version identification information that may be used by the server to determine how to interpret evaluate or crowd source information and exchanging the version identification information between the first e.g. behavior API module and the second e.g. client module to cause the second e.g. client module to send the version identification information to the server. In another aspect the method may include receiving via the API a provision malware model request that includes a command suitable for causing the first e.g. behavior API module to send a malware or classifier model to a behavioral monitoring system of the mobile computing device. In a further aspect the method may include receiving an observation request for the mobile computing device to monitor or observe a specific mobile computing device behavior and exchanging the request observation request between the second e.g. client module and the first e.g. behavior API module to cause the mobile communication device to monitor or observe the specific mobile computing device behavior.

In another aspect the method may include receiving via the API a request to receive information regarding an occurrence of a condition or event and exchanging version identification information between the first e.g. behavior API module and the second e.g. client module to cause the second e.g. client module to send specific information regarding the occurrence of the condition or event to the server. In another aspect the method may include receiving via the API a request for actuation that includes a command suitable for causing the mobile computing device to uninstall an application block a process or terminate the process. In a further aspect the method may include receiving via the API a request for automatic actuation that includes a command suitable for causing the mobile computing device to define a condition or event that will cause the mobile device to perform an actuation operation. In an aspect the actuation operation may include one of uninstalling an application blocking a process and terminating the process.

The various aspects further include a mobile computing device having a processor configured with processor executable instructions to perform operations of the aspect methods described above.

The various aspects further include a mobile computing device means for performing functions of the operations of the aspect methods described above.

The various aspects further include a non transitory processor readable storage medium having stored thereon processor executable instructions to cause a processor of a mobile computing device to perform operations of the aspect methods described above.

The various aspects will be described in detail with reference to the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made to particular examples and implementations are for illustrative purposes and are not intended to limit the scope of the invention or the claims.

The word exemplary is used herein to mean serving as an example instance or illustration. Any implementation described herein as exemplary is not necessarily to be construed as preferred or advantageous over other implementations.

The various aspects provide mobile devices systems and methods for efficiently identifying classifying modeling preventing and or correcting the conditions and or mobile device behaviors that often degrade a mobile computing device s performance power utilization levels network usage levels security and or privacy over time. The use of an aspect behavior application programming interface APIs and related modules on the mobile device facilitates the communication of information on such conditions and behaviors between various modules of the mobile device and third party servers. Such third party servers may be maintained by one or more partner companies that have domain expertise in a particular area or technology that is relevant for identifying analyzing classifying and or reacting to mobile device behaviors but that do not have access to or knowledge of the various mobile device sub systems interfaces configurations modules processes drivers and or hardware systems required to generate effective data or behavior models suitable for use by the mobile device.

The aspect behavior APIs and modules may allow a third party server e.g. server owned or operated by a security expert etc. to directly invoke control or access behavior observation and analysis operations of the mobile device. The aspect behavior APIs and modules may allow the third party server to quickly and efficiently access the most relevant and important information on the mobile device so that the third party server may focus its operations on generating precise behavior models e.g. classifier models that map high level behaviors to a malware categorization. The behavior APIs and modules allow the third party server to be agnostic to each specific mobile device s hardware or software configuration e.g. available sensors operating system etc. . The aspect behavior APIs and modules facilitate communications and interactions between mobile devices and third parties to enable the mobile devices to react to performance limiting and undesirable operating conditions much faster and with lower power consumption than if all such analyses and operations were accomplished independently within each mobile device.

A number of different cellular and mobile communication services and standards are available or contemplated in the future all of which may implement and benefit from the various aspects. Such services and standards include e.g. third generation partnership project 3GPP long term evolution LTE systems third generation wireless mobile communication technology 3G fourth generation wireless mobile communication technology 4G global system for mobile communications GSM universal mobile telecommunications system UMTS 3GSM general packet radio service GPRS code division multiple access CDMA systems e.g. cdmaOne CDMA1020 enhanced data rates for GSM evolution EDGE advanced mobile phone system AMPS digital AMPS IS 136 TDMA evolution data optimized EV DO digital enhanced cordless telecommunications DECT Worldwide Interoperability for Microwave Access WiMAX wireless local area network WLAN Wi Fi Protected Access I II WPA WPA2 and integrated digital enhanced network iden . Each of these technologies involves for example the transmission and reception of voice data signaling and or content messages. It should be understood that any references to terminology and or technical details related to an individual telecommunication standard or technology are for illustrative purposes only and are not intended to limit the scope of the claims to a particular communication system or technology unless specifically recited in the claim language.

The terms mobile computing device and mobile device are used interchangeably herein to refer to any one or all of cellular telephones smartphones personal or mobile multi media players personal data assistants PDA s laptop computers tablet computers smartbooks ultrabooks palm top computers wireless electronic mail receivers multimedia Internet enabled cellular telephones internet of things IOT connected devices wireless gaming controllers and similar personal electronic devices which include a memory a programmable processor for which performance is important and operate under battery power such that power conservation methods are of benefit. While the various aspects are particularly useful for mobile computing devices such as smartphones which have limited resources and run on battery the aspects are generally useful in any electronic device that includes a processor and executes application programs.

The term performance degradation is used herein to refer to a wide variety of undesirable mobile device operations and characteristics such as longer processing times slower real time responsiveness lower battery life loss of private data malicious economic activity e.g. sending unauthorized premium Short Message Service messages etc. denial of service DoS poorly written or designed software applications malware viruses fragmented memory operations relating to commandeering the mobile device or utilizing the phone for spying or botnet activities etc.

The terms telecommunications network operator network operator and service provider may be used interchangeably to refer to any entity or network suitable for providing consumers with access to the Internet or Internet Protocol IP data communications or other services over a telecommunication network.

Generally the performance and power efficiency of a mobile device degrade over time. Recently anti virus companies e.g. McAfee Symantec etc. have begun marketing mobile anti virus firewall and encryption products that aim to slow this degradation. However many of these solutions rely on the periodic execution of a computationally intensive scanning engine on the mobile device which may consume many of the mobile device s processing and battery resources slow or render the mobile device useless for extended periods of time and or otherwise degrade the user experience. In addition these solutions are typically limited to detecting known viruses and malware and do not address the multiple complex factors and or the interactions that often combine to contribute to a mobile device s degradation over time e.g. when the performance degradation is not caused by viruses or malware . For these and other reasons existing anti virus firewall and encryption products do not provide adequate solutions for identifying the numerous factors that may contribute to a mobile device s degradation over time for preventing mobile device degradation or for efficiently restoring an aging mobile device to its original condition.

Mobile devices are resource constrained systems that have relatively limited processing memory and energy resources. Modern mobile devices are also complex systems and there are a large variety of factors that may contribute to the degradation in performance and power utilization levels of a mobile device over time including poorly written or designed software applications malware viruses fragmented memory background processes etc. Due to the number variety and complexity of these factors it is often not feasible to evaluate all the factors that may contribute to the degradation in performance and or power utilization levels of the complex yet resource constrained systems of modern mobile devices. As such it is difficult for users operating systems and or application programs e.g. anti virus software etc. to accurately and efficiently identify the sources of such problems. As a result mobile device users currently have few remedies for preventing the degradation in performance and power utilization levels of a mobile device over time or for restoring an aging mobile device to its original performance and power utilization levels.

To provide better performance in view of these facts the various aspects include mobile devices that include behavior monitoring and analysis modules configured to work in conjunction with private third party servers e.g. anti virus partners security partners OEMs etc. to intelligently and efficiently identify factors that may contribute to the degradation in performance and power utilization levels of mobile devices over time. By providing behavior application programming interfaces API and client modules that facilitate communications between the behavior monitoring and analysis modules of the mobile device and third party servers the various aspects enable the mobile device to identify and react to performance limiting and undesirable operating conditions much faster and or with lower power consumption than when all such analyses were to be accomplished independently within the mobile device.

Various aspects may include a comprehensive behavioral monitoring and analysis system for intelligently and efficiently identifying preventing and or correcting the conditions factors and or mobile device behaviors that often degrade a mobile device s performance and or power utilization levels over time.

The behavioral monitoring and analysis system may include an observer process daemon module or sub system herein collectively referred to as a module configured to instrument or coordinate various application programming interfaces APIs registers counters or other mobile device components herein collectively instrumented components at various levels of the mobile device system. The observer module may continuously or near continuously monitor mobile device behaviors by collecting behavior information from the instrumented components. In an aspect the observer module may use the collected behavior information to generate behavior vectors. Each behavior vector may represent or characterize many or all of the observed behaviors that are associated with a specific software application module component task or process of the mobile device.

The mobile device may also include an analyzer module and the observer module may communicate e.g. via a memory write operation function call etc. the collected behavior information to the analyzer module. The analyzer module may receive and use the behavior information to generate behavior vectors generate spatial and or temporal correlations based on the feature behavior vectors and use this information to determine whether a particular mobile device behavior condition sub system software application or process is benign or not benign e.g. suspicious malicious poorly designed performance degrading etc. . The mobile device may then use the results of this analysis to heal cure isolate or otherwise fix or respond to identified problems.

The observer and analyzer modules may be configured to generate and or use behavior vectors that encapsulate one or more behavior features. Each behavior feature may be an abstract number that represents all or a portion of an observed behavior. The behavior features may be agnostic to the hardware or software configuration of the mobile device. Each behavior feature may be associated with a data type that identifies a range of possible values operations that may be performed on those values meanings of the values etc. The data type may be used by the mobile device to determine how the feature or feature value should be measured analyzed weighted or used.

For example the behavior feature Feature Location may be associated with the data type Amount which may indicate that the value of the Feature Location feature will be an integer quantity that is greater than or equal to zero. As such the system may use the Feature Location feature to represent the number of times that an application requested the user s location. As another example the behavior feature Feature Calendar may be associated with an Existence data type that identifies this feature as storing a Boolean value. The system may use this feature to represent whether an application has accessed the calendar of the mobile device i.e. true or false .

The analyzer module may also be configured to perform real time behavior analysis operations which may include performing executing and or applying data algorithms classifiers or models herein collectively referred to as classifier models to the collected behavior information or behavior vectors to determine whether a software application or mobile device behavior is benign or not benign.

Each classifier model may be a behavior model that includes data and or information structures e.g. feature vectors behavior vectors component lists etc. that may be used by a mobile device processor to evaluate a specific feature or aspect of a mobile device s behavior. Each classifier model may also include decision criteria for monitoring a number of features factors data points entries APIs states conditions behaviors applications processes operations components etc. herein collectively features in the mobile device. The classifier models may be preinstalled on the mobile device downloaded or received from a network server generated in the mobile device or any combination thereof. The classifier models may be generated by using crowd sourcing solutions behavior modeling techniques machine learning algorithms etc.

Each classifier model may be categorized as a full classifier model or a lean classifier model. A full classifier model may be a robust data model that is generated as a function of a large training dataset which may include thousands of features and billions of entries. A lean classifier model may be a more focused data model that is generated from a reduced dataset that includes or prioritizes tests on the features entries that are most relevant for determining whether a particular mobile device behavior is benign or not benign e.g. malicious performance degrading etc. . A locally generated lean classifier model is a lean classifier model that is generated in the mobile device. An application based classifier model may be an application specific classifier model or an application type specific classifier model. An application specific classifier model is a classifier model that includes a focused data model that includes or prioritizes tests on the features entries that are most relevant for determining whether a particular software application is not benign. An application type specific classifier model is a classifier model that includes a focused or prioritized data model that includes or prioritizes tests on the features entries that are most relevant for determining whether a particular type of software application is benign or not benign e.g. malicious or performance degrading .

The various aspects include mobile devices and network servers configured to work in conjunction with one another to intelligently and efficiently identify the features factors and data points that are most relevant to determining whether a mobile device behavior is not benign. By generating lean classifier models locally in the mobile device accounting for device specific features and or device state specific features the various aspects allow the mobile device processor to apply focused classifier models to quickly and efficiently identify analyze or classify a complex mobile device behavior e.g. via the observer and analyzer modules etc. without causing a significant negative or user perceivable change in the responsiveness performance or power consumption characteristics of the mobile device.

A full classifier model may be generated by a network server configured to receive a large amount of information regarding mobile device behaviors and states features and conditions during or characterizing those behaviors from a cloud service network. This information may be in the form of a very large cloud corpus of mobile device behavior vectors. The network server may use this information to generate a full classifier model i.e. a robust data behavior model that accurately describes the very large cloud corpus of behavior vectors. The network server may generate the full classifier model to include all or most of the features data points and or factors that could contribute to the degradation over time of any of a number of different makes models and configurations of mobile devices.

In an aspect the network server may generate the full classifier model to include a finite state machine expression or representation which may be an information structure that includes a boosted decision tree stump or family of boosted decision trees stumps that can be quickly and efficiently culled modified or converted into lean classifier models that are suitable for use or execution in a mobile device processor. The finite state machine expression or representation abbreviated to finite state machine may be an information structure that includes test conditions state information state transition rules and other similar information. In an aspect the finite state machine may be an information structure that includes a large or robust family of boosted decision stumps that each evaluate or test a feature condition or aspect of a mobile device behavior.

The mobile device may be configured to receive a full classifier model from the network server and use the received full classifier model to generate lean classifier models i.e. data behavior models that are specific for the features and functionalities of the mobile device.

In an aspect the mobile device may include behavior API and or client modules that allow the mobile device to download classifier models from a third party network server. That is the behavior API and or client modules may be configured to facilitate the communication of information between the behavior monitoring and analysis modules of the mobile device and third party servers. The third party servers may be maintained by partner companies that have domain expertise in a particular area or technology that is relevant for identifying analyzing classifying and or reacting to mobile device behaviors but that do not have access to or knowledge of the various mobile device sub systems interfaces configurations modules processes drivers and or hardware systems required to generate effective data behavior models suitable for use by the mobile device.

For example in an aspect the behavior API and or client modules may be configured to allow the analyzer module to receive classifier models from a third party antivirus server that is in a different network and or maintained by an independent antivirus company and apply the received classifier models to behavior vectors to classify a mobile device behavior or software application as benign or not benign. As another example the analyzer module may receive classifier models from a third party server maintained by a telecommunications network operator and use the received models to classify the mobile device s network usage as being normal or below average. As yet another example the analyzer module may receive classifier models from a third party server maintained by an original equipment manufacturer OEM of the mobile device and use these received models to classify the mobile device s power or battery consumption as being average or below average etc.

In an aspect the behavior API and or client modules may be configured to enable a mobile device to receive commands or instructions from a third party server and perform corrective or preventive actuation actions or operations in response to receiving the commands instructions.

In an aspect the behavior API and or client modules may be configured to allow the third party server to quickly and efficiently access the most relevant and important information on the mobile device so that the third party server may focus its operations on generating precise or more accurate models.

In an aspect the behavior API and or client modules may be configured to allow the third party server to provide the mobile device with computational offloading crowd sourcing and other services that enable the mobile device to identify performance degrading factors on the mobile device without consuming an excessive amount of processing memory or energy resources of the mobile device.

In various aspects the behavior API and or client modules may be configured to allow the third party server to discover the capabilities of the mobile device perform client registration and authentication operations on the device access a list of mobile device behaviors or features that are to be observed on the mobile device access a finite state machine description of a mapping of features to benign or not benign behaviors issue requests for additional more detailed or more targeted observations of mobile device behaviors issue requests to back off from observing one or more factors applications or behaviors that are currently being observed e.g. a white list by the mobile device issue requests for behavior logs good bad suspicious etc. issue requests for actuation to the mobile device initiate a corrective action on the mobile device and or perform other similar operations on or for the mobile device.

In an aspect the behavior API and or client modules may be configured to send behavior vectors the results of the real time analysis operations performed on the mobile device behavior logs generated by the mobile device and other behavior analysis information and computations to the third party server. Such feedback communications between the mobile device and third party server may allow the third party server to perform deeper analysis of the mobile device behaviors reevaluate the effectiveness of its classifier models and or generate new classifier models that include the most current relevant and or precise information.

In an aspect the behavior API and or client modules may allow a third party server to repeatedly continuously or periodically reevaluate existing classifier models as new behavior analysis reports are received from the mobile devices. The third party server may generate new or updated classifier models based on historical information e.g. collected from prior executions previous applications of behavior models etc. new information machine learning context modeling and detected changes in the available information mobile device states environmental conditions network conditions mobile device performance battery consumption levels etc. and send the new updated models to one or more mobile devices for use in monitoring their respective behaviors for potential performance degradation behaviors.

In an aspect the behavior API and or client modules may allow a third party server to generate or update classifier models by performing executing or applying machine learning and or context modeling techniques to behavior information and or results of behavior analyses received from many mobile devices. That is the third party server may receive a large number of reports from many mobile devices via their respective behavior API and or client modules and analyze consolidate or otherwise turn such crowd sourced information into useable information such as focused classifier models that can be used or accessed by many mobile devices.

The various aspects may be implemented within a variety of communication systems such as the example communication system illustrated in . A typical cell telephone network includes a plurality of cell base stations coupled to a network operations center which operates to connect voice calls and data between mobile devices e.g. cell phones laptops tablets etc. and other network destinations such as via telephone land lines e.g. a POTS network not shown and the Internet . Communications between the mobile devices and the telephone network may be accomplished via two way wireless communication links such as 4G 3G CDMA TDMA LTE and or other cell telephone communication technologies. The telephone network may also include one or more servers coupled to or within the network operations center that provide a connection to the Internet .

The communication system may further include network servers connected to the telephone network and to the Internet . Each network server may be a third party server that is maintained by a partner company that has domain expertise in a particular area or technology that is relevant for identifying analyzing classifying and or reacting to mobile device behaviors but does not have access to or knowledge of the various mobile device sub systems interfaces configurations modules processes drivers and or hardware systems required to generate effective data or behavior models suitable for use by the mobile device . In an aspect the network server may be implemented as a server within the network infrastructure of a cloud service provider network . The connection between the network server and the telephone network may be through the Internet or through a private network as illustrated by the dashed arrows . Communications between the network server and the mobile devices may be achieved through the telephone network the internet private network not illustrated or any combination thereof.

The network server may send data behavior models to the mobile device which may receive and use the data behavior models to identify suspicious or performance degrading mobile device behaviors software applications processes etc. The network server may also send instructions or commands to the mobile device . The network server may also send classification and modeling information to the mobile devices to replace update create and or maintain mobile device data behavior models.

The mobile device may collect behavioral state classification modeling success rate and or statistical information in the mobile device and send the collected information to the network server e.g. via the telephone network for analysis. The network server may use information received from the mobile device to update or refine the lean data behavior models or the classification modeling information to include a targeted subset of features.

The behavior observer module may be configured to perform cross layer observations on various mobile device modules and sub systems encompassing WebKit SDK NDK kernel drivers and hardware in order to characterize the mobile device behavior.

The behavior observer module may be configured to instrument or coordinate APIs at various levels modules of the mobile device and monitor observe mobile device operations and events e.g. system events state changes etc. at the various levels modules via the instrumented APIs collect information pertaining to the observed operations events intelligently filter the collected information generate one or more observations based on the filtered information and store the generated observations in a memory e.g. in a log file etc. and or send e.g. via memory writes function calls etc. the generated observations to the behavior analyzer module .

The behavior observer module may monitor observe mobile device operations and events by collecting information pertaining to library API calls in an application framework or run time libraries system call APIs file system and networking sub system operations device including sensor devices state changes and other similar events. The behavior observer module may also monitor file system activity which may include searching for filenames categories of file accesses personal info or normal data files creating or deleting files e.g. type exe zip etc. file read write seek operations changing file permissions etc.

The behavior observer module may also monitor data network activity which may include types of connections protocols port numbers server client that the device is connected to the number of connections volume or frequency of communications etc. The behavior observer module may monitor phone network activity which may include monitoring the type and number of calls or messages e.g. SMS etc. sent out received or intercepted e.g. the number of premium calls placed .

The behavior observer module may also monitor the system resource usage which may include monitoring the number of forks memory access operations number of files open etc. The behavior observer module may monitor the state of the mobile device which may include monitoring various factors such as whether the display is on or off whether the device is locked or unlocked the amount of battery remaining the state of the camera etc. The behavior observer module may also monitor inter process communications IPC by for example monitoring intents to crucial services browser contracts provider etc. the number or degree of inter process communications pop up windows etc.

The behavior observer module may also monitor observe driver statistics and or the status of one or more hardware components which may include cameras sensors electronic displays Wi Fi communication components data controllers memory controllers system controllers access ports timers peripheral devices wireless communication components external memory chips voltage regulators oscillators phase locked loops peripheral bridges and other similar components used to support the processors and clients running on the mobile computing device.

The behavior observer module may also monitor observe one or more hardware counters that denote the state or status of the mobile computing device and or mobile device sub systems. A hardware counter may include a special purpose register of the processors cores that is configured to store a count or state of hardware related activities or events occurring in the mobile computing device. The behavior observer module may also monitor observe actions or operations of software applications mobile device information used by software applications call information text messaging information e.g. SendSMS BlockSMS ReadSMS etc. media messaging information e.g. ReceiveMMS user account information location information camera information accelerometer information browser information content of browser based communications content of voice based communications short range radio communications e.g. Bluetooth Wi Fi etc. content of text based communications content of recorded audio files phonebook or contact information contacts lists etc.

The behavior observer module may monitor observe transmissions or communications of the mobile device including communications that include voicemail VoiceMailComm device identifiers DeviceIDComm user account information UserAccountComm calendar information CalendarComm location information LocationComm recorded audio information RecordAudioComm accelerometer information AccelerometerComm etc.

The behavior observer module may monitor observe usage of and updates changes to compass information mobile device settings battery life gyroscope information pressure sensors magnet sensors screen activity etc.

The behavior observer module may monitor observe notifications communicated to and from a software application AppNotifications application updates etc.

The behavior observer module may monitor observe conditions or events pertaining to a first software application or module requesting the downloading and or install of a second software application.

The behavior observer module may monitor observe conditions or events pertaining to user verification such as the entry of a password etc.

The behavior observer module may be configured to monitor observe any of the mobile device behaviors over a period of time. These observations may be for a set period of time or may be cumulative such as in a continuous learning process. Thus the longer that the mobile device operates the more behavioral observations may be collected.

The behavior observer module may also monitor observe conditions or events at multiple levels of the mobile device including the application level radio level and sensor level.

Application level observations may include observing the user via facial recognition software observing social streams observing notes entered by the user observing events pertaining to the use of PassBook Google Wallet Paypal etc. Application level observations may also include observing events relating to the use of virtual private networks VPNs and events pertaining to synchronization voice searches voice control e.g. lock unlock a phone by saying one word language translators the offloading of data for computations video streaming camera usage without user activity microphone usage without user activity etc.

Radio level observations may include determining the presence existence or amount of any or more of user interaction with the mobile device before establishing radio communication links or transmitting information dual multiple subscriber identification module SIM cards Internet radio mobile phone tethering offloading data for computations device state communications the use as a game controller or home controller vehicle communications mobile device synchronization etc. Radio level observations may also include monitoring the use of radios Wi Fi WiMax Bluetooth etc. for positioning peer to peer p2p communications synchronization vehicle to vehicle communications and or machine to machine m2m . Radio level observations may further include monitoring network traffic usage statistics or profiles.

Sensor level observations may include monitoring a magnet sensor or other sensor to determine the usage and or external environment of the mobile device. For example the mobile device processor may be configured to determine whether the phone is in a holster e.g. via a magnet sensor configured to sense a magnet within the holster or in the user s pocket e.g. via the amount of light detected by a camera or light sensor . Detecting that the mobile device is in a holster may be relevant to recognizing suspicious behaviors for example because activities and functions related to active usage by a user e.g. taking photographs or videos sending messages conducting a voice call recording sounds etc. occurring while the mobile device is holstered could be signs of nefarious processes executing on the device e.g. to track or spy on the user .

Other examples of sensor level observations related to usage or external environments may include detecting near field communications NFC signaling collecting information from a credit card scanner barcode scanner or mobile tag reader detecting the presence of a Universal Serial Bus USB power charging source detecting that a keyboard or auxiliary device has been coupled to the mobile device detecting that the mobile device has been coupled to a computing device e.g. via USB etc. determining whether an LED flash flashlight or light source has been modified or disabled e.g. maliciously disabling an emergency signaling app etc. detecting that a speaker or microphone has been turned on or powered detecting a charging or power event detecting that the mobile device is being used as a game controller etc.

Sensor level observations may also include collecting information from medical or healthcare sensors or from scanning the user s body collecting information from an external sensor plugged into the USB audio jack collecting information from a tactile or haptic sensor e.g. via a vibrator interface etc. collecting information pertaining to the thermal state of the mobile device etc.

To reduce the number of factors monitored to a manageable level in an aspect the behavior observer module may perform coarse observations by monitoring observing an initial set of behaviors or factors that are a small subset of all factors that could contribute to the mobile device s degradation. In an aspect the behavior observer module may receive the initial set of behaviors and or factors to be monitored from a third party network server and or a component in a cloud service or network via the partner client module and or behavior API module API . In an aspect the initial set of behaviors factors to be monitored may be specified in data behavior models received from the network server or cloud service network .

In various aspects all or portions of the behavior analyzer module may be downloaded from multiple sources pre loaded on the mobile device downloaded into a client application of the mobile device and downloaded as a software application form an application download service.

In an aspect the behavior analyzer module may be configured to receive the observations from the behavior observer module compare the received information i.e. observations with contextual information received from an external context information module and apply classifier modules to the received information to identify subsystems processes and or applications associated with the received observations that are contributing to or are likely to contribute to the device s degradation over time or which may otherwise cause problems on the device. Similarly the behavior analyzer module may receive the observations and or additional information from a third party network server and or a component in a cloud service or network via the partner client module compare the received information i.e. observations with contextual information received from an external context information module and identify subsystems processes and or applications associated with the received observations that are contributing to or are likely to contribute to the device s degradation over time or which may otherwise cause problems on the device.

In an aspect the behavior analyzer module may include intelligence for utilizing a limited set of information i.e. coarse observations to identify behaviors processes or programs that are contributing to or are likely to contribute to the device s degradation over time or which may otherwise cause problems on the device. For example the behavior analyzer module may be configured to analyze information e.g. in the form of observations collected from various modules e.g. the behavior observer module partner client module etc. learn the normal operational behaviors of the mobile device and generate one or more behavior vectors based the results of the comparisons. The behavior analyzer module may generate and or receive behavior vectors and compare them to one or more behavior modules to determine whether a particular mobile device behavior software application or process is benign or not benign e.g. performance degrading malicious suspicious etc. .

When the behavior analyzer module determines that a behavior software application or process is malicious or performance degrading the behavior analyzer module may notify the actuator module which may perform various actions or operations to correct mobile device behaviors determined to be not benign and or perform operations to notify the user or to heal cure isolate or otherwise fix the identified problem.

When the behavior analyzer module determines that a behavior software application or process is suspicious the behavior analyzer module may notify the behavior observer module which may adjust the adjust the granularity of its observations i.e. the level of detail at which mobile device behaviors are observed and or change the behaviors that are observed based on information received from the analyzer module e.g. results of the real time analysis operations generate or collect new or additional behavior information and send the new additional information to the behavior analyzer module for further analysis classification. Such feedback communications between the behavior observer module and the behavior analyzer module enable the mobile device to recursively increase the granularity of the observations i.e. make finer or more detailed observations or change the features behaviors that are observed until a source of a suspicious or performance degrading mobile device behavior is identified until a processing or battery consumption threshold is reached or until the mobile device processor determines that the source of the suspicious or performance degrading mobile device behavior cannot be identified from further increases in observation granularity. Such feedback communications also enable the mobile device to adjust or modify the classifier models locally in the mobile device without consuming an excessive amount of the mobile device s processing memory or energy resources.

In an aspect when the behavior analyzer module determines that a behavior software application or process is suspicious the behavior analyzer module may notify the partner client module via the behavior API module . The partner client module may format and send the behavior information to the network server and or a component in a cloud service or network for further analysis and use in generating future models. In an aspect the behavior information may be formatted as a behavior vector that is sent to the network server . In an aspect the partner client module may send the behavior vector information to the network server and or a component in a cloud service or network when the analyzer module determines that addition information may be required such as when it cannot conclusively determine whether a mobile device behavior is benign or not benign. In an aspect the partner client module may send the behavior information or behavior vector to the network server and or a component in a cloud service or network using a client server interface .

In various aspects the behavior observer module and the behavior analyzer module may provide either individually or collectively real time behavior analysis of the computing system s behaviors to identify suspicious behavior from limited and coarse observations to dynamically determine behaviors to observe in greater detail and to dynamically determine the level of detail required for the observations. In this manner the behavior observer and system enables the mobile device to efficiently identify and prevent problems from occurring on mobile computing devices without requiring a large amount of processor memory or battery resources on the device.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to analyze mobile device behaviors by identifying a critical data resource that requires close monitoring identifying an intermediate resource associated with the critical data resource monitoring API calls made by a software application when accessing the critical data resource and the intermediate resource identifying mobile device resources that are consumed or produced by the API calls identifying a pattern of API calls as being indicative of malicious activity by the software application generating a light weight behavior signature based on the identified pattern of API calls and the identified mobile device resources using the light weight behavior signature to perform behavior analysis operations and determining whether the software application is benign or not benign based on the behavior analysis operations.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to analyze mobile device behaviors by identifying APIs that are used most frequently by software applications executing on the mobile device storing information regarding usage of identified hot APIs in an API log in a memory of the mobile device and performing behavior analysis operations based on the information stored in the API log to identify mobile device behaviors that are inconsistent with normal operation patterns. In an aspect the API log may be generated so that it is organized such that that the values of generic fields that remain the same across invocations of an API are stored in a separate table as the values of specific fields that are specific to each invocation of the API. The API log may also be generated so that the values of the specific fields are stored in a table along with hash keys to the separate table that stores the values of the generic fields.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to analyze mobile device behaviors by receiving a full classifier model that includes a finite state machine that is suitable for conversion or expression as a plurality of boosted decision stumps generating a lean classifier model in the mobile device based on the full classifier and using the lean classifier model in the mobile device to classify a behavior of the mobile device as being either benign or not benign i.e. malicious performance degrading etc. . In an aspect generating the lean classifier model based on the full classifier model may include determining a number of unique test conditions that should be evaluated to classify a mobile device behavior without consuming an excessive amount of processing memory or energy resources of the mobile device generating a list of test conditions by sequentially traversing the list of boosted decision stumps and inserting the test condition associated with each sequentially traversed boosted decision stump into the list of test conditions until the list of test conditions may include the determined number of unique test conditions and generating the lean classifier model to include only those boosted decision stumps that test one of a plurality of test conditions included in the generated list of test conditions.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to use device specific information such as capability and state information of the mobile device to identify mobile device specific test conditions in a plurality of test conditions that are relevant to classifying a behavior of the mobile device generate a lean classifier model that includes only the identified mobile device specific test conditions and use the generated lean classifier model in the mobile device to classify the behavior of the mobile device. In an aspect the lean classifier model may be generated to include only decision nodes that evaluate a mobile device feature that is relevant to a current operating state or configuration of the mobile device. In a further aspect generating the lean classifier model may include determining a number of unique test conditions that should be evaluated to classify the behavior without consuming an excessive amount of mobile device s resources e.g. processing memory or energy resources generating a list of test conditions by sequentially traversing the plurality of test conditions in the full classifier model inserting those test conditions that are relevant to classifying the behavior of the mobile device into the list of test conditions until the list of test conditions includes the determined number of unique test conditions and generating the lean classifier model to include decision nodes included in the full classifier model that test one of the conditions included in the generated list of test conditions.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to recognize mobile device behaviors that are inconsistent with normal operation patterns of the mobile device by monitoring an activity of a software application or process determining an operating system execution state of the software application process and determining whether the activity is not benign based on the activity and or the operating system execution state of the software application or process during which the activity was monitored. In a further aspect the behavior observer module and or the behavior analyzer module may determine whether the operating system execution state of the software application or process is relevant to the activity generate a shadow feature value that identifies the operating system execution state of the software application or process during which the activity was monitored generate a behavior vector that associates the activity with the shadow feature value identifying the operating system execution state and use the behavior vector to determine whether the activity is benign suspicious or not benign i.e. malicious or performance degrading .

In various aspects the behavior observer module and or the behavior analyzer module may be configured to recognize mobile device behaviors that are inconsistent with normal operation patterns of the mobile device by monitoring an activity of a software application or process determining an application and operating system agnostic execution state of the software application process and determining whether the activity is benign based on the activity and or the application and operating system agnostic execution state of the software application during which the activity was monitored. In a further aspect the behavior observer module and or the behavior analyzer module may determine whether the application and operating system agnostic execution state of the software application is relevant to the activity and generate a behavior vector that associates the activity with the application and operating system agnostic execution state and use the behavior vector to determine whether the activity is benign suspicious or not benign i.e. malicious or performance degrading . The mobile device may also use the application and operating system agnostic execution state to select a classifier model e.g. application specific classifier model and apply the behavior vector to the selected classifier model to determine whether a mobile device behavior is inconsistent with normal operation patterns of the mobile device.

In various aspects the mobile device may be configured to work in conjunction with a network server to intelligently and efficiently identify the features factors and data points that are most relevant to determining whether a mobile device behavior is benign or not benign e.g. malicious or performance degrading . For example the mobile device may be configured to receive a full classifier model from the network server and use the received full classifier model to generate lean classifier models i.e. data behavior models that are specific for the features and functionalities of the mobile device or the software applications of the mobile device.

In an aspect the mobile device may be configured to use the full classifier model to generate a family of lean classifier models of varying levels of complexity or leanness . The leanest family of lean classifier models i.e. the lean classifier model based on the fewest number of behavior features or test conditions may be applied routinely until a behavior is encountered that the model cannot categorize as either benign or not benign and therefore is categorized by the model as suspicious at which time a more robust i.e. less lean lean classifier model may be applied in an attempt to categorize the behavior as either benign or not benign. The application of ever more robust lean classifier models within the family of generated lean classifier models may be applied until a definitive classification of the behavior is achieved. In this manner the observer and or analyzer modules can strike a balance between efficiency and accuracy by limiting the use of the most complete but resource intensive lean classifier models to those situations where a robust classifier model is needed to definitively classify a behavior.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to generate one or more lean classifier models by converting a finite state machine representation expression into boosted decision stumps pruning or culling the full set of boosted decision stumps based on mobile device specific states features behaviors conditions or configurations to include a subset or subsets of boosted decision stumps included in the full classifier model and using the subset or subsets of boosted decision stumps to intelligently monitor analyze and or classify a mobile device behavior.

Boosted decision stumps are one level decision trees that have exactly one node and thus one test question or test condition and a weight value and thus are well suited for use in a binary classification of data behaviors. That is applying a behavior vector to boosted decision stump results in a binary answer e.g. Yes or No . For example if the question condition tested by a boosted decision stump is is the frequency of Short Message Service SMS transmissions less than x per minute applying a value of 3 to the boosted decision stump will result in either a yes answer for less than 3 SMS transmissions or a no answer for 3 or more SMS transmissions . Boosted decision stumps are efficient because they are very simple and primal and thus do not require significant processing resources . Boosted decision stumps are also very parallelizable and thus many stumps may be applied or tested in parallel at the same time e.g. by multiple cores or processors in the mobile device .

In an aspect the mobile device may be configured to generate a lean classifier model that includes a subset of classifier criteria included in the full classifier model received from the network server and only those classifier criteria corresponding to the features relevant to the mobile device configuration functionality and connected included hardware. The mobile device may use this lean classifier model s to monitor only those features and functions present or relevant to the device. The mobile device may then periodically modify or regenerate the lean classifier model s to include or remove various features and corresponding classifier criteria based on the mobile device s current state and configuration.

As an example the behavior analyzer module may be configured to receive a large boosted decision stumps classifier model with decision stumps associated with a full feature set of behavior models e.g. classifiers from the network server . The behavior analyzer module may derive one or more lean classifier models from the large classifier models by selecting only features from the large classifier model s that are relevant the mobile device s current configuration functionality operating state and or connected included hardware and including in the lean classifier model a subset of boosted decision stumps that correspond to the selected features. In this aspect the classifier criteria corresponding to features relevant to the mobile device may be those boosted decision stumps included in the large classifier model that test at least one of the selected features. The behavior analyzer module may then periodically modify or regenerate the boosted decision stumps lean classifier model s to include or remove various features based on the mobile device s current state and configuration so that the lean classifier model continues to include application specific or device specific feature boosted decision stumps.

In addition the behavior observer module and or the behavior analyzer module may be configured to dynamically generate application specific and or application type specific classifier models that identify conditions or features that are relevant to a specific software application Google wallet and or to a specific type of software application e.g. games navigation financial news productivity etc. . In an aspect these application based classifier models i.e. the application specific and application type specific classifier models may be generated to include a reduced and more focused subset of the decision nodes that are included in the received full classifier model or of those included in lean classifier model generated from the received full classifier model.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to generate application based classifier models for each software application in the system and or for each type of software application in the system. The mobile device may also be configured to dynamically identify the software applications and or application types that are a high risk or susceptible to abuse e.g. financial applications point of sale applications biometric sensor applications etc. and generate application based classifier models for only the software applications and or application types that are identified as being high risk or susceptible to abuse. In various aspects the mobile device may be configured to generate the application based classifier models dynamically reactively proactively and or every time a new application is installed or updated.

In an aspect the behavior observer module and or the behavior analyzer module may be configured to use or apply multiple classifier models in parallel. In various aspects the mobile device may be configured to give preference or priority to the results generated from using or applying the application based classifier models to a behavior feature vector over the results generated from using applying a more generic and locally generated lean classifier model to the same or different behavior feature vector when evaluating a specific software application. In the various aspects the mobile device may use the results of applying the classifier models to predict whether a software application process or complex mobile device behavior is benign or contributing to the degradation of the performance or power consumption characteristics of the mobile device.

Each software application generally performs a number of tasks or activities on the mobile device and the specific execution state in which certain tasks activities are performed in the mobile device may be a strong indicator of whether a mobile device behavior merits additional or closer scrutiny monitoring and or analysis. As such in the various aspects a processor of the mobile device may be configured with processor executable instructions to use information identifying the actual execution states in which certain tasks activities are performed to focus its behavioral monitoring and analysis operations and better determine whether a mobile device behavior is benign or not benign e.g. suspicious or malicious performance degrading .

In various aspects the behavior observer module and or the behavior analyzer module may be configured to associate the activities tasks performed by a software application with the execution states in which those activities tasks were performed. For example the observer module may be configured to generate a behavior vector that includes the behavior information collected from monitoring the instrumented components in a sub vector or data structure that lists the features activities or operations of the software for which the execution state is relevant e.g. location access SMS read operations sensor access etc. . In an aspect this sub vector data structure may be stored in association with a shadow feature value sub vector data structure that identifies the execution state in which each feature activity operation was observed. As an example the observer module may generate a behavior vector that includes a location background data field whose value identifies the number or rate that the software application accessed location information when it was operating in a background state. This allows the analyzer module to analyze this execution state information independent of and or in parallel with the other observed behaviors of the mobile device. Generating the behavior vector in this manner also allows the system to aggregate information e.g. frequency or rate over time.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to generate the behavior vectors to include a concise definition of the observed behaviors. The behavior vector may succinctly describe an observed behavior of the mobile device software application or process in a value or vector data structure e.g. in the form of a string of numbers etc. . The behavior vector may also function as an identifier that enables the mobile device system to quickly recognize identify and or analyze mobile device behaviors. In the various aspects the observer and or analyzer modules may be configured to generate the behavior vectors to include series of numbers each of which signifies a feature or a behavior of the mobile device. For example numbers included in the behavior vector may signify whether a camera of the mobile device is in use e.g. as zero or one how much network traffic has been transmitted from or generated by the mobile device e.g. 20 KB sec etc. how many interne messages have been communicated e.g. number of SMS messages etc. etc.

In various aspects the behavior observer module and or the behavior analyzer module may be configured to generate the behavior vectors to include execution information. The execution information may be included in the behavior vector as part of a behavior e.g. camera used 5 times in 3 second by a background process camera used 3 times in 3 second by a foreground process etc. or as part of an independent feature. In an aspect the execution state information may be included in the behavior vector as a shadow feature value sub vector or data structure. In an aspect the behavior vector may store the shadow feature value sub vector data structure in association with the features activities tasks for which the execution state is relevant

The partner client module may be configured to allow a third party network server to interact with behavior observer and analyzer modules in mobile devices via the behavior API module . Communicating with the partner client module on the mobile device via the behavior API module module a third party network server may perform operations to discover the capabilities of the mobile device perform client registration and authentication operations on the device access a list of mobile device behaviors or features that may be observed analyzed in the mobile device generate populate and or update a finite state machine description of a mapping of features to benign or non benign behaviors issue requests for additional more detailed or more targeted observations of mobile device behaviors issue requests to back off from observing specific applications e.g. a white list issue requests to receive behavior logs good bad suspicious etc. issue requests that cause the mobile device to initiate a corrective action e.g. via the actuation module and or perform other similar operations in the mobile device.

The partner client module may store or have access to a database or server that stores collaboration information and or data structures suitable for interpreting behavior information communicated between the behavior observer module behavior analyzer module a network server and or a component in a cloud service or network . Such collaboration information data structures may include a dictionary database of the behavior features that may be observed and or analyzed by the network server and or the mobile device grammar for interpreting analyzing combining and or applying the behavior features or models and or various representations e.g. a finite state machine a decision tree etc. that map the behavior features to a classification or analysis of the mobile device behaviors applications and or processes.

The partner client module may be configured to decode interpret evaluate combine organizing and or encode observed behavior information mobile device features and data models into a communication message suitable for transmission to the third party server and or suitable for sending to the behavior observer and analyzer modules via the behavior API module . In various aspects the communication message may include information identifying the existence or presence of a condition on the mobile device a count or frequency of the condition an ordering of features an identified combination of events or conditions a structure or mapping expressed as a finite state machine an identification or classification e.g. benign malicious suspicious etc. of an observed mobile device features or conditions a mapping of suggested actions actuations to mobile device features or conditions recommendations for performing further observation actions and other similar information. The communication message may also include a request for further observation a request for behavior logs and or a request for actuation.

In various aspects a request for actuation which may be configured according to the behavior API module may include commands suitable for causing the mobile device to notify the user block a process terminate a process and or invoke any of the other features of the actuator module . In an aspect the request for actuation may identify applications that are white listed and or a command suitable for causing the observer module to back off or stop observing one or more of the white listed applications.

In various aspects a request for a behavior log may identify a granularity level specific applications e.g. via an APK name etc. a duration or period of time a process e.g. via a process identifier etc. an urgency or importance indicator and or a priority. The behavior logs may be generated to include information collected based on the analysis of the whole device a specific application a specific processor and or over a specified period of time. The behavior logs may be identified by process ID name or signature. In an aspect the behavior logs may be generated to include behavior vectors storing a series of numbers each of which may correspond to one of the observed features. In an aspect the behavior logs may be generated to include the results and or conclusions generated by the analyzer module which may indicate whether a specific mobile device behavior is currently deemed as good bad or suspicious by the mobile device.

In various aspects the mobile device may be configured to leverage a crowd sourced model received from the network server or public or private cloud network .

In an aspect the network server may send incremental updates to the mobile device and the mobile device may be configured to update its models based on the incremental updates received from the network server . For example if the network server includes a database that stores ten thousand behavioral rules or records and a new rule record is added to the database e.g. via crowd sourcing data received from many mobile devices the network server may be configured to send only a portion of a model and or the new rule or record as opposed to all ten thousand records to the mobile device . The mobile device may receive the new rule record and update its existing models to include the rule.

In an aspect the network server may periodically or continuously reevaluate existing lean data behavior models as new behavior analysis reports are received from mobile devices and or generate new or updated lean data behavior models based on historical information e.g. collected from prior executions previous applications of behavior models etc. new information machine learning context modeling and detected changes in the available information mobile device states environmental conditions network conditions mobile device performance battery consumption levels etc.

In an aspect the network server may be configured to generate the lean data behavior models to include an initial feature set e.g. an initial reduced feature model and one or more subsequent feature sets e.g. subsequent reduced feature models . The initial feature set may include information determined to have a highest probability of enabling the classifier module of the mobile devices to conclusively determine whether a particular mobile device behavior software application or process is not benign. Each subsequent feature set may include information determined to have the next highest probability of conclusively determining that the mobile device behavior software application or process is benign or not benign. Each subsequent feature set may include a larger dataset than its preceding feature set and thus the performance and power consumption costs associated with applying the data behavior models may increase progressively for each subsequent feature set.

In an aspect the network server may be configured to continuously update the online and offline classifiers model generators and or cloud model. The network server may be configured to intelligently determine when the changes are substantial enough to warrant generating new models and when the changes may be ignored. For example the network server may receive updates from many different mobile devices perform machine learning operations to generate a first family of classifiers determine whether there are enough changes to the generated first family of classifiers to warrant generating new models determine which features in the generated first family of classifiers are the best features when it is determined that there are enough changes to the first family of classifiers generate a second family of classifiers based on the best features determine whether there are enough changes to the generated second family of classifiers and generate update mobile device classifier data behavior models when it is determined that there are enough changes to the second family of classifiers.

In an aspect the behavior API module and partner client module may be configured to enable the mobile device to receive fewer or less frequent updates than that which is typically received from a private cloud service. This allows the mobile device to receive updated models at the user s discretion and without requiring constant connectivity to the cloud service.

In operation the client module may call invoke a register operation of the behavior API module . As part of this operation the client module may send the behavior API module a plain text challenge and register set a challenge response callback function for two way authentication.

In operation the behavior API module may call invoke the challenge response callback to ensure the integrity of the client module or third party represented by the client module . In operation the client module may send authentication information to the behavior API module . The authentication information may include information that may used to authenticate the client s response against a private key store or verified via a server.

In operation block the behavior API module may use the received authentication information to check the private key or otherwise determine whether the client module should be provided with access to the behavioral monitoring and analysis systems of the mobile device. In operation block the behavior API module may publish various functions or otherwise allow the client module to access features of the behavioral monitoring and analysis systems. In operation the behavior API module may encrypt a plaintext using its private key and send a response message to the client module to verify the authenticity of the mobile device the behavioral monitoring analysis systems and or the behavior API module . In this manner both the behavior API module and the client module may accomplish mutual authentication.

In operation of method the client module may request explicit monitoring of a particular behavior or feature in the mobile device by sending the behavior API module a monitor request message. The monitor request message may include information identifying the behavior feature that is to be monitored and a callback function that allows the API module to send behavior vectors to the client module .

In an aspect the client module may also send a special behavior vector that may be used as a filter for events in operation . In a further aspect the behavior API module may be configured to automatically forward relevant behavior information e.g. in a behavior vector to the client module when the value of a feature identified in the special behavior vector is greater than or equal to zero.

In operation the behavior API module may send a monitor ID message to the client module . The monitor ID message may include information indicating whether the requested behavior feature will be monitored in the mobile device whether the feature will be monitored continuously or sample with limited frequency and other similar information.

In operations and the behavior API module may send relevant behavior information e.g. in a behavior vector to the client module . In operation the client module may send a cancel monitor message to the behavior API module to cancel further monitoring of reporting of the requested behavior or feature.

In operation of method the client module may register a callback with the behavior API module to receive a notification when a certain behavior is detected in the mobile device. In operation the behavior API module may send the client module a notification message indicating that the behavior has been detected that there is a high probability that the behavior is not benign etc. In operation the client module may call invoke a kill operation of the behavior API module to cause the mobile device processor to terminate a process or software application associated with the reported behavior. In operation the behavior API module may continue to send the client module notification messages and probability values e.g. in response to detecting another instance of the requested behavior until client module registers the callback. In operation the client module may deregister its request to receive notifications its request for actuation etc.

In block the mobile device processor may receive a first list of behavior features from the third party network server via the client module. The first list of behavior features may include or identify features that are understood by the third party network server and or that the server may analyze. The first list may also include features included in the dictionary database of features understood by the mobile device features that are high level heuristics features that are agnostic to the mobile device modules and systems e.g. operating systems hardware etc. and or features that are described in high level file format or description language e.g. XML etc. . In an aspect the first list may also include an ordering or rating of the relative importance of the various features to the third party network server.

In block the mobile device processor may access a dictionary database and or other similar structures to identify the features included in the first list of behavior features that are observable features understood by the mobile device may be observed in the mobile device and or are the best features for enabling the mobile device processor to conclusively determine whether a mobile device behavior is benign or not benign.

In block the mobile device processor may generate a second list of behavior features that includes the observable features determined to be the best features for enabling the mobile device processor to conclusively determine whether a mobile device behavior is benign or not benign and send the generated second list to the third party network server. In an aspect the mobile device processor may generate the second list to include a subset of the features included in the first list of behavior features. In various aspects the mobile device processor may generate the second list based on an ordering or rating of features included in the first list by third party network server an ordering or rating of features as determined by behavior observer and or analysis modules of the mobile device cost of observing the features and or the availability of mobile device resources e.g. processing resources battery resources etc. .

In block the mobile device processor may receive behavior models and or other structures that map features to a specific behavior classification e.g. benign malicious suspicious etc. . In an aspect the received behavior models structures may map only the features identified in the second list to a specific behavior classification. In an aspect in block the mobile device processor may receive a finite state machine FSM description mapping the various features to good bad suspicious behavior.

In block the mobile device processor may observe mobile device behaviors over a period of time and collect behavior information suitable for use in identifying mobile device behaviors that are inconsistent with normal operation patterns. In block the mobile device processor may compare observed mobile device behaviors to the received models mappings to determine whether an observed behavior is suspicious or malicious performance degrading.

In determination block the mobile device processor may determine whether the behavior is not benign. If the mobile device processor determines that the observed behavior is not benign i.e. determination block Malicious in block the mobile device processor may perform various operations to correct or prevent the performance degrading behavior. The processor may return to observing mobile device behaviors in block .

If the mobile device processor determines that the observed behaviors are benign i.e. determination block Benign the mobile device processor may ignore the behavior and or log or register the behavior as benign in block and return to observing mobile device behaviors in block .

If the mobile device processor determines that the observed behaviors are suspicious i.e. determination block Suspicious the mobile device processor may perform any of the operations illustrated in and return to observing mobile device behaviors in block . This process may continue until the processor conclusively determines that the observed behavior is either benign or not benign.

In block of method the partner client module may request behavior information from a behavior observer or behavior analyzer modules via the behavior API module . In block the partner client may receive the behavior information and send the behavior information to a third party server. In various aspects the processor may wait to receive updated behavior models from the third party server or return to observing mobile device behaviors in block .

The observer mode module may receive control information from various sources which may include an analyzer unit e.g. the analyzer module described above with reference to and or an application API. The observer mode module may send control information pertaining to various observer modes to the adaptive filter module and the high level behavior detection module .

The adaptive filter module may receive data information from multiple sources and intelligently filter the received information to generate a smaller subset of information selected from the received information. This filter may be adapted based on information or control received from the analyzer module or a higher level process communicating through an API. The filtered information may be sent to the throttle module which may be responsible for controlling the amount of information flowing from the filter to ensure that the high level behavior detection module does not become flooded or overloaded with requests or information.

The high level behavior detection module may receive data information from the throttle module control information from the observer mode module and context information from other components of the mobile device. The high level behavior detection module may use the received information to perform spatial and temporal correlations to detect or identify high level behaviors that may cause the device to perform at sub optimal levels. The results of the spatial and temporal correlations may be sent to the behavior vector generator which may receive the correlation information and generate a behavior vector that describes the behaviors of particular process application or sub system. In an aspect the behavior vector generator may generate the behavior vector such that each high level behavior of a particular process application or sub system is an element of the behavior vector. In an aspect the generated behavior vector may be stored in a secure buffer . Examples of high level behavior detection may include detection of the existence of a particular event the amount or frequency of another event the relationship between multiple events the order in which events occur time differences between the occurrence of certain events etc.

In the various aspects the behavior observer module may perform adaptive observations and control the observation granularity. That is the behavior observer module may dynamically identify the relevant behaviors that are to be observed and dynamically determine the level of detail at which the identified behaviors are to be observed. In this manner the behavior observer module enables the system to monitor the behaviors of the mobile device at various levels e.g. multiple coarse and fine levels . The behavior observer module may enable the system to adapt to what is being observed. The behavior observer module may enable the system to dynamically change the factors behaviors being observed based on a focused subset of information which may be obtained from a wide verity of sources.

As discussed above the behavior observer module may perform adaptive observation techniques and control the observation granularity based on information received from a variety of sources. For example the high level behavior detection module may receive information from the throttle module the observer mode module and context information received from other components e.g. sensors of the mobile device. As an example a high level behavior detection module performing temporal correlations might detect that a camera has been used and that the mobile device is attempting to upload the picture to a server. The high level behavior detection module may also perform spatial correlations to determine whether an application on the mobile device took the picture while the device was holstered and attached to the user s belt. The high level behavior detection module may determine whether this detected high level behavior e.g. usage of the camera while holstered is a behavior that is acceptable or common which may be achieved by comparing the current behavior with past behaviors of the mobile device and or accessing information collected from a plurality of devices e.g. information received from a crowd sourcing server . Since taking pictures and uploading them to a server while holstered is an unusual behavior as may be determined from observed normal behaviors in the context of being holstered in this situation the high level behavior detection module may recognize this as a potentially threatening behavior and initiate an appropriate response e.g. shutting off the camera sounding an alarm etc. .

The various aspects may provide cross layer observations on mobile devices encompassing webkit SDK NDK kernel drivers and hardware in order to characterize system behavior. The behavior observations may be made in real time.

The observer module may perform adaptive observation techniques and control the observation granularity. As discussed above there are a large number i.e. thousands of factors that could contribute to the mobile device s degradation and it may not be feasible to monitor observe all of the different factors that may contribute to the degradation of the device s performance. To overcome this the various aspects dynamically identify the relevant behaviors that are to be observed and dynamically determine the level of detail at which the identified behaviors are to be observed.

In determination block the mobile device processor may determine whether suspicious behaviors or potential problems can be identified and corrected based on the results of the behavioral analysis. When the mobile device processor determines that the suspicious behaviors or potential problems can be identified and corrected based on the results of the behavioral analysis i.e. determination block Yes in block the processor may initiate a process to correct the behavior and return to block to perform additional coarse observations.

When the mobile device processor determines that the suspicious behaviors or potential problems cannot be identified and or corrected based on the results of the behavioral analysis i.e. determination block No in determination block the mobile device processor may determine whether there is a likelihood of a problem. In an aspect the mobile device processor may determine that there is a likelihood of a problem by computing a probability of the mobile device encountering potential problems and or engaging in suspicious behaviors and determining whether the computed probability is greater than a predetermined threshold. When the mobile device processor determines that the computed probability is not greater than the predetermined threshold and or there is not a likelihood that suspicious behaviors or potential problems exist and or are detectable i.e. determination block No the processor may return to block to perform additional coarse observations.

When the mobile device processor determines that there is a likelihood that suspicious behaviors or potential problems exist and or are detectable i.e. determination block Yes in block the mobile device processor may perform deeper logging observations or final logging on the identified subsystems processes or applications. In block the mobile device processor may perform deeper and more detailed observations on the identified subsystems processes or applications. In block the mobile device processor may perform further and or deeper behavioral analysis based on the deeper and more detailed observations. In determination block the mobile device processor may again determine whether the suspicious behaviors or potential problems can be identified and corrected based on the results of the deeper behavioral analysis. When the mobile device processor determines that the suspicious behaviors or potential problems can not be identified and corrected based on the results of the deeper behavioral analysis i.e. determination block No the processor may repeat the operations in blocks until the level of detail is fine enough to identify the problem or until it is determined that the problem cannot be identified with additional detail or that no problem exists.

When the mobile device processor determines that the suspicious behaviors or potential problems can be identified and corrected based on the results of the deeper behavioral analysis i.e. determination block Yes in block the mobile device processor may perform operations to correct the problem behavior and the processor may return to block to perform additional operations.

In an aspect as part of blocks of method the mobile device processor may perform real time behavior analysis of the system s behaviors to identify suspicious behavior from limited and coarse observations to dynamically determine the behaviors to observe in greater detail and to dynamically determine the precise level of detail required for the observations. This enables the mobile device processor to efficiently identify and prevent problems from occurring without requiring the use of a large amount of processor memory or battery resources on the device.

In optional block the mobile device processor may receive via a client module and or the application programming interface a request for a behavior log that identifies one or more of a granularity level a specific application a duration or period of time a specific process and a priority. In optional block the mobile device processor may generate a behavior log that includes information collected based on an analysis of the mobile device behavior application or process. In optional block the mobile device processor may send the generated behavior log to a third party server via a client module and or the application programming interface. In optional block the mobile device processor may receive via a client module and or application programming interface a request for actuation that includes a command suitable for causing the mobile device to notify a mobile device user block a process or terminate the process. In optional block the mobile device processor may receive via a targeted behavior model that identifies factors and data points most relevant to conclusively determining whether a mobile device behavior is benign or not benign.

In the various aspects the first and second modules may be any of the modules discussed above with reference to such as the behavior observer module the behavior analyzer module partner client module etc.

The various aspects may be implemented on a variety of mobile computing devices an example of which is illustrated in in the form of a smartphone. A smartphone may include a processor coupled to internal memory a display and to a speaker. Additionally the smartphone may include an antenna for sending and receiving electromagnetic radiation that may be connected to a wireless data link and or cellular telephone transceiver coupled to the processor . Smartphones typically also include menu selection buttons or rocker switches for receiving user inputs.

A typical smartphone also includes a sound encoding decoding CODEC circuit which digitizes sound received from a microphone into data packets suitable for wireless transmission and decodes received sound data packets to generate analog signals that are provided to the speaker to generate sound. Also one or more of the processor wireless transceiver and CODEC may include a digital signal processor DSP circuit not shown separately .

Portions of the aspect methods may be accomplished in a client server architecture with some of the processing occurring in a server such as maintaining databases of normal operational behaviors which may be accessed by a mobile device processor while executing the aspect methods. Such aspects may be implemented on any of a variety of commercially available server devices such as the server illustrated in . Such a server typically includes a processor coupled to volatile memory and a large capacity nonvolatile memory such as a disk drive . The server may also include a floppy disc drive compact disc CD or digital versatile disc DVD disc drive coupled to the processor . The server may also include network access ports coupled to the processor for establishing data connections with a network such as a local area network coupled to other broadcast system computers and servers.

The processors may be any programmable microprocessor microcomputer or multiple processor chip or chips that can be configured by software instructions applications to perform a variety of functions including the functions of the various aspects described below. In some mobile devices multiple processors may be provided such as one processor dedicated to wireless communication functions and one processor dedicated to running other applications. Typically software applications may be stored in the internal memory before they are accessed and loaded into the processor . The processor may include internal memory sufficient to store the application software instructions.

The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the steps of the various aspects must be performed in the order presented. As will be appreciated by one of skill in the art the order of steps in the foregoing aspects may be performed in any order. Words such as thereafter then next etc. are not intended to limit the order of the steps these words are simply used to guide the reader through the description of the methods. Further any reference to claim elements in the singular for example using the articles a an or the is not to be construed as limiting the element to the singular.

The various illustrative logical blocks modules circuits and algorithm steps described in connection with the aspects disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

Many mobile computing devices operating system kernels are organized into a user space where non privileged code runs and a kernel space where privileged code runs . This separation is of particular importance in Android and other general public license GPL environments where code that is part of the kernel space must be GPL licensed while code running in the user space may not be GPL licensed. It should be understood that the various software components modules discussed here may be implemented in either the kernel space or the user space unless expressly stated otherwise.

As used in this application the terms component module system engine manager and the like are intended to include a computer related entity such as but not limited to hardware firmware a combination of hardware and software software or software in execution which are configured to perform particular operations or functions. For example a module or component may be but are not limited to a process running on a processor a thread of execution an object an executable a software application program a processor and or a computer. By way of illustration both an application running on a computing device and the computing device may be referred to as a component. In addition one or more components or modules may reside within a process and or thread of execution and may be localized on one processor or core and or distributed between two or more processors or cores. In addition these components modules may execute from various non transitory computer readable media having various instructions and or data structures stored thereon. Modules may communicate by way of local and or remote processes function or procedure calls electronic signals data packets memory read writes and other known computer processor and or process related communication methodologies.

The hardware used to implement the various illustrative logics logical blocks modules and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a multiprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a multiprocessor a plurality of multiprocessors one or more multiprocessors in conjunction with a DSP core or any other such configuration. Alternatively some steps or methods may be performed by circuitry that is specific to a given function.

In one or more exemplary aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored as one or more instructions or code on a non transitory computer readable medium or non transitory processor readable medium. The steps of a method or algorithm disclosed herein may be embodied in a processor executable software module which may reside on a non transitory computer readable or processor readable storage medium. Non transitory computer readable or processor readable storage media may be any storage media that may be accessed by a computer or a processor. By way of example but not limitation such non transitory computer readable or processor readable media may include RAM ROM EEPROM FLASH memory CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that may be used to store desired program code in the form of instructions or data structures and that may be accessed by a computer. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically with lasers. Combinations of the above are also included within the scope of non transitory computer readable and processor readable media. Additionally the operations of a method or algorithm may reside as one or any combination or set of codes and or instructions on a non transitory processor readable medium and or computer readable medium which may be incorporated into a computer program product.

The preceding description of the disclosed aspects is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these aspects will be readily apparent to those skilled in the art and the generic principles defined herein may be applied to other aspects without departing from the spirit or scope of the invention. Thus the present invention is not intended to be limited to the aspects shown herein but is to be accorded the widest scope consistent with the following claims and the principles and novel features disclosed herein.

