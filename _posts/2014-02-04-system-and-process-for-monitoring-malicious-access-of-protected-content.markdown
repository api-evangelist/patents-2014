---

title: System and process for monitoring malicious access of protected content
abstract: A method detects unauthorized access of data, and includes receiving data from a content provider by a content reproducing device; storing the received data in a memory storage device of the content reproducing device; obtaining an address range of a buffer of the content reproducing device; intercepting system application programming interface calls related to memory access of the address range of the buffer; comparing the intercepted system application programming interface calls to an expected sequence of memory access calls; and determining that a particular memory access call is unauthorized when the particular memory access call accesses the address range of the buffer while not belonging to the expected sequence of memory access calls.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09519758&OS=09519758&RS=09519758
owner: Pegasus Media Security, LLC
number: 09519758
owner_city: Reston
owner_country: US
publication_date: 20140204
---
The technical field relates to digital rights management DRM a category of products and technologies that aims to secure access to digital media and to protect it from unauthorized use.

With the advent of digital media video audio image text games and other forms of content stored and delivered in digital formats DRM that aims to secure access to content and protect it from unauthorized use has become widely implemented. Though the methodologies DRM solutions employ may vary the objectives of DRM are usually to increase privacy and prevent piracy namely the unauthorized and typically illegal acquisition of copyrighted or confidential content to attempt to ensure that the content that is being monetized is not consumed for example viewed listened to played or read without collecting payment from the consumer to attempt to ensure that content is used within the constraints often licensing terms stipulated by the content owner and to maintain a record of the identity of the original content holder i.e. a licensee of content or a buyer of content for a particular piece of content even if the content asset has been pirated to facilitate investigation and prosecution of the pirates of the content.

A single DRM product or a group of DRM products may be used in conjunction with one another to protect content during all of the below stages in the digital media distribution process 

1. While media is stored in a media source 2. While media is being delivered from a media source to a media player one example of this is media that is being transmitted from a media server to a media player over a network such as the Internet and 3. While media is processed by the media player and delivered to a display device. A display device may be a monitor a screen a television a projector a personal computer a smartphone or any other hardware that permits a user to play media.

Media remains vulnerable to piracy and other forms of unauthorized use while it is being transmitted to a screen or some other device that transmits content for a user s perception because the media is in an unencrypted format when it is being transmitted to the screen.

The analog hole or the analog loophole is one example of the media s vulnerability during its transmission to a screen. The analog hole refers to digital media s vulnerability to piracy when it is decoded while it is being transmitted to a display device by a decoder from the digital format in which it was previously encoded . Another example of this type of vulnerability can also be seen in digital formats such the HDMI format which is often used to provide media data to display devices. HDMI utilizes digital data but it is still susceptible to the type of unauthorized use noted above. Malicious users may try to make a copy of the media content after the media content has been decrypted in preparation for being displayed on the display device. These two examples of vulnerability are not exclusive and there are other such examples.

The present invention recognizes such vulnerably of media data whether it is video or audio data just prior to being presented to a user on a visual display device and or an audio reproducing device and proposes a number of approaches to monitor and protect content after it has been decrypted or otherwise stripped of protective measures and is being transmitted to the visual display device and or audio reproducing device.

The following embodiments provide a summary of the disclosure but are in no way intended to limit the scope of the invention.

In an embodiment a method of detecting an unauthorized access of data includes receiving data from a content provider by a content reproducing device storing the received data in a memory storage device of the content reproducing device obtaining an address range of a buffer of the content reproducing device intercepting system application programming interface calls related to memory access of said address range of said buffer comparing the intercepted system application programming interface calls to an expected sequence of memory access calls and determining that a particular memory access call is unauthorized when the particular memory access call accesses said address range of said buffer while not belonging to the expected sequence of memory access calls.

In an embodiment the data is protected by encryption prior to the receiving and the method further includes decrypting the received data stored in the memory storage device into unencrypted data by a media player module executed on a processing device of the content reproducing device and storing the unencrypted data in said buffer.

In an embodiment the buffer is a picture buffer in a random access memory device of the content reproducing device and the method further includes copying the unencrypted data from the picture buffer to a frame buffer of the content reproducing device the frame buffer providing the unencrypted data to a display device obtaining an address range of the frame buffer and intercepting the system application programming interface calls related to memory access of said address range of the frame buffer.

In an embodiment the frame buffer is a memory space on a video and sound card of the content reproducing device.

In an embodiment the method includes detecting whether the media player module is operating before said obtaining.

In an embodiment the method includes storing a count of memory access calls that were determined to be unauthorized access and comparing said count to a threshold value to make a determination that the unauthorized access of data has occurred.

In an embodiment the method includes terminating the media player module in response to a determination that the unauthorized access of data has occurred.

In an embodiment the method includes presenting a warning message on the display device in response to a determination that the unauthorized access of data has occurred.

In an embodiment the method includes transmitting a message to the content provider in response to a determination that the unauthorized access of data has occurred.

In an embodiment the system application programming interface calls related to memory access include at least one of memcpy and write.

In an embodiment the method includes providing by the media player module the expected sequence of memory calls.

In an embodiment the method includes providing by the content provider the media player module to the content reproducing device.

In an embodiment the media player module provides a beginning address and a buffer size and the obtaining the address range is based on said beginning address and said buffer size.

In an embodiment a content reproducing device for reproducing data and detecting unauthorized access of said data includes a communication interface configured to receive data from a content provider a memory storage device configured to store the received data and

a processor configured to copy the received data from the memory storage to a buffer of the memory storage device obtain an address range of said buffer intercept system application programming interface calls related to memory access of said address range of said buffer compare the intercepted system application programming interface calls to an expected sequence of memory access calls and determine that a particular memory access call is unauthorized when the particular memory access call accesses said address range of said buffer while not belonging to the expected sequence of memory access calls.

In an embodiment the data is protected by encryption prior to reception by the communication interface the media player software is configured to decrypt the received data into unencrypted data and the processor is configured to store the unencrypted data in said buffer.

In an embodiment a non transitory computer readable recording medium is encoded with instructions wherein the instructions when executed on a processor of a content reproducing device cause the content reproducing device to perform a method. The method includes receiving data from a content provider by the content reproducing device storing the received data in a memory storage device of the content reproducing device decrypting the protected data stored in the memory storage device into unencrypted data by a media player module executed on the processor of the content reproducing device storing the unencrypted data in a buffer of the content reproducing device obtaining an address range of said buffer of the content reproducing device intercepting system application programming interface calls related to memory access of said address range of said buffer comparing the intercepted system application programming interface calls to an expected sequence of memory access calls and determining that a particular memory access call is unauthorized when the particular memory access call accesses said address range of said buffer while not belonging to the expected sequence of memory access calls.

In an embodiment the instructions further cause the content reproducing device to decrypt the received data stored in the memory storage device into unencrypted data by a media player module executed on a processing device of the content reproducing device and store the unencrypted data in said buffer.

In an embodiment a method of detecting an unauthorized access of data includes receiving data from a content provider by a content reproducing device executing a media player module that loads graphic libraries storing the received data in a memory storage device of the content reproducing device copying the stored received data in a buffer of the content reproducing device monitoring a loading sequence of graphic libraries that are used by the media player module to access data stored in said buffer comparing the monitored loading sequence to an expected loading sequence of graphic libraries and determining that a particular call is the unauthorized access of data when the particular call is to a library that does not belong to the expected loading sequence of graphic libraries.

In an embodiment the method includes decrypting the received data stored in the memory storage device into unencrypted data by the media player module executed on a processing device of the content reproducing device.

In an embodiment a method includes receiving data from a content provider by a content reproducing device storing the received data in a memory storage device of the content reproducing device copying the stored received data in a buffer of the content reproducing device obtaining a list of screen capture programs detecting that a program belonging to the list of content capture programs is being executed at the same time as the media player module and determining that unauthorized access of data is occurring when the program belonging to the list of screen capture programs is detected.

As illustrated in content in the form of digital data including digital media is made available to a consumer by delivering digital media from a media source to a media player via a network . Examples of media sources include but are not limited to a server that delivers digital media such as a streaming media server or a DVD player . Examples of media players include but are not limited to streaming media players applications running on mobile devices televisions and software programs running on a computer . Although illustrates player software executing in a computer similar software can be executed on other hardware platforms.

As illustrated in digital media is received by media player and forwarded to player software . Digital media may also be stored in local encrypted storage or may be obtained from a DVD player . Media systems can be designed to work on personal computers such as computer or laptop PCs mobile devices such as tablets and smart phones. Player software although often protected with DRM schemes does not protect the media content after it is decrypted. In other words media content is typically vulnerable after it has been decrypted.

The player software decrypts the protected digital data to enable the reproduction of the digital data for a user s perception. The player software may use public or private encryption and decryption keys to decrypt the digital data and generate unencrypted media data . As already mentioned above encryption is only one of many possible schemes to protect the data. Thus player software may use any other scheme to remove protective measures from protected data to enable the data to be played.

Unencrypted media data is stored in a memory buffer which is described in more detail below. The memory buffer holds the unencrypted media data until the data is provided to the display device . Examples of display devices include but are not limited to a screen a computer a television a phone a tablet screen and a portable communication device. The memory buffer may hold the data for some time before providing it to the display device to facilitate smooth reproduction of the data.

A monitoring process is executed on the media player and detects the activity of the malicious process . The monitoring process may apply hooking technique to monitor memory accesses to the buffer storing the unencrypted media data by external or foreign tasks so that illegal media content access can be detected. In addition the monitoring process may detect the presence and or execution of a content capture process such as a screen capture program. Screen capture is one type of a content capture process but there are others that capture content other than the image on the screen. For example other content capture processes capture the audio being reproduced. The monitoring process may also monitor a hardware video card of computer to detect tapping into the video card . Video card may in fact be a video and audio card that performs both video and audio processing even though it is referred to as video card .

If it is determined that the player software is running i.e. being executed the monitoring process obtains picture buffer addresses from the player software in step . The monitoring process may also obtain frame buffer addresses and lengths of the buffers from the player software .

In step the monitoring process performs one or more detection processes which are described below. The result of step may indicate that no malicious activity is detected in step . In that case the monitoring process will return to step and repeat the above process.

On the other hand if it is determined in step that the results of step indicate the presence of malicious activity the monitoring process may take various actions.

In step the monitoring process may terminate the player software thus ending the reproduction of content. It may also show a warning message that may be displayed on the display device that is reproducing the content. It may also report the detection of the malicious activity to media source . Such a report may include identification information of the content that was being reproduced a time and date identification of the malicious activity identification information of the media player and identification information of the user of the media player . The identification information may include but is not limited to an internet protocol IP address and an identifier of the decryption key used to decrypt the content in the player software .

Based on the information received by the media source the owner of the content that was subject to the malicious activity may take action against the user identified by the monitoring process . For example the media source may store information about users in client database and designate a particular user as untrustworthy. A user designated as untrustworthy may be prevented from accessing content from the media source in the future and encryption and or decryption keys associated with the user may be deactivated. For example a public key associated with the user may be designated as untrustworthy so that no media will be encrypted with that key by the media source in the future.

As illustrated in the computer includes a random access memory RAM . A portion of the RAM is allocated as a stream buffer and another portion of the RAM is allocated as a picture buffer . The stream buffer stores or buffers an incoming stream of protected data . This data cannot be rendered on a display as it is encrypted.

The player software accesses the stream buffer and decrypts the stored data into unprotected data and stores the decrypted data in the picture buffer .

The decrypted data stored in picture buffer is then copied to frame buffer on the video card . The video card outputs data from the frame buffer to the display device which in turn presents content for a user s perception.

The player software informs the monitoring process of the addresses and sizes of the picture buffer and or the stream buffer and or the frame buffer . Thus the monitoring process is aware of specific memory locations where unencrypted content is stored after it is decrypted by the player software .

The decrypted data is vulnerable to interception and malicious copying when it is stored in the picture buffer . Thus the monitoring process monitors specific activity in the picture buffer to detect malicious access.

Memory locations to be monitored are mainly picture buffer unencrypted picture data buffer and frame buffer video frame buffer . Frame buffer may be allocated on both RAM and the video card .

The monitoring process may use the hooking technique to intercept system application programming interface API calls related to memory access such as memcpy strcpy which are called from other running processes. The term hooking represents a technique of getting control over a particular piece of code execution by intercepting a set of API calls. It provides a mechanism that can alter or augment the behavior of an operating system of software applications or of other software components without having their source code available.

Hooking technique can be used for intrusion detection memory misuse detection and antivirus software applications. Monitoring process uses this technique to monitor running programs processes that are reading writing memory locations that contain unencrypted media data. The monitoring process is aware of the memory addresses where unencrypted data is stored based on the information it receives from the player software .

The following tables illustrate examples of specific detection process taking place in step . Specifically the detection process may include one or more of the following 1. Abnormal picture buffer access detection 2. Abnormal frame buffer access detection 3. Abnormal library loading detection and 4. Video screen capture or audio capture process detection.

Table 1 illustrates an example expressed in pseudo code of what would be considered a normal memory access sequence and what would be considered an abnormal memory call sequence. The detection of the abnormal memory call sequence would indicate malicious access.

In the normal access sequence the encrypted media data is read from input stream into encrypted data buffer by the read function. The data in encrypted buffer is decrypted by decrypt function. The decrypted media data is copied in codec buffer by the memcpy function. Then the decode function decodes the media data as pictures and saves them in picture buffer. The text underlined in Table 1 above indicates specific instructions that make the sequence malicious because they show that unencrypted data is being copied of the picture buffer into an unexpected location such as a file.

Table 2 presents an illustrative example in pseudo code of what would be considered a normal frame buffer access sequence and what would be considered an abnormal memory call sequence. However this is not the only normal access sequence and it is to be understood that many other normal sequences exist. Likewise there are many specific examples of malicious or abnormal memory call sequences that would indicate malicious access.

In the normal media player memory access sequence the player allocates a piece of memory as frame buffer by the memalloc function. Then decoded pictures are copied into frame buffer by the memcpy function. The text underlined in Table 2 above indicates specific instructions that make the sequence malicious because they show that unencrypted data is being copied of the picture buffer into an unexpected location such as a file.

A malicious attacker may load a fake library to bypass graphic library API calls so that unencrypted media data can be accessed outside of the media player. Table 3 illustrates an example in pseudo code of what would be considered a normal library loading sequence and what would be considered an abnormal sequence. This activity can be detected by monitoring how libraries were loaded when the media player process is executed. Some libraries that may be monitored include graphic libraries such as SDL Simple DirectMedia Layer and OpenGL Open Graphics Library .

In the normal loading sequence all the libraries loaded are needed for the player and in the order as designed. The text underlined in Table 3 above indicates specific instructions that make the sequence malicious because an unknown library was loaded which may access unencrypted media data.

Finally the monitoring process can monitor active tasks executing on the processor of player and detect processes which are known to be content capture processes. A screen capture process can save an image of the screen but some can also tap into the stream of content data being played and store the streamed data.

The media source may maintain and update a list of known content capture processes. The media source may also provide the list of known content capture processes to player software and may update the list in the player software every time the software is started.

The software may provide a list of know screen capture processes to the monitoring process . The list may include the content capture program name and or the signature of the software. The media source may also directly provide the list to the monitoring service in addition or instead of to player software .

In some embodiments the monitoring service may determine that a particular process or task is a content program even if it is not listed on the list of known content capture programs. The list will update automatically at the time it is detected if a new malicious processes or task are identified.

In an embodiment the monitoring service may store a history of abnormal activities and consider the aggregate activity when determining whether a malicious activity should be reported.

An advantage of the present invention is the ability to protect content between the player and a video card or sound card driver. A video card driver is software that is very specific to particular hardware a video card and it is difficult and time consuming to develop and support all possible video card drivers. However the monitoring process is not specific to a particular video card driver but instead can monitor memory locations that would be accessed by the video card driver. For audio content the same concept is applied to a sound card driver.

The functionality described above may be implemented on special hardware such as would be included in a dedicated content reproduction apparatus or may be implemented on a computing device . is a block diagram illustrating an example computing device that is arranged for implementing the monitoring functionality in accordance with the present disclosure. In a very basic configuration computing device typically includes one or more processors and system memory . A memory bus can be used for communicating between the processor and the system memory .

Depending on the desired configuration processor can be of any type including but not limited to a microprocessor P a microcontroller C a digital signal processor DSP or any combination thereof. Processor can include one more levels of caching such as a level one cache and a level two cache a processor core and registers . The processor core can include an arithmetic logic unit ALU a floating point unit FPU a digital signal processing core DSP Core or any combination thereof. A memory controller can also be used with the processor or in some implementations the memory controller can be an internal part of the processor .

Depending on the desired configuration the system memory can be of any type including but not limited to volatile memory such as RAM non volatile memory such as ROM flash memory etc. or any combination thereof. System memory typically includes an operating system one or more applications and program data . Application includes player software and monitoring process encoded as a computer algorithm that is arranged to decrypt protected content and performs the monitoring functionality described above. Program Data may include the various buffer addresses and or a list of known screen capture programs stored as service data . In some embodiments application can be arranged to operate with program data on an operating system to perform the software functionality and or the monitoring service functionality. This described basic configuration is illustrated in by those components within dashed line .

Computing device can have additional features or functionality and additional interfaces to facilitate communications between the basic configuration and any required devices and interfaces. For example a bus interface controller can be used to facilitate communications between the basic configuration and one or more data storage devices via a storage interface bus . The data storage devices can be removable storage devices non removable storage devices or a combination thereof. Examples of removable storage and non removable storage devices include magnetic disk devices such as flexible disk drives and hard disk drives HDD optical disk drives such as compact disk CD drives or digital versatile disk DVD drives solid state drives SSD and tape drives to name a few. Example computer storage media can include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data.

System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media can be part of device .

Device can also include an interface bus for facilitating communication from various interface devices e.g. output interfaces peripheral interfaces and communication interfaces to the basic configuration via the bus interface controller . Example output devices include a graphics processing unit and an audio processing unit which can be configured to communicate to various external devices such as a display or speakers via one or more A V ports . Example peripheral interfaces include a serial interface controller or a parallel interface controller which can be configured to communicate with external devices such as input devices e.g. keyboard mouse pen voice input device touch input device etc. or other peripheral devices e.g. printer scanner etc. via one or more I O ports . An example communication device includes a network controller which can be arranged to facilitate communications with one or more other computing devices over a network communication via one or more communication ports . The communication connection is one example of a communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. A modulated data signal can be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media can include wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency RF infrared IR and other wireless media. The term computer readable media as used herein can include both storage media and communication media.

Device may be implemented as a portion of a small form factor portable or mobile electronic device such as a cell phone a personal data assistant PDA a personal media player device television set a wireless web watch device a personal headset device an application specific device or a hybrid device that include any of the above functions. Computing device can also be implemented as a personal computer including both laptop computer and non laptop computer configurations.

There are various vehicles by which processes and or systems and or other technologies described herein can be effected e.g. hardware software and or firmware and that the preferred vehicle will vary with the context in which the processes and or systems and or other technologies are deployed.

The foregoing detailed description has set forth various embodiments of the devices and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples can be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof. In one embodiment several portions of the subject matter described herein may be implemented via electronic circuits such as Application Specific Integrated Circuits ASICs Field Programmable Gate Arrays FPGAs digital signal processors DSPs or other integrated formats. However those skilled in the art will recognize that some aspects of the embodiments disclosed herein in whole or in part can be equivalently implemented in integrated circuits as one or more computer programs running on one or more computers e.g. as one or more programs running on one or more computer systems as one or more programs running on one or more processors e.g. as one or more programs running on one or more microprocessors as firmware or as virtually any combination thereof and that designing the circuitry and or writing the code for the software and or firmware would be well within the skill of one of skill in the art in light of this disclosure. In addition those skilled in the art will appreciate that the mechanisms of the subject matter described herein are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the subject matter described herein applies regardless of the particular type of signal bearing medium used to actually carry out the distribution. Examples of a signal bearing medium include but are not limited to the following a recordable type medium such as a floppy disk a hard disk drive a Compact Disc CD a Digital Video Disk DVD a digital tape a computer memory etc. and a transmission type medium such as a digital and or an analog communication medium e.g. a fiber optic cable a waveguide a wired communications link a wireless communication link etc. .

Those skilled in the art will recognize that it is common within the art to describe devices and or processes in the fashion set forth herein and thereafter use engineering practices to integrate such described devices and or processes into data processing systems. That is at least a portion of the devices and or processes described herein can be integrated into a data processing system via a reasonable amount of experimentation. Those having skill in the art will recognize that a typical data processing system generally includes one or more of a system unit housing a video display device an audio output device a memory such as volatile and non volatile memory processors such as microprocessors and digital signal processors computational entities such as operating systems drivers graphical user interfaces and applications programs one or more interaction devices such as a touch pad or screen and or control systems including feedback loops and control motors e.g. feedback for sensing position and or velocity control motors for moving and or adjusting components and or quantities . A typical data processing system may be implemented utilizing any suitable commercially available components such as those typically found in data computing communication and or network computing communication systems.

With respect to the use of substantially any plural and or singular terms herein those having skill in the art can translate from the plural to the singular and or from the singular to the plural as is appropriate to the context and or application. The various singular plural permutations may be expressly set forth herein for sake of clarity.

While various aspects and embodiments have been disclosed herein other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting with the true scope and spirit being indicated by the following claims.

