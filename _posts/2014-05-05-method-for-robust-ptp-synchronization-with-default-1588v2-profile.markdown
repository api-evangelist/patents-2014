---

title: Method for robust PTP synchronization with default 1588V2 profile
abstract: Exemplary methods for reducing sync time in a precision time protocol (PTP) network include receiving, by a first PTP slave port of a first network device, timing messages from a second PTP master port of a second network device. The methods include maintaining a PTP master clock based on timing information included in the timing messages received from the second network device via the first PTP port. The methods further include receiving, by a third PTP passive port of the first network device, timing messages from a fourth PTP master port of a third network device. The methods include determining the third PTP passive port is a protective passive port based on a stepsRemoved value of the third network device, and maintaining an auxiliary clock based on the timing information included in the timing messages received from the third network device via the third PTP port.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09270395&OS=09270395&RS=09270395
owner: Telefonaktiebolaget L M Ericsson (publ)
number: 09270395
owner_city: Stockholm
owner_country: SE
publication_date: 20140505
---
Embodiments of the invention relate to the field of packet networks and more specifically to clock synchronization over a network.

The Precision Time Protocol PTP is a protocol utilized for synchronizing clocks throughout a network. PTP was originally defined by the Institute of Electrical and Electronics Engineers IEEE 1588 2002 standard entitled Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems hereby incorporated by reference and released in 2002. In 2008 a revised standard IEEE 1588 2008 entitled IEEE Standard for a Precision Clock Synchronization Protocol for Networked Measurement and Control Systems hereby incorporated by reference was released. This new version also commonly known as PTP Version 2 PTPv2 improves accuracy precision and robustness. IEEE 1588 2008 was initially utilized primarily by instrumentation and control applications. The telecom industry however has since adopted IEEE 1588 2008 as a solution for providing time synchronization for packet network applications such as mobile backhaul. These packet network applications however require microsecond or better time distribution over the network and high quality fault tolerance.

IEEE 1588 2008 defines a best master clock algorithm BMCA executed at each PTP clock in the PTP domain for configuring the PTP clocks to be a grandmaster boundary clock or slave clock. By utilizing their BMCA to determine their roles in the PTP domain the PTP clocks converge to form a synchronization tree. While the synchronization tree is being formed all clocks start locking i.e. synchronizing to their masters. Typically it requires several minutes for each PTP clock to synchronize to its master. After the synchronization tree is formed if one or more of the PTP clocks or the network experience a fault all the downstream clocks will rearrange re converge to form a new synchronization tree. During this re convergence period timing transients will occur as new master and slave ports are selected by the BMCAs. These timing transients result in a period of time where the clock quality advertised to the ultimate slave clocks is inaccurate. These timing transients persist until all PTP clocks in the synchronization tree actually acquire synchronization to their new masters. In other words for several minutes or perhaps an hour or longer in larger networks the timing accuracy is not as good as advertised. This results in the application being provided with inadequate timing accuracy. The timing transients that occur during the re convergence period are not acceptable by packet network applications in the telecom domain.

Known techniques such as holdover exist to work around certain failure recovery scenarios. Such techniques however are inadequate for prolonged outages. Further because the BMCA will advertise a clock quality that is not true during failure induced rearrangements holdover techniques will not work.

Exemplary methods for reducing sync time in a first network device for supporting Precision Time Protocol PTP in a network are herein described. In one embodiment the methods include receiving by a first PTP port associated with the first network device configured as a PTP slave port PTP timing messages from a second PTP port associated with a second network device configured as a PTP master port wherein the PTP timing messages include timing information of a PTP master clock maintained by the second network device. In one embodiment the methods further include maintaining a PTP master clock based on the timing information included in the PTP timing messages received from the second network device via the first PTP port. In one embodiment the methods further include receiving by a third PTP port associated with the first network device configured as a PTP passive port PTP timing messages from a fourth PTP port associated with a third network device configured as a PTP master port wherein the PTP timing messages include timing information of a PTP master clock maintained by the third network device.

According to one embodiment the methods include determining the third PTP port is a protective passive port based on a stepsRemoved value associated with the third network device wherein a stepsRemoved value indicates a number of boundary clock levels a respective network device is away from a PTP grandmaster clock of the network. In one embodiment in response to determining the third PTP port is a protective passive port maintaining a PTP auxiliary clock based on the timing information included in the PTP timing messages received from the third network device via the third PTP port wherein in an event that the first network device fails to receive PTP timing messages from the second network device via the first PTP port the PTP auxiliary clock is utilized by the first network device to synchronize its PTP master clock to the PTP master clock maintained by the third network device.

In one aspect of the invention determining the third PTP port is a protective passive port comprises determining the third network device has a stepsRemoved value that is one less than a stepsRemoved value of the first network device. In one embodiment determining the third PTP port is a protective passive port further comprises receiving by a fifth PTP port associated with the first network device configured as a PTP passive port PTP timing messages from an sixth PTP port associated with a fourth network device configured as a PTP master port wherein the PTP timing messages include timing information of a PTP master clock maintained by the fourth network device and in response to determining the fourth network device has a stepsRemoved value that is equal to a stepsRemoved value of the first network device determining the fifth PTP port is a non protective passive port.

In one aspect of the invention determining the third PTP port is a protective passive port comprises receiving by a fifth PTP port associated with the first network device configured as a PTP passive port PTP timing messages from an sixth PTP port associated with a fourth network device configured as a PTP master port wherein the PTP timing messages include timing information of a PTP master clock maintained by the fourth network device determining the third network device has a stepsRemoved value that is equal to a stepsRemoved value of the fourth network device and determining the fourth PTP port associated with the third network device has a port identity ID that is less than a port ID of the sixth PTP port associated with the fourth network device.

According to one embodiment the methods further include in response to determining a failure to receive PTP timing messages from the second network device via the first PTP port configuring the first PTP port to be a PTP master port configuring the third PTP port to be a PTP slave port and utilizing information of the PTP auxiliary clock to synchronize the PTP master clock maintained by the first network device to the PTP master clock maintained by the third network device. In one embodiment the methods further include applying a phase slope limit to the PTP master clock maintained by the first network device after the third PTP port has been configured to be a PTP slave port.

In one embodiment the second network device and the third network device are a same network device configured to serve as a PTP grandmaster clock of the network. In an alternate embodiment the second network device and the third network device are different network devices wherein the second network device and the third network device are configured to serve as a PTP boundary clock of the network. In one embodiment the second network device and the third network device are synchronized to the same grandmaster.

In the following description numerous specific details such as logic implementations opcodes means to specify operands resource partitioning sharing duplication implementations types and interrelationships of system components and logic partitioning integration choices are set forth in order to provide a more thorough understanding of the present invention. It will be appreciated however by one skilled in the art that the invention may be practiced without such specific details. In other instances control structures gate level circuits and full software instruction sequences have not been shown in detail in order not to obscure the invention. Those of ordinary skill in the art with the included descriptions will be able to implement appropriate functionality without undue experimentation.

References in the specification to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to affect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

In the following description and claims the terms coupled and connected along with their derivatives may be used. It should be understood that these terms are not intended as synonyms for each other. Coupled is used to indicate that two or more elements which may or may not be in direct physical or electrical contact with each other co operate or interact with each other. Connected is used to indicate the establishment of communication between two or more elements that are coupled with each other.

An electronic device or a computing device e.g. an end station a network device stores and transmits internally and or with other electronic devices over a network code composed of software instructions and data using machine readable media such as non transitory machine readable media e.g. machine readable storage media such as magnetic disks optical disks read only memory flash memory devices phase change memory and transitory machine readable transmission media e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals . In addition such electronic devices include hardware such as a set of one or more processors coupled to one or more other components e.g. one or more non transitory machine readable storage media to store code and or data and network connections to transmit code and or data using propagating signals as well as user input output devices e.g. a keyboard a touchscreen and or a display in some cases. The coupling of the set of processors and other components is typically through one or more interconnects within the electronic devices e.g. busses and possibly bridges . Thus a non transitory machine readable medium of a given electronic device typically stores instructions for execution on one or more processors of that electronic device. One or more parts of an embodiment of the invention may be implemented using different combinations of software firmware and or hardware.

As used herein a network device e.g. a router switch bridge is a piece of networking equipment including hardware and software which communicatively interconnects other equipment on the network e.g. other network devices end stations . Some network devices are multiple services network devices that provide support for multiple networking functions e.g. routing bridging switching Layer aggregation session border control Quality of Service and or subscriber management and or provide support for multiple application services e.g. data voice and video . Subscriber end stations e.g. servers workstations laptops netbooks palm tops mobile phones smartphones multimedia phones Voice Over Internet Protocol VOIP phones user equipment terminals portable media players GPS units gaming systems set top boxes access content services provided over the Internet and or content services provided on auxiliary private networks VPNs overlaid on e.g. tunneled through the Internet. The content and or services are typically provided by one or more end stations e.g. server end stations belonging to a service or content provider or end stations participating in a peer to peer P2P service and may include for example public webpages e.g. free content store fronts search services private webpages e.g. username pas sword accessed webpages providing email services and or corporate networks over VPNs. Typically subscriber end stations are coupled e.g. through customer premise equipment coupled to an access network wired or wirelessly to edge network devices which are coupled e.g. through one or more core network devices to other edge network devices which are coupled to other end stations e.g. server end stations .

A network interface may be physical or auxiliary and an interface address is an IP address assigned to a network interface be it a physical network interface or auxiliary network interface. A physical network interface is hardware in a network device through which a network connection is made e.g. wirelessly through a wireless network interface controller WNIC or through plugging in a cable to a port connected to a network interface controller NIC . Typically a network device has multiple physical network interfaces. A auxiliary network interface may be associated with a physical network interface with another auxiliary interface or stand on its own e.g. a loopback interface a point to point protocol interface . A network interface physical or auxiliary may be numbered a network interface with an IP address or unnumbered an network interface without an IP address . A loopback interface and its loopback address is a specific type of auxiliary network interface and IP address of a node physical or auxiliary often used for management purposes where such an IP address is referred to as the nodal loopback address. The IP address es assigned to the network interface s of a network device are referred to as IP addresses of that network device at a more granular level the IP address es assigned to network interface s assigned to a node implemented on a network device can be referred to as IP addresses of that node.

IEEE 1588 2008 defines three types of PTP clocks Ordinary Clock OC Boundary Clock BC and Transparent Clock TC . An OC has one instance of the PTP protocol running i.e. one PTP port . An OC can either provide timing to the PTP time domain i.e. be the grandmaster described in further details below or can regenerate the timing from a grandmaster i.e. be the slave described in further details below . Alternatively an OC can be configured to be Grandmaster Only Ordinary Clock GMOC which only serves as the grandmaster or a Slave Only Ordinary Clock SOOC which only serves as a slave. A BC has more than one instance of the PTP protocol running i.e. multiple PTP ports . A BC receives timing messages from an upstream master synchronizes its local time of day to these timing messages and distributes that local time of day to downstream slaves. The upstream masters can be BCs OCs GMOCs or any combination thereof. The downstream slaves can be BCs OCs SOOCs or any combination thereof. Thus a BC provides intermediate timing regeneration between grandmasters and slave OCs. A BC needs to provide fault tolerance required by the telecom network devices. A TC is also situated between grandmasters and slave OCs SOOCs but does not regenerate timing signals.

Each PTP device periodically sends Announce messages via the master PTP ports to other PTP devices in the same PTP domain. Here a PTP device refers to a network device that supports PTP. The Announce messages include clock information and identity of the sending PTP device s PTP clock stepsRemoved value of the sending PTP device and information concerning the grandmaster. A best master clock algorithm BMCA executed at each PTP clock utilizes information included in the received Announce messages to determine the role of the local master clock in the PTP domain. IEEE 1588 2008 defines three roles grandmaster GM boundary clock BC and slave.

A GM provides the ultimate time source to all other PTP clocks in a PTP time domain. The GM derives its timing from a non PTP source and distributes this time into the PTP domain using PTP messages e.g. PTP Sync messages on the packet network. All PTP clocks other than the GM synchronize to one GM clock in a PTP time domain. As a result of the BMCA running on every clock an OC GMOC or BC can take on the role as the GM.

A slave ordinary clock utilizes time codes included in PTP messages received from a grandmaster or a boundary clock to generate a local time that is an estimate of its domain s grandmaster time. This regenerated time is then provided to one or more non PTP application that is running on the slave ordinary clock or attached to the slave ordinary clock via a non PTP interface. Note that either an OC or SOOC can be a slave ordinary clock. A boundary clock BC utilizes time codes included in PTP messages received from an upstream master clock to regenerate the time codes and send them to downstream slaves. PTP clocks only synchronize to masters of the same PTP domain which is identified by a PTP domain number.

IEEE 1588 2008 specifies that a PTP port can be configured to be in one of three states master slave or passive. It shall be understood that PTP ports can be in one or more other states including for example uncalibrated listening disabled faulty initialing state etc. At any given moment there is a maximum of only one PTP port in a PTP clock that can be configured to be in the slave state. Throughout the description a PTP port configured to be in the master slave or passive state will simply be referred to as a PTP master port PTP slave port or PTP passive port respectively. A PTP clock synchronizes its local master clock to the time codes received on a PTP slave port from a peer PTP master port. A PTP passive port is utilized for pruning the PTP network to avoid timing loops. Here a timing loop refers to a phenomenon where a PTP clock is attempting to synchronize to itself by using timing codes that it originated.

PTP port configuration will now be described. When a PTP port receives an Announce message that indicates the sender has a worse clock as compared to the local master clock and all other master clocks seen by the local clock in the network according to the timing information in the Announce messages received on any local PTP port the receiving port will be configured to be in the master state and the peer PTP port will be configured to be in the slave state. When a PTP port receives an Announce message that indicates the sender has a clock which has similar quality as compared to the local master clock and all other master clocks seen by the local clock in the network according to the timing information in the Announce messages received on any local PTP port e.g. they are syncing to the same grandmaster then the receiving port can be configured to be either in the master or passive state depending on stepsRemoved values and portIdentity of the receiving and transmitting PTP port. Here stepsRemoved refers to the number of BC hops away the respective PTP clock is from the GM and portIdentity is a unique value identifier that is assigned to each PTP port in the PTP domain. A portIdentity uniquely identifies a PTP port and comprises the clockIdentity and a portNumber. A clockIdentity uniquely identifies the PTP clock and the portNumber is unique within that PTP clock. Note that PTP ports on a clock A will have lower portIdentities than PTP ports on a clock B if clock A has a clockIdentity that is lower than clock B.

The configuration of a PTP port to be a PTP master or passive port when the transmitting and receiving PTP clocks have similar quality will now be discussed. The receiving port will be configured to be a PTP master port and the peer PTP port will be configured as a PTP passive port if the receiving PTP clock s stepsRemoved value is lower than the sender. The receiving port will also be configured to be a PTP master port and the peer PTP port will be configured as a PTP passive port if the receiving PTP clock s stepsRemoved value is the same as the sender but the receiving PTP port s portIdentity is lower than the sender s portIdentity. If however the receiving PTP clock s stepsRemoved value is the same as the sender but the receiving PTP port s portIdentity is larger than the sender s portIdentity then the receiving port will be configured to be a PTP passive port and the peer PTP port will be configured as a PTP master port . Finally if the receiving PTP clock has a stepsRemoved value that is larger than the stepsRemoved value of the sender i.e. the receiving clock is farther from the GM as compared to the transmitting clock then the receiving port will be configured to be a PTP passive port and the peer PTP port will be configured as a PTP master port .

When all the PTP clocks in the network have settled converged the resulting links between the master slave and passive ports of the PTP clocks form a synchronization tree. Any change in a clock s quality a clock failure or a network failure will cause all downstream clocks to reacquire synchronization to a new master i.e. form a new synchronization tree . While the PTP clocks re converge to form the new synchronization tree the accuracy of the PTP clocks involved in the re convergence process will be impaired which affects the accuracy of the time provided to the applications utilizing the clocks. Limitations of conventional PTP networks will now be described by way of illustration through the figures below in which like references indicate similar elements.

GM includes M port communicatively coupled to S port of BC M port communicatively coupled to S port of BC M ports and communicatively coupled to S port and P port respectively of BC . BC includes S port as described above. BC further includes M port communicatively coupled to S port of BC and M port communicatively coupled to S port of BC . BC includes S port as described above. BC further includes M port communicatively coupled to P port of BC and M port communicatively coupled to P port of BC .

BC includes S port P port and P port as described above. BC further includes M port communicatively coupled to P port of BC and M port communicatively coupled to S port of BC . BC includes S port as described above. BC further includes M port communicatively coupled to S port of SOOC and M port communicatively coupled to P port of BC . BC includes S port P port and P port as described above. BC further includes M port communicatively coupled to S port of SOOC . BC includes P port and S port as described above. BC further includes M port communicatively coupled to S port of SOOC . SOOCs include S ports respectively as described above.

Referring now to which is a block diagram illustrating conventional PTP network . Network illustrated in is similar to network shown in except that fault has occurred. In the PTP ports and links in bold are those which are affected by fault . Due to fault BC is no longer able to receive PTP messages from GM via S port which prevents BC from syncing its local master clock to GM via S port . As a result BC must select a new PTP port to be a slave port. In this example BC reconfigures its PTP port from passive to slave state and PTP port from slave to master state because only one PTP port can be a slave at a PTP clock . Thus BC has selected PTP port to be its new slave port.

The synchronization tree shown in remains unchanged after fault has occurred. A change in slave port however has occurred. When a conventional PTP clock selects a new slave port it requires time to sync its local master clock to the new master clock through the new slave port. While this syncing process is occurring all downstream PTP devices that rely on the PTP clock will also be affected. In this example BC and SOOC will be affected. Embodiments of the present invention overcome these limitations by reducing the impact e.g. by reducing the sync time described in further details below.

Referring now to which is a block diagram illustrating conventional PTP network . Network illustrated in is similar to network shown in except that fault has occurred. In the PTP ports and links in bold are those which are affected by fault . Due to fault BC is no longer able to receive PTP messages from GM via S port which prevents BC from syncing its local master clock to GM via S port . As a result BC must select a new PTP port to be a slave port. In this example BC reconfigures its PTP port from master to slave state and PTP port from slave to master state because only one PTP port can be a slave at a PTP clock . Thus BC has selected PTP port to be its new slave port. In response to BC configuring PTP port to be a new slave port BC reconfigures its PTP port from slave state to master state. Further BC has selected its PTP port to be the new slave port. In order to avoid a timing loop BC has also reconfigured its PTP port to be a master port. The reconfiguration of PTP port to be a master port in turn causes BC to reconfigure its PTP port to be a slave port. Given that only one PTP port can be a slave port at a PTP clock BC reconfigures its PTP port from slave to master port. The reconfiguration of PTP port to be a master port in turn causes BC to reconfigure its PTP port from master state to passive state.

The new synchronization tree shown in has resulted in BC changing its stepsRemoved value from 1 to 3. In other words BC is now 3 BC levels away from GM . When a synchronization tree is rearranged all downstream PTP devices will be affected. The time it takes for a synchronization tree to rearrange can be quite long depending on the network size. Embodiments of the present invention overcome these limitations by reducing the impact e.g. by reducing the sync time described in further details below.

Clock manager determines the state e.g. master slave passive of PTP ports based on the received master clock quality and stepsRemoved values. Clock manager may determine the states of PTP ports using mechanisms similar to those described above. Other mechanisms for determining the state of each PTP port can be used without departing from the broader scope and spirit of the present invention. In the illustrated example clock manager has configured PTP port to be a PTP master port herein referred to as an M port PTP port to be a PTP slave port herein referred to as an S port and PTP ports as passive ports herein referred to as P ports . It shall be understood that clock manager can configure the PTP ports such that there are multiple instances of M ports and or P ports .

Clock manager utilizes time codes received via S port to maintain i.e. sync master clock to the master clock of the PTP device which is communicatively coupled to S port . Throughout the description the remote PTP clock which is communicatively coupled to the S port shall be referred to as the main remote master clock . The use of time codes in PTP timing messages e.g. PTP Sync messages to sync a local master clock to a main remote master clock is well known in the art. For the sake of brevity it will not be discussed here. Network device further includes message generator for generating and sending PTP timing messages e.g. Announce Sync etc. via M port . PTP timing messages are generated based on at least information of master clock and the stepsRemoved value of network device . Generation and sending of PTP timing messages such as for example Announce and Sync messages are well known in the art and will not be described here.

A conventional PTP device may include a passive port. PTP time codes received via a conventional passive port however are not processed. As a result a conventional PTP device is not able to leverage off time codes received via a passive port to reduce the time it takes to sync the local master clock to a new master clock when the passive port is reconfigured to be a slave port. For example in when BC switches from syncing its local master clock via PTP port to PTP port BC is not able to reduce its sync time by leveraging off time codes received via PTP port while PTP port was in the passive state. Embodiments of the present invention overcome these limitations by processing time codes received from at least one PTP passive port.

In one embodiment network device includes protective passive PP port identifier for identifying one or more passive ports as protective passive ports herein referred to as PP ports and one or more other passive ports if any as non protective passive ports herein referred to as NP ports . By identifying passive ports as protective passive ports network device is able to maintain one or more local auxiliary clocks using timing information received via the PP ports. The one or more auxiliary clocks can then be utilized by network device to reduce the amount of time required to sync to a new master clock described in further details below.

In one embodiment PP port identifier identifies one or more PP ports by determining a plurality of local PTP ports that have been configured as passive ports. In one embodiment PP port identifier selects from the identified plurality of passive ports a first group of passive ports that are communicatively coupled to PTP devices with a stepsRemoved value that is 1 less than the stepsRemoved value of network device . In one embodiment PP port identifier configures each of the selected passive ports as a PP port. In an alternate embodiment PP port identifier configures a predetermined number of the selected first group of passive ports that are communicatively coupled to remote PTP ports with the lowest portIdentities among all PTP devices communicatively coupled to the selected first group of passive ports as PP ports. In one embodiment the predetermined number of passive ports to be configured as PP ports represents percentage. For example if there are 10 passive ports in the selected first group of passive ports PP port identifier may be configured to identify 30 i.e. out of 10 passive ports associated with remote PTP ports with the lowest portIdentities among all PTP ports associated with the first group of passive ports as PP ports. Alternatively the predetermined number of passive ports to be configured as PP ports represents a raw number. For example if there are 10 passive ports in the selected first group of passive ports PP port identifier may be configured to identify a predetermined number of 2 passive ports associated with remote PTP ports with the lowest portIdentities among all PTP ports associated with the first group of passive ports as PP ports.

In one embodiment if PP port identifier determines that none of the passive ports are communicatively coupled to a PTP device that has a stepsRemoved value that is 1 less than the stepsRemoved value of network device then PP port identifier identifies a predetermined number either as a percentage or raw number as described above of passive ports that are communicatively coupled to the PTP ports with the lowest portIdentity as the PP ports. illustrates by way of example and not limitation passive port has been identified as a NP port and passive port has been identified as a PP port. It shall be understood that PP port identifier can configure the PTP passive ports such that there are multiple instances of NP ports and or PP ports. In other words there can be multiple NP ports and or PP ports at network device .

In one embodiment after one or more PP ports have been identified contrary to a conventional PTP device time codes received e.g. as part of PTP Sync messages via the identified PP ports are processed to sync one or more local auxiliary clocks to master clocks maintained by remote PTP devices that are communicatively coupled to the identified PP ports. Throughout the description the master clock which is communicatively coupled to a PP port of local PTP device is referred to as the monitored remote master clock . For example the master clock which is communicatively coupled to PP port shall be referred to as a monitored remote master clock of network device .

In one embodiment clock manager maintains an auxiliary clock for each identified PP port. Clock manager can approximate the clock frequency of each monitored remote master clock based on the time codes received via a respective PP port. The approximated clock frequency of each monitored remote master clock can then be used to sync a respective auxiliary clock to the respective monitored remote master clock. In the illustrated example clock manager utilizes time codes received via PP port to maintain auxiliary clock . Clock manager approximates the clock frequency of the monitored remote master clock based on the time codes received via PP port . The approximated clock frequency of the monitored remote master clock can then be used to sync auxiliary clock to the monitored remote master clock.

In an event that network device fails to receive PTP timing messages via its S port e.g. due to a failure of S port a failure of the peer master port that is communicatively coupled to S port or a failure of a network link network device can configure its S port to be a master port. Further clock manager identifies one of the local PP ports to be a new slave port. Clock manager then causes master clock to start syncing to the auxiliary clock corresponding to the PP port that has been re configured to be the new slave port. For example in response to determining a failure to receive PTP timing messages via S port clock manager reconfigures PP port to be a new slave port and starts syncing master clock to auxiliary clock .

In one embodiment when clock manager starts syncing master clock to an auxiliary clock clock manager applies phase slope limit also commonly known as a phase rate change limit in order to prevent the clock phase of master clock from changing more than the value indicated by phase slope limit . Continuing on with the above example clock manager applies phase slope limit when clock manager starts syncing master clock to auxiliary clock . By limiting the phase change clock manager prevents timing disturbance to downstream PTP slave devices. In one embodiment phase slope limit can be configured by a user e.g. an operator via an application programming interface API .

In one embodiment once the new slave port starts receiving PTP timing messages from the new main remote master clock former monitored remote master clock clock manager starts syncing master clock to the new main remote master clock. By syncing to an auxiliary clock e.g. auxiliary clock clock manager is able to reduce the amount of time required to sync master clock to the new main remote master clock. Thus contrary to a conventional PTP device network device processes time codes received via at least one passive port in order to maintain at least one auxiliary clock which is utilized to reduce the amount of time required to sync master clock to a new main remote master clock.

When a conventional PTP device selects a new slave port there is a possibility that the new slave port will result in a new synchronization tree. For example as illustrated in when fault occurs and BC selects PTP port as the new slave port there is a re convergence of the synchronization tree resulting in BC changing from being 1 BC level away from GM to being 3 BC levels away from GM . The re convergence requires a long duration of time for the new synchronization tree to be pruned. Embodiments of the present invention overcome these limitations by selecting one or more passive ports that are communicatively coupled to remote PTP devices that have a stepsRemoved value that is one less than the stepsRemoved value of the local network device. In this way when the local network device switches to syncing to the PP port the hierarchy of the synchronization tree remains unaffected thereby reducing the amount of time required for all downstream slave clocks to re sync.

GM includes M ports and communicatively coupled to S port and PP port respectively of BC M ports and communicatively coupled to S port and PP port respectively of BC and M ports and communicatively coupled to S port and PP port respectively of BC . BC includes S port and PP port as described above. BC further includes M port communicatively coupled to S port of BC M port communicatively coupled to S port of BC and M port communicatively coupled to NP port of BC .

BC includes S port PP port and NP port as described above. BC further includes M port communicatively coupled to PP port of BC M port communicatively coupled to PP port of BC and M port communicatively coupled to NP port of BC . BC includes S port PP port and NP port as described above. BC further includes M port communicatively coupled to S port of BC and M port communicatively coupled to PP port of BC .

BC includes S port and PP port as described above. BC further includes M port communicatively coupled to S port of SOOC and M port communicatively coupled to NP port of BC . BC includes S port PP port and NP port as described above. BC further includes M port communicatively coupled to S port of SOOC and M port communicatively coupled to NP port of BC . BC includes PP port S port and NP port as described above. BC further includes M port communicatively coupled to S port of SOOC . SOOCs include S ports respectively as described above.

The configuration of network is shown in for illustrative purposes and not intended to be limitations of the present invention. Embodiments of the present invention apply equally to other network configurations having more or less network devices arranged in more or less BC levels and having more or less PTP ports configured to be in different states.

As described above S port of BC is communicatively coupled to M port of GM . Thus from the perspective of BC GM is the main remote master clock. BC includes two PTP passive ports i.e. PTP ports and . BC has identified e.g. by utilizing a PP port identifier similar to PP port identifier PTP passive port as a PP port and PTP passive port as a NP passive port because PTP passive port is communicatively coupled to a PTP device which has a stepsRemoved value of one less than the stepsRemoved value of BC . Here GM has a stepsRemoved value of 0 and BC has a stepsRemoved value of 1. Thus from the perspective of BC GM is also the monitored remote master clock. As such the clock manager similar to clock manager of BC utilizes time codes received in PTP timing messages e.g. Sync messages from GM via PP port to sync an auxiliary clock similar to auxiliary clock to the monitored remote master clock.

Referring now to which is a block diagram illustrating network according to one embodiment. Network illustrated in is similar to network shown in except that fault has occurred. In the PTP ports and links in bold are those which are affected by fault . Due to fault BC is no longer able to receive PTP messages from its main remote master clock i.e. GM via S port . The failure to receive time codes prevents BC from syncing its local master clock similar to master clock to GM via S port . As a result BC must select a new PTP port to be a slave port.

When a conventional PTP device switches to a new slave port as illustrated in the conventional PTP device requires a long time to sync the local master clock to the new main remote master and as a result all downstream PTP devices are affected. Embodiments of BC overcome these limitations by processing time codes received via PTP port while it was in the PP state to sync an auxiliary clock similar to auxiliary clock to the monitored remote master clock i.e. the master clock maintained by GM . In one embodiment in response to determining a failure to receive time codes from the main remote master clock via S port e.g. due to fault BC reconfigures PTP port from slave state to master state. BC starts syncing its local master clock similar to master clock to the auxiliary clock similar to auxiliary clock corresponding to PP port . Further BC reconfigures PTP port from PP state to slave state. Thus BC has selected PTP port to be its new slave port. Here although GM remains the main remote master clock the time codes which BC now syncs its local master clock to are those received via the new slave port .

The amount of time BC requires to sync its local master clock to the new main remote master clock is less than the amount of time that a conventional PTP device would require because BC is able to sync its local master clock to the auxiliary clock prior to syncing the local master clock to the new main remote master clock. In one embodiment BC also applies a phase slope limit similar to phase slope limit to the local master clock when the local master clock starts syncing to the auxiliary clock. In this way the phase change in the local master clock can be controlled such that it would not disturb the timing of the downstream PTP devices in this example BC SOOC BC and SOOC . Thus by using mechanisms of the present invention BC is able to handle fault such that it is transparent to all downstream PTP devices by using time codes received via PTP port while it was in the PP state to sync the auxiliary clock to the monitored remote master clock.

Although fault has been described as the cause for BC failing to receive time codes via S port one having ordinary skill in the art would recognize that the present invention is not limited to any particular type of fault. Embodiments of the present invention apply equally to any failure that prevents BC from receiving time codes via S port .

Referring now back to for a moment. As described above S port of BC is communicatively coupled to M port of GM . Thus from the perspective of BC GM is the main remote master clock. BC includes one PTP passive port i.e. PTP port . BC has identified e.g. by utilizing a PP port identifier similar to PP port identifier PTP passive port as a PP port because PTP passive port is communicatively coupled to a PTP device which has a stepsRemoved value of one less than the stepsRemoved value of BC . Here GM has a stepsRemoved value of 0 and BC has a stepsRemoved value of 1. Thus from the perspective of BC GM is also the monitored remote master clock. As such the clock manager similar to clock manager of BC utilizes time codes received in PTP timing messages e.g. Sync messages from GM via PP port to sync an auxiliary clock similar to auxiliary clock to the monitored remote master clock.

Referring now to which is a block diagram illustrating network according to one embodiment. Network illustrated in is similar to network shown in except that fault has occurred. In the PTP ports and links in bold are those which are affected by fault . Due to fault BC is no longer able to receive PTP messages from its main remote master clock i.e. GM via S port . The failure to receive time codes prevents BC from syncing its local master clock similar to master clock to GM via S port . As a result BC must select a new PTP port to be a slave port.

When a conventional PTP device switches to a new slave port as illustrated in there is a possibility that a re convergence may occur i.e. a new synchronization tree may be formed and as a result all downstream PTP devices are affected. For example in when BC selects PTP port as the new slave port BC changes from being one BC level away from GM to three BC levels away from GM . This in turn requires all affected downstream PTP devices to select new master and slave ports. Such a re convergence process requires a long time in order for all clocks in the network to settle to a reliable accurate state. Embodiments of BC overcome these limitations by selecting PTP port as the PP port because PTP port is communicatively coupled to a remote PTP device in this example GM that has a stepsRemoved value of one less than the stepsRemoved value of BC . By selecting PTP port as the PP port BC is able to prevent a re convergence of the synchronization tree when the PP port is reconfigured to be a slave port. Here before BC selects the new slave port BC is one BC level away from GM . After BC selects the new slave port i.e. PTP port BC remains one BC level away from GM . The synchronization tree remains unaffected by the selection of the new slave port preventing all downstream PTP devices from having to select new master and slave ports. Thus by utilizing mechanisms of the present invention BC is able to prevent the formation of a new synchronization tree thereby reducing the amount of time required by downstream PTP devices to sync up to the new master clock.

In one embodiment in response to determining a failure to receive time codes from the main remote master clock via S port e.g. due to fault BC reconfigures PTP port from slave state to master state. BC starts syncing its local master clock similar to master clock to the auxiliary clock similar to auxiliary clock corresponding to PP port . Further BC reconfigures PTP port from PP state to slave state. Thus BC has selected PTP port to be its new slave port. Here although GM remains the main remote master clock the time codes which BC now syncs its local master clock to are those received via the new slave port .

The amount of time BC requires to sync its local master clock to the new main remote master clock is less than the amount of time that a conventional PTP device would require because BC is able to sync its local master clock to the auxiliary clock prior to syncing the local master clock to the new main remote master clock. In one embodiment BC also applies a phase slope limit similar to phase slope limit to the local master clock when the local master clock starts syncing to the auxiliary clock. In this way the phase change in the local master clock can be controlled such that it would not disturb the timing of the downstream PTP devices in this example BC SOOC BC and SOOC .

As described above by using mechanisms of the present invention BC is able to handle fault such that it is transparent to all downstream PTP devices. Here BC selects a PP port such that it prevents a new synchronization tree from forming when the PP port is reconfigured to be a slave port. By preventing the synchronization tree from changing sync time is reduced. BC further reduces the sync time by using time codes received via PTP port while it was in the PP state to sync the auxiliary clock to the monitored remote master clock. To avoid disturbing the timing of downstream PTP devices BC applies a phase slope limit to control the phase change of the master clock.

Although fault has been described as the cause for BC failing to receive time codes via S port one having ordinary skill in the art would recognize that the present invention is not limited to any particular type of fault. Embodiments of the present invention apply equally to any failure that prevents BC from receiving time codes via S port .

Referring now back to for a moment. As described above S port of BC is communicatively coupled to M port of BC . Thus from the perspective of BC BC is the main remote master clock. BC includes two PTP passive ports i.e. PTP ports and . BC has identified e.g. by utilizing a PP port identifier similar to PP port identifier PTP passive port as a PP port because PTP passive port is communicatively coupled to a PTP device which has a stepsRemoved value of one less than the stepsRemoved value of BC . Here BC has a stepsRemoved value of 1 and BC has a stepsRemoved value of 2. Thus from the perspective of BC BC is the monitored remote master clock. As such the clock manager similar to clock manager of BC utilizes time codes received in PTP timing messages e.g. Sync messages from BC via PP port to sync an auxiliary clock similar to auxiliary clock to the monitored remote master clock.

Referring now to which is a block diagram illustrating network according to one embodiment. Network illustrated in is similar to network shown in except that fault has occurred. In the PTP ports and links in bold are those which are affected by fault . Due to fault BC is no longer able to receive PTP messages from its main remote master clock i.e. BC via S port . The failure to receive time codes prevents BC from syncing its local master clock similar to master clock to BC via S port . As a result BC must select a new PTP port to be a slave port.

When a conventional PTP device switches to a new slave port as illustrated in there is a possibility that a re convergence may occur i.e. a new synchronization tree may be formed and as a result all downstream PTP devices are affected. For example in when BC selects PTP port as the new slave port BC changes from being one BC level away from GM to three BC levels away from GM . This in turn requires all affected downstream PTP devices to select new master and slave ports. Such a re convergence process requires a long time in order for all clocks in the network to settle to a reliable accurate state. Embodiments of BC overcome these limitations by selecting PTP port as opposed to PTP port as the PP port because PTP port is communicatively coupled to a remote PTP device in this example BC that has a stepsRemoved value of one less than the stepsRemoved value of BC . By selecting PTP port as opposed to PTP port as the PP port BC is able to prevent a re convergence of the synchronization tree when the PP port is reconfigured to be a slave port. Here before BC selects the new slave port BC is two BC levels away from GM . After BC selects the new slave port i.e. PTP port BC remains two BC levels away from GM . The synchronization tree remains unaffected by the selection of the new slave port preventing all downstream PTP devices from having to select new master and slave ports. Thus by utilizing mechanisms of the present invention BC is able to prevent the formation of a new synchronization tree thereby reducing the amount of time required by downstream PTP devices to sync up to the new master clock. Note that a conventional PTP device without the benefits of PP port identifier of the present invention may select PTP port as the new slave port. This would cause a re convergence of the synchronization tree because BC would be three BC levels away from GM i.e. one more BC level away from GM as compared to before the new slave port was selected .

In one embodiment in response to determining a failure to receive time codes from the main remote master clock via S port e.g. due to fault BC reconfigures PTP port from slave state to master state. BC starts syncing its local master clock similar to master clock to the auxiliary clock similar to auxiliary clock corresponding to PP port . Further BC reconfigures PTP port from PP state to slave state. Thus BC has selected PTP port to be its new slave port and the time codes which BC now syncs its local master clock to are those received via new slave port .

The amount of time BC requires to sync its local master clock to the new main remote master clock is less than the amount of time that a conventional PTP device would require because BC is able to sync its local master clock to the auxiliary clock prior to syncing the local master clock to the new main remote master clock. In one embodiment BC also applies a phase slope limit similar to phase slope limit to the local master clock when the local master clock starts syncing to the auxiliary clock. In this way the phase change in the local master clock can be controlled such that it would not disturb the timing of the downstream PTP devices in this example SOOC .

As described above by using mechanisms of the present invention BC is able to handle fault such that it is transparent to all downstream PTP devices. Here BC selects a PP port such that it prevents a new synchronization tree from forming when the PP port is reconfigured to be a slave port. By preventing the synchronization tree from changing sync time is reduced. BC further reduces the sync time by using time codes received via PTP port while it was in the PP state to sync the auxiliary clock to the monitored remote master clock. To avoid disturbing the timing of downstream PTP devices BC applies a phase slope limit to control the phase change of the master clock.

Although fault has been described as the cause for BC failing to receive time codes via S port one having ordinary skill in the art would recognize that the present invention is not limited to any particular type of fault. Embodiments of the present invention apply equally to any failure that prevents BC from receiving time codes via S port .

Referring now to at block the PP port identifier determines a plurality of PTP passive ports associated with a local network device wherein each of the plurality of PTP passive ports is communicatively coupled to a corresponding peer PTP master port. For example the PP port identifier of network device determines PTP ports and as PTP passive ports which communicatively couple to corresponding peer PTP master ports and respectively.

At block the PP port identifier selects from the determined plurality of PTP passive ports one or more PTP passive ports wherein the corresponding peer PTP master port is associated with a remote network device that has a stepsRemoved value that is one less than a stepsRemoved value of the local network device. For example the PP port identifier of network device identifies PTP passive port as having a peer PTP master port associated with remote network device which has a stepsRemoved value of one less than the stepsRemoved value of network device . Here network device has a stepsRemoved value of one and network device has a stepsRemoved value of two.

At block the PP port identifier optionally configures all PTP passive ports of the selected PTP passive ports to be PP ports. For example the PP port identifier of network device configures PTP passive port to be the PP port. Alternatively at block the PP port identifier configures a predetermined number of the selected PTP passive ports with a corresponding peer PTP master port that has a lowest port identity to be a PP port. For example if network device included multiple PTP passive ports that communicatively coupled to PTP devices having a stepsRemoved value that is one less than the stepsRemoved value of network device the PP port identifier of network device can configure a predetermined number of such PTP passive ports to be PP ports. Here the predetermined number can be a percentage or raw number.

At block the clock manager maintains an auxiliary clock for each PP port using timing information included in timing messages received via the respective PP port. For example the clock manager of network device utilizes time codes included in PTP timing messages e.g. PTP Sync messages received from network device via PP port to maintain an auxiliary clock.

Referring now to at block the clock manager synchronizes a local PTP master clock to a first PTP master clock maintained by a first remote network device utilizing timing information included in timing messages received from the first remote network device via a PTP slave port associated with a local network device. For example the clock manager of network device synchronizes its local PTP master clock to the PTP master clock maintained by network device using time codes included in PTP timing messages e.g. PTP Sync messages received from network device via PTP slave port .

At block the clock manager maintains a local auxiliary clock for each protective passive PP port wherein each auxiliary clock synchronizes its frequency to a respective monitored master clock using information included in PTP timing messages received via each respective PP port. For example the clock manager of network device maintains an auxiliary clock corresponding to PP port by syncing the auxiliary clock to the PTP master clock maintained by network device using time codes included in PTP timing messages e.g. PTP Sync messages received from network device via PP port .

At block the clock manager determines a failure to receive timing messages from the first remote network device via the PTP slave port associated with the local network device. For example the clock manager of network device determines that PTP timing messages can no longer be received from network device via S port e.g. due to fault .

At block the clock manager configures the PTP slave port to be a PTP master port and configure a first PP port associated with the local network device to be a new PTP slave port wherein the first PP port is communicatively coupled to a second remote network device. For example the clock manager of network device configures PTP slave port to be a master port and configures PP port to be a new slave port.

At block the clock manager synchronizes the local master clock frequency to the frequency of the auxiliary clock corresponding to the first PP port using phase slope limiting to control the timing disturbance to downstream slave devices. For example the clock manager of network device syncs the frequency of the local master clock to the frequency of the auxiliary clock corresponding to PP port using a phase slope limit similar to phase slope limit to control the phase change of the local master clock.

At block the clock manager synchronizes the local master clock to the monitored master clock corresponding to the first PP port using timing information included in PTP timing messages received via the new PTP slave port. For example the clock manager of network device syncs the local master clock to the master clock maintained by network device using time codes included in PTP timing messages e.g. PTP Sync messages received via new slave port .

Some portions of the preceding detailed descriptions have been presented in terms of algorithms and symbolic representations of transactions on data bits within a computer memory. These algorithmic descriptions and representations are the ways used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of transactions leading to a desired result. The transactions are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method transactions. The required structure for a variety of these systems will appear from the description above. In addition embodiments of the present invention are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of embodiments of the invention as described herein.

In the foregoing specification embodiments of the invention have been described with reference to specific exemplary embodiments thereof. It will be evident that various modifications may be made thereto without departing from the broader spirit and scope of the invention as set forth in the following claims. The specification and drawings are accordingly to be regarded in an illustrative sense rather than a restrictive sense.

Throughout the description embodiments of the present invention have been presented through flow diagrams. It will be appreciated that the order of transactions and transactions described in these flow diagrams are only intended for illustrative purposes and not intended as a limitation of the present invention. One having ordinary skill in the art would recognize that variations can be made to the flow diagrams without departing from the broader spirit and scope of the invention as set forth in the following claims.

