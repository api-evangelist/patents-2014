---

title: Methods and apparatus to estimate power performance of a job that runs on multiple nodes of a distributed computer system
abstract: A non-transitory computer readable storage medium having stored thereon instructions executable by one or more processors to perform operations including: receiving a plurality of input parameters including (i) a workload type, (ii) a list of selected nodes belonging to a distributed computer system, and (iii) a list of frequencies; responsive to receiving the plurality of workload parameters, retrieving calibration data from a calibration database; generating a power estimate based on the plurality of workload parameters and the calibration data; and providing the power estimate to a resource manager is shown. Alternatively, the input parameters may include (i) a workload type, (ii) a list of selected nodes belonging to a distributed computer system, and (iii) an amount of available power, wherein the estimator may provide an estimation of the frequency at which the nodes should operate to utilize as much of the available power without exceeding the available power.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09575536&OS=09575536&RS=09575536
owner: Intel Corporation
number: 09575536
owner_city: Santa Clara
owner_country: US
publication_date: 20141224
---
The present application claims the benefit of prior U.S. Provisional Patent Application No. 62 040 576 entitled SIMPLE POWER AWARE SCHEDULER TO LIMIT POWER CONSUMPTION BY HPC SYSTEM WITHIN A BUDGET filed on Aug. 22 2014 which is hereby incorporated by reference in its entirety.

The present application is related to U.S. Publication No. 2016 0054783 entitled Method and Apparatus to Generate and Use Power Thermal and Performance Characteristics of Nodes to Improve Energy Efficiency and Reducing Wait Time for Jobs in the Queue filed Dec. 24 2014 U.S. Publication No. 2016 0188379 entitled Adjustment of Execution of Tasks filed Dec. 24 2014 U.S. Publication No. 2016 0187906 entitled Control of Power Consumption filed Dec. 24 2014 U.S. Publication No. 2016 0187395 entitled Forecast for Demand of Energy filed Dec. 24 2014 U.S. Publication No. 2016 0054781 entitled Methods and Apparatus to Manage Jobs That Can and Cannot be Suspended When There is a Change in Power Allocation to a Distributed Computer System filed Dec 24 2014 U.S. Publication No. 2016 0054779 entitled Managing Power Performance of Distributed Computing Systems filed Dec. 24 2014 U.S. Publication No. 2016 0054774 entitled Profiling a Job Power and Energy Consumption for a Data Processing System filed Dec. 24 2014 U.S. Publication No. 2016 0054780 entitled Power Aware Job Scheduler and Manager for a Data Processing System filed Dec. 24 2014.

Embodiments of the disclosure generally relate to the field of power conservation in distributed computer systems. More specifically one embodiment of the disclosure relates to estimating the power performance of a job to be run on multiple nodes within a distributed computer system to improve job scheduling and monitoring of the jobs processed by the distributed computer system.

A distributed computer system may perform parallel computing by the simultaneous use of multiple nodes to execute a computational assignment referred to as a job. Each node may include one or more processors memory an operating system and one or more input output I O components. The nodes may communicate with each other through a high speed network fabric e.g. an Ethernet an Omni Path an InfiniBand or other network and may use shared file systems or storage. The job may be divided into thousands of parallel tasks distributed over thousands of nodes. These nodes may synchronize with each other hundreds of times a second.

Future distributed computer systems are projected to require tens of megawatts of power making their power management as a foremost concern in the industry. These distributed computer systems will be expected to deliver exascale performance with limited power and energy budgets. Current distributed computer systems may apply power capping to adhere to the limited power and energy budgets. However current approaches to power capping negatively impact the performance of the distributed computer systems due to typically inaccurate power capping.

Current approaches estimate the power needed by one or more nodes of a distributed computer system to run a job based upon the thermal dissipation power TDP value of the one or more components comprising each node. As it is rare that a job actually uses the TDP value of each node on which the job is run the estimation using the TDP values results in an over estimate. By over estimating the power needed to startup and run a job current approaches delay the start of the job and reduce the efficiency of the distributed computer system by preventing other jobs from running.

The start of running a job is delayed as the over estimation of the necessary power to start the job causes the distributed computer system to delay the start of the job until the over estimated startup power is available. Alternatively a more accurate estimation of the startup power would avoid a delay of running the job. In addition the over estimation of the power required to run the job results in an over allocation of power for the job. The over allocation takes away from power that could be allocated to other jobs requesting to be run by the distributed computer system.

In addition the TDP is not the maximum power that may be consumed by a node. For example TDP does not accurately measure the electrical power consumption when every component of the node is being used but measures the thermal dissipation. Therefore it is possible that a job request may consume more power than the TDP estimate which may lead to the distributed computer system attempting to consume more power than it has been allocated by a utility facility.

Various embodiments of the disclosure relate to estimating the power performance of a job that is to be run on a distributed computer system. An estimation of the power performance of a job may be determined based on at least in part whether the owner of the job permits the job to be subject to a power limit the job power policy limiting the power supplied to the job whether the owner of the job permits the job to be suspended and or calibration data of the one or more nodes of the distributed computer system on which the job is to run. The distributed computer system may be for example a High Performance Computing HPC system. In some embodiments of the disclosure a job may not be subjected to a power policy that limits the power supplied to a job as set forth by the owner of the job however a HPC system may and likely will have an overall limited power budget that cannot be exceeded by the combination of jobs processed by the HPC system.

Embodiments of the disclosure relate to estimating the startup power and or minimum power required to run a job based on the actual power measurement for each node on which the job will run which takes into consideration the part to part variation between nodes. Other embodiments of the disclosure relate to estimating the startup power and or minimum power required to run a job based on measurements taken while running the job e.g. a sample portion of the job and or the full job . Still other embodiments of the disclosure relate to estimating the startup power and or minimum power required to run a job based on a fixed frequency at which the one or more nodes that will run the job will operate.

The HPC system may estimate the power that should be allocated to a job based on a predetermined frequency at which the nodes selected to run the job will operate. The estimate may be based on at least the job type e.g. workload type a list of nodes selected to run the job and optionally a minimum power to be supplied to the selected nodes or a frequency at which the selected nodes will operate while running the job. The estimation may provide the HPC system with at least a power level for each frequency for each node e.g. a platform maximum power PMP a workload maximum power and or a workload average power a thermal estimate that allows the HPC system to manage a cooling system and or a performance estimate e.g. performance metric for one or more frequencies of the selected nodes which allows a user e.g. the owner of the job to adjust the job request based on the estimated performance metric e.g. the time until completion the estimated power level and the estimated total energy consumption of the job. A workload maximum power of a node may be defined as the maximum observed power sampled while the node was being calibrated e.g. running a miniature application mini app and or a portion of a job . The workload average power of a node may be defined as the average power of all of the power measurements sampled while the node was being calibrated. In at least some embodiments to start a job a power needed for a job is estimated using one of power estimation techniques as described herein and using one of power calibration techniques as described in a related U.S. Publication No. 2016 005478 entitled Methods and apparatus to generate and use power thermal and performance characteristics of nodes to improve energy efficiency and reducing wait time for jobs in the queue. 

The workload type may be used to determine the portion of calibration data used to generate an estimation as described above. For example if the workload type e.g. the type of job is similar to a mini app that has been used to calibrate the nodes of the HPC system the estimator will retrieve the calibration data associated with the calibration of the nodes using the mini app e.g. stored in a calibration database .

Alternatively the workload type may be a small portion of the actual job requested by a user. In such an example the user may be have submitted a small portion e.g. calculations totally for example 4 5 hours until completion of the desired job for use in calibrating the one or more nodes that will process the job request. Therefore the estimator will retrieve the calibration data of the one or more nodes that will process the job associated with the small portion of the desired job.

In yet another embodiment sampling of various parameters of the nodes used to process a job e.g. inter alia temperature and or power consumption may be done during execution of the job. If the job is requested to be processed again e.g. with slightly varying input parameters the estimator may retrieve the calibration data associated with the job during its previous run time and use that calibration data in generating the estimation.

Alternatively or in addition the HPC system may estimate the frequency at which a job should be run when the HPC system is aware of the power allocated for the job. The estimate may be based on for example the available power for the job e.g. PMP workload maximum power or workload average power the job and the list of the selected nodes to run the job. The estimation may provide for example the frequency at which the selected nodes should operate the expected thermal dissipation the expected performance and optionally the power required for and the expected thermal dissipation of running the job at a higher frequency and or a lower frequency.

In at least some embodiments a job power a system power a job s completion and a job suspension status are monitored using one or more monitoring techniques as described in a related U.S. Publication No. 2016 0054774 entitled Profiling a job power and energy consumption for a data processing system. 

Referring to an exemplary block diagram of a HPC system receiving various inputs is shown. The HPC system includes one or more operating system OS nodes also referred to as a head node one or more compute nodes one or more input output I O nodes and a storage . A high speed fabric communicatively connects the OS node the compute nodes and the I O nodes . The high speed fabric may be a network topology of nodes interconnected via one or more switches. In one embodiment as illustrated in the I O nodes are communicatively connected to the storage . The storage may be non persistent storage such as volatile memory e.g. any type of random access memory RAM persistent storage such as non volatile memory e.g. read only memory ROM power backed RAM flash memory phase change memory etc. a solid state drive hard disk drive an optical disc drive or a portable memory device.

The OS node may provide a gateway to accessing the compute nodes . For example prior to submitting a job for processing on the compute nodes a user may be required to log in to the HPC system which may be through the OS node . In embodiments of the disclosure the OS node may accept jobs submitted by users and assist in the launching and managing of jobs being processed by the compute nodes . In one embodiment the OS node comprises a power monitor not shown a power estimator not shown described herein and a power calibrator not shown .

In one embodiment the compute nodes provide the bulk of the processing and computational power. The I O nodes may provide an interface between the compute nodes and external devices e.g. separate computers that may provide input to the HPC system or receive output from the HPC system .

The system power allocation P may be provided to the HPC system by for example a utility management facility e.g. as determined by a system administrator or management software such as a data center manager . Typically the Pwill be a limited amount of power allocated to the HPC system with which the HPC system will use to run one or more of the jobs . The jobs comprise one or more jobs requested to be run by the HPC system by one or more users. Each job includes a power policy which will be discussed in depth below. The power policy will assist the HPC system in allocating power for the job and aid in the management of the one or more jobs being run by the HPC system .

In addition the administrative policies will guide the management of running the jobs by providing an over arching policy that defines the operation of the HPC system . Examples of policies that may be included in the administrative policies include but are not limited or restricted to 1 maximize utilization of all hardware and software resources e.g. instead of running fewer jobs at high power and leaving resources unused run as many jobs as possible to use as much of the resources as possible 2 a job with no power limit is given the highest priority among all running jobs and or 3 suspended jobs are at higher priority for resumption. Such administrative policies govern the way the HPC system may schedule launch suspend and re launch one or more jobs.

In the following description certain terminology is used to describe features of the invention. For example in certain situations both terms logic and engine are representative of hardware firmware and or software that is configured to perform one or more functions. As hardware logic or engine may include circuitry having data processing or storage functionality. Examples of such circuitry may include but are not limited or restricted to a microprocessor one or more processor cores a programmable gate array a microcontroller an application specific integrated circuit wireless receiver transmitter and or transceiver circuitry semiconductor memory or combinatorial logic.

Logic or engine may be software in the form of one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an applet a servlet a routine source code object code a shared library dynamic load library or one or more instructions. These software modules may be stored in any type of a suitable non transitory storage medium or transitory storage medium e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals or digital signals . Examples of non transitory storage medium may include but are not limited or restricted to a programmable circuit a semiconductor memory non persistent storage such as volatile memory e.g. any type of random access memory RAM persistent storage such as non volatile memory e.g. read only memory ROM power backed RAM flash memory phase change memory etc. a solid state drive hard disk drive an optical disc drive or a portable memory device. As firmware the executable code is stored in persistent storage.

The term power monitoring should be interpreted as dynamically measuring power consumption by one or more of the components comprising the HPC system. The measurements taken may be used to calculate power consumption by for example an individual job and or a group of jobs as well as to provide statistics on the overall power consumption of the HPC system.

The term power policy should be interpreted as an input e.g. one or more parameters provided to the HPC system that provide guidance on allocation and management of power for a given job. The input may be provided as part of a job request submission and or may be provided as a separate input e.g. via a user interface screen or a configuration file . For example the input may indicate among other things i whether a job may be subjected to a power limit ii the maximum and or minimum power at which a job may run and or iii a minimum and or maximum frequency at which the one or more nodes processing the job may operate.

The term node should be construed as one or more processors optionally grouped with at least a system memory and or one or more input output I O components. The one or more processors the system memory and the one or more I O components may be referred to as the components of a node throughout the specification and claims. Throughout the specification and claims the terms processor computer processing unit CPU and core will be used interchangeably.

The term job should be interpreted as predetermined calculations performed on the HPC system. For example a user e.g. owner of the job may request that a job be run by the HPC which means the user is requesting to have one or more compute nodes performing calculations according to input parameters and or data provided by the user. The job request may specify the one or more calculations e.g. an application that are to be used for the processing of the job.

The term system power P should be interpreted as the amount of power provided to the HPC system by for example a facility or data center manager. The Pis the total amount of power the HPC system has to allocate to one or more jobs at any given time.

The term guard band should be interpreted as a mechanism to assist in the management of a power budget of a HPC system. In one embodiment the guard band may be an extra power allocation which may be a predetermined percentage of the power allocated to the job. For example if a HPC system has 3 MW of power to allocate to a job the HPC system may only allocate 2.8 MW and maintain 0.2 MW as the guard band to prevent a spike in calculations to cause the power consumption of the job to exceed 3 MW. One purpose of the guard band is to maintain consistent power consumption by a job.

The term platform max power PMP should be interpreted as the power level measured for a node when the node is running a power virus. The power virus is a workload which may be an artificial workload created solely for calibration that attempts to run each component of the node as much as possible while the power virus is being run. Therefore the PMP is highest possible level of power a node may consume.

Lastly the terms or and and or as used herein are to be interpreted as inclusive or meaning any one or any combination. Therefore A B or C or A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions steps or acts are in some way inherently mutually exclusive.

The invention may be utilized for power management of a distributed computer system such as a High Performance Computing HPC system. In particular embodiments of the disclosure relate to managing power allocation to one or more jobs run in a HPC system based on estimates of the power consumption for each job as a result of calibration of the nodes within the HPC system. As this invention is susceptible to embodiments of many different forms it is intended that the present disclosure is to be considered as an example of the principles of the invention and not intended to limit the invention to the specific embodiments shown and described.

Referring to an exemplary block diagram of logic comprising the HPC system is shown. The logic of the HPC system illustrated in provides the bulk of the power management for the HPC system and includes a resource manager including a power aware job scheduler and a power aware job launcher a calibrator an estimator one or more job managers each job will have its own job manager a job the user policies and the administrative policies . In one embodiment the resource manager and job manager are configured to collect job power data.

The calibrator calibrates the power thermal dissipation and performance of each node within the HPC system . The calibrator may provide a plurality of methods for calibrating the nodes within the HPC system . In one embodiment the calibrator may provide a first method of calibration in which every node within the HPC system runs a sample workload e.g. a mini application a portion of an application and or a test script so the calibrator may sample various parameters e.g. power consumed at predetermined time intervals in order to determine inter alia 1 the average power 2 the maximum power and 3 the minimum power for each node. In addition the sample workload may be run on each node at every operating frequency of the node. In another embodiment the calibrator may provide a second method of calibration in which calibration of one or more nodes occurs during the run time of a job. In such a situation the calibrator may sample the one or more nodes on which a job is running e.g. processing . In the second method the calibrator obtains power measurements of each node during actual run time.

The estimator provides the resource manager with estimates of power consumption for each job enabling the resource manager to efficiently schedule and monitor each job requested by one or more job owners e.g. users . The estimator may provide a power consumption estimate based on for example maximum and average power values stored in a calibration database wherein the calibration database is populated by the processing of the calibrator . In addition the minimum power required for each job may be considered. Other factors that may be used by the estimator to create a power consumption estimate include but are not limited or restricted to whether the owner of the job permits the job to be subject to a power limit the job power policy limiting the power supplied to the job e.g. a predetermined fixed frequency at which the job will run a minimum power required for the job or varying frequencies and or power supplied determined by the resource manager the startup power for the job the frequency at which the job will run the available power to the HPC system and or the allocated power to the HPC system .

The each job requested by a user e.g. the owner of the job is accompanied by a user policy also illustrated in . The user policy includes at least a decision on whether the job may be subjected to a power limit if a power limit is permitted by the policy to limit the power e.g. fixed frequency minimum power required or varying frequency and or power determined by the resource manager and whether the job may be suspended. The user policy will be discussed in depth below with .

In one embodiment a power aware job scheduler is configured to receive a selection of a mode for a job e.g. included within the user policies to determine an available power for the job based on the mode and to allocate a power for the job based on the available power. In one embodiment the power aware job scheduler is configured to determine a uniform frequency for the job based on the available power. In one embodiment the power aware job scheduler is configured to determine the available power for the job based on at least one of a monitored power an estimated power and a calibrated power. The power aware job scheduler and resource manager are configured to receive information regarding power consumption to distribute the power budget to each job and to implement a uniform frequency mechanism to limit power as described in further detail below.

The resource manager uses power aware job scheduler and power aware job launcher to schedule and launch a job based on the received power inputs e.g. the user policies and the administrative policies . In one embodiment the resource manager is a software object that is responsible for allocation of compute and I O resources for interactive and batch jobs that one or more users want to run. Typically the resource manager is also responsible for scheduling the jobs out of the job queue and launching the jobs to run as scheduled. A job manager is configured to control a job to stay within an allocated power budget for the job as described in further detail below. In one embodiment the job manager is responsible for operating a job within the constraints of one or more power policies after the job has been launched. In one embodiment the job manager is used to control power performance of all components e.g. nodes or other components involved in execution of a job as per policies specified by at least one of the user and or administrator. The power aware job scheduler and job manager are described in the U.S. Publication No.2016 0054780 entitled Power aware job scheduler and manager for a data processing system. 

Referring to an exemplary embodiment of a user interface screen for designating a user policy while requesting a job be processed using the HPC system is shown. The user interface screen includes the display area and . The display area allows a user to designate whether the job e.g. the job is permitted to be subjected to a power limit e.g. selecting NO results in the power limiting policy No Power Limit as seen in below .

The display area pertains to the selection of one of a predetermined power limiting policy when the user permits the job to be subjected to power limiting. In the embodiment shown in the display area provides four additional predetermined power limiting policies . The power limiting policy is a fixed frequency policy Fixed Frequency in which the user designates a particular frequency at which the one or more nodes on which the job will run should operate. The power limiting policy is a minimum job power policy Minimum Job Power in which the user designates a minimum power to be supplied to the one or more nodes on which the job will run. The power limiting policy is an automatic mode Auto mode in which the resource manager may varying the frequency at which the one or more nodes operate and or the power supplied to the one or more nodes on which the job is running. The power limiting policy is a maximum job power policy Maximum Job Power in which the user designates a maximum power to be supplied to the one or more nodes on which the job will run. The display area pertains to the selection of whether the job may be suspended during processing.

A user interface screen is not the only method for a user to provide the HPC system with input parameters such as for example a power policy a minimum required frequency a minimum required power and or whether the job may be suspended. Alternatively such parameters may be provided to the HPC system as part of the job submission and or as a configuration file e.g. text file . In yet another embodiment such parameters may be set by a system administrator a facility manager administrator and or predetermined as part of a user s account with the HPC system .

Referring to a table illustrating exemplary parameters used in determining resources necessary to run a job when power monitoring is not implemented is shown. The table includes the column that includes the parameters provided in an estimate to run a job and a first row that sets forth the various power policies a user may select. The first power policy No Power Limit is set forth in the column . A second power policy Fixed Frequency is set forth in the column . A third power policy Minimum Power is set forth in the column a fourth power policy Auto mode is set forth in the column and a fifth power policy Maximum Power is set forth in the column .

According to one embodiment the estimator does not have knowledge as to the power policy selected by the user. For example the resource manager e.g. the job scheduler and or the job launcher may provide the estimator with a request for an estimation of the startup power required for a job and specifically request the PMP at a specified frequency which would implicitly mean power monitoring is not implemented as illustrated in .

As is illustrated in the column when a user selects the power policy of No Power Limit the resource manager will request the following parameters from the estimator the startup power required for a job as the PMP for the selected nodes the maximum frequency at which the selected nodes should be run e.g. all compute nodes may have the same maximum frequency the minimum power required to run the job as the PMP and the power to be allocated for the job as the PMP. Therefore the estimator will consult a calibrator database to determine and output the PMP and the maximum frequency at which selected nodes may operate.

When a user selects the power policy of Fixed Frequency the resource manager will request the following parameters from the estimator wherein the frequency selected by the user is represented by F the startup power required for a job as the PMP at Ffor the selected nodes the frequency at which the selected nodes should be run as F the minimum power required to run the job as either i zero when the job may be suspended or ii PMP at F and the power to be allocated for the job is the PMP at F. Therefore the estimator will consult a calibrator database to determine and output the PMP at F.

When a user selects the power policy of Minimum Power the resource manager will request the following parameters from the estimator wherein the minimum power established by the user is represented by P the startup power required for a job as Pfor the selected nodes the frequency at which the selected nodes should be run as a first operational frequency F the maximum frequency for which PMP is less than or equal to the available power and PMP at Fis equal or greater than P. The minimum power required to run the job as either i zero when the job may be suspended or ii the greater of PMP at Fand P and the power to be allocated for the job as the greater of the minimum required power and the PMP at F. Therefore the estimator will consult a calibrator database to determine and output F and when the job cannot be suspended the greater of PMP at Fand P.

When a user selects the power policy of Auto mode the resource manager will request the following parameters from the estimator the startup power required for a job as the PMP at F wherein Frepresents the lowest frequency of the selected nodes the frequency at which the selected nodes should be run as F the minimum power required to run the job as either i zero when the job may be suspended or ii the PMP at F and the power to be allocated for the job as the greater of the minimum required power and the PMP at F. Therefore the estimator will consult a calibrator database to determine and output F the greater of the minimum required power and the PMP at F and when the job cannot be suspended the PMP at F.

When a user selects the power policy of Maximum Power the resource manager will request the following parameters from the estimator wherein the maximum power established by the user is represented by P the startup power required for a job as PMP at Fwhen PMP at Fis less than Pfor the selected nodes the frequency at which the selected nodes should be run as a second operational frequency F the maximum frequency for which PMP is less than or equal to the lesser of the available power and the maximum power the minimum power required to run the job as either i zero when the job may be suspended or ii PMP at F and the power to be allocated for the job as the lesser of the Pand the PMP at F. Therefore the estimator will consult a calibrator database to determine and output PMP at Fwhen PMP at Fis less than Pfor the selected nodes F PMP at Fwhen the job cannot be suspended and the lesser of the Pand the PMP at F.

Referring to a table illustrating exemplary parameters used in determining resources necessary to run a job when power monitoring is implemented is shown. The table includes the column that includes the parameters provided in an estimate to run a job and a first row that sets forth the various power policies a user may select. The first power policy No Power Limit is set forth in the column . The second power policy Fixed Frequency is set forth in the column . The third power policy Minimum Power is set forth in the column the fourth power policy Auto mode is set forth in the column and a fifth power policy Maximum Power is set forth in the column .

When power monitoring is implemented the HPC system in particular the job manager is constantly aware of the power being consumed by the job as the power being consumed is being dynamically measured. In contrast when power monitoring is not implemented the HPC system determines the available power based on the Pand the power allocated to the job which is a static value.

As is illustrated in the column when a user selects the power policy of No Power Limit the resource manager will request the following parameters from the estimator the startup power required for a job as the workload maximum power plus a guard band for the selected nodes the frequency at which the selected nodes should be run as the maximum frequency of the nodes the minimum power required to run the job as the workload maximum power plus the guard band and the power to be allocated for the job as the workload maximum power plus the guard band. Therefore the estimator will consult a calibrator database to determine and output workload maximum power plus a guard band for the selected nodes and the maximum frequency of the selected nodes.

When a user selects the power policy of Fixed Frequency the resource manager will request the following parameters from the estimator the startup power required for a job as the workload maximum at Ffor the selected nodes the frequency at which the selected nodes should be run as F the minimum power required to run the job as either i zero when the job may be suspended or ii the workload maximum at F and the power to be allocated for the job as the workload maximum power at F. Therefore the estimator will consult a calibrator database to determine and output the workload maximum at Ffor the selected nodes and the workload maximum at Fwhen the job cannot be suspended.

When a user selects the power policy of Minimum Power the resource manager will request the following parameters from the estimator the startup power required for a job as Pfor the selected nodes the frequency at which the selected nodes should be run as a third operational frequency F the maximum frequency where the workload average power is less than or equal to the available power and workload average power at Fis greater than P. The minimum power required to run the job as either i zero when the job may be suspended or ii greater of the workload maximum power at Fand P and the power to be allocated for the job as the greater of the minimum required power and the workload average at F. Therefore the estimator will consult a calibrator database to determine and output F greater of the workload maximum power at Fand Pwhen the job cannot be suspended and greater of the minimum required power and the workload average at F.

When a user selects the power policy of Auto mode the resource manager will request the following parameters from the estimator the startup power required for a job as the workload average at F the frequency at which the selected nodes should be run as F the minimum power required to run the job as either i zero when the job may be suspended or ii the workload maximum power at F and the power to be allocated for the job as the greater of the minimum required power and the workload average at F. Therefore the estimator will consult a calibrator database to determine and output workload average at Ffor the selected nodes F the workload maximum power at Fwhen the job cannot be suspended and the greater of the minimum required power and the workload average at F.

When a user selects the power policy of Maximum Power the estimator will provide the resource manager with the following parameters the startup power required for a job is the workload average at Fwhen the workload average at Fis less than Pfor the selected nodes or else p the selected nodes should be run at a fourth operational frequency F the maximum frequency for which the workload maximum power is less than or equal to the lesser of the available power and the maximum power p the minimum power required to run the job is either i zero when the job may be suspended or ii workload maximum power at F and the power to be allocated for the job is the lesser of the workload maximum power at Fand P. Therefore the estimator will consult a calibrator database to determine and output workload average at Fwhen the workload average at Fis less than Pfor the selected nodes F workload maximum power at Fwhen the job cannot be suspended and the lesser of the workload maximum power at Fand P.

Referring to a flowchart illustrating an exemplary method for generating an estimate of the startup power is shown. Each block illustrated in represents an operation performed in the method of generating an estimation of the startup power for a job required to be available prior to launching the job. In operation the estimator receives as input a unique job identification ID a list of nodes on which the job is to run and optionally a specified frequency at which the nodes are to operate while running the job. When a specified frequency is provided yes at operation the startup frequency F is set as the specified frequency operation . When no specified frequency is provided no at operation the minimum frequency F and the startup frequency F are set to the lowest frequency for each node within the list of selected nodes operation .

In operation the estimator determines whether the job type corresponding to the unique job ID is present in the calibrator database e.g. the nodes on the list of selected nodes have been calibrated with a workload satisfying a threshold of similarity with the job type of the unique job ID . When the job type is found in the calibrator database yes at operation the startup power for each node P N with Nrepresenting one of the one or more one nodes on the selected list of nodes is set to the average workload power for each node at Fobtained from the calibrator database operation .

When the job type is not found in the calibrator database no at operation the startup power for each node P N is set to the average PMP for each node at Fobtained from the calibrator database operation .

At operation the P N is set to the average workload power for each node N at Fwhen the job runs at scale Pscaled N . The terms Pscaled N and Pscaled N refer to the average and maximum node power respectively needed to run the job on compute node Nwhen the job is processed on a specified number of compute nodes as one example X may be equal to 10 000 . The scaling takes into account the fact that the power consumed per node may vary when the job is scaled to run on the specified number of nodes due to reduced power consumption per compute node Nwhile the processes operating on each compute node Nare waiting for communication e.g. among compute nodes and or with the OS node . According to one embodiment the wait time to communicate is longer for a larger number of compute nodes.

For example calibration may be run on 100 nodes at one time for a mini app whereas an actual job request may request the use of 10 000 nodes. In some situations the average power consumption and maximum power consumption may be less per node when the job runs on 10 000 nodes as communication among 10 000 nodes takes more time than communication among 100 nodes and while the node waits for communication to take place less power is consumed than when the node is processing calculations. Therefore the estimator may perform a scaling process on the calibration data to scale the measurements e.g. maximum temperature average temperature maximum power average power etc. based on the number of nodes used during calibration and the number of nodes to be used in the actual processing of the job.

At operation the overall startup power for the job P is set to the sum of the Pscaled N for all nodes on the list of selected nodes. At operation the estimates for shared nodes are added. A shared node is a node that performs processing for more than one job. An example of a shared node is an I O node wherein the I O node performs control of a storage device shared among multiple nodes and or performs control over network interfacing e.g. with a second HPC system and or user devices . The estimate for shared nodes include an estimate of the power the one or more shared nodes will consume based on the functions the one or more shared nodes will perform. Similar calibration techniques may be used to determine the power consumption of the one or more shared nodes. In operation the estimation of the Pand Ffor the unique job ID is output to the resource manager .

Referring now to a flowchart illustrating an exemplary method for generating an estimate of the minimum required power for a job is shown. Each block illustrated in represents an operation performed in the method of generating an estimation of the minimum power required to run a job the minimum power required to run a job is typically less than or equal to the startup power as illustrated in . In operation the estimator receives as input at least a unique job ID and a list of nodes on which the job is to run. At operation F N is set to the lowest frequency for each node.

In operation the estimator determines whether the job type corresponding to the unique job ID is present in the calibrator database. When the job type is found in the calibrator database yes at operation the minimum power for each node P N is set to the average workload power for each node at Fobtained from the calibrator database operation . When the job type is not found in the calibrator database no at operation the minimum power for each node P N is set to the average PMP for each node at Fobtained from the calibrator database operation .

At operation the P N is set to the average workload power for each node N at Fwhen the job runs at scale Pscaled N .

At operation the overall minimum power for the job P is set to the sum of the Pscaled N for all nodes on the listed of selected nodes. At operation the estimates for shared nodes are added. In operation the estimation of the Pand Kfor the unique job ID is output to the resource manager .

Referring now to a flowchart illustrating an exemplary method for generating an estimate of the allocated power required for a job is shown. Each block illustrated in represents an operation performed in the method of generating an estimation of the allocated power required to run a job. In operation the estimator receives as input at least a unique job identification ID a list of nodes on which the job is to run and an allocated frequency F at which the nodes are to operate while running the job.

In operation the estimator determines whether the job type corresponding to the unique job ID is present in the calibrator database. When the job type is found in the calibrator database yes at operation the allocated power for each node P N is set to the average workload power for each node at Fobtained from the calibrator database operation . When the job type is not found in the calibrator database no at operation the allocated power for each node P N is set to the average PMP for each node at Fobtained from the calibrator database operation .

At operation the P N is set to the average workload power for each node N at Fwhen the job runs at scale Pscaled N and the P N is set to the maximum workload for each node N at Fwhen the job runs at scale.

At operation the overall allocated power required for the job P is set to the sum of the Pscaled N for all nodes on the listed of selected nodes. At operation the estimates for shared nodes are added.

In operation the estimator outputs Pand Pas the estimate for the allocated power and maximum power for the job respectively.

Referring to a flowchart illustrating an exemplary method for generating an estimate of an operational frequency based on the available power for a job is shown. Each block illustrated in represents an operation performed in the method of generating an estimation of the operational frequency based on the available power to run a job. In operation the estimator receives as input at least a job type the power available for the job P and a list of nodes on which the job is to run.

At operation the operational frequency Fo and the allocated power P are set to an undefined value. The F as output by the estimator at operation is the estimate of the frequency at which the nodes of the list of nodes provided to the estimator should operate based on the P. The Fthat is output at operation represents the highest frequency at which the nodes on the list of nodes may operate such that the nodes will not consume more power than P. At operation the variable F is set to the lowest frequency for each node e.g. as provided in the calibrator database .

For example a user may submit a job Job A to be run in Auto mode. When the job is ready to run the job launcher determines there is for example 1.2 MW of power available to be allocated to Job A. Subsequently the resource manager may request an estimate of inter alia the frequency at which the nodes should operate to run the job while consuming less than or equal to 1.2 MW of power from the estimator . The estimate based on at least a job type and a list of nodes provides the resource manager with an output of a maximum frequency at which Job A may run say while consuming less than or equal to 1.2 MW of power. The estimator may also include in the estimate an estimate of the average power and an estimate of the maximum power Job A may consume while operating at 2.3 GHz.

At operation the estimator determines whether calibration data for a workload of the job type is present in the calibrator database. When calibration data for a workload of the job type is found in the calibrator database yes at operation the variable power for each node P N is set to a workload power for each node at Fobtained from the calibrator database operation . The workload power is based on the power type parameter received as an input at operation . The power type may be for example PMP average workload power or maximum workload power. The power type may be determined from user input e.g. a power policy selection and or whether power monitoring is used e.g. when power monitoring is not used the power type may be PMP . When calibration data for a workload of the job type is not found in the calibrator database no at operation the variable power for each node P N is set to the average PMP for each node at Fobtained from the calibrator database operation .

At operation the P N is set to the workload power as described regarding operation for each node N at Fwhen the job runs at scale Pscaled N and the P N is set to the maximum workload for each node N at Fwhen the job runs at scale PScaled N . At operation the variable representing overall power required for the job P is set to the sum of the Pscaled N for all nodes on the listed of selected nodes. At operation the estimates for shared nodes are added.

At operation the estimator determines whether the variable power P is less than the available power P or Pis less than P . When Pis not less than P no at operation the estimator outputs an estimate including i Fas the estimate for the operational frequency for the job ii Pas the estimated workload power when the job operates at F iii Pas the maximum workload power at F iv Fas the operating frequency just lower than Fon the list of operating frequencies maintained in the calibration database v Pas the estimated power at when the job operates F vi Pas the maximum workload power at F vii Fas the operating frequency just higher than Fon the list of operating frequencies maintained in the calibration database viii Pas the estimated power when the job operates at F and vii Pas the maximum workload power at F operation . When the power at the lowest frequency for each node see operation is less the available power operation will return Fand Pas an undefined value. Based on Fand Pbeing set to undefined the HPC system will determine that the job requested by the user cannot be run with the current available power at the power type desired.

When Pis less than P yes at operation the estimator sets Fequal to Fand Pequal to P operation . At operation the estimator determines whether the nodes on the list of selected nodes may operate at a higher frequency than F operation . When the nodes on the list of selected nodes cannot operate at a higher frequency than F no at operation the estimator outputs an estimate including i Fas the estimate for the operational frequency for the job ii Pas the estimated workload power when job operates at F iii Pas the maximum workload power at F iv Fas the operating frequency just lower than Fon the list of operating frequencies maintained in the calibration database v Pas the estimated power when the job operates at F vi Pas the maximum workload power at F vii Fas the operating frequency just higher than Fon the list of operating frequencies maintained in the calibration database viii Pas the estimated job power when the job operates at F and vii Pas the maximum workload power at F operation .

When the nodes on the list of selected nodes can operate at a higher frequency than F yes at operation Fis set to the next higher frequency as listed in the calibrator database operation . When Fis set to the next higher frequency as listed in the calibrator database operation the method returns to operation as discussed above.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a list of frequencies responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a power estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the power estimate to a resource manager.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a list of frequencies responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a power estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the power estimate to a resource manager wherein the calibration data includes one or more of a maximum power an average power a maximum temperature an average power a performance metric or a minimum required power.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a list of frequencies responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a power estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the power estimate to a resource manager wherein the power estimate includes one or more of a maximum power consumed by each node on the list of selected nodes while running a workload of the workload type at each frequency of the list of frequencies an average power consumed by each node on the list of selected nodes while running the workload at each frequency of the list of frequencies a maximum temperature of each node on the list of selected nodes while running the workload at each frequency of the list of frequencies an average power of each node on the list of selected nodes while running the workload at each frequency of the list of frequencies a performance metric for the workload type while running the workload at each frequency of the list of frequencies or a minimum required power for the nodes on the list of selected nodes to perform the workload at each frequency of the list of frequencies.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a list of frequencies responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a power estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the power estimate to a resource manager wherein the workload type includes a type of one of a small application a portion of an application or a test script wherein the small application the portion of an application and the test script are used in a calibration of the nodes on the list of selected nodes.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a list of frequencies responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a power estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the power estimate to a resource manager wherein generating the power estimate includes scaling the calibration data wherein the scaling adjusts the power consumed per node on the list of selected nodes when the distributed computer system performs a job of the workload type to consider a size of the list of selected nodes.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the calibration data includes one or more of a maximum power an average power a maximum temperature an average power or a performance metric.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the frequency estimate further includes the selected frequency and one or more of a maximum power consumed by each node on the list of selected nodes while running a workload of the workload type at the selected frequency an average power consumed by each node on the list of selected nodes while running the workload at the selected frequency a maximum temperature of each node on the list of selected nodes while running the workload at the selected frequency an average power of each node on the list of selected nodes while running the workload at the selected frequency a performance metric for the workload type while running the workload at the selected frequency or a minimum required power for the nodes on the list of selected nodes to perform the workload at the selected frequency.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the frequency estimate further includes the selected frequency and one or more of a maximum power consumed by each node on the list of selected nodes while running a workload of the workload type at the selected frequency an average power consumed by each node on the list of selected nodes while running the workload at the selected frequency a maximum temperature of each node on the list of selected nodes while running the workload at the selected frequency an average power of each node on the list of selected nodes while running the workload at the selected frequency a performance metric for the workload type while running the workload at the selected frequency or a minimum required power for the nodes on the list of selected nodes to perform the workload at the selected frequency wherein the selected frequency is a highest frequency at which the nodes on the list of selected nodes may operate such that a total power consumed by the nodes on the list of selected nodes does not exceed the available power while running the workload.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the frequency estimate further includes the selected frequency and one or more of a maximum power consumed by each node on the list of selected nodes while running a workload of the workload type at the selected frequency an average power consumed by each node on the list of selected nodes while running the workload at the selected frequency a maximum temperature of each node on the list of selected nodes while running the workload at the selected frequency an average power of each node on the list of selected nodes while running the workload at the selected frequency a performance metric for the workload type while running the workload at the selected frequency or a minimum required power for the nodes on the list of selected nodes to perform the workload at the selected frequency wherein the frequency estimate further includes an average power consumed by each node on the list of selected nodes while running the workload at a second frequency a maximum power consumed by each node on the list of selected nodes while running the workload at the second frequency an average power consumed by each node on the list of selected nodes while running the workload at a third frequency and a maximum power consumed by each node on the list of selected nodes while running the workload at the third frequency wherein the second frequency is a next higher frequency than the selected frequency at which the nodes on the list of selected nodes were calibrated and the third frequency is a next lower frequency at which the nodes on the list of selected nodes were calibrated.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the workload type includes a type of one of a small application a portion of an application or a test script wherein the small application the portion of an application and the test script are used in a calibration of the nodes on the list of selected nodes.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the input parameters further include an option for a selected frequency as one of a frequency resulting in a fastest performance metric or a frequency resulting in a most energy efficient metric.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the input parameters further include an option for a selected frequency as one of a frequency resulting in a fastest performance metric or a frequency resulting in a most energy efficient metric wherein the frequency resulting in the fastest performance metric is a frequency at which the nodes on the list of selected nodes operate to complete a workload of the workload type in a fastest time.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the input parameters further include an option for a selected frequency as one of a frequency resulting in a fastest performance metric or a frequency resulting in a most energy efficient metric wherein the frequency resulting in the most energy efficient metric is a frequency at which the nodes on the list of selected nodes operate to complete a workload of the workload type with a lowest aggregate power consumption among the nodes on the list of selected nodes.

A non transitory computer readable storage medium having stored thereon instructions the instructions being executable by one or more processors to perform operations including receiving by an estimator module executed by the one or more processors a plurality of input parameters the plurality of input parameters including i a workload type ii a list of selected nodes belonging to a distributed computer system and iii a power value available to the distributed computer system responsive to receiving the plurality of workload parameters retrieving by the estimator module calibration data from a calibration database generating by the estimator module a frequency estimate based on the plurality of workload parameters and the calibration data and providing by the estimator module the frequency estimate to a resource manager wherein the frequency estimate includes a selected frequency at which the nodes should operate while processing a workload and a corresponding power the processing of the workload will consume at the frequency wherein the frequency estimate further includes the selected frequency and one or more of a maximum power consumed by each node on the list of selected nodes while running a workload of the workload type at the selected frequency an average power consumed by each node on the list of selected nodes while running the workload at the selected frequency a maximum temperature of each node on the list of selected nodes while running the workload at the selected frequency an average power of each node on the list of selected nodes while running the workload at the selected frequency a performance metric for the workload type while running the workload at the selected frequency or a minimum required power for the nodes on the list of selected nodes to perform the workload at the selected frequency wherein generating the frequency estimate includes scaling the calibration data wherein the scaling adjusts the power consumed per node on the list of selected nodes when the distributed computer system performs a job of the workload type to consider a size of the list of selected nodes.

A system generating a power estimate for a distributed computer system comprising one or more processors and a storage module communicatively coupled to the one or more processors the storage module comprises an estimator module to receive a plurality of input parameters the plurality of input parameters including i a workload type and ii a list of selected nodes belonging to the distributed computer system determine a lowest frequency for each node on the list of selected nodes generate the power estimate by i determining an average power consumption for each node on the list of selected nodes at the lowest frequency and ii scaling the average power consumption for each node on the list of selected nodes and provide the power estimate to a resource manager wherein the power estimate includes a minimum required power to start processing of a job of the workload type.

A system comprising one or more processors and a storage module communicatively coupled to the one or more processors the storage module comprises an estimator module to receive a plurality of input parameters the plurality of input parameters including i a workload type and ii a list of selected nodes belonging to a distributed computer system determine a lowest frequency for each node on the list of selected nodes generate a power estimate by i determining an average power consumption for each node on the list of selected nodes at the lowest frequency and ii scaling the average power consumption for each node on the list of selected nodes and provide the power estimate to a resource manager wherein the power estimate includes a minimum required power to start processing of a job of the workload type wherein when the plurality of input parameters further includes a specified frequency the lowest frequency is set to the specified frequency.

A system comprising one or more processors and a storage module communicatively coupled to the one or more processors the storage module comprises an estimator module to receive a plurality of input parameters the plurality of input parameters including i a workload type and ii a list of selected nodes belonging to a distributed computer system determine a lowest frequency for each node on the list of selected nodes generate a power estimate by i determining an average power consumption for each node on the list of selected nodes at the lowest frequency and ii scaling the average power consumption for each node on the list of selected nodes and provide the power estimate to a resource manager wherein the power estimate includes a minimum required power to start processing of a job of the workload type wherein when the plurality of input parameters does not include a specified frequency the lowest frequency is set to a lowest frequency for each node on the list of selected nodes that is associated with calibration data stored within a calibration database of the distributed computer system.

A system comprising one or more processors and a storage module communicatively coupled to the one or more processors the storage module comprises an estimator module to receive a plurality of input parameters the plurality of input parameters including i a workload type and ii a list of selected nodes belonging to a distributed computer system determine a lowest frequency for each node on the list of selected nodes generate a power estimate by i determining an average power consumption for each node on the list of selected nodes at the lowest frequency and ii scaling the average power consumption for each node on the list of selected nodes and provide the power estimate to a resource manager wherein the power estimate includes a minimum required power to start processing of a job of the workload type wherein when data associated with calibration of the nodes on the selected list of nodes for the workload type is determined to be present in a calibration database included in the distributed computer system i an average workload power is determined for each node on the selected list of nodes based on calibration data associated with the workload type stored in the calibration database and ii the average workload power for each node on the selected list of nodes is scaled and summated wherein the summation is provided in the power estimate as a startup power.

A system comprising one or more processors and a storage module communicatively coupled to the one or more processors the storage module comprises an estimator module to receive a plurality of input parameters the plurality of input parameters including i a workload type and ii a list of selected nodes belonging to a distributed computer system determine a lowest frequency for each node on the list of selected nodes generate a power estimate by i determining an average power consumption for each node on the list of selected nodes at the lowest frequency and ii scaling the average power consumption for each node on the list of selected nodes and provide the power estimate to a resource manager wherein the power estimate includes a minimum required power to start processing of a job of the workload type wherein when data associated with calibration of the nodes on the selected list of nodes for the workload type is determined to not be present in a calibration database included in the distributed computer system i an average maximum power is determined for each node on the selected list of nodes based on calibration data associated with a power virus stored in the calibration database and ii the average maximum power for each node on the selected list of nodes is scaled and summated wherein the summation is provided in the power estimate as a startup power.

In the foregoing description the invention is described with reference to specific exemplary embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims.

