---

title: Methods and systems for restoring storage objects
abstract: Methods and systems for restoring storage objects are provided. The method includes determining if a source storage object and a target storage object are located within a same storage volume, where the source storage object is associated with a first drive and the target storage object is associated with a second drive; and using a point in time copy of the source storage object for restoring the source storage object at the second drive.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09612918&OS=09612918&RS=09612918
owner: NETAPP, INC.
number: 09612918
owner_city: Sunnyvale
owner_country: US
publication_date: 20141017
---
Various forms of storage systems are used today. These forms include direct attached storage network attached storage NAS systems storage area networks SANs and others. Storage systems are commonly used for a variety of purposes such as providing multiple users with access to shared data backing up data and others.

A storage system typically includes at least one computing system may also be referred to as a server or storage server executing a storage operating system configured to store and retrieve data on behalf of one or more client computing systems at one or more storage devices. The storage operating system exports data stored at storage devices as a storage volume. A storage volume is a logical data set which is an abstraction of physical storage combining one or more physical mass storage devices or parts thereof into a single logical storage object. From the perspective of a client computing system each storage volume can appear to be a single storage device. However each storage volume can represent storage space in one storage device an aggregate of some or all of the storage space in multiple storage devices.

Storage volumes are replicated by taking a point in time copy of the data stored at the storage volumes. The point in time copy can be used to restore a storage volume. In conventional systems a restore operation restores a storage object to a same drive as a source storage object. Continuous efforts are being made to provide flexibility for a restore operation such that a storage object can be restored to different drives than the source drive.

In one aspect a method for restoring a storage object is provided. The method includes determining if a source storage object and a target storage object are located within a same storage volume where the source storage object is associated with a first drive and the target storage object is associated with a second drive and using a point in time copy of the source storage object for restoring the source storage object at the second drive.

In another aspect a non transitory machine readable storage medium having stored thereon instructions for performing a method is provided. The machine executable code which when executed by at least one machine causes the machine to determine if a source storage object and a target storage object are located within a same storage volume where the source storage object is associated with a first drive and the target storage object is associated with a second drive and use a point in time copy of the source storage object for restoring the source storage object at the second drive.

In yet another aspect a system having a memory with machine readable medium comprising machine executable code having stored thereon instructions and a processor module coupled to the memory are provided. The processor module is configured to execute the machine executable code to determine if a source storage object and a target storage object are located within a same storage volume where the source storage object is associated with a first drive and the target storage object is associated with a second drive and use a point in time copy of the source storage object for restoring the source storage object at the second drive.

This brief summary has been provided so that the nature of this disclosure may be understood quickly. A more complete understanding of the disclosure can be obtained by reference to the following detailed description of the various aspects thereof in connection with the attached drawings.

As a preliminary note as used in this disclosure the terms component module system and the like are intended to refer to a computer related entity either software executing general purpose processor hardware firmware and a combination thereof. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer.

By way of illustration both an application running on a server and the server can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers. Also these components can execute from various computer readable media having various data structures stored thereon. The components may communicate via local and or remote processes such as in accordance with a signal having one or more data packets e.g. data from one component interacting with another component in a local system distributed system and or across a network such as the Internet with other systems via the signal .

Computer executable components can be stored for example on computer readable media including but not limited to an ASIC application specific integrated circuit CD compact disc DVD digital video disk ROM read only memory floppy disk hard disk EEPROM electrically erasable programmable read only memory memory stick or any other storage device in accordance with the claimed subject matter.

Clients . .N as described below in more detail may be general purpose computers having a plurality of components. These components may include a central processing unit CPU main memory I O devices and storage devices for example flash memory hard drives and others . The main memory may be coupled to the CPU via a system bus or a local memory bus. The main memory may be used to provide the CPU access to data and or program information that is stored in main memory at execution time. Typically the main memory is composed of random access memory RAM circuits. A computer system with the CPU and main memory is often referred to as a host system.

Each storage system may include or has access to a storage subsystem shown as A N having multiple mass storage devices A N may also be referred to as storage devices . The mass storage devices may be for example conventional magnetic disks optical disks such as CD ROM or DVD based storage magneto optical MO storage flash based storage devices or any other type of non volatile storage devices suitable for storing structured or unstructured data.

Client executes an application for accessing storage space managed by storage system . Application may be a database email or any other application type. Application is presented with one or more logical unit number LUN to access storage space that is maintained by storage system . A LUN is uniquely identified by a LUN identifier and is typically assigned a size. LUN at client is mounted at an operating system of the client system via a configured drive letter.

Client also executes a storage system interface module SSIM for providing storage services for example backup restore and others. An example of SSIM is the SnapDrive without derogation of any trademark rights product provided by NetApp Inc the assignee of this application. SSIM interfaces with the storage system for providing storage related services. SSIM maintains a mapping data structure A used for a restore operation such that LUN can be restored from a source drive to a target drive as described below in detail.

The storage system executes a storage operating system for managing storage space within storage subsystem and presenting the storage space to clients . As an example storage operating system may be the DATA ONTAP storage operating system available from NetApp Inc. that implements a Write Anywhere File Layout WAFL storage system or any other suitable storage operating system.

Storage operating system and applications running on the client systems . .N communicate according to well known protocols such as the NFS Network File System protocol or the CIFS Common Internet File System protocol to make data stored on storage device appear to users and or application programs as though the data were stored locally on the client systems . .N.

Storage operating system presents or exports data stored at storage devices as a storage volume may also be referred to as a volume to client systems . .N. In one aspect a storage volume is a logical data set which is an abstraction of physical storage combining one or more physical mass storage devices or parts thereof into a single logical storage object. LUN may be a part of the storage volume or may be the entire storage volume.

A storage volume may be configured to store data containers scripts word processing documents executable programs and any other type of structured or unstructured data. The term data container as used herein means a block a file a logical unit of data or any other information. Each storage volume can represent storage space in one storage device an aggregate of some or all of the storage space in multiple storage devices a RAID redundant array of inexpensive disks group or any other suitable set of storage space.

In a typical mode of operation one of the client systems transmit one or more I O input output commands such as an NFS or CIFS request over network to the storage system . The storage system issues one or more I O commands to storage device to read or write the data on behalf of the client system. The storage system also issues an NFS or CIFS response containing the requested data over network to the client system.

The various storage devices including storage volumes can be configured and managed by using a management application executed by management console . In one aspect as described below management console may be for example a conventional PC workstation or the like.

Communication between the management application and storage system may be accomplished using any of the various conventional communication protocols and or application programming interfaces APIs the details of which are not germane to the technique introduced herein.

Storage environment may include a plurality of client systems . .N similar to clients . .N executing application and SSIM a clustered storage system management console and at least a network communicably connecting the client systems . .N and the clustered storage system . The clustered storage system includes a plurality of nodes . . a cluster switching fabric and a plurality of mass storage devices . . may be referred to as and similar to storage device .

Each of the plurality of nodes . . is configured to include an N module a D module and an M Module each of which can be implemented as a processor executable module. Specifically node . includes an N module . a D module . and an M Module . node . includes an N module . a D module . and an M Module . and node . includes an N module . a D module . and an M Module ..

The N modules . . include functionality that enable the respective nodes . . to connect to one or more of the client systems . .N over the computer network while the D modules . . connect to one or more of the storage devices . .. Accordingly each of the plurality of nodes . . in the clustered storage server arrangement provides the functionality of a storage server.

The M Modules . . provide management functions for the clustered storage system . The M Modules . . are used to configure storage volumes and LUNs that are presented to clients for storing information. The M modules . . maintain various data structures for storing configuration information regarding storage volumes and LUNs including LUN name size identifier drives that are used to mount the LUNs and other information.

A switched virtualization layer including a plurality of virtual interfaces VIFs is provided to interface between the respective N modules . . and the client systems . .N allowing storage . . associated with the nodes . . to be presented to the client systems . .N as a single shared storage pool.

Each of the nodes . . is defined as a computing system to provide application services to one or more of the client systems . .N. The nodes . . are interconnected by the switching fabric which for example may be embodied as a Gigabit Ethernet switch or any other type of switching connecting device.

Although depicts an equal number i.e. of the N modules . . the D modules . . and the M Modules . . any other suitable number of N modules D modules and M Modules may be provided. There may also be different numbers of N modules D modules and or M Modules within the clustered storage system . For example in alternative aspects the clustered storage system may include a plurality of N modules and a plurality of D modules interconnected in a configuration that does not reflect a one to one correspondence between the N modules and D modules.

The client systems . .N of may be implemented as general purpose computers configured to interact with the respective nodes . . in accordance with a client server model of information delivery. In the presently disclosed aspect the interaction between the client systems . .N and the nodes . . enable the provision of network data storage services.

Specifically each client system . .N may request the services of one of the respective nodes . . . and that node may return the results of the services requested by the client system by exchanging packets over the computer network which may be wire based optical fiber wireless or any other suitable combination thereof. The client systems . .N may issue packets according to file based access protocols such as the NFS or CIFS protocol when accessing information in the form of files and directories.

In conventional systems information that is stored for a LUN or a volume may be saved as a point in time copy also called a snapshot without derogation of any trademark rights of NetApp Inc. . The snapshot or the LUN can be restored for the client when the client needs it.

Conventional restore processes have shortcomings because a snapshot or a LUN can only be restored to a same drive. This is undesirable in an environment where clients may want to restore LUNs snapshots to different drives. The various aspects described herein provide a flexible solution where a LUN and or a snapshot can be restored to any drive as described below in detail.

In block B SSIM determines if the source and target LUN are in the same volume and or managed by a same storage system. If yes then in block B SSIM obtains the target LUN name information regarding an igroup and a drive letter for the target LUN. This information may be obtained from the storage operating system .

An igroup identifies one or more initiators that may issue input output I O request for reading and writing data. The initiators are associated with a LUN and are given specific permission to read write and or delete files stored at a LUN. The igroup information may be obtained from the storage operating system

In block B SSIM takes the target LUN offline. SSIM A also un maps the target LUN from the host system and the target drive. The un mapping occurs at data structure A where SSIM stores all the LUN Volume storage system drive mapping information. The target LUN is then deleted.

In block B SSIM generates a clone of the source LUN by taking a snapshot. The clone is provided the same name as the deleted target LUN. Thereafter in block B using the same drive and the igroup for the target LUN the clone LUN is mapped to the client system. The process then ends in block .

If the source and target LUN are not within the same storage system and or volume then in block B the target LUN is taken offline by SSIM . In block SSIM provides source and target LUN information as well as a snapshot name and location information to a restore API or restore module . The restore API may be a part of or interfaces with the storage operating system . The restore API then restores the snapshot to the target drive. The restore API is provided by or interfaces with storage operating system . The target LUN is then brought on line in block and the process ends in block B.

In block B SSIM evaluates the request and identifies the LUN name source and target a storage system that manages the source LUN a storage system that manages the target LUN a volume identifier associated with the source volume and a volume identifier for the target volume. It is noteworthy as explained above that the source and target volume may be the same or different and different storage systems may manage the different storage volumes.

In block B SSIM determines if the source and target LUNs are being managed by the same storage system and or are located within the same storage volume.

If yes then in block SSIM obtains target LUN name information regarding an igroup and a drive letter for the target LUN. This information may be obtained from the storage operating system .

In block B SSIM takes the target LUN offline. SSIM also un maps the target LUN from the host system and the target drive. The un mapping occurs at data structure A where SSIM stores all the LUN Volume storage system drive mapping information. The target LUN is then deleted.

In block B SSIM generates a clone of the source LUN from a given snapshot or the active file system. The clone is provided the same name as the deleted target LUN. Thereafter in block B using the same drive and the igroup for the target LUN the clone LUN is mapped to the client system. The process then ends in block B.

If the target and source LUN are not a part of the same volume and or storage system then in block B the target LUN is taken offline by SSIM i.e. made unavailable to clients. In block B SSIM determines if a snapshot name was specified in the client request. If not then a snapshot is taken in block B by SSIM . The source target and snapshot information is then provided to the restore API of the storage operating system . The target LUN is then restored using the restore API. In block B the target LUN is brought online by the SSIM and made available to clients and thereafter the process ends.

The various aspects of the present disclosure provide flexibility to clients in restore operations. The client is not limited to any particular drive for restoring a LUN or snapshot. This is especially useful for a cloud based environment and virtual machine environment where drives are mobile and can change frequently.

Processors A B may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such hardware devices. The local storage comprises one or more storage devices utilized by the node to locally store configuration information for example in a configuration table .

The cluster access adapter comprises a plurality of ports adapted to couple node . to other nodes of cluster . In the illustrative aspect Ethernet may be used as the clustering protocol and interconnect media although it will be apparent to those skilled in the art that other types of protocols and interconnects may be utilized within the cluster architecture described herein. In alternate aspects where the N modules and D modules are implemented on separate storage systems or computers the cluster access adapter is utilized by the N D module for communicating with other N D modules in the cluster .

Each node . is illustratively embodied as a dual processor storage system executing a storage operating system similar to that preferably implements a high level module such as a file system to logically organize the information as a hierarchical structure of named directories and files on storage .. However it will be apparent to those of ordinary skill in the art that the node . may alternatively comprise a single or more than two processor systems. Illustratively one processor A executes the functions of the N module on the node while the other processor B executes the functions of the D module .

The memory illustratively comprises storage locations that are addressable by the processors and adapters for storing programmable instructions and data structures. The processor and adapters may in turn comprise processing elements and or logic circuitry configured to execute the programmable instructions and manipulate the data structures. It will be apparent to those skilled in the art that other processing and memory means including various computer readable media may be used for storing and executing program instructions pertaining to the invention described herein.

The storage operating system portions of which is typically resident in memory and executed by the processing elements functionally organizes the node . by inter alia invoking storage operation in support of the storage service implemented by the node.

The network adapter comprises a plurality of ports adapted to couple the node . to one or more clients . .N over point to point links wide area networks virtual private networks implemented over a public network Internet or a shared local area network. The network adapter thus may comprise the mechanical electrical and signaling circuitry needed to connect the node to the network. Illustratively the computer network may be embodied as an Ethernet network or a Fibre Channel network. Each client . .N may communicate with the node over network by exchanging discrete frames or packets of data according to pre defined protocols such as TCP IP.

The storage adapter cooperates with the storage operating system executing on the node . to access information requested by the clients. The information may be stored on any type of attached array of writable storage device media such as video tape optical DVD magnetic tape bubble memory electronic random access memory micro electro mechanical and any other similar media adapted to store information including data and parity information. However as illustratively described herein the information is preferably stored on storage device .. The storage adapter comprises a plurality of ports having input output I O interface circuitry that couples to the storage devices over an I O interconnect arrangement such as a conventional high performance FC link topology.

In one example storage operating system may include several modules or layers executed by one or both of N Module and D Module . These layers include a file system manager that keeps track of a directory structure hierarchy of the data stored in storage devices and manages read write operation i.e. executes read write operation on storage in response to client . .N requests.

Storage operating system may also include a protocol layer and an associated network access layer to allow node . to communicate over a network with other systems such as clients . .N. Protocol layer may implement one or more of various higher level network protocols such as NFS CIFS Hypertext Transfer Protocol HTTP TCP IP and others as described below.

Network access layer may include one or more drivers which implement one or more lower level protocols to communicate over the network such as Ethernet. Interactions between clients . .N and mass storage devices . are illustrated schematically as a path which illustrates the flow of data through storage operating system .

The storage operating system may also include a storage access layer and an associated storage driver layer to allow D module to communicate with a storage device. The storage access layer may implement a higher level storage protocol such as RAID redundant array of inexpensive disks while the storage driver layer may implement a lower level storage device access protocol such as FC or SCSI.

As used herein the term storage operating system generally refers to the computer executable code operable on a computer to perform a storage function that manages data access and may in the case of a node . implement data access semantics of a general purpose operating system. The storage operating system can also be implemented as a microkernel an application program operating over a general purpose operating system such as UNIX or Windows XP or as a general purpose operating system with configurable functionality which is configured for storage applications as described herein.

In addition it will be understood to those skilled in the art that the invention described herein may apply to any type of special purpose e.g. file server filer or storage serving appliance or general purpose computer including a standalone computer or portion thereof embodied as or including a storage system. Moreover the teachings of this disclosure can be adapted to a variety of storage system architectures including but not limited to a network attached storage environment a storage area network and a storage device directly attached to a client or host computer. The term storage system should therefore be taken broadly to include such arrangements in addition to any subsystems configured to perform a storage function and associated with other equipment or systems. It should be noted that while this description is written in terms of a write any where file system the teachings of the present invention may be utilized with any suitable file system including a write in place file system.

The processing system includes one or more processor s and memory coupled to a bus system . The bus system shown in is an abstraction that represents any one or more separate physical buses and or point to point connections connected by appropriate bridges adapters and or controllers. The bus system therefore may include for example a system bus a Peripheral Component Interconnect PCI bus a HyperTransport or industry standard architecture ISA bus a small computer system interface SCSI bus a universal serial bus USB or an Institute of Electrical and Electronics Engineers IEEE standard 1394 bus sometimes referred to as Firewire .

The processor s are the central processing units CPUs of the processing system and thus control its overall operation. In certain aspects the processors accomplish this by executing software stored in memory . A processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

Memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. Memory includes the main memory of the processing system . Instructions implement the process steps described above may reside in and execute by processors from memory .

Also connected to the processors through the bus system are one or more internal mass storage devices and a network adapter . Internal mass storage devices may be or may include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks. The network adapter provides the processing system with the ability to communicate with remote devices e.g. storage servers over a network and may be for example an Ethernet adapter a Fibre Channel adapter or the like.

The processing system also includes one or more input output I O devices coupled to the bus system . The I O devices may include for example a display device a keyboard a mouse etc.

The techniques described above are applicable in the upcoming cloud computing environment. Cloud computing means computing capability that provides an abstraction between the computing resource and its underlying technical architecture e.g. servers storage networks enabling convenient on demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. The term cloud is intended to refer to a network for example the Internet or any other network type used for providing computing as a service.

Typical cloud computing providers deliver common business applications online which are accessed from another web service or software like a web browser while the software and data are stored remotely on servers. The cloud computing architecture uses a layered approach for providing application services. A first layer is an application layer that is executed at client computers. In this example the application allows a client to access storage via a cloud.

After the application layer is a cloud platform and cloud infrastructure followed by a server layer that includes hardware and computer software designed for cloud specific services. Details regarding these layers are not germane to the inventive aspects. The storage systems described above can be a part of the server layer for providing storage services.

Thus a method and apparatus for restoring storage have been described. Note that references throughout this specification to one aspect or an aspect means that a particular feature structure or characteristic described in connection with the aspect is included in at least one aspect of the present invention. Therefore it is emphasized and should be appreciated that two or more references to an aspect or one aspect or an alternative aspect in various portions of this specification are not necessarily all referring to the same aspect. Furthermore the particular features structures or characteristics being referred to may be combined as suitable in one or more aspects of the invention as will be recognized by those of ordinary skill in the art.

While the present disclosure is described above with respect to what is currently considered its preferred aspects it is to be understood that the disclosure is not limited to that described above. To the contrary the disclosure is intended to cover various modifications and equivalent arrangements within the spirit and scope of the appended claims.

