---

title: Contact management systems
abstract: An improved contact management system allows users to establish contact sharing relationships with one another and store updating contacting information for these users alongside static contact information for other users in personal, private data collections. The system may allow a user to specify various levels of information sharing and customize communication options by which other users may contact them. The system may provide seamless integration with legacy contact management and/or and communication systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09536228&OS=09536228&RS=09536228
owner: Gretel, LLC
number: 09536228
owner_city: West Palm Beach
owner_country: US
publication_date: 20140731
---
The present application relates to contact management systems and methods and more specifically to a networked system for managing and updating contact information among interconnected users.

In our ever expanding digital world information is accumulating at astounding rates. Contact information is no exception to this trend. The interconnectedness brought on by the Internet and the proliferation of wireless devices has made it commonplace for a person to have many points of contact including multiple email addresses multiple wireless telephone numbers multiple traditional telephone numbers multiple physical addresses and the like. Considering the average person knows about 600 people managing all of this information can be daunting.

Traditional contact management systems attempt to manage this information by providing stand alone software solutions that requires users to enter and store contact information for the people they know. However these systems rely on users to have accurate information for their respective contacts in the first instance. Traditional contact management systems also rely on users to update the information stored therein as a contact s information changes over time leaving users with no way to differentiate the good information from the bad. As a result traditional contact management systems are unreliable and labor intensive.

An improved contact management system implements several technical solutions to the technical problems associated with efficiently flexibly and reliably maintaining contact information and other related functions in order to facilitate communications between users of the system with one another as well as their contacts. As a result the contact management system reduces the difficulty cost and time expenditures typically associated with finding reliable contact information and initiating communications with one s contacts. The contact management system also eliminates duplicative storage of information and reduces the number of processing of events which in turn reduces power consumption and otherwise improves the performance of communications devices such as mobile device.

One technical solution for example lies in allowing users to establish contact sharing relationships with one another and store updating contacting information for these users alongside static contact information for other users in personal private data collections and also may allow users to specify various levels of information sharing. As a result the system provides a single location for reliable contact information freeing users from having to load and navigate through multiple contact management applications to find a contact s information. This increases system performance because these load and navigation operations cause data to be loaded into and out of memory processers to perform operations displays to be updated and the like. This also eliminates the duplicative storage of information among these various applications. In addition because a connected user s information is accurate the user may reliably contact a connected user on the first try. This eliminates for example extraneous phone calls emails and the like caused by outdated contact information. These features increase the performance of the user s device such as for example by reducing processing events like phone calls and email compositions and transmissions etc. and also reduce the processing burden placed on communication networks like cellular communication networks and the Internet generally.

As another example a technical solution lies in allowing users to customize communication options by which other users may contact them. Again this eliminates for example extraneous phone calls emails and the like caused by outdated contact information and increases the performance of the user s device such as for example by reducing processing events like phone calls and email compositions and transmissions etc. and also reduces the processing burden placed on communication networks like cellular communication networks and the Internet generally.

Yet another technical solution lies in providing seamless integration with legacy contact management and or communication systems. Because legacy communication systems are often resident in memory by default leveraging these existing systems does not place a further burden on the device to load for example duplicative phone calling applications. Integration with legacy contact management systems allows the system to have all relevant contact information for a user in one application i.e. a one stop shop for contact information which provides several technical advantages as noted above.

Other systems methods features and technical advantages of the invention will be or will become apparent to one with skill in the art upon examination of the following figures and detailed description. It is intended that all such additional systems methods features and technical advantages be included within this description be within the scope of the invention and be protected by the following claims.

The elements illustrated in the Figures interoperate as explained in more detail below. Before setting forth the detailed explanation however it is noted that all of the discussion below regardless of the particular implementation being described is exemplary in nature rather than limiting. For example although selected aspects features or components of the implementations are depicted as being stored in memories all or part of systems and methods consistent with the contact management system architecture may be stored on distributed across or read from other machine readable media for example secondary storage devices such as hard disks floppy disks and CD ROMs a signal received from a network or other forms of ROM or RAM either currently known or later developed.

Furthermore although specific components of the communications architecture will be described methods systems and articles of manufacture consistent with the contact management system architecture may include additional or different components. For example a processor may be implemented as a microprocessor microcontroller application specific integrated circuit ASIC discrete logic or a combination of other type of circuits or logic. Similarly memories may be DRAM SRAM Flash or any other type of memory. Flags data databases tables and other data structures may be separately stored and managed may be incorporated into a single memory or database may be distributed or may be logically and physically organized in many different ways including unstructured data. Programs may be parts of a single program separate programs or distributed across several memories and processors. Systems may be implemented in hardware software or a combination of hardware and software in one processing system or distributed across multiple processing systems.

Referring to an exemplary hardware architecture including a contact management system for managing and updating the contact information of a plurality of users is shown. The architecture may include two or more user client systems and a contact management server a database and a communications network . Although references will now be made to specific components of the system performing specific features it should be apparent to one of ordinary skill in the art that such references are exemplary and are not intended to limit the scope of the claims in any way furthermore the functionalities described herein may be implemented in a virtually unlimited number of configurations. For example although figuratively attached to contact management server the database may in practice distribute user specific data elements directly to one or more client systems and . Similarly the contact management server may be implemented as a single server configured to provide all of the system s functionalities or the functionalities may be implemented across multiple servers.

The client systems and implement client applications that provide a user interface for the system and may communicate user profile contact and other information with contact management server via communications network . Communications network may be any private or public communication network such as the Internet and may include one or more communications networks. In one embodiment client systems and may comprise stand alone applications which may be either platform dependent or platform independent. For example client systems and may be stand alone applications for a mobile phone configured to run on a mobile operating system such as the iOS operating system from Apple Inc. located in Cupertino Calif. the Android operating system from Google Inc. located in Mountain View Calif. or the like. Alternatively or additionally client systems and may connect to the contact management server via the Internet using a standard browser application. A browser based implementation allows system features to be accessible regardless of the underlying platform of the client system and . Alternatively or additionally one or more of the client systems and may be a workstation computer laptop computer handheld computer tablet mobile messaging device or the like which may all utilize different hardware and or software packages. Other methods may be used to implement the client systems and

The contact management server may exchange user profile contact and other information with the client systems and . In operation the contact management server and client systems and may for example allow a user to establish a personal and private network for personal commercial and professional relationships automate building a network of a user by compiling and organizing the contact information of current and future contacts provide an updating collection of personal and professional contact information of other users in a user s network through the use of contact information sharing relationships and or facilitate communication with connected users through legacy communication functionalities. As should be apparent to one of ordinary skill in the art from the disclosure herein other related services may also be provided.

A user may be an individual a commercial entity or any other type of entity. For example an individual user that is a member of a team or club may establish a contact sharing relationship with an organization entity user thereby allowing the individual user to share their contact information with all other members of the team or club. In one embodiment an individual user may establish a contact sharing relationship with a commercial entity ensuring that the commercial entity has for example the proper shipping address for the individual. In some embodiments a user may be compensated for establishing a relationship with a commercial entity.

In one embodiment contact information may be pushed from a first user to a second user. In such an embodiment a first user may invite a second user to have access to some or all of the first user s contact information without a reciprocal request for access to the second user s information. Alternatively or additionally a pull relationship in which contact information may be request from the second user or a mutual sharing relationship in which both users may have access to the others information may be requested by the first user. In some embodiment all three options may be provided.

The database may store a variety of information including contact information user profile information user preference information user connection relationship information and the like. In one embodiment the database may store for each user a copy of a full address book containing updating and or non updating contact information for each contact of the user. For example database may comprise a plurality of tables in one or more relational databases. In one embodiment the database may include a USER SIGNUP table for storing user information for a registered user a USER SIGNUP TEMP table for storing temporary information used during a sign up process a USER CONTACTS table for storing contact information for a registered user s contacts an INVITE GRETEL table for storing information about an invitation to connect with a registered user of the service to establish a contact information sharing relationship an INVITE GRETEL ME for storing information relating to an invitation to connect with a non registered user to establish a contact information sharing relationship a GROUP table for storing information defining a group of contacts a GROUP MEMBER table for storing group membership information an ADMIN LOGIN table for storing information relating to login credentials of administrators to access the backend dashboard and an ADMIN NOTIFICATION table for storing information for storing information relating to messages sent by administrators to registered users. Exemplary table definitions for these tables are set forth in Appendix A. The database may include other tables use other organizational structures and or store more or less items of data. Other types of databases such as eXstensible Markup Language XML databases and other storage mechanisms also may be used.

In one embodiment the contact management server and database may comprise one or more instances of an Amazon Elastic Compute Cloud Amazon EC2 Web Server Amazon utilizing one or more of the following storage mechanisms Amazon Simple Storage Service Amazon S3 Amazon Relational Database Service Amazon RDS Amazon SimpleDB and Amazon Simple Queue Service Amazon SQS . For example each set of contact information for a given user may be stored in one or more Amazon RDS user images may be stored in one or more Amazon S3 and requests to the server may be stored in one or more Amazon SQS .

An exemplary functional architecture for a contact management server is shown in . The architecture may include application level functionality back end server functionality and database functionality . The application level functionality may provide a user interface on user client systems and . In operation the architecture may provide a framework that allows a user to create an account and manage their own contact information establish relationships with existing users to enable sharing of contact information between users updating contacts generate non updating contact information for contacts that are not existing users of the system and manage a variety of personal preferences and other options.

In one embodiment application level functionality is implemented using a Model View Controller architectural pattern comprising a model layer a view layer and a controller layer . Other architectural patterns may be used. The model layer may be responsible for implementing business logic as well as database implementation. In one embodiment the model layer handles all communication between the application level functionality and the back end server functionality by calling various functions via an Application Programming Interface API . For example API may include get functions and set functions described in more detail below. Alternatively communication between the application level functionality and the back end server functionality may be managed in whole or in part by the view layer and or the controller layer .

The view layer may be responsible for providing the user interface or presentation layer of the application. In one embodiment all screens of the user interface are provided by the view layer . The controller layer may facilitate communication between the view layer and the model layer . In other words the controller layer may be thought of as a request processing layer.

Back end server functionality may provide functions and control mechanisms for implementing the contact management server . In one embodiment back end server functionality includes an API for interfacing with the application level functionality a hyper text transfer protocol HTTP server and data analysis and database management module . In one embodiment API may include functions for retrieving information from the database referred to herein as get APIs and functions for providing information for storage in the database referred to herein as set APIs . In either case an API request is transmitted to the server which takes a corresponding action and sends the response to the application. If appropriate the user may be provided with information from the response.

In one embodiment APIs may include a Login API for allowing a user to log into the application on the user client system and a Signup API for enabling a user to establish an account with the contact management system a Verification API for confirming the identity of a user a ResendCode API for providing an alternate method to confirm the identity of a user a Signuptbl API for saving user information during the signup process a FetchContacts API for retrieving contacts associated with a specified user a FavContact API for designating a contact a favorite a FavOrder API for establishing a priority of favorite contacts for display purposes a GetContact API for retrieving contact details for a specific user a GretelCard API for viewing specific user contact information a SaveGretelCard API for updating user contact information a GretelMe API for sending an invitation to connect to another user a DeleteContact API for deleting an existing contact an InviteGretel API for determining the status of an invitation an AddGroup API for creating a group of existing contacts a GetGroupList API for viewing a list of existing groups a ViewGroup API for viewing details for an existing group a DeleteGroup API for deleting a group a RecieveInvitation API for retrieving pending invitations a Notification API for receiving messages sent by an administrator to users an AfterNotification API for specifying a timeframe for receiving notifications of pending invitations and or saving the setting of the user a CSVExport API for exporting a file including a user s contacts information and a SendStatus API for sending a status indicator regarding whether the user has imported contacts from a legacy contact management system. Exemplary XML definitions for these APIs are provided in Appendix B. Other functions may be implemented by API .

The HTTP server may be an Apache HTTP Server provided by the Apache Software Foundation or any other suitable HTTP server. Other communications servers may be used. In operation HTTP server receives requests such as API calls from user clients and processes the requests and takes appropriate actions in conjunction with Data analysis and database management module and provides responses to the user clients and

Data analysis and database management module may interface with the database to retrieve and or store information. In one embodiment data analysis and database management module may provide functionality for managing user information contact information relationship data for connecting registered users and other personalization data and for searching a directory. Other functions may also be provided.

A flow chart depicting a user registration process that includes a process for inviting users to connect with the registered users for one embodiment of a contact management system is shown in . In the illustrated example a user may create an account and log in to a client application for a contact management system at step . In one embodiment upon opening a client application a user may be presented with a landing screen such as the landing screen shown in that allows a user to log in or create an account by selecting appropriate interface controls and respectively.

Upon selection of the account creation control the user may be presented with an account creation screen such as the account creation screen shown in . The account creation screen may include interface controls for allowing a user to provide a first name last name email address mobile phone number including country code if applicable password and password confirmation . Optionally the user may indicate a preference for receiving text messages from the contact management system via corresponding interface controls . In response to a user submission of account information the contact management system may verify the identity of the new user such as by providing a text message including a confirmation code. As shown in the user may enter a confirmation code in an appropriate interface control and submit the code to confirm the identity of the user. Optionally the user may request a duplicate code or modify the mobile phone number associated with the account by selecting respective interface controls and . Other verification methods may be used.

Returning to a new user may be presented with an option to import existing contacts stored on a legacy contact management system at step . For example a pop up window including appropriate interface controls may provide a mechanism for allowing a user to import legacy contacts . If the user initiations the importation process contact information stored in a legacy contact management system may be imported in the system at step . In one embodiment a single piece of information per type i.e. one phone number one email address etc. may be imported. Alternatively more or less information may be imported at step . Other methods such as manual entry by the user may be used to input contact information for a user s contacts into the system.

Next the system may analyze the mobile phone numbers to determine if any imported contacts correspond to existing registered users of the system at step for example by determining if an registered users have a matching phone number and or name. If so a list of existing registered users are displayed at step . An exemplary list of existing users is shown in . The user may choose to invite any or all listed users to establish a contact information sharing relationship at step such as by selecting corresponding interface controls and .

Once invitations are sent to existing users the system may determine if the invitation has been accepted denied or if no response has been received at step . An exemplary screen shot showing a list of pending invitations is shown in . The invited user may accept or deny the invitation by selecting corresponding controls or respectively. If no response has been received after a specified time period the system may wait further for a response. Alternatively or additionally reminders may be sent to an invited user as described in more detail below. If a user accepts an invitation the invited user may specify sharable contact information. For example shows a screen shot that allows a user to specify whether the user wishes to share work information private information or both types. Alternatively or additionally contact information may be segmented into more or less information types or pieces of information may be shared individually.

If an invitation is accepted several actions may take place. On the sender s side the inviting user the contact is changed to an updating connection at step the connection is uploaded to the back end system at step and the contact information stored for that user in the database is synchronized on the sender s device at step . On the receiver s side the invited user the system first determines if the recipient already has contact information non updating for the inviting user at step . If so the connection is changed to an updating connection at step the connection is uploaded to the back end system at step and the contact information stored for the inviting user in the database is synchronized on the recipient s device at step . If the inviting user does not have existing contact information for the sender an information sharing relationship is created at step the connection is uploaded to the back end system at step and the contact information stored for the inviting user in the database is synchronized on the recipient s device at step .

Upon logging in the user may be taken to a landing screen such as the landing screen shown in and asked if they would like to import any additional contacts from a legacy contact management system at step . If the user has previously imported contacts step the system determines if there are any new contacts being imported during the current operation at step . If so the system loads the new contacts at step . The system then determines if any contact information has changed for existing updating connections for the user at step . If so the system updates the information in the application at step and the updated information is synchronized to the back end server at step . Next the system determines if any newly imported contacts are existing users of the system at step . If so the system may establish the contact sharing relationship between the users at step and update and synchronize the users contact information at step . These steps may be performed for example by using a process similar to the one described above in reference to . Alternatively if there are no new contacts found during the importation process the system may determine if any contact information has changed for existing updating connections for the user at step and if so update the information in the application at step and the updated information is synchronized to the back end server at step .

Additional capabilities of various embodiments of the system are now described with respect to the various screen shots shown in . shows a screen shot of an exemplary landing screen . The landing screen may include a list of contacts. Each contact listing may include a name a picture if available and job related information . More or less information may be included for listed contact. Controls may be provided to allow a user to select a menu and or a list of favorite contacts . For example selection of a favorite contacts control may cause a list of pre selected favorite contacts indicated with star to be displayed as shown in . Selection of an edit button may allow the user to select a favorite shown with bold star or deselect a favorite shown with a grey out star as shown in . The user may confirm their designations by selecting the appropriate control after which the user may reorder the favorite list via controls and as shown in . Navigation controls may also be provided to allow a user to navigate to contacts jump up or down the list by selecting a letter or search for an existing contact by entering a keyword in .

Upon selection of a listed contact controls for selecting among one or more communication options may be provided. For example shows controls for communicating with a contact via text message email or phone . Selection of these controls may launch legacy communication applications corresponding to the selected control. The legacy application may be hardware specific e.g. the native phone application on a cell phone for placing a telephone call or hardware independent e.g. Skype WhatsApp etc. . Alternatively or additionally the system may include built in applications for communicating with a contact via the selected control. In one embodiment the contact information associated with each particular control may be based on an inbound communication preference set by the associated updating user. In the illustrated example user Mathew Dheras may set a mobile phone number as an inbound communications preference for text messages if so selecting the text message control may cause a text messaging application to launch for composing a text message to the specified mobile phone number. In the case of a non updating user the contact information associated with each control may be the single piece of contact information stored for that user that is compatible with the selected control e.g. the only email address for the contact . Alternatively or additionally the user may be able to select a default number or email address for one or more controls for any non updating contacts. Other methods of associating contact information with the controls may also be used.

A control may also be provided to view a contact card that includes all contact information for a contact as shown in which shows two phone numbers three email addresses one text message number and two physical addresses for a contact. Each of the listed pieces of contact information may be selectable or associated with a selectable interface control that causes a legacy or built in communication application corresponding to the selected information or control to be launched. If the selected contact is a non updating connection i.e. no contact information sharing relationship has been established between the user and the contact a control for initiating an invitation process may be provided upon selection of a listed contact as shown in and or on the non updating contact s contact card as shown in .

When viewing a specific user s contact card a control in may be provided to allow a user to edit information for a contact. If the selected contact is a non updating contact the user may be allowed to freely edit the contact information of the selected contact. If the selected contact is an updating contact the user may be prompted to confirm the contact information to be shared with the selected contact such as work information private information or both as shown in .

As shown in an exemplary menu may include options for selecting a list of pending invitations manage group settings manage their personal contact information manage other settings retrieve information related to a privacy policy other legal matters the system generally or support and or contact the developers .

To manage group settings the user may navigate to the group menu page such as the group menu page shown in . The group menu page may include controls for selecting existing groups or to add a new group . Upon selection of the add a new group control the system may provide a list of all contacts which the user may add or remove from the group by selecting appropriate controls and respectively. The user may also enter a group name in the appropriate control . A group action screen is shown in . A user may select a corresponding control to initiate a group email group text or delete the group .

An exemplary user profile management screen is shown in . In the illustrated example the user profile management screen may provide controls for inviting a contact to establish an information sharing relationship modify their own contact information and perform coordinated operations . A screen for generating an invitation to establish an information sharing relationship is shown in . The user may specify the first name last name and mobile phone number for invitation recipient via controls and respectively. The user may also use a default privacy setting corresponding to the types of contact information to be shared with the recipient shown at or modify that setting via control .

Coordinated operations may include for example operations that act on multiple contacts. For example coordinated actions may include options for importing contacts exporting contacts or inviting all non updating contacts to establish information sharing relationships as shown in . For example to export contacts a comma separated value file .CSV including all of a user s contacts may be generated. In one embodiment a user may be prompted to enter an email address and password for sending the .CSV file to the user as shown in .

An exemplary other settings menu is shown in . Other settings may include notification settings and default privacy settings. Notifications settings may indicate how often new invitations are provided to a user. For example in the example illustrated in a user may select to be notified immediately on a daily or weekly basis or never. Other time periods may also be used. As shown in default privacy settings may correspond to the types of contact information to be shared with the recipient . For example a user may share work information private information or both. Other types of information at various levels of granularity may also be used.

While various embodiments of the invention have been described it will be apparent to those of ordinary skill in the art that many more embodiments and implementations are possible within the scope of the invention. Accordingly the invention is not to be restricted except in light of the attached claims and their equivalents.

