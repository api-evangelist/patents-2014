---

title: Invocation control over keyboard user interface
abstract: A touch-based device provides invocation control over a keyboard user interface (UI). The device displays a keyboard UI overlaid on an application UI to allow a user to interact with the application UI. A dismissal UI is displayed adjacent to the keyboard UI to allow the user to dismiss the keyboard UI. The keyboard UI is dismissed in response to detecting a user action on the dismissal UI. The device presents a lock UI and an invocation UI adjacent to the lock UI. In response to detecting another user action on the lock UI, the user is prevented from invoking the keyboard UI.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09436385&OS=09436385&RS=09436385
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09436385
owner_city: Redmond
owner_country: US
publication_date: 20140102
---
This application claims priority to U.S. Provisional Patent Application Ser. No. 61 916 738 filed on Dec. 16 2013. The disclosures of the foregoing provisional patent application are hereby incorporated by reference for all purposes.

A contemporary touch based device provides a user with a virtual soft keyboard for onscreen text entry when a hardware keyboard is not connected to the device. A soft keyboard is typically invoked when the user taps and places text insertion point IP in an editable text area. The soft keyboard is also invoked when a user double taps and selects a word in an editable text area. The soft keyboard is further invoked when a user performs an action such as inserting a new comment where a document processing application automatically places the user s IP in an editable text area. These behaviors may be governed by the operating system and change as operating systems are updated modified.

In a document processing application keyboard invocation occurs frequently regardless of whether text entry is not the user s primary goal. Significant portion of an available onscreen area in a touch based device is an editable document canvas. Users place an IP or select a word to create or expand a selection insert an object like an image shape or table format text different font face style or color bold italic underline etc. move a selection with cut copy paste and move the selection with touch. In addition the user is more likely to make high level tweaks document formatting structure on touch devices versus long form authoring. Text entry is likely be a few sentences or less at a time.

Repeated keyboard invocation may be frustrating interruptive and unwanted when the user does not actually intend to type on a touch based device. Accidental invocation is also common. Examples include panning the canvas up or down which results in unintentional IP placement. Unwanted invocation forces the user to repeatedly dismiss the keyboard which degrades user experience and satisfaction with products because the keyboard occludes significant portion of the screen in landscape mode.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to exclusively identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to invocation control over a keyboard user interface UI . A touch based device may display the keyboard UI overlaid on an application UI to allow a user to interact with the application UI. The touch based device may display a dismissal UI adjacent to the keyboard UI to allow the user to dismiss the keyboard UI. In response to detecting a user action on the dismissal UI the touch based device may dismiss the keyboard. The touch based device may also present a lock UI and an invocation UI adjacent to the lock UI. In response to detecting another user action on the lock UI the touch based device may lock the user from invoking the keyboard UI dismiss the lock UI and the invocation UI and display an invocation indicator and an unlock UI adjacent to the invocation indicator.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory and do not restrict aspects as claimed.

As briefly described above invocation control over a keyboard user interface UI may be provided. The keyboard UI may be displayed overlaid on an application UI to allow a user to interact with the application UI. A dismissal UI may be displayed adjacent to the keyboard UI to allow the user to dismiss the keyboard UI. In response to detecting a user action on the dismissal UI the keyboard UI may be dismissed. A lock UI and an invocation UI adjacent to the lock UI may be presented. In response to detecting another user action on the lock UI the user may be locked from invoking the keyboard UI the lock UI and the invocation UI may be dismissed and an invocation indicator and an unlock UI adjacent to the invocation indicator may be displayed.

In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a computing device those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and comparable computing devices. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer implemented process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage medium readable by a computer system and encoding a computer program that comprises instructions for causing a computer or computing system to perform example process es . The computer readable storage medium is a computer readable memory device. The computer readable storage medium can for example be implemented via one or more of a volatile computer memory a non volatile memory a hard drive and a flash drive.

Throughout this specification the term platform may be a combination of software and hardware components to provide invocation control over a keyboard UI. Examples of platforms include but are not limited to a hosted service executed over a plurality of servers an application executed on a single computing device and comparable systems. The term server generally refers to a computing device executing one or more software programs typically in a networked environment. However a server may also be implemented as a virtual server software programs executed on one or more computing devices viewed as a server on the network. More detail on these technologies and example embodiments may be found in the following description.

As shown in diagram a touch based device may present content to a user . The touch based device may include variety of touch enabled devices including but not exclusive to a tablet device a smart phone a touch capable notebook a touch capable monitor and similar ones. The touch based device may detect a touch action such as a swipe a pinch a spread a tap a tap and hold and similar ones as an interaction. The touch action on the touch based device may be referred to as a gesture. The touch based device may execute operation s corresponding to the gesture to allow the user to interact with the displayed content. Displayed content may include variety of internal or external data. The data may include text graphics video audio combinations of each and similar ones. The device may retrieve displayed content from an external device such as server . An example may include the device retrieving content such as a web page from an external resource such as the server and displaying the web page to the user .

According to some embodiments the touch based device may display a variety of keyboard UI states and UIs to control the keyboard UI states. In an example scenario the touch based device may display a keyboard UI to enable the user to interact with the displayed content. The touch based device may also display a dismissal UI to enable the user to dismiss the keyboard UI. The user may activate the dismissal UI with a gesture . The device may dismiss the keyboard UI in response to activation of the dismissal UI .

While the example system in has been described with specific components including a touch based device providing invocation control over a keyboard UI embodiments are not limited to these components or system configurations and can be implemented with other system configuration employing fewer or additional components. In an alternate example the touch based device may lock the keyboard UI to prevent the user from invoking the keyboard UI. The approaches discussed here may be applied to any compliance process provided by an application and or a server using the principles described herein.

A touch based device may display an application UI providing content to a user. The content may include data such as text graphics and similar ones. The application UI may include a UI of document processing application a drawing application a spreadsheet application a presentation application and similar ones. A user may be allowed to interact with the content through the keyboard UI . In an example scenario the keyboard UI may automatically be activated in response to a touch action in a region of the application UI configured to accept text entry.

The dismissal UI may be placed adjacent to a top edge of the keyboard UI . A right edge of the dismissal UI may be placed in line with a right edge of the keyboard UI. The dismissal UI may also be incorporated into the keyboard UI itself instead of being placed adjacent to the keyboard UI edge. A touch action such as a tap action may activate the dismissal UI . In response to detecting the tap action the touch based device may execute operations to dismiss the keyboard UI .

The operations may include hiding the keyboard UI deactivating the keyboard UI removing the keyboard UI or similar ones. The touch based device may display an invocation UI and a lock UI to allow the user to control a status of the keyboard UI .

As shown in the diagram in response to a dismissal of the keyboard UI a touch based device may display a lock UI and an invocation UI . Subsequent to the dismissal of the keyboard UI the keyboard UI may be placed in an unlocked state allowing the user to invoke the keyboard UI to interact with a content displayed by an application UI . The keyboard UI may be invoked in response to a user action associated with the application UI such as a touch action in an area of the application UI configured to edit text. Alternatively the keyboard UI may be invoked by a user action on the invocation UI . A user action such as tap action on the invocation UI may initiate execution of operation s to invoke the keyboard UI.

In response to detecting a gesture on the invocation UI the touch based device may execute the operation s associated with invoking the keyboard UI to allow the user to interact with the content displayed by the application UI . The gesture associated with activating the invocation UI may not be limited to tap action. User actions such as a swipe action associated with the invocation UI may be interpreted by the touch based device to activate the invocation UI .

According to some embodiments the unlocked status of the keyboard UI allowing the user to invoke the keyboard UI may be changed by activating the lock UI . In response to activation of the lock UI by touch action such as a swipe action the unlocked status of the keyboard UI may be changed to a locked status. The lock status may prevent the user from invoking the keyboard UI. The lock status may encompass the application UI or a desktop UI of the touch based device preventing the user from invoking the keyboard UI in other application UIs. The lock UI may be slid with the swipe action in a left direction. The lock UI may be slid back to an original position upon activation of the lock status. The lock UI and the invocation UI may be replaced by invocation indicator and an unlock UI in response to activation of the lock status. In addition activation of the lock UI is not limited to a swipe action. The lock UI may be activated by other touch actions such as a tap action and similar ones.

As shown in diagram an invocation indicator may display a graphic alerting a user to a locked status of the keyboard UI preventing the user from interacting with the application UI using the keyboard UI. When the keyboard UI is in the locked status a user may be prevented from invoking the keyboard UI through a user action such as tap action on an editable area of the application UI. The user may be enabled to unlock the keyboard UI by a user action on unlock UI . The user action may include a right swipe action to slide the unlock UI to the right a tap action on the unlock UI and similar ones. In response to activation of the unlock UI and unlocking the keyboard UI the touch based device may remove the invocation indicator and unlock UI and display the lock UI and invocation UI to allow the user to re lock the keyboard UI or to invoke the keyboard UI.

According to some embodiments the dismissal UI the invocation UI the lock UI and the unlock UI may be provided through an application programming interface API . The invocation UI may be activated by a user action such as an upward swipe action starting on the invocation UI. The dismissal UI may be activated by a user action such as a downward swipe starting on the dismissal UI. Locations of the lock and the invocation UIs may be swapped to enable the lock UI to be activated with a rightward swipe action sliding the lock UI to the right. Locations of the unlock UI and the invocation indicator may be swapped to enable the unlock UI to be activated with a leftward swipe action sliding the unlock UI to the left. In addition the lock UI and the invocation UI pair and the invocation indicator and the unlock UI pair may be placed in proximity to a bottom right corner of the touch based device s UI desktop UI or the application UI .

According to further embodiments the lock button may be a single button placed adjacent to the invocation button. Tapping the lock button may lock the keyboard. Another tap may unlock the keyboard. The lock invocation and dismissal UIs may be animated. Moreover the lock invocation and dismissal UIs may display callouts or tooltips to the user to help them learn to use the UIs.

According to other embodiments the invocation UI may be disabled. The user may be allowed to invoke the keyboard UI by interacting with editable areas of the application UI. The lock UI and the unlock UI may be displayed to allow the user to change a lock status and an unlock status of the keyboard UI. In addition the touch based device may display a button control in place of a dismissal UI a lock UI and an invocation UI pair and an invocation indicator and unlock UI pair to provide invocation lock and unlock functionality. A graphic associated with the button control may be changed to reflect the locked or unlocked status of the keyboard UI. Similar to a button control a pin and unpin control and an enable and a disable control and an on and an off control and a show and hide control may be used to enable lock and unlocked status of the keyboard UI.

According to yet other embodiments the dismissal invocation lock and unlock UIs may be disabled in response to detecting a device displaying the application UI that is not touch enabled. Furthermore in response to detecting an attachment of a mouse device and a movement of the mouse device the dismissal invocation lock and unlock UIs may be disabled. In addition in response to detecting a read only content displayed on the application UI by the touch based device the dismissal invocation lock and unlock UIs may be disabled. Moreover the touch based device may detect a predetermined number of consequent activations of the dismissal UI. The touch based device may provide a notification describing the lock UI and the unlock UI to encourage the user to activate the lock and the unlock UI.

The example scenarios and schemas in are shown with specific components data types and configurations. Embodiments are not limited to systems according to these example configurations. Invocation control over a keyboard UI may be implemented in configurations employing fewer or additional components in applications and user interfaces. Furthermore the example schema and components shown in and their subcomponents may be implemented in a similar manner with other values using the principles described herein.

Client applications executed on any of the client devices may facilitate communications via application s executed by servers or on individual server . A dismissal UI may be displayed adjacent to a keyboard UI to allow a user to dismiss a keyboard UI. In response to detecting a user action on the dismissal UI the keyboard UI may be dismissed. A lock UI and an invocation UI adjacent to the lock UI may be presented. In response to detecting another user action on the lock UI the user may be locked from invoking the keyboard UI the lock UI and the invocation UI may be dismissed and an invocation indicator and an unlock UI adjacent to the invocation indicator may be displayed. An API providing the dismissal invocation lock and unlock UIs may be stored in data store s directly or through database server .

Network s may comprise any topology of servers clients Internet service providers and communication media. A system according to embodiments may have a static or dynamic topology. Network s may include secure networks such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s may also coordinate communication over other networks such as Public Switched Telephone Network PSTN or cellular networks. Furthermore network s may include short range wireless networks such as Bluetooth or similar ones. Network s provide communication between the nodes described herein. By way of example and not limitation network s may include wireless media such as acoustic RF infrared and other wireless media.

Many other configurations of computing devices applications data sources and data distribution systems may be employed to provide invocation control over a keyboard UI. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

The application may invoke an API providing dismissal invocation lock and unlock UIs to manage a keyboard UI. The keyboard module may execute operations associated with an activated UI from the dismissal invocation lock and unlock UIs to dismiss the keyboard UI invoke the keyboard UI lock invocation or unlock invocation of the keyboard UI. This basic configuration is illustrated in by those components within dashed line .

Computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer readable storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer readable storage media. Computer readable storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer readable storage media may be part of computing device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device an optical capture device for detecting gestures and comparable input devices. Output device s such as a display speakers printer and other types of output devices may also be included. These devices are well known in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other devices such as over a wired or wireless network in a distributed computing environment a satellite link a cellular link a short range network and comparable mechanisms. Other devices may include computer device s that execute communication applications web servers and comparable devices. Communication connection s is one example of communication media. Communication media can include therein computer readable instructions data structures program modules or other data. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Example embodiments also include methods. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation displaying a keyboard UI overlaid on an application UI to allow a user to interact with the application UI. Next at operation a dismissal UI may be displayed adjacent to the keyboard UI to allow the user to dismiss the keyboard UI. In response to detecting a first user action on the dismissal UI the keyboard UI may be dismissed at operation . A lock UI and an invocation UI adjacent to the lock UI may be presented at operation .

At operation in response to detecting a second user action on the lock UI the user may be locked from invoking the keyboard UI the lock UI and the invocation UI may be dismissed and an invocation indicator and an unlock UI adjacent to the invocation indicator may be displayed. At optional operation a third user action on the unlock UI may dismiss the unlock UI and either display the lock and invoke UI again or automatically invoke the keyboard since it has now been unlocked.

The operations included in process are for illustration purposes. An application as discussed above may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

