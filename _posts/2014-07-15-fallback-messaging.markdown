---

title: Fallback messaging
abstract: A computing device may receive first message data associated with a messaging group. The computing device may associate the first message data with a messaging thread. The computing device may associate a unique session identifier with one or both of the messaging thread and the messaging group. For a first one or more user devices of the messaging group, the computing device may send the message data along with the unique identifier via a native messaging protocol. For a second one or more of the user devices of the messaging group, the computing device may associate a fallback identifier of each of the one or more second user devices with one or both of the messaging thread and the messaging group, and send the first message data and unique identifier via a fallback messaging protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09356893&OS=09356893&RS=09356893
owner: Google Inc.
number: 09356893
owner_city: Mountain View
owner_country: US
publication_date: 20140715
---
This application is a continuation of U.S. patent application Ser. No. 13 778 308 titled Fallback Messaging and filed on Feb. 27 2013. U.S. patent application Ser. No. 13 778 308 is a continuation of U.S. patent application Ser. No. 13 368 258 titled Fallback Messaging and filed on Feb. 7 2012 which in turn claims priority to U.S. Provisional Patent Application No. 61 591 803 titled Fallback Messaging filed on Jan. 27 2012. Each of the above referenced applications is hereby incorporated by reference herein in its entirety

The present disclosure relates to electronic communication. In particular the present disclosure relates to a system and methods for fallback messaging.

The popularity and use of social networks and other types of electronic communication have grown dramatically in recent years. Traditionally users have used social networks to view and comment on each other s social stream however new features to facilitate communication between members of a social network have been developed. For example users can use built in messaging functionality to send each other instant messages.

While users once accessed these social networks exclusively on desktop or laptop computers via the Internet users are now accessing these social networks on their portable electronic devices such as smartphones netbooks and tablets via the Internet. However Internet access from these portable electronic devices can at times be unavailable or intermittent and prevent users from receiving or sending messages to one another. For example due to coverage dead zones weak connectivity or overloaded cellphone networks a user may fail to receive a message from another user of the social network.

Current systems and methods have been limited in how they exchange messages when users are unable to reliably access the Internet. For example when an Internet connection is intermittent or not readily available a user using these systems and methods might not be able to send or receive messages or might only be able to send or receive messages when access to the Internet is again available.

The present disclosure overcomes the deficiencies and limitations of the prior art at least in part by providing a system and associated methods for fallback messaging. In one innovative aspect the system includes an interface module for sending and receiving message data a fallback determination module and a dispatcher. The fallback determination module determines the availability of a network data connection of a user device designated by the message data to receive the message data and generates a routing signal based at least in part on the availability of the network data connection. The fallback determination module is coupled to the interface module to receive the message data. The dispatcher dispatches the message data via the network data connection using a native messaging protocol or a fallback data connection using a fallback messaging protocol based at least in part on the routing signal. The dispatcher is coupled to the fallback determination module to receive the routing signal.

In another innovative aspect a computer implemented method for fallback messaging includes receiving message data designated for a user of a user device receiving connection information for the user device determining by a processor whether a network data connection to the user device is available based at least in part on the connection information and dispatching the message data to the user device via a fallback data connection using a fallback messaging protocol if the network data connection is determined to be unavailable.

Other aspects include corresponding systems methods and apparatus including computer program products. The systems and methods disclosed below are advantageous in a number of respects. For example they can deliver messages to a user device even if the user device is unable to couple to a network such as the Internet. They can also maintain a seamless user messaging experience even if messages have been sent via a fallback. However this summary of features and advantages is not all inclusive and many additional features and advantages are within the scope of the present disclosure. Moreover it should be noted that the language used iii the present disclosure has been principally selected for readability and instructional purposes and not to limit the scope of the subject matter disclosed herein.

The social network server is a server for providing a social networking service. In the depicted embodiment the social network server is coupled to the network via signal line . In some embodiments the social network server includes one or more processors and one or more storage devices storing data or instructions for execution by the one or more processors. For example the social network server is a server a server array or any other computing device or group of computing devices having data processing storing and communication capabilities. In other embodiments the social network server is a virtual server i.e. a virtual machine implemented via software. For example the virtual server operates in a host server environment and accesses the physical hardware of the host server including for example a processor memory storage network interfaces etc. via an abstraction layer e.g. a virtual machine manager . In some embodiments the social network server interacts with the other entities and of the system via the network . In these or other embodiments the social network server is coupled to and interacts with the SMS gateway directly via signal line . The social network server is also coupled for communication with the user devices . . . via for example the network a combination of the network and the mobile network or the mobile network via a dedicated signal path. It should be Understood that the social network server can be stored in any combination of the devices and servers or in only one of the devices or servers.

The social network server includes a social network software application . The social network software application is software including routines for providing functionality for a social network. In some embodiments the social network software application is a set of instructions executable by the processor see for providing the functionality for the social network. In other embodiments the social network software application is stored in the memory see of the social network server and is executable by the processor see . In any of these embodiments the social network software application may be adapted for cooperation and communication with the processor see and the other components of the social network server via the bus see . Although only one social network server is shown multiple social network servers may be included in the system .

A social network is any type of social structure where the users are connected by one or more common features. The common features include relationships connections e.g. friendship family work an interest etc. The common features are provided by one or more social networking systems such as those included in the system including explicitly defined relationships and relationships implied by social connections with other online users where the relationships form a social graph .

In some examples the social graph can reflect a mapping of these users and how they are related. Furthermore it should be understood that social network server and social network software application are representative of one social network and that there may be multiple social networks coupled to the network each having its own server application and social graph . For example a first social network is more directed to business networking a second more directed to or centered on academics a third more directed to local business a fourth directed to dating and others of general interest or a specific focus. In some embodiments the social graph is server hardware and a data repository for managing the data describing the social graphs of the users of various social networks including the social network represented by the social network server and the social network software application . In other embodiments the social graph is included in the social network server .

The group messaging engine is software including routines for exchanging messages between a group of users . In some embodiments the group messaging engine is operable on the social network server . In other embodiments the group messaging engine is operable on the client user device . While only illustrates the social network server and user device as including the group messaging engine in practice any of the depicted devices as well as other devices such as third party servers could include the group messaging engine . Additional structure and functionality of the group messaging engine are described below with reference to at least .

The user devices . . . are computing devices having data processing and data communication capabilities. In some embodiments the user device is a handheld wireless computing device which is capable of sending and receiving voice and data communications. For example the user device may include a processor a memory a power source and one or more network interfaces to broadcast and receive control data voice data and or network data via radio signals. The user device may also include one or more of a graphics processor a high resolution touchscreen a physical keyboard forward and rear facing cameras sensors such as accelerometers and or gyroscopes a GPS receiver a Bluetooth module memory storing applicable firmware and various physical connection interfaces e.g. USB HDMI headset jack etc. etc. Additionally an operating system for managing the hardware and resources of the user device application programming interfaces APIs for providing applications access to the hardware and resources a user interface module for generating and displaying interfaces for user interaction and input and applications such as applications for making phone calls video calls web browsing messaging social networking gaming capturing digital video and or images etc. may be stored and operable on the user device . In some embodiments a user device comprises a workstation computer a desktop computer a laptop computer a netbook computer a tablet computer a smartphone a set top box unit an Internet Protocol connected smart TV including a computer processor capable of receiving viewer input accessing video content on computer networks such as the Internet and executing software routines to provide enhanced functionality and interactivity to viewers or the like. In other embodiments different user devices . . . comprise different types of computing devices. For example the user device is a smartphone the user device is a mobile phone of the non smart phone variety and the user device is a tablet computer. In some embodiments the user device is a client or terminal device. The user devices . . . in are included by way of example. While illustrates three or more user devices the present disclosure applies to any system architecture having one or more user devices.

In some embodiments the user device is coupled to the mobile network via signal lines and and coupled to the network via signal line . The user interacts with the user device via signal line . In other embodiments the user device is coupled to the mobile network via signal line and the user interacts with the user device via signal line . In yet other embodiments the user device is coupled to the network via signal line and the user interacts with the user device via signal line .

In some embodiments the user device includes the group messaging application . The group messaging application is software including routines for exchanging messages with other users via the group messaging engine . For example the group messaging application is operable to instruct the user device to render user interfaces receive user inputs and send information to and receive information from the group messaging engine or . In some embodiments the group messaging application is a set of instructions executable by the processor see to provide the functionality described herein. In other embodiments the group messaging application is stored in the memory see of the user device and is accessible and executable by the processor see to provide the functionality described herein. In any of these embodiments the group messaging application may be adapted for cooperation and communication with the processor see and other components of the user device via the bus see . Additional structure and functionality of the group messaging application is discussed below with reference to at least below. The user device may also optionally include the group messaging engine which is also described in further detail below with reference to at least . While only illustrates the user device as including the group messaging application and the group messaging engine in practice any number of user devices could include these elements.

The network is a conventional type wired or wireless and may have any number of configurations such as a star configuration token ring configuration or other known configurations. Furthermore the network may comprise a local area network LAN a wide area network WAN e.g. the Internet and or any other interconnected data path across which multiple devices may communicate. In some embodiments the network may be a peer to peer network. The network may also be coupled to or includes portions of the mobile network or other telecommunications networks for sending data in a variety of different communication protocols including short messaging service SMS multimedia messaging service MMS eXtended Messaging Service XMS hypertext transfer protocol HTTP direct data connection wireless access protocol WAP various email protocols etc. In some embodiments the network includes Bluetooth communication networks for sending and receiving data.

A network data connection is a data link that couples a user device to the network for communication with the connection server the social network server and the other entities of the system coupled to the network . A user device may be coupled to the network either directly or indirectly. In the depicted embodiment the user devices and connect directly to the network via signal lines and respectively. The user devices and may include a wireless network interface controller for sending and receiving data packets to an access point of the network . For example the user devices and may be Wi Fi enabled devices which connect to wireless local area networks WLANs such as wireless hotspots. In these or other embodiments the user device indirectly connects to the network via a signal line mobile network and signal line . For example the user device connects to the network via a wireless wide area network WWAN of the mobile network . The mobile network may route the network data packets sent and received by the user device over the mobile network and signal line . Signal lines and are depicted using dashed lines to illustrate that a network data connection established via these signal lines and can become unavailable.

The mobile network is a cellular network including distributed radio networks and a hub. In some embodiments the radio networks include groups of transceiver nodes i.e. cell sites which are distributed over a geographic area. Each group of transceiver nodes is controlled by a controller device either within the radio network or hub of the mobile phone network . The transceiver nodes communicate wirelessly over radio channels with nearby user devices . The controller devices determine which of the transceiver nodes is best situated to receive and send data to a nearby user device and controls handovers from transceiver node to transceiver node as the user device moves in and out of range. The mobile network and user devices may use a multiplexing protocol or a combination of multiplexing protocols to communicate including frequency division multiple access FDMA time division multiple access TDMA code division multiple access CDMA space division multiple access SDMA wavelength division multiple access WDMA and random access protocols or any derivative protocols such as orthogonal frequency division multiple access OFDMA orthogonal frequency hopping multiple access OFHMA etc. The mobile network and user devices may also employ multiple input and output MIMO channels to increase the data throughput over the signal lines coupling the mobile network and user devices . The mobile network may be any generation mobile phone network. In some embodiments the mobile network is a 2G or 2.5G Global System for Mobile Communications GSM IS 95 etc. network. In other embodiments the mobile network is a 3G Universal Mobile Telecommunications System UTMS IS 2000 etc. network. In yet other embodiments the mobile network is a 4G Evolved High Speed Packet Access HSPA 3GPP Long Term Evolution LTE Worldwide Interoperability for Microwave Access WiMax etc. network. In even yet other embodiments the mobile network may be any known mobile network type or may be a backwards compatible multi generational network that supports two or more technology standards.

A channel is of a pair of distinct radio frequency signals i.e. a sending signal and a receiving signal which couples a user device to the mobile network . For example a control channel is channel over which SMS data identification data and setup data is transmitted a voice channel is a channel over which voice data is transmitted during a voice call and a network data channel is a channel over which network data packets are transmitted which may include both voice data packets and application data packets. In some embodiments signal lines and comprise one or more channels for sending and receiving data between a user device and a transmission node of the mobile network . In a 2G or 3G mobile network for example signal line may comprise a control channel and voice channel and signal line may comprise a data channel. The user device and a transmission node of the mobile network communicate control data back and forth over the control channel to setup a voice call or a data packet transmission. Based in part on this control data a controller device of the mobile network such as a transmission node controller or a radio network controller determines an appropriate voice channel for the voice call and assigns the voice call to the voice channel or determines an available data channel for sending and receiving network data packets for an application operating on the user device . In this example the data channel is a channel comprising a pair of radio frequency signals distinct from those of the voice and control channels . In another example including some 4G and later mobile phone networks signal line constitutes the control channel and signal line constitutes the data channel thus omitting the voice channel. The data channel is used to transmit both voice data and application data as network data packets such as Internet Protocol IP data packets. In this other example the core network of the mobile network includes a packet switching devices that route the data packets received from the user device based on information included in a header of the data packets.

A fallback data connection is a data link that couples a user device to the social network server via the mobile network and a fallback messaging server. The fallback messaging server is a server for relaying messages between the social network server and the user devices . A fallback messaging protocol is a communication protocol used by the fallback messaging server for sending and receiving the message data via the fallback data connection and includes any standard messaging protocols such as SMS MMS XMS WAP Simple Mail Transfer Protocol SMTP Extensible Messaging and Presence Protocol XMPP Session Initial Protocol SIP Internet Relay Chat IRC protocol etc. In some embodiments the fallback messaging server is an SMS gateway coupled to the mobile network and the social network server either directly via signal lines and respectively or indirectly via the network . In other embodiments the fallback messaging server is an email server coupled to the mobile network and the social network server via the network . However these examples are not exhaustive and other fallback messaging mechanisms for example an instant messaging IM server not shown coupled to the mobile network and the social network server are within the scope of the present disclosure.

The fallback data connection advantageously serves as an alternative data link to the network data connection for connecting the user device to the fallback messaging server. In some embodiments the control channel coupling a user device to the mobile network serves as segment of the fallback data connection. In other embodiments a dedicated messaging channel coupling the user device to the mobile network serves as a segment of the fallback data connection. In these or other embodiments the mobile network and signal lines and or the network coupling the mobile network to the fallback messaging server also constitute segments of the fallback data connection. For example the fallback data connection connects a user device to the fallback messaging server e.g. the SMS gateway via signal line the mobile network and signal line . In another example the fallback data connection connects a user device to the fallback messaging server e.g. the SMS gateway via signal line the mobile network and signal lines and . While the present disclosure is described in the context of these embodiments and examples it should be understood that the fallback data connection can be any data link that serves as an alternative data link to the network data connection and connects a user device to the fallback messaging server.

The following are additional non limiting examples of embodiments of the fallback data connection. A user device is coupled to a node of the mobile network via the control channel and the data channel . The control channel links to an SMS switching element not shown of the mobile network and represents a segment of the fallback data connection. The data channel links to a WWAN of the mobile network which is interconnected with the network and represents a segment of the network data connection. Heavy traffic by other user devices also connected to this node of the mobile network overwhelm the node with data traffic and the user device is unable to connect to the network via the WWAN. As a result the social network server is unable to connect and transmit message data to the user device via the network data connection. The social network server identifies that the network data connection is unavailable and transmits the message data as an SMS message to the user device via the fallback data connection using the control channel which is still able to transmit data to and from the user device despite the heavy data traffic being experience by the node. In another example a user device is located in a remote geographic location of the mobile network where cellular reception is poor and the user device is only able to acquire a signal with a node of the mobile network via the control channel which represents a segment of the fallback data connection. Similar to the above example the social network server identifies that a network data connection to the user device is unavailable and transmits the message data as an SMS message to the user device via the fallback data connection using the control channel .

The search server is communicatively coupled to the network via signal line . In some embodiments the search server includes a search engine for retrieving results that match search terms from the Internet. Although only one search server is shown it should be understood that multiple search servers may be present.

The connection server is a server for generating and providing connection information for user devices . In the depicted embodiment the connection server is coupled to the network via signal line . In some embodiments the connection server is a hardware server including a processor memory and network communication capabilities. In other embodiments the connection server is a virtual server. In some embodiments user devices establish and maintain data connections to the connection server via the network whenever the user devices are coupled to the network via a network data connection and can send and receive network data. Upon request the connection server generates connection information for one or more user devices and sends the connection information to the device requesting the information. For example the connection server tests whether a user device is connected to the connection server generates connection information including a verification signal describing the results of the connection test and sends the connection information to the device requesting it. In some embodiments when a user device establishes a network data connection to the network the user device logs into the connection server using a unique identifier associated with the group messaging engine such as a user identifier for the social network software application . Accordingly provided user authorization is given the connection server is aware of the user identifiers that are logged into the connection server and can provide confirmation of such to the group messaging engine of the social network server and the other components of the system . In these or other embodiments the connection server tests whether an open data connection exists to the user device via a network data connection by sending a verification request such as an Internet control message protocol ICMP echo request to the user device . If the connection is active the user device confirms receipt of the verification request by sending a confirmation signal such as an echo reply i.e. ping via a network data connection and the network . If the connection is no longer active no response is received from the user device and the verification request times out.

In some embodiments the group messaging engine instructs the social network server to request verification from the connection server that a user device is connected to the network via a network data connection. In other embodiments the group messaging engine instructs the social network server to request verification from the connection server that a group messaging application is operable or actively operating by a processor of a user device . While depicts the connection server as a stand alone entity the connection server may be included in the other elements of the system including the social network server . Additionally while only one connection server is depicted the system may include any number of connection servers . For example connection servers may distributed by geographic region to facilitate a quicker and more efficient connection to the connection servers by the user devices located in those regions. In another example if a particular connection server is overloaded with traffic a user device may connect to other less utilized connection servers .

The notification server is a server for providing notifications to one or more user devices . In the depicted embodiment the notification server is coupled to the network via signal line . In some embodiments the notification server is a hardware server including a processor memory and network communication capabilities. In other embodiments the notification server is a virtual server. The notification server may include a push notification service PNS which is software including routines executable by a processor not shown of the notification server to instruct the notification server to forward push notifications to one or more user devices via the network . The push notifications are received by the notification server from the social network server other entities of the system or other third party servers not shown and are forwarded to the one or more user devices via the network . Some examples of push notifications include custom text notifications badges indicating the number of notifications that await review and sounds.

In some embodiments use of push notifications is unnecessary because the group messaging application can be initialized and an interface can be displayed to the user upon receipt of a signal from the group messaging engine . In other embodiments where a user device is limited to receiving push notifications for any applications that are not active or whose interfaces are not actively being displayed to the user push notifications received by the user device from the notification server are displayed to the user to inform the user of any new group messaging activity that has occurred. While depicts the notification server as a stand alone entity the notification server may be included in the other elements of the system including the social network server . Additionally while only one notification server is depicted more than one notification server may be included in the system .

The SMS gateway is a fallback messaging server for sending and receiving message data via the fallback data connection. In the depicted embodiment the SMS gateway is coupled to the network via signal line . The SMS gateway may also be directly coupled to the social network server via signal line for direct communication between those entities. In some embodiments the SMS gateway is a hardware server including a processor memory and network communication capabilities. In other embodiments the SMS gateway is a virtual server. While depicts the SMS gateway as a stand alone entity the SMS gateway may be included in the other elements of the system including the social network server . The SMS gateway is not limited to sending and receiving SMS messages and may send and receive message data using any mobile messaging protocol in any messaging format including MMS XMS etc. Accordingly in addition to its conventional meaning the term text message may include only text or any combination of text graphics audio video etc.

In some embodiments the SMS gateway is a direct to mobile gateway which connects directly to a mobile network via signal line and communicates with the user devices operating on a mobile network . In other embodiments the SMS gateway is an aggregator or SS7 type mobile gateway which interfaces with a mobile network via the network . In these other embodiments the SMS gateway is coupled to the network via signal line communicates with the mobile network via signal lines and and sends and receives text messages using a gateway element of the mobile network . The gateway element such as a short message service center SMSC gateway controls the message delivery to and from the user devices operating on the mobile network.

In some embodiments the SMS gateway receives text messages from the social network server and relays the text messages to the designated recipient user devices using a corresponding text messaging protocol. For example the SMS gateway converts message data received from the social network server to a text message format e.g. SMS and dispatches the text message via SMS protocol to the recipient or recipients indicated in the message data. In another example the message data received by the SMS gateway is pre formatted in a text message format e.g. SMS and the SMS gateway relays the message data to the recipient or recipients identified in a header of the message data. In other embodiments the SMS gateway receives a text message from a user device via the fallback data connection and relays the text message to the group messaging engine of the social network server . The SMS gateway may relay the text message to the group messaging engine in the same format in which it was received by the SMS gateway or the SMS gateway may convert the text message to another format compatible with the group messaging engine and then relay the converted message to the group messaging engine .

The data link by which the SMS gateway receives and relays text messages advantageously serves as a fallback data connection should a user device be unable to establish a network data connection to the network and connect to the connection server . For example as previously described the signal lines and may include control channels which couple the user devices and to transmission nodes of the mobile network . Responsive to receiving the message data in the form of an SMS message switching elements of the mobile network relay the SMS message to and from the SMS Gateway either directly via signal line or indirectly via signal lines and and the network . As a result the SMS message i.e. the message data can be advantageously delivered to the user device or generated by and sent from a user device even if the user device is unable to establish a network data connection to connect to the connection server e.g. the user device is unable to connect to the network via a WWAN of the mobile network over signal line or a WLAN of the network over signal line .

The email server is a messaging server for sending receiving and providing access to electronic mail email . In some embodiments the email server serves as a fallback messaging server and sends and receives email via a fallback data connection. In some embodiments the email server is a hardware server including a processor memory and network communication capabilities and is coupled to the network via signal line . In other embodiments the email server is a virtual server. The email server includes email server software operable for sending storing receiving and providing access to email. The email server includes server software operable to transmit email between any of the constituent elements of the system . For example the email server receives stores and relays emails sent by a user device to the social network server and vice versa. In some embodiments email is transmitted by the email server and other elements of the system over the network using protocols such as SMTP IMAP POP Webdav etc. In other embodiments the email server relays email messages between the social network server and the user devices via the mobile network using a fallback data connection. While only one email server is depicted any number of email servers could be included in the system .

The processor comprises an arithmetic logic unit a microprocessor a general purpose controller or some other processor array to perform computations and provide electronic display signals to a display device not shown . The processor is coupled to the bus for communication with the other components of the social network server . Processor processes data signals and may comprise various computing architectures including a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture or an architecture implementing a combination of instruction sets. Although only a single processor is shown in multiple processors may be included. The processing capability might be limited to supporting the display of images and the capture and transmission of images. The processing capability might be enough to perform more complex tasks including various types of feature extraction and sampling. It should be understood that other processors operating systems sensors displays and physical configurations are possible.

The memory stores instructions and or data that may be executed by processor . The memory is coupled to the bus for communication with the other components of social network server . The instructions and or data may comprise code for performing any and or all of the techniques described herein. The memory may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other known memory device. In some embodiments the memory also includes a non volatile memory or similar permanent storage device and media including for example a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device known for storing information on a more permanent basis. For clarity instructions and or data stored by the memory or see are described herein as different functional modules or engines where different modules or engines are different instructions and or data stored in the memory or see that cause the described functionality when executed by the processor or see .

The communication unit is coupled to the network by the signal line and coupled to the bus . In some embodiments the communication unit is a network interface device I F which includes ports for wired connectivity. For example the communication unit includes a CAT 5 interface USB interface or SD interface etc. The communication unit links the processor to the network that may in turn be coupled to other processing systems. The communication unit provides other connections to the network and to other entities of the system e.g. the SMS gateway using standard communication protocols including for example TCP IP HTTP HTTPS SMTP SMS MMS XMPP SIP IRC etc. In other embodiments the communication unit includes a transceiver for sending and receiving signals using Wi Fi Bluetooth or cellular communications for wireless communication.

The group messaging engine is software including routines for exchanging messages between a group of users . In some embodiments the group messaging engine is a set of instructions executable by the processor to provide the functionality for exchanging messages between a group of users . In other embodiments the group messaging engine is stored in the memory of the social network server and is accessible and executable by the processor to provide this functionality. In any of these embodiments the group messaging engine may be adapted for cooperation and communication with the processor and the other components of the social network server via the bus . The messages exchanged by the group messaging engine under a default implementation are exchanged using a native messaging protocol. In some embodiments the native messaging protocol is an instant messaging protocol suitable for communication across an IP network e.g. the Internet . For example the native messaging protocol is XMPP SIP IRC HTTP etc.

In the depicted embodiment the group messaging engine comprises an interface module a fallback determination module a mapping module a dispatcher a user settings module and a conversion module . The components and of the group messaging engine and the group messaging engine itself are communicatively coupled to the bus for communication with each other and the other components and of the social network server . The group messaging engine interacts and communicates with the social network software application via the bus . For example the group messaging engine can interact with a credentials module not shown of the social network software application to authenticate users seeking access to the group messaging engine and to provide the group messaging engine access to information and functionality of the social network software application and the social graph . In other embodiments the group messaging engine is stored and operable on a third party server not shown which is coupled by the network for communication and interaction with the social network server the social network software application and the social graph . In these or other embodiments the group messaging engine may access information and utilize the functionality of the social network software application and the social graph via an API.

The interface module is software including routines for receiving request signals via the communication unit parsing message data from the request signals and sending the message data to and receiving information from the fallback determination module the mapping module the dispatcher the user settings module and the conversion module . In some embodiments the interface module is a set of instructions executable by the processor to provide this functionality. In other embodiments the interface module is stored in the memory of the social network server and is accessible and executable by the processor to provide this functionality. In any of these embodiments the interface module may be adapted for cooperation and communication with the processor and other components of the social network server via the bus .

In the depicted embodiment the interface module is coupled to the fallback determination module via the bus to send the parsed message data. For example a user composes a message to a group of recipients using an interface of the group messaging application launched on the user device and sends it by selecting a send button. In response the user device generates and sends a request signal including the message via the mobile network and or network to the communication unit . The interface module receives the request signal from the communication unit parses the data associated with the message from the request signal and sends the message data to the fallback determination module for further processing. In other embodiments the interface module may generate and send response signals confirming the successful receipt of the message data or the successful dispatch of the message included in the message data to the intended recipients by the group messaging engine .

The interface module is coupled to the mapping module the dispatcher the user settings module the conversion module and the other components and of the social network server via the bus to send and receive information. In some embodiments the interface module sends request signals received via the communication unit to the user settings module for further processing. In other embodiments the interface module is coupled to the messaging data store to manipulate i.e. store query update and or delete data using programmatic operations. In some embodiments the interface module stores message data parsed from request signals received from other devices via the network . In other embodiments the interface module receives an archive request from a user device to archive one or more messages stored on the user device . For example if a user desires to back up older messages stored on the user device e.g. SMS messages and messages native to the group messaging application the user can input a command into the group messaging application launched on the user device to have all or some of the messages sent to the social network server for archiving. The user can later input a command to retrieve those messages from the social network server should the messages happen to be deleted from the user device of the user .

The fallback determination module is software including routines for determining the availability of a network data connection for a user device and generating a routing signal based at least in part on the availability of the network data connection. In some embodiments the fallback determination module is a set of instructions executable by the processor to provide this functionality. In other embodiments the fallback determination module is stored in the memory of the social network server and is accessible and executable by the processor to provide this functionality. In any of these embodiments the fallback determination module may be adapted for cooperation and communication with the processor and other components of the social network server via the bus .

The fallback determination module is coupled to the interface to receive message data sent by a user device . The fallback determination module parses the message data for sender and recipient information. For example the fallback determination module parses the sender and recipient information from the metadata of the message data. The sender and recipients identified by the sender information and recipient information form a messaging group. The sender information includes identifying information for a user or user device that sent the message data. For example the sender information includes one or more of a sender s user identifier associated with a social network software application user account a network address of the sender s user device e.g. an IP address port etc. a mobile phone number for the sender s user device information about the computing environment of the user device e.g. operating system type and version and group messaging application type and version etc. The recipient information also includes identifying information for each user device designated to receive the message data. For example the recipient information includes one or more of a recipient s user identifier associated with the recipient s user account for the social network software application a network address of the recipient s user device a mobile phone number for the recipient s user device etc.

The fallback determination module is coupled to the connection server via the network to send a connection query and receive connection information. In some embodiments the connection query generated and sent by the fallback determination module includes a list of recipient identifiers from the recipient information. Using the list of identifiers the connection server determines whether user devices identified by the identifiers are connected to the connection server and generates and sends connection information to the fallback determination module describing whether or not each of the user devices is coupled to the connection server via a network data connection. Additional structure and functionality of the connection server is described above with reference to and below with reference to . The fallback determination module is coupled to the mapping module via the bus to send the connection information and receive mapping data. In some embodiments the mapping data includes a fallback identifier for the recipients identified by the connection information as not being connected to the connection server . The fallback identifier is further discussed below.

The fallback determination module is coupled to the dispatcher via the bus and sends the routing signal to the dispatcher via the bus . In some embodiments the routing signal generated by the fallback determination module includes a dispatch instruction stating which delivery protocol should be used to send the message to each recipient. In some embodiments where a recipient s user device is described by the connection information as not being connected to the connection server the dispatch instruction generated by the fallback determination module advantageously instructs the dispatcher to relay the message to the fallback messaging server for dispatch via a fallback messaging protocol using the fallback data connection. This provides a recipient operating the recipient user device the benefit of still being able to receive the message even though the recipient user device is not connected to the connection server via a network data connection e.g. an Internet connection . In some embodiments where the connection information describes a recipient user device as being coupled to the network via the network data connection and connected to the connection server the dispatch instruction generated by the fallback determination module instructs the dispatcher to dispatch the message via the network data connection using the native messaging protocol. The routing signal can also include the connection information mapping data or any information from the message data including sender and recipient information necessary for the dispatcher to send the message. For example for the fallback recipients i.e. the recipients designated to receive the message via the fallback messaging protocol the routing signal includes mapping data such as the fallback identifier as further described below.

The mapping module is software including routines for mapping the message data being exchanged. In some embodiments the mapping module is a set of instructions executable by the processor to provide the functionality described herein. In other embodiments the mapping module is stored in the memory of the social network server and is accessible and executable by the processor to provide this functionality. In any of these embodiments the mapping module may be adapted for cooperation and communication with the processor and other components of the social network server via the bus .

The mapping module is coupled via the bus to the fallback determination module to receive the connection information and the message data. The mapping module analyzes the connection information assigns a fallback identifier to the fallback recipients i.e. each recipient designated to receive the message via the fallback messaging protocol maps the message data to the group of users exchanging messages using the fallback identifier and generates and provides mapping data including the fallback identifier to the fallback determination module . The mapping module also stores the mapping data including the fallback identifier in the messaging data store for later reference and revision. In some embodiments the fallback identifier is a phone number drawn from a pool of phone numbers which identify the SMS gateway as a telecommunications endpoint on the mobile network . In other embodiments the fallback identifier is an email address drawn from a pool of email addresses assigned to the group messaging engine . In these or other embodiments the fallback identifier assigned by the mapping module may be assigned to one messaging group at a time to avoid conflicts with other messaging groups.

In some embodiments the fallback messaging protocol may require different identifying information for the fallback recipients or the user devices of the fallback recipients then the native messaging protocol does. For example the native messaging protocol may require that each recipient be identified by a user identifier associated with the social network software application which can be mapped to a user device using the connection information from the connection server . In contrast the fallback messaging protocol may require that the fallback recipients be identified with an identifier associated with the fallback messaging protocol such as a mobile phone number or an email address. In some embodiments the identifying information associated with the native messaging protocol may be the same as the identifying information associated with the fallback messaging protocol. For example a user may use the same email address for sending and receiving email as a user identifier for accessing the group messaging application . However in other embodiments the identifiers may differ. In these other embodiments the mapping module is capable of retrieving the alternative identifying information associated with the fallback messaging protocol. For example the mapping module may query the social graph or a user account associated with the social network software application for the alternative identifying information. In another example alternative identifying information is included in the message data and the mapping module parses the alternative identifying information from the message data. While the mapping module is described as being capable of retrieving the alternative identifying information in other embodiments the dispatcher the fallback determination module or any other component of the group messaging server or social network server provide this functionality.

In some embodiments the mapping module associates a messaging thread of the group of users exchanging messages i.e. the messaging group with a unique session identifier. In particular the unique session identifier identifies a message thread associated with the message data being exchanged. For example once an initial message is sent by a user to one or more other users via the group messaging engine a message thread is formed. The message thread is added to when subsequent messages are exchanged between the users in response to the initial message. The messages are identified as belonging to the same message thread by the unique session identifier. In some embodiments the messages dispatched and received via the fallback messaging protocol are associated with the message thread by the mapping module mapping the fallback identifier assigned to the fallback recipients to the unique session identifier associated with the message thread.

In some embodiments the message data received by the fallback determination module represents a reply message sent in response to a previous message dispatched by the dispatcher via the fallback data connection. The fallback determination module can determine whether the reply message was sent via the fallback data connection in a number of ways. In some embodiments the fallback determination module determines the reply message as having been sent via the fallback data connection by providing the sender information from the reply message to the mapping module and the mapping module indicating that the sender information includes a fallback identifier. In other embodiments the fallback determination module determines the message data as having been sent via the fallback determination module from a communications port and or IP address via which the reply message data was received the protocol used to send the reply message data etc.

In some embodiments where the reply message data was sent via the fallback data connection the mapping module uses the sender information provided by the fallback determination module to query the messaging data store for stored mapping data. For example the mapping module queries the messaging data store using a fallback identifier included in the sender information to determine the messaging group and in particular the recipients from the messaging group that the reply message should be dispatched to. The mapping module then provides this information to the fallback determination module and the fallback determination module provides this information to the dispatcher as recipient information as described above and further below. By way of example the group messaging engine determines that a network data connection to a user device is not available so message data is dispatched to the user device in the form of an SMS message via the fallback data connection. In response reply SMS message data is received from the user device via the fallback data connection. The mapping module using the sender s phone number i.e. the fallback identifier provided by the fallback determination module queries the messaging data store for mapping data that maps the fallback identifier to the other member s of the messaging group which in this example is the user who sent the initial message data. The mapping module provides this mapping data to the fallback determination module and the fallback determination module uses the mapping data to determine if a network data connection exists for the user who sent the initial message data and dispatches the reply message data accordingly. Additional structure and functionality of the mapping module is described below with reference to at least .

The dispatcher is software including routines for dispatching the message data via the network data connection or the fallback data connection based in part on the routing signal. In some embodiments the dispatcher is a set of instructions executable by the processor to provide the functionality. In other embodiments the dispatcher is stored in the memory of the social network server and is accessible and executable by the processor to provide the functionality. In any of these embodiments the dispatcher may be adapted for cooperation and communication with the processor and other components of the social network server via the bus . In the depicted embodiment the dispatcher is coupled to the interface module the fallback determination module the mapping module the user settings module the conversion module and the messaging data store to send and receive information via the bus . In some embodiments the dispatcher receives the message data and the routing signal from the fallback determination module . In other embodiments the dispatcher receives the message data from the interface module .

The dispatcher may optionally convert the message data prior to dispatching the message data. In some embodiments responsive to receiving the message data and the routing signal the dispatcher may instruct the conversion module to convert the message data to a format compatible with the protocol being used to send the message data. For example the dispatcher instructs the conversion module to convert the message data to a format compatible with the fallback messaging protocol for the fallback recipients and convert the message data to a format compatible with the native messaging protocol for the recipients designated to receive the message via the native messaging protocol. The dispatcher provides the conversion module with the information necessary to perform the conversion and upon performing the conversion the conversion module provides the formatted message data to the dispatcher for dispatch.

In some embodiments the dispatcher dispatches the message data according to a dispatch instruction included in the routing signal. As previously described with reference to the fallback determination module the dispatch instruction states which delivery protocol should be used to send the message data. In some embodiments the dispatch instruction instructs the dispatcher to dispatch the message data to the fallback recipients via the fallback data connection using the fallback messaging protocol. The dispatcher modifies the message data such as the recipient information and the sender information to correspond with the fallback identifier and the fallback recipient information mapped by the mapping module and sent to the fallback determination module for provision to the dispatcher with the routing signal. The dispatcher is coupled to the fallback messaging server and relays the message data to the fallback messaging server for dispatch to a user device of each of the fallback recipients via the fallback data connection. For example the fallback messaging server is the SMS gateway the email server an IM server etc. In a more detailed example the dispatch instruction included in the routing signal instructs the dispatcher to dispatch the message data using a text messaging protocol e.g. SMS the dispatcher converts the message data into a text message format using the conversion module annotates the sender and recipient information to describe the fallback sender and recipient information i.e. phone numbers mapped by the mapping module and the dispatcher relays the formatted message data to the SMS gateway . The SMS gateway using a text messaging protocol transmits the formatted text message to a user device of each of the fallback recipients via the fallback data connection over the mobile network . In another example the fallback messaging protocol is an email protocol. In this example the dispatcher converts the message data to an email for each of the fallback recipients using the conversion module . The email server then annotates each email with fallback sender and recipient information mapped by the mapping module and dispatches the emails to the email server and the email server delivers the emails to the fallback recipients via the fallback data connection. In some embodiments the email server transmits the emails to the user devices of the fallback recipients real time using a push email protocol. In other embodiments the email server holds the emails until they are retrieved from the email server via an email protocol by an instance of the group messaging application operating on the user device of each of the fallback recipients. In yet another example the dispatch instruction instructs the dispatcher to dispatch the message via an IM protocol and the dispatcher converts the message data addresses it and dispatches it using the IM protocol via the fallback data connection or relays the message data to an IM server not shown for dispatch via the fallback data connection.

In some embodiments where one or more of the recipients of the message data are identified as having a network data connection the dispatch instruction instructs the dispatcher to dispatch the message data to the user device of each of those recipients via the network data connection using a native messaging protocol. Based on the information included in the routing signal the dispatcher modifies the message data such as the recipient information to describe the recipients as being those users identified by the connection information as having a network data connection. In some embodiments if some recipients are being sent the message data via the network data connection and some via the fallback data connection the message data being sent via the network data connection is tagged with information to identify which message thread the message data belongs to. For example a header of the message data is tagged with the unique session identifier or fallback identifier. This advantageously helps to ensure that any messages sent in reply will also be tagged with the same information so they can be mapped to the message thread and any fallback recipients by the mapping module .

The dispatcher is coupled to the messaging data store to store a copy of the message data. In some embodiments the dispatcher stores a copy of the message data in the format in which the message data was dispatched. In other embodiments the dispatcher stores a copy of the message data in the format in which the message data was received by the interface . In yet other embodiments the dispatcher stores a copy of the message data in the format in which it was received and in the format in which it was dispatched. In other embodiments the interface stores a copy of the message data as it is received. It should be understood that the message data is not limited to being stored by the dispatcher and the interface and that the other modules and of the group messaging engine are capable of storing the message data.

The user settings module is software including routines for determining storing and retrieving user configurable settings. In some embodiments the user settings module is a set of instructions executable by the processor to provide this functionality. In other embodiments the user settings module is stored in the memory of the social network server and is accessible and executable by the processor to provide this functionality. In any of these embodiments the user settings module may be adapted for cooperation and communication with the processor and other components of the social network server via the bus . In some embodiments the user settings module is coupled to the interface module to receive the request signals. The user settings module parses the request signals for user settings data and stores the user settings data in the messaging data store . In other embodiments the user settings module is coupled to receive request signals for user settings data from a user device via the interface module . In response the user settings module retrieves the settings data from the messaging data store and generates and sends response signals which include the settings data to the user device via the interface module .

The user settings data instruct the group messaging engine on how to function in various scenarios. For example a user can provide via a user device user settings data to instruct the group messaging engine to default to the fallback messaging protocol for a period of time or until updated settings data are provided to delay dispatch via the fallback messaging protocol until a predetermined amount of time has passed to opt out of receiving messages via the fallback messaging protocol to exempt certain recipients from receiving messages via a fallback messaging protocol and to determine the which protocol to use as the fallback messaging protocol e.g. SMS MMS email etc. etc. However the foregoing examples are not exhaustive of the types of user settings data that can be provided and it should be understood that any functionality of the fallback determination module can be regulated by user settings data provided by a user . In some embodiments the user settings module is coupled to the fallback determination module via the bus to provide one or more user configurable settings and the fallback determination module may generate the routing signal based at least in part on the one or more user configurable settings.

The conversion module is software including routines for converting the message data. The conversion module may convert the message data to a format compatible with a protocol of the fallback data connection if the network data connection is determined to be unavailable by the fallback determination module in cooperation with the connection server . In some embodiments the conversion module receives the message data in a format compatible with the protocol native to the group messaging engine . In other embodiments the conversion module converts the message data to a format compatible with the protocol native to the group messaging engine and receives the message data in a format compatible with the protocol of the fallback data connection. The conversion module is coupled to the dispatcher via the bus to send and receive information. In some embodiments the conversion module receives the message data and a conversion instruction from the dispatcher via the bus . The conversion instruction instructs the conversion module to convert the message data and indicates the protocol that the message data should be converted to or the format the message data should be converted to. The conversion module then instructs the processor via the bus to convert the message data and provide it to the dispatcher . Additional functionality of the conversion module is described above with reference to the dispatcher and below with reference to for example.

The messaging data store is data storage for storing messaging related data. The messaging data store is coupled for communication with the components and of the group messaging engine and the other components and of the social network server via the bus . For example the messaging data store is coupled to the interface module the fallback determination module and the dispatcher to send and receive the message related data information. In some embodiments the messaging data store stores information received generated and sent by the other modules of the group messaging engine . For example the messaging data store stores message data user settings data conversion data mapping data fallback information etc. The messaging data store can also store an archive of a user s message data including text messages group messages instant messages emails etc. For example a user can back up all messages stored in the user s user device to the messaging data store for later retrieval e.g. should the messages be deleted from the user device . In some embodiments the interface module is coupled to the other modules of the group messaging engine so these modules can manipulate i.e. store query update and or delete data using programmatic operations.

In some embodiments the messaging data store is a database management system DBMS operable on the social network server and storable in the memory . For example the database could be a structured query language SQL DBMS. In these embodiments the social network server and in particular the group messaging engine are coupled to the database via the bus to store data in multi dimensional tables comprised of rows and columns and manipulate i.e. insert query update and or delete rows of data using programmatic operations e.g. SQL queries and statements .

The processor comprises an arithmetic logic unit a microprocessor a general purpose controller or some other processor array to perform computations and optionally provide electronic display signals to the display device . The processor communicates with the other components via the bus . Processor processes data signals and may comprise various computing architectures including a complex instruction set computer CISC architecture a reduced instruction set computer RISC architecture or an architecture implementing a combination of instruction sets. Although only a single processor is shown in multiple processors may be included. The user device also includes an operating system executable by the processor .

The memory stores instructions and or data that may be executed by processor . The memory communicates with the other components of user device via bus . The instructions and or data comprise code for performing any and or all of the techniques described herein. The memory may be a dynamic random access memory DRAM device a static random access memory SRAM device flash memory or some other known memory device. In some embodiments the memory also includes a non volatile memory or similar permanent storage device and media including for example a hard disk drive a floppy disk drive a CD ROM device a DVD ROM device a DVD RAM device a DVD RW device a flash memory device or some other mass storage device known for storing information on a more permanent basis. In some embodiments the group messaging application and or the group messaging application is stored in the memory and executable by the processor .

The communication unit includes interfaces for interacting with other devices networks of devices. In some embodiments the communication unit includes transceivers for sending and receiving wireless signals. For example the communication unit includes radio transceivers 4G 3G 2G etc. for communication with the mobile network and radio transceivers for WiFi and Bluetooth connectivity. In the depicted embodiment the communication unit is coupled to the network by the signal line and is coupled to the mobile network via signal lines and or . In these or other embodiments the communication unit includes a network interface device I F which includes ports for wired connectivity. For example the communication unit includes a CAT 5 interface USB interface or SD interface etc. The interfaces of the communication unit provide the network data connection to the network the fallback data connection via the network and other connections to other networks and devices using the protocols discussed above with regard to for example. Additional structure and features of the communication unit are described above with reference to at least these figures.

The SMS module is software including routines for sending and receiving SMS messages to and from a user device . In some embodiments the SMS module is a set of instructions executable by the processor to provide this functionality. In other embodiments the SMS module is stored in the memory of the user device and is accessible and executable by the processor to provide this functionality. In any of these embodiments the SMS module may be adapted for cooperation and communication with the processor and other components of the user device via the bus . In some embodiments the SMS module includes an API that allows other modules of the user device interact with the SMS module . For example the routing module which is communicatively coupled to the SMS module via bus uses the API of the SMS module to dispatch text messages to the SMS gateway . The SMS module may populate fields of an interface generated and displayed by the user interface engine at the instruction of the SMS module based upon the commands received from the routing module via the API. Alternatively the SMS module may send text messages without any further interaction with the user or can display prompts to the user requesting authorization to send the text messages.

The graphics adapter displays images and other information on the display . The graphics adapter may be a separate processing device including a separate processor and memory not shown or may be integrated with the processor and memory . The display represents any device equipped to display electronic images and data as described herein. The display may be any a conventional display device monitor or screen such as an organic light emitting diode OLED display a liquid crystal display LCD . In some embodiments the display is a touch screen display capable of receiving input from one or more fingers of a user . For example the display may be a capacitive touch screen display capable of detecting and interpreting multiple points of contact with the display surface.

The input device is any device for inputting data on the user device . In some embodiments the input device is a touch screen display capable of receiving input from the one or more fingers of the user . The functionality of the input device and the display may be integrated and a user of the user device may interact with the user device by contacting a surface of the display using one or more fingers. For example the user interacts with an emulated i.e. virtual or soft keyboard displayed on the touch screen display by using fingers to contacting the display in the keyboard regions. In other embodiments the input device is a separate peripheral device or combination of devices. For example the input device includes a keyboard e.g. a QWERTY keyboard and a pointing device e.g. a mouse or touchpad . The input device may also include a microphone a web camera or other similar audio or video capture devices.

The group messaging application is software including routines for generating sending and receiving message data. In particular the group messaging application receives input signals from a user generates message data and user settings from the input signals sends message data to and receives message data from the group messaging engine and manages user settings. In some embodiments the group messaging application is a set of instructions executable by the processor to provide this functionality. In other embodiments the group messaging application is stored in the memory of the user device and is accessible aid executable by the processor to provide the functionality. In any of these embodiments the group messaging application may be adapted for cooperation and communication with the processor and the other components of the user device via the bus . In some embodiments the messages generated sent and received by the group messaging application have a format compatible with the protocol native to the group messaging engine or a format compatible with the fallback communication protocol as previously described.

In the depicted embodiment the group messaging application comprises a routing module a messaging module a user interface engine a user settings module and a persistence module . The routing module the messaging module the user interface engine the user settings module and the persistence module are coupled for communication with each other and the other components of the user device via the bus .

The routing module is software including routines for selectively routing messages via the network data connection and the fallback data connection. In particular the routing module routes the messages based on whether a network data connection is available to the user device . In some embodiments the routing module is a set of instructions executable by the processor to provide this functionality. In other embodiments the routing module is stored in the memory of the user device and is accessible and executable by the processor to provide the functionality. In any of these embodiments the routing module may be adapted for cooperation and communication with the processor and other components of the user device via the bus .

The routing module is coupled to the persistence module via the bus to send and receive information. In some embodiments the routing module requests connectivity information indicating whether a network data connection exists from the persistence module . The persistence module responsive to the request generates and sends the connectivity information to the routing module . The routing module uses the connectivity information to determine whether to route messages via the network data connection or the fallback data connection. For example the persistence module sends connectivity information to the routing module indicating that the user device is not coupled to the network via a network data connection e.g. via a WLAN of the network or a WWAN of the mobile network and based on the connectivity information the routing module routes the message via the fallback data connection as an SMS message. If the connectivity information indicates that a network data connection coupling the user device to the network either directly or indirectly the routing module routes the message data to the group messaging engine via the network data connection using a protocol native to the group messaging application and the group messaging engine .

The messaging module is software for receiving generating and storing the message data. In some embodiments the messaging module is a set of instructions executable by the processor to provide this functionality. In other embodiments the messaging module is stored in the memory of the user device and is accessible and executable by the processor to provide the functionality. In any of these embodiments the messaging module may be adapted for cooperation and communication with the processor and other components of the user device via the bus .

In some embodiments the messaging module is coupled to the user interface engine via the bus to receive input signals describing the message input by the user . The messaging module generates message data based on the input signals and sends the message data to the routing module for routing to the social network server . In other embodiments the messaging module is coupled to the communication unit to receive message data from the social network server either via the network data connection or the fallback data connection. The messaging module stores the message data in the memory for later retrieval. For example the user interface engine retrieves the message data stored by the messaging module and generates a main messaging interface displaying current and past message threads.

The user interface engine is software including routines for rendering user interfaces and for receiving user input via the user interfaces. In some embodiments the user interface engine is a set of instructions executable by the processor to provide this functionality. In other embodiments the user interface engine is stored in the memory of the user device and is accessible and executable by the processor to provide this functionality. In any of these embodiments the user interface engine may be adapted for cooperation and communication with the processor and other components of the user device via the bus . The user interface engine is coupled to the input device via the bus to receive input signals from the user . For example a user composes a message using the input device and the user interface engine receives signals describing the composed message and stores the signals in the memory for retrieval by the messaging module . In other embodiments the user interface engine is coupled to the messaging module via the bus to provide the signals directly to the messaging module .

The user interfaces generated by the user interface engine can include but are not limited to a message entry form for composing messages a main messaging interface for viewing sent and received messages e.g. see and a settings dialog e.g. see for inputting modifying and displaying user preferences related to the group messaging application and the group messaging engine . In some embodiments the user interfaces include user interface elements that allow users to interact with the user device and input information and commands such as text entry fields selection boxes drop down menus buttons virtual keyboards and numeric pads etc. The message entry form may include an input field such as a drop down menu for inputting the recipients of the message and a field for defining the body of the message. In selecting recipients the user can for example select from social circles of the user s social graph retrievable from the social graph . The user interface engine generates this drop down menu by querying the social graph of the social network for all of the social circles defined by the user of the user device and populating the drop down menu with the social circles. In some embodiments a user defines social circles for family friends acquaintances work contacts etc. from his or her contacts on the social network. Examples of user interfaces generated for display on the display of the user device by the user interface engine are illustrated in and are further discussed in detail below.

The user settings module is software including routines for storing retrieving and sending user settings related information. In some embodiments the user settings module is a set of instructions executable by the processor to provide the functionality. In other embodiments the user settings module is stored in the memory of the user device and is accessible and executable by the processor to provide the functionality. In any of these embodiments the user settings module may be adapted for cooperation and communication with the processor and other components of the user device via the bus .

In some embodiments the user settings module is coupled to the user interface engine to receive input signals identified by the user interface engine as user settings related information. For example to enter or modify the user s user settings the user selects user interface elements included in a user interface rendered by the user interface engine using the input device . The user interface engine identifies signals received from the input device as user setting related information and sends the signals to the user settings module . The user settings module modifies behavior of the group messaging application based on the user setting related information received and stores the user setting related information for later reference and modification. In some embodiments the user setting module is capable of storing and retrieving data describing the user settings in and from the messaging data store of the social network server the memory of the user device or both. In some embodiments some of the user settings maintained by the user settings module are applicable to the group messaging engine . For example the user can control functionality of the fallback determination module of the group messaging engine by modifying the settings presented in the fallback options interface see . Additional functionality and structure of the user settings module is described below with reference to at least .

The persistence module is software including routines for maintaining a persistent connection with the connection server when the user device is coupled to the network via the network data connection. In some embodiments the persistence module is a set of instructions executable by the processor to provide the functionality. In other embodiments the persistence module is stored in the memory of the user device and is accessible and executable by the processor to provide the functionality. In any of these embodiments the persistence module may be adapted for cooperation and communication with the processor and other components of the user device via the bus .

The persistence module is coupled to the communication unit via the bus . In some embodiments the persistence module receives a connectivity signal from the communication unit indicating whether the communication unit is coupled to the network and or the mobile network . If the connectivity signal indicates that the communication unit is coupled to the network either directly via signal line or indirectly via signal line as previously described the persistence module generates and sends a connection request to the connection server . The connection server receives the request identifies the user device using identifying information provided in the request and maintains a persistent connection with the user device if the user device is properly identified by the connection server . In some embodiments the identifying information provided in the request is a unique identifier associated with a user of the user device or the user device itself. For example the identifying information includes one or more of a mobile network subscriber key a media access control address MAC address an IP address of the user device information identifying the group messaging application and a version level thereof a user identifier for the social network etc.

Referring now to various embodiments of the methods of the present disclosure are described. is a flowchart of a method for fallback messaging according to some embodiments of the present disclosure. The method begins by the interface module receiving message data from a user device for one or more recipients. The method continues by the fallback determination module in cooperation with the connection server determining whether a user device of each of the one or more recipients has a network data connection to the connection server . For each of the recipients determined not to have a network data connection the fallback determination module instructs the dispatcher to dispatch the message data via a fallback data connection using a fallback messaging protocol. For each of the recipients determined to have a network data connection the fallback determination module instructs the dispatcher to dispatch the message data via the network data connection using a protocol native to the group messaging engine . This method is particularly advantageous because allows users to continue to exchange messages via the fallback data connection even if the network data connection is unavailable e.g. unusable intermittent unreliable disconnected etc. .

Next the dispatcher optionally instructs the conversion module to reformat the message data into a SMS compatible format and then based on the routing signal the dispatcher modifies the sender and recipients of message data to correspond with the mapping data included in the routing signal and relays the message data to the SMS gateway . In other embodiments the message data is not reformatted and the essential components of the message data are relayed to the SMS gateway . The method continues by the SMS gateway receiving the message data from the dispatcher and if the message data has not been formatted into an SMS compatible format by the conversion module the SMS gateway formats the message data. The SMS gateway then dispatches the message data to a user device of each of the fallback recipients via the fallback data connection using SMS protocol. Next the dispatcher optionally stores a copy of the message data in the messaging data store of the group messaging engine and the method is then complete and ends.

Referring back to step for each of the users of the messaging group determined to have a network data connection the method continues by the user settings module verifying whether a user configurable override setting e.g. see instructing the group messaging engine to dispatch all message data for that particular user via the fallback data connection regardless of the status of the network data connection. If the override setting is set to override the method completes the steps and optionally as described above and then ends. If the manual override setting is not set to override the method continues by the dispatcher dispatching the message data via the network data connection using a protocol native to the group messaging engine based on the routing instruction generated by and received from the fallback determination module . In other embodiments a user can disable receiving SMS messages via the fallback data connection by setting a user setting e.g. see instructing the method to store the message data in the messaging data store and wait until the user device establishes a network data connection to the connection server to dispatch it. For example should a user wish to avoid SMS messaging charges from being assessed by the operator of the mobile network a user can disable messages from being delivered as SMS messages via the fallback data connection by enabling this setting. The method continues by the dispatcher optionally storing a copy of the message data in the messaging data store of the group messaging engine and then the method is complete and ends.

The method continues by the mapping module determining if sender information included in the message data includes a fallback identifier that is mapped to a particular group of users. In some embodiments inclusion of a fallback identifier in the sender information indicates that the message data received in step was sent from a user device in response to previously receiving a message from the group messaging engine via the fallback data connection during a previous iteration of the method . As described above with reference to step in some embodiments the fallback identifier is a phone number identifying the SMS gateway as the sender of the previous message. The mapping module uses this phone number to identify the other members of the messaging group i.e. the sender and the other recipients of the previous message . Then the mapping module provides this information to the fallback determination module for use when determining the reliability of the network data connection of each of the group members designated to receive the message data as described above. After step or after step as the case may be the method continues by completing steps to as described above with reference to and then ends. As illustrated in the method includes many steps similar to those described above for the method . For convenience and ease of understanding those steps have the same reference numerals and perform the same or similar functionality and their description will not be repeated here.

The method is particularly advantageous because it allows for any reply messages sent via the fallback data connection to be routed back to the SMS gateway and ultimately the group messaging engine and allows for the reply messages to be mapped back to the members of the messaging group by the mapping module . The method also provides the advantage of a more seamless messaging experience for the members of the messaging group because all members of the group can continue to receive the message data being exchanged either via the network data connection or the fallback data connection and the messages being exchanged can continue to be associated with a common messaging thread even though some of the messages may have been sent using the fallback data connection and messaging protocol. Additionally while the above described methods and and advantages are described within the context of SMS messaging these methods and and benefits are also applicable to the other fallback messaging protocols discussed above such as MMS XMS email IM etc.

In some embodiments message fields and each reflect a message of the messaging thread. Rows and depict messages exchanged using the network data connection via the protocol native to group messaging application and group messaging engine . In the depicted embodiment Rows and illustrate messages exchanged via SMS i.e. the fallback messaging protocol using the fallback data connection and are labeled with SMS. Text entry field is a field for inputting the text of the message to be sent to the other members of the messaging group depicted in the horizontal scroll region . In some embodiments upon selecting the text entry field to enter message text the user interface engine renders a virtual keyboard including a send button for display on the display underneath the text entry field . To send a message the user enters message text in the text entry field and selects the send button to send the message data to the other members of the messaging group i.e. the designated recipients . In other embodiments the user inputs and sends the message text using a hardware keyboard included in the user device . In some embodiments message text is entered in reply to a previous message displayed in one of message fields and . In other embodiments message text is entered to discuss a new topic with the other members of the message thread. In some embodiments where the user device is not coupled to the network via the network data connection once a user enters and selects to send the message text the messaging module receives the data describing message from the input device and provides it to the routing module and the routing module relays the message text to the SMS Module of the user device for dispatch to the SMS gateway which is addressable on the mobile network using a fallback identifier included in a previous message received from the group messaging engine e.g. included with message data of field . If no fallback identifier is available for sending the message data to the SMS gateway the group messaging application can send the message data directly to each of the members of the messaging group via SMS by retrieving mobile phone numbers for each of the members from a contact database stored in the memory of the user device and addressing the message data to the phone numbers of the users instead of their group messaging engine user identifiers e.g. social network software application user identifiers . Additionally for any subsequent messages sent by that user the group messaging application can revert back to sending the messages via the network data connection using the native group messaging engine protocol provided the network data connection is available.

A system and methods for fallback messaging have been described. In the above description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the disclosure. It should be understood that the technology described in the various example embodiments can be practiced without these specific details. In other instances structures and devices were shown in block diagram form in order to avoid obscuring the disclosure. For example the present disclosure was described in some embodiments above with reference to user interfaces and particular hardware. However the present disclosure applies to any type of computing device that can receive data and commands and any devices providing services. Moreover the present disclosure was described above primarily in the context of exchanging messages via a social network server . However it should be understood that the present disclosure applies to any type of other message exchange between endpoints.

Reference in the specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of the phrase in one embodiment in various places in the specification are not necessarily all referring to the same embodiment.

Some portions of the detailed descriptions above are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the above discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present disclosure also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards flash memories including USB keys with non volatile memory or any type of media suitable for storing electronic instructions each coupled to a computer system bus.

The disclosure can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the disclosure is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the disclosure can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers.

Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

Finally the algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description above. In addition the present disclosure is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the disclosure as described herein.

It is intended that the scope of the disclosure be limited not by this detailed description but rather by the claims of this application. As will be understood by those familiar with the art the present disclosure may be embodied in other specific forms without departing from the spirit or essential characteristics thereof. Likewise the particular naming and division of the modules routines features attributes methodologies and other aspects are not mandatory or significant and the mechanisms that implement the present disclosure or its features may have different names divisions and or formats. Furthermore it should be understood that the modules routines features attributes methodologies and other aspects of the disclosure can be implemented as software hardware firmware or any combination of the three. Also wherever a component an example of which is a module of the present disclosure is implemented as software the component can be implemented as a standalone program as part of a larger program as a plurality of separate programs as a statically or dynamically linked library as a kernel loadable module as a device driver and or in every and any other way. Additionally the disclosure is in no way limited to implementation in any specific programming language or for any specific operating system or environment. Accordingly the disclosure is intended to be illustrative but not limiting of the scope of the present disclosure which is set forth in the following claims.

