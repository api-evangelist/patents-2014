---

title: User settings management using external sources
abstract: User settings management using external sources is described, including providing a user interface for a user to configure one or more settings that affect functions of an application; the user interface allows the one or more settings to be manipulated by the user, and allows the one or more settings to be configured based on setting data from a third-party entity; receiving input from the user to configure at least a portion of the one or more settings based on the setting data from the entity; identifying that the setting data from the entity includes the at least the portion of the one or more settings; and configuring the at least the portion of the one or more settings based on the setting data from the entity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09122557&OS=09122557&RS=09122557
owner: GOOGLE INC.
number: 09122557
owner_city: Mountain View
owner_country: US
publication_date: 20140310
---
The subject matter discussed herein relates generally to software applications and more particularly to user settings management using external sources.

Most if not all web based applications and device based applications e.g. applications executing on mobile devices and non mobile devices such as computers machines etc. are designed to allow users to configure the applications using parameters or settings. For example an application may use a setting e.g. Auto Connect to Wi Fi Network to allow a user Alice to configure or tell the application whether Alice prefers the application to automatically connect to a Wi Fi network if one is available e.g. by check a box or entering Yes or let Alice manually initiate a connection e.g. by leaving a box unchecked or entering No . The application or another application may use a setting e.g. Anonymous Commenter to allow Alice to indicate her privacy preference such as whether to provide comments to an online platform as Alice or as Anonymous. 

A user typically uses many applications or products on more than one device and many of the applications are connected to the Internet. Many users may not be aware of an application and its functions at a level that allows them to meaningfully configure the settings of the application. Yet users must make decisions to configure settings of many applications that span across multiple domains. These decisions may have both short and long term impacts.

Often there are dozens of different options for user settings in an application or product. Each of these settings changes the way a product works in a unique way. Some users particularly those without experience in software programming may have a very difficult time knowing which options to choose for one or more given settings in order for the settings to have their desired experience. Additionally many of these setting options are added and removed ad hoc e.g. by application updates . As a result users must continuously watch their settings to ensure their desired settings remain in effect.

The subject matter includes methods for user settings management using external sources including providing a user interface for a user to configure one or more settings that affect functions of an application the user interface allows the one or more settings to be manipulated by the user and allows the one or more settings to be configured based on setting data from a third party entity receiving input from the user to configure at least a portion of the one or more settings based on the setting data from the entity identifying that the setting data from the entity includes the at least the portion of the one or more settings and configuring the at least the portion of the one or more settings based on the setting data from the entity.

The methods are implemented using one or more computing devices and or systems. The methods may be stored in computer readable media.

The subject matter described herein is taught by way of example implementations. Various details have been omitted for the sake of clarity and to avoid obscuring the subject matter. The examples shown below are directed to structures and functions for implementing user settings management using external sources.

An application or app can be any software executing computer readable instructions on a device device based application or an online product or service provided from a system or server e.g. an app server or web server and accessed using a device. An application or app may also be referred to as a product or service . The underlying support for an application is hardware which includes at least one processor of any kind memory and or storage e.g. non transitory computer readable medium.

A setting using application can be configured manually by users. In addition to and or in place of manual configuration a SUA can be configured using a third party service and or data. Environment may include any number of third party entities that provide setting services and or data e.g. setting providers .

As used herein a third party or third party entity refers to a person organization company collectively referred to as entity that is not the user of a SUA and not the provider of the SUA. For example if setting provider A also provides SUA A but does not provide SUA B setting provider A is considered a third party with respect to SUA B . Setting provider A is considered a second party but not a third party with respect to SUA A .

In environment a user a first party of SUA B may configure some or all settings of SUA B the provider of the SUA B being a second party using service and or data provided by a setting provider a third party or third party entity .

Each user may use one or more settings to configure or customize the application for the user. For example users Alice and Bob may be users of SUA on the same device or a website. Alice may use settings to configure the functions and or operations of SUA such as configuring the appearance of SUA e.g. skin of an application how SUA notifies Alice of the occurrence of an event or condition e.g. by playing a sound or popping up a message how long to store usage data and or history etc. Alice may also use settings to set the parameters of her privacy preferences. These settings may be referred to as privacy settings.

A privacy setting is any setting that is relating to or affecting Alice as a user. Some examples of privacy settings which are not limited to the examples discussed herein include settings that allow users to seclude themselves from other users control their exposure to online communities or environments control their information about themselves control what information the they want to receive and or what information the they want to share or send out control who can contact them see their presence send them information and or share information with them.

According to an example implementation Bob may use settings to configure SUA to customize the application according to Bob s preferences. A user e.g. Alice or Bob may have an account which identifies the user. When SUA detects or identifies which user is using the application settings of that user are used to customize the application according to the user s preferences.

Some or all of the settings may be configured using an external source such as a setting provider that may be a third party entity. For example as shown in Alice may be provided a user interface with an Upload Settings option to identify an external source and upload settings provided by the external source. Upload Settings may provide a list of external sources not shown or provide an input box for Alice to enter the external source e.g. a Universal Resource Locator URL of an external source . The external source may provide setting data or information used by SUA to automatically configure its settings based on the setting data. For example the setting data from an external source e.g. in Extensible Markup Language XML format may identify which setting is set to which value parameter or option. which are discussed in greater detail below show examples of setting data.

Continuing to refer to after identifying an external source or uploading setting data from an external source the external source may be kept as a history or for future reference such as external sources and . A timestamp of date may be presented to show when an external source was last uploaded updated or used. SUA may include an option for Alice to use SUA s default settings. Alice may select for example to configures her privacy settings using setting data provided by external source e.g. version 2.0 of privacy setting data from setting provider EFG . Alice s selection may be indicated for example by showing a checkmark to near the selected source. Alice s privacy settings may be configured by for example SUA copying the setting data from external source to the privacy settings of SUA .

A marketplace allows for users and organizations to import and export their settings e.g. as setting data . For example a marketplace enables organizations or users trusted by various groups of individuals to upload their suggested setting data e.g. as setting files or configuration files . These trusted organizations or users as setting providers may provide or upload setting data to one or more marketplaces . A marketplace helps users to rely on the expertise of organizations and or user they trust for the configuration of their application settings such as privacy settings.

In some example implementations a marketplace allows for users as setting commentators to review settings or configurations in the marketplace and provide comments and or grades for those settings or configurations. Setting commentators may provide comments and or any feedback to setting configurations or data provided through the marketplace. In some implementations commentators may rate or grade setting data. A commentator may be any user or organization.

In some example implementations a commentator may choose to hide his or her identity. In other implementations a commentator cannot hide his or her identity to ensure that the comment feedback rating etc. is transparent.

Users of SUAs may connect to one or more marketplaces to select setting data from one or more setting providers taking into consideration the comments and rating provided by the commentators . For example Alice may select privacy setting data provided by an organization known for protecting user privacy and or having received good rating and comments from commentators . Setting data may be downloaded to a SUA or a SUA may subscribe to setting data as described below.

If the user chooses the Subscribe to Settings option the user may select one of the external sources and available in SUA to use to configure some or all of the settings of SUA . The external sources and may have been previously identified selected subscribed to or download from by the user e.g. Alice or another user e.g. Bob of SUA .

When a user subscribes to a setting provider the user may subscribe to all the setting data provided by the setting provider or one or more portions of the setting data provided by the setting provider. A setting provider may provide different versions or flavors of setting data such as a safe browsing version a high performance version a high privacy protection version a public library version etc. Versions or flavors may be indicate in any manner such as using numbers e.g. v1.2 v2.0 v5.5 300 etc. . The user may subscribe to one or more versions e.g. different versions for different sections or groups of application settings .

When a user subscribes to a setting provider the user subscribes to setting data or one or more versions of setting data for some or all the settings of an application. In an effect the user is telling or configuring the application to use the subscribed setting data to set the associated settings. For example Alice subscribes to the setting data of setting provider to configure the privacy settings of application . After the subscription application will automatically use the portion of the setting data of setting provider that are for privacy settings e.g. the portion is identifiable in some way such as using setting identifiers to configure the privacy settings of the application e.g. copy the setting options of the portion of the setting data to the privacy settings of application .

In some example implementations application may periodically or on demand e.g. triggered by a user to check a setting provider to determine whether the subscribed to setting data has been changed or updated. If so application may automatically update its associated settings accordingly based on the configuration selected by the user as described above. A setting provider or a marketplace may also be implemented to notify subscribers of its setting data when updated setting data is available e.g. the provider or marketplace may keep a record of it subscribers .

The user is not limited to use the external sources and available in SUA . The user may for example visited another setting provider to down its setting data or visit one of the available setting providers e.g. setting provider to download its latest or updated setting data. The user may identify another setting provider and or retrieve its setting data from a marketplace e.g. marketplace .

As shown and described many implementations are possible. The example implementations are 1 allowing a user to manually set or update some or all settings any portion of the settings of an application 2 allowing a user to configure any portion of the settings an application once using setting data from one or more setting providers and the user may repeat this process any number of times with any setting providers 3 allowing a user to configure any portion of the settings of an application by subscribing to the setting data of one or more setting providers the user may be given an option e.g. in the form of a user interface widget to indicate that the user wants to be notified when updated setting data is available and or an option e.g. in the form of a user interface widget to indicate that the user confirm or consent to the update after which application updates the associated settings using the updated setting data and 4 same as example 3 which is allowing a user to configure any portion of the settings of an application by subscribing to the setting data of one or more setting providers however an option e.g. in the form of a user interface widget allows the user to indicate that whenever updated setting data is available and detected automatically update the associated setting in application without notifying the user and without prompting a confirmation or consent from the user. Another variation of example 4 is to just notify the user but without prompting a confirmation or consent from the user. Implementations are not limited to the examples shown and described and one skilled in the art would appreciate other possible implementations. The example implementations may even be configurable or selectable by using settings e.g. settings that can only be set manually by a user or an administrator of application .

Settings of an application may be mapped to zero one or more sources. Different sections of settings or different settings in a section may be mapped to different sources. Mapping one or more settings mapped settings to a source mapped source means using the mapped source to configure the mapped settings. In the example of UI each section of settings may be mapped to a source. For example section may be mapped to a source selectable by the user. Settings in sections and may be mapped to sources and respectively each is selectable by the user.

If the user selects the Manage Myself option such as for source the user is the source i.e. the user manually sets the settings in section by in this case placing checkboxes on selected settings . For the settings in section the user may select the Copy from option and identify a setting provider 5.ABC as the source from which setting data is copy to the settings in the section. An example of setting data is shown in . For illustration sections and show that the user may elect to configure the settings in these sections by subscription e.g. using the two subscription models described above . The user may select the same setting provider or different setting providers to subscribe to e.g. Larry and EFG for sections and respectively . An example of setting data from setting provider Larry is shown in .

In some implementations process may be implemented with different fewer or more blocks. Process may be implemented as computer executable instructions which can be stored on a medium loaded onto one or more processors of one or more computing devices and executed as a computer implemented method.

An example of one or more devices may be computing device described below in . Devices may include but are not limited to a computer e.g. a laptop computing device a mobile device e.g. smartphone or tablet a television a device associated with a vehicle a server computer computing devices storage devices and .

In some implementations devices may be considered user devices e.g. devices used by users to run applications or SUAs . Devices may be devices associated with service providers e.g. used by service providers to provide services and or data such as setting data .

For example a user e.g. Alice may use a SUA to access view and or share content or a webpage using user device or . Alice may configure settings of the SUA using setting data provided by setting providers and or marketplace provider supported by devices .

Computing device can be communicatively coupled to input user interface and output device interface . Either one or both of input user interface and output device interface can be a wired or wireless interface and can be detachable. Input user interface may include any device component sensor or interface physical or virtual that can be used to provide input e.g. buttons touch screen interface keyboard a pointing cursor control microphone camera braille motion sensor optical reader and or the like . Output device interface may include a display television monitor printer speaker braille or the like. In some implementations input user interface and output device interface can be embedded with or physically coupled to the computing device . In other example implementations other computing devices may function as or provide the functions of input user interface and output device interface for a computing device .

Examples of computing device may include but are not limited to highly mobile devices e.g. smartphones devices in vehicles and other machines devices carried by humans and animals and the like mobile devices e.g. tablets notebooks laptops personal computers portable televisions radios and the like and devices not designed for mobility e.g. desktop computers other computers information kiosks televisions with one or more processors embedded therein and or coupled thereto radios and the like .

Computing device can be communicatively coupled e.g. via I O interface to external storage and network for communicating with any number of networked components devices and systems including one or more computing devices of the same or different configuration. Computing device or any connected computing device can be functioning as providing services of or referred to as a server client thin server general machine special purpose machine or another label.

I O interface can include but is not limited to wired and or wireless interfaces using any communication or I O protocols or standards e.g. Ethernet 802.11x Universal System Bus WiMax modem a cellular network protocol and the like for communicating information to and or from at least all the connected components devices and network in computing environment . Network can be any network or combination of networks e.g. the Internet local area network wide area network a telephonic network a cellular network satellite network and the like .

Computing device can use and or communicate using computer usable or computer readable media including transitory media and non transitory media. Transitory media include transmission media e.g. metal cables fiber optics signals carrier waves and the like. Non transitory media include magnetic media e.g. disks and tapes optical media e.g. CD ROM digital video disks Blu ray disks solid state media e.g. RAM ROM flash memory solid state storage and other non volatile storage or memory.

Computing device can be used to implement techniques methods applications processes or computer executable instructions in some computing environments. Computer executable instructions can be retrieved from transitory media and stored on and retrieved from non transitory media. The executable instructions can originate from one or more of any programming scripting and machine languages e.g. C C C Java Visual Basic Python Perl JavaScript and others .

Processor s can execute under any operating system OS not shown in a native or virtual environment. One or more applications can be deployed that include logic unit application programming interface API unit input unit output unit setting manager source manager setting UI and inter unit communication mechanism for the different units to communicate with each other with the OS and with other applications not shown . For example setting manager source manager and setting UI along with other units may implement one or more processes and or features shown in . The described units and elements can be varied in design function configuration or implementation and are not limited to the descriptions provided.

In some implementations when information or an execution instruction is received by API unit it may be communicated to one or more other units e.g. logic unit input unit output unit setting manager source manager and setting UI . For example when a user of an application e.g. Alice wants to configure some settings of the application e.g. privacy settings setting UI may present a UI to assist the user e.g. a UI as shown in A B A or a different one . After input unit has detected Alice s input input unit may use API unit to communicate the user input to setting manager . setting manager may via API unit interact with the source manager identify a setting provider and or retrieve setting data from a setting provider based on Alice s input. setting manager may then be called to configure settings based on the setting data from one or more sources. The configuration is reflected or presented to Alice by setting UI .

In some instances logic unit may be configured to control the information flow among the units and direct the services provided by API unit input unit output unit setting manager source manager and setting UI in some implementations described above. For example the flow of one or more processes or implementations may be controlled by logic unit alone or in conjunction with API unit .

In situations in which the systems discussed here collect personal information about users or may make use of personal information the users may be provided with an opportunity to control whether programs or features collect user information e.g. information about a user s social network social actions or activities profession a user s preferences or a user s current location or to control whether and or how to receive content from the content server that may be more relevant to the user. In addition certain data may be treated in one or more ways before it is stored or used so that personally identifiable information is removed. For example a user s identity may be treated so that no personally identifiable information can be determined for the user or a user s geographic location may be generalized where location information is obtained such as to a city ZIP code or state level so that a particular location of a user cannot be determined. Thus the user may have control over how information is collected about the user and used by a content server.

Although a few example implementations have been shown and described these example implementations are provided to convey the subject matter described herein to people who are familiar with this field. It should be understood that the subject matter described herein may be implemented in various forms without being limited to the described example implementations. The subject matter described herein can be practiced without those specifically defined or described matters or with other or different elements or matters not described. It will be appreciated by those familiar with this field that changes may be made in these example implementations without departing from the subject matter described herein as defined in the appended claims and their equivalents.

