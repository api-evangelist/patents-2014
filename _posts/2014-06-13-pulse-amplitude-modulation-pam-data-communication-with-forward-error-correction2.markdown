---

title: Pulse amplitude modulation (PAM) data communication with forward error correction
abstract: The present invention is directed to data communication system and methods. More specifically, embodiments of the present invention provide an apparatus that receives data from multiple lanes, which are then synchronized for transcoding and encoding. A pseudo random bit sequence checker may be coupled to each of the plurality of lanes, which is configured to a first clock signal A. Additionally, an apparatus may include a plurality of skew compensator modules. Each of the skew compensator modules may be coupled to at least one of the plurality of lanes. The skew-compensator modules are configured to synchronize data from the plurality of lanes. The apparatus additionally includes a plurality of de-skew FIFO modules. Each of the de-skew compensator modules may be coupled to at least one of the plurality of skew compensator modules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09564990&OS=09564990&RS=09564990
owner: INPHI CORPORATION
number: 09564990
owner_city: Santa Clara
owner_country: US
publication_date: 20140613
---
This patent application claims priority to U.S. Provisional Patent Application No. 61 885 985 filed 2 Oct. 2013 entitled PAM DATA COMMUNICATION WITH FORWARD ERROR CORRECTION which is incorporated by reference herein for all purposes.

This patent application is related to U.S. patent application Ser. No. 13 791 201 filed 8 Mar. 2013 titled OPTICAL COMMUNICATION INTERFACE UTILIZING CODED PULSE AMPLITUDE MODULATION and now granted as U.S. Pat. No. 9 020 346 which claims priority from U.S. Provisional Patent Application No. 61 714 543 filed 16 Oct. 2012 titled 100G PA CODED MODULATION and U.S. Provisional Patent Application No. 61 699 724 titled ADAPTIVE ECC FOR FLASH MEMORY all of which are incorporated by reference herein for all purposes.

Over the last few decades the use of communication networks exploded. In the early days Internet popular applications were limited to emails bulletin board and mostly informational and text based web page surfing and the amount of data transferred was usually relatively small. Today Internet and mobile applications demand a huge amount of bandwidth for transferring photo video music and other multimedia files. For example a social network like Facebook processes more than 500 TB of data daily. With such high demands on data and data transfer existing data communication systems need to be improved to address these needs.

Over the past there have been many types of communication systems and methods. Unfortunately they have been inadequate for various applications. Therefore improved communication systems and methods are desired.

The present invention is directed to data communication systems and methods. More specifically embodiments of the present invention provide an apparatus that receives data from multiple lanes which are then synchronized for transcoding and encoding. There are other embodiments as well.

According to an embodiment the present invention provides an apparatus for encoding and decoding 25 Gigabit 25G 40 Gigabit 40G 50 Gigabit 50G or 100 Gigabit 100G signals in a communication network. The apparatus includes a plurality of lanes configured for 25G 40G or 100G. The apparatus includes a pseudo random bit sequence checker coupled to each of the plurality of lanes which is configured to a first clock signal A. Additionally the apparatus includes a plurality of skew compensator modules. Each of the skew compensator modules is coupled to at least one of the plurality of lanes. The skew compensator modules are configured to synchronize data from the plurality of lanes. The apparatus additionally includes a plurality of de skew FIFO modules. Each of the de skew compensator modules is coupled to at least one of the plurality of skew compensator modules.

A first bus is coupled to an output of each of the de skew compensator modules. A clock rate converter device is coupled to the output of first bus and is configured to a second clock signal B. A second bus coupled to the output of the clock rate converter module. According to an embodiment the operation of the de skew compensator modules and the de skew FIFO modules are controlled by a control module. For example the control modules comprises state machines for the de skew compensator modules and the de skew FIFO modules.

The apparatus additionally includes a transcoder module coupled to an output of the second bus and is configured to a third clock rate C. A third bus is coupled to an output of the transcoder module. The apparatus includes a forward error correction encoder module coupled to an output of the third bus and is configured to the third clock signal C. A plurality of bus lanes is coupled to an output of the FEC encoder module. A pre coder module is coupled to the plurality of bus lanes from the FEC encoder module. A plurality of gear box modules is coupled to the plurality of bus lanes. Each of the plurality of gear box modules is coupled to a pattern generator module. A first MUX device is coupled to a first output of a first gear box module out of a plurality of gear box modules. A second MUX device is coupled to a second output of the second gear box module out of the plurality of gear box modules. A first gray mapping PAM encoding module is coupled to an output of the first MUX device. A second gray mapping PAM encoding module is coupled to an output of the second MUX device.

The present invention is directed to data communication system and methods. More specifically embodiments of the present invention provide an apparatus that receives date from multiple lanes which are then synchronized for transcoding and encoding. There are other embodiments as well.

The following description is presented to enable one of ordinary skill in the art to make and use the invention and to incorporate it in the context of particular applications. Various modifications as well as a variety of uses in different applications will be readily apparent to those skilled in the art and the general principles defined herein may be applied to a wide range of embodiments. Thus the present invention is not intended to be limited to the embodiments presented but is to be accorded the widest scope consistent with the principles and novel features disclosed herein.

In the following detailed description numerous specific details are set forth in order to provide a more thorough understanding of the present invention. However it will be apparent to one skilled in the art that the present invention may be practiced without necessarily being limited to these specific details. In other instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring the present invention.

The reader s attention is directed to all papers and documents which are filed concurrently with this specification and which are open to public inspection with this specification and the contents of all such papers and documents are incorporated herein by reference. All the features disclosed in this specification including any accompanying claims abstract and drawings may be replaced by alternative features serving the same equivalent or similar purpose unless expressly stated otherwise. Thus unless expressly stated otherwise each feature disclosed is one example only of a generic series of equivalent or similar features.

Furthermore any element in a claim that does not explicitly state means for performing a specified function or step for performing a specific function is not to be interpreted as a means or step clause as specified in 35 U.S.C. Section 112 Paragraph 6. In particular the use of step of or act of in the Claims herein is not intended to invoke the provisions of 35 U.S.C. 112 Paragraph 6.

Please note if used the labels left right front back top bottom forward reverse clockwise and counter clockwise have been used for convenience purposes only and are not intended to imply any particular fixed direction. Instead they are used to reflect relative locations and or directions between various portions of an object.

In various embodiments the present invention provides a system for data communication at high speed. For example the system can include a 40G 100G PAM Tx device which is configured as a transmit IP. In various embodiments the device is implemented with a CAUI Rx e.g. receiving communication interface on the host side and Mach Zehnder Driver on the line side 40G 100G PAM systems according to embodiments of the present invention provide a transmit solution that addresses both 40G and 100G rates for optical communication applications. In some specific embodiments 40G PAM4 for SMF cabling 100G PAM4 for SMF cabling and other types of applications are supported.

The communication apparatus is configured to among other things encoding and decoding 40G 50G and or 100 G signals in a communication network. The communication device has a plurality of input lines e.g. including input line for receiving data which are to be processed. For example the incoming data as shown can be 16b 32b or 40b wide and they are processed by the virtual lane lock modules that perform BIP check. In certain embodiments the input lines as shown can have different formats. For example the lines are configured for 25G 40G and or 100G. It is to be understood that other bandwidths and formats are possible as well.

The pseudo random bit sequence PRBS checker is coupled to each of the plurality of lanes. The PRBS checker is configured to use a first clock signal A as shown. For example the PRBS checker is configured to check the following test patterns PRBS 9 7 11 13 15 23 and 31. In various embodiments the PRBS checker supports Auto PRBS lock that allows for detecting reception of any supported PRBS.

Since data coming in from the input lines can have different data rates skew compensation is provided to achieve block synchronization. For example skew compensation can be achieved by a plurality of skew compensator modules or virtual lane locks that perform BIP check. The virtual lane locks e.g. including virtual lane lock provide protocol locking which is used to achieve block synchronization block locking and virtual lane lock and to write the code word to the alignment and deskew FIFO for the following types of frame. For example for 40GBase R that uses 64b 66b encoding four block synchronization modules are provided. Other considerations are possible such as 4 10G or 2 20G. For 100GBase R that also uses 64b 66b encoding twenty block synchronization modules are used. For example various implementations may support one of the five modes 4 10Ge 2 20Ge 100Ge OTL3.4 or OTL4.4 at a time and the mode is configurable via MDIO.

In the 40G or 100G Ethernet mode the Block Lock FSM looks for 64 consecutive sync headers to declare a block lock. For example a valid sync header is either B10 or b01. Once block lock is achieved it takes a count of 65 invalid sync headers in a 1024 sync window to declare a loss of block lock. To reduce switching power a configurable mode is provided where the search of valid sync headers is disabled once in the lock state and enabled once an invalid sync header is observed.

For used in communication system the block lock device complies with various communication standards. In an implementation the block lock state machine adheres to Clause 82 of IEEE 802.3 FIG. 82 10 of IEEE 802.3 2012. For example the receive clocks rx clk 3 0 from all lines needs to be frequency locked with transmit clock clk b and there cannot be a ppm offset between them. The internals of the Block Lock FSM Virtual Lane Lock FSM and Frame Alignment Signal Lock used by OTL3.4 and OTL4.4 are shown in . is a simplified block diagram illustrating block locking mechanism according to embodiments of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. For example the block locking mechanism in corresponds to lock block in . Incoming data rx data is coupled to mux selectors e.g. mux mux etc. which are coupled to block as shown. further illustrates a plurality of flip flops a plurality of multiplexers block circuits and and an XOR gate . The operation of the block locking mechanism is illustrated in . is a simplified flow diagram illustrating operation of block locking operation according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. For example various steps may be added removed repeated rearranged modified and or overlapped. Functional blocks in are listed in Table 1 below 

In addition to performing block lock virtual lane lock can also be performed. More specifically once block lock is achieved the virtual lane lock FSM begins obtaining alignment marker lock to align data signal received from the four input lanes. In a specific implementation the alignment marker is configured to be detected every 16383 code words 66b on each Virtual Lane. Writing operation is performed to Deskew FIFO e.g. block in for each virtual lane starting with second marker that matches the previous marker. For example The Alignment Marker Virtual Lane Lock state machine as implemented uses the values from Table 82 2 from the 100GBASE R Alignment marker encoding or Table 82 3 from the 40GBASE R alignment marker encoding. is simplified diagram illustrating a virtual lane lock mechanism according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. The virtual lane lock FSM is shown .

Now referring back to . As explained above once the lanes are synchronized de skewing is performed. For example de skewing is performed by a plurality of de skewing FIFO modules e.g. block . The deskew FIFO modules are needed to account for the skew and skew variations across the physical lanes in 40G mode and virtual and physical lanes in 100G mode. Additionally the FIFO accounts for the phase differences between the Rx clock from CAUL RX and Tx clock. For example the de skew FIFO modules are implemented in accordance to communication standard s such as the IEEE 802.3ba 2012 standard where the maximum skew and skew variation from Table 80 4 Summary of skew constraints and Table 80 5 Summary of skew variation constraints at the Tx PMD interface is described under Table 3 below 

In a 4 10G mode each lane has an 8 deep 66b wide FIFO. In a 2 20G mode given only two lanes each lane will have 8 deep 66b wide FIFO. In a 4 25G mode each lane will have 5 6 deep 66b wide FIFO. Combining the FIFO s for the above modes of the 5 virtual lanes VL0 and VL1 will have 8 deep while VL2 VL3 and VL4 will have 6 deep each.

The wr addr starts incrementing once both the block lock and virtual lane lock are true. The rd addr increments is controlled through the de skew state machine and is common to all the FIFO s lanes. The first code word from all FIFO s is the Alignment Marker.

For the alignment and de skew functions to work they are by one or more control module e.g. control module shown in . The alignment Mux in block re orders the Virtual Lines from deskew FIFO s to be forwarded sequentially to the transcoder module . For example after all Virtual Lines are locked the Alignment Mux re orders virtual lines from 0 to 19. The virtual lane ID s are used to re order VL s from arbitrary Tx slots into correct VL order. is a simplified block diagram illustrating an alignment Mux according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. Module provides deskew control align mux control BER monitor and BIP checking. Module receives vl lock and vl ld as input. Outputs include deskew rstn rd addr all block block lock hi ber ber count bip count lane map vls lock cw valid and am valid as shown. further illustrates a plurality of flip flops a plurality of multiplexers one or more multiplexers and a block circuit .

For 4 10G configuration only one virtual line from each channel physical line is staged every four clock cycles. All four code words from all channels are available to the transcode module at the same time. For 2 20G configuration the first two channels have two virtual lanes available from each channel to be forwarded to the transcode module. The alignment mux stages all four virtual lanes at the same time. All four code words are available at the same time for transcode module which is the same as 4 10G.

For 4 25G configuration the Alignment Mux forwards four code words at a time from the deskew FIFO s to the Transcode module. The Alignment Mux forwards all 20 Virtual Lanes to the Transcode module after five cycles. The transcode module processes all four code words every cycle.

As a part of the control module the de skew control provides a de skew state machine that is triggered once the alignment lock is achieved on all lanes. It remains in the de skew done state until either a loss of alignment lock or re acquire lock is triggered. is a simplified flow diagram illustrating the de skew state machine. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. As an example the de skew states are provided below in Table 4 

The control module further comprises a BER monitor as shown. The BER Monitor monitors the aggregated signal from all virtual lines. In an embodiment the high BER is flagged when 97 invalid 66b sync header are detected within 500 us xus timer for 100G or 1.25 ms xus timer for 40G. The high BER flag is cleared when there are less than 97 invalid headers within specified time. is a simplified flow diagram illustrating the BER operation. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications.

Now referring back to . After alignment is performed the received data are transcoded by transcoder module . is a simplified block diagram illustrating a transcoder according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. The transcoder module in performs the 64 66 to 256 257b conversion in both 40G PAM4 and 100G PAM8 applications. The module takes in 264b input every cycle for 100G and it takes 264b input every four cycles for 40G mode. The module concatenates four consecutive 66b words to form a single 264b word to be transcoded in the 40G mode. For example transcoder in includes among other features a mode selector that receives an rx mode input. The data align data is processed by transcode bock and then scramble block . further illustrates a plurality of flip flops and a plurality of multiplexers .

In order to describe the transcoding the 264b word is split into four 66b words marked as align data 3 0 65 0 . The rules for transcoding are described as follows.

The 257b tx xcoded data is then scrambled according to the following equation. The alignment marker code word bypasses the scrambling stage.

In the 40G mode the 257b data is fed to the BCH Encoder module in 4 clocks as 65b data and 1b valid and will follow these rules.

In the 100G mode the entire 257b data is fed to the BCH Encoder module and so the data rate after transcoding is given by the following equation 

In various embodiments a PAM 4 BCH encoder is used. The design uses a n 1440 k 1285 t 14 BCH Encoder and a GF 2 field. This code uses 1 dummy bit to make up for 1440 bits after 154b of parity is added to the incoming message. The selected code is a 9 overhead code as given by the following equation.

The transcoder additionally provides alignment marker mapping. For example the transcoder outputs the 257b as 1 cycle of 128b followed by 1 cycle of 129b and this repeats. In the 100G PAM4 mode the Alignment Marker mapping function operates on twenty 66b aligned and reordered alignment markers. Of the 66b the 2b synchronization header is stripped and the remaining 64b are mapped as shown in . Five padding bits are added such that 1 padding bit is added after every four AM markers. This equates to 64 20 5 1285 which is five blocks of 257b.

Because of the dual lambda transmitter and subsequently receiving 2 lanes of 50G PAM4 the transmit data needs to ensure that a 64b AM marker is not split between the two lanes. This helps achieve synchronization and de skew of the data across the two lanes. Also this implies that the data leaving the gearbox is two sets of data each N bits wide. For example N is determined based on the implementation. In various implementations the alignment marker mapping of the twenty aligned and reordered alignment markers follow the mapping as shown in .

In the 40G PAM4 mode the alignment markers includes four 66b aligned markers and is treated as all control blocks by the transcoder. The transcoder compresses the four 66b alignment marker into one 257b block as shown in . This is a slight variation to the IEEE 802.3bj D2.0 specification. The variation is to keep the 64b Alignment marker intact. In contrast certain markers according to the IEEE 802.3bj D2.0 are discarded.

In the 40G PAM4 mode the alignment marker mapping is relatively straight forward and all four alignment markers appear on lane 0 as shown in . The padding bit P0 appears on the 129bit.

According to various implementations the alignment markers appear once every 16384 20 66 bit blocks in 100G Mode and 16384 4 66 bit blocks in 40G Mode. Four of the 66b block goes through a 257 256 Transcode. In the 100G Mode the resulting bits are 16384 20 64 257 256 which is equivalent to 16384 5 257 as shown in . This equates to 16384 BCH code words with each code word of 1285 bits.

In case of 40G Mode the resulting bits are 16384 4 64 257 256 which is equivalent to 16384 257. This equates to 3276.8 BCH code words with each code word of 1285 bits which leaves with residual bits to be transmitted after the next alignment marker. There will be four cycles with residual bits and every 5cycle the code words will line up with no residual bits. The no of residual bits are 257 514 771 and 1028 respectively for the 1to 4cycle. This is needed to determine where the boundary of the BCH code words resides on the receiving side. shows the residual bits of the code word along with Alignment Markers.

Now referring back to . The data from the encoder is provided to the gearbox and . The gearbox is required to translate the 1440b code words streaming out of the FEC Encoder into two streams of 80b for the 100G Mode and one stream of 64b for the 40G mode. As an example the baud rates for the two modes is given by the following equations 

For example in the 100G mode the 1440b is split across two lanes each having 720b and in the 40G mode the entire 1440b is transmitted on a single lane. The stream of data out of the FEC Encoder follows the sequence of 128 129 128 129 128 78 or 129 128 129 128 129 77 split into two lanes for the 100G mode and 128 129 128 129 128 129 128 129 128 129 78 77 on a single lane for the 40G mode. To keep the alignment markers intact on a lane it would make sense to have two gearboxes one for each lane in the 100G mode and enable one in the 40G mode while disabling the second.

The Transcoder will outputs alternating cycles of 128b and 129b with am tx 0 1 lining up to be 128b as the start of Alignment Marker. The FEC Encoder will output alternating cycles of 128b and 129b for 4 cycles and on the 5cycle the FEC Encoder outputs 206b which would be 128b 78b for Gearbox 0 and 129b 77b for Gearbox 1.

For each Gearbox FEC encoded data is written in 720b over 5 cycles while the read at 80b would take 9 cycles in the 100G mode. In the 40G mode using Gearbox 0 only data is written in 1440b over 10 cycles while the read at 80b would take 18 cycles. So looking at both modes of operation the ratio of write to read is 5 9. The write operation on average is 144b 720 5 or 1440 10 on each cycle.

The gearbox is coupled to the pattern generator . is a simplified diagram illustrating a pattern generator according to an embodiment of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. Selector receives input from PRBS generator square wave and cust pattern and p4enc tx data. Output of selector is connected to error set mask logic . Selector selects between the output of selector and inverted output of selector from the invertor . Output of the selector is connected to the selector which provides quelch function. Output of selector is connected to selector which provides swap function. further illustrates a flip flop. Among other things a pattern generator module performs the following functions 

Among other things the PRBS generation mode of the pattern generator supports the transmission of the following PRBS patterns and its inverse.

In various embodiments the PRBS enable selection and the inverse functions are user configurable. The output width is designed to be a parameterized one depending on the mode of the chip is running

Custom Pattern Generation function of the pattern generator supports the transmission of a Custom Pattern as configured in 33 64b Memory. For example the pattern is written via MDIO as 132 locations of 16b. The MDIO Write is done as read modify write operation into the memory. On enabling the custom pattern enable bit the programmed pattern is read out starting with location 0 and incrementing up to 32 and then restarting at 0. This pattern is repeated on every 2112b of data until the enable bit is cleared. In various implementations the custom pattern enable and the pattern memory are user configurable via MDIO. The memory can also be read out via MDIO.

Square Wave Generation functions is provided to support the transmission of a square wave pattern defined to be 16 hFF00. The pattern is programmed into the low 16b location of address 0 of custom pattern memory. This pattern is read out and repeated until the square wave enable bit is cleared. The square wave enable is user configurable.

IEEE Test Pattern Generation is provided to support the transmission of JP03A JP03B and Quad PRBS13 as defined in IEEE 802.3bj Draft 2.1. For example the JP03A Test pattern consists of sending 0 3 symbols in 40G PAM4 mode and 100G PAM4 mode. This translates to 4b which is written via MDIO into location 0 of custom pattern memory. This pattern is read out and repeated until the JP03A enable bit is cleared. The JP03A enable is user configurable.

The JP03B Test pattern consists of sending 15 0 3 symbols followed by 16 3 0 in 40G PAM4 mode and 100G PAM4 mode. This translates to 124b which is written via MDIO into location 0 1 and 2 of custom pattern memory. This pattern is read out and repeated until the JP03B enable bit is cleared. The JP03B enable is user configurable.

The Quad PRBS13 Test pattern which applies in 40G PAM4 and 100G PAM4 mode consists of sending 3 full cycles of 8191 bits followed by 1 cycle of 6523 bits. This translates to 31096 bits repeated. The bits in the first and third cycle are non inverted while bits in the second and fourth cycle are inverted. The PRBS13 is initialized at the end of every cycle. The design includes a 92b wide PRBS to support this feature following the above rules. This 92b is then translated to 66b output to be sent out. The Quad PRBS13 enable is user configurable.

Error Injection function supports an Error Injection capability into the transmit stream using an Error Set Mask register. The Error Set Mask register is user configurable and will be defined to be the width of the widest transmit stream. If the Error Set Mask register is cleared then no Errors are injected. If the bits of the Error Set Mask register are set to 1 then the corresponding transmit bits are inverted.

Transmit Polarity Swap and Disable functions are provided to support polarity inversion of each transmit bit swap of each transmit bit and transmit disable. Each one of the feature is user configurable independently. In terms of sequence of the configuration polarity gets applied first followed by disable and finally swap. This order is fixed in design and cannot be altered.

Now referring back to . The outputs of the gearboxes are coupled to a first MUX and a second MUX . The MUXes among other things allow the system to select between output of the gearboxes i.e. actual transcoded data and pattern generator e.g. test data . The PAM Gray maps and are configured to encode the transcoded data for transmission.

In various embodiments MDIO I2C Interface is provided. The configuration and status registers in the design are all accessible via 2 pin MDIO or 2 pin I2C interface. Since this IP will reside in a Transmit chip the design will also provide read write access to all the configuration and status registers in the chip. The I2CSEL pin when true indicates the access is via I2C interface and when false indicates the access is via MDIO interface. The MDIO and I2C interface are both designed to be slave interface.

In order to figure out the MMD device addresses and from IEEE 802.3ba 2010 Annex 83C 83C.1.2 the design will assign MMD 30 for the IP and MMD 31 for registers external to IP. The MMD device addresses are

The design incorporates a MDIO Slave protocol state machine I2C Slave protocol state machine MMD device 30 registers and MMD device 31 register interfaces. The block diagram of the MDIO interface block is shown in . This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. As shown MDIO controller is connected to the IC2 controller . Output of MDIO controller is connected to selector . Selector output is provided to address decode block which is connected to MMD 30 registers and MMD 31 register interface . further illustrates a plurality of multiplexers .

In an embodiment the MDIO Controller in adheres to Clause 45 of IEEE 802.3 specification and is implemented as a Slave interface running at the MDC frequency. As an example is a simplified diagram illustrating operation of a MIDO controller according to embodiments of the present invention. This diagram is merely an example which should not unduly limit the scope of the claims. One of ordinary skill in the art would recognize many variations alternatives and modifications. Table 19 provides a description for the process 

In various embodiments I2C controllers are used. The I2C implementation maps Clause 45 MDIO transactions onto I2C 16 bit Read and Write operations.

In order to map Clause 45 MDIO functionality onto the I2C bus I2C device address bits are used to provide transaction type and MMD select information. Note that I2C addresses are customarily shown as right justified 8 bit hex number despite being 7 bits in length. They are labeled A7 through A1 with A7 being the MSB.

The LS I2C address bit A1 is used in conjunction with IC R W bit to indicate transaction type as shown in Table 10 

The MS 5 address bits A7 A3 are used to select the device. A7 A3 must match PHYADR4 3 2 1 0. Eight device mappings are available for the Tx IP selected by the PHYADR pins. Each map uses 4 device addresses to differentiate between transaction types and MMDs. The following table shows device addresses used by each mapping as shown in Table 11 

Note that data carried by Tx IP I2C bus transactions is in Big Endian MSB first format as in Clause 45 MDIO.

As an example I2C timing my operate in one or more modes. In various embodiments The Tx IP devices support Standard mode Fast mode and Fast mode Plus I2C timings. The timing of the I2C interface is defined in the I2C bus specification and user manual NXP Semiconductors UM10204 .

Note that the I2C State Machine does not use SCL MDC as its clock unlike the MDIO SM which is clocked by MDC . The I2C SM uses the nominally 10 MHz clock clk 10m from the clock prescaler as its clock. SCL and SDA are asynchronously sampled using this clock to implement the I2C protocol and provide glitch suppression.

In various embodiments MMD 30 Registers are provided. According to various implementations the MMD 30 Registers are allocated for the configuration and status information of the registers internal to the Tx IP design. An overview of the registers for this particular MMD is specified in the table 12 below 

As an example an MMD 31 Register Interface is provided for configuration and or other functions. The MMD 31 Registers are allocated for the configuration and status information of the registers external to the Tx IP design but within the Tx Chip that includes the Tx IP. These registers are to be implemented outside the IP. The IP will provide the clock register address register read and write strobe and the register write data. The external block will use these to interface to the registers and provide the read data back to the IP as shown .

While the above is a full description of the specific embodiments various modifications alternative constructions and equivalents may be used. Therefore the above description and illustrations should not be taken as limiting the scope of the present invention which is defined by the appended claims.

