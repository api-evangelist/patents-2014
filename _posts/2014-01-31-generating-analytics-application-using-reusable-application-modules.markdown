---

title: Generating analytics application using reusable application modules
abstract: Analytics applications are generated using application modules. An application module stores metadata for use in an analytics application. The application module is associated with one or more data fields that correspond to data used in the analytics reports of an application module. An application module may be a composite application module that includes other application modules. An analytics application is generated from a specification including a set of fields. The set of data fields of the specification are matched against the data fields of the application modules. An application module matches the specification of the analytics application if the specification includes all the data fields of the application module. All matching application modules are selected and sent for deployment of the analytics application. The analytics application generated is configured to present information based on analytics reports.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09286329&OS=09286329&RS=09286329
owner: GoodData Corporation
number: 09286329
owner_city: San Francisco
owner_country: US
publication_date: 20140131
---
This invention relates generally to generation of analytics applications and more specifically to generation of analytics applications using reusable application modules.

Analytics applications are used by businesses to analyze their business data and make business decisions based on the data. These applications typically process business data generate analytics reports and display results of the analytics reports. Conventional approaches for developing analytics application include building the application from scratch and using templates that can be customized for specific applications. Building applications from scratch typically requires expertise in development of applications and may require significant development time and cost. The approach based on customization of templates also requires knowledge of templates and expertise in customization of templates and may require significant development time and cost.

Some vendors provide prebuilt applications that do not require significant customization for a specific business. However these applications are tied to a specific source of data as well as a specific structure of data. These applications do not function when used with other sources of data or data that is structurally different from those for which the applications are designed. Accordingly conventional systems for building analytics applications either require expensive solutions or are inflexible.

Embodiments allow generation of analytics applications using application modules. An analytics application generator stores a set of application modules. An application module stores metadata for use in an analytics application. For example the metadata may describe an analytics report and information for displaying the results of the analytics report. An application module describes one or more data fields used in the analytics reports. The analytics application generator receives a specification for generating an analytics application. The specification describes a set of data fields for use in the analytics application. The analytics application generator matches the set of data fields from the specification with data fields of the application modules. An application module matches the specification if the specification includes all the data fields of the application module. The analytics application generator selects one or more application modules based on the matching. The analytics application generator sends the selected application modules for deployment of the analytics application.

The features and advantages described in this summary and the following detailed description are not exhaustive. Many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings specification and claims hereof.

The figures depict various embodiments of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

Business intelligence comprises methodologies processes architectures and technology used to identify and analyze business data. Examples of business data include data of commercial or business value to an organization project department or product such as data corresponding to profits sales gross margin revenues customer retention rates customer lifetime values customer renewal rates customer engagement rates customer satisfaction scores and the like. Business data may be categorized or segmented based on organizations departments projects products and so on. In other words different organizations departments projects and products may have different underlying business data and therefore employ different methods to analyze the underlying business data to produce different results.

Analysis of business data allows an analyst to distil key patterns or statistical trends from the underlying raw data e.g. trends and patterns not directly obvious from the raw data . The processed output facilitates a viewing user to make speedy and meaningful conclusions from the business data. The processed output may be presented or displayed in the form of a visual user interface e.g. a report a dashboard a collection of charts and so on that summarizes key patterns or statistical trends underlying the raw data.

Since the amount of data to be processed can be significantly large and complex business analytics is performed using analytics applications. An analytics application may perform various steps on business analytics including extract transform and load ETL of data from an external source loading the imported data into a database generating reports based on the data and visualizing the report data. Embodiments allow development of analytics applications using application modules that represent reusable components.

An application module performs the various steps of processing of business analytics for a subset of data for example for a set of fields including importing the data corresponding to the set of fields from and external source defining a database schema for the set of fields and storing the imported data in a database based on the database schema generating reports corresponding to the fields and visualizing the data. Use of the application modules reduces the development time and effort for the analytics application significantly compared to developing the application from scratch even though the application is not tied to a particular input data schema or organization of data.

In an embodiment the application module comprises metadata describing various operations that can be performed for a set of fields. The operations performed for the set of fields include ETL operations operations for storing and retrieving data from a database operations for generating a report based on one or more fields from the set of fields and information describing visualization of the generated reports. An execution engine deploys the application modules by using the metadata to retrieve data for data fields of the application module from a corresponding external system generates an analytics report described by an application module and configures for display information based on the analytics report. A data field is also referred to herein as a field an application field or an application data field.

Client device can be a conventional computer system e.g. a desktop or laptop computer a tablet or a device having computer functionality such as a personal digital assistant PDA a mobile telephone a smartphone or another suitable device. The application development system comprises an analytics application generator module . The analytics application generator module comprises an application modules library . The application modules library stores a set of predefined application modules.

An application developer provides analytics application specification to application development system . Analytics application generator module reads and processes analytics application specification . Analytics application generator module determines which application modules of application modules library are applicable to the analytics application being developed based on analytics application specification . The analytics application generator module generates analytics application based on the analytics application specification .

The analytics application generator module may generate analytics application partially if the application modules library does not include application modules corresponding to all fields specified in analytics application specification . The application modules library is extensible. For example an application developer or a vendor may add new application modules to the library for fields that were previously not mapped to existing application modules. Alternatively an application developer may customize an existing application module by adding reports to the application module by modifying the way data is visualized in the module or by adding deleting data fields for the application module.

The users include one or more computing devices capable of receiving user input as well as transmitting and or receiving data via the network . In some embodiments a user corresponds to or includes a client device . In some embodiments the client device is configured to communicate via the network with the business intelligence system and with one or more customers .

In some embodiments in the business intelligence environment a user is associated with or authenticated by a customer . Business intelligence system stores business data and customization metadata e.g. customization parameters for each of the customers . The business intelligence system may receive a request from a user via network to show business intelligence data associated with a customer. The business intelligence system generates and provides a customized business intelligence interface for display to the user based on business intelligence data and customization metadata associated with the customer associated with the requesting user.

In some embodiments a client device of user executes an application allowing the user of the client device to interact with the business intelligence system and with one or more customers . For example a client device at user executes a browser application to enable interaction between the client device and the business intelligence system via the network . In another embodiment a user interacts with the business intelligence system through an application programming interface API running on a native operating system such as IOS or ANDROID of the client device.

The users are configured to communicate via the network which may comprise any combination of local area and or wide area networks using both wired and or wireless communication systems. In one embodiment the network uses standard communications technologies and or protocols. Data exchanged over the network may be represented using any suitable format such as hypertext markup language HTML or extensible markup language XML . In some embodiments all or some of the communication links of the network may be encrypted using any suitable technique or techniques.

Additionally one or more customers are coupled to the network for communicating with the business intelligence system . In some embodiments as described further with reference to customers include source databases for storing business intelligence data at the customer location. Additionally customers store parameters for configuring analytics and display of the business intelligence data by one or more users . Furthermore in some embodiments customers store and provide identification information used to authenticate one or more of the users that have access rights to the business intelligence analytics associated with the customers . Details of custom branded analytic applications in a multi tenant environment are described in U.S. patent application Ser. No. 14 051 469 filed on Oct. 11 2013 which is hereby incorporated by reference in its entirety.

The set of data analytics parameters optionally include parameters that specify methods to track and monitor the user s performance and parameters that specify the user s or customer s predefined goals to compare the user s performance against. This approach of visually tracking business performance compared against a predefined goal helps customers and users affiliated with the customers anticipate and manage risk by making business decisions in a timely manner so as to stay on track to hit predefined goals by proactively analyzing and reviewing past performance.

Application modules comprise metadata describing characteristics of a part of an analytics application. In an embodiment the application module may include metadata describing processing associated with a subset of data fields that may be processed by an application. The processing may include retrieving data for the data field from an external source storing the data in a database processing the data fields to generate an analytics report and configuring the results of the analytics report for presentation.

An application module includes metadata that allows a system e.g. the business intelligence system to retrieve data for a set of source fields for storing in data fields of applications and process them to generate one or more reports that are displayed in a user interface. A data field of an application is also called application data field. Each data field may retrieve data from a source for example an external system such that the data field maps to a source field of the external system. A data field may correspond to more than one source fields. Alternatively a single source field may correspond to multiple data fields of an application module.

The analytics application specification may specify the transformations that map the source fields of the source of data to the data fields of the application. A transformation may map a single source field to a single data field of the application multiple source fields to a single data field or a single source field to multiple data fields of the application module. The transformation allows users to modify the data that is imported from a source of data. For example a source of data may be represented in a format different from the format of the application module. The transformation converts the format of the data of the source to the format of the application module.

An analytics application may present a set of user interfaces showing information from a set of analytics report each report processing one or more data fields. In an embodiment an application module implements a subset of user interfaces of an analytics application that present data from a set of analytics report. Accordingly the application module processes a subset of data fields of the analytics application. The metadata of an application module can be processed by a runtime engine to execute the analytics reports and render the user interfaces that present results from the analytics reports. In an embodiment an application module comprises code or instructions for performing various operations for a subset of an analytics application.

The application module is associated with a set of data fields . A data field may be a required data field or an optional data field. For example the application module illustrated in is associated with required data fields customer name region and amount. An application module can be used to generate an analytics application if the analytics application specification comprises specification of all the required fields of the application module. In an embodiment the specification of a data field in an analytics application specification comprises an association between the data field and a field of a source of the data for example an external system. The specification of the data field in the analytics application specification may include information describing how data may be retrieved from the source of data. For example if the source of data is an external system the specification of the data field may include the URL uniform resource locator of the external system or another mechanism to identify the external system. The specification of the data field may also include credentials for accessing the data from the external system for example parameters for creating a session or a connection with the external system.

If the analytics application specification provided to the application development system is missing any of the required fields of the application module the application module is not used for generation of the analytics application. For example if the specification of analytics application A1 is customer name region sales item amount and the specification of analytics application A2 is customer name region time of sales sales representative the application module shown in can be used for analytics application A1 but not for analytics application A2.

The application module may also be associated with a set of optional fields. If the analytics application specification provided doesn t include all the optional fields the analytics application generation module can still generate the analytics application. In an embodiment the application generation module uses default values for optional fields when the corresponding specification is missing. An optional field may not be used by the application module if the analytics application does not specify the optional field. Accordingly one or more reports or user interface elements that use the field are not presented to the user in the generated analytics application. For example the user interface corresponding to the application module may comprise multiple tabs each tab presenting information based on a report. One or more tabs of the user interface may not be displayed in the generated analytics application if the optional field is not available in the specification of the analytics application.

The database schema comprises the structure of the data as it is stored in a database by the application module . For example the database schema defines the tables used to store the fields associated with the application module. The database schema also defines the relations between the fields of the application module and other fields that may be associated with other modules. For example relations between fields may be specified as foreign key and primary key constraints of database tables.

In an embodiment the database schema for a set of fields is a star schema comprising one or more fact tables and a set of dimension tables . The fact table stores business facts for example sales of various items of a business. The dimension tables store descriptive attributes associated with the business. For example information describing various products of a business may be stored in a dimension table. The fact table stores foreign keys to dimension tables. For example a particular record in a fact table may correspond to sales of various products of a business. The record may store a foreign key into a dimension table describing products offered by the business. An analytics report may join the fact table with the dimension table for example to describe sales of products of a business in a given time period.

The dashboard layout specifies how reports of the application module are presented in a user interface for example a dashboard of the business intelligence system . The dashboard layout may specify the columns displayed in a user interface the order in which the columns are presented a type of chart used to display certain information fonts used for text colors used for various portions of the user interface and so on. The visualization and reporting library includes the code or instructions for presenting the reports for the application module . In an embodiment the visualization and reporting library sends required information to a client device so as to allow the client device to present information. For example the client device may use an internet browser to display information and the visualization and reporting library may configure a webpage and send the webpage to the internet browser for displaying.

In some embodiments the user interface of an analytics application displays one or more of a dashboard a business report a goal tracking interface a performance tracking interface one or more charts for data visualization. Examples of charts that may be displayed include pie charts charts with multiple concurrently plotted parameters bar graphs for visual comparison of multiple concurrently plotted parameters correlation plots bar graphs trending values of a given parameter over time graphs trending a relationship between two or more parameters geographical maps with data plotted over specific geographical regions waterfall charts showing discrete changes over time bullet charts showing performance against goals and the like.

The database schemas for composite application module may make use of shared dimensions that allow the independent schemas of the contained application modules to be related to each other. This allows for reporting across relationships that do not exist in the contained application modules. shows how additional relationships between fields may be determined by combining database schemas multiple application modules in accordance with an embodiment. For example a composite application module may generate reports relating two or more fields that are not related in any individual application module contained in the composite application module.

As shown in the database schema of application module includes a fact table F and two dimension tables dimA and dimB. The database schema of application module includes a fact table F and two dimension tables dimB and dimC. However the fields processed by individual application modules and are not related. However the database schema of composite application module includes fact tables F and F and dimensions dimA dimB and dimC. Since dimB is common across the two application modules and the composite application module can define reports that related fields across the application modules and . For example a report can be defined for composite application module that relates dimA and dimC. As a result a composite application module allows two previously separate database schemas to be logically connected across a shared dimension. This in turn allows for specifying additional metrics reports and dashboards that did not exist in the individual application modules.

The analytics application specification parser parses the specification of an analytics application provided by an application developer. The analytics application specification parser generates a representation of the information provided corresponding to an analytics application. The analytics application specification specifies a set of data fields processed by the analytics application. The data fields correspond to data processed by the analytics application. For example the analytics application may generate reports corresponding to the data fields and display them. The analytics application specification also specifies a source field corresponding to a data field of the application. The source field describes a data source for accessing the data for the data field for example an external system. The analytics application specification provides information regarding how to access the external system for example an address of the external system and the protocol used to retrieve the information. The protocol used to retrieve the information may include the information to create a connection with the external system and the corresponding names of the fields in the external system. For example a data field of the analytics application may be called customer name and corresponding source field in the external system may be called cust name.

The application module matcher matches application modules against the analytics application specification . The application module matcher matches the data fields required by an application module against fields specified in the analytics application specification . The application module matcher determines that an application module matches the analytics application specification if the analytics application specification specifies all required data fields of the application module. In other words the application module matcher determines if the analytics application specification specifies the details of the source field corresponding to each required data field of the application module. If any of the required fields of an application module is not described in the analytics application specification the application module matcher determines that the application module does not match the analytics application.

The application modules library stores application modules that are available for application developers to use. The application modules may be provided by various vendors or by the application developers themselves. An application developer may customize an application module by specifying modifications to the application module. For example an application developer may add some fields or remove existing fields add new analytics reports modify existing reports modify presentation of an analytic report and so on. The modified application module is stored in the application modules library . The application modules packaging module combines a set of application modules selected for an analytics application and packages them for deployment. The package of the application modules is sent to the business intelligence system for execution.

In some embodiments business intelligence system transmits the generated customized business intelligence interface for display directly to the respective user. In alternative embodiments business intelligence system transmits the generated customized business intelligence interface to the respective customer. The respective customer in turn optionally stores the customized business intelligence interface for example customized user interface stored by customer at the customer site. The respective customer then provides the customized business intelligence interface for display to the respective user. In such embodiments the customized user interface at the respective customer is optionally updated based on the metadata stored at the business intelligence system and associated with the respective customer.

Accordingly in some embodiments business intelligence system includes datastore and multi tenant platform . Datastore optionally maintains a plurality of customer databases and the like. Each database of the plurality of customer databases in datastore includes data representative of corresponding source data stored at a corresponding customer location. For example customer database in datastore stores data representative of source data stored in customer database system at customer . Similarly customer database in datastore stores data representative of source data e.g. business data stored at the customer location stored in customer database system at customer .

Although shows that data representative of source customer data is stored in datastore of the business intelligence system at the plurality of customer databases and the like the customer data or data representative of such customer data could be stored at and accessed from one or more systems remote from the business intelligence system e.g. a customer location a third party location and so on .

In some embodiments business intelligence system retrieves representations of source data e.g. optionally with modifications to the source data to facilitate efficient query processing from a customer location e.g. from a customer server remote from the business intelligence system corresponding to the particular customer to store in a particular customer database. In some embodiments business intelligence system periodically updates the particular database based on modifications to the source data stored at the customer location. In some embodiments modifications to the source data are periodically pushed to datastore from the customer location. In alternative embodiments modifications to the source data are actively pulled from the customer location periodically into the datastore .

Multi tenant platform of business intelligence system interfaces with and queries the plurality of customer databases in datastore . Multi tenant platform includes a unified metadata layer that stores metadata for each of the customers for example metadata for customer metadata for customer and the like. In some embodiments metadata for each of the customers includes a set of customization parameters for the respective customer for example data display parameters and a data analytics parameters. The business intelligence system acts as a single consolidated multi tenant platform that stores customization parameters for each of the plurality of customers and is capable of querying each of the plurality of databases provides improved storage and performance efficiency over separate analytics platforms targeted to serve each individual customer.

In some embodiments the set of customization parameters for a particular customer is custom provided by the particular customer so as to control visual appearance and functionality of customized business analytics rendered for display to one or more users affiliated with the particular customer.

In some embodiments unified metadata layer additionally stores common or shared metadata e.g. a common or shared set of data display parameters and a common or shared set of data analytics parameters that is common or shared between all of the customers and is used by business intelligence system to control visual appearance and functionality of customized business analytics rendered for display to users affiliated with all of the customers .

In some embodiments multi tenant platform of business intelligence system includes an analytics engine that is configured to e.g. responsive to a request from a particular user affiliated with a particular customer analyze a dataset retrieved from a particular customer database corresponding to the particular customer based on the set of data analytics parameters for the particular customer. Toward this end in some embodiments analytics engine accesses a set of customization parameters e.g. metadata for the particular customer from the metadata layer to obtain a set of data analytics parameters for the particular customer. Analytics engine then formulates one or more customized database queries based on the set of data analytics parameters for the determined customer and one or more properties e.g. type of business intelligence data physical data storage type or logical data storage type or logical schema of the identified customer database and executes the one or more customized database queries on a customer database to analyze the dataset.

In some embodiments business data stored in a first customer database corresponding to a first customer e.g. customer database corresponding to customer is distinct in data type from business data stored in a second customer database corresponding to a second customer e.g. customer database corresponding to customer . For example the first customer database includes financial data records for an organization including chronologically generated financial statements quarterly earnings and the like whereas the second customer database includes customer relation information for an organization such as customer referrals customer renewals customer satisfaction data and the like.

Additionally in some embodiments the physical or logical organization of business data stored in a first customer database e.g. customer database corresponding to customer is distinct from the physical or logical organization of business data stored in a second customer database e.g. customer database corresponding to customer .

Consequently the analytics engine formulates a first customized database query or a first customized set of one or more database queries for execution on the first customer database based on the set of data analytics parameters for the first customer based on one or more properties e.g. data type physical data storage type logical data storage type schema of the first customer database or a combination thereof.

Similarly the analytics engine formulates a second customized database query or a second customized set of one or more database queries for execution on the second customer database based on the set of data analytics parameters for the second customer based on one or more properties e.g. data type physical data storage type logical data storage type schema of the second customer database or a combination thereof. In some embodiments the first customized database query or the first customized set of one or more database queries and the second customized database query or the second customized set of one or more customized database queries although mutually distinct are generated by the same analytics engine to query two distinct customer databases.

In some embodiments business intelligence system includes an application layer configured to e.g. responsive to a request from a particular user affiliated with a particular customer generate a customized business intelligence interface for transmission to the particular user.

Toward this end the application layer accesses a set of customization parameters e.g. metadata for the particular customer from the metadata layer to obtain a set of data display parameters for the particular customer. The application layer obtains an analyzed dataset from the analytics engine formats the analyzed dataset for presentation on the customized business intelligence interface based on the set of data display parameters and formats based on the set of data display parameters one or more additional user interface elements e.g. text graphical content or metadata associated with the customized business intelligence interface.

As shown in the analytics application specification specifies mapping for data fields customer name region and amount to source fields of the data source. The data field customer name of the application maps to the source field cust name the data field region of the application maps to the source field sales region and the data field amount of the application maps to the source field amount. There is no mapping specified for the data field product of the application.

As shown in the application modules library stores a set of application modules including application modules and . Application module has required fields customer name region and amount. Application module has required fields customer name product and amount. The application module is a composite application module that includes application modules and

The analytics application specification includes all the data fields of application module i.e. customer name region and amount. Therefore the analytics application generator module marks the application module as selected for generating the analytics application. However the analytics application specification does not include all the data fields of application module since it does not specify mapping of the data field product to any source field. Therefore the analytics application generator module marks the application module as rejected for purposes of generation of the analytics application . The application modules that are marked selected are included in the subset of application modules used for deployment of the analytics application whereas the application modules that are marked rejected are excluded from the subset of application modules used for deployment of the analytics application.

The application module matcher selects an application module for processing. The application module matcher matches the data fields of the selected application module against the data fields specified in the analytics application specification . In particular the application module matcher checks if the analytics application specification specifies a source field corresponding to each data field of the application module.

If the analytics application specification specifies a source field for each data field of the application module the application module is selected for purposes of generating the analytics application. If the analytics application specification does not specify a source field for any data field of the application module the application module is rejected for purposes of generating the analytics application. If an application module is rejected for purposes of generation of the analytics application all composite application modules that include the rejected application modules are also rejected. The application module matcher checks if all application modules are processed. If there are any remaining application modules to be matched the application module matcher repeats the steps and for each of the remaining application modules. If all application modules are processed the application modules packaging module packages the modules for deployment. The packaged modules are sent to the business intelligence system for deployment of the analytics application.

The foregoing description of the embodiments of the invention has been presented for the purpose of illustration it is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Persons skilled in the relevant art can appreciate that many modifications and variations are possible in light of the above disclosure.

Some portions of this description describe the embodiments of the invention in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are commonly used by those skilled in the data processing arts to convey the substance of their work effectively to others skilled in the art. These operations while described functionally computationally or logically are understood to be implemented by computer programs or equivalent electrical circuits microcode or the like. Furthermore it has also proven convenient at times to refer to these arrangements of operations as modules without loss of generality. The described operations and their associated modules may be embodied in software firmware hardware or any combinations thereof.

Any of the steps operations or processes described herein may be performed or implemented with one or more hardware or software modules alone or in combination with other devices. In one embodiment a software module is implemented with a computer program product comprising a computer readable medium containing computer program code which can be executed by a computer processor for performing any or all of the steps operations or processes described.

Embodiments of the invention may also relate to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes and or it may comprise a general purpose computing device selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a non transitory tangible computer readable storage medium or any type of media suitable for storing electronic instructions which may be coupled to a computer system bus. Furthermore any computing systems referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.

Embodiments of the invention may also relate to a product that is produced by a computing process described herein. Such a product may comprise information resulting from a computing process where the information is stored on a non transitory tangible computer readable storage medium and may include any embodiment of a computer program product or other data combination described herein.

Finally the language used in the specification has been principally selected for readability and instructional purposes and it may not have been selected to delineate or circumscribe the inventive subject matter. It is therefore intended that the scope of the invention be limited not by this detailed description but rather by any claims that issue on an application based hereon. Accordingly the disclosure of the embodiments of the invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

