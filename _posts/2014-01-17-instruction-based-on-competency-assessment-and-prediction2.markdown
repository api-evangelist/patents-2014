---

title: Instruction based on competency assessment and prediction
abstract: An intelligent tutoring system can be implemented using filters, predictive modeling, and a knowledge warehouse, which allows content to be dynamically selected for individualized presentation to a learner. Such an intelligent tutoring system can be implemented using a variety of techniques, including polynomial vector equations in modeling, extensible markup language storage formats for presentation data, and a knowledge warehouse with information stored in data cubes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09542853&OS=09542853&RS=09542853
owner: Accella Learning, LLC
number: 09542853
owner_city: Louisville
owner_country: US
publication_date: 20140117
---
This claims priority from and is a continuation in part of U.S. non provisional patent application Ser. No. 13 714 474 filed on Dec. 14 2012 having the same inventor as listed above. That application was a continuation of and claims priority from U.S. non provisional patent application Ser. No. 12 328 018 filed on Dec. 4 2008 and having the same inventor as listed above which claimed priority from and was a non provisional of U.S. provisional application No. 61 012 615 filed on Dec. 10 2007 also having the same inventor as listed above. The disclosures of each of those applications are hereby incorporated by reference in their entireties.

Certain aspects of the teachings of this disclosure can be implemented in the field of software aided training.

Acquiring and retaining information are highly individualized processes with any given individual learning and forgetting at rates based on factors which may not exist or may not exist with the same intensity for anyone else. For example the speed of information acquisition may be influenced by factors such as how well the presentation of that information matches an individual s learning style and or the individual s aptitude for a particular subject. Similarly while the degradation of an individual s competency with time is a common problem with all levels and ages the rate and level of that degradation for a particular individual will be influenced by factors such as the extent to which a particular competency is utilized in the individual s day to day activities. While this individual variability can to some extent be accounted for through instruction which incorporates intelligent tutoring systems such as described in the incorporated priority documents in many cases where competency decay is of particular concerns such as in professions which have continuing education and or certification requirements education and testing requirements will be defined on a periodic basis which fails to account for individual variability. Accordingly there exists a need in the art for improved technology which can account for individual variability in acquiring and retaining information.

This document comprises a disclosure of various techniques and tools which can be used for training individuals and storing information related to those individuals educational achievement. As will be apparent to one of ordinary skill in the art in light of this disclosure the teachings of this disclosure can be utilized in a variety of different implementations. For example the teachings of this disclosure can be used to implement a system in which data gathered on a user s interaction with a set of educational content is provided as input to a predictive competency model and used in real time to personalize the presentation of content to the user. Similarly it is also possible that data regarding the degradation of a user s competencies over time could be used to predict the degradation of those competencies and schedule remedial training to counteract such degradation. Other implementations will be immediately apparent to and could be implemented without undue experimentation by those of ordinary skill in the art in light of this disclosure. Accordingly this summary should be understood as being illustrative only and should not be treated as implying limitations on the scope of the claims included in this document or on the scope of claims included in any related document.

The following description should not be understood as being limiting on the scope of any claims included in this document or in any document which is related to this document. Other potential applications and embodiments of the teachings of this disclosure beyond those explicitly set forth herein are contemplated by the inventors and could be implemented by those of ordinary skill in the art without undue experimentation. Accordingly the drawings and descriptions should be regarded as illustrative in nature and not limiting.

As an illustration of one possible implementation of certain teachings of this disclosure consider the diagram of . That figure depicts a state diagram in which a plurality of levels represent different categories of content e.g. test questions instructional segments etc. which could be presented to a learner using an intelligent tutoring system. As shown in it is possible for a learner to move between levels in both ascending e.g. level to level and descending level to level order depending on inputs provided by the learner. In this way content can be dynamically tailored for particular individuals being trained. For example material presented might be organized into a series of articles and accompanying comprehension questions. A tutoring session could begin with presentation of the most basic articles to the user then as the user indicates comprehension of the material in those articles e.g. by correctly answering the accompanying questions material of increasing complexity could be presented to the user. Similarly if a user indicates that he or she is having difficulty with a particular subject e.g. by incorrectly answering questions related to that subject the user could be presented with material having lesser complexity. In this manner a system can be implemented that ensures that the material presented to a user is appropriately matched to that user s knowledge and skill level and which could also modify the amount and content of material which was presented to the learner e.g. a learner with more advanced knowledge might be presented with less material than a learner who requires more basic instruction to attain mastery of a concept .

Of course it should be understood that the description above is not intended to be an exhaustive description of potential uses for a system which allows user state transitions such as shown in . For example in some cases instead of or in addition to allowing a learner to transition between levels which vary in complexity it might be possible to allow users to transition between levels that vary in other manners such as in terms of presentation modality or learning style. Thus if a learner s input indicates that he or she is a kinesthetic learner rather than a visual learner the content presented to that learner might be varied so as to be more appropriate to that individual s learning style. Similarly instead of or in addition to receiving user inputs in the form of answers to questions a system which allows user state transitions such as described in the context of could receive input in the form of measurements of how long a user spends on a particular section of content or whether a user interacts with any particular aspect of a section of content. In some instances specialized hardware might be utilized to facilitate this measurement. For example a camera might track eye movement and or expression to determine an individual s focus and comprehension level vis vis various parts of presented content.

As yet another variation on the concept of user state transitions it is also possible that a variety of techniques for utilizing user inputs could be implemented in different situations. For example while depicts transitions based on actual inputs provided by the user other approaches to transitions such as transitions based on predictive modeling are also possible. As an example of the use of predictive modeling for state transitions consider the extremely simplified scenario in which a learner s expertise is modeled with the formula where c is the learner s expertise vis the weighted velocity of learner expertise in score change per hour k is the learner s initial level of expertise and t is the time in hours. In such a case the learner s expertise hence the appropriate material to present to the learner can be predicted as a linear function increasing with time. By using this model the appropriate information can be presented to the learner despite the possibility of inaccurate or missing user input data. Of course the simplified formula set forth above is not intended to imply that modeling for state transitions is limited to linear expertise increase situations. As an alternative nonlinear formulae such as 0.1 1.0143 0.657141.0114 with the more general form of or any other type of formula e.g. a polynomial vector student model could also be used.

As yet a further refinement in some cases combinations of transitions based on learner input and predictive modeling could also be used. For example it is possible that transitions between states could be controlled by a model and that user input is also gathered and used as feedback for improvements and modifications to that model. As a demonstration of one potential approach to this technique consider the diagram of . In the output of a learner model is sent to other components in an intelligent tutoring system which can be used to control transition between states and information presented to the learner. The output of the learner model is also sent to a difference detector which can compare the output of the learner model with inputs from the learner e.g. competence data . The output of the difference detector can then be passed to a filter which can be implemented as a software module configured to determine how the difference between predicted and real results should be used to modify the underlying learner model . Accordingly in some implementations a learner model could be dynamically refined based on user input data.

Various techniques can be used for refining the learner model in closed loop systems such as shown in . For example it is possible that techniques such as minimizing either the weighted or unweighted measure of the distance between predicted and measured values could be implemented using the following formula 

Of course it should be understood that in addition to variations between transitioning techniques different implementations of the teachings of this disclosure might also include different approaches to integrating the state transition concept. For example in some cases an implementation might include a single scale e.g. complexity of material or progression through cumulative material to be presented to a user. However in other situations there might be multiple different areas of knowledge or aspects of content contained in a set of material to be presented to a learner and each of those areas of knowledge might have different transition characteristics or be represented by a different state machine in the system which controls presentation. As a concrete example of this consider a situation where a learner is to be instructed in the medical management of radiation incidents. As shown in there might be a variety of areas of learning competencies such as vocabulary related to the psychology of risk and risk perception regulations regarding radiation exposure limits steps for decontaminating a victim etc which could be considered relevant to the overall subject matter of the material presented to the learner. In a situation where individual competencies are uniquely modeled the learner might be presented with information in one competency e.g. the physics of radioactivity which are appropriate for a high level of skill while being presented with more basic information in one or more other competencies e.g. the biological effects of radiation . In this way fine grained optimization of information presented to a learner can be achieved and the overall effectiveness and efficiency of the learning process can be increased.

As a concrete example of a system which could allow for the dynamic selection of material presented to a learner consider the diagram of . depicts a system which could be used to control the operation of a learning management system LMS . In the system of the expert model portion of the intelligent tutoring system ITS is a data component which is instantiated with item and sequence rankings based on expert behavior. The pedagogy model is instantiated with sequence and item selections i.e. groupings and sequences appropriate for various skill levels in a particular competency. The domain knowledge comprises information related to the various competencies that might be presented to the learner such as an overall question bank multimedia content and instructional articles. Those components would then interact with the learner model to control the information presented to the learner. The expert model would provide potential groupings and sequences for the information that could be presented to the learner. The pedagogy model would indicate which sequences and selections should be made based on the specific skill level of the learner that skill level being derived from the learner model . Then the actual information would be provided from the domain knowledge . The specific content elements which make up the domain knowledge could be expressed in an extensible markup language XML based format and use metadata tags to indicate the attributes of any of the specific elements e.g. competency area difficulty level of questions learning system of material or other attributes . These tags might be used either alone or in combination with information provided from the pedagogy model to determine what information to provide to a learner in light of the characteristics of the learner e.g. skill level at various competencies as reflected in the learner model .

Turning now to that figure depicts how a knowledge warehouse can be implemented as an extension to an intelligent tutoring system such as depicted in . As shown in an intelligent tutoring system can utilize a query engine to obtain information for a learner model . The query engine can be implemented as a software process configured to retrieve data from a competency database for a student. The information in the competency database can be organized in a variety of manners. For example the information in the competency database can be represented in the form of on line analytical processing OLAP cubes indexed by competency metadata. Specific illustrations of potential organizations for information in the competency database are given in . shows a high level view of a potential set of associations between different types of information relevant to a learner. For example as shown in a record for a learner could be uniquely determined by a learner name or ID . Then the record for that learner could include information regarding the learner s demographics learning style knowledge skills and test scores . shows a more detailed example of potential associations between types of data e.g. those depicted in within a competency database . show an alternative structure which could be used in the organization of data in a competency database . Referring specifically to it should be understood that though those figures depict organization in knowledge domains related to radiation incidents it is not required that a competency database be devoted to information regarding radiation incidents or that it be devoted to a particular knowledge domain at all. For example as shown in radiation exposure management could be only one entry in a general subject such as emergency medicine which itself could be a nested entry in the general knowledge structure. While it is possible that some competency databases might be organized for specific domains in other implementations a competency database might be structured according to a general purpose organizational scheme. In such a case different curricula might use techniques such as assigning different weights to different areas of the competency database when assigning values to particular types of knowledge thereby allowing the same database to be used as a general purpose tool in a variety of domains rather than simply in domains related to radiation incidents as shown in 

Returning to the discussion of another aspect of certain knowledge databases which could be implemented by those of ordinary skill in the art in light of this disclosure is the ability to update information in the competency database based on input received from a learner. Such updates might take place on a variety of schedules for example inputs received from a user might be propagated back to the competency database in real time might only be propagated back based on the occurrence of some event e.g. completion of a module session or curriculum or using some combined approach. The actual back propagation might be performed for example by using metadata for the competency database to define processing operations which would be performed on raw data before that data could be incorporated. Examples of such processing operations include cleaning raw data e.g. applying rules for allowable values such as that age is a numerical value between 1 and 99 that a test score must be between 0 and 100 etc as well as transforming raw data by for example performing sorting lookup and calculations required to ensure quality accuracy and compatibility of data accumulated from a variety of sources e.g. transforming date of birth from MM DD YYYY format to DD MM YYYY format converting a test result from a percentage to a z score etc . Also as shown in some implementations might include a visualizer which could be used to provide a graphic interface to information maintained in the knowledge warehouse for example by providing an aggregate view of the contents of the competency database . Of course it should be understood that the representation provided in along with the discussion above is not intended to imply limitations on the potential implementations of this disclosure or any claims included in this application or any applications which claim priority from this application. As an example of a further variation consider the architecture shown in which provides an alternative view of a knowledge warehouse including OLAP cubes storing information about particular students. Accordingly the discussion of the knowledge warehouse set forth herein should be understood to be illustrative only and not limiting.

Using approaches such as those set forth above it is possible to provide a general purpose intelligent tutoring system add on to a learning management system. As shown in various components can be configured in a pluggable manner e.g. a knowledge warehouse can interact with an intelligent tutoring system over a network an intelligent tutoring system can interact with an appropriate learning management system through an application programming interface . This could allow for creation of a server based intelligent tutoring system which allows dynamic sequencing of content for a learning management system without requiring that a model for a learner be constructed de novo for a particular LMS or that data for that learner be collected independently for each individual curriculum. Rather the learner model could be read into the intelligent tutoring system in real time from a knowledge warehouse while data could be stored in a general purpose data organization in the content database allowing a variety of different LMSes and or curricula to be deployed without requiring retooling or data recreation. Of course it is also possible that a toolset could be implemented to allow integration between a learning management system and the various components which might be used in conjunction with such a system. For example standards could be created for metadata described previously to facilitate integration between different aspects of the system. Similarly an implementation of certain aspects of the technology described herein might include published standard learner model vectors and access mechanisms for various components of the system.

Turning now to that figure provides an exemplary high level depiction of how aspects of the disclosed technology can be used to assess and predict competency degradation over time for a user in a simulator enabled system. In particular depicts a process which begins with a user interacting with a simulator such as by working through a clinical case on a mannequin based simulator with cardiovascular signs at a first time referred to in the diagram of as Ti. In this process as part of or after the interaction with the simulator the user s level in one or more competencies e.g. abilities such as the ability to detect or identify a specific finding is assessed . As will be apparent in light of this disclosure this assessment is preferably time specific a fact reflected in the diagram of through the use of competency labels which include the time that an assessment of the user s level in the underlying competency i.e. in A refers to competency A at time T 1 B refers to competency B at time T 1 etc . As a concrete illustration assuming that the user s interaction at time T 1 is to work through a clinical case simulating an elderly male with a history of smoking and cardiovascular findings then competency A at time T 1 could be ability to detect and identify a systolic murmur through auscultation with a stethoscope competency B at time T 1 could be ability to locate and assess pedal pulses with the fingertips and competency C at time T 1 could be the ability to located and asses the PMI point of maximum impulse on the mannequin s chest wall with the fingertips.

Continuing with the discussion of after a passage of time sufficient in duration e.g. a period of several days or longer such as several months or years such that a second assessment would assess the long term memory as opposed to short term or working memory of the user the user performs a second interaction with the simulator this time time T 2 working through a different scenario which implicates at least one of the competencies which was previously assessed . For example if the user s interaction at time T 1 had been to work through a clinical case simulating an elderly male with a history of smoking and cardiovascular findings the user s interaction at time T 2 could comprise working through a clinical case simulating a young female athlete with exercise induced cardiovascular findings. Either in the course of or after this second interaction the user s level in the competencies implicated in that interaction will be assessed . Of course it should be understood that while in a process such as shown in there will preferably be at least one competency in common between interactions performed at different times there could also be in either or both of the interactions additional incidental findings such as abnormal breath sounds e.g. exercise induced asthma to fit the case and or to act as distractors.

After the assessment of the user s level in the competencies implicated by the second interaction with the simulator the method of continues with processing the differences between the competency data gathered for the user at times T 1 and T 2 then applying the results of that processing. Preferably a method such as shown in will be performed in such a manner e.g. using a computer configured to generate a large number of apparently different simulation scenarios which test a common core of shared competencies that there will be significant overlap between the competencies implicated by the interactions which take place at times T 1 and T 2. If this is the case the processing and application of the results of those interactions will preferably be performed for each of the competencies implicated by both interactions meaning that a method such as shown in will preferably be able to apply the results differently on a competency by competency basis.

To illustrate how this competency by competency processing and application could take place consider a scenario in which the user s level of ability to identify a systolic murmur with a stethoscope i.e. competency A may have remained constant or even increased from Simulator Case One to Simulator Case Two while the user s level of ability to locate and assess pedal pulses i.e. competency B and to locate and assess the PMI i.e. competency C may have diminished to respectively 50 and 25 of their values as determined at time T 1 by the time of the interaction at time T 2.

In such a scenario the processing of the differences between competency data could indicate that the user s level had little or no degradation in competency A the greatest degradation in competency C and an intermediate level of degradation in competency B. These findings could then be applied by scheduling one or more educational interventions for the user focusing primarily on competency C addressing but not focusing as heavily on competency B and spending only minimal time on competency A. The results of processing competency differences in a method such as shown in could also be applied by manipulating data associated with a user such as a user model which could be used to project the user s level in various competencies at various points in time. For example if a user s expected level in a given competency is determined e.g. by subtracting an expected level change from a base level using a model of the form E L e where E L is the expected value of the change in the user s level for the competency t is the length of time over which the expected change in the user s level would take place and s is a retention factor for the user which is specific to the competency then application of the results could include modifying e.g. using curve fitting algorithms user specific variables from the model e.g. s which is shown in the model or coefficients which could be applied to the listed parameters which are not so that projections made using the model will more accurately reflect the collected data. Other approaches to processing and applying competency differences e.g. requiring a repetition of one or more interactions if a degradation is severe enough or different enough from what would have been expected using a model based on the user s prior performance that it appears more likely to have resulted from a measurement error than to accurately reflect a change in the user s level for the relevant competency are also possible and will be immediately apparent to those of ordinary skill in the art in light of this disclosure. Accordingly the discussion of the processing and application steps set forth above like the remaining discussion of the process of should be understood as being illustrative only and should not be treated as limiting.

Turning now to that figure depicts a potential format which could be used to represent competency data and a potential approach which could be used to process that competency data in a method such as shown in . Specifically illustrates an exemplary format for a competency vector in which data for a specific competency is represented as a combination of an ability e.g. ability to detect a murmur a score e.g. a z score or score expressed on a scale of 0 100 and a weight e.g. 0.3 on a scale of 0.1 1.0 . In embodiments representing competency data using a vector such as shown in the ability will preferably identify the competency the vector relates to the score will preferably reflect the user s performance and the weight will preferably reflect the relative significance of the assessment used to generate the score. For example a 10 question multiple choice quiz might be given a weight of 0.1 while the exam following a two day intensive seminar might be given a weight of 1.0.

As shown in competency vectors such as discussed above can be organized into arrays which could be stored in electronic competency records ECRs . These arrays can include both vectors storing competency data for a user at a certain time e.g. a first array could include competency data showing the user s level at time T 1 and a second array could include competency data showing the user s level at time T 2 as well as null vectors e.g. vectors storing a placeholder for the ability represented by the vector and a zero for the vector s weight for competencies which were not implicated by an interaction at the time associated with an array. For example depicts a first array which includes vectors for competencies A B C E F and G indicating that each of competencies A B C E F and G were implicated by an interaction at time T 1 but that competency D was not indicated at that time. Similarly the second array depicted in includes vectors only for competencies A B C D E and G indicating that the user s interaction at time T 2 implicated competencies A B C D E and G but not competency F. As shown in fact that there is not a one to one correspondence between the competencies implicated by the interactions at times T 1 and T 2 need not prevent the competency data such as shown in the arrays from being processed.

With respect to the specific processing illustrated in in that figure weighted means of the score components of the competency vectors in the depicted arrays are used to estimate the user s current level in the relevant competencies e.g. the weighted mean of the scores for competency A at times T 1 and T 2 is used as an estimate of the user s actual level for competency A at the time the processing takes place which may be the same as or after time T 2 . These estimated current levels are then subtracted from the levels represented by the scores from the array prior to the most recent array being processed to obtain a change in the user s score between the time associated with that array i.e. time T 1 and the time the processing takes place. For example if we have two vectors for competency A the first having a score value of 90 on a scale of 1 100 and a weight value of 0.30 on a scale of 1 1.0 and the second having a score value of 80 on a scale of 0 100 and a weight value of 0.20 on a scale of 0 1.0 then the user s current level for competency A can be estimated at 0.6 90 0.4 80 0.4 0.6 86 where 0.6 0.3 0.2 0.3 and 0.4 0.2 0.2 0.3 . This current level can then be subtracted from the score from the earlier of the two arrays to obtain an estimated change in the user s level of 90 86 4. This estimated change in the user s level and or the user s estimated current level can be fed to a process in which they are applied for the user such as described above in the context of .

Turning now to that figure depicts an approach to applying processing such as shown in to an arbitrary number of arrays of competency vectors. Specifically illustrates a scenario in which an array of competency data for an interaction at time T 1 is blended with at least one array of competency data for an interaction which took place prior to time T 1. This blending can be performed for example by creating blended competency vectors having the form shown in in which the score can be set equal to the weighted average of the scores for that competency in the arrays being blended and the weight can be set equal to the sum of the weights from the vectors for that competency in the arrays being blended. These blended competency vectors can be collected in a blended array which can be processed with the array of competency data for the interaction at time T 2 in the same manner as discussed previously but with the blended array taking the place of the array of competency data for the interaction at time T 1. That is for each competency for which data is available the user s level in that competency at the time the processing takes place can be estimated by taking the weighted mean of the scores for that competency in the blended array and the most recent array and the change in the user s level between the time of the most recent vector represented in the blended array which in this example would be time T 1 could be determined by subtracting that weighted mean from the that competency from the score for that competency in the blended array . These results can then be provided to a process which would apply them for the user as discussed previously in the context of .

Turning now to that figure illustrates a potential high level architecture for a system which could be used to customize a planned simulation activity e.g. an interaction with a simulator such as illustrated as taking place at times T 1 and T 2 in the method of for a user. As shown in such a system could include an ECR database storing one or more electronic competency records for a user which electronic competency records will preferably comprise arrays of competency vectors such as described in the context of . In order to customize the planned simulation activity a system following the architecture of could retrieve the user s data from those competency records and provide it as parameters for rules in a user model which would be evaluated to determine the user s need for instruction in a particular competency by a computer configured to act as a rules engine and which might also be configured to perform any incidental processing which might be necessary for that evaluation such as generating estimated current competency levels if such levels were required by the rules and were not already available in the data from the ECR database . As an example of the types of rules such a user model could contain it is possible that a system following the architecture of could be implemented with a user model comprising rules defined by a certification body in charge of continuing education requirements for a user. In this type of case the evaluation of the rules using data on the user from the ECR database could be performed to identify when and in what competencies the user should be required to undergo instruction in order to maintain his or her certification.

To provide a concrete illustration if data from the ECR database indicated that the user s level for the ability to correctly diagnose a patient with heart failure had fallen from 90 to 86 between his or her two most recent assessments and the user model included a rule for that competency indicating that additional instruction should be required if a user s level dropped below 80 on the relevant scale the evaluation of the rules with the user s data from the ECR database could indicate that no further study in that competency was necessary as the user s level had remained above the remediation threshold despite the observed deterioration. Alternatively if the user s level for that same competency had dropped by 40 points from 90 to 50 then in this illustration the evaluation of the rules with the user s data would indicate that the user s level for the ability of correctly diagnosing a patient with heart failure was insufficient and or that he or she required additional instruction in that competency.

Of course it should be understood that while evaluation of rules from a user model using data regarding the user from an ECR database could provide an indication of the user s level need for additional instruction in each competency for which data is available it is possible that a system such as shown in could be used to customize a simulation which even with maximum customization would not implicate all competencies where the user might need additional instruction. For example if a system such as shown in was used to customize a planned simulation activity designed to instruct the user in performance of a specific cardiac exam procedure then that simulation probably would not be and would not be expected to be appropriate for assessing or providing instruction to the user in the competency of setting broken bones. In such a case a system as shown in could use a competency filter to filter data from the ECR database before that data was used in evaluating the rules from the user model or to filter the results of the evaluation of the rules from the user model so that only data on competencies which could potentially be implicated by the planned simulation activity would considered when customizing the simulation for the user.

Once the data regarding the user s competencies which would be used for customizing the simulation had been obtained e.g. by evaluation of rules from a user model and or application of a competency filter to the results of that evaluation that data would be used to determine a simulator model which would control the user s experience in the simulation. For example if the evaluation of the rules in the user model indicates that the user is severely lacking in the ability to identify a systolic murmur with a stethoscope i.e. competency A from the example discussed in the context of a system following the architecture of could be configured to ensure that the simulation was based on a simulator model which would provide ample opportunities for practice and instruction on that competency. A system following the architecture of could also be configured to use data regarding a user s pervious interactions from a model history database to minimize or eliminate repetition of individual simulated patient cases. Thus if a planned simulation activity involves the user interacting with a simulator e.g. a mannequin which could be examined in the same manner as a live patient which would generate appropriate findings e.g. heart sounds for a simulated case then the simulation activity could be customized for the user by identifying e.g. by analysis of metadata from one or more stored simulated cases with which the planned simulation activity could be performed those cases which were most suitable for instructing the user in the competencies where he or she required instruction and which the user had not or not recently previously been exposed to then providing one of those cases to the simulator . After the simulation activity is complete the results of that activity could then be fed back the ECR database e.g. in the form of an array of competency vectors for use in customizing future simulations.

As a simple illustration of how a user interaction with a simulator as described in the context of could take place consider the case of an assessment method which applies a binary pass fail assessment of a mix of competencies associated with a simulated patient case. In this type of pass fail implementation if a user misdiagnoses the simulated patient case then all of the competencies associated with the case are given a fail score. Subsequent patient cases can then be generated by the simulator to address each of the failed competencies with equal weight. Of course it should be understood that the disclosed technology is not limited to being implemented in this relatively simple manner and that implementations which are designed with objectives other than minimization of required computational resources are likely to be more sophisticated than the binary pass fail assessment method described above. For example systems following the architecture of could be implemented to support functionality such as providing feedback with different weights for different competencies based on the simulated case presented to the user and or individually measuring user competencies and doing so on a numeric scale or other scale capable of reflecting more fine tuned distinctions than simply pass fail status based on what symptoms a user was able to detect or the conclusions drawn from those symptoms.

Variations are also possible in aspects and features other than the complexity of particular implementations of the teachings of or other aspects of this disclosure . For example a system following an architecture such as shown in could be configured to determine a user s need for instruction in various competencies not based on the user s current need but based on whether the user could be expected to have such a need at some point in the future. To illustrate consider a case where a certification body has a requirement that all certified individuals maintain a skill level of at least 80 points on a 100 point scale for a particular competency. In such a case if a system following the architecture of is being used to customize a planned simulation activity and the user for whom the simulation activity is being customized is not scheduled for further instruction at any time in the six month period following the planned simulation activity a rule could be implemented that the user should be treated as needing instruction in the particular competency if his or her skill level in that competency could be expected to fall below 80 points on the 100 point scale at any time in the six month period following the planned simulation activity regardless of his or her skill level at the time the planned simulation activity would take place.

As an example of another type of variation on how the teachings of this disclosure could be implemented consider variations on a user model such as shown in the architecture of . The discussion of explained that a user model could comprising rules for determining the competency or competencies in which a user required instruction. However it is also possible that a user model could comprise models used in generating estimated skill levels for the user e.g. a model of the form E L e discussed in the context of with the rules for determining whether the results of those models should be treated as indicating that the user needs additional instruction being kept entirely separate e.g. in a certification rules database . This type of user model i.e. one comprising models used in generating estimated skill levels could be implemented in a variety of different ways such as in user models comprising different models for different competencies e.g. each competency would correspond to a model of the form E L e where the value of s would vary from competency to competency or in user models with different types of models for selectively generating skill estimates based on the period for which the estimate is generated e.g. a user model could include a model of the form E L efor generating estimates for values oft great enough that the estimate would be reflective of the user s long term memory and could also include a model of the form c pt pt pt . . . pt pfor values oft small enough to be contained within a single training session . In this way it is possible that a single user model could potentially be used for both projecting long term skill decays for the purpose of scheduling instruction as well as short term learning for the purpose of controlling an intelligent tutoring system.

Further variations are also possible and will be immediately apparent to one of ordinary skill in the art in light of this disclosure. For example while the discussion of focused primarily on applications where the disclosed technology was used to customize or performed calculations based on interactions between a user and a simulator the techniques illustrated in and disclosed in the associated text are not limited to being used in the context of simulations and could be equally applied to non simulator based techniques of instruction and assessment. Similarly while the discussion of focused on customizing a particular simulation for a user it is possible that a system implemented according to the architecture shown in that figure could use the results of a single application of user data to rules in customizing multiple simulated activities for a user e.g. if the application of rules such as described in the context of indicates that a user requires instruction in competencies other than those implicated by a planned simulation activity this information can be saved and used to schedule and or customize future activities which do implicate those competencies . Accordingly the protection provided by this document should not be limited to the material explicitly disclosed. Instead such protection should be understood to be defined by the claims when the terms in those claims which are explicitly defined under the Explicit Definition heading are given their explicit definitions and when all other terms are given their broadest reasonable interpretation as shown by a general purpose dictionary. To the extent that the interpretation which would be given to the claims based on the above disclosure is in any way narrower than the interpretation which would be given based on the explicit definitions under the Explicit Definition heading and the broadest reasonable interpretation as provided by a general purpose dictionary the interpretation provided by the explicit definitions under the Explicit Definitions heading and broadest reasonable interpretation as provided by a general purpose dictionary shall control and the inconsistent usage of terms in the specification shall have no effect.

When used in the claims based on should be understood to mean that something is determined at least in part by the thing that it is indicated as being based on. When something is completely determined by a thing it will be described as being based EXCLUSIVELY on the thing.

When used in the claims a computer should be understood to refer to a device or group of devices which is capable of performing one or more logical and or physical operations on data to produce a result.

When used in the claims computer executable instructions should be understood to refer to data whether stored as hardware software firmware or some other manner which can be used to specify physical or logical operations to be performed by a computer.

When used in the claims data should be understood to refer to information which is represented in a form which is capable of being processed stored and or transmitted.

When used in the claims data structure should be understood to refer to an organization used for storing data so that the data can be accessed and processed in appropriate ways. The term data structure can also refer to concrete embodiments of the same e.g. both a class and an instance of the class .

When used in the claims local memory should be understood to refer to a device for storing data which is in a location physically proximate i.e. accessible without communicating through a network to the device or devices which retrieve that data. Examples of local memory include random access memory RAM flash drives hard disks and CD ROMS.

When used in the claims means for generating an estimated user level should be understood as a limitation set forth as a means for performing a specified function as permitted by 35 U.S.C. 112 f with the specified function being generating an estimated user level and the corresponding structure including a computer configured to 1 perform an algorithm comprising inserting user and or time specific values for the parameters of into one or more of the models discussed in the context of variations on the user model of and calculating the estimated value using those models and or 2 perform an algorithm comprising inserting user specific values into the parameters for weighted average calculations described in the contexts of and calculating the estimated values by calculating the weighted averages with the user specific values.

When used in the claims metadata refers to data which functions as a description or definition for some other data.

When used in the claims metadata scheme refers to an organization or structure for information in a database which is expressed through metadata though that metadata can also include other information besides the scheme .

When used in the claims module refers to a set of data including computer executable instructions which is used to configure a computer to perform a specific task or function.

When used in the claims reflecting in the context of information reflected in data should be understood to indicate that the information reflected can be retrieved from the data even though the information may not be explicitly specified by the data for example actual numeric data values as well as information about those values determined by the order in which they are stored in a medium would be considered to be reflected in the data .

When used in the claims set of computer executable instructions should be understood to refer to an identifiable group of computer executable instructions. Examples to illustrate the meaning of a set of computer executable instructions include a program and modules within a program.

When used in the claims set of data should be understood to refer to an identified grouping category or class or data. Examples to illustrate the meaning of a set of data include files and instantiated classes.

