---

title: Fault-tolerant communications in routed networks
abstract: A method for providing fault-tolerant network communications between a plurality of nodes for an application, including providing a plurality of initial communications pathways over a plurality of networks coupled between the plurality of nodes, receiving a data packet on a sending node from the application, the sending node being one of the plurality of nodes, the data packet being addressed by the application to an address on one of the plurality of nodes, and selecting a first selected pathway for the data packet from among the plurality of initial communications pathways where the first selected pathway is a preferred pathway.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09253293&OS=09253293&RS=09253293
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09253293
owner_city: Redmond
owner_country: US
publication_date: 20141230
---
This Application is a Continuation of and claims benefit from U.S. patent application Ser. No. 13 540 548 that was filed on Jul. 2 2012 and that is a Continuation of and claims benefit from U.S. patent application Ser. No. 12 884 101 U.S. Pat. No. 8 369 208 that was filed on Sep. 16 2010 Issued Feb. 5 2013 and that is a Continuation of and claims benefit from U.S. patent application Ser. No. 11 275 185 U.S. Pat. No. 7 821 930 that was filed on Dec. 16 2005 Issued Oct. 26 2010 and that claims priority from U.S. Provisional Patent Application No. 60 716 122 that was filed on Sep. 12 2005 each of which is incorporated herein by reference in its entirety.

In a computer networking environment multiple nodes may communicate with each other over a network. Should the network experience a failure communication between the nodes may be disrupted.

The following presents a simplified summary of the disclosure in order to provide a basic understanding to the reader. This summary is not an extensive overview of the disclosure and it does not identify key or critical elements of the invention or delineate the scope of the invention. Its sole purpose is to present some concepts disclosed herein in a simplified form as a prelude to the more detailed description that is presented later.

The following examples provide computer network communication fault tolerance via unique network stack architectures requiring minimal consideration by application software operating on networked nodes.

Many of the attendant features will be more readily appreciated as they become better understood by reference to the following detailed description considered in connection with the accompanying drawings.

The detailed description provided below in connection with the appended drawings is intended as a description of the present examples and is not intended to represent the only forms in which the present examples may be constructed or utilized. The description sets forth the functions of the examples and the sequence of steps for constructing and operating the examples. However the same or equivalent functions and sequences may be accomplished by different examples.

Although the present examples are described and illustrated herein as being implemented in a computing and networking system the system described is provided as an example and not a limitation. As those skilled in the art will appreciate the present examples are suitable for application in a variety of different types of computing and networking systems.

The term driver as used herein refers to a control program or the like that enables a node to operate with a particular device such as a printer network interface card or other computer subsystem or to operate with one or more programs such as network stacks protocol drivers and or other computer software or firmware or the like. For example a protocol driver typically operates with a network stack.

An application may pass a packet of data to a stack destined for an application operating on another node. In this case the data is said to flow down the stack and is sent out over a network. Data received by a node is said to flow up the stack until it reaches the destined application. Such networking systems are well known to those skilled in the art.

In one example a stack is based on the Network Driver Interface Specification NDIS which defines a standard application programming interface API for network interface cards NICs such as NIC and abstracts the network hardware from network drivers. NDIS also specifies a standard interface between layered network drivers thereby abstracting lower level drivers that manage hardware such as a miniport driver from upper level drivers such as protocol drivers. Multiple NDIS conforming protocol drivers may co exist on a single node. Also if a node includes multiple NICs perhaps because it is connected to more than one network NDIS routes network traffic to the appropriate NIC via its associated driver as indicated by the traffic. An illustration of NDIS is shown in . Other networking stack standards technologies and or architectures such as the Open Data Link Interface ODI the Data Link Provider Interface DLPI the Uniform Driver Interface UDI or other technologies may be used with the following examples as well with appropriate modifications as would be understood by those skilled in the art. As a matter of convenience NDIS and NDIS terminology is used with examples throughout this description but other standards technologies and or architectures may be used in all of these examples with appropriate modifications unless otherwise noted.

As shown in coupled to NIC via NDIS is miniport driver . A miniport driver typically interacts with NDIS via an NDIS miniport interface . The miniport driver may be associated with NIC and may manage its operations including sending and receiving data through the NIC. The miniport driver typically interfaces with higher level drivers such as intermediate driver and protocol driver . A miniport driver is considered a NIC driver. NIC miniports generally perform those hardware specific operations needed to manage a particular NIC with common or NIC independent functionality provided by NDIS. A node may include multiple NICs with each NIC generally having an associated NIC driver. Some examples in this description describe the use of miniport drivers but as will be understood by those skilled in the art any type of NIC driver or the like may be used in these examples unless otherwise noted.

Protocol or transport driver couples to NDIS via an NDIS protocol interface . Protocol drivers or transport protocol drivers generally provide the functionality to create send and receive packets of data that are sent from one node to another through the network stack and over a network. As known to those skilled in the art a common reliable or guaranteed delivery transport protocol may be TCP IP Transmission Control Protocol Internet Protocol . UDP User Datagram Protocol over IP may be a common unreliable or non guaranteed delivery protocol. TCP UDP and or other protocols such as IPX SPX Internet Packet Exchange Sequenced Packet Exchange may be used with the following examples unless otherwise noted.

NDIS intermediate IM drivers are shown between protocol drivers and NDIS NIC miniports in . To protocol drivers IM drivers appear to be NDIS miniports while to NIC drivers they look like protocol drivers. Data packets flowing up or down the network stack pass through the IM driver which may ignore inspect filter forward redirect and or modify the data packets. An intermediate driver may also be known as a filter driver.

As used herein the term node refers to any computing system device or process that is uniquely addressable or otherwise uniquely identifiable in a network e.g. network and that is operable to communicate with other nodes in the network. For example and without limitation a node may be a personal computer a server computer a hand held or laptop device a tablet device a multiprocessor system a microprocessor based system a set top box a consumer electronic device a network PC a minicomputer a mainframe computer or the like. A non limiting example of a node in the form of a computing system is set forth below with respect to .

Networks and may be the same network may exist on the same or different subnets may be logically or physically coupled or isolated from each other may use similar or different networking technologies etc. In particular networks and may be routed networks that is networks including routers that forward routable protocol packets. Routable protocols are typically considered communications protocols used to route data from one network to another. An example of a routable protocol is TCP IP. Sending a data packet in a routable fashion implies using a mutable transport protocol to format and or send the data packet. Those skilled in the art will be familiar with mutable protocols and routing network topologies systems and architectures.

In one example networks and may be independent of each other such that if there is a problem or failure with one network it is unlikely to affect the operational status of the other. In other examples three or more networks may be used. In examples where greater degrees of fault tolerance are desired a larger number of networks along with the associated connectivity of nodes to those networks including a similar number of NICs installed on a node may be employed.

NIC associated with node is shown with an example address of 172.56.48.37 and is coupled to network 1 . NIC also associated with node is shown with an example address of 197.71.48.38 and is coupled to network 2 . NIC associated with node is shown with an example address of 172.56.48.38 and is also coupled to network 1 . NIC also associated with node is shown with an example address of 197.71.48.39 and is also coupled to network 2 . These addresses may in practice be IPv4 or IPv6 addresses or the like or any other type of network address typically related to the protocol being used.

Each node may include one or more NICs. Arrows and also shown in as arrow represent a first communications route or pathway Path A over network 1 between nodes and . Arrows and represent a second communications route or pathway Path B over network 2 between nodes and . In practice there may be one or more pathways over one or more networks between the two or more nodes in environment . The term pathway as used herein is defined as a communications route or communications link between nodes in a network. Such a route or link may be dynamic in that the exact route between nodes may change over time.

Blocks and represent an application and a network stack including a fault tolerant communications FT driver provided on each of nodes and . The FT driver of block is shown with an example address of 10.0.0.1 and the FT driver of block is shown with an example address of 10.0.0.2. These addresses are typically considered virtual addresses. These addresses may be IPv4 or IPv6 addresses or the like or any other type of network or communications address. FT drivers may or may not have virtual addresses as shown in the various examples below.

A fault tolerant network stack is a network stack including an FT driver such as NETFT described below in connection with or the like. An FT driver such as NETFT operating combination with a network stack typically allows nodes to communicate with each other via one or more communications paths such as Path A and Path B over one or more networks. Should any of these communications paths fail the nodes may continue communicating given at least one operational pathway. Such a pathway failure may result from failure of a NIC or failure of any element of a pathway including connections cabling or other communications media including radio frequency RF or infrared IR and the like routers hubs switches firewalls Internet Service Providers ISPs power failure to any node device or system of the network or the like.

In one example a communications failure may result in a plug and play PnP event. A PnP event may indicate the removal of a NIC from its node or to a media sense change. A media sense disconnect for example typically results from a failure that causes the NIC to lose the signal or carrier on the network media such as a network cable RF or IR link or the like. A media sense disconnect may be caused by disconnecting the network cable or carrier from the NIC or powering off the other end of the cable a hub or switch for example . A media sense connect is typically the opposite such as reconnecting the cable re powering on the hub or switch or the like. These types of events also known as connectivity events are generally local events in that they occur on or are proximate to the node itself. Such local connectivity events typically result in an event indication such as a PnP event or the like on a node.

In another example a communications failure may be detected by using heartbeat packets sent between nodes. Failure of such a heartbeat packet may indicate failure of a pathway between nodes. Heartbeat packets tend to be marked such that the FT driver can detect them upon receipt and remove them for the packet flow being passed up the network stack. In one example heartbeat packets may be implemented using route control protocol RCP by forming RCP packets. Such heartbeat packets may be used to validate the end to end operational status of a pathway. That is by sending a heartbeat packet from node over Path A to node and by node receiving a reply to the sent heartbeat packet from node it is generally considered that Path A is end to end operational. Should the heartbeat fail no heartbeat reply received in response to the heartbeat sent such a failure may indicate that Path A is not operational perhaps due to failure of some element of network 1 such as a router switch connection or the like or due to the target node itself failing. In particular node may have an operational NIC and valid media sense indicating that it is properly connected to the network but may still detect a heartbeat failure due to some network or system failure down the line.

In one example implementation of the FT driver as an NDIS miniport driver provides at least two benefits. First because such an FT driver generally sits below any protocol drivers in the stack protocol reliability tends to be provided by any higher level reliable protocol driver which is generally unaffected by the addition of link level fault tolerance provided by an FT driver. For example when using an FT driver in combination with a protocol driver such as a TCP IP driver the FT driver will typically detect failed pathways and route data packets over end to end operational pathways independent of any protocol driver. Should any packet loss occur due to switching pathways the TCP IP protocol driver which generally sits above the FT driver in the stack tends to detect such losses and perform any retry or resend operations to ensure that the reliable protocol succeeds in packet delivery.

A second benefit of placing the FT driver below the protocol driver in the stack is that typically no degradation of the routability of the protocol is introduced. When so configured any tunneling operation that an FT driver performs on a data packet may employ a routable protocol such as TCP or UDP thus ensuring that such data is routable in addition to being link level fault tolerant. To routeably tunnel a data packet is to tunnel a data packet using a routable protocol.

NETFT as a part of a network stack generally couples to a software application via NDIS or other network stack interfaces. Such a coupling generally enables applications to send and receive data packets over networks coupled to the bottom of the stack. In one example applications tend to use a virtual address as the source address for their data packets this virtual address being known to NETFT and mapped and communicated to other nodes on the network as described below. As shown in NETFT includes a miniport adapter also known as a processing element a routing database and one or more route monitor adapters and tunnel adapters .

Tunnel adapter typically represents one NIC on the local node or in some instances a virtual NIC and maintains a socket used to tunnel packets to NETFT on the target node. There is typically one tunnel adapter associated with each NIC on the local node with each NIC being coupled to a network providing a pathway to another node. Each network may or may not be isolated from any other network. A tunnel adapter is typically associated with a tunneling protocol driver and tunnels data packets through a tunneling protocol to and from its associated NIC via NDIS interfaces. One example of a tunneling protocol is UDP. Alternatively other protocols such as TCP IPX or SPX may be used for tunneling. A tunnel adapter may become inactive should the associated NIC or media connection become inactive.

A routing database as implemented in NETFT is typically a simple data structure that may be located in system memory that includes entries mapping a virtual address for one or more pathways to a similar NETFT on another node. In one example mappings are represented by route monitor adapters such as route monitor adapter which are typically associated with a tunnel adapter such as tunnel adapter . Generally a routing database such as routing database will include one set of route adapters for each tunnel adapter each route adapter being associated with a different target node reachable over the pathway associated with the tunnel adapter. When using TCP IP for example the database may map a destination virtual address to a physical address of a specific remote node.

A routing database may also include priority information for each pathway. Such priority information may be used to indicate a preferred or primary pathway to another node and or may include information about pathway speed or other characteristics. A preferred pathway is the pathway calculated by NETFT to be used over other possible pathways when possible based on priority information and or pathway status. Priority information may alternatively indicate a round robin load balancing algorithm for making use of multiple pathways to a target node to load balance traffic over the pathways or enable some other pathway prioritization scheme.

Referring to table 1 and table 1 shows an example mapping table as might be used by NETFT operating on node . Table 1 shows virtual destination address 10.0.0.2 the virtual address as shown for node mapped to physical address 172.56.48.38 associated with Path A to node and physical address 197.71.48.39 associated with Path B to node . Path A is shown with first priority and Path B with second priority. Table 1 is provided as an example and is not intended to be limiting.

When sending data from node to node such a mapping table is typically used to tunnel a packet destined to virtual destination address 10.0.0.2 by forwarding the packet via a tunneling protocol such as UDP to physical destination address 172.56.48.38 thus tunneling the packet from node over Path A to node . One such mapping table may be created in the routing database for each set of pathways established between two nodes. Such a mapping table may be implemented in various forms use various priority schemes and or store other information including pathway operational status. The mapping table structure number of pathways address formats etc. shown in Table 1 are provided as examples and are not intended to be limiting.

The local node virtual address remote node virtual addresses and priority and other pathway information are typically provided to nodes by an out of band mechanism and passed to NETFT via its NDIS interfaces. This out of band mechanism may be as simple as a systems administrator using a management application to specify the information or it may be an automated system or the like. Such out of band mechanisms are well known to those skilled in the art.

As shown in miniport adapter also known as the processing element of the driver typically parses a data packet flowing down the network stack examines the destination virtual address of the packet and uses information from the routing database to determine which tunnel adapter to tunnel the data packet through. Incoming packets or data packets flowing up the stack are forwarded up the stack toward their destination virtual address the tunneling protocol having previously removed the tunneling packet headers. In particular the tunnel adapter inspects incoming packets and forwards heartbeat packets to a route monitor adapter and forwards other packets up the stack via a miniport adapter . Aspects of tunneling data packets using a tunneling protocol and how protocol headers are added and removed by protocol drivers is well known to those skilled in the art.

Route monitor adapter typically represents a remote node accessible over a specific pathway identified by an associated tunnel adapter. The route monitor adapter will typically provide a physical address for the remote node the physical address also corresponding to a specific pathway to the remote node. This physical address is typically used for mappings in a routing database . There is typically one route monitor adapter for each distinct pathway to a remote node each route monitor adapter being associated with a tunnel adapter representing a pathway. In one example referring back to node is shown coupled to node over two pathways one through network 1 Path A and the other through network 2 Path B . NETFT operating on node may include a first route monitor adapter RMA A providing remote node s physical address 172.56.48.38 associated with its NIC . RMA A may be associated with a first tunnel adapter TA A on node which may be associated with Path A. NETFT on node may also include a second route monitor adapter RMA B providing remote node s second physical address 197.71.48.39 associated with its NIC . RMA B may be associated with a second tunnel adapter TA B on node which may be associated with Path B.

Referring to route monitor adapter typically monitors the health of a pathway to a remote node and indicates a failed or non operational pathway in the routing database . Monitoring typically includes receiving any event indications and or noting any heartbeat failures and updating the database accordingly. In one example an event indicating the failure of a NIC or media connection may result in the disabling of the tunnel adapter . In another example a heartbeat failure may result in the disabling of the route monitor adapter associated with the specific remote node for which the heartbeat failed.

Application may send a data packet through NETFT via the TCP protocol as shown in . Alternatively UDP or any other protocol may be used. Also as shown NETFT may use the UDP protocol to tunnel packets to the target node. Alternatively TCP or any other protocol may be used for tunneling. Further alternate examples may not make use of miniport adapters or NDIS drivers but may use other mechanisms or architectures to perform similar functions. Finally the various elements of the network stack and the like may operate in either a User Mode or a Kernel Mode either as shown or otherwise or on systems with or without equivalent modes of operation.

Failure indicates a failure of the network media coupling with NIC1 of node . This failure may be due to a cable being disconnected from NIC 1 from the cable becoming disconnected from some device of network 1 from the device the cable is connected to on the network side being powered down or failing or the like. This type of failure may also be detected by NETFT via an event indication such as a PnP event or the like and or a heartbeat failure and an alternate pathway selected.

Failure indicates a failure of some type within network resulting in data packets failing to reach destination node . In this failure case sending node may still be coupled to network with a proper media sense indication yet Path A has become disrupted further down the network. Given such a failure NETFT operating on sending node may not detect the failure via an event indication if local indications show connectivity to the network as good but may detect the failure via Path A heartbeat failure.

Failure of link and failure of NIC 1 operating on receiving node tend to be similar to the corresponding failures shown for node . But these failures not being local to node may not be detected via event indications but may be detected via heartbeat failure.

Any of these failures and other failures may be detected by NETFT operating on node and result in it selecting an alternate end to end operational pathway such as Path B over network 2 . In this example as shown in NETFT tunnels data down alternate path and over network 2 to receiving node . Should the failure condition be corrected and end to end operational status restored on Path A NETFT operating on sending node may detect the recovery and again make use of Path A. Further any responses from node back to node may be tunneled in a similar fault tolerant fashion by NETFT.

Protocol adapter generally couples to miniport adapter also known as the processing element of the driver and to a NIC miniport adapter not shown . There is typically one protocol adapter for each NIC installed on the node each protocol adapter being associated with a NIC via its NIC adapter. As each protocol adapter is associated with a NIC it is also associated with the pathway coupled to the NIC. The protocol adapter is operable to accept data packets from an application via the processing element and pass the data packets to the associated NIC without the need for tunneling.

Processing element typically parses a data packet flowing down the network stack examines the physical destination address of the packet and uses information from the routing database to determine if the packet can be forwarded over a protocol adapter or needs to be tunneled over a tunnel adapter to the target node. Generally if the pathway indicated by the physical destination address is end to end operational the data packet will be sent over that pathway. Otherwise and alternate pathway may be selected over which the packet may be tunneled.

In this example the routing database maintains mappings of physical destination addresses and pathways along with priority and other information as described above. An example routing database mapping table is shown in Table 2.

Referring to Table 2 and Table 2 shows an example mapping table as might be used by NETFT operating on node . Table 2 shows a mapping including physical destination address 172.56.48.38 associated with Path A to node and the physical destination address 197.71.48.39 associated with Path B to node . Path A is shown with first priority and Path B with second priority.

When sending data from node to node such a mapping table is typically used in forwarding or tunneling if needed a data packet being sent to physical destination address 172.56.48.38 of node . If the pathway associated with the original destination address is operational the data packet tends to be forwarded to the destination node without tunneling. If that pathway in not available then the data packet is sent over the alternate pathway to physical destination address 197.71.48.39 of node via tunneling. Other aspects of NETFT are generally similar to those of NETFT as described for .

Application may send a data packet through NETFT via the TCP protocol as shown in . Alternatively UDP or any other protocol may be used. Also as shown NETFT may use the UDP protocol to tunnel packets to the target node. Alternatively. TCP or any other protocol may be used for tunneling. Further other examples may not make use of NDIS drivers but may use other mechanisms or architectures to perform similar functions. Finally the various elements of the network stack and the like may operate in either a User Mode or a Kernel Mode either as shown or otherwise or on systems with or without equivalent modes of operation.

Failure indicates a failure of the network media coupling with NIC1 of node . This failure may be due to a cable being disconnected from NIC 1 from the cable becoming disconnected from some device of network 1 from the device the cable is connected to on the network side being powered down or failing or the like. This type of failure may also be detected by NETFT via an event indication such as a PnP event or the like and or a heartbeat failure and an alternate pathway selected.

Failure indicates a failure of some type within network resulting in data packets failing to reach destination node . In this failure case sending node may still be coupled to network with a proper media sense indication yet Path A has become disrupted further down the network. Given such a failure NETFT operating on sending node may not detect the failure via an event indication such as a PnP event or the like if local indications show connectivity to the network as good but may detect the failure via Path A heartbeat failure.

Failure of link and failure of NIC 1 operating on receiving node tend to be similar to the corresponding failures shown for node . But these failures not being local to node may not be detected via event indications but may be detected via heartbeat failure.

Any of these failures and other failures may be detected by NETFT operating on node and result in it selecting an alternate end to end operational pathway such as Path B over network 2 . In this example as shown in NETFT tunnels data down alternate path and over network 2 to receiving node . Should the failure condition be corrected and end to end operational status restored on Path A NETFT operating on sending node may detect the recovery and again make use of Path A. Further any responses from node back to node may be forwarded or tunneled depending on the operational status of Path A and Path B in a similar fault tolerant fashion by its NETFT.

Computing environment generally includes a general purpose computing system in the form of a computing device coupled to various peripheral devices and the like. System may couple to various input devices including keyboards and pointing devices such as a mouse or trackball via one or more I O interfaces . The components of computing device may include one or more processors including central processing units CPU graphics processing units GPU microprocessors uP and the like system memory and a system bus that typically couples the various components. Processor typically processes or executes various computer executable instructions to control the operation of computing device and to communicate with other electronic and or computing devices systems or environment not shown via various communications connections such as a network connection or the like. System bus represents any number of several types of bus structures including a memory bus or memory controller a peripheral bus a serial bus an accelerated graphics port a processor or local bus using any of a variety of bus architectures and the like.

System memory may include computer readable media in the form of volatile memory such as random access memory RAM and or non volatile memory such as read only memory ROM or flash memory FLASH . A basic input output system BIOS may be stored in non volatile or the like. System memory typically stores data computer executable instructions and or program modules comprising computer executable instructions that are immediately accessible to and or presently operated on by one or more of the processors .

Mass storage devices and may be coupled to computing device or incorporated into computing device via coupling to the system bus. Such mass storage devices and may include a magnetic disk drive which reads from and or writes to a removable non volatile magnetic disk e.g. a floppy disk and or an optical disk drive that reads from and or writes to a non volatile optical disk such as a CD ROM DVD ROM . Alternatively a mass storage device such as hard disk may include non removable storage medium. Other mass storage devices may include memory cards memory sticks tape storage devices and the like.

Any number of computer programs files data structures and the like may be stored on the hard disk other storage devices and system memory typically limited by available space including by way of example operating systems application programs data files directory structures and computer executable instructions.

Output devices such as display device may be coupled to computing device via an interface such as video adapter . Other types of output devices may include printers audio outputs tactile devices or other sensory output mechanisms or the like. Output devices may enable computing device to interact with human operators or other machines or systems. A user may interface with computing environment via any number of different input devices such as a keyboard mouse joystick game pad data port and the like. These and other input devices may be coupled to processor via input output interfaces which may be coupled to system bus and may be coupled by other interfaces and bus structures such as a parallel port game port universal serial bus USB fire wire infrared port and the like.

Computing device may operate in a networked environment via communications connections to one or more remote computing devices through one or more local area networks LAN wide area networks WAN storage area networks SAN the Internet radio links optical links and the like. Computing device may be coupled to a network via network adapter or the like or alternatively via a modem digital subscriber line DSL link integrated services digital network ISDN link Internet link wireless link or the like.

Communications connection such as a network connection typically provides a coupling to communications media such as a network. Communications media typically provide computer readable and computer executable instructions data structures files program modules and other data using a modulated data signal such as a carrier wave or other transport mechanism. The term modulated data signal typically means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communications media may include wired media such as a wired network or direct wired connection or the like and wireless media such as acoustic radio frequency infrared or other wireless communications mechanisms.

Those skilled in the art will realize that storage devices utilized to provide computer readable and computer executable instructions and data can be distributed over a network. For example a remote computer or storage device may store computer readable and computer executable instructions in the form of software applications and data. A local computer may access the remote computer or storage device via the network and download part or all of a software application or data and may execute any computer executable instructions. Alternatively the local computer may download pieces of the software or data as needed or distributively process the software by executing some of the instructions at the local computer and some at remote computers and or devices.

Those skilled in the art will also realize that by utilizing conventional techniques all or portions of the software s computer executable instructions may be carried out by a dedicated electronic circuit such as a digital signal processor DSP programmable logic array PLA discrete circuits and the like. The term electronic apparatus may include computing devices or consumer electronic devices comprising any software firmware or the like or electronic devices or circuits comprising no software firmware or the like.

The term firmware typically refers to executable instructions code or data maintained in an electronic device such as a ROM. The term software generally refers to executable instructions code data applications programs or the like maintained in or on any form of computer readable media. The term computer readable media typically refers to system memory storage devices and their associated media communications media and the like.

