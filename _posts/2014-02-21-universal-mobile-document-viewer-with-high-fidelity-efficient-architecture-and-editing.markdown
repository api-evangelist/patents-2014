---

title: Universal mobile document viewer with high fidelity, efficient architecture and editing
abstract: Embodiments are directed to processing documents on a computer. A document may received on a computer over a platform specific interface. The document may be provided to a platform independent engine where parser may be configured to parse the document based on a page description language (PDL) that comprises the document. A plurality of feature objects may be generated based on feature information. Intermediate documents may be generated based on the plurality of feature objects. The intermediate documents may be stored on a data store for various reasons including, backups, archiving, sharing, or the like. A preview document may be generated from the at least one intermediate document arranged such that the preview document may displayable on the computer. A user may be further enabled to provide edit information that may be used for generating an updated preview document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09442896&OS=09442896&RS=09442896
owner: CSR IMAGING US, LP
number: 09442896
owner_city: Burlington
owner_country: US
publication_date: 20140221
---
The present invention relates generally to document printing and more particularly but not exclusively to processing documents for printing on a client computer.

Users may generate and or receive electronic documents in a wide variety of file formats and or page description languages PDLs . Further at any given time users may be using a variety of computing platforms and or operating systems. Also enterprises may include numerous computing platforms and or operating systems that are part of their information technology infrastructure. Often users may attempt to preview their various documents on different computing platforms to see how the document may appear if it is printed. However since different documents may be comprised of different types of PDL s and previewing these documents may be attempted on many different types of computing platforms adequate previewing features may be unavailable for a given computing platform and or for a given PDL. Thus it is with respect to these and other considerations that the invention has been made.

Various embodiments are described more fully hereinafter with reference to the accompanying drawings which form a part hereof and which show by way of illustration specific embodiments by which the invention may be practiced. The embodiments may however be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of the embodiments to those skilled in the art. Among other things the various embodiments may be methods systems media or devices. Accordingly the various embodiments may be entirely hardware embodiments entirely software embodiments or embodiments combining software and hardware aspects. The following detailed description should therefore not be limiting.

Throughout the specification and claims the following terms take the meanings explicitly associated herein unless the context clearly dictates otherwise. The term herein refers to the specification claims and drawings associated with the current application. The phrase in one embodiment as used herein does not necessarily refer to the same embodiment though it may. Furthermore the phrase in another embodiment as used herein does not necessarily refer to a different embodiment although it may. Thus as described below various embodiments of the invention may be readily combined without departing from the scope or spirit of the invention.

In addition as used herein the term or is an inclusive or operator and is equivalent to the term and or unless the context clearly dictates otherwise. The term based on is not exclusive and allows for being based on additional factors not described unless the context clearly dictates otherwise. In addition throughout the specification the meaning of a an and the include plural references. The meaning of in includes in and on. 

As used herein the term document refers to a file that is in a format suitable for printing. In some cases documents may be editable by a user employing a document processing application. Examples of document formats may include but is not limited to word processing formats e.g. .doc .docx spreadsheet or workbook formats e.g. .xls .xlsx presentation formats e.g. .ppt .pptx or the like. In at least one of various embodiments documents may be different separate and or independent of files in non user editable formats including page description languages PDL such as for example PostScript PDF printer command language PCL or the like. So a file may refer to documents and files in a page description language. In some embodiments documents may include to Microsoft Office documents. So embodiments described herein may be utilized by a print controller to convert documents to an intermediate document before previewing on a computer and or providing to a printer.

As used herein the term native file format .refers to a format of a file that is not converted altered or otherwise changed into a different format. Once a file is converted from one format to another such as for example converting a .doc file into a PostScript file then the document may no longer be in its native file format.

As used herein the term interpreter or interpreter engine refers to a printer component operative to parse and layout at least one page of a file into a page representation. In some embodiments an interpreter may convert one or more pages of a document e.g. in a format such as .doc .docx .xls .xlsx .ppt or .pptx into corresponding page representations. The pages of a document to convert into page representations may be determined based on selection by a user. For example a user may select to print an entire document or the user may select to print one or more pages or the like. In some embodiments interpreters may also include components enabled to convert page description language files e.g. PCL PostScript PDF XPS Office Open XML Microsoft Office files or the like into page representations which may be intermediate documents.

As used herein the term graphics primitives refers to the simplest i.e. atomic or irreducible geometric objects that the system e.g. printer can handle e.g. draw store or the like . In various embodiments graphics primitives may include points lines and or line segments planes circles and or ellipses triangles and or other polygons spline curves or the like. The combination of a plurality of graphics primitives for a particular page representation may accurately represent the original document s corresponding page s intended graphical visual representation.

As used herein the term feature object refers to a platform independent data structure that represents the features in the a document such as text basic geometric objects graphics primitives layout document information font colors position information z order transparency vector information raster information localization information optical character recognition information or the like.

As used herein the term platform specific refers to requirements features software modules hardware modules application programming interfaces APIs services or the like that may be specific to a particular computing platform and or computer operating system.

As used herein the term platform independent refers to requirements features software modules hardware modules application programming interfaces APIs services or the like that may be independent of any specific to a particular computing platform and or computer operating system.

As used herein the term original document refers to a document that is not converted altered or otherwise changed into a different format from when it provided to the computer for processing. Once a file is converted from one format to another such as for example converting a .doc file into a PostScript file then the document may no longer be an original file.

As used herein the term intermediate document refers to a platform independent description of a page that may include display lists and or feature objects. In some embodiments the components of the intermediate document may be described as an intermediate page description language.

As used herein the term preview document refers to document information that has been rendered from an intermediate document into a format that is suitable for viewing on a computer smart phone tablet computer laptop computer desktop computer or the like.

The following briefly describes embodiments of the invention in order to provide a basic understanding of some aspects of the invention. This brief description is not intended as an extensive overview. It is not intended to identify key or critical elements or to delineate or otherwise narrow the scope. Its purpose is merely to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

Briefly stated various embodiments are directed to processing documents on a computer. Accordingly such processing may enable universal mobile document viewing having high fidelity and an efficient architecture and editing. In at least one of the various embodiments an original document may received on a computer such as a client computer mobile telephone smart phone tablet computer laptop computer desktop computer or the like over a platform specific interface. In at least one of the various embodiments the original document may provided to a platform independent engine that performs further document processing. In at least one of the various embodiments a parser may be configured to parse the original document based on a page description language PDL that comprises the original document such that the parser may determine at least feature information that may be included in the original document based on the parsed PDL. In at least one of the various embodiments a plurality of feature objects may be generated based on the feature information such that each of the feature objects may be platform independent and the plurality of feature objects may include information for previewing and printing the at least feature information. In at least one of the various embodiments one or more intermediate documents may be generated based on the plurality of feature objects. In at least one of the various embodiments the intermediate documents may stored on a data store for various reasons including backups archiving sharing or the like.

Further in at least one of the various embodiments a preview document may be generated from the at least one intermediate document arranged such that the preview document may displayable on the computer. In at least one of the various embodiments a user to be further enabled to provide edit information that may be added to the intermediate document for generating an updated preview document that includes the edit information.

In at least one of the various embodiments generating the intermediate documents may further comprise generating one or more display lists for the intermediate documents where the feature objects may be added one of the display lists. In at least one of the various embodiments the platform independent engine may be arranged to generate additional feature objects and adding them to the intermediate document such that the additional feature objects include the edit information that may be provided by a user and or another process. In at least one of the various embodiments the platform independent engine may be arranged to generate one or more overlay objects for representing edit information that may stored separate from a display list. In at least one of the various embodiments the page description language PDL that comprises the original document may one of postscript XML paper specification XPS portable document format PDF printer control language PCL Office Open XML application documents Microsoft Office document formats image file formats or the like.

At least one embodiment of client computers is described in more detail below in conjunction with computer of . Briefly in some embodiments client computers may be configured to communicate with printing device and or print server computer . In various embodiments client computers may include print controllers for processing documents before they are provided to a printing device such as printing device and or print server computer .

In some embodiments at least some of client computers may operate over a wired and or wireless network to communicate with other computing devices or printing device . Generally client computers may include computing devices capable of communicating over a network to send and or receive information perform various online and or offline activities or the like. It should be recognized that embodiments described herein are not constrained by the number or type of client computers employed and more or fewer client computers and or types of client computers than what is illustrated in may be employed.

Devices that may operate as client computers may include various computing devices that typically connect to a network or other computing device using a wired and or wireless communications medium. Client computers may include portable and or non portable computers. In some embodiments client computers may include client computers server computers or the like. Examples of client computers may include but are not limited to desktop computers e.g. client computer personal computers multiprocessor systems microprocessor based or programmable electronic devices network PCs laptop computers e.g. client computer smart phones e.g. client computer tablet computers e.g. client computer cellular telephones display pagers radio frequency RF devices infrared IR devices Personal Digital Assistants PDAs handheld computers wearable computing devices entertainment home media systems e.g. televisions gaming consoles audio equipment or the like household devices e.g. thermostats refrigerators home security systems or the like multimedia navigation systems automotive communications and entertainment systems integrated devices combining functionality of one or more of the preceding devices or the like. As such client computers may include computers with a wide range of capabilities and features.

Client computers may access and or employ various computing applications to enable users of client computers to perform various online and or offline activities. Such activities may include but are not limited to generating documents gathering monitoring data capturing manipulating images managing media managing financial information playing games managing personal information browsing the Internet or the like. In some embodiments client computers may be enabled to connect to a network through a browser or other web based application.

Client computers may further be configured to provide information that identifies the client computer. Such identifying information may include but is not limited to a type capability configuration name or the like of the client computer. In at least one embodiment a client computer may uniquely identify itself through any of a variety of mechanisms such as an Internet Protocol IP address phone number Mobile Identification Number MIN media access control MAC address electronic serial number ESN or other device identifier.

At least one embodiment of printing device is described in more detail below in conjunction with printing device of . Briefly in some embodiments printing device may be a printer operative to print documents and other files. In some embodiments printing device may be configured to communicate with one or more of client computers to receive at least a portion of a document selected to be printed as described herein. Examples of printing device may include but is not limited to laser printers LED printers or other toner based printing technologies liquid inkjet printers solid ink printers dye sublimation printers inkless printers such as thermal printers and UV printers dot matrix printers ink based plotters or the like.

Client computers may communicate with printing device via wired technology and or network . In various embodiments wired technology may include a USB cable printer cable or the like for connecting to client computers .

Network may include virtually any wired and or wireless technology for communicating with a remote device such as but not limited to Bluetooth Wi Fi or the like. In some embodiments network may be a network configured to couple network computers with other computing devices including client computers printing device or the like. In various embodiments information communicated between devices may include various kinds of information including but not limited to processor readable instructions remote requests server responses program modules applications raw data control data system information e.g. log files video data voice data image data text data structured unstructured data or the like. In some embodiments this information may be communicated between devices using one or more technologies and or network protocols.

In some embodiments such a network may include various wired networks wireless networks or any combination thereof. In various embodiments the network may be enabled to employ various forms of communication technology topology computer readable media or the like for communicating information from one electronic device to another. For example the network can include in addition to the Internet LANs WANs Personal Area Networks PANs Campus Area Networks CANs Metropolitan Area Networks MANs direct communication connections such as through a universal serial bus USB port or the like or any combination thereof.

In various embodiments communication links within and or between networks may include but are not limited to twisted wire pair optical fibers open air lasers coaxial cable plain old telephone service POTS wave guides acoustics full or fractional dedicated digital lines such as T1 T2 T3 or T4 E carriers Integrated Services Digital Networks ISDNs Digital Subscriber Lines DSLs wireless links including satellite links or other links and or carrier mechanisms known to those skilled in the art. Moreover communication links may further employ any of a variety of digital signaling technologies including without limit for example DS 0 DS 1 DS 2 DS 3 DS 4 OC 3 OC 12 OC 48 or the like. In some embodiments a router or other intermediate network device may act as a link between various networks including those based on different architectures and or protocols to enable information to be transferred from one network to another. In other embodiments client computers and or other related electronic devices could be connected to a network via a modem and temporary telephone link. In essence the network may include any communication technology by which information may travel between computing devices.

The network may in some embodiments include various wireless networks which may be configured to couple various portable network devices client computers wired networks other wireless networks or the like. Wireless networks may include any of a variety of sub networks that may further overlay stand alone ad hoc networks or the like to provide an infrastructure oriented connection for at least client computers . Such sub networks may include mesh networks Wireless LAN WLAN networks cellular networks or the like. In at least one of the various embodiments the system may include more than one wireless network.

The network may employ a plurality of wired and or wireless communication protocols and or technologies. Examples of various generations e.g. third 3G fourth 4G or fifth 5G of communication protocols and or technologies that may be employed by the network may include but are not limited to Global System for Mobile communication GSM General Packet Radio Services GPRS Enhanced Data GSM Environment EDGE Code Division Multiple Access CDMA Wideband Code Division Multiple Access W CDMA Code Division Multiple Access 2000 CDMA2000 High Speed Downlink Packet Access HSDPA Long Term Evolution LTE Universal Mobile Telecommunications System UMTS Evolution Data Optimized Ev DO Worldwide Interoperability for Microwave Access WiMax time division multiple access TDMA Orthogonal frequency division multiplexing OFDM ultra wide band UWB Wireless Application Protocol WAP user datagram protocol UDP transmission control protocol Internet protocol TCP IP any portion of the Open Systems Interconnection OSI model protocols session initiated protocol real time transport protocol SIP RTP short message service SMS multimedia messaging service MMS or any of a variety of other communication protocols and or technologies. In essence the network may include communication technologies by which information may travel between client computers printing device print server computer other computing devices not illustrated other networks or the like.

In various embodiments at least a portion of the network may be arranged as an autonomous system of nodes links paths terminals gateways routers switches firewalls load balancers forwarders repeaters optical electrical converters or the like which may be connected by various communication links. These autonomous systems may be configured to self organize based on current operating conditions and or rule based policies such that the network topology of the network may be modified.

Print server computer may be a network computer capable of forwarding documents to printing device . In some embodiments a client computer e.g. client computer may send and or otherwise transfer a document or other file to print server computer such as via network . Print server computer may be enabled to forward and or otherwise transfer the document to printing device such as via network or a physical connection not illustrated .

Computers that may be arranged to operate as print server computer include various network computers including but not limited to personal computers desktop computers multiprocessor systems microprocessor based or programmable consumer electronics network PCs server computers devices network appliances or the like.

Although illustrates print server computer as a single computing device embodiments are not so limited. Rather one or more functions of print server computer may be distributed across one or more distinct network computers. Moreover print server computer is not limited to a particular configuration. For example in one embodiment print server computer may contain a plurality of network computers. In another embodiment print server computer may contain a plurality of network computers that operate using a principal agent or primary secondary approach where one of the plurality of network computers operates to manage and or otherwise coordinate operations of the other network computers. In other embodiments print server computer may operate as a plurality of network computers arranged using one or more architectures including cluster architectures peer to peer architectures cloud based architectures or the like. Thus embodiments may be implemented in a variety of architectures and or configurations and are not limited to a single environment. It should also be recognized that although illustrates a single print server computer embodiments are not so limited but rather in some embodiments a plurality of different print server computers may be employed.

Client computer may include processor in communication with memory via bus . Client computer may also include power supply network interface audio interface display keypad illuminator video interface input output interface haptic interface global positioning systems GPS receiver open air gesture interface temperature interface camera s projector pointing device interface processor readable stationary storage device and processor readable removable storage device . Client computer may optionally communicate with a base station not shown or directly with another computer. And in one embodiment although not shown a gyroscope may be employed within client computer to measuring and or maintaining an orientation of client computer .

Power supply may provide power to client computer . A rechargeable or non rechargeable battery may be used to provide power. The power may also be provided by an external power source such as an AC adapter or a powered docking cradle that supplements and or recharges the battery.

Network interface includes circuitry for coupling client computer to one or more networks and is constructed for use with one or more communication protocols and technologies including but not limited to protocols and technologies that implement any portion of the OSI model GSM CDMA time division multiple access TDMA UDP TCP IP SMS MMS GPRS WAP UWB WiMax SIP RTP GPRS EDGE WCDMA LTE UMTS OFDM CDMA2000 EV DO HSDPA or any of a variety of other wireless communication protocols. Network interface is sometimes known as a transceiver transceiving device or network interface card NIC .

Audio interface may be arranged to produce and receive audio signals such as the sound of a human voice. For example audio interface may be coupled to a speaker and microphone not shown to enable telecommunication with others and or generate an audio acknowledgement for some action. A microphone in audio interface can also be used for input to or control of client computer e.g. using voice recognition detecting touch based on sound and the like.

Display may be a liquid crystal display LCD gas plasma electronic ink light emitting diode LED Organic LED OLED or any other type of light reflective or light transmissive display that can be used with a computer. Display may also include a touch interface arranged to receive input from an object such as a stylus or a digit from a human hand and may use resistive capacitive surface acoustic wave SAW infrared radar or other technologies to sense touch and or gestures.

Projector may be a remote handheld projector or an integrated projector that is capable of projecting an image on a remote wall or any other reflective object such as a remote screen.

Video interface may be arranged to capture video images such as a still photo a video segment an infrared video or the like. For example video interface may be coupled to a digital video camera a web camera or the like. Video interface may comprise a lens an image sensor and other electronics. Image sensors may include a complementary metal oxide semiconductor CMOS integrated circuit charge coupled device CCD or any other integrated circuit for sensing light.

Keypad may comprise any input device arranged to receive input from a user. For example keypad may include a push button numeric dial or a keyboard. Keypad may also include command buttons that are associated with selecting and sending images.

Illuminator may provide a status indication and or provide light. Illuminator may remain active for specific periods of time or in response to events. For example when illuminator is active it may backlight the buttons on keypad and stay on while the mobile computer is powered. Also illuminator may backlight these buttons in various patterns when particular actions are performed such as dialing another mobile computer. Illuminator may also cause light sources positioned within a transparent or translucent case of the mobile computer to illuminate in response to actions.

Client computer may also comprise input output interface for communicating with external peripheral devices or other computers such as other mobile computers and network computers. Input output interface may enable client computer to communicate with one or more printers such as printing device of . Other peripheral devices that client computer may communicate with may include remote speakers and or microphones headphones display screen glasses or the like. Input output interface can utilize one or more technologies such as Universal Serial Bus USB Infrared WiFi WiMax Bluetooth wired technologies or the like.

Haptic interface may be arranged to provide tactile feedback to a user of a mobile computer. For example the haptic interface may be employed to vibrate client computer in a particular way when another user of a computer is calling. Temperature interface may be used to provide a temperature measurement input and or a temperature changing output to a user of client computer . Open air gesture interface may sense physical gestures of a user of client computer for example by using single or stereo video cameras radar a gyroscopic sensor inside a computer held or worn by the user or the like. Camera may be used to track physical eye movements of a user of client computer .

GPS transceiver can determine the physical coordinates of client computer on the surface of the Earth which typically outputs a location as latitude and longitude values. GPS transceiver can also employ other geo positioning mechanisms including but not limited to triangulation assisted GPS AGPS Enhanced Observed Time Difference E OTD Cell Identifier CI Service Area Identifier SAT Enhanced Timing Advance ETA Base Station Subsystem BSS or the like to further determine the physical location of client computer on the surface of the Earth. It is understood that under different conditions GPS transceiver can determine a physical location for client computer . In at least one embodiment however client computer may through other components provide other information that may be employed to determine a physical location of the mobile computer including for example a Media Access Control MAC address IP address and the like.

Human interface components can be peripheral devices that are physically separate from client computer allowing for remote input and or output to client computer . For example information routed as described here through human interface components such as display or keyboard can instead be routed through network interface to appropriate human interface components located remotely. Examples of human interface peripheral components that may be remote include but are not limited to audio devices pointing devices keypads displays cameras projectors and the like. These peripheral components may communicate over a Pico Network such as Bluetooth Zigbee and the like. One non limiting example of a mobile computer with such peripheral human interface components is a wearable computer which might include a remote pico projector along with one or more cameras that remotely communicate with a separately located mobile computer to sense a user s gestures toward portions of an image projected by the pico projector onto a reflected surface such as a wall or the user s hand.

A client computer may include a browser application that is configured to receive and to send web pages web based messages graphics text multimedia and the like. The client computer s browser application may employ virtually any programming language including a wireless application protocol messages WAP and the like. In at least one embodiment the browser application is enabled to employ Handheld Device Markup Language HDML Wireless Markup Language WML WMLScript JavaScript Standard Generalized Markup Language SGML HyperText Markup Language HTML eXtensible Markup Language XML HTML5 and the like.

Memory may include RAM ROM and or other types of memory. Memory illustrates an example of computer readable storage media devices for storage of information such as computer readable instructions data structures program modules or other data. Memory may store BIOS for controlling low level operation of client computer . The memory may also store operating system for controlling the operation of client computer . It will be appreciated that this component may include a general purpose operating system such as a version of UNIX or LINUX or a specialized mobile computer communication operating system such as Windows Phone or the Symbian operating system. The operating system may include or interface with a Java virtual machine module that enables control of hardware components and or operating system operations via Java application programs.

Memory may further include one or more data storage which can be utilized by client computer to store among other things applications and or other data. For example data storage may also be employed to store information that describes various capabilities of client computer . The information may then be provided to another device or computer based on any of a variety of events including being sent as part of a header during a communication sent upon request or the like. Data storage may also be employed to store social networking information including address books buddy lists aliases user profile information or the like. Data storage may further include program code data algorithms and the like for use by a processor such as processor to execute and perform actions. In one embodiment at least some of data storage might also be stored on another component of client computer including but not limited to non transitory processor readable removable storage device processor readable stationary storage device or even external to the mobile computer.

Data storage may store documents or other data files. Documents may include one or more documents that may be editable by a user by employing document processing application viewing application or the like. In some embodiments document processing application or another application e.g. a web browser may be utilized to forward send and or otherwise transfer a document or other file to another computing device such as print server computer of . In at least one such embodiment the document may be transferred to the other computing device in its native file format i.e. without first converting the documenting into another file format such as an intermediate page description language .

Applications may include computer executable instructions which when executed by client computer transmit receive and or otherwise process instructions and data. Examples of application programs include but are not limited to calendars search programs email client applications IM applications SMS applications Voice Over Internet Protocol VOIP applications contact managers task managers transcoders database programs word processing programs security applications spreadsheet programs games search programs and so forth. Further Applications may include document processing application viewing application or the like.

Network computer includes processor processor readable storage media network interface unit an input output interface hard disk drive video display adapter and memory all in communication with each other via bus . In some embodiments processor may include one or more central processing units.

As illustrated in network computer also can communicate with the Internet or some other communications network via network interface unit which is constructed for use with various communication protocols including the TCP IP protocol. Network interface unit is sometimes known as a transceiver transceiving device or network interface card NIC .

Network computer also comprises input output interface for communicating with external devices such as a keyboard printer e.g. printing device of or other input or output devices not shown in . Input output interface can utilize one or more communication technologies such as USB infrared Bluetooth or the like.

Memory generally includes RAM ROM and one or more permanent mass storage devices such as hard disk drive tape drive optical drive and or floppy disk drive. Memory stores operating system for controlling the operation of network computer . Any general purpose operating system may be employed. Basic input output system BIOS is also provided for controlling the low level operation of network computer .

Although illustrated separately memory may include processor readable storage media . Processor readable storage media may be referred to and or include computer readable media computer readable storage media and or processor readable storage device. Processor readable storage media may include volatile nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Examples of processor readable storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other media which can be used to store the desired information and which can be accessed by a computing device.

Memory further includes one or more data storage which can be utilized by network computer to store among other things applications and or other data. For example data storage may also be employed to store information that describes various capabilities of network computer . The information may then be provided to another device based on any of a variety of events including being sent as part of a header during a communication sent upon request or the like. Data storage may also be employed to store documents . Documents may include one or more documents that may be printed.

Data storage may also include a database text spreadsheet folder file or the like that may be configured to maintain and store user account identifiers user profiles email addresses IM addresses and or other network addresses or the like. Data storage may further include program code data algorithms and the like for use by a processor such as processor to execute and perform actions. In one embodiment at least some of data store might also be stored on another component of network computer including but not limited to processor readable storage media hard disk drive or the like.

Applications may include computer executable instructions which may be loaded into mass memory and run on operating system . Examples of application programs may include transcoders schedulers calendars database programs word processing programs Hypertext Transfer Protocol HTTP programs customizable user interface programs IPSec applications encryption programs security programs SMS message servers IM message servers email servers account managers and so forth. Applications may also include print server computer and print queue application .

Print server computer may be configured to receive a document from a client computer such as client computers of . In some embodiments printer server application may be employed by print server computer of . In any event print server application may be employed to forward documents to a printer such as printing device of via a physical connection e.g. a USB cable or a network connection e.g. through network of without converting the document to an intermediate page description language.

In some embodiments printing device may be configured to print an image utilizing various printing technologies including but not limited to laser printers LED printers or other toner based printing technologies liquid inkjet printers solid ink printers dye sublimation printers inkless printers such as thermal printers and UV printers dot matrix printers ink based plotters or the like. In some embodiments printing device may represent a multi function printer MFP .

As shown printing device may include processor one or more network interfaces processor readable storage media display keyboard and or keypad pointing device input output interface printing assembly toner assembly and memory all in communication with each other via bus .

Printing device may communicate with a client computer such as client computer of or network computer of the Internet or some other communications network via network interface s . Network interface may enable various communication protocols including but not limited to TCP IP Wi Fi Bluetooth or the like. Communications may also be over a universal serial port USB a parallel port a serial bus such as RS 232 Recommended Standard 232 ANSI TIA EIA 422 or the like IEEE 1394 e.g. Firewire or the like. Network interface unit s is sometimes known as a transceiver transceiving device or network interface card NIC .

Display may include virtually any type of display monitor terminal screen and the like that displays text graphics images and or any other type of data to a user. Types of displays may include but are not limited to a liquid crystal display LCD gas plasma light emitting diode LED cathode ray tube CRT or the like. Display may also interface with keyboard keypad and or pointing device to receive and or display user input. Additionally or alternatively printing device may communicate with one or more display devices that are external to the printer to display information regarding print jobs.

Keyboard keypad may comprise any input device arranged to receive input from a user. For example keyboard keypad may include a push button numeric dial keyboard touch screen or the like. Keyboard keypad may include alphabetic inputs numeric inputs and or other character inputs and may further include function and or command buttons associated with functionality for selecting examining editing and or printing documents. User inputs made via keyboard keypad may be shown in display .

Pointing device may include virtually any device that enables a user to input spatial and or positional data to printing device . Pointing device may include devices based on the user touching a surface such as a touchpad touchscreen graphics tablet joystick or pointing stick either with a body part e.g. finger or hand or with an object such as a wand stylus pen lightpen and the like. Pointing device may further include devices based on the user moving an object such as a mouse trackball joystick and the like. User inputs made via pointing device may be shown in display .

Input output interface may include various means for communicating with external devices such as external displays user input devices computer devices networking devices and the like. Input output interface may employ one or more communications technologies including but not limited to USB Bluetooth serial port e.g. RS 232 standard parallel port e.g. IEEE 1284 standard and the like. In some embodiments a USB driver or other portable storage device may communicated with printing device through input output interface and be utilized to provide a document to printing device .

Memory may include RAM ROM and or other types of memory. Memory illustrates an example of computer readable storage media devices for storage of information such as computer readable instructions data structures program modules or other data. Memory may store BIOS for controlling low level operation of printing device . The memory may also store operating system for controlling the operation of printing device . It will be appreciated that this component may include a general purpose operating system such as a version of UNIX or LINUX or a specialized operating system designed and created to support the functionality of printing device . The operating system may include or interface with a virtual machine module such as the Java virtual machine or Microsoft .NET runtime that may enable control of hardware components and or operating system functions via applications that run under such virtual machine modules.

Although illustrated separately memory may include processor readable storage media . Processor readable storage media may be referred to and or include computer readable media computer readable storage media and or processor readable storage device. Processor readable storage media may include volatile nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Examples of processor readable storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other media which can be used to store the desired information and which can be accessed by a computing device.

Memory further includes one or more data storage which can be utilized by printing device to store among other things applications and or other data. For example data storage may also be employed to store information that describes various capabilities of printing device . The information may then be provided to another device based on any of a variety of events including being sent as part of a header during a communication sent upon request or the like.

Data storage may also store program code instructions and or data. For example data storage may be configured to store imaging commands diagnostics user preferences imaging control software information regarding the capabilities of the printing device such as supported color palettes fonts pagination page size and the like. Data storage may further store documents to be printed e.g. queuing multiple print jobs intermediate files e.g. page representations and or image representations or the like as well as any other information needed for selecting examining editing modifying displaying and or printing a document or file.

Applications may include computer executable instructions which may be loaded into mass memory and run on operating system . Applications may include interpreters graphics rendering engine and print engine driver . Interpreters may include document interpreter engine and other interpreter engines . Document interpreter engine may be configured to determine page representations of each requested page of a document to be printed. In various embodiments document interpreter engine may convert one or more pages from documents in formats such as .doc .docx .xls .xlsx .ppt or .pptx into separate page representations that each includes a plurality of graphics primitives. Other interpreter engines may include engines configured to convert files in a page description language into page representations. Graphics rendering engine may be configured to determine image representations of each page representation. And print engine may be configured to communicate with other printing hardware and or software e.g. printing assembly to facilitate printing of the determined image representations 

As stated herein printing device may incorporate various types of printing technologies without departing from the scope of the invention. In some embodiments printing device may be configured to employ laser printing technology. The following is an example non limiting description of laser printing technology that may be employed to implement embodiments of the invention. In such embodiments printing assembly may include such elements as are necessary for laser printing such as a drum assembly corona wire fuser discharge lamp laser scanning unit and or photoreceptor. In some embodiments drum assembly may be configured to revolve and may be made of any of a variety of photoconductive materials. The drum assembly may be given an electric charge by the corona wire or in some embodiments by a charged roller . As the drum assembly rotates a laser scanning unit may direct a laser beam across the drum assembly s surface based on the data to be printed. A toner assembly may provide toner such as in a powder form onto the drum assembly. A corona wire may further provide a charge to paper or other print material which may then be moved over the drum assembly. The paper or other print material may then pass through a fuser such that the applied toner is heated or otherwise caused to adhere to the paper or other print material. Upon depositing toner to the paper or other print material the surface of the drum of the drum assembly may pass a discharge lamp where a light or the like may expose the drum to erase or remove the electrical image. In one embodiment the drum surface of the drum assembly may then pass the corona wire which may then reapply a charge. It should be noted that embodiments of the invention are not limited to this method of transferring data onto a print material and other mechanisms may also be used. Thus the invention is not to be constrained or otherwise narrowed by this embodiment.

In various embodiments printing assembly and or toner assembly may communicate with print engine driver to facilitate printing of documents and other files and or images. Print engine driver may be responsible for numerous actions associated with the physical printing of the document including but not limited to setting up the print engine to print a page requesting paper to be fed through the printer passing the application generated raster data e.g. image representation to the print engine monitoring for completion of the print job monitoring for errors or the like. Print engine driver may select a paper size media type input tray output bin other finishing options or print engine parameters or the like. In various embodiments print engine driver and or the physical print engine may be capable of handling one or more pages in parallel.

In at least one of the various embodiments system may be arranged to process on or more documents such as document . Document may be provided to one or more print preview applications operating system modules that may be available on a client computer such as client computer . For example in at least one of the various embodiments a user may select a documents that is accessible from the client computer and send it to a print preview service offered on the client computer. In at least one of the various embodiments the document may be resident and or stored locally on the client computer e.g. documents data store or the document may be located remotely one a remote server computer and or in a cloud environment.

In at least one of the various embodiments preview modules may be arranged to employ a document service application API such as application API . In at least one of the various embodiments application API may be arranged to include one or more interfaces for exchanging information that may include document data print processing commands configuration information or the like to the other modules in system .

In at least one of the various embodiments native modules may include computing platform and or operating system specific implementations for the interfaces that may be provided by application API . In at least one of the various embodiments these modules may be arranged to provide access to one or more services and or features of a given computing platform. For example an interface method for retrieving document information from an email attachment may require different implementations depending on the computing platform. Accordingly in at least one of the various embodiments even if the methods supported by Application API may be consistent across various computing platforms the underlying implementation provided by native modules may vary significantly. In at least one of the various embodiments PDL interpreter APIs written in different languages such as Object C for iOS or Mac OSX Java for Android C for Window Mobile C for Linux or the like may be include in native module .

In at least one of the various embodiments computing platform specific versions system may be generated and installed on a given computing platform. Accordingly in at least one of the various embodiments native modules may be arranged to include just the modules required for compatibility with the computer platform where it may be resident.

In at least one of the various embodiments render module may be provided document information that may include document data print processing commands configuration information or the like. However in at least one of the various embodiments the form and or format of the information may be normalized so its form and format may be independent of the underlying computing platform. This normalization process may be enabled by the computing platform specific arrangement comprising native modules .

In at least one of the various embodiments render module may be arranged generate an intermediate document from document information provided by native modules . In at least one of the various embodiments the document information provided to render module may include information formatted using one or more well known page definition languages PDLs such as PDF Postscript XPS PCL or the like. In at least one of the various embodiments render module may be arranged to parse the various features of the document that may be represented using PDL language constructs and or objects.

In at least one of the various embodiments render module may generate an intermediate document based on the features that may be parsed out of the PDL used for the original document. In at least one of the various embodiments the intermediate document be arranged to represent all of the features that may be available for one or more PDLs. Accordingly in at least one of the various embodiments the intermediate document is represented using an intermediate PDL such the features of the original document are translate from the original PDL to the intermediate PDL.

In at least one of the various embodiments preview module may be arranged to generate a print preview for intermediate documents. Accordingly since preview module may be arranged to process intermediate document comprised of the intermediate PDL it does not need to include specialized processing and or understanding of the different PDLs that original documents may be using. Further in at least one of the various embodiments preview module may be arranged to generate a document comprising one or more well known PDLs from the intermediate document that is comprised of the intermediate PDL. Likewise in at least one of the various embodiments preview module may generate a raster and or bitmap version of the intermediate documents.

In at least one of the various embodiments the document generated based on the rasterization or the PDL translation from intermediate document may be output as raster document and or PDL document and subsequently stored and or provided to a previewing device or a printer.

In at least one of the various embodiments block and may be a core library that may be arranged to employ methods and operations for processing documents independent of the characteristics a given computing platform.

In at least one of the various embodiments well known PDL s may include readily identified properties such as name and version information that may be extracted from the original document. For example PDF files often have a marker such as PDF 1.6 that can be used by sniffer for determining that the document is a made using the PDF PDL.

In at least one of the various embodiments system may be arranged to include one or more modules for configuring a parser to parse documents created for different types of PDLs such as parse modules . Accordingly in at least one of the various embodiments graphic and rendering module may use a combination of common modules and PDL specific modules for identifying the features and content included in the original document and mapping and or translation them from the originating PDL to the intermediate PDL for generating an intermediate document. In at least one of the various embodiments after the interpreting the input data is parsed and then translated a set of PDL independent high level graphic objects which may be described using a set of layout information with a set of coordinates and color palette associated with the source of documents by the graphics and layout rendering module .

Accordingly in at least one of the various embodiments high level graphic objects representing using the intermediate PDL may be repurposed for rendering modifications based on user specific editing. The intermediate documents may comprise one or more display lists that include the high level graphic objects that represent the features of the original document.

In at least one of the various embodiments intermediate document store may be arranged to be a buffer for storing the intermediate document during processing. Also in at least one of the various embodiments intermediate documents may be stored for later use. Accordingly in at least one of the various embodiments intermediate document store may be a local or remote data store including one such as documents data store on client computer document data store on network computer cloud based storage or the like.

In at least one of the various embodiments raster renderer may be arranged to render a raster version of the document from the intermediate document. The layout and content information represented by the intermediate PDL included in the intermediate document may be used for generating one or more raster versions of the document. For example raster renderer may be arranged to generate a bitmap image from an intermediate document.

In at least one of the various embodiments output driver may be arranged to translate the raster version of the intermediate document into another PDL or it may be arrange to generate an image suitable for previewing on the client computer.

In at least one of the various embodiments document represents a document in its original PDL format such as a PDF document. In at least one of the various embodiments an application operating on the client computer may provide the document or a copy of the document to interface represented here by document .

In at least one of the various embodiments at this point in the process document is still in the original format same as document . Also it has been open loaded copied or the like using operations and code interfaces that are native or compliant with the local computing platform. Next in at least one of the various embodiments the document represented here by document provided to platform independent interface . In at least one of the various embodiments platform independent interface may be arranged to act as a fa ade that hides or obscures the implementation differences between different computing platforms. Accordingly in at least one of the various embodiments no matter what type of computing platform is operative the data structure that is used to implement document may remain that consistent across the different computing platforms. Next in at least one of the various embodiments the document may be provided to platform independent PDL parser renderer and converted into an intermediate document represented by intermediate document .

Next in at least one of the various embodiments platform independent output driver may take the document represented by intermediate document and generate one or more output documents such as output document . In at least one of the various embodiments output document may be a raster image such as a bitmap TIFF file JPEG file or the like that faithfully representing the content and features of the original document document for use in a print preview operation. Also in at least one of the various embodiments output document may be rendered into a PDL such as PDF PCL XPS or the like and passed to a printer or a PDL viewer such as PDF reader.

In at least one of the various embodiments viewer may be arranged to enable a user and or another process to edit a document after it has been previewed. Accordingly in at least one of the various embodiments a user may be enabled to edit the document using viewer directly from a print preview interface. In at least one of the various embodiments such editing may include adding modifying or removing information to document before it is printed. For example in at least one of the various embodiments editing may include enabling a user to select particular pages or page ranges for printing. In other cases editing may include adding bates stamping information or page numbers to a document before printing. Still other editing options may include adding comments adding annotations redacting portions of the document inserting page headers or page footers to the document changing colors changing fonts adding watermarks color correction conversion n Up imposition or the like or combination thereof. Accordingly depending on the edit the document may require rendering to generate an update representing for viewing or previewing the document.

In at least one of the various embodiments editing information representing the changes made by the user may be added to the intermediate document rather than being added to the original document. In at least one of the various embodiments the particular data structures employed to associate the editing information with the intermediate document may vary depending on several factors. These factors may include the type of PDL that comprised the original document specific features of the current document the types of edit information that may be being added to the document.

In at least one of the various embodiments the PDL that the original document is comprised of may dictate the type of document features that were available and or captured for conversion into the intermediate document. In at least one of the various embodiments if the PDL used in the original document includes identifiable structured information fields those fields and associated data may be faithfully mapped into the intermediate document using the intermediate PDL. Accordingly editing may be enabled for those features that were present in the original document if they are identifiable from parsing the PDL comprising the original document. For example if the original document PDL includes margin information described in a field or other identifiable data structure viewer may be arranged to enable direct editing of the margins in the intermediate document. In other cases if the original document is an opaque bitmap such as a electrostatic scanned document or digital photograph there may be little structured data associated with the content of the document. Thus in such cases there may be few editable features of the intermediate document.

Or in at least one of the various embodiments in some cases such as adding a watermarks or bates stamps the original content and or format of the document may be preserved by generating one or more overlays objects that may be composited onto into the preview document and or output document at the time of rendering.

In at least one of the various embodiments a printer device such as printer device may be arranged to include applications such as document processing application and viewing application . Accordingly in at least one of the various embodiments the entirety of system may be operative on the printer device. For example in at least one of the various embodiments in two similar scenarios a user could walk up to the printer device with a USB thumb drive or a smart device e.g. mobile computer that may be bumped with the printer device to initiate a transfer of a document to the printer device via NFC WiFi Direct or the like . The key of this embodiment may be that the printing device may be arranged to completely process the document supplied by the user. In this example the printer device may arranged to either read the document from the inserted thumb drive or through a wireless communication transfer the document to the printer device for further processing.

In at least one of the various embodiments the application that enables a user to access document printing and or previewing features may rely on methods services and or data that may be specific to the particular computing platform being used. Accordingly platform specific functions provided by platform specific API or SDK s may be employed for loading and or accessing the original document.

At block in at least one of the various embodiments the document may be passed from platform dependent modules of process to platform independent modules of process using an application API. In at least one of the various embodiments for each supported computing platform a compliant and or natively supported application API layer may be provided. In at least one of the various embodiments this application layer may be arranged to include one or more interfaces that have the same semantic meaning operational effect conceptual parameters or the like across all supported computing platforms.

In at least one of the various embodiments to support the implementation differences and or incompatibilities between the different computing platforms the application API may include some variance across the platforms such as data types naming conventions string formatting parameter passing conventions or the like.

In at least one of the various embodiments the application API may be arranged as a transition layer between the platform specific features of the client computer and the platform independent core library. In at least one of the various embodiments the application API layer e.g. module in may be arranged to include to platform specific parsers that enable the original document to be loaded and or streamed for processing o the core library modules and absent any platform specific artifacts.

At block in at least one of the various embodiments the PDL comprising the document may be parsed to generate an intermediate document that may be comprised of an intermediate PDL. In at least one of the various embodiments at this point since the document has been loaded and provided to the core library layer the document may be parsed using platform independent parsers.

At block in at least one of the various embodiments a preview of the original document may be generated based on the intermediate document and displayed to a user. In at least one of the various embodiments platform independent modules of various applications e.g. document processing application viewing application or the like may be arranged to parse the features of the intermediate document for generating a preview of the document for display to a user.

At decision block in at least one of the various embodiments if a user and or another automated process may be editing the document control may flow to block otherwise in at least one of the various embodiments control may flow to decision block .

At block in at least one of the various embodiments the user and or other automated process may be enabled to edit the intermediate document. In at least one of the various embodiments a viewing application such as viewing application may be arranged to include user interfaces for enabling a user to provide edit information using the same client computer that may be used for displaying the preview of the document. For example the viewing application may be arranged to display a list of editable objects and or feature that a user may edit such as page numbers pages ranges to include exclude from the output document font sizes background colors watermarking inserting bates numbers serial numbers time stamping color correction conversion n Up imposition or the like or combination thereof.

In at least one of the various embodiments one or more automated processes may provide edit information for modifying the document. For example a process may be arranged to automatically add bates stamps to the pages of a document without any direct involved by a user. Likewise in at least one of the various embodiments editing information for adding serial numbers watermarks timestamps or the like may be automatically added. Next control may flow back to block so another preview that reflects the editing may be generated. If the editing is being done by a user it may be an interactive process where the user makes an edit and immediately views an updated preview of the document. Or in other cases each edit may not require a previewing step to be repeated. For example if watermarks are being applied to a multi page document process may be configured to preview just the first page of the document rather than previewing each page.

At decision block in at least one of the various embodiments if the user and or another automated process determines that an output document should be generated from the intermediate document control may flow to block otherwise in at least one of the various embodiments control may be returned to a calling process. Here in at least one of the various embodiments process may generate an output document for printing storing sharing archiving or the like. As with editing generating an output document may be an automatic function driven by configuration information or it may be a manual function based on user input or a combination thereof.

At block in at least one of the various embodiments an output document may be generated from the intermediate documents and then provided to a printer or other output device. In at least one of the various embodiments the output document may be rendered from the intermediate document into a raster document or it may be rendered in a another PDL. In at least one of the various embodiments the output document may be generated such that is comprised of a PDL that may be compatible with one or more output devices such as printers plotters or the like. Likewise in at least one of the various embodiments a user or one or more predefined configuration values may determine how to render the output document.

At block in at least one of the various embodiments the original PDL of the document may be parsed to determine the features and or content of the document. In at least one of the various embodiments since the PDL comprising the document may be recognized and or supported process may be arranged to include parsers and or parser information that enable the document to be parsed such that all of its features such as content document information e.g. author creation date title or the like formatting font information layout embedded graphics objects pages or the like may be determined.

At block in at least one of the various embodiments one or more display lists may be generated based on the document features that may have been determined in block . In at least one of the various embodiments each discernible feature of the original document as represented by the PDL information comprising the original document may be mapped and or translated to one or more feature objects of the intermediate PDL and added to a display list data structure.

In at least one of the various embodiments each feature object may include information such as page location font color name an identity text content OCR information raster content vector information or the like or combination thereof. The feature object may be arranged to include sufficient information for faithfully generating a full color raster version of the feature and or translating the feature object from the intermediate PDL to another standard well known PDL such as PDF Postscript office application documents or the like.

At block in at least one of the various embodiments an intermediate document may be generated from the one or more display lists that may have been determined in block . In at least one of the various embodiments the intermediate document may include meta information such as document source information as well as the display lists that include the actual document features for the document. At this point the intermediate document includes all of the feature information that was available in the original document. Except instead of being represented using one of many possible PDLs they may be represented using the intermediate PDL.

At block in at least one of the various embodiments optionally the intermediate document may be stored either locally or remotely for later use backups archival purposes or the like. In at least one of the various embodiments the intermediate document may be compressed before storing.

At block in at least one of the various embodiments the various feature objects and or features included in the display lists that comprise the intermediate document may be converted into raster information and positioned for layout on a page.

At block in at least one of the various embodiments the feature object and or the raster information may be transformed into document information compatible with one or more PDLs. In at least one of the various embodiments the particular PDL target may be determined based on user input or configuration information. In some cases the PDL type may be automatically selected based on the capabilities of a known output device. Next control may be return to a calling process.

At block in at least one of the various embodiments various edit information may be provided by the user or in some cases by another process. For example editing information such as annotation or comments may be added to the document by a user. The annotations content as well as their location within the document being preview may be considered to editing information. Likewise in at least one of the various embodiments process may be arranged to perform one or more automatic editing functions such as adding page numbers watermarks bates stamping or the like. In these cases the editing information may be automating added to the document based on template and or configuration information.

At decision block in at least one of the various embodiments if the user or other process determines that the editing information should be included in the output document control may flow to block otherwise control may flow to block .

At block in at least one of the various embodiments one or more overlay objects feature objects and or one or more display lists may be generated and or modified based on the provided edit information. In at least one of the various embodiments the editing information may be used to generate one or more feature objects that may be may be added to a display list that is included as part of the intermediate document. In other cases a new display list may be created to hold the feature objects and added to the intermediate document.

In at least one of the various embodiments overlay objects may be generated for edit information that may not be easily integrated into an document. For example watermarks information may be maintained in an overlay data structure that may be associated with the intermediate document but held separate from the display lists.

At block in at least one of the various embodiments the overlay objects and or the feature objects included in the display lists may be applied and or added to the intermediate document. Next control may be returned to a calling process.

It will be understood that figures and combinations of actions in the flowchart like illustrations can be implemented by computer program instructions. These program instructions may be provided to a processor to produce a machine such that the instructions executing on the processor create a means for implementing the actions specified in the flowchart blocks. The computer program instructions may be executed by a processor to cause a series of operational actions to be performed by the processor to produce a computer implemented process for implementing the actions specified in the flowchart block or blocks. These program instructions may be stored on some type of machine readable storage media such as processor readable non transitive storage media or the like.

Furthermore in at least one of the various embodiments the actions specified in one or more blocks may be performed concurrently if appropriate and or if enabled by the underlying hardware and computer processor.

