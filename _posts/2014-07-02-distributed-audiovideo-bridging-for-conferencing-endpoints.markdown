---

title: Distributed audio/video bridging for conferencing endpoints
abstract: A system and method for distributed audio/video bridging for conferencing endpoints are disclosed. In one embodiment, a plurality of endpoints are connected to a modified video communication terminal (MVCT) via a communication network. The MVCT is an endpoint including an audio/video bridging module (AVBM). Further, one of the plurality of endpoints capable of holding audio video bridging is determined by the AVBM. Furthermore, the connection of one or more remaining endpoints is transferred to the determined endpoint by the AVBM for load balancing. Also, audio and/or video bridging of the endpoints and the MVCT is enabled by the AVBM and the determined endpoint based on connectivity information of the remaining endpoints with the MVCT and the determined endpoint for conferencing participants.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09237306&OS=09237306&RS=09237306
owner: ITTIAM SYSTEMS PTE. LTD.
number: 09237306
owner_city: Singapore
owner_country: SG
publication_date: 20140702
---
Benefit is claimed under 35 U.S.C 119 a to Indian Provisional Patent Application Ser. No 2926 CHE 2013 entitled Distributed bridging in audio video conferencing systems by Ham Systems Pte. Ltd. filed on Jul. 2 2013.

Embodiments of the present invention relate to audio and or video conferencing. More particularly embodiments of the present invention relate to distributed audio video bridging for conferencing endpoints.

Generally audio and or video conferencing is a tool for communication and collaboration between multiple typically 3 or more participants at different locations. Further audio and or video conferencing facilitates audio and or video communication between geographically distributed teams in global organizations and helps improve productivity and reduce costs for the global organizations.

Existing audio and or video conferencing system includes a plurality of endpoints and a dedicated bridge e.g. a multipoint control unit MCU connected to the endpoints. Exemplary endpoints include any terminals capable of video and or audio communication including desktop video phones mobile or cell phones video conferencing units and the like. In the existing audio and or video conferencing system participants use the endpoints to call into a common number or an address that is assigned to the dedicated bridge. The dedicated bridge may then enable bridging of audio and or video streams coming from the endpoints for conferencing the participants. Thus the conferencing between the participants is dependent on the availability of the dedicated bridge. This may limit the ability to conference with multiple people as and when required. Also the number of participants in the conferencing may depend on audio video processing capacity of the dedicated bridge.

In another existing audio and or videoconferencing system one of the endpoints participating in the conference can act as a bridge. In this conferencing system the endpoints that want to communicate among themselves call into or are called by the endpoint capable of acting as the bridge. Further the endpoint acting as the bridge receives audio and or video streams from the connected endpoints but may decode the video stream of an active participant and sends back the processed stream to all the participants. Furthermore the endpoint acting as the bridge mixes audio streams such that each participant receives audio streams of all participants except its own. However a number of participants that can be supported by the endpoint acting as the bridge may be limited by audio processing capabilities of the bridge. In other words the number of participants that can be supported by the endpoint acting as the bridge may be limited by a number of audio decodes the endpoint acting as the bridge can perform.

Other features of the present embodiments will be apparent from the accompanying drawings and from the detailed description that follows.

In the following detailed description of the embodiments of the invention reference is made to the accompanying drawings that form a part hereof and in which are shown by way of illustration specific embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention and it is to be understood that other embodiments may be utilized and that changes may be made without departing from the scope of the present invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims.

Embodiments described herein provide methods techniques and systems for distributed audio video bridging for conferencing endpoints. For establishing audio and or video conferencing a plurality of endpoints connects to a modified video communication terminal MVCT via a communication network. The MVCT including an audio video bridging module AVBM can be an endpoint or a central server. For example the MVCT can act as a participant and a bridge when MVCT is the endpoint. The MVCT can only act as a bridge when MVCT is the central server. The term endpoint refers to video communication terminals VCTs voice over Internet protocol IP communication terminals VoCTs and the like. Exemplary VCTs include terminals capable of video communication over IP including desktop video phones mobile or cell phones tablets stand alone or in built video conferencing units and the like. The VoCTs may include stand alone or in built terminals capable of audio communication over IP.

The AVBM then determines endpoints capable of holding audio and or video bridging. Further the AVBM chooses one of the determined endpoints depending on current load of the determined endpoints. Furthermore the AVBM transfers connection of one or more remaining endpoints connected to the MVCT to the chosen endpoint for load balancing. If the MVCT is the endpoint the AVBM and the chosen endpoint then enable audio and or video bridging of the endpoints and the MVCT based on connectivity information of the remaining endpoints with the MVCT and the chosen endpoint for conferencing participants. If the MVCT is the central server the AVBM and the chosen endpoint then enable audio and or video bridging of the endpoints based on connectivity information of the remaining endpoints with the MVCT and the chosen endpoint for conferencing participants.

Further the AVBM determines endpoints e.g. endpoints A and D which are capable of holding audio and or video bridging. In one example implementation the AVBM determines current load of the MVCT upon connecting the endpoints A D. The AVBM then determines endpoints A and D which are capable of holding the audio and or video bridging when the current load of the MVCT exceeds a threshold value. For example the AVBM determines the endpoints A and D based on hardware software and networking capabilities of the endpoints A and D. For example the hardware capabilities may include processing power accelerators memory current load and the like. The software capabilities may include protocols codecs bit rate resolutions supported security and other features that enhance video communication. The network capabilities may include bandwidth current network load and the like. In one example implementation the endpoints A and D may include distributed audio video bridging capabilities similar to the AVBM or may include only audio video bridging capabilities without distributed bridging capability.

Furthermore the AVBM chooses one of the end points A and D e.g. endpoint A depending on current load of the end points A and D. In addition the AVBM transfers the connection of the endpoint B to the endpoint A for load balancing as shown in . There are now two bridges namely the MVCT and endpoint A in the conference. The AVBM then enables the audio and or video bridging of the audio and or video streams associated with the endpoints A C and D and the MVCT . The endpoint A then enables audio and or video bridging of the audio and or video streams associated with the endpoints A and B and MVCT . In one example bridging and delivery of appropriate content is managed by the AVBM . Each bridge and A composes the audio streams in such a way that each participant connected to it receives the mixed audio of every participant except his own. The video streamed by the bridges might be chosen based on active speaker detection ASD or gesture based detection GBD or be a video matrix composed of participant streams. In some embodiments the ASD could have been used to detect a dominant speaker based on voice detection. In some embodiments the GBD could have been used to detect a dominant speaker based on gesture. In case of the ASD and GBD based endpoints the term dominant speaker refers to the participant in focus i.e. the participant whose content i.e. audio and or video is streamed across to the endpoints.

Referring now to the block diagram illustrates an endpoint E attempting to join the conference. In this scenario the AVBM determines that load capacity of the MVCT exceeds the threshold value with the addition of the endpoint E. Further the AVBM takes action to utilize processing capacities of the endpoint A or endpoint D capable of holding audio and or video bridging. In the example illustrated in the AVBM takes action to utilize the capacities of the endpoint A based on requirements of the endpoint E. The AVBM utilizes a processing power of the endpoint A or shifts the endpoint E so that it connects directly to the endpoint A and no session gets established between the endpoint E and MVCT . In one embodiment when an invite arrives at the endpoint A the endpoint A could manually accept the invite from the endpoint E the endpoint A could be programmed to accept all invites the endpoint A could be intimated by the MVCT to respond favorably to the invite or the endpoint A could be manually asked to respond favorably to the invite. With this the endpoint E joins the conference as shown in .

In some scenarios the endpoint E is notified about existing participants in the conference. The endpoint E might choose to continue or discontinue with the call based on the participants already present on the conference. In one embodiment when a call reaches a server it identifies that the call is to be routed to the conference. When this happens it intimates the user about the current status of the endpoint A and the participants connected with it. The endpoint E may choose to continue or discontinue the call based on this information. In another embodiment when a call reaches the endpoint A the endpoint A intimates the endpoint E about the current status of the endpoint A and the participants connected on him. The endpoint E may choose to continue or discontinue the call based on this information. The process of distributed audio and or video bridging is explained in more detail with reference to .

Even though are explained with reference to the MVCT as the endpoint one can envision that the same technique can be used for enabling distributed audio and or video bridging of the endpoints when the MVCT is a central server. The only difference in this scenario is that the MVCT acts only as a bridge and not as a participant in the conference that means it does not produce any audio and or video streams locally.

Referring now to which is a block diagram illustrating some components of the AVBM such as the one shown in according to one embodiment. As shown in the AVBM includes an audio receive module ARM an audio decode module ADM an audio processing and mixing module APMM an audio encode module AEM and an audio send module ASM to receive render decode process and send the audio streams. Furthermore the AVBM includes a video receive module VRM a video decode module VDM a video processing and composing module VPCM a video encode module VEM and a video send module VSM to receive render process compose decode encode and send the video streams.

In addition the AVBM includes an audio and or video synchronization module AVSM for synchronizing each of decoded audio and or video streams of each participant connected to the bridge before local play out. Also the AVBM includes an audio video transmission control module AVTCM to control parameters of the audio video streams such as the resolution bit rate frame rate and the like from each participant connected to the bridge. This enables bridging of more than otherwise possible participants by reducing the processing power needed by the AVBM to bridge the participants or by reducing the effective bit rate required at the bridge. Moreover the AVBM includes a distributed bridging module for managing bridging and delivery of appropriate content. Further the AVBM includes a call select module CSM to enable a virtual n way audio video bridging in the bridge.

In one exemplary embodiment the ARM enables the bridge to receive multiple audio streams in different formats from endpoints connected to it and de jitter each audio stream independently. Further the ADM decodes fully or partially each de jittered audio stream. Furthermore the VRM enables the bridge to receive multiple video streams in different formats and resolutions from the endpoints connected to it and de jitter each video stream independently if required. In addition the VDM enables decoding fully or partially each de jittered video stream.

Moreover the AVSM synchronizes each of the decoded audio and or video streams of each connected participant before local play out. The AVSM further synchronizes the audio and or video streams before encoding and streaming out to the participants. In one example the AVSM works across all the other sub components of the AVBM to track and re timestamp the audio and or video streams as required in order to achieve audio and or video synchronization of the transmitted audio and or video streams.

Also the CSM enables automatic and or manual selection of a participant or a list of participants based on preselected criteria to enable virtual n way audio video bridging capability in the bridge. This automatic and or manual selection of the participant or the list of participants facilitates in reducing the processor intensive audio video processing during audio video bridging without limiting the number of participants calling into the bridge. In some embodiments the automatic selection of the participant or the list of participants by the CSM takes control inputs from the bridge based on selection parameters and selection criteria. Further the CSM monitors all the participating endpoints at the bridge and based on the selection parameters and the selection criteria the CSM selects one or more active participants. Exemplary selection parameters or the selection criteria include specific participants to be decoded and displayed the number of participants who are active i.e. for example the participant at the endpoint is speaking participants who were active just before the currently active participant and so on. The CSM can also select a participant as an active participant if that participant has remained active for a predefined duration of time. Further the audio video streams from the selected active participants are decoded and displayed to the other endpoints at the bridge. In this scenario the endpoints can identify that they are on a conference where n way active speaker based bridge is present and may use voice activity detection VAD to not send their own video packets thereby reducing network load.

In some embodiments the manual selection of the participant or the list of participants by the CSM includes selection through signaling via standard protocols such as dual tone multiple frequency DTMF from the participants who want to be selected as an active participant or through manual selection at the bridge. Further the number of active participants that can be chosen using the manual selection is significantly higher than the number of active participants that can be chosen using the automatic selection. In an extreme use case scenario only the audio video stream from one of the participating endpoints can be selected at a time. Therefore the number of participating endpoints is independent of the processing capability of the bridge.

In some embodiments the CSM may enable the bridge to choose which participant the bridge wants to display on its own screen. The bridge may send this participant s video stream or the dominant speaker s video stream to all participants connected on it. The default stream sent is that of the dominant speaker.

Furthermore the APMM post processes the audio stream coming from each of the participants before playback and or re encoding. Exemplary post processing includes mixing the incoming audio streams based on a weighted averaging for adjusting the loudness of the audio stream coming from each of the participants. Furthermore the APMM composes the audio streams in such a way that each participant connected to it receives the mixed audio of every participant except his own.

In addition the VPCM processes and composes the RAW video streams received from the VDM . For example processing the decoded video streams includes resizing the video streams. In one example the VPCM composes the RAW video streams based on active speaker detection ASD or gesture based detection GBD or be a video matrix composed of participant streams. In one embodiment the VPCM performs a differential frame rate composition of different windows within a larger tiled window. For example the VPCM combines one video at 15 fps repeating every alternate frame while the other video is at 30 fps. Effectively the composed signal is at 30 fps but the region that is composed at 15 fps is encoded using lesser number of bits as every alternate frame is identical to the previous frame thus reducing the overall bit rate without needing any explicit selective coding in the encoder OR needing any selective coding of regions as separate streams. The participants may have the flexibility to display different audio and or video streams coming to them in a position and size as defined by the user OR an external program. Particularly the participants further have flexibility to be able to extract the region from the audio and or video stream which has the region information to display the region in the position and size as configured by the user or an external program.

Moreover the AEM encodes each of the audio streams coming from the APMM separately in a format required by each of the associated endpoints. Also the ASM receives each of the audio streams from the AEM and sends the encoded audio streams to each of the associated endpoints.

Further the VEM encodes each of the composed video streams coming from the VPCM in a format and resolution supported by each of the associated endpoints. In addition the VSM receives the encoded video stream from the VEM and sends them to the associated endpoints via the communication network. The VSM further sends the encoded video stream to one or more of remote servers via the communication network for broadcasting real time view by authorized people storing for archival non real time play out by the authorized people re distributing to the end points in a network and the like.

In an exemplary embodiment the processing modules such as the AEM VEM ADM VDM and the like can be accelerated at an endpoint endpoint on which the collaboration functionality is implemented using a co processing unit. For example the acceleration is done by sending the RAW signals over a peripheral interface such as a universal serial bus USB interface which then gets processed and is returned back in a compressed format as required over the same or another peripheral interface. In one example the signal sent over to the co processing is compressed in a format such as joint photographic experts group JPEG and the like that is of low complexity and is implemented on the end point and the co processing unit further de compresses and re compresses in a more complex format such as H.264 or high efficiency video coding HEVC .

Furthermore the AVTCM can control parameters such as resolution bit rate and frame rate of the audio video streams coming from each of the connected endpoints. In addition the AVTCM can request an endpoint to reduce the bit rate and or resolution of transmission of the audio video streams to reduce the bandwidth requirement and the processing power required at the bridge and thereby increases the number of participating endpoints at the bridge without compromising on the bridging experience. An exemplary case of requesting receiving and decoding 4 low resolution images of quarter video graphics array QVGA streams to compose one higher resolution video graphics array VGA stream at the bridge for display as well as re encoding as against decoding 4 VGA streams resizing each to QVGA before composing the images to a VGA resolution to display re encoding to achieve the same effect but with significant reduction of processing requirement at the bridge.

Also the DBM exchanges information about and with participants in the conference. The information exchanged is vital for the functioning of the conference. The DBM need to understand the capabilities of the endpoints in the conference to perform any action. Further the DBM achieves optimal configuration of the conference by utilizing the shared resources of processing power and capability effectively across the conference. Furthermore the DBM determines endpoints capable of holding audio and or video bridging to support a participant and dynamically shift participants across suitable endpoints in the conference to achieve best possible user experience. In addition the DBM provides co existence across participants and the DBM in the conference. For example the DBM provides support and co exists with a participant s endpoint when it starts performing bridging. It is necessary to understand that the conference may have one or more DBMs depending on the endpoints connected. In one embodiment there is a master slave model in which one of the DBMs usually the first takes up the role of a master DBM. Based on information from each of the DBMs it makes decisions for the whole conference and the other DBMs comply. In another embodiment the DBMs act as peers and synchronize information. Each DBM makes decisions for the immediate set of participants connected on it. This requires a greater amount of information synchronization as there is a bigger chance of failure due to simultaneous decision making. The functionalities of the DBM are explained in more detail with reference to .

Referring now to is a block diagram illustrating some components of the DBM such as the one shown in according to one embodiment. As shown in the DBM includes a communicator a synchronizer an optimizer a distributed bridge shifting DBS module and an information database DB . Further as shown in the communicator is communicatively coupled to the synchronizer optimizer and DBS module . Furthermore the optimizer and the DBS module are communicatively coupled to each other.

In one embodiment the conference is made possible through co existence between multiple endpoints. In order to identify and utilize bridging capabilities of the endpoints the DBM requires information about each participant connected on the conference at different points of time be it the start of the conference or during the ongoing conference. The communicator is responsible for both obtaining and sharing necessary information with the endpoints on the conference.

a If the endpoint is capable of bridging a maximum number of participants it can support as a bridge and a number of participants currently connected to it are identified. Once identified as a bridging capable the endpoint is constantly probed to identify the number of participants connected to it.

b If the endpoint is not capable of bridging the information is utilized to make appropriate decisions for the conference.

In some embodiments the communicator may request identify the above mentioned information from about a participant as and when it is required through the information exchange mechanisms. In one example exchange of information between the participants and a DBM or in between DBMs can be made possible in different ways both standard and proprietary.

In some embodiments the DBM probes the participants connected to it to obtain the following information through standard means 

The communicator also manages the information that it obtains and information about itself by saving it as part of the information database DB that is a part of it. It uses this to save history preferences and state information that it attains about different endpoints.

Further the conference is aimed at leveraging computing power of different endpoints in the conference to share load. Though there are different ways to assess load the bridging performed by an endpoint presents a direct assessment of load on an endpoint in terms of both system and network load. The optimizer ensures that the bridging load is shared across endpoints that are bridge capable. An optimal load ensures quality and reduces risk of failure in the conference. Achieving an optimal configuration involves two steps 

In one embodiment the DBM could employ static algorithms like a round robin method. It could be a basic algorithm for a homogenous system composing of similar BCPs or a weighted algorithm in case of a heterogeneous system. In another embodiment the DBM could employ dynamic algorithms where the BCP identifies whenever the load crosses its threshold and initiates a participant transfer either. In yet another embodiment the DBM could employ dynamic algorithms where the BCP identifies whenever the load falls below a threshold and requests a participant transfer. The transfer of connection of the participant is explained in more detail with reference to . In one example implementation the DBM maintains a threshold load factor for each BCP to decide whether the BCP is under loaded or over loaded. At any point in time in the conference the DBM maintains a BCP Load factor map including under loaded BCPs which are a set of BCPs for which a current load factor is less than their individual thresholds over loaded BCPs which are set of BCPs for which a current load factor is more than their individual thresholds and threshold load BCPs which are a set of BCPs on which a current load factor has reached their threshold. The DBM keeps refining these lists by getting the latest information from the BCPs. The optimizer constantly tries to bring the load factor to a threshold level across the endpoints in the conference. The load sharing is continuously optimized such that the number of under loaded and over loaded BCPs is a minimum. The process of load optimization is explained in more detail with reference to .

Furthermore the DBS module is employed to move one more participants across the endpoints in the conference. In other words the DBS module shifts the participants in the conference across bridge capable endpoints in the conference. This could be done either at the start of a conference while adding a new participant to the DBC or at run time. The DBS module a optimize load across the conference by moving participants across the conference to endpoints with lesser load the overall load on the conference is kept at an optimal level always b moves participants across endpoints so that they are bridged through more suitable endpoints factors like compatibility geographical location etc. could guide in this decision and c handover when a current bridge decides to leave the conference. If the bridging endpoint wants to leave the conference due to some reason like low power network or system overload and so on or when it is going through a sudden failure it can dynamically shift participants to another bridge and leave the conference. By this the other participants on the conference remain unaffected and the conference continues.

In addition the synchronizer creates and maintains the conference across different types of endpoints. The conference happens across different types of endpoints 

In the conference there can be different configurations possible. Typically there are endpoints that understand and co exist with the DBM and there are endpoints that are non DBM ones. This is where the role of the synchronizer is needed.

At block A the connection of one or more remaining endpoints is transferred to the determined endpoint by the AVBM for load balancing. At block A audio and or video bridging of the endpoints and the MVCT is enabled by the AVBM and the determined endpoint based on connectivity information of the remaining endpoints with the MVCT and the determined endpoint for conferencing participants. In an example implementation the MVCT and the determined endpoint are synchronized by the AVBM. Upon synchronizing the MVCT and the determined endpoint the audio and or video bridging of the endpoints and the MVCT is enabled by the AVBM and the determined endpoint based on connectivity information of the remaining endpoints with the MVCT and the determined endpoint. In one embodiment the audio and or video bridging of audio and or video streams of the MVCT and the endpoints connected to the MVCT is enabled by the AVBM. Further the audio and or video bridging of audio and or video streams of the determined endpoint and the endpoints connected to the determined endpoint is enabled by the determined endpoint. In some embodiments one of the participants or a list of participants are automatically selected. Further video streams associated with the one of the participants or the list of participants are displayed on the plurality of endpoints and the MVCT. The one of the participants or the list of participants selected automatically may be active participants in the conference.

In some embodiments current load of the MVCT is determined by the AVBM when a new endpoint is connecting to the MVCT. The new endpoint is then transferred to any endpoint capable of holding audio and or video bridging by the AVBM when the current load of the MVCT exceeds the threshold value. The process of distributed audio video bridging for conferencing endpoints is described in more detail with reference to and G.

Referring now to which illustrates a flow diagram B of another example method for distributed audio video bridging for conferencing endpoints according to one embodiment. At block B a plurality of endpoints are connected to a MVCT via a communication network. The MVCT including an AVBM is a central server which can acts as a bridge. In other words the MVCT can only bridge the participants and cannot participate in the conference. At block B one of the endpoints capable of holding audio and or video bridging is determined by the AVBM. In an example implementation current load of the MVCT is determined by the AVBM upon connecting the endpoints to the MVCT. Further in the example implementation the one of the endpoints capable of holding the audio and or video bridging is determined by the AVBM when the current load of the MVCT exceeds a threshold value. In one example the one of the endpoints capable of holding the audio and or video bridging is determined based on hardware software and networking capabilities of the one of the endpoints.

At block the connection of one or more remaining endpoints is transferred to the determined endpoint by the AVBM for load balancing. At block B audio and or video bridging of the endpoints is enabled by the AVBM and the determined endpoint based on connectivity information of the remaining endpoints with the MVCT and the determined endpoint for conferencing participants. In an example implementation the MVCT and the determined endpoint are synchronized by the AVBM. Upon synchronizing the MVCT and the determined endpoint the audio and or video bridging of the endpoints is enabled by the AVBM and the determined endpoint based on connectivity information of the remaining endpoints with the MVCT and the determined endpoint. In one embodiment the audio and or video bridging of audio and or video streams the endpoints connected to the MVCT is enabled by the AVBM. Further the audio and or video bridging of audio and or video streams of the determined endpoint and the endpoints connected to the determined endpoint is enabled by the determined endpoint.

In some embodiments current load of the MVCT is determined by the AVBM when a new endpoint is connecting to the MVCT. The new endpoint is then transferred to any endpoint capable of holding audio and or video bridging by the AVBM when the current load of the MVCT exceeds the threshold value. The process of distributed audio video bridging for conferencing endpoints is described in more detail with reference to and G.

Referring now to which illustrates a flow diagram of an exemplary call transfer for shifting participants from one bridge to another bridge during distributed audio video bridging enabled audio and or video conferencing according to one embodiment. In the example illustrated in there are three stages in shifting participants in a conference. The stage is a bridging scenario with a bridge in conference with participants. Particularly the stage describes a situation where an endpoint enters into a conference with other participants. In this case B is the bridge that hosts the conference between X Y and Z. Further the stage describes transfer of one or more participants from the bridge to another bridge and or another participant capable of bridging. Particularly the stage describes a situation where B acts as a transferor and a participant Z which is capable of bridging acts as a transfer target. participant X gets transferred from B to Z as shown in . In this scenario the transferor B doesn t terminate session with the transfer target Z. In this case there are multiple bridges in the conference and a DBM in B handles the situation by sending appropriate content to each participant.

Furthermore the stage describes the bridge transferring participants to another bridge and or another participant capable of bridging until it is no longer performing bridging. In this case the bridge may or may not remain connected to the conference. Particularly the stage describes a situation where B continues to act as the transferor and the participant Z as the transfer target. Participant Y gets transferred from B to Z as shown in . For example REFER message shown in contains information about the transfer target and the call session in progress between the transferor and the transfer target. REPLACES message contains information about the call session in progress between the transferor and transfer target. In this scenario the transferor B doesn t terminate session with the transfer target Z. Transfer is complete and B no longer performs bridging. In this case the situation is again that of a single bridge in the conference namely Z.

Even though is explained with reference to an attended call transfer method one can use a blind call transfer method or a call forwarding scenario. In some embodiments the call forwarding scenario is explained using a SIP protocol but can be extended to other protocols as well. An incoming call INVITE carries with it the capabilities of the endpoint and the basic requirements to enter into a call with it. This information can be used by the DBM to determine a suitable BCP to support the new participant as part of the conference. The DBM does a SIP call forwarding in this scenario to identify the suitable BCP.

Referring now to which illustrate flow diagrams A C of example methods for load optimization during distributed audio video bridging enabled audio and or video conferencing according to one embodiment. Particularly illustrates the flow diagram A of the example method for load optimization in an on going distributed audio video bridging enabled audio and or video conferencing. At block A a BCP load factor map is recreated based on latest information. At block A an over loaded BCP is selected. At block A a check is made to determine whether all participants on the over loaded BCP iterated. If all the participants on the over loaded BCP are not iterated a participant connected to the over loaded BCP is selected at block A. At block A suitable BCPs are selected from an under loaded BCP list to support the participant. At block A a check is made to determine whether all under loaded BCPs are iterated. If all the under loaded BCPs are iterated process steps from block A are repeated. If all the under loaded BCPs are not iterated load factor on the under loaded BCP load factor on the original BCP and overall load impact assuming participant transfer to the under loaded BCP are predicted at block A. At block A the predicted load factors are saved and the process steps from block A are repeated.

If all the participants on the over loaded BCP are iterated a configuration with lowest predicted overall load is identified at block A. At block A a check is made to determine whether current load is greater than the lowest load. If the current load is less than the lowest load the process steps from block A are repeated. If the current load is greater than the lowest load distributed bridge shifting is used to reduce the current load at block A and the process steps from block A are repeated.

Particularly illustrates the flow diagram B of the example method for load optimization when a participant joins the distributed audio video bridging enabled audio and or video conferencing. At block a state of the conference is idle. When an incoming outgoing call to from an endpoint is made suitable BCPs to support this participant are selected from an under loaded BCP list at block B. At block B a check is made to determine whether all under loaded BCPs are iterated.

Particularly illustrates the flow diagram C of the example method for load optimization when a participant leaves the distributed audio video bridging enabled audio and or video conferencing. At block C the conference is in progress. When a participant leaves the conference information about the conference state is obtained at block C. At block C a check is made to determine whether reconfiguration is required. If the reconfiguration is required participants are shifted accordingly at block C and the process steps from block C are repeated. If the reconfiguration is not required the process steps from block C are repeated.

Referring now to which illustrate block diagrams A G of example distributed audio video bridging enabled conferencing systems according to one embodiment. Particularly illustrates the block diagram A including a bridge with DBM B in call with a DBM based endpoint X and a non DBM based endpoint Y . In the example illustrated in B makes an outgoing call to participant W which is a non DBM based endpoint. From W s response to the invite from B the capabilities of W are known. An optimizer in B makes an assessment of the best endpoint to support W at this point. If B is not suitable then it establishes a signaling only session between W and B . Then a DBS module in B is used to shift the participant W to a better suited BCP. In this case however B is a suitable bridge for participant W and the session continues. In this scenario if X is a dominant speaker then a video stream associated with X selected by B is displayed on all the endpoints.

Particularly illustrates the block diagram B including the bridge with DBM B in call with the DBM based endpoint X the non DBM based endpoint Y and the non DBM based endpoint W . In the example illustrated in a participant V which is a non DBM based endpoint makes an incoming call to Y. The DBM in B detects it when a participant connected on it has become a bridge using a communicator in the DBM. Based on this it acts accordingly to ensure that a video stream of a dominant speaker gets displayed on all the participants connected to it. Y which is the non DBM based endpoint enters bridging. There are 2 kinds of conferencing possible here 

Particularly the block diagram illustrates ongoing conference with two active connected bridges B and Y. Participants X and W are connected to B while participant V is connected to Y. Participant U a non SBM based endpoint makes an incoming call to B . When B receives the incoming call Invite it gathers the capabilities of U. This information is passed to the optimizer to identify a best possible BCP to support U. The optimizer identifies X to be the suitable BCP. Standard or proprietary DBS techniques are applied to shift participant U to X . With this X starts Bridging. So there are three bridges. Since X and B are DBM based endpoints. The two scenarios covered here involve interaction between X and B for dominant speakers on each of them. With respect to Y there is no difference in behavior due to the addition of a participants on the segment B . It simply expects a video stream from B . Y and V have either the dominant speaker layout or the video matrix layout depending on the kind of bridge.

If the dominant speaker is U bridge B displays the video stream of the dominant speaker chosen by B i.e. composed stream from X i.e. U bridge X displays the video stream of the dominant speaker chosen by X i.e. U participant W displays the video stream of the dominant speaker chosen B i.e. composed stream from X i.e. U and participant U displays the video stream of the dominant speaker chosen by X i.e. U. If the dominant speaker is W bridge B displays the video stream of the dominant speaker chosen by B i.e. W participant X displays the video stream of the dominant speaker chosen X i.e. composed stream from B i.e. W participant W displays the video stream of the dominant speaker chosen by B i.e. W and participant U displays the video stream of the dominant speaker chosen by X i.e. composed stream from B i.e. W. In these scenarios there is no processing required in the interfacing between two DBMs that are working based on ASD or GBD. The technology by itself handles the scenario. Miscellaneous communication can happen between DBMs X and B using the communicators to further optimize the conference. In this scenario B is the master bridge and X uses the communicator to request B to make decisions and or pass information.

Particularly the block diagram D illustrates ongoing conference with three active connected bridges B X and Y. Participants W is connected to B participant V is connected to Y and participant U is connected to X. Incoming call is made by participant T to B and participant R to B . When B receives the incoming call Invite from T it gets the capabilities of T . It runs this information through the optimizer. In this case the optimizer identifies X to be the suitable BCP. T is shifted to X using the DBS module. When B receives the incoming call invite from R it gets the capabilities of R. It runs this information through the optimizer. In this case the optimizer identifies U to be the suitable BCP. R is shifted to U using the DBS. U becomes a bridge and the conference has four active connected bridges as shown in .

Further Bridge Y makes an outgoing call to S which accepts it. Bridge continues bridging in the same fashion. This addition does not affect the conference in any way. Since Y is the non DBM endpoint it does not embody many of the functionalities that help to optimize the conference. The master DBM is unable to request certain behavior from this endpoint. However it ensures that the co existence between DBM and non DBM endpoints is not affected using the synchronizer. The conference can continue growing by utilizing the bridging ability of any endpoint connected to the DBM. For example even though T R and W are not utilized in this scenario information about them is available to B through the communicator information about T and W is constantly gathered through the communicator. Information about R was gathered by B before DBS. If R were DBM based B would directly communicate with it . If these endpoints are also bridge capable they could be used to optimize load or support more participants.

Particularly the block diagram F illustrates ongoing conference with four active connected bridges B X W and Y. In one example participant W decides to leave the conference. Immediately the optimizer takes action by reconfiguring the system for optimal load distribution. In this case it might employ DBS to transfer a participant from X to B . Here it transfers bridge U to B . The conference continues unaffected as the synchronizer in B will adapt according to the non DBM based endpoint of U.

Particularly the block diagram G illustrates a continuation of the block diagram F X might experience a situation where it wants to leave the conference. X before terminating the call communicates that it is leaving the conference to the master bridge B . The B requests X to perform DBS on the existing participants before leaving the conference and also suggests the suitable bridge to shift them. The bridge X then transfers participant T to the suggested suitable bridge.

In one embodiment an article comprising a non transitory computer readable storage medium having instructions thereon which when executed by a computing platform result in execution of the above mentioned methods. The method described in the foregoing may be in a form of a machine readable medium embodying a set of instructions that when executed by a machine causes the machine to perform any method disclosed herein. It will be appreciated that the various embodiments discussed herein may not be the same embodiment and may be grouped into various other embodiments not explicitly disclosed herein.

In various embodiments the systems and methods described in propose a technique for distributed audio video bridging for conferencing endpoints. In other words the proposed technique enables audio and or video bridging of the endpoints by more than one bridge. That is the proposed technique utilizes the processing capacity of participants endpoints during audio and or video conferencing. Thus a participant can join the conference by dialing into any participant in the ongoing conference.

In addition it will be appreciated that the various operations processes and methods disclosed herein may be embodied in a machine readable medium and or a machine accessible medium compatible with a data processing system e.g. a computer system and may be performed in any order e.g. including using means for achieving the various operations . Accordingly the specification and drawings are to be regarded in an illustrative rather than a restrictive sense.

