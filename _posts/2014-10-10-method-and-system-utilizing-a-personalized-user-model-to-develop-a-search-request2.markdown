---

title: Method and system utilizing a personalized user model to develop a search request
abstract: A method and system for developing a computer-executable query relating to a search request issued by a user includes determining whether a search term of the search request has a user-specific meaning, connotation, context, or association based on an analysis of electronic content associated with the user and/or an analysis of interactions of the user with electronic content that is accessible to the user through one or more computing devices. If the search term has a user-specific meaning, connotation, context, or association, the method and system can incorporate the user-specific meaning, connotation, context, or association into the search request and/or the computer-executable query.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09594850&OS=09594850&RS=09594850
owner: SRI INTERNATIONAL
number: 09594850
owner_city: Menlo Park
owner_country: US
publication_date: 20141010
---
This application is a continuation of and claims the benefit of and priority to U.S. Utility application Ser. No. 13 298 374 filed Nov. 17 2011 which is U.S. Pat. No. 8 868 590 issue date Oct. 21 2014 and is incorporated herein by this reference in its entirety.

This invention was made in part with government support under contract number FA87150 07 D 01185 awarded by The United States Air Force Research Laboratory. The Government has certain rights in this invention.

Many users demand efficiency in their online interactions and expect to obtain the information they need from their computing devices in the shortest possible amount of time. It can be challenging and even frustrating for these users to find the information they need in a computing system quickly. One reason for this is that conventional search engines often treat the user s query as a set of keywords with little or no effort to interpret the underlying meaning or connotation of the user s request. As a result it may take a person several attempts at searching to find the desired information or the search effort may even end in failure.

In addition many people are accustomed to using very short phrases abbreviations acronyms truncated words or their own shorthand in their computing activity. This is often a result of the desire for speed and the small size and limited keyboard of many mobile computing devices. The increasing popularity of text messaging and online services such as TWITTER LINKEDIN and or other applications that impose character limits may also encourage brevity. Moreover whether or not a search request is particularly succinct it may contain terms that have a special meaning or connotation which is personal to the particular user but which may not be readily discernible using traditional query analysis techniques.

Some electronic search systems have used public dictionaries query logs search engine usage characteristics crowd sourcing and or consensus relevancy methods in an effort to better resolve the intention of a search request. However these tools and techniques typically are not well equipped to determine when a search term has a user specific meaning or connotation or to determine the user specific meaning of a search term. As a result the search may return results that have little or no relevance to the information the user was seeking.

With the incorporation of Global Positioning Systems GPS or similar technology into many computing devices search engines may now have access to useful information about the user s current geographic location and nearby people places or things. Such information can be used to improve or enhance search results where current geographic location is a relevant aspect of the information desired e.g. a search for local stores gasoline stations etc. . However without more this information may be of little utility more generally e.g. for searches that are not primarily location oriented.

According to at least one aspect of this disclosure a method includes maintaining in an automated fashion a user specific profile that includes information relating to at least one electronic interaction of a user with at least one content where the at least one content is accessible to the user through at least one computing device. The method includes receiving a search request from the user where the search request includes at least one search term. The method also includes determining whether the at least one search term has an association with the information in the user specific profile. If a search term has an association with the information in the user specific profile the method includes formulating at least one computer executable query based on the search request and based on the association of the search term with the information in the user specific profile.

The method may include replacing the search term with at least one word relating to the association of the search term with the information in the user specific profile. The method may include adding to the search request at least one word relating to the association of the search term with the information in the user specific profile. The at least one word is added to either broaden or narrow the scope of the search request.

The method may include conducting at least one of a natural language analysis semantic analysis topic analysis heat map analysis context analysis and query history analysis of the at least one search term using the user specific profile.

The method may include formulating a first alternative search request based on a first association of the search term with first information in the user specific profile and formulating a second alternative version of the search request. The method may include formulating the second alternative version of the search request based on a second association of the search term with second information in the user specific profile.

The method may include outputting at least one of the alternate versions of the search request in a form that is at least one of perceptible editable and selectable by the user. The method may include executing a first computer executable query formulated based on the first alternative search request to generate a first search result executing a second computer executable query formulated based on the second alternative search request to generate a second search result and selecting one of the first and second search results.

The method may include analyzing a plurality of words in the user specific profile determining associations between or among the words determining weights assigned to one or more of the words and formulating the at least one computer executable query based on at least one of a word in the user specific profile an association between or among words in the user specific profile and a weight assigned to one or more words in the user specific profile.

The method may include creating at least one alternate version of the search request including a user specific meaning of at least one search term. The method may include selecting one of the alternate versions of the search request. The method may include outputting the at least one alternate version of the search request in a form that is at least one of perceptible editable and selectable by the user prior to the formulating of the at least one computer executable query.

The at least one search term may include an acronym having a user specific meaning and the method may include determining the user specific meaning of the acronym using the user specific profile. The at least one search term may include an abbreviation or truncated word having a user specific meaning and the method may include determining the user specific meaning of the abbreviation or truncated word using the user specific profile. The at least one search term may include a proper noun having a user specific meaning and the method may include determining the user specific meaning of the proper noun using the user specific profile. The at least one search term may include an unknown word and the method may include accessing the user specific profile to automatically resolve the unknown word prior to formulating the computer executable query.

The method may include accessing the user specific profile to automatically associate at least one related word topic sub topic concept context or connotation with the search term prior to formulating the at least one computer executable query. The method may include automatically modifying the search request to include the at least one related word topic sub topic concept context or connotation associated with the search term as the user is inputting the search request.

The method may include executing the computer executable query evaluating the results of the executing of the query and generating at least one alternate version of the search request based on the results of the executing of the query.

The method may include monitoring at least one electronic interaction of the user in response to the determining of whether the at least one search term has an association with the information in the user specific profile or the formulating of the at least one computer executable query and updating at least one of the search request the computer executable query and the user specific profile based on the monitoring.

Also according to at least one aspect of this disclosure at least one computer accessible medium includes a plurality of instructions that in response to being executed result in a computing device receiving a search request from a user where the search request includes at least one search term accessing a user specific profile comprising words associations between or among the words and weights assigned to one or more of the words the user specific profile being automatically created as a result of an automated analysis of electronic content associated with the user analyzing the at least one search term using the user specific profile to interpret correct or augment the at least one search term and formulating a computer executable query corresponding to the search request and based on a user specific interpretation correction or augmentation of the at least one search term.

The executing of instructions may result in the computing device receiving input from the user relating to at least one of the user specific interpretation correction or augmentation of the at least one search term and updating at least one of the search request the computer executable query and the user specific profile based on the input from the user.

Further according to at least one aspect of this disclosure a computing device includes at least one processor and at least one memory device coupled to the at least one processor where the at least one memory device includes stored therein a plurality of instructions that when executed by the at least one processor cause the at least one processor to identify at least one search term of a search request received from a user access a database comprising words associations between or among the words and weights assigned to one or more of the words wherein the words associations and weights in the database are derived from an automated analysis of electronic content and interactions associated with the user determine at least one user specific meaning of the at least one search term using the database and formulate a computer executable query corresponding to the search request and based on the user specific meaning of the at least one search term.

The instructions when executed by the at least one processor may cause the at least one processor to receive input from the user relating to the user specific meaning and update at least one of the search request the computer executable query and the database in response to the input from the user.

While the concepts of the present disclosure are susceptible to various modifications and alternative forms specific exemplary embodiments thereof have been shown by way of example in the drawings and will herein be described in detail. It should be understood however that there is no intent to limit the concepts of the present disclosure to the particular forms disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims.

In the following description numerous specific details are set forth in order to provide a more thorough understanding of the present disclosure. It will be appreciated however by one skilled in the art that embodiments of the disclosure may be practiced without such specific details. In some instances details such as control structures and full software instruction sequences have not been shown in order not to obscure the invention. Those of ordinary skill in the art with the included descriptions will be able to implement appropriate functionality without undue experimentation.

References in the specification to one embodiment an embodiment an illustrative embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

Embodiments of the invention may be implemented in hardware firmware software or any combination thereof. Embodiments of the invention may also be implemented as instructions stored using one or more machine readable media which may be read and executed by one or more processors. A machine readable medium may include any mechanism for storing or transmitting information in a form readable by a machine e.g. a computing device . For example a machine readable medium may include read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices and or others.

In the drawings specific arrangements or orderings of schematic elements such as those representing devices instruction blocks and data elements may be shown for ease of description. However it should be understood by those skilled in the art that the specific ordering or arrangement of the schematic elements in the drawings is not meant to imply that a particular order or sequence of processing or separation of processes is required. Further the inclusion of a schematic element in a drawing is not meant to imply that such element is required in all embodiments or that the features represented by such element may not be included in or combined with other elements in some embodiments.

In general schematic elements used to represent instruction blocks may be implemented using any suitable form of machine readable instruction such as software or firmware applications programs functions modules routines processes procedures plug ins applets widgets code fragments and or others and that each such instruction may be implemented using any suitable programming language library application programming interface API and or other software development tools. For example some embodiments may be implemented using Java C C Ruby and or other programming languages. In some embodiments an open source information retrieval software library such as LUCENE may be used.

Similarly schematic elements used to represent data or information may be implemented using any suitable electronic arrangement or structure such as a database data store table record array index hash map tree list graph file of any file type folder directory or other grouping of files header web page meta tag and or others. For example in some embodiments an open source distributed database system such as CASSANDRA may be used.

Further in the drawings where connecting elements such as solid or dashed lines or arrows are used to illustrate a connection relationship or association between or among two or more other schematic elements the absence of any such connecting elements is not meant to imply that no connection relationship or association exists. In other words some connections relationships or associations between elements may not be shown in the drawings so as not to obscure the invention. Also for ease of illustration a single connecting element may be used to represent multiple connections relationships or associations between elements. For example where a connecting element represents a communication of signals data or instructions it should be understood by those skilled in the art that such element may represent one or multiple signal paths as may be needed to effect the communication.

Referring now to an illustrative information retrieval system is embodied in a computing device . The information retrieval system may be embodied as a stand alone software application or may be embedded in or accessed by one or more other applications. For example all or portions of the information retrieval system may be incorporated into other systems or software applications that have a search feature. Such applications or systems may include for example operating systems web browsers word processing software electronic mail systems social networking systems application specific information retrieval systems and web or mobile device based applications for trip or vacation planning online shopping research newsgathering music and or video sharing and or others.

Further the information retrieval system may be local to a particular computing device or may be distributed across multiple computing devices . Illustrative embodiments of the information retrieval system and the computing device are described below with reference to .

The information retrieval system includes a query developer module which interfaces with a user specific model or personal user model to interpret the search term s of a search request determine user specific meanings of the search terms and or augment the search request with additional search terms as may be needed. The term user specific meaning as used herein may include for example one or more of the following user specific definitions connotations and or associations or relationships with other search terms words higher level concepts related topics and or sub topics context information and or other reference information that is particular to the user issuing the search request .

The query developer uses the interpreted and or augmented search terms to formulate one or more computer executable queries that correspond to the search request .

The information retrieval system also includes a query executer module which interfaces with the query developer and a search realm to execute the computer executable query ies generated by the query developer .

In general the search realm includes one or more electronically retrievable data or information elements such as word processing documents spreadsheets presentation slides text image audio video or multimedia files web pages electronic messages attachments to electronic messages calendar events address book entries task list entries notes comments and individual pieces of content or information stored in any location that is accessible to the information retrieval system including for example personal shared or public services applications databases document management systems contact management systems and or customer relationship management CRM systems a combination of any of the foregoing and or others.

As shown in the illustrative search realm includes a personal corpus or body of user specific content and interactions and may include non user specific content and activity . Examples of user specific content and interactions are described below in connection with a discussion of the user specific model .

Some examples of non user specific content and or activity include information that is publicly available on the Internet or through Internet based applications or other networked or online services such as news articles educational information maps address and or phone directories geographic information such as time zones zip codes and currency conversions and product or service descriptions as well as crowd sourcing data such as public dictionaries or thesauruses e.g. DICTIONARY.COM domain specific dictionaries and or ontologies e.g. medical legal or scientific dictionaries and or ontologies public knowledge bases such as WIKIPEDIA lists of search terms that are most frequently used by a population of users and rankings of online content that have been most frequently or most recently accessed by a population of users.

The query executer returns one or more results retrieved from the search realm or no results in response to the computer executable query formulated by the query developer for the search request . The results may be presented to the user in any suitable form such as a list table or matrix of data hyperlinks text image audio audiovisual files thumbnail files and or other items.

In operation the information retrieval system receives a search request at the computing device . The search request may be input by a user in any suitable form that can be processed by the computing device including text e.g. typed or handwritten speech or others. In some embodiments the search request may be automatically generated by the computing device without user input.

The search request may include keywords or natural language and may include one or more search terms each of which may alone or in combination have one or more user specific meanings connotations contexts or associations which are particular to the user associated with the search request . For example a search term may include a truncated shorthand or abbreviated form of a word or phrase an acronym a nickname or a proper noun the meaning of which is particular to the user submitting the search request and therefore cannot be accurately determined from public dictionaries or by standard query analysis techniques. The query developer uses the user specific model to determine whether a search term has a user specific meaning and if so to discern the user specific meaning and incorporate the user specific meaning into the corresponding computer executable query as will be explained further below.

As indicated by the bidirectional arrows and the creation and or analysis of the search request may be an iterative process. For example in some embodiments the query developer may analyze the search request as it is being input by the user and automatically correct or complete the search request on the fly e.g. in real time based on the user s input and or information obtained by the query developer from the user specific model . Also at any time during its processing of the search request the query developer may output the search request and or one or more modified or alternate versions thereof in any suitable form that is perceptible to the user using for example text boxes windows or other suitable user interface techniques and may enable the user to directly edit the search request at that time.

Alternatively or in addition the query developer may generate one or more intermediate search requests based on its analysis of the search terms of the original search request using the user specific model . As compared to the search request each of the intermediate search requests may include additional or different search terms or modifications of search terms as a result of interactions between the query developer and the user specific model .

In some embodiments the query developer may present the intermediate search requests to the user and wait for the user to select a desired one of the intermediate search requests e.g. intermediate search request for further processing. In other embodiments the query developer may automatically e.g. without user input select an intermediate search request based on information gleaned from the user specific model instead of displaying the intermediate search requests and waiting for the user to make a selection. Also at any time during its processing the query developer may output the intermediate search request and or one or more modified or alternate versions thereof in any suitable form that is perceptible to the user using for example text boxes windows or other suitable user interface techniques and may enable the user to directly edit the intermediate search request at that time.

Once the user specific meaning s of the search term s of the search request have been determined and or an intermediate search request is selected e.g. by the user or automatically by the query developer the query developer formulates a computer executable query based on the search request or the selected intermediate search request e.g. intermediate search request as the case may be.

Typically the computer executable query includes Boolean operators and may include semantic data that associates semantic types or categories with search terms that appear to include semantic information such as proper nouns email addresses phone numbers file names and or others.

As an example without any analysis by the query developer using the user specific model a query based on the illustrated search request might include a string such as keyword john OR keyword wakia OR keyword rep . However with the analysis by the query developer which interprets the search terms to determine user specific meanings of the search terms and augments the search terms as needed the query string based on the illustrated search request may include name John Wakia AND title sales representative or name John AND document title Wakia AND document type report or name John AND company Wakia and company division phone repair . 

The query executer executes the computer executable query generated by the query developer to look for the requested information in the search realm or a portion thereof. As indicated by the bidirectional arrows the execution of the query may be an iterative process. For example in some embodiments the query executer may execute a query to obtain a set of interim results interface with the query developer as needed to analyze the interim results using the user specific model and suggest one or more intermediate search topics to the user based on the analysis of the interim results. Each intermediate search topic may relate to one or more concepts attributes characteristics and or relationships associated with or shared by or among one or more of the interim results as determined by the query developer using the user specific model .

In some embodiments the query executer may present the intermediate search topics to the user for consideration and wait for the user to select one of the suggested intermediate search topics e.g. intermediate search topic prior to displaying any query results . In other embodiments the query executer may present the intermediate search topics to the user at the same time as or after the query results are displayed. In these or other embodiments the query executer s interaction with the user may take the form of a natural language dialog with the user or a structured dialog with the user using e.g. pull down lists check boxes or other features of user interface design . In still other embodiments the query executer may interface with the query developer as needed to automatically e.g. without user input analyze the intermediate search topics and select an intermediate search topic e.g. intermediate search topic for further processing without displaying the intermediate search topics or prompting the user for a selection. Also at any time during its analysis the query developer may output the intermediate search topic and or one or more modified or alternate versions thereof in any suitable form that is perceptible to the user using for example text boxes windows or other suitable user interface techniques and may enable the user to directly edit the intermediate search topic at that time.

If an intermediate search topic is selected e.g. automatically or by the user the query executer may interface with the query developer to reformulate the computer executable query based on the selected intermediate search topic e.g. intermediate search topic and execute the reformulated query against the search realm as may be needed or may simply display the query results that correspond to the selected topic e.g. the intermediate search topic .

In the illustrated example of the original search request is john wakia rep which includes the search terms john wakia and rep. Accessing the user specific model the query developer determines that the user knows someone named John Wakia works with a person named John on a project involving a company named Wakia and has contact information for a person named John who repairs Wakia phones.

In this example each of the search terms has multiple possible user specific meanings. The query developer may interface with the user specific model and automatically e.g. without user input determine that the user is most likely looking for John Jones s reports on Wakia deals. The query developer may arrive at this determination by for example analyzing records of the user s most recent electronic interactions e.g. email messages recently sent or received calendar entries added or deleted recent changes in geographic location etc. which may be obtained from the user specific model .

However in the illustrated example the query developer generates the intermediate search requests based on information obtained from the user specific model . Through an electronic dialog with the query developer the user selects the intermediate search request John s Wakia report. The query developer formulates a computer executable query incorporating the information provided by the selected intermediate search request and the query executer executes the query in response to the user s selection of the intermediate search request .

Applying the user specific model the query executer may interface with the query developer to organize or cluster the search results generated by the executing of the intermediate search request into the intermediate search topics . Here again the user specific model may be leveraged to automatically e.g. without user input identify which of the intermediate search topics appears to be most applicable to the original search request .

However in the illustrated example the intermediate search topics are displayed and the user selects the search topic John Jones s reports on deals with Wakia. The query executer interfaces with the query developer to reformulate the computer executable query to include the details of the selected intermediate search topic . For example the reformulated computer executable query may include the following string name John Jones AND company Wakia AND document summary deals AND document type report . 

Referring further to the user specific model will now be briefly described. In some embodiments the user specific model may include one or more of the features described in U.S. patent application Ser. No. 13 149 536 filed May 31 2011 entitled Method and Apparatus for User Modelization which is incorporated herein by this reference in its entirety.

The illustrative user specific model includes a user specific profile an electronic content and interaction analyzer module and the personal corpus or body of user specific content and interactions . The electronic content and interaction analyzer includes one or more computer executable instructions that interface with the user specific content and interactions to create and update the user specific profile typically in an automated fashion e.g. on an continuous ongoing basis for example as a background process .

The personal corpus or user specific content and interactions generally includes information created by or about the user and or the user s interactions with electronic content that is accessible to the user through one or more computing devices. Such information and or interactions may include for example data text image audio and video files presentation slides or files spreadsheets electronic messages email attachments address book and calendar entries and the like as well as records of information pertaining to the user s online or local computing activity query histories search results intermediate search requests web sites visited and or bookmarked online or local computer applications or services subscribed to e.g. RSS feeds TWITTER follows automated alert services etc. user specific configuration data or preferences e.g. travel or dining preferences music styles etc. application specific user profile information e.g. employment status or history subjects or topics of interest privacy settings etc. files messages address book entries and or calendar events created viewed opened modified sent forwarded replied to or deleted electronic bookmarks notes comments reminders task lists and or others.

As shown in the personal corpus or body of user specific content and interactions may be located in private sources shared sources and or public sources . Some examples of private sources include electronic files folders and directories which may be stored on a personal computing device e.g. a smartphone personal digital assistant laptop tablet or desktop computer . Some examples of shared sources include electronic messages that are sent to other users e.g. through an electronic mail or social networking application and electronic files or other information to which a limited group of other users has access e.g. via a group folder intranet or enterprise system . Some examples of user specific public sources include blogs web pages comments status updates and Twitter messages created by the user and or other interactions of the user with electronic content to which the user has not restricted access.

As illustrated in and described further below all or portions of the user specific content and interactions may be stored on a local computer a remote computer e.g. one or more servers or storage devices configured to provide storage for multiple users an Internet site e.g. a server hosting a web page or web based application and or other suitable locations depending on the type and or characteristics of the particular user specific content and interactions .

As the user specific content and interactions is created accessed modified or deleted the electronic content and interaction analyzer processes and indexes the created accessed modified or deleted user specific content and interactions to extract determine or create keywords meta tags summaries text tokens which may be associated with non textual information such as graphics images audio and video files for example semantic information source or location information e.g. folder name directory or hyperlink weights similarity scores and or other key information which the electronic content and interaction analyzer associates with the created or modified user specific content and interactions .

The electronic content and interaction analyzer determines which keywords appear to be the most important most frequently used and or most recently used words in a piece of information or across multiple pieces of information. The electronic content and interaction analyzer also determines semantic information context information and or other kinds of information that may be used to identify the piece of information and or its relationships or associations with other pieces of information in the user specific content and interactions . In some embodiments the electronic content and interaction analyzer uses one or more statistical or probabilistic analytical tools or techniques such as a combination of term frequency and inverse document frequency e.g. a modified tf idf algorithm to create and continuously update an index of words that appear to be most important to the user.

The electronic content and interaction analyzer also creates topics and sub topics which may include descriptions connotations contexts and or higher level concepts or abstractions that represent associations among keywords that appear to have some relationship with one another based on for example their use proximity and or frequency of occurrence in the user specific content and interactions . The electronic content and interaction analyzer assigns weights to the various keywords topics and sub topics based on for example frequency or recency of use or access by the user. The electronic content and interaction analyzer also analyzes the similarity between various words topics and sub topics in the user specific profile and calculates similarity scores between the various words topics and sub topics using e.g. a descriptors overlap content overlap or other suitable technique to derive a conceptual understanding of the topics based on the associated keywords and or descriptors .

The user specific profile is typically embodied as a database or other suitable data structure and stores the information about the user specific content and interactions that is generated by the electronic content and interaction analyzer e.g. keywords meta tags topics sub topics indexing information information about relationships or associations among keywords and or meta tags and information about relationships or associations among the various pieces of user specific content and interactions . The user specific profile also stores the weights that are determined and assigned by the electronic content and interaction analyzer to the various keywords topics sub topics and other information and the similarity scores e.g. Levenshein distances that are calculated by the electronic content and interaction analyzer . The illustrative user specific profile is described further below with reference to .

Also shown in is a typographical error typo identifier module which interfaces with the electronic content and interaction analyzer . The description of the typo identifier is related to and therefore follows the description of below.

As shown by the bidirectional arrows interactions between the electronic content and interaction analyzer and the user specific profile the user specific content and interactions and the typo identifier may be iterative in nature. For example the typo identifier may identify a typographical error or misspelling in a piece of content in the personal corpus or body of user specific content and interactions . The electronic content and interaction analyzer may then update the user specific profile to include the typographical error or misspelling as an alternative spelling of a keyword stored in the user specific profile or may update the user specific content and interactions to include the alternative spelling.

Also as the user specific profile is updated e.g. with new words or associations gleaned from the user s online and or local computing activity the electronic content and interaction analyzer may add information to or update the information in the user specific content and interactions . Further as the user specific content and interactions is added to or modified the electronic content and interaction analyzer may update the weights and or similarity scores associated with keywords topics and or sub topics in the user specific profile or assign new weights and or similarity scores to keywords topics and or sub topics in the user specific profile . In these and other ways the user specific model continuously learns new information about the user s online and or local computing activity and personal preferences. As a result through continuous interfacing with the user specific model the query developer can adapt and improve its analysis of the user s search requests over time as the user s online and or local computing activity and or preferences change.

Referring now to an illustrative data model for the user specific profile is shown. According to the data model the user specific profile stores and maintains words or information data objects and relationships among the words or information data objects and content or activity data objects related words data objects topics data objects and sub topics data objects .

The words or information data object includes words or information e.g. keywords non word information such as email addresses account names or phone numbers or key phrases extracted from the various user specific content and interactions . In the illustrative example a word or information data object may include a keyword an indicator of the keyword type e.g. part of speech semantic information e.g. a category such as person place or thing frequency information e.g. how frequently the word or information occurs in a document group of documents or in the user specific content and interactions as a whole and one or more weights assigned to the word or information by the electronic content and interaction analyzer .

As many words can have multiple different user specific meanings the words or information data object may include many instances of the same word. For example as a result of the content and activity analyzer s analysis of the user specific content and interactions the words or information data object may include one instance for Jan as the first name of a person and another instance of Jan as an abbreviation for the word January. 

Information about the user specific content and interactions from which the words or information are extracted by the electronic content and interaction analyzer is included in the content or activity data object . The content or activity data object includes in the illustrative example a description of the content or activity e.g. the title of a document a content or activity type e.g. an indicator of whether the content or activity is a certain type of file a location e.g. an indicator of where the content or activity is located such as a file name folder name or hyperlink history information e.g. the date and or time the content or activity was created or conducted last accessed or modified a summary e.g. short description of the information contained in a document or other electronic file and user access and security information e.g. an indicator of whether the content or activity is available to one or more other users and if so what actions those users may take with respect to the content or activity i.e. read modify copy delete and the like .

The related words data object includes words that are determined by the electronic content and interaction analyzer to be related to words or information data objects for example abbreviations acronyms nicknames alternative spellings user specific shorthand notations and the like. In the illustrative example the related words data object includes the related word an indicator of the type of relationship e.g. abbreviation nickname etc. semantic information e.g. a category such as person place or thing a weight determined and assigned to the related word by the electronic content and interaction analyzer and a similarity score calculated by the electronic content and interaction analyzer which indicates a degree of similarity of the related word with a word or information to which the related word is linked.

The topic data object and the sub topic data object each include words that describe or indicate higher level concepts and or user specific associations or relationships among the words or information data objects as determined by the electronic content and interaction analyzer . For example based on its analysis of the user specific content and interactions the electronic content and interaction analyzer may associate the keywords phone and John with a topic called deals and also with a sub topic of the deals topic called Europe. 

The bidirectional arrows are used to indicate that in the illustrative embodiment many to many relationships can exist between the data objects . For example a word may be contained in or associated with one or a number of different pieces of content or activity related words topics and or sub topics . Similarly a piece of content or activity may include or be associated with many different words or information a related word may be related to many different words or information and a topic or sub topic may be associated with many different words or information . Also a topic may have multiple sub topics associated with it and a sub topic may be associated with multiple topics . To continue the above example the sub topic Europe may be associated with a topic called trips in addition to being associated with the deals topic.

Referring now to an illustrative method executable by the query developer includes a query interpreter sub module a query corrector sub module and a query augmenter sub module . Utilizing the user specific model and optionally one or more other resources the query interpreter determines the user specific meaning s of individual search terms in the search request if any which may include relationships between or among one or more of the individual search terms in the search request and or associations of a search term or terms with one or more terms words related words concepts topics and or sub topics stored in the user specific profile . An illustrative method executable by the query interpreter is described below with reference to .

The query corrector sub module analyzes output of the query interpreter to identify unknown words e.g. misspelled words or typographical errors and using the user specific model tries to identify known words that correspond to the unknown words. An illustrative method executable by the query corrector is described below with reference to .

The query augmenter sub module analyzes output generated by the query interpreter and or output generated by the query corrector . The query augmenter looks for additional search terms that according to the user specific model may be related to one or more of the search terms in the search request but that were not part of the original search request . The query augmenter then adds or suggests that the user add one or more of the additional search terms to the search request and or a corresponding computer executable query. An illustrative method executable by the query augmenter is described below with reference to .

Referring now to the illustrative method executable by the query interpreter is shown. Initially the query interpreter determines whether the search request is in voice or text form. If the search request is in voice form then a voice to text processor which may be of a conventional type or a type developed after the date of this disclosure is used to convert the search request to text form. The type of search request e.g. whether it is a keyword or natural language search request is also determined.

The search request is divided into its individual components at block . If the search request is a keyword search request then the individual search terms are identified where a search term may include a single word combination of letters and or numbers or a grouping of words in the search request .

If the search request is a natural language search request natural language parsing is performed using a natural language processor which may be of a conventional type or a type developed after the date of this disclosure . In some embodiments for example open source software such as the General Architecture for Text Engineering GATE may be used as the natural language processor .

It should be appreciated by those skilled in the art that natural language processing may create tokens each of which may include an entire word of a search term a group of words or sub components of words. For ease of discussion search term is used herein to refer individually or collectively to search terms of a keyword search request and or tokens of a natural language search request. Also the term word as used herein encompasses words as well as combinations of letters and or numbers that may not be found in public dictionaries such as acronyms nicknames user specific abbreviations misspelled words and the like.

Referring still to block a semantic processor divides keyword search requests into search terms. For example the semantic processor may determine that john and wakia are proper nouns that john refers to a person and that since the terms john and wakia are adjacent to one another in the illustrative search request they should be grouped together so that the intended search request should include keyword john wakia e.g. first and last name rather than keyword john OR keyword wakia . 

At block the search terms of the search request are analyzed using any or all of the analyzer modules each of which is configured to use the user specific model to conduct its analysis. Based on one or more of these analyses the query interpreter may annotate the search request with information relating to the meaning of one or more of the search terms and more particularly with information relating to a user specific meaning if a user specific meaning is determined.

The topic analyzer looks for words topics and or sub topics in the user specific profile that are associated with one or a combination of the search terms of the search request . For example the topic analyzer may determine from the user specific profile that the search term john is associated with the topic wakia and the topic reports and that the search term wakia is associated with the topic reports. As a result the topic analyzer may annotate the search request to associate the term reports with the search term rep. 

The heat map analyzer accesses a heat map that is created and maintained by the electronic content and interaction analyzer and which may be stored in the user specific profile . The heat map may be created as follows. As part of its ongoing processing the electronic content and interaction analyzer reviews the weights that are determined and assigned to the different words topics and sub topics and stored in the user specific profile . The electronic content and interaction analyzer analyzes the weights and or the recency and or frequency of use of the words topics and sub topics and or other information obtained from the user specific profile . The electronic content and interaction analyzer may then determine which of the words topics and sub topics appear to be most important to the user at a particular moment in time and associate them with a heat map. In other words a heat map identifies words topics and or sub topics that appear to be of particular interest to the user at a particular point in time.

The heat map analyzer accesses the heat map to see if any of the search terms of the search request are associated with any words topics or sub topics that are in the heat map or that have been identified by the heat map as being of particular interest to the user. For example if the electronic content and interaction analyzer determines that the user has exchanged several email messages with a John about repairing a Wakia phone the terms john wakia and phone may be assigned to the heat map by the electronic content and interaction analyzer . The heat map analyzer may determine from the heat map that the search terms john and wakia are associated with a topic called email messages and that the term phone appears to be of particular interest to the user. Thus the heat map analyzer may annotate the search request to look specifically for email messages as opposed to other types of documents or information having a sender or recipient named John and the keywords wakia or phone in the subject or body of the message.

The semantic analyzer accesses the user specific model to determine semantic information that may be appropriate to associate with a search term. For example if a search request contains the search term jan the semantic analyzer may determine from the user specific profile that the user works with a person named Jan and that the word or information data object for the person named Jan is highly weighted. Therefore the semantic analyzer may annotate the search request to indicate that jan is a person and not part of a date i.e. an abbreviation for the month of January .

The context analyzer accesses the user specific model to obtain information about the user s current context e.g. the person s current location the date and time recent changes in calendar or contact information recent email activity and or other information which may be related to one or more of the search terms in the search request . For example from the user specific profile the context analyzer may determine that user s title has recently changed from VP Europe Operations to VP US Operations or that the user has recently relocated from Europe to the United States. As a result the context analyzer may annotate the search request to limit the scope of the searching to persons who work at the user s United States office and thereby avoid unnecessarily searching for information about Johns who work at the user s European office.

The query history analyzer accesses the user specific model to look for search requests that the user has submitted in the past. The query history analyzer may also look for information relating to the number of times the user has submitted a particular search request and or the user s online and or local computing activity in response to the search results e.g. whether the user selected any of the search results and if so which results were selected of previously executed queries.

For example given the example search request john wakia rep the user may be looking for contact information for a Wakia repair person but cannot remember the person s first name. The query history stored in the user specific profile may reveal that the user had earlier searched for jim wakia rep but that the search did not return any results and then searched for phone repair but that search returned too many results and the user did not view any of the results. From the user specific query history the query history analyzer may determine that the user is looking for someone to repair a Wakia phone and annotate the search request to delete the term john associate the term wakia with a company name and associate the term repair with the search term rep. 

The query interpreter may repeat all or portions of the above described method for each search term of the search request .

Referring now to the illustrative method executable by the query corrector is shown. The query corrector analyzes each search term e.g. word or token of the search request as identified and interpreted by the query interpreter . At block the query corrector receives a search term of a search request and compares the search term to a set of common natural language keywords. The set of common natural language keywords may include for example prepositions such as from to about articles such as a an the and or conjunctions such as and or etc. which are stored in the user specific profile and or a public dictionary included in the non user specific content and activity .

At block the query corrector determines whether the search term exactly matches one of the common natural language keywords. If there is an exact match then no correction is needed and the method proceeds to block .

If there is not an exact match then the query corrector determines a set of possible matching terms from the set of common natural language keywords and assigns weights to the possible matching terms based on the degree of similarity of the possible matching term with the search term e.g. the calculated similarity score . Higher weights are assigned to possible matching terms from the set of common natural language keywords that are determined to be closer in similarity to the search term of the search request being analyzed. The query corrector may update the user specific profile to associate the possible matching terms from the set of common natural language keywords with the search term of the search request .

At block the query corrector compares the search term to a set of possible matching terms obtained by the query corrector from the heat map. As described above in connection with the electronic content and interaction analyzer generates the heat map from the user specific profile . The heat map includes words related words topics and or sub topics that through analysis by the electronic content and interaction analyzer appear to be of particular interest or importance to the user at a particular time due to the user s recent query history or other information from the user specific model . The query corrector assigns higher weights to possible matching terms from the heat map that are determined to be closer in similarity to the search term. The query corrector may update the user specific profile to associate the possible matching terms from the heat map with the search term of the search request .

At block the query corrector compares the search term to words stored in the user s user specific profile . At block the query corrector determines whether the search term is stored in the user specific profile . If the search term is not found in the user specific profile then optionally the search term may be compared to one or more public sources such as publicly available knowledge bases or dictionaries at block . The query corrector assigns lower weights to possible matching terms from the public sources that are determined to be closer in similarity to the search term of the search request . The query corrector may update the user specific profile to associate the possible matching terms from the public sources with the search term of the search request .

If the query corrector finds a possible match for the search term in the user specific profile then at block the query corrector calculates a similarity score e.g. a score computed using a standard Levenshein Distance calculation for the possible match and the search term and determines whether the similarity score is greater than a predefined threshold value K. If the possible matching word from the user specific profile has a similarity score that is greater than K then it is considered a match and the method proceeds to block . The query corrector may update the user specific profile to associate the search term with the matching term from the user specific profile having a similarity score greater than K.

If the possible matching term from the user specific profile does not have a similarity score greater than K then at block the query corrector updates the weight associated with the possible match according to the possible matching term s similarity score. Moderate weights are assigned to possible matching terms from the user specific profile that have a similarity score less than or equal to K. The user specific profile may be updated to associate the search term with the matching term from the user specific profile having a similarity score less than or equal to K and the updated weight.

At block the method checks to see if the search request contains additional search terms that need to be processed by the query corrector . If additional search terms need to be processed then the method returns to block . If there are no additional search terms that need to be processed the method proceeds to block .

At block the query corrector creates a matrix list table or similar arrangement of all possible combinations of the search terms and the possible matching terms obtained from the various sources and their associated weights and sorts the combinations by weight from highest to lowest. The N highest ranking combinations are analyzed by the natural language processor and the semantic processor to determine whether they are semantically correct. Any combinations that are not determined to be semantically correct are discarded.

The query corrector incorporates the remaining M combinations where M may be less than or equal to N into intermediate search requests which are compared to the original search request converted into computer executable queries and executed against the search realm or a portion thereof. Optionally the query corrector may compare the M combinations to one or more similar queries from the user s query history stored in the user specific profile and based on that comparison a query from the user s query history may be used. If any query containing an M combination returns no results then that M combination is discarded. The remaining V combinations where V is less than or equal to M are returned sorted by weight at block .

The query corrector may then select one or more of the V combinations and update the user specific profile to associate the selected V combination s with the search term of the search request . Alternatively or in addition the user may be prompted to select one of the V combinations to be associated with the search term. It should be appreciated by those skilled in the art that the parameters K M N and V as well as other parameters and weights used by the method may be determined and configured according to the particular characteristics of the user specific profile the particular requirements or design of a specific embodiment of the information retrieval system and or other factors. Further some or all of these parameters and or weights can be learned or changed over time as the user specific profile is developed updated or changed.

The query corrector repeats the above described method or portions thereof for each search term in the search request . Once the query corrector has processed of all of the search terms of the search request an updated computer executable query is created which may include one or more of the combinations generated by the query corrector at block . The updated computer executable query and or an association of the updated computer executable query with the search request may be stored in the user specific profile . In addition the query corrector may add or update weights associated with words topics and or subtopics in the user specific profile in response to the processing of the search request .

Referring back to whereas the query corrector corrects errors in the search request the typo identifier interfaces with the electronic content and interaction analyzer to identify and correct errors e.g. typographical errors and or misspellings in the personal corpus or body of user specific content and interactions . As a result for example user specific content and interactions can be found by a search request even if a search term of the search request is correctly spelled in the search request but incorrectly spelled in the user specific content and interactions .

The illustrative typo identifier is a continuously running e.g. background process that reviews and compares the words topics and sub topics stored in the user specific profile to one another. The typo identifier identifies combinations of terms in the user specific profile that are very close matches as determined by a small similarity score e.g. a small Levenshein distance and have a large difference in the frequency of use i.e. one term is used frequently while the other term is not as common .

For terms that meet these criteria the typo identifier generates a computer executable query and executes it against the search realm or a portion thereof e.g. the personal corpus or body of user specific content and interactions . A sample set of search results is then used for further analysis. Terms matching the terms pulled from the user specific profile as well as similar terms having a similarity score within a defined range or window X are extracted from the search results. Unique terms in the spatial vicinity of each such term are also extracted such that a bag of words is created for each term. A similarity score e.g. Levenshein score is calculated for each word in the bag of words for each term.

If a word s similarity score is greater than a determined threshold Y then the word s frequency of occurrence is evaluated. If a word has a low frequency and a similarity score greater than Y then that word may be determined to be a typographical error or misspelling of the term that has the highest frequency and a similarity score greater than Y. The user specific content and interactions is then searched for occurrences of the word determined to be a typographical error or misspelling and any user specific content and interactions containing the term is updated to include the corrected term as a tag e.g. meta data .

Once the user specific content and interactions has been updated with the corrected tag the electronic content and interaction analyzer recomputes the frequency taking into account all known spellings of the corrected word and then recalculates the associated weights e.g. tf idf scores for the user specific content and interactions based on the recomputed frequency.

The typo identifier may repeat all or portions of the above described method for each word topic and or sub topic in the user specific profile . It should be appreciated by those skilled in the art that the parameters X and Y are determined and configured according to the particular characteristics of the user specific profile the particular requirements or design of a specific embodiment of the electronic content and interaction analyzer and or other factors.

It should be understood by those skilled in the art that while the electronic content and interaction analyzer and the typo identifier have been described herein as continuously running processes each or either of such processes may be scheduled initiated by a user or triggered by the occurrence of an event in other embodiments.

Referring now to the illustrative method executable by the query augmenter is shown. As mentioned above the query augmenter is configured to supplement the search request with additional search terms that are identified by the query developer using the user specific model as having a user specific relationship or association with one or more of the original search terms of the search request . In some instances the additional search terms may broaden the original search request while in others the additional search terms may narrow or simply clarify the original search request .

At block the query augmenter analyzes the search terms of the search request using any or all of the analyzer modules each of which is configured to apply the user specific model to its analysis. Based on one or more of these analyses the query augmenter may identify one or more related words for inclusion in the search request an intermediate search request an intermediate search topic or a computer executable query corresponding to any or all of the foregoing as the case may be.

The synonym analyzer determines whether a search term of the search request is a proper noun. If the search term is not a proper noun the synonym analyzer accesses one or more publicly available sources such as public dictionaries and or thesauruses in the non user specific content and activity to look for one or more synonyms for the search term. If the search term is a proper noun the synonym analyzer accesses the user s user specific profile to look for possible synonyms.

For example the synonym analyzer may determine from the user specific profile that the user has contact information for a person named John Wakia. Also through analysis of the user specific content and interactions the electronic content and interaction analyzer may have previously determined that the user has sent email messages to a John Wakia in which the user typed the word Jack at the beginning of the body of the message and thus updated the user specific profile to associate the nickname Jack with the John Wakia information. As a result the synonym analyzer may update the search request to include Jack as a search term e.g. John OR Jack AND Wakia. 

The synonym analyzer may repeat all or portions of the above described method for each search term of the search request . If the synonym analyzer identifies a synonym for the search term the query augmenter may create an intermediate search request including the synonym or simply include the synonym in the computer executable query corresponding to the search request . The query augmenter may also update the user specific profile to include an association between the search term and the synonym.

The abbreviation analyzer accesses the words and related words data in the user s user specific profile to determine whether there is a user specific abbreviation for the search term. The abbreviation analyzer uses an abbreviation pattern matching algorithm which may be of a conventional type or developed after the date of this disclosure to identify terms in the user specific profile that may be an abbreviated form or long form of the search term.

If a possible match is found the abbreviation analyzer looks to see if the search term and the possible match occur together in similar content or activity in the user specific content and activity . The possible match may be assigned a higher weight if the abbreviation analyzer determines that the possible match and the search term co occur in similar documents.

Using the example shown in the abbreviation analyzer may determine that the terms representative and rep are present in the same user created document or in multiple similar documents e.g. email messages addressed to the user s Vice President of Sales in which the name John Wakia is also mentioned that are indexed in the user specific profile . As a result the abbreviation analyzer may update the search request to not only include the term representative as an alternative form of rep but alternatively or in addition to add the term sales representative as a search term.

The abbreviation analyzer may repeat all or portions of the above described method for each search term of the search request . If the abbreviation analyzer identifies an abbreviation for or long form of the search term as the case may be the query augmenter may create an intermediate search request including the abbreviation or long form of the search term or simply include the abbreviation or long form in the computer executable query corresponding to the search request . The query augmenter may also update the user specific profile to add an association between the search term and the abbreviation or long form of the search term.

The acronym analyzer accesses publicly available sources such as public knowledge bases in the non user specific content and activity as well as the user specific profile to determine whether a search term of a search request may relate to a user specific acronym. If so the acronym analyzer determines a most appropriate definition for the acronym in view of the user s search request and the information obtained from the user specific profile .

The acronym analyzer uses an acronym pattern matching algorithm which may be conventional or developed after the date of this disclosure to identify terms in the user specific profile that may correspond to the search term. The acronym analyzer may also look to see if the search term and the possible match occur together in similar content or activity in the user specific content and interactions . The possible match may be assigned a higher weight if the acronym analyzer determines that it and the search term co occur in a document in a group of documents or in close proximity to one another within a document in the user specific model .

For example if a search request includes the single term nfl the acronym analyzer may obtain the term NATIONAL FOOTBALL LEAGUE from the non user specific content and activity but also determine that nfl is associated with the term New Feature Laboratory in the user s user specific profile . Previously the electronic content and interaction analyzer may have assigned a higher weight to the term New Feature Laboratory in the user specific profile based on for example the number and or frequency of occurrences of the term in documents recently created by the user. As a result the acronym analyzer may update the search request to include the term New Feature Laboratory rather than NATIONAL FOOTBALL LEAGUE as a long form of nfl. 

The acronym analyzer may repeat all or portions of the above described method for each search term of the search request . If the acronym analyzer identifies an acronym for or long form of the search term the query augmenter may create an intermediate search request including the acronym or long form of the search term or simply include the acronym or long form in the computer executable query corresponding to the search request . The query augmenter may also update the user specific profile to add an association between the search term and the acronym or long form of the search term.

At block the query augmenter accesses the user specific model to determine whether there are any topics or sub topics that appear to be related to the search term of the search request . If a related topic or sub topic is found the topic and sub topic analyzer may identify words or related words that appear to be related to the search term via the topic and or sub topic as the case may be.

The topic and sub topic analyzer also analyzes the strength of the association between the search term and the identified word topic and or sub topic . The topic and sub topic analyzer determines for example the probability of a strong correlation using information gleaned from the user specific profile such as the number of times the term and the word topic and or sub topic appear together in the user specific content and interactions .

For example if a search request contains the term wakia the topic and sub topic analyzer may determine from the user specific profile that the term wakia is associated with a topic called phone manufacturer. The topic and sub topic analyzer may further determine from the user specific profile that the names of other phone manufacturing companies are also associated with the phone manufacturer topic . As a result the topic and sub topic analyzer may update the search request to include as search terms the names of other phone manufacturing companies or to include more generally the search term phone manufacturer in addition to the term wakia in the search request .

The topic analyzer and sub topic analyzer may repeat all or portions of the above described method for each search term of the search request . The query augmenter may create one or more intermediate search requests including the words and or related words topics and or sub topics that are found by the topic and sub topic analyzer or may simply generate a computer executable query based on the original search request and including the words and or related words topics and or sub topics that have been found by the topic and sub topic analyzer .

At block the query augmenter may assign weights or update the weights previously assigned to the search terms of the search request based on the perceived strength of the association between the search term and the words and or related words topics and or sub topics found by the topic and sub topic analyzer . The query augmenter may compute the measure of perceived strength of association e.g. the confidence level or strength of belief that the terms are related using statistical measures including probabilities proximity measures and or other techniques.

The query augmenter can be configured to supplement the original search request in a number of different ways including automatically completing the search request with additional terms as the user is entering the search request e.g. as the user is typing a search term presenting intermediate search requests and or intermediate search topics to the user for selection automatically e.g. without user input selecting an intermediate search request or intermediate search topic and or by offering suggested queries to the user before the user enters a search request. Further in embodiments where multiple intermediate search requests or suggested queries are offered to the user the suggested search requests or queries may be grouped or clustered based on the search terms and or associations of the search terms with words topics sub topics and or other information in the user specific profile as may be determined by the query developer . Once grouped or clustered the presentation of the suggested search terms or queries may be organized or arranged according to the user s relative interest in the groups or clusters as determined from the user specific profile .

For example if the user has submitted two different search requests that have returned no results the query augmenter may suggest a new search request based on associations between or among one or more of the search terms of the first two search requests which are gleaned from the user specific model .

As another example the query augmenter may offer suggested search requests to the user based on the user s search history and patterns in the times in which the user has submitted search requests. For instance if the electronic content and interaction analyzer determines that the user has repeatedly submitted the same search request at about the same time every month the query augmenter may suggest the same search request to the user when that time arrives in the next month.

Further if the electronic content and interaction analyzer determines that the user has added a meeting to his or her electronic calendar the query augmenter may suggest a search request relating to information the user may need for the meeting. As well the query augmenter may interface with the query executer to automatically generate and execute computer executable queries corresponding to the suggested search requests. In some embodiments the computer executable queries may be pre executed in anticipation of the entry of a search request by the user in order to provide a faster response if the user does enter the search request or for other reasons.

Referring now to an illustrative embodiment of the computing device is shown. The computing device includes at least one processor and an input output I O subsystem . In the illustrative embodiment the computing device is embodied as a personal computing device such as for example a mobile or handheld computing device smartphone personal digital assistant laptop computer tablet computer or desktop computer. However the computing device may be embodied as any type of computing device such as for example a server an enterprise computer system a network of computers or other electronic device.

The processor includes one or more processor cores e.g. microprocessors . The I O subsystem typically includes among other things an I O controller a memory controller and one or more I O ports not shown . The processor and the I O subsystem are communicatively coupled to a memory . The memory may be embodied as any type of suitable memory device such as a dynamic random access memory device DRAM synchronous dynamic random access memory device SDRAM double data rate dynamic random access memory device DDR SDRAM and or other volatile memory device.

The I O subsystem is communicatively coupled to at least one input device at least one data storage at least one output device and at least one network interface . The I O subsystem may be communicatively coupled to one or more other peripheral devices such as a graphics sound and or video adapter not shown depending upon for example the intended use of the computing device .

The input device may include a keyboard keypad touch screen microphone or other suitable device for accepting input e.g. search requests from a user. The output device may include a text graphics and or video display screen speaker or other suitable device for presenting output e.g. intermediate search requests intermediate search topics search results etc. to the user.

The network interface communicatively couples the computing device to one or more networks which may include a local area network wide area network personal cloud enterprise cloud public cloud and or the Internet. Accordingly the network interface may include a wired or wireless Ethernet adapter Wi Fi adapter or other suitable device as may be needed pursuant to the specifications and or design of the particular network .

The data storage may include one or more hard drives or other suitable data storage devices e.g. memory cards memory sticks and or others . In the illustrative embodiment an operating system O S resides in the data storage . The operating system is for example a Microsoft Windows Linux or other operating system or other similar set of instructions which may be designed specifically for a particular type of computing device for example a discrete handheld or portable electronic device or smartphone.

Either or each of the information retrieval system and the user specific model may be local to the computing device or distributed across multiple computing devices . In the illustrated example the information retrieval system IRS 1 includes one instance of the information retrieval system and the user specific or personal user model PUM 1 includes one instance of the user specific model . At least a portion of each of the IRS 1 and the PUM 1 is stored in the data storage . Portions of the O S IRS 1 and or PUM 1 may be copied to the memory during operation for faster processing or other reasons.

In some embodiments the IRS 1 may include a client application or front end user interface for the information retrieval system while a back end or server application for the information retrieval system may reside on the network e.g. as an information retrieval system IRS 2 . Likewise the PUM 1 may include aspects of the user specific model that are local to the computing device such as locally created documents while other aspects of the user specific model such as records of the user s electronic interactions with networked systems may reside on the network e.g. as a user specific or personal user model PUM 2 .

In some embodiments the entire information retrieval system and the entire user specific model may be stored in the data storage e.g. as IRS 1 and user specific or personal user model PUM 1 of the computing device .

In some embodiments the IRS 1 and or the IRS 2 may have access to all or portions of one or more other users user specific or personal user models e.g. one or more user specific or personal user models PUM 3 . In this way the information retrieval system can leverage not only user specific information that is contained in the user s own user specific or personal user model e.g. PUM 1 but also user specific information contained in other user specific or personal user models to which it has been granted access e.g. by family friends or colleagues of the user . Similarly another instance of the information retrieval system such as an instance of an information retrieval application used by family friends or colleagues of the user may have access to all or portions of the user s user specific or personal user model s PUM 1 and or PUM 2 as may be granted by the user.

The computing device may include other components sub components and devices not illustrated in for clarity of the description. Further it should be appreciated that in embodiments where one or more of the instances of information retrieval systems and or user specific or personal user models are distributed or implemented on a network such systems should be capable of tracking and maintaining the identify of the user s associated with the respective user specific or personal user models . This can be done for example via a logon ID and password device address such as an IP address or other suitable identifying information and or techniques.

In general the components of the computing device are communicatively coupled as shown in by one or more signal paths which are represented schematically as bidirectional arrows . Such signal paths may be embodied as any type of wired or wireless signal paths capable of facilitating communication between the respective devices. For example the signal paths may be embodied as any number of wires printed circuit board traces busses point to point interconnects intervening devices and or others.

While the invention has been illustrated and described in detail in the drawings and foregoing description such an illustration and description is to be considered as exemplary and not restrictive in character it being understood that only illustrative embodiments have been shown and described and that all changes and modifications that come within the spirit of the disclosure are desired to be protected. Further while aspects of the present disclosure have been described in the context of an information retrieval system it will be understood that the various aspects have other applications for example any application in which it is desired to have access to a personalized user model which is compiled from user specific electronic content and or interactions with computing devices. Such applications may include for example spell checking programs and automated content delivery systems.

