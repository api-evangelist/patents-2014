---

title: Secure data exchange between data processing systems
abstract: A data transfer method performed at a proxy server includes intercepting a data request from a client computer that is directed to a target server, encrypting profile information, augmenting the data request by adding the encrypted profile information to the data request, and sending the augmented data request to the target server. A data transfer method that is performed at an information server includes receiving a data request from a proxy server, extracting profile information added to the data request by the proxy server, using the extracted profile information to generate a response, and sending the response to the proxy server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09363237&OS=09363237&RS=09363237
owner: FACEBOOK, INC.
number: 09363237
owner_city: Menlo Park
owner_country: US
publication_date: 20141230
---
This application is a continuation of U.S. application Ser. No. 13 786 273 filed Mar. 5 2013 which is a continuation of U.S. application Ser. No. 13 786 212 filed Mar. 5 2013 which is a continuation of U.S. application Ser. No. 13 030 986 filed on Feb. 18 2011 and issued as U.S. Pat. No. 8 713 690 which is a continuation of U.S. application Ser. No. 11 535 056 filed on Sep. 25 2006 and issued as U.S. Pat. No. 7 895 446 which is a continuation of U.S. application Ser. No. 09 323 415 filed on Jun. 1 1999 and issued as U.S. Pat. No. 7 146 505. Each of the aforementioned applications and patents are hereby incorporated by reference in their entirety.

After a client computer has been connected to the network through POP it may exchange data with other computers on the network . Computers on different networks and also can exchange data with each other by sending their data request to proxy server which in turn can forward their request to the destination computer obtain a response from the destination and return the response to the requesting computer.

The servers and clients may communicate with each other using the hypertext transfer protocol HTTP . HTTP is a data communications protocol that is used by web browser programs such as Microsoft Internet Explorer and Netscape Navigator to communicate with web server applications such as Microsoft Internet Information Server and Netscape Server . Thus by executing a web browser a client computer can exchange data with a server that is executing a web server application.

When a web server receives a HTTP data request from a browser a web server application such as a Common Gateway Interface CGI script may be used to query databases customize responses and or perform other processing used to generate a response. The web server application may need data about the client computer the browser its user and or other data in order to complete its processing of the data request. For example a web server application may provide customized weather information based on a user s home address. The web application may obtain the user s address information by sending a data input form to the browser and receiving a user s response that contains the needed information. A web server application also may obtain needed data from web server environmental variables that are populated by data in HTTP header fields by a web server and or by a web server sub component. For example a CGI script s response to a data request may depend on the type of browser originating the request. The CGI script may access a HTTP environment variable HTTP USER AGENT populated by the web server using data from a User Agent field in a HTTP header. The value of the HTTP USER AGENT variable identifies the type of browser originating a request so that the CGI script can customize its response to that browser.

A web server and a browser also may exchange web cookies that contain data. A web cookie is data file that can be automatically exchanged between browsers and servers along with the request and responses exchanged between the browsers and servers. When a web cookie is received by a browser it can be stored at the client computer. During future transactions with the web server the web cookie and any data that it contains can be sent back to the web server. By using data stored in web cookies a web server s need to request data from a user may be reduced. However since web cookies are typically stored on a client computer they may be deleted and their data lost. Furthermore if a user moves to another computer web cookie information stored on the user s original computer will be unavailable to that user. These factors may reduce the utility of web cookies.

The present inventors recognize that information service systems such as web servers should provide convenient secure reliable and simple means of interacting with users. The present inventors further recognize when a server must query a user for data or use web cookies for data storage and input convenience security reliability and simplicity may suffer. Consequently the invention disclosed herein provides additional means of providing information to a web server application that may provide additional flexibility in implementing information systems.

In general in one aspect the invention features a data transfer method performed at a proxy server. The method includes intercepting a data request from a client computer that is directed to a target server encrypting profile information augmenting the data request by adding the encrypted profile information to the data request and sending the augmented data request to the target server. In another aspect the invention features a data transfer method performed at an information server. The method includes receiving a data request from a proxy server extracting profile information added to the data request by the proxy server using the extracted profile information to generate a response and sending the response to the proxy server.

In general in another aspect the invention features a computer program residing on a computer readable medium. The program includes instructions for causing a computer to intercept a data request from a client computer that is directed to a target server encrypt profile information augment the data request by adding the encrypted profile information to the data request and send the augmented data request to the target server. In another aspect the invention features a computer program residing on a computer readable medium that includes instructions for causing a computer to receive a data request comprising encrypted profile information that was added to the data request by a proxy server extract the profile information added by the proxy server use the extracted profile information to generate a response and send the response to the proxy server.

In general in another aspect the invention features a proxy server that includes a database a network interface a processor and a memory. The database includes records storing user profile information. The network interface operatively couples the proxy server to a network to exchange data with a client computer and with a target server. The processor is operatively coupled to the network interface the database and a memory. The memory includes executable instructions for causing the processor to intercept a data request that is directed to a target server retrieve a record from the database encrypt profile information in the record augment the data request by adding the encrypted profile information and send the augmented data request to the target server

In general in another aspect the invention features an information server that includes a network interface a processor and a memory. The network interface operatively couples the information server to a proxy server. The processor is operatively coupled to the network interface and to the memory. The memory includes executable instructions for causing the processor to receive a data request from the proxy server decrypt user profile information added to the data request by the target server and use the decrypted user profile information to generate a response to the data request.

Implementations may include one or more of the following features. A reference token may be exchanged between servers and used to refer to previously exchanged profile information. The reference token may be placed in subsequent data request sent by the proxy server to the target in place of full profile information. The profile information that is encrypted by the proxy server can be stored in proxy server database records. The particular user profile information encrypted and included in a data request can be selected based on an identity of a client computer user or a browser user. The identity may be determined using the Internet Engineering Task Force IDENT protocol or by using another method.

Implementations also may include one or more of the following features. Profile information may be encrypted at the proxy server using a session key as an encryption key and may be decrypted at the target server using the same session key. The session key may be determined by the proxy server and sent to the target server using a public key cryptography algorithm and a public key associated with the target server.

A data request may use the hypertext transfer protocol. Profile information extracted from the data request at the target information server can be provided to a web application such as a CGI script that is used to generate a response.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Implementations may provide advantages including reduction of redundant data entry reduction of user data entry errors secure storage of user data and automated user profile determination and dissemination. Different encryption keys can be used for different information servers and each information server may establish characteristics associated with its encryption key. A web site may dynamically generate maintain and change its unique encryption key. This may help to minimize risk of replay attacks message forgery and message tampering. In addition implementations may support multiple levels of security.

Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

Processing of an information request at a information server such as a web server can be facilitated by a data transfer mechanism in which data needed to process the request is stored at a proxy server and automatically transferred to the information servers. Such a data transfer mechanism can be used for example by an information service provider ISP or on line service provider OSP to automatically transfer information about a user a user profile to affiliated web sites. Referring to to automatically transfer a user profile to a web server the user profile information is first stored at a proxy server in a database . When a HTTP data request is received by the proxy server from a web browser the user profile information from database is encapsulated in a request that is forwarded by the proxy server to web server . The proxy server encapsulates the user profile information in the request by adding HTTP headers containing the user profile information to the headers received in the request .

Database may be a local or remote database that can store multiple user profiles. For example the database may be a database storing user profiles on a hard disk directly connected to the proxy server or the database may be a SQL database at a remote system and accessed over a TCP IP connection. Still other database implementations may be used. Each user profile may be associated with a particular user or group of users. A user profile may be selected from the database based on the identifying information associated with a particular computer or user of that computer. To determine the user s identity a proxy server may use a table or database that associates user identity information with network connection information. For example referring to when a client computer connects to a network the client computer s user may submit name and password information to a POP or to a login server. The POP or login server may then send the user name and network connection information unique to that user such as a unique combination of TCP IP address and port number to the proxy server where it is stored in a database step . When the proxy server receives a subsequent HTTP request step the proxy server can identify the user associated with the request by querying the database of stored name and network connection associations. A proxy server also may identify a user using the IDENT protocol. The IDENT protocol is an Internet protocol that allows a computer to ask another computer for the name of the user. The IDENT protocol is further described in Internet Engineering Task Force IETF document RFC1413.

When the proxy server has identified the user step the proxy server can retrieve a user profile associated with that user from its database . The proxy server may then add HTTP fields containing user profile information to fields in the original HTTP request step . For example header fields may be added to the original header fields from request . Field may include unencrypted user profile data UserName John Doe ZipCode 60609 ParentalControl YoungTeen while field may include encrypted user profile data. Encryption of data in the field may use the SecureData protocol explained later . The proxy server thereby forms the modified HTTP request containing the user profile data. The modified request may then be forwarded by the proxy server for receipt at a web site steps and .

Particular web servers may or may not be configured to recognize the user profile data fields . A web server that is not configured to recognize the user profile fields may ignore the fields. A web server that is configured to recognize the user profile fields can extract the profile data from the field steps and . Extraction of user profile data in the field may include decryption of the user profile data in encrypted field . The extracted user profile data can be used for example to generate or customize data sent in response to the proxy server for forwarding as a response to a user or client computer step . For example a tourist information web server may customize a page based user profile data specifying a browser user s age and interest. If a web server looks for a user profile field in the request and the user profile field is not present the server may use traditional data input mechanisms such as forms and web cookies to obtain needed data from a user step . After the necessary data is obtained the web server can generate a response step .

Exchange of user profile data between a proxy server and a web server may implemented using custom filtering software proxy data exchange filter software that can be added to commercially available proxy and web site server software. For example Microsoft Internet Information Server IIS provides an application programming interface known as the information server application programming interface ISAPI that allows custom filtering software to be added to an ITS web site. A Netscape web site server provides an application programming interface known as the Netscape server application programming interface NSAPI that may also be used to develop custom filtering software. When a request from the proxy server is received at an IIS or Netscape server web site the request is passed to the proxy data exchange filter by the IIS or Netscape server software and the user profile data is extracted from the headers . The extracted profile data may then be made available as HTTP environment variables database entries or other data exchange structures that can be used by web applications. The remaining header information in request e.g. the original information from request may then be processed by the web server to obtain response information.

A proxy server and web server may implement the SecureData protocol described below to encrypt user profile data. Encrypted user profile data may be indicated by a special HTTP header. For example the field name User Profile SecureData in field indicates that the field value segment of field contains encrypted profile data.

The SecureData protocol uses multiple cryptography algorithms to provide secure user profile data transfers between a proxy server and a web server . For example the SecureData protocol may use the Rivest Shamir Adelman RSA public key encryption algorithm or the pretty good privacy PGP public key cryptography algorithm along with the RSA RC4 symmetric encryption algorithm. Additional information on the RC4 algorithm can be found for example in 2nd edition By Bruce Schneier John Wiley Sons 1996.

User profile information may be encrypted at proxy server using a symmetric encryption algorithm. A symmetric encryption algorithm such as the RSA RC4 algorithm uses the same encryption key referred to herein as a session key to encrypt and decrypt data. The proxy server may encrypt user profile data and place it in a HTTP field in request message . The proxy server can also separately encrypt the session key using a public key cryptography algorithm and the public key of the web server . The public key encrypted session key may also be placed in the request message or may be sent separately to the web server . When the web server has received the encrypted session key and user profile data the web server can decrypt its session key by using the public key cryptography algorithm and the web server s private key. The web server may then decrypt the user profile information using the decrypted session key. shows further details of an implementation in which a request message may include both the encrypted session key and the encrypted user profile data.

Referring to when a request is received at the proxy server the proxy server determines whether it should add encrypted user profile data to the request. To do so the proxy server may extract a destination web site address from URL information in the request and query a database to determine whether the destination web site is to receive user profile information and whether the information is to be encrypted. If the destination web site is to receive encrypted user profile information the proxy server may then query its database to determine whether it has a valid public key for the web server . If the proxy server has a valid public key the proxy server can use the public key to encrypt session key information that can be provided to a symmetric encryption algorithm to encrypt user profile data. The encrypted session key and user profile data may then be forwarded in requests to the web server .

If the proxy server does not have a valid public key for web server the proxy server will obtain the public key from the web server using a HTTP request . The request includes a URL that identifies a public key file pub key file stored on the server . The public key file may include additional information used by the proxy server . For example the public key file may include the length of the public key a SecureData protocol version number a list of supported encryption algorithms and shortcut configuration information shortcut information is further explained below .

An exemplary public key may have the format shown below chevrons delineate fields in the public key file and brackets and delineate optional information 

The web server s public key file is returned to the proxy server in a HTTP response . The web server may provide additional SecureData protocol information in HTTP fields of response and or in the public key file returned by the response message . For example HTTP fields in response may specify a time to live TTL for the key. The TTL value can be used to indicate the period during which the public key is valid.

A proxy server or web server may check a SecureData protocol version number returned in the public key file in request and or in response to ensure that the protocol is functioning properly and to recover from or to avoid errors. For example if a proxy server detects that protocol versions numbers in a retrieved public key file and those in a header of a response do not match the proxy server may re submit the request to the server . When the request is re submitted the proxy server can include the HTTP no cache pragma to instruct caching systems between the proxy and the web server not to use cached data. This may help avoid errors introduced by using stale cached data. When the proxy server has received the web server s public key it may cache the public key subject to a time to live TTL value specified by the web server and or the proxy server s own TTL policies.

If the proxy server is unable to retrieve a web server s public key information or the public key information is otherwise unusable the proxy server can add a problem report information to fields in a HTTP request to indicate why the public key information is unusable. For example the proxy server may indicate that the key information has been corrupted or a protocol version number or encryption level specified in the public key file is not supported. If the a web server s public key information is unusable and consequently the SecureData encryption protocol cannot be used a proxy server may continue to forward the HTTP requests from browser clients to the web server without adding additional SecureData proxy headers. Alternatively the proxy server may block or otherwise filter request to the web server. The specific behavior may be defined on a per web server basis using configuration information stored at the proxy server .

Once the proxy server has the public key of web server the proxy server can use the public key to encrypt session key data. The encrypted session key data may then be added to HTTP fields in the request from a browser or client computer to form a modified request that includes the public key encrypted session key information. The proxy server also can encrypt the user profile data using the session key information and a symmetric encryption algorithm and place the encrypted user profile data in HTTP fields in the modified request . For example referring to the field includes session key data session a3f792b210dafad that may be public key encrypted and user profile data Profile A389C2ZA845MRAS02VMA39v1Z93AYC39AC3ABCEG78BB that may be encrypted using a symmetric algorithm.

Different web server s or groups of web servers can have different session keys. A web server s session key may be formed by combining a master session key that is the same for a group of web servers with a key mask that can be used to create a unique session key for a web server or a group of web servers. For example a 64 bit master session key may be combined with a 64 bit key mask using an exclusive or XOR operation to yield a unique 64 bit session key. In some implementations the master session key may be the proxy server s public key. Other methods of generating unique keys can be used. The session key data can in field e.g. session a3f792b210dafad can include numerous sub fields. For example the session key data can include a master key a key mask a timestamp a URL hash a Proxy IP field and an encoding scheme field. These fields can contain the following data 

The proxy server can use a web server s unique session key to encrypt user profile data that is add it to the field . In some implementations the user profile data may be placed in one or more additional fields. The request now containing the public key encrypted session data and the symmetric encrypted user profile data is then sent to web server .

When request is received by the web server the request can be passed to proxy data exchange filter software that can extract the added fields from the request decrypt the session key and the user profile information contained in the fields and make the user profile information available to web server applications. The user profile information may be made available to web server applications by setting HTTP environment variables by storing it in a database by placing it in shared memory and or using other data exchange techniques. The proxy data exchange filter software may then pass the request back to the web server for further processing and for generation of a response .

The web server can store received profile data in a local database for future request processing purposes. The web server may return a shortcut token to the proxy server . The proxy server may add the shortcut token to a subsequent request in place of the full user profile data sent in the request . This can be used to reduce the amount of data that needs be transferred in subsequent request . A shortcut token can be an index value database query information file name other pointer data or an arbitrary value generated by the web site and used to reference the stored user profile data.

A web server s public key file may be sent to the proxy server using a security level specified by the site . For example a web site s public key file include data indicating that the web site will use a specified one of the following shortcut key security levels 

At low medium high and max security levels the shortcut token and related security data can be sent in encrypted form using for example the proxy server s public key which may be the master key value . Shortcut token security levels may also be indicated using HTTP fields in a response or or may be specified using data stored in a configuration database at the proxy server using a data entry terminal.

A proxy server or web server may include other HTTP fields in a request or in a response to control user profile data transfers and or the operation of the SecureData protocol. For example HTTP fields in requests and or responses may specify the following directives 

The invention may be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. Apparatus of the invention may be implemented in a computer program product tangibly embodied in a machine readable storage device for execution by a programmable processor and method steps of the invention may be performed by a programmable processor executing a program of instructions to perform functions of the invention by operating on input data and generating output. The invention may advantageously be implemented in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. Each computer program may be implemented in a high level procedural or object oriented programming language or in assembly or machine language if desired and in any case the language may be a compiled or interpreted language. Suitable processors include by way of example both general and special purpose microprocessors. Generally a processor will receive instructions and data from a read only memory and or a random access memory. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM disks. Any of the foregoing may be supplemented by or incorporated in specially designed ASICs application specific integrated circuits .

A number of embodiments of the present invention have been described. Nevertheless it will be understood that various modifications may be made without departing from the spirit and scope of the invention. For example server proxy and client protocols need not use the HTTP protocol. Alternate protocols and data formats may be used such as file transfer protocol FTP or network news transfer protocol NNTP . Accordingly other embodiments are within the scope of the following claims.

