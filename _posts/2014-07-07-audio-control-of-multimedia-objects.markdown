---

title: Audio control of multimedia objects
abstract: In some examples, aspects of the present disclosure may include techniques for audio control of one or more multimedia objects. In one example, a method includes receiving an electronic document that includes a group of one or more multimedia objects capable of generating audio data. The method also includes registering a multimedia object of the group of one or more multimedia objects, wherein registering the multimedia object comprises storing a multimedia object identifier that identifies the multimedia object. The method further includes receiving audio data; and determining, by a computing device, a volume level of the audio data generated by the registered multimedia object based on one or more configuration parameters, wherein the one or more configuration parameters define one or more volume levels associated with the multimedia object identifier. The method also includes outputting, to an output device, the audio data at the determined volume level.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09489170&OS=09489170&RS=09489170
owner: Google Inc.
number: 09489170
owner_city: Mountain View
owner_country: US
publication_date: 20140707
---
This application is a continuation of U.S. application Ser. No. 13 251 111 filed Sep. 30 2011 which is a continuation of U.S. application Ser. No. 13 086 268 filed Apr. 13 2011 the entire contents of which are hereby incorporated herein by reference.

This disclosure relates to electronic devices and more specifically to audio controls of electronic devices.

A user may interact with applications executing on a computing device e.g. mobile phone tablet computer smart phone or the like . For instance a user may install view or delete an application on a computing device.

In some instances a user may interact with the computing device through a graphical user interface. In some examples the computing device may include one or more sound devices. An application executing on the computing device may access the sound device.

In one example a method includes receiving an electronic document that includes a group of one or more multimedia objects capable of generating audio data. The method further includes registering a multimedia object of the group of one or more multimedia objects wherein registering the multimedia object comprises storing a multimedia object identifier that identifies the multimedia object. The method also includes receiving audio data generated by the registered multimedia object. The method further includes determining by a computing device a volume level of the audio data based on one or more configuration parameters wherein the one or more configuration parameters define one or more volume levels associated with the multimedia object identifier. The method further includes outputting to an output device the audio data at the determined volume level.

In one example a computer readable storage medium is encoded with instructions that when executed cause one or more processors of a computing device to perform operations including receiving an electronic document that includes a group of one or more multimedia objects capable of generating audio data. The instructions further cause one or more processors to perform operations including registering a multimedia object of the group of one or more multimedia objects wherein registering the multimedia object comprises storing a multimedia object identifier that identifies the multimedia object. The instructions further cause one or more processors to perform operations including receiving audio data generated by the registered multimedia object determining by a computing device a volume level of the audio data based on one or more configuration parameters wherein the one or more configuration parameters define one or more volume levels associated with the multimedia object identifier. The instructions further cause one or more processors to perform operations including outputting to an output device the audio data at the determined volume level.

In one example a computing device includes one or more processors. The computing device further includes an audio control module executable by the one or more processors to receive an electronic document that includes a group of one or more multimedia objects capable of generating audio data. The audio control module is further executable to register a multimedia object of the group of one or more multimedia objects wherein registering the multimedia object comprises storing a multimedia object identifier that identifies the multimedia object. The audio control module is further executable to receive audio data generated by the registered multimedia object. The computing device also includes means for determining a volume level of the audio data based on one or more configuration parameters wherein the one or more configuration parameters define one or more volume levels associated with the multimedia object identifier. The computing device further includes an output device to output the audio data at the determined volume level.

In one example a method includes receiving an electronic document that includes a group of two or more multimedia objects capable of generating audio data. The method also includes registering a first multimedia object and a second multimedia object of the group with an application wherein registering the first multimedia object comprises storing a first multimedia object identifier that identifies the first multimedia object and wherein registering the second multimedia object comprises storing a second multimedia object identifier that identifies the second multimedia object. The method further includes receiving first audio data generated by the first multimedia object and second audio data generated by the second multimedia object. The method also includes receiving during execution of the application a first configuration parameter from a user that indicates a first volume level of the first multimedia object. The method further includes receiving during execution of the application a second configuration parameter from the user that indicates a second volume level of the second multimedia object. The method also includes outputting to an output device the first audio data at the first volume level. The method further includes outputting to the output device the second audio data at the second volume level.

The details of one or more examples of this disclosure are set forth in the accompanying drawings and the description below. Other features objects and advantages of the disclosure will be apparent from the description and drawings and from the claims.

In general aspects of the present disclosure are directed to techniques for control of multimedia objects. Advancements in application and network technologies have enabled developers to create documents that include rich and dynamic content. For example an application may display multiple multimedia objects in a single document. Each multimedia object may provide a source of audio and or visual content. In one example a document may include many multimedia objects that each provides video and audio content. The application may initially execute multimedia objects included in the document. The application may further provide multimedia objects with access to I O devices e.g. an audio device via various application programming interfaces APIs . In some examples multiple multimedia objects may simultaneously require access to an audio device for audio and or video playback. In such examples each multimedia object may compete for access to the audio device.

Presently applications do not provide the user with granular audio control over individual multimedia objects. Therefore multimedia objects may simultaneously send audio data to the audio device which may result in an audio signal that is a combination of all audio data. This lack of control may lead to undesirable user experiences. For example a user listening to audio of a first object may be interrupted by audio of a second object. The combined audio signal may be unintelligible and the second object may distract the user from audio of the first object. A user may therefore desire one or more techniques to granularly control individual multimedia objects that share a single audio device.

Techniques of the present disclosure provide granular volume controls for multimedia objects that may simultaneously require access to the same audio device. In one example an audio control module is included in a web browser. When a multimedia object is initially rendered by the web browser the multimedia object is registered with the audio control module. Consequently the audio module maintains a list of multimedia objects in the web browser. The audio control module further provides a sound control API that is accessible by multimedia objects. When a multimedia object generates audio data to be output by the audio device the multimedia object may call a function included in the sound control API to send audio data to the audio device. The audio data may be received by the audio control module via the function call. Once the audio data is received by the audio control module the audio control module may for example change the volume of the audio data. The transformed audio data may then be sent to the audio device via another API that may be provided by the operating system to the web browser.

Computing device in some examples includes or is a part of a portable computing device e.g. mobile phone netbook laptop tablet device or a desktop computer. Computing device may also connect to a wired or wireless network using a network interface see e.g. . One non limiting example of computing device is further described in the example of .

In some examples computing device may include display . In one example display may be an output device as shown in . In some examples display may be programmed by computing device to display graphical content. Graphical content generally includes any visual depiction displayed by display . Examples of graphical content may include images text videos visual objects and or visual program components such as scroll bars text boxes buttons etc. In one example application may cause display to display graphical user interface GUI .

As shown in application may execute on computing device . Application may include program instructions and or data that are executable by computing device . Examples of application may include a web browser email application text messaging application or any other application that receives user input and or displays graphical content.

In some examples application causes GUI to be displayed in display . GUI may include interactive and or non interactive graphical content that presents information of computing device in human readable form. In some examples GUI may enable a user to interact with application through display . For example a user may provide a user input via an input device such as a mouse keyboard or touch screen. In response to receiving the user input computing device may perform one or more operations. In this way GUI may enable a user to create modify and or delete data of computing device .

In some examples application as shown in may be a web browser software application hereinafter web browser . One example of a web browser may be the Google Chrome web browser. A web browser in some examples may retrieve and present information resources on a network such as the Internet. A web browser may also send information to other devices on a network. In some examples an information resource may be a document such as a HyperText Markup Language HTML document. A HTML document may include structured data that is interpretable by a web browser. In some examples structured data may include text pictures and multimedia objects. A web browser may for example display the structured data of an HTML document in a human interpretable form.

As shown in application may be a web browser that displays an HTML document . HTML document may for example include text multimedia object and multimedia object . A multimedia object may be any source of visual audio and or other sensory data embedded in document . In some examples multimedia objects may include video objects and or sound objects. Examples of multimedia objects may include Macromedia Flash Java applets Quicktime movies MPEG 4 videos MP3 audio and WAV audio. In some examples a multimedia object may include an animation and audio content. In some examples a creator of a document e.g. document may embed one or more multimedia objects in document . A user of computing device may use application to view document and interact with multimedia objects and .

In some examples multiple multimedia objects may be included in a single document . For example as shown in two multimedia media objects and are embedded in document . In the example of the multimedia object may be a video entitled Android Cloud to Device Messaging Framework as indicated by text . Document may further include multimedia object . Multimedia object may as shown in include an audio visual advertisement. For example multimedia object may include a visual animation of an advertised product or service and may in some examples further include audio associated with the animation.

Application may in some examples include a rendering engine to interpret structured data of document . The rendering engine of application may in some examples present the structured data in human interpretable form. As described herein render may in some examples include presenting any structured data in human interpretable form. Structured data of an HTML document may include tags that enclose content to be rendered by the rendering engine. Tags may be of different types and therefore enable the rendering engine to render content encompassed by different tags in different ways. Thus in one example text may be enclosed by text tags that enable the rendering engine to display Android Cloud to Device Messaging Framework as text.

In other examples multimedia tags may be included in document to specify multimedia objects and . In such examples the rendering engine of application may process the multimedia tags to present multimedia objects in human interpretable form to a user. The rendering engine may in some examples include functionality to render some but not all types of content associated with various different tags. For example a rendering engine may natively render text but may not natively render multimedia objects. In such examples tags for a multimedia object may specify a separate multimedia application to render the content of the multimedia object. For example application may not in one example natively render multimedia object . Instead tags included in document and associated with multimedia object may indicate a separate video application to render the content of multimedia object . Application may when processing the tags associated with multimedia object execute the separate video application that in turn may render the content of multimedia object . In this way application may be extensible to render various different types of content.

As shown in and described herein a document may include multiple multimedia objects. In some examples application may render some or all of the structured data of document simultaneously. For example application may render tags for multimedia objects and consequently application may present content of multimedia objects to a user simultaneously. In such examples each multimedia object may include content that may be provided to a user via one or more output devices. For example multimedia objects may each include audio content. Each of multimedia objects may therefore provide audio data to an audio device e.g. a sound card and or speaker to present the audio content to a user. In some examples audio device may receive audio data from application . The audio data may include a representation of audio content. Audio device may provide an audio signal that includes a human interpretable representation of the audio content based on the audio data.

In some examples multimedia objects may compete for access to audio device . For example application may render document that includes multimedia object and multimedia visual advertisement object . Each multimedia object may include audio content and may therefore provide corresponding audio data to audio device . Audio device may receive the audio data both multimedia objects simultaneously. In some examples audio device may output an audio signal that includes combined or interlaced audio content of each multimedia object .

Various drawbacks are apparent in the present example. For example when audio data of multiple multimedia objects are combined or interlaced the resulting audio signal may be garbled or uninterpretable by a human. In other examples a user s focus on audio content generated by a first multimedia object may be disrupted by audio content of a second multimedia media object. In such examples a user may therefore desire not to hear audio content of the second multimedia object. In some examples a multimedia object may not provide the user with the ability to directly control to the audio content associated with the multimedia object. In other examples the user may need to identify each multimedia object individually in order to disable or lower the volume of each multimedia object. Consequently the user may apply substantial effort to limit the undesirable effects of numerous multimedia objects competing to access an audio device.

Aspects of the present disclosure described hereinafter may overcome various deficiencies presented by multiple media objects that may compete for an audio output device. As shown in application e.g. a web browser may initially access document that includes one or more multimedia objects . Application in some examples may render the structured data of document as previously described herein. For example application may render document and identify one or more tags associated with text multimedia object hereinafter video object and multimedia object hereinafter advertisement object .

In the current example audio control module may automatically register one or more multimedia objects of document when rendered by application . To automatically register a multimedia object audio control module may identify tags associated with multimedia objects. In some examples one or more tags associated with a multimedia object may indicate the multimedia object includes content of a particular type. Audio control module may in some examples register a multimedia object based on its content type. For example various content types may include audio content and therefore audio control module may be configured to register multimedia objects associated with such content types.

In some examples audio control module may generate a multimedia object identifier that identifies the multimedia object. Audio control module may use a multimedia object identifier to register the multimedia object. A multimedia object identifier may in some examples include a unique alphanumeric string of numbers and or letters e.g. a hash code. Audio control module may in some examples store a multimedia object identifier for later retrieval in a map hashtable database or other data storage structure of computing device or of some other computing device coupled to computing device . In one example audio control module may store a multimedia object identifier in object identifier repository .

In the example of audio control module may register video object and advertisement object as document is rendered by application . Audio control module may generate a multimedia object identifier A1 which corresponds to video object . Audio control module may in the current example generate a multimedia object identifier A2 which corresponds to advertisement object . Each identifier may be stored by application for later retrieval.

As previously described herein application may in some examples execute e.g. a separate multimedia application to render content of a multimedia object. In some examples application may execute the multimedia application as a child process of application . When application executes the multimedia application as a child process audio control module may provide the multimedia application access to an Application Programming Interface API . The multimedia application may access resources of computing device e.g. storage output devices input devices etc. via the API. For example a multimedia application may send audio data to audio speaker via an API provided by application . In this way application may control access to resources of computing device and modify data received from the multimedia application.

In some examples audio control module may include logic to modify a volume level associated with a registered multimedia object. For example audio control module may receive audio data from a multimedia application that renders content of a registered multimedia object. Audio control module may receive the audio data from the multimedia application via an API provided by application . In response to receiving the audio data audio control module may perform one or more operations increase or decrease a volume level associated with the audio data. For example audio control module may generate data specifying a volume level in response to e.g. a user input or data stored on computing device . The data specifying the volume level may be associated with the audio data received from the multimedia application. Audio control module may send the volume level data to audio device . Audio control module may also send corresponding audio data received from the multimedia application to audio device . In this way audio device may generate an audio signal based on the audio data and the specified volume level. Thus in examples that include many registered multimedia objects audio control module may provide fine grain audio control of each volume level associated with each multimedia object based on any number of configuration parameters.

In some examples audio control module may determine a volume level of audio data generated by a multimedia object based on one or more configuration parameters. In one example a configuration parameter may define one or more volume levels associated with a multimedia object identifier that identifies a multimedia object. Computing device in some examples may include a parameter repository to store configuration parameters. Thus in some examples audio control module may automatically execute one or more configuration parameters when audio control module registers a multimedia object. In this way audio control module may in some examples automatically configure volume levels based on one or more configuration parameters thereby reducing the level of manual user configuration.

In some examples application may include a parameter repository . Parameter repository may store one or more configuration parameters associated with multimedia objects. In some examples parameter repository may include a database lookup table or other suitable data structure capable of storing data. In one example a user may define one or more parameters that are stored in parameter repository . Various configuration parameters are further described and illustrated in e.g. .

In some examples audio control module may determine a volume level of the audio data based on one or more configuration parameters wherein the one or more configuration parameters define one or more volume levels associated with the multimedia object identifier. For example audio control module may select a configuration parameter from parameter repository or receive a configuration parameter at runtime that corresponds to a user s volume level selection. The configuration parameter may specify a volume level associated with a multimedia object. Audio module may generate volume level setting data corresponding to the volume level which may be sent to an audio driver of audio device or an operating system executing on computing device . In either case the volume level setting data may cause audio device to output the audio data at the corresponding volume level.

In one example use case of document may include video object and advertisement object . Application may be a web browser. In the current example audio control module may automatically register video object and store a corresponding multimedia object identifier A1. Audio control module may automatically register advertisement object and store multimedia object identifier A2. In response to registering video object and advertisement object audio control module may automatically select and execute one or more configuration parameters stored in parameter repository . In other examples a user may specify configuration parameters at run time. For example a configuration parameter provided to audio control module by the user may specify a volume level that audio control module may use to change a volume level of audio data.

In the current example application may execute first and second multimedia applications as child processes that may render content of video object and advertisement object respectively. Video object and advertisement object may each include audio content that may be sent as audio data to audio device . In the current example the first application may send audio data of video object to audio device via an API of audio control module . Simultaneously the second application may send audio data of advertisement object to audio device via an API of audio control module . In the current example a configuration parameter may for example specify that sound of advertisement object is to be disabled. Consequently audio control module may set the volume level associated with advertisement object to mute e.g. no volume. Consequently a user may not be interrupted by audio from advertisement object because audio control module has automatically executed the corresponding configuration parameter.

In some examples application may further include a control panel that indicates a volume level associated with each registered multimedia object. For example volume selector A may be associated with a first multimedia object e.g. video object as indicated by labels B and . Volume selector A may be associated with a second multimedia object e.g. advertisement object as indicated by labels B and . Video object and advertisement object may each be registered with audio control module e.g. multimedia object identifiers that identify each object may be stored by audio control module . A volume selector may indicate a volume level of a corresponding multimedia object within a range of selectable volume levels.

In one example audio control panel may enable a user to modify a volume level associated with a multimedia object via audio control module by changing a volume selector. For example a user may change a volume level using a volume selector by sliding a volume selector from one volume level position to different volume level position. Audio control module in response to determining the user has adjusted the volume selector may receive a configuration parameter indicating the new volume level. Audio control module may in response to receiving the configuration parameter output the audio data at the new volume level indicated by the configuration parameter. In this way the user maintains fine grain control over the volume level of each multimedia object in document . In some examples a volume level associated with a multimedia object may be stored in object identification repository .

As shown in a control panel may display other controls associated with a multimedia object in addition to a volume selector. For example further includes exclusive selectors . In one example exclusive selector may be associated with video object and exclusive select may be associated with advertisement object . An exclusive selector when selected in one example may indicate that only audio data from the corresponding selected multimedia object may be sent to an audio device of computing device . In such examples audio control module may identify the multimedia object corresponding to the selected exclusive selector and only provide audio data from the selected multimedia object to audio device .

As shown in application may display a representation e.g. a label that includes a multimedia object identifier in control panel . For example label B may include a multimedia object identifier associated with video object . In some examples application may also display a representation of the multimedia object identifier at or near the location of the multimedia object displayed in GUI . For example label may indicate video object is associated with volume selector A of control panel . In this way a user may quickly identify a volume selector that corresponds to a multimedia object.

Various aspects of the disclosure may provide in certain instances one or more benefits and advantages. For example techniques of the present disclosure may provide a user with fine grain control of volume levels associated with numerous multimedia objects. Precise sound control may provide improved user customization of a computing device. In some examples fine grain audio control may potentially reduce disruptions and or undesirable garbling of audio data caused by multiple multimedia objects that may compete for a sound device.

Another potential advantage of the present disclosure may include automatically registering multimedia objects and determining a volume level of one or more registered multimedia objects based on configuration parameters. Automatically executing configuration parameters may simplify user configuration requirements and assist the user in applying preferences without additional user intervention. In this way precise volume level settings may be defined stored and applied in future uses. Moreover heuristics defined in configuration parameters as described in e.g. may adaptively apply volume level settings to a multitude of undefined situations without additional user configuration.

The aforementioned benefits and advantages are exemplary and other such benefits and advantages may be apparent in the previously described non limiting examples. While some aspects of the present disclosure may provide some or all of the aforementioned exemplary benefits and advantages no aspect of the present disclosure should be construed to necessarily require any or all of the aforementioned exemplary benefits and advantages.

As shown in the specific example of computing device includes one or more processors memory a network interface one or more storage devices input device output device and battery . Computing device also includes an operating system . Computing device in one example further includes application and one or more other applications . Application and one or more other applications are also executable by computing device . Each of components and may be interconnected physically communicatively and or operatively for inter component communications.

Processors in one example are configured to implement functionality and or process instructions for execution within computing device . For example processors may be capable of processing instructions stored in memory or instructions stored on storage devices .

Memory in one example is configured to store information within computing device during operation. Memory in some examples is described as a computer readable storage medium. In some examples memory is a temporary memory meaning that a primary purpose of memory is not long term storage. Memory in some examples is described as a volatile memory meaning that memory does not maintain stored contents when the computer is turned off. Examples of volatile memories include random access memories RAM dynamic random access memories DRAM static random access memories SRAM and other forms of volatile memories known in the art. In some examples memory is used to store program instructions for execution by processors . Memory in one example is used by software or applications running on computing device e.g. application and or one or more other applications to temporarily store information during program execution.

Storage devices in some examples also include one or more computer readable storage media. Storage devices may be configured to store larger amounts of information than memory . Storage devices may further be configured for long term storage of information. In some examples storage devices include non volatile storage elements. Examples of such non volatile storage elements include magnetic hard discs optical discs floppy discs flash memories or forms of electrically programmable memories EPROM or electrically erasable and programmable EEPROM memories.

Computing device in some examples also includes a network interface . Computing device in one example utilizes network interface to communicate with external devices via one or more networks such as one or more wireless networks. Network interface may be a network interface card such as an Ethernet card an optical transceiver a radio frequency transceiver or any other type of device that can send and receive information. Other examples of such network interfaces may include Bluetooth 3G and WiFi radios in mobile computing devices as well as USB. In some examples computing device utilizes network interface to wirelessly communicate with an external device not shown such as a server mobile phone or other networked computing device.

Computing device in one example also includes one or more input devices . Input device in some examples is configured to receive input from a user through tactile audio or video feedback. Examples of input device include a presence sensitive screen a mouse a keyboard a voice responsive system video camera microphone or any other type of device for detecting a command from a user. In some examples a presence sensitive screen includes a touch sensitive screen.

One or more output devices may also be included in computing device . Output device in some examples is configured to provide output to a user using tactile audio or video stimuli. Examples of output device include display and audio device of . Output device in one example includes a presence sensitive screen sound card audio speaker video graphics adapter card or any other type of device for converting a signal into an appropriate form understandable to humans or machines. Additional examples of output device include a cathode ray tube CRT monitor a liquid crystal display LCD or any other type of device that can generate intelligible output to a user.

Computing device in some examples include one or more batteries which may be rechargeable and provide power to computing device . Battery in some examples is made from nickel cadmium lithium ion or other suitable material.

Computing device may include operating system . Operating system in some examples controls the operation of components of computing device . For example operating system in one example facilitates the interaction of application with processors memory network interface storage device input device output device and battery .

As shown in application may include an audio control module described in . Audio control module may include program instructions and or data that are executable by computing device . For example audio control module may include instructions that cause application executing on computing device to perform one or more of the operations and actions described in . In some examples audio control module may be a part of an operating system executing on computing device . In some examples audio control module may communicate with operating system that receives input from one or more input devices of computing device .

Computing device may include an object identification repository and or parameter repository . In some examples repositories may be caches lookup tables or other suitable data structures. In other examples repositories may include Relational Database Management System RDBMS software. In one example repositories may be a relational database and accessed using a Structured Query Language SQL interface that is well known in the art. Database may alternatively be stored on a separate networked computing device and may be accessible via a network interface or system bus of computing device . Database may in other examples be an Object Database Management System ODBMS Online Analytical Processing OLAP database or other suitable data management system.

Any applications e.g. application or other applications implemented within or executed by computing device may be implemented or contained within operable by executed by and or be operatively communicatively coupled to components of computing device e.g. processors memory network interface storage devices input devices output devices and or batteries .

The method of includes receiving an electronic document that includes a group of one or more multimedia objects capable of generating audio data registering a multimedia object of the group of one or more multimedia objects wherein registering the multimedia object includes storing a multimedia object identifier that identifies the multimedia object receiving audio data generated by the registered multimedia object determining by a computing device a volume level of the audio data based on one or more configuration parameters wherein the one or more configuration parameters define one or more volume levels associated with the multimedia object identifier and outputting to an output device the audio data at the determined volume level .

In one example the method includes registering a second multimedia object of the group of one or more multimedia objects wherein registering the second multimedia object includes storing a second multimedia object identifier that identifies the second multimedia object receiving second audio data generated by the second registered multimedia object determining by the computing device a volume level of the second audio data based on the one or more configuration parameters wherein the one or more configuration parameters further define one or more volume levels associated with the second multimedia object identifier and outputting to the output device the second audio data at the determined second volume level.

In one example the method includes determining by the computing device that the second registered multimedia object comprises a dominant multimedia object based on a dominant heuristic wherein the dominant heuristic indicates that the second registered multimedia object is a most probable multimedia object of the group of multimedia objects to be focused on by a user and in response to determining that the second registered multimedia object comprises the dominant multimedia object executing by the computing device at least one configuration parameter of the one or more configuration parameters to change a volume level of at least one of the one or more multimedia objects. In one example the method includes the at least one configuration parameter of the one or more configuration parameters defines a mute volume level indicating no volume and the method further includes associating by the computing device the mute volume level with each multimedia object of the group of one or more multimedia objects except the dominant multimedia object.

In one example the dominant heuristic is based on a spatial position of the second multimedia object in the electronic document. In one example the dominant heuristic is based on the dominant heuristic is based on a content type of the second multimedia object. In one example the dominant heuristic is based on comparing a first spatial size of the multimedia object relative to a second spatial size of the second multimedia object.

In one example the method includes determining by the computing device that the registered multimedia object is displayed in an inactive region of a graphical user interface of the computing device wherein the inactive region is not visible to the user determining by the computing device that the second registered multimedia object is displayed in an active region of the graphical user interface of the computing device wherein the active region is visible to the user and determining by the computing device that the second registered multimedia object comprises dominant multimedia based on the second registered multimedia object being displayed in the active region.

In one example the method includes determining by the computing device that a sound device of the computing device is receiving the audio data and assigning by the computing device the mute volume level to each registered multimedia object of the one or more multimedia objects wherein the mute level volume indicates no volume. In one example the sound device comprises a sound card or an audio speaker of the computing device.

In one example the method includes registering the multimedia object of the group of one or more multimedia objects further comprises scanning by the computing device the electronic document to identify one or more multimedia tags associated with the multimedia object and responsive to identifying the one or more multimedia tags registering by the computing device the multimedia object based on the one or more multimedia tags. In one example the one or more multimedia tags indicate a content type of the multimedia object. In one example the method includes determining by the computing device that an application executing on the computing device is accessing a sound device of the computing device generating by the computing device a request for exclusive access to the sound device and sending by the computing device the request to the sound device.

In one example the method includes displaying by the computing device an audio control panel that includes a volume selector indicating the volume level of the multimedia object wherein the volume selector indicates a range of selectable volume levels receiving by the computing device a user input to select a second volume level of the volume selector associated with the multimedia object and outputting to the output device the audio data at the second volume level.

In one example the method includes generating by the computing device a preference heuristic that is based on an attribute of the multimedia object and the second volume level registering by the computing device a second multimedia object of the group of one or more multimedia objects wherein the second multimedia object includes the attribute of the multimedia object and in response to determining that the second registered multimedia object includes the attribute of the multimedia object assigning by the computing device the second volume level to the second multimedia object based on the preference heuristic. In one example the attribute further comprises a multimedia type or a domain name of the multimedia object.

In one example the method includes displaying by the computing device a first representation of the multimedia object identifier in the audio control panel and displaying by the computing device a second representation of the multimedia object identifier at the multimedia object wherein the multimedia object is displayed in the electronic document. In one example the multimedia object includes an animation that includes audio content.

As previously described in application may in some examples include functionality to render some but not all types of content included in a document. In examples where application does not include functionality to render content of a particular type e.g. application does not natively support the content type application may execute a separate application to render such content. As shown in application may execute object applications which may include functionality to render content of multimedia objects not supported by application . In one example object applications may be child processes of application . In some examples object applications may send audio data of multimedia objects to audio device using one or more Application Programming Interfaces API provided by application .

As shown in application may further send and receive information included in object identifier repository . In some examples object identifier repository may include one or more multimedia object identifiers and one or more corresponding volume levels. In this way application may store retrieve and monitor volume levels of each multimedia object. For example as shown in object identifier repository may include a multimedia object identifier A A1 and a corresponding volume level B 8 . Multimedia object identifier A may identify a multimedia object included in a document. In some examples multimedia object identifier A may be associated with volume level B. Thus in one example audio data generated by a multimedia object associated with identifier A may be output by audio device at a volume level of 8. Similarly audio data generated by a multimedia object associated with identifier A may be output by audio device at a volume level of 0 e.g. no volume muted .

As shown in application may further send and receive information included in parameter repository . In some examples parameter repository may include one or more configuration parameters that may be applied by audio control module of application . In one example a parameter B may be associated with a parameter identifier . Configuration parameter B may define a user preference PARAM. PREF associated with a particular multimedia object. Configuration parameter B may define a dominant heuristic PARAM. DOMINANT as further described in . Audio control module as shown in may access parameter repository to automatically apply configuration parameters associated with various registered multimedia objects.

In some examples multiple applications on computing device may each compete for access to audio device . For example as shown in application and application may each send audio data to audio device . In some examples audio control module may determine application is accessing audio device of computing device . For example audio control module may query an operating system executing on computing device and or audio device to determine if one or more applications may be accessing audio device . In other examples an operator system executing on computing device may inform module that one or more applications may be accessing audio device . In response to determining application may be accessing audio device audio control module may generate a request for exclusive access audio device which may be sent to audio device a device driver of audio device and or operating system . Upon receiving the request from application audio device may only output sound for audio data from application . In this way audio control module may obtain exclusive access to audio device . In some examples audio control module may request exclusive access upon the occurrence of one or more conditions specified in one or more configuration parameters e.g. when a user chooses an exclusive selector as shown in .

In some examples a user may wish to hear audio data from application but may not wish to hear audio data from multimedia objects registered with audio control . Thus in one example audio control module may determine whether audio device is presently receiving audio data from application . For example audio control module may send a query to an operating system executing on computing device and or audio device . Responsive to data received by audio control module and based on the query audio control module may determine a mute volume level that indicates no volume. Audio control module may assign the mute volume level to each registered multimedia object thereby minimizing or eliminating disruption of that may be generated by audio data provided by application to audio device .

As shown in display may display graphical user interface generated by application . In example of application may be a web browser as described herein. GUI may include an address bar that may enable a user to input one or more Uniform Resource Locators URLs which may be used to retrieve resources e.g. an HTML document. As shown in GUI may display one or more tabbed windows. Each tabbed window may be identified by a tab e.g. tab . A tabbed window in some examples may display content of an HTML document. In this way a user may open two or more documents in different tabbed windows using the same application. As shown in GUI includes tabbed windows and . In some examples an active tabbed window may be presently viewable by a user. An inactive tabbed window may be a tabbed window not presently viewable by a user. Thus as shown in tabbed window may be an active tabbed window because the contents of tabbed window are visible to a user.

As shown in tabbed window may include multimedia objects and . Each multimedia object may generate audio data that may be sent by application to audio device . In some examples audio control module may determine that one of multimedia object or multimedia comprises a dominant multimedia object. A dominant multimedia object may include one or more multimedia objects to which a user is most likely to direct his her focus. Thus in some examples one or more dominant multimedia objects may be the most probable multimedia objects of a user s focus. In some examples one or more dominant heuristics may be used by audio control module to identify which multimedia object of a group of one or more multimedia objects may be dominant multimedia objects. A dominant heuristic may include one or more facts that may indicate a user is more or less likely to focus on a multimedia object. In some examples one or more dominant heuristics may be stored as configuration parameters in parameter repository and applied by audio control module to one or more registered multimedia objects.

In one example as shown in multimedia object hereinafter video object and multimedia object hereinafter advertisement object may each be registered with audio control module according to techniques of the present disclosure. In the current example audio control module may query parameter repository to identify a configuration parameter that includes a dominant heuristic. Executing the configuration parameter audio control module may determine one of video object or advertisement object is the dominant multimedia object. Upon determining the dominant multimedia object audio control module may execute one or more configuration parameters to e.g. change the volume level of one or more multimedia media objects. For example a configuration parameter may specify that any multimedia object that is not the dominant multimedia object will be associated with a mute volume level that indicates no volume. Thus audio control module upon detecting the dominant multimedia object may mute all other multimedia objects thereby enable to the user to focus on the audio content of the dominant multimedia object.

In some examples a dominant heuristic may be based on a spatial position of a multimedia object in a document. For example an HTML document may display one or more multimedia objects in a two dimensional space. In some examples an author of an HTML document may place a multimedia object that the author intends to have the highest probability of attracting the user s focus at the center of the HTML document. The author may include additional multimedia objects in other different locations of the two dimensional space. In one example the dominant heuristic may include a highest probability spatial position of the two dimensional space on which the user is most likely to focus. In such examples audio control module may determine a spatial position of each multimedia object and further determine the multimedia media object that is the shortest distance from the highest probability spatial position is the dominant multimedia object.

In some examples a dominant heuristic may be based on a content type of a multimedia object. For example a user may specify one or more configuration parameters that prioritize a list of possible content types of multimedia objects. In one example when one or more multimedia objects are included in a document audio control module may determine a multimedia object with a highest priority content type may be the dominant multimedia object. In still other examples a dominant heuristic may be based on the relative spatial size of two or more multimedia objects. For example a multimedia object may be displayed by display of computing device . Each multimedia object may include a spatial area that may be specified by the multimedia objects width and height. A dominant heuristic in one example may indicate the multimedia object with the largest spatial area is the dominant multimedia object. For example as shown in audio control module may determine video object is the dominant multimedia object because it has a larger spatial area than advertisement object .

In other examples a dominant heuristic may be based whether a multimedia object is in an active or inactive region of a graphical user interface. For example a user may not desire to hear audio data from a multimedia object included in an inactive region of a graphical user interface. As shown in tabbed window may include an active region of GUI because content of tabbed window e.g. video object and advertisement object may be visible. Inactive regions of GUI may include tabbed windows and which may include multimedia objects presently not visible to a user. In example a dominant heuristic may determine a multimedia object is a dominant multimedia object because the multimedia object is included in an active region of GUI . Thus in the example of audio control module may determine that video object and advertisement object are dominant multimedia objects based on a dominant heuristic that indicates multimedia objects of an active region are dominant multimedia objects.

In some examples aspects of the present disclosure may enable application to track store and adaptively apply user preferences. For example a user over a time period and or number of instances of using an application may specify one or more configuration parameters based on the user s preferences that correspond to one or more multimedia objects. Thus in one example a user may indicate that audio data of multimedia objects associated with a particular content type may preferably be associated with a particular volume level. In other examples a user may indicate that audio data of multimedia objects originating from a particular network domain be associated with a particular volume level. More generally a user may generate one or more preferences defined in configuration parameters based on any attribute of a multimedia object.

Audio control module as shown in may enable a user to generate one or more configuration parameters based on user preferences. In some examples audio control module may automatically store each configuration parameter in parameter repository as a user indicates each preference. In some examples a configuration parameter may be based on a state of one or more multimedia objects and corresponding volume levels defined by the user. In other examples audio control module may prompt the user to store modify or delete a user preference. In one example a configuration parameter may be based on an attribute of a multimedia object and a corresponding volume level.

Audio control module may in some examples use one or more configuration parameters to generate a preference heuristic. A preference heuristic may in one example be based on one or more attributes and or one or more volume levels defined in one or more configuration parameters. Thus in one example audio control module may register one or more multimedia objects as previously defined herein. Audio control module may subsequently generate and or retrieve one or more preference heuristics based on configuration parameters stored in parameter repository . Consequently audio control module may for example assign a volume level to a multimedia object based on an attribute of the multimedia object that is associated with the preference heuristic. In this way audio control module may adaptively track store and execute preference heuristics to automatically configure volume levels associated with multimedia objects based on user preferences. Thus a user may not be required to manually configure a volume level of a multimedia object that includes one or more attributes associated with one or more preference heuristics. In such examples audio control module may use the one or more preference heuristics to automatically configure the volume level of the multimedia object.

The techniques described in this disclosure may be implemented at least in part in hardware software firmware or any combination thereof. For example various aspects of the described techniques may be implemented within one or more processors including one or more microprocessors digital signal processors DSPs application specific integrated circuits ASICs field programmable gate arrays FPGAs or any other equivalent integrated or discrete logic circuitry as well as any combinations of such components. The term processor or processing circuitry may generally refer to any of the foregoing logic circuitry alone or in combination with other logic circuitry or any other equivalent circuitry. A control unit including hardware may also perform one or more of the techniques of this disclosure.

Such hardware software and firmware may be implemented within the same device or within separate devices to support the various techniques described in this disclosure. In addition any of the described units modules or components may be implemented together or separately as discrete but interoperable logic devices. Depiction of different features as modules or units is intended to highlight different functional aspects and does not necessarily imply that such modules or units must be realized by separate hardware firmware or software components. Rather functionality associated with one or more modules or units may be performed by separate hardware firmware or software components or integrated within common or separate hardware firmware or software components.

The techniques described in this disclosure may also be embodied or encoded in an article of manufacture including a computer readable storage medium encoded with instructions. Instructions embedded or encoded in an article of manufacture including a computer readable storage medium encoded may cause one or more programmable processors or other processors to implement one or more of the techniques described herein such as when instructions included or encoded in the computer readable storage medium are executed by the one or more processors. Computer readable storage media may include random access memory RAM read only memory ROM programmable read only memory PROM erasable programmable read only memory EPROM electronically erasable programmable read only memory EEPROM flash memory a hard disk a compact disc ROM CD ROM a floppy disk a cassette magnetic media optical media or other computer readable media. In some examples an article of manufacture may include one or more computer readable storage media.

In some examples a computer readable storage medium may include a non transitory medium. The term non transitory may indicate that the storage medium is not embodied in a carrier wave or a propagated signal. In certain examples a non transitory storage medium may store data that can over time change e.g. in RAM or cache .

Various aspects of the disclosure have been described. These and other embodiments are within the scope of the following claims.

