---

title: System and method for on-demand presence
abstract: Methods and systems for determining availability of a user based on mobile device status are provided herein. In some embodiments, a method for determining availability of a user based on mobile device status may include receiving, at a first device, an instruction to check a status of a second device; transmitting a status request from the first device to the second device; and receiving, responsive to the status request, a message from the second device indicating a telephony status of the second device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09516162&OS=09516162&RS=09516162
owner: Vonage Business Inc.
number: 09516162
owner_city: Atanta
owner_country: US
publication_date: 20141029
---
Embodiments of the present invention generally relate to systems and methods for determining availability of a user based on mobile device status.

Mobile users may be billed for calls that go unanswered or are otherwise uncompleted. As such before placing a call to a mobile user a caller may wish to know whether the user is available. More specifically the caller may wish to know if the mobile user they wish to call i.e. the callee is busy on another call. Currently to determine a user s presence the status of a user s mobile device for example the callee s device is sent to a server and stored on the server. If another user wishes to connect with the callee device the callee device status is sent to requesting party from the server. This typically requires an active server that registers devices and that monitors the status of devices. The use of an intermediary server requires more resources and takes more time that if the devices were able to directly obtain a status from each other.

Thus there is a need for improved peer to peer systems and methods for determining availability of a user based on mobile device status.

Methods and systems for determining availability of a user based on mobile device status are provided herein. In some embodiments a method for determining the availability of a user based on mobile device status may include receiving at a first device an instruction to check a status of a second device transmitting a status request from the first device to the second device and receiving responsive to the status request a message from the second device indicating a telephony status of the second device.

In some embodiments a method for providing a mobile device status may include receiving a status request from a first device retrieving a telephony status for the device and transmitting the telephony status to the first device.

In some embodiments a system for determining the availability of a user based on mobile device status may include a status request module configured to receive at a first device an instruction to check a status of a second device a communication module configured to transmit a status request from the first device to the second device and a notification module configured to receive responsive to the status request a message from the second device indicating a telephony status of the second device.

In some embodiments a system for providing a mobile device status may include a status retrieval module configured to receive a status request from a first device and retrieve a telephony status for the device.

To facilitate understanding identical reference numerals have been used where possible to designate identical elements that are common to the figures. The figures are not drawn to scale and may be simplified for clarity. It is contemplated that elements and features of one embodiment may be beneficially incorporated in other embodiments without further recitation.

Embodiments of the present invention generally relate to systems and methods for determining the availability of a user based on the user s mobile device status. More specifically embodiments of the present invention enable a user of a first mobile device to send a status request message to a second mobile device. The second mobile device determines the state of the mobile device either from a mobile app on the device or via operating system Application Programming Interfaces APIs . The status whether the user is free on a call and the like is sent back to the first mobile device. In the event the second user device is busy e.g. on a call when the second user device is free a notification is sent to the first user device indicating the change in status. In some embodiments the first user device may perform a set of actions based on the returned response from the second user device. For example if the received status indicates the user of the second device is on a call the first user device may only have the ability to text the user until a notification is received indicating that the second user device is free.

Some portions of the detailed description which follow are presented in terms of operations on binary digital signals stored within a memory of a specific apparatus or special purpose computing device or platform. In the context of this particular specification the term specific apparatus or the like includes a general purpose computer once it is programmed to perform particular functions pursuant to instructions from program software. In this context operations or processing involve physical manipulation of physical quantities. Typically although not necessarily such quantities may take the form of electrical or magnetic signals capable of being stored transferred combined compared or otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to such signals as bits data values elements symbols characters terms numbers numerals or the like. It should be understood however that all of these or similar terms are to be associated with appropriate physical quantities and are merely convenient labels. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout this specification discussions utilizing terms such as processing computing calculating determining or the like refer to actions or processes of a specific apparatus such as a special purpose computer or a similar special purpose electronic computing device. In the context of this specification therefore a special purpose computer or a similar special purpose electronic computing device is capable of manipulating or transforming signals typically represented as physical electronic or magnetic quantities within memories registers or other information storage devices transmission devices or display devices of the special purpose computer or similar special purpose electronic computing device.

In the following description the terms VOIP system VOIP telephony system IP system and IP telephony system are all intended to refer to a system that connects callers and that delivers data text and video communications using Internet protocol data communications. Those of ordinary skill in the art will recognize that embodiments of the present invention are not limited to use with IP telephony systems and may also be used in other systems.

As illustrated in a communications environment is provided to facilitate IP enhanced communications. An IP telephony system enables connection of telephone calls between its own customers and other parties via data communications that pass over a data network . The data network is commonly the Internet although the IP telephony system may also make use of private data networks. The IP telephony system is connected to the Internet . In addition the IP telephony system is connected to a publicly switched telephone network PSTN via a gateway . The PSTN may also be directly coupled to the Internet through one of its own internal gateways not shown . Thus communications may pass back and forth between the IP telephony system and the PSTN through the Internet via a gateway maintained within the PSTN .

The gateway allows users and devices that are connected to the PSTN to connect with users and devices that are reachable through the IP telephony system and vice versa. In some instances the gateway would be a part of the IP telephony system . In other instances the gateway could be maintained by a third party.

Customers of the IP telephony system can place and receive telephone calls using an IP telephone that is connected to the Internet . Such an IP telephone could be connected to an Internet service provider via a wired connection or via a wireless router. In some instances the IP telephone could utilize a packet switched network of a cellular telephone system to access the Internet .

Alternatively a customer could utilize an analog telephone which is connected to the Internet via a telephone adapter . The telephone adapter converts analog signals from the telephone into data signals that pass over the Internet and vice versa. Analog telephone devices include but are not limited to standard telephones and document imaging devices such as facsimile machines. A configuration using a telephone adapter is common where the analog telephone is located in a residence or business. Other configurations are also possible where multiple analog telephones share access through the same IP adaptor. In those situations all analog telephones could share the same telephone number or multiple communication lines e.g. additional telephone numbers may be provisioned by the IP telephony system .

In addition a customer could utilize a soft phone client running on a computer or a television to place and receive IP based telephone calls and to access other IP telephony systems not shown . The computer may be a personal computer PC a tablet device a gaming system and the like. In some instances the soft phone client could be assigned its own telephone number. In other instances the soft phone client could be associated with a telephone number that is also assigned to an IP telephone or to a telephone adaptor that is connected one or more analog telephones .

Users of the IP telephony system are able to access the service from virtually any location where they can connect to the Internet . Thus a customer could register with an IP telephony system provider in the U.S. and that customer could then use an IP telephone located in a country outside the U.S. to access the services. Likewise the customer could also utilize a computer outside the U.S. that is running a soft phone client to access the IP telephony system .

A third party using an analog telephone which is connected to the PSTN may call a customer of the IP telephony system . In this instance the call is initially connected from the analog telephone to the PSTN and then from the PSTN through the gateway to the IP telephony system . The IP telephony system then routes the call to the customer s IP telephony device. A third party using a cellular telephone could also place a call to an IP telephony system customer and the connection would be established in a similar manner although the first link would involve communications between the cellular telephone and a cellular telephone network. For purposes of this explanation the cellular telephone network is considered part of the PSTN .

In the following description references will be made to an IP telephony device. This term is used to refer to any type of device which is capable of interacting with an IP telephony system to complete an audio or video telephone call or to send and receive text messages and other forms of communications. An IP telephony device could be an IP telephone a computer running IP telephony software a telephone adapter which is itself connected to a normal analog telephone or some other type of device capable of communicating via data packets. An IP telephony device could also be a cellular telephone or a portable computing device that runs a software application that enables the device to act as an IP telephone. Thus a single device might be capable of operating as both a cellular telephone that can facilitate voice based session calls and an IP telephone that can facilitate data based session calls.

The following description will also refer to a mobile telephony device. The term mobile telephony device is intended to encompass multiple different types of devices. In some instances a mobile telephony device could be a cellular telephone. In other instances a mobile telephony device may be a mobile computing device such as the APPLE IPHONE that includes both cellular telephone capabilities and a wireless data transceiver that can establish a wireless data connection to a data network. Such a mobile computing device could run appropriate application software to conduct VoIP telephone calls via a wireless data connection. Thus a mobile computing device such as an APPLE IPHONE a RIM BLACKBERRY or a comparable device running GOOGLE ANDROID operating system could be a mobile telephony device.

In still other instances a mobile telephony device may be a device that is not traditionally used as a telephony device but which includes a wireless data transceiver that can establish a wireless data connection to a data network. Examples of such devices include the APPLE IPOD TOUCH and the IPAD. Such a device may act as a mobile telephony device once it is configured with appropriate application software.

Although not illustrated in the mobile computing device A may be capable of establishing a wireless data connection to a data network such as the Internet via alternate means. For example the mobile computing device A might link to some other type of wireless interface using an alternate communication protocol such as the wireless local area network WLAN based on the Institute of Electrical and Electronics Engineers IEEE 802.11 and 802.13 standards.

Similarly mobile computing device with cellular capabilities B may also be coupled to internet and or cellular service provider . In some embodiments mobile computing device B may be connected to internet via a wireless local area network WLAN based on the Institute of Electrical and Electronics Engineers IEEE 802.11 and 802.13 standard connection and the like and can also establish a VOIP telephone calls with the IP telephony system similar to mobile computing device A. In embodiments of the present invention communications environment may be used to establish voice based or data based telecommunications sessions between mobile computing device A and mobile computing device B depending on various criteria associated with each of the mobile computing devices as will be described below in more detail.

In the embodiments described above a device may act as a mobile telephony device once it is configured with appropriate application software that may be downloaded from an app distribution platform . For example mobile computing device A may download a VOIP mobile app from app distribution platform and install the VOIP mobile app on mobile computing device A.

The end user devices e.g. user A device and user B device comprise a Central Processing Unit CPU support circuits display and memory . The CPU may comprise one or more commercially available microprocessors or microcontrollers that facilitate data processing and storage. The various support circuits facilitate the operation of the CPU and include one or more clock circuits power supplies cache input output circuits and the like. The memory comprises at least one of Read Only Memory ROM Random Access Memory RAM disk drive storage optical storage removable storage and or the like. In some embodiments the memory comprises an operating system OS a mobile app a status request log and a contact list . The status request log includes information regarding each user device from which a status request was received while the mobile device was busy e.g. on a call . The contact list may be used to select a user whose status is to be requested.

The mobile app may be a VoIP mobile telecommunications application provided by or otherwise associated with telecommunication service provider . The mobile app may be downloaded from app distribution platform and installed on user A device and user B device . The mobile app includes a communication module a status request module a status retrieval module and a notification module . The communication module is designed to provide telecommunication services to the device. The status request module is designed to generate a status request to a mobile device. The status retrieval module is designed to determine the status of a device either by retrieving the status from the mobile app or using operating system APIs. The notification module is designed to generate a notification message if a status request was received while the mobile device was busy e.g. on a call . The notification message informs the initiator of the status request that the mobile device is no longer busy and call may be placed to the device.

The operating system OS generally manages various computer resources e.g. network resources file processors and or the like . The operating system is configured to execute operations on one or more hardware and or software modules such as Network Interface Cards NICs hard disks virtualization layers firewalls and or the like. Examples of the operating system may include but are not limited to LINUX MAC OSX BSD UNIX MICROSOFT WINDOWS IOS ANDROID and the like.

The telecommunication service provider may be a VoIP service provider network and includes a call processing system and a registration system . In some embodiments the call processing system comprises a Central Processing Unit CPU support circuits and memory . The CPU may comprise one or more commercially available microprocessors or microcontrollers that facilitate data processing and storage. The various support circuits facilitate the operation of the CPU and include one or more clock circuits power supplies cache input output circuits and the like. The memory comprises at least one of Read Only Memory ROM Random Access Memory RAM disk drive storage optical storage removable storage and or the like. In some embodiments the memory comprises an operating system and a routing module . In some embodiments the processes of the call processing system may be distributed across two or more servers communicatively coupled to one another. In some embodiments the registration system may be disposed on a single server. In other embodiments the call processing system and the registration system may each be separate servers communicatively coupled to one another.

The OS generally manages various computer resources e.g. network resources file processors and or the like . The operating system is configured to execute operations on one or more hardware and or software modules such as Network Interface Cards NICs hard disks virtualization layers firewalls and or the like. Examples of the operating system may include but are not limited to LINUX MAC OSX BSD UNIX MICROSOFT WINDOWS IOS ANDROID and the like.

The networks comprise one or more communication systems that connect computers by wire cable fiber optic and or wireless link facilitated by various types of well known network elements such as hubs switches routers and the like. The networks may include an Internet Protocol IP network a public switched telephone network PSTN or other mobile communication networks listed above and may employ various well known protocols to communicate information amongst the network resources.

In a VoIP network a call request oftentimes takes the form of a Session Initiation Protocol SIP INVITE message sent from user A device to a call processing system . In a VoIP network the call processing system may be for example a SIP Proxy Network. The details and functionality of SIP can be found in the Internet Engineering Task Force IETF Request for Comments RFC Paper No. 3261 entitled SIP Session Initiation Protocol herein incorporated in its entirety by reference.

In practice when user A wishes to know whether user B is available for a call user A may send a status request to user B. In some embodiments user A may select a contact entry associated with user B from a contact list on user A device which automatically checks the status of the user B device responsive to the selection of user B s contact entry in contact list . In some embodiments user A may simply enter or select a telephone number and select for example a Check Status button menu item or icon from a user interface. Upon requesting to get the status of user B device the status request module generates a status request message. In attempting to transmit the status request message to user B the communication module transmits the status request message to call processing system to be routed to user B device .

Call processing system e.g. a SIP Proxy Network transmits the status request message from user A device to user B device . Routing module retrieves an IP address of user B device from the registration system . In some embodiments the status request message is a SIP INVITE message with a special header however the message may be any type of message such as a Hypertext Transfer Protocol HTTP message an Extensible Messaging and Presence Protocol XMPP message and the like that may be transmitted from user A device to user B device using registration system to determine how to route the message. In the case of a SIP INVITE the special header indicates that the call should not be connected with user B device i.e. the SIP INVITE should not cause user B device to ring but rather instructs user B device to retrieve its telephony status. Telephony statuses include but are not limited to free busy e.g. on call on call with call waiting on a GSM cellular call unknown and the like. The status retrieval module of user B device uses the mobile app and or OS API calls to determine the telephony status of user B device . The communication module transmits the status back to user A device where the status is displayed on display .

In some embodiments if the status of user B device is busy the status request is stored in status request log . In such embodiments when the status of user B device changes to free the notification module sends a message to each device that sent a status request while user B device was busy indicating that user B device is now free.

In some embodiments when user B device receives in response to the status request an indication that user B device is busy user A device may be restricted in contacting user B device . In such embodiments when user A device receives an indication that user B device is busy user A device may be restricted to only sending user B device text messages or making an off net call to user B. When user A device receives the indication that user B device is free the restrictions may be lifted thereby allowing user A device to call user B device .

At step a request is received by a mobile app on the first device. The request is a request to retrieve the telephony status of the second device. In some embodiments the request may be triggered automatically when a user selects a contact in a contact list. In some embodiments the request may be triggered when the user manually selects a contact or enters a telephone number and selects a user interface trigger for example a Check Status button.

At step the status request module generates a status request message. In some embodiments the status request message may be a fake SIP INVITE message. For example a fake SIP INVITE message may include a special header that indicates a status request rather than a call request as included in a typical SIP INVITE message. In some embodiments other types of status request messages may be generated such as an HTTP or XMPP message and the like. The status request message instructs the second device to provide a current status of the device for example free busy status unknown and the like.

At step the communication module transmits the status request message to the second device. The status request message is sent to a service provider e.g. a SIP Proxy network that accesses a registration system in order to determine how to route the status request message to the second device. The second device determines its status and routes a status message back to the first device via the service provider e.g. SIP Proxy network as described in further detail with respect to below.

At step the status of the second device is received at the first device. The notification module parses and displays the telephony status message from the second device and displays the telephony status on display . The status message may indicate that the second device is free. The status message may indicate that the second device is busy meaning the user of the second device is on a call. The status message may indicate that the status is unknown if for example the second device is off line. The method may proceed to step and end.

The method may optionally proceed to block . At step it is determined whether the status message received from the second device indicates that the second device is busy. If the status message does not indicate that the second device is busy the method proceeds to step and ends.

However if at step it is determined that the status message received from the second device indicates that the second device is busy then at step the notification module may disable one or more actions. For example the user of the first device may be restricted to texting the user of the second device or placing an off net call to the second device while being unable to place an on net call to the second device. In some embodiments the first device may disable enable all calls based on status of the second device.

At step the notification module receives a message from the second device indicating that the second device is no longer busy. At step the notification module then re enables the one or more actions disabled at step . As such once the second device is free the first device may call or send a text to the second device. The method ends at step .

At step the mobile app receives a status request. In some embodiments the status request message is a fake SIP INVITE message. The fake SIP INVITE message includes a special header that indicates a status request rather than a call request. In some embodiments other types of message may be received requesting the device status such as an HTTP or XMPP message and the like.

At step the status retrieval module retrieves the telephony status of the device. If a call is in progress using the mobile app the status may be retrieved from the mobile app. If the mobile app is not in use the telephony status of the device may be retrieved from operating system Application Programming Interfaces APIs . The retrieved telephony status may be free busy or unknown . More specific busy telephony statuses may include in app call or cellular call .

At step the retrieved device status is sent back to the first device. The status retrieval module generates a status message which is transmitted to the first device via the communication module .

At step it is determined whether the retrieved status is a busy status i.e. the device is on a call . If the status is not busy the method proceeds to step where the method ends. However if at step it is determined that the retrieved status is a busy status then at step the status request is recorded in for example a status request log . The status request log is used to record status requests received while the second device is busy. For each status request an entry in the status request log includes at least an identifier of the initiator of the status request.

At step a notification is received that the status of the device is no longer busy i.e. the call has ended . As such time the method proceeds to step where a notification is sent to each identifier in the status request log indicating that the second device is no longer busy. In some embodiments the notification may be a fake SIP INVITE a HyperText Transfer Protocol HTTP message UDP message or any TCP protocol message such as FTP SMTP IMAP and the like. The notification is sent back to the first device via the service provider e.g. a SIP Proxy network . In some embodiments a prompt is provided to the user of the device asking if the user would like to place a call to the device that initiated the status request. The method ends at step .

The embodiments of the present invention may be embodied as methods apparatus electronic devices and or computer program products. Accordingly the embodiments of the present invention may be embodied in hardware and or in software including firmware resident software micro code and the like which may be generally referred to herein as a circuit or module . Furthermore the present invention may take the form of a computer program product on a computer usable or computer readable storage medium having computer usable or computer readable program code embodied in the medium for use by or in connection with an instruction execution system. In the context of this document a computer usable or computer readable medium may be any medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. These computer program instructions may also be stored in a computer usable or computer readable memory that may direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer usable or computer readable memory produce an article of manufacture including instructions that implement the function specified in the flowchart and or block diagram block or blocks.

The computer usable or computer readable medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device. More specific examples a non exhaustive list of the computer readable medium include the following hard disks optical storage devices magnetic storage devices an electrical connection having one or more wires a portable computer diskette a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber and a compact disc read only memory CD ROM .

Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java Smalltalk or C and the like. However the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages such as the C programming language and or any other lower level assembler languages. It will be further appreciated that the functionality of any or all of the program modules may also be implemented using discrete hardware components one or more Application Specific Integrated Circuits ASICs or programmed Digital Signal Processors or microcontrollers.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the present disclosure and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as may be suited to the particular use contemplated.

Various embodiments of method and apparatus for organizing displaying and accessing contacts in a contact list as described herein may be executed on one or more computer systems which may interact with various other devices. One such computer system is computer system illustrated by which may in various embodiments implement any of the elements or functionality illustrated in . In various embodiments computer system may be configured to implement methods described above. The computer system may be used to implement any other system device element functionality or method of the above described embodiments. In the illustrated embodiments computer system may be configured to implement the methods and as processor executable executable program instructions e.g. program instructions executable by processor s in various embodiments.

In the illustrated embodiment computer system includes one or more processors coupled to a system memory via an input output I O interface . Computer system further includes a network interface coupled to I O interface and one or more input output devices such as cursor control device keyboard and display s . In various embodiments any of the components may be utilized by the system to receive user input described above. In various embodiments a user interface may be generated and displayed on display . In some cases it is contemplated that embodiments may be implemented using a single instance of computer system while in other embodiments multiple such systems or multiple nodes making up computer system may be configured to host different portions or instances of various embodiments. For example in one embodiment some elements may be implemented via one or more nodes of computer system that are distinct from those nodes implementing other elements. In another example multiple nodes may implement computer system in a distributed manner.

In different embodiments computer system may be any of various types of devices including but not limited to a personal computer system desktop computer laptop notebook or netbook computer mainframe computer system handheld computer workstation network computer a camera a set top box a mobile device a consumer device video game console handheld video game device application server storage device a peripheral device such as a switch modem router or in general any type of computing or electronic device.

In various embodiments computer system may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processor capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs . In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA.

System memory may be configured to store program instructions and or data accessible by processor . In various embodiments system memory may be implemented using any suitable memory technology such as static random access memory SRAM synchronous dynamic RAM SDRAM nonvolatile Flash type memory or any other type of memory. In the illustrated embodiment program instructions and data implementing any of the elements of the embodiments described above may be stored within system memory . In other embodiments program instructions and or data may be received sent or stored upon different types of computer accessible media or on similar media separate from system memory or computer system .

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the device including network interface or other peripheral interfaces such as input output devices . In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computer system and other devices attached to a network e.g. network such as one or more external systems or between nodes of computer system . In various embodiments network may include one or more networks including but not limited to Local Area Networks LANs e.g. an Ethernet or corporate network Wide Area Networks WANs e.g. the Internet wireless data networks some other electronic data network or some combination thereof. In various embodiments network interface may support communication via wired or wireless general data networks such as any suitable type of Ethernet network for example via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fiber Channel SANs or via any other suitable type of network and or protocol.

Input output devices may in some embodiments include one or more display terminals keyboards keypads touchpads scanning devices voice or optical recognition devices or any other devices suitable for entering or accessing data by one or more computer systems . Multiple input output devices may be present in computer system or may be distributed on various nodes of computer system . In some embodiments similar input output devices may be separate from computer system and may interact with one or more nodes of computer system through a wired or wireless connection such as over network interface .

In some embodiments the illustrated computer system may implement any of the operations and methods described above such as the methods illustrated by the flowcharts of and . In other embodiments different elements and data may be included.

Those skilled in the art will appreciate that computer system is merely illustrative and is not intended to limit the scope of embodiments. In particular the computer system and devices may include any combination of hardware or software that can perform the indicated functions of various embodiments including computers network devices Internet appliances PDAs wireless phones pagers and the like. Computer system may also be connected to other devices that are not illustrated or instead may operate as a stand alone system. In addition the functionality provided by the illustrated components may in some embodiments be combined in fewer components or distributed in additional components. Similarly in some embodiments the functionality of some of the illustrated components may not be provided and or other additional functionality may be available.

Those skilled in the art will also appreciate that while various items are illustrated as being stored in memory or on storage while being used these items or portions of them may be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software components may execute in memory on another device and communicate with the illustrated computer system via inter computer communication. Some or all of the system components or data structures may also be stored e.g. as instructions or structured data on a computer accessible medium or a portable article to be read by an appropriate drive various examples of which are described above. In some embodiments instructions stored on a computer accessible medium separate from computer system may be transmitted to computer system via transmission media or signals such as electrical electromagnetic or digital signals conveyed via a communication medium such as a network and or a wireless link. Various embodiments may further include receiving sending or storing instructions and or data implemented in accordance with the foregoing description upon a computer accessible medium or via a communication medium. In general a computer accessible medium may include a storage medium or memory medium such as magnetic or optical media e.g. disk or DVD CD ROM volatile or non volatile media such as RAM e.g. SDRAM DDR RDRAM SRAM and the like ROM and the like.

The methods described herein may be implemented in software hardware or a combination thereof in different embodiments. In addition the order of methods may be changed and various elements may be added reordered combined omitted or otherwise modified. All examples described herein are presented in a non limiting manner. Various modifications and changes may be made as would be obvious to a person skilled in the art having benefit of this disclosure. Realizations in accordance with embodiments have been described in the context of particular embodiments. These embodiments are meant to be illustrative and not limiting. Many variations modifications additions and improvements are possible. Accordingly plural instances may be provided for components described herein as a single instance. Boundaries between various components operations and data stores are somewhat arbitrary and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of claims that follow. Finally structures and functionality presented as discrete components in the example configurations may be implemented as a combined structure or component. These and other variations modifications additions and improvements may fall within the scope of embodiments as defined in the claims that follow.

While the foregoing is directed to embodiments of the present invention other and further embodiments of the invention may be devised without departing from the basic scope thereof and the scope thereof is determined by the claims that follow.

