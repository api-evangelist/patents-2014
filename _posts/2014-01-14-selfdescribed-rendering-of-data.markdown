---

title: Self-described rendering of data
abstract: Systems and methods that may be used in instant messaging (IM) environments to allow users in IM environments to share information and render shared information are described herein. In at least one embodiment, a system can receive an indication to publish a geographical location of a client and based on the indication to publish, a system can provide the geographical location of the client and instruction code for rendering an indication of the geographical location of the client within a map. In some embodiments, the geographical location of the client can be presented to one or more users, or contacts, in instant messaging environments.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09473431&OS=09473431&RS=09473431
owner: Microsoft Technology Licensing, LLC
number: 09473431
owner_city: Redmond
owner_country: US
publication_date: 20140114
---
This application claims priority to and is a continuation of U.S. patent application Ser. No. 12 040 548 filed on Feb. 29 2008 the entire contents of which are incorporated herein by reference.

The Internet is a global computer network that allows users to communicate with each other through various applications such as instant messaging. Various instant messaging IM systems are available that allow communication more akin to genuine conversations as compared to time delayed communications like email Short Messaging Service SMS and so on. In addition many IM systems include mechanisms that allow a user to display a presence status e.g. online offline away etc. .

An IM system known as WINDOWS LIVE Messenger Microsoft Corporation Redmond Wash. includes a presence application programming interface WINDOWS LIVE presence API . This HTTP based API returns a WINDOWS LIVE Messenger user s presence using JavaScript Object Notation JSON Sun Microsystems Inc. Sunnyvale Calif. or an image. The WINDOWS LIVE presence API can be used in conjunction with a control known as the WINDOWS LIVE Messenger IM Control. A Web site can show a user s presence using the WINDOWS LIVE presence API and let visitors send messages to the user with the WINDOWS LIVE Messenger IM Control.

The WINDOWS LIVE presence API allows an IM user to invite other IM users to provide permission to display their online presence. This is accomplished by adding a link to a signup page. When a user clicks the signup link the user is taken to a WINDOWS LIVE Messenger settings page. Once the signup is completed the user is directed back to the URL that was specified in the signup link. One can then use the user s ID to query for the user s online presence.

While user presence has become a basic feature of most IM systems as users desire to share more information some IM systems have developed mechanisms to extend presence with so called presence extensions . A presence extension may allow a user to provide additional information such as location or activity to a presence status. For example for a user Joe a presence status and presence extension might indicate busy and listening to James Brown . However to date the ability to readily share extended information is limited. As described herein various exemplary methods systems devices etc. allow people to share any of a variety of information in an IM environment.

This summary is provided to introduce simplified concepts related to self described rendering of data which are further described below in the Detailed Description. This summary is not intended to identify essential features of the claimed subject matter nor is it intended for use in determining the scope of the claimed subject matter.

Methods and systems for providing information in instant messaging environments are described herein. For example in at least some embodiments a system can receive an indication to publish a geographical location of a client and based on the indication to publish a system can provide the geographical location of the client and instruction code for rendering an indication of the geographical location of the client within a map. The geographical location of the client can be presented to one or more contacts in instant messaging environments. Various other example methods systems devices etc. are also disclosed.

Various exemplary methods systems devices etc. described herein allow a user to readily share information in an IM environment. For example an exemplary IM extension mechanism specifies a gadget to render the extension s content. In such an example the gadget can be retrieved by the subscribed endpoint either peer to peer from the publishing endpoint or from a Web server. The information the gadget renders may be contained in a presence document which can be published to all subscribers. Consider an exemplary location extension that allows a user to indicate a geographical location. Such an extension can specify a gadget that is a mash up with a mapping application e.g. VIRTUAL EARTH and can render the user s location on a map. Once rendered IM contacts can perform tasks such as searching nearby businesses planning routes to the located user etc. In a simple form a gadget is an HTML file and an XML definition file. Often gadgets include other files such as image files e.g. PNG JPG etc. style sheets e.g. CSS etc. and scripting e.g. JavaScript source files VBScript source files etc. . A gadget may be distributed as a compressed file e.g. a zip file etc. .

An exemplary presence extension and accompanying gadget could also be injected entirely by a Web server. For example a Web server operated by a merchandiser could e.g. using web services instruct an IM server to inject a wish list into a user s presence e.g. with the user s permission along with a gadget to display the wished for items. In this example all of the contacts of the user can see what the user wants for a holiday e.g. Christmas birthday Hanukah Diwali Kwanzaa etc. and buy a gift without having to take the step of first going to the merchandiser s Web site and looking up the user s wish list.

As described herein an exemplary presence extension can specify a richly rendered format for display of information that does not require the extension to be installed on the rendering endpoint. An exemplary method can include consuming presence information in a gadget. An exemplary method can include sending a gadget peer to peer.

Various described techniques for self described rendering of data enable sharing of additional information in an IM environment. A user may provide his her additional information to be shared with contacts connected to the user through an IM system as part of a self described rendering mechanism SDR . An exemplary SDR mechanism includes providing content and information about a gadget to render the content. Thus other users or contacts receive not only the content e.g. something other than mere presence status but also information regarding how the content can be rendered.

As described herein a presence extension provides for adding presence information to a presence document e.g. a document that includes presence information for a user . Presence information is typically information of or pertaining to a user that the user can publish to one or more contacts in an IM environment. Instructions or code for an IM system may be referred to as 1st party and as mentioned most IM systems include code for communication and display of presence information. Code for communication and display of extended information may be code from a 2nd party or a 3rd party.

In an exemplary method a presence extension can be described by a payload written in an extensible language e.g. XML . For example for a GPS presence extension it could contain . The extended presence data in this example is the latitude and longitude information and all of a user s contacts may receive it. But without some type of custom code on their computing devices the contacts may be simply limited to displaying the XML which does not particularly enhance the users IM experience. However the exemplary presence extension specifies a gadget that enables contacts e.g. subscribing users to have a richer user experience e.g. by displaying much richer data .

In the foregoing example the gps.gadget specifies a file that may be a zip or cab archive similar to a WINDOWS VISTA operating system sidebar gadget. Such a file can contain HTML CSS and JavaScript code laid out according to a pre defined format. At a receiving end a contact s computing device can download the gadget and host it in for example MSHTML WebKit etc. The contact s computing device can then inject an object model into this hosting environment that contains the extended information e.g. the location information in XML . Upon execution the HTML can show for example a VIRTUAL EARTH map of the location of the associated user with a pushpin graphic at the exact spot where the user is located.

As described herein a user can generate an exemplary presence extension that includes a description for a gadget e.g. code that can be used to render the extended information accordingly the presence extension becomes self rendering . On the consuming side a contact s computing device hosts the specified gadget e.g. in MSHTML and injects the extended presence information into the hosted gadget to render the specific extended presence information of originating user. In the description that follows the foregoing process is referred to generally as self described rendering of data for example in an IM environment.

The computing environment includes a plurality of client devices . . . N collectively referred to as the clients . The clients are communicatively connected through a network with an instant messaging server . The clients may be implemented as any of a variety of conventional computing devices for example a desktop PC a notebook or a portable computer a Personal Digital Assistant PDA a cell phone with appropriate software hardware a workstation a mobile computing device or an Internet appliance etc.

The network can be a wireless or a wired network or a combination thereof. The network can also be a collection of individual networks interconnected with each other and functioning as a single large network e.g. the Internet or an intranet . Examples of such individual networks include but are not limited to Local Area Networks LANs Wide Area Networks WANs and Metropolitan Area Networks MANs . Further the individual networks may be wireless or wired networks or a combination thereof.

The instant messaging IM server can be for example a general purpose computing device a server a cluster of servers and mainframes. The IM server can receive queries from the clients over the network . The IM server provides a mechanism for enabling communication between two or more of the clients based on various instant messaging protocols known in the art. The exchange of communication between the various clients can be implemented through written text based mechanisms.

The communication exchange may also be accompanied with the exchange of additional information associated with the user. Such additional information or extended information is packaged as self described rendering SDR data . As mentioned such data includes extended information and information about how to render the extended information. Extended information may include information about the geographical location of the clients that are communicating with each other information related to multimedia content the client is playing and other information that may be specific to the clients . Such information may be displayed in a graphical user interface GUI like a messenger window in an instant messaging IM system.

The rendering information included in the SDR data may be utilized for rendering a user s extended information on the computing devices of other clients . In one implementation extended information may be maintained locally at one or more of the clients or at the IM server and may be written in and implemented using Extensible Markup Language XML .

As described herein the SDR data may be referred to as a data package. For example the SDR data may be a data package for a network based instant messaging system where the data package includes descriptive data e.g. extended information about a user of the instant messaging system and data indicating a network location of a gadget to render the descriptive data the location accessible by one or more other users of the instant messaging system. With respect to the network location such a location may be specified using HTTP a domain name an Internet Protocol IP address or other technique or convention. In general the gadget is available via or as a resource on a network e.g. an IM server .

In various examples descriptive data about a user of an instant messaging system includes data about merchandise. Similarly data indicating a network location of a gadget may include a domain name or an Internet Protocol address of a merchandiser.

An exemplary timeline illustrates the various steps for self described rendering of data at one or more of the clients . In one embodiment the user of the client N referred to as IM client Z may be willing to share extended information with other users say client IM client A client IM client B and client IM client C . Examples of such extended information includes information related to one or more multimedia files being played by the IM client Z depicted by an instance T in the timeline . The general information related to the IM client Z say availability or presence status and the like may be manifest to the other clients namely IM clients A B and C through their messenger window . The messenger window may also indicate the presence and or availability status of the IM clients A B and C to the IM client Z. It would be appreciated that the availability status of only those clients who are known to the IM client Z would be visible to the IM client Z. This is depicted by an instance T on the timeline .

To implement self described rendering of data the IM client Z sends extended information as SDR data to the IM clients A B and C. The SDR data associated with the IM client Z is received by the IM clients A B and C through the IM server . This is depicted by an instance T on the timeline . As indicated previously the SDR data includes extended information and rendering information. In this case the extended information specifies information associated with the IM client Z and the rendering information includes data for determining the manner in which the extended information may be rendered at the IM clients A B and C. At an instance T on the timeline one or more agents may acquire an instruction code e.g. a gadget for rendering the extended information in conformance with the accompanying rendering information. The instruction code can be acquired by the IM clients A B and C from an external storage media like a disk drive or from a network say over the Internet.

Once the instruction code is acquired by the IM clients A B and C the extended information associated with the IM client Z is rendered in conformance with the rendering information included within the SDR data . The manner in which the extended information can be utilized for self described rendering of data is further described in greater detail in conjunction with

The input output interfaces may include logical ports that enable receiving input from one or more of the clients . Examples of input output interfaces include but are not limited to a scanner port a mouse port a keyboard port and so on. In the present implementation the input output interfaces enable exchange of information such as the status and other additional information between two or more of the clients .

The system memory can be any computer readable media in the form of both volatile memory such as Random Access Memory RAM and or non volatile memory such as Read Only Memory ROM or flash RAM. The system memory interchangeably referred to as memory typically includes data and or program modules being immediately accessible to and or presently operated on by the processor . In the present implementation the memory includes program modules and program data for implementing techniques for self described rendering of data. The program modules may include a gadget creation module a gadget rendering framework a gadget s and other modules . The program data may store data including the SDR data gadget data and other program framework data . The other program framework data may include data that may be generated as a result of the execution of one or more programs modules .

In one implementation the gadget creation module acquires the gadget data at a publishing endpoint e.g. one or more of the clients . In another implementation the gadget creation module can be configured to retrieve the gadget data from a publishing endpoint where one or more gadgets are already created and stored. The SDR data includes extended information about one or more of the clients and rendering information that dictates the manner in which the rendering of the user information is to be performed. In the present implementation the gadget data may be implemented using Hyper Text Markup Language HTML JavaScript JS and Cascading Style Sheets CSS and can be stored at various sources including the IM server and the client N.

The rendering information may also specify a gadget consider gadget s for rendering user related information included in the gadget data . The gadget s may be obtained from various sources for example the gadget s can be downloaded from a network location or from a computer readable media. In one implementation the gadget s can be created at one or more of the clients . In such an implementation the gadget creation module may create one or more gadget s based on the SDR data available from one or more of the clients who are willing to share their related information with other clients included in their friend s list.

As indicated previously the SDR data of one of the clients is sent to other clients who are included in his her friend or contact list. While this example sends to clients according to a friend or contact list such information may be sent to any of a variety of entities e.g. every client that meets some criterion or criteria . The SDR data typically includes information pertinent to one or more of the clients along with rendering information for rendering the user related information. Returning to the example as illustrated in the IM client Z sends the SDR data to one or more clients e.g. the IM clients A B and C over the network . The messenger window at the IM client Z normally indicates the presence status of the IM clients A B and C. Moreover the SDR data of the IM client Z is received by one or more of the IM clients A B and C.

The gadget creation module acquires the gadget data from the SDR data received from the IM client Z. In this example the gadget data includes extended information specific to the IM client Z for example multimedia files being played by the IM client Z geographical location of the IM client Z and so on. The gadget creation module also acquires the rendering information included within the SDR data . The rendering information includes relevant details indicating various attributes of one or more applications e.g. gadget s . Such attributes may include for example properties that identify the type of gadget s that may be required for rendering gadget data on devices of the IM clients A B and C location from where the gadget s can be obtained from and so on. Based on these attributes the gadget creation module can acquire the gadget s from either an externally or an internally available storage media. In one implementation the gadget creation module can create gadget s based on the attributes associated with the gadget data .

The rendering of the gadget data which includes extended information about the IM client Z may be based on the rendering information included within the SDR data . The gadget s may render the gadget data based on the gadget rendering framework . The gadget rendering framework may include set of program s or routine s that provide a foundation structure for executing the gadget s . Therefore the gadget rendering framework can provide a platform and various interfaces to render the gadget data using gadget s in conformance with the rendering information included within the SDR data . As described herein an exemplary gadget rendering framework can provide a secure surface for rendering information as opposed to just a general computing substrate. Once the rendering of the gadget data is performed the relevant output can be displayed. The rendered extended information may be displayed to other users through the user interface UI of the messenger application of the IM clients A B and C.

Depending on the nature of the extended information a gadget may generate a sound a graphic etc. Often extended information will be rendered graphically for example as a GUI. A GUI may further be capable of organizing personal applications like a calendar a calculator a stock ticker and a VOIP phone dialer. A GUI may display such applications on a side pane of a desktop to be accessed by users. The one or more other modules may provide instructions to use presence information and or extended information.

The computing environment includes a plurality of client devices . . . N collectively referred to as the clients that are communicatively connected to each other through a network . The clients may also be connected to an instant messaging server . The computing environment and each of its elements may be implemented as broadly described above with respect to .

In one embodiment the clients can communicate with each other by exchanging text based messages through applications based on instant messaging or IM protocols installed on each client . The exchanged messages both received and sent can be displayed through graphical user interface like messenger window . . . N on each of the clients . . . N respectively. In one implementation the computing environment may be a professional set up with the users associated with the clients as colleagues subordinates managers team group leaders and so as a part of the professional set up.

In the present implementation the clients and N are referred to as users Z A A and B respectively. Each of the users Z A A and B may be capable of communicating with each other through one or more IM based applications. For example user Z can be a manager Z supervising two projects say A and B involving the users namely users A A and B. In the present example project A may involve user A and A and the project B involves user B. The IM based applications allow manager Z to communicate with the users involved in the projects A and B when they are logged in and appear online.

Manager Z can communicate with the users A A and B who are online and also view additional information in relation to each of the user s schedule within the professional set up. Examples of such additional information include but are not limited to list of tasks that may have been allotted to each of the user s tasks completed by the user s details of a meetings attended and so on. Each of the users is associated with SDR data . The SDR data can be made available to other users working on the same projects or in some cases can be made available to all users who may be working on different projects.

In the example of the SDR data associated with users A may be made available to user A and vice versa. But the SDR data associated with either of users A and A would not be available to user B. However the SDR data associated with users A A and B can be made available to manager Z. As indicated previously the SDR data includes the gadget data e.g. gadget data of associated with user A and rendering information providing details of one or more application e.g. gadget s of that render the information.

Manager Z receives the SDR data from one or more of the users A A and B. A module e.g. the gadget creation module of acquires the user gadget data from the SDR data . The gadget creation module can either acquire the relevant gadget s from an external source or may create gadget s based on the SDR data . The appropriate specified gadget s renders the gadget data based on a rendering framework e.g. the gadget rendering framework of . The gadget rendering framework provides a platform and various interfaces to render the gadget data using the gadget s in conformance with the rendering information included within the SDR data .

Rendering of the gadget data of the SDR data makes relevant output i.e. the extended information about one or more of the users visible or audible etc. to manager Z and or member A for example through their messenger window and respectively. Such a scheme allows manager Z to view information associated with user A such as tasks the user may be working on list of completed tasks and so on. This may enable manager Z to control and regularize the work progressed by any one or more of users A A and B.

The computing environment includes a plurality of client devices . . . N collectively referred to as the clients that are communicatively connected through a network . The clients may also be connected to an instant messaging server . The computing environment and each of its elements may be implemented as broadly described above with respect to .

In one embodiment the clients can communicate with each other by exchanging text based messages through applications based on instant messaging or IM protocols installed on each client . The exchanged messages can be displayed through graphical user interface like messenger window . . . N on each of the clients . . . N respectively. In one implementation the computing environment may be a personal set up with the users associated with the clients as family members friends relatives and so on.

In the example of the clients and N are indicated as users D S S and B respectively. Each of the users D S S and B may be capable of communicating with each other through one or more IM based applications. For example user D can be a parent communicating with his her children friends relatives and so on namely users S S and B. In the present example the users S and S may be siblings and children of the parent and the user B is an acquaintance of the parent. The IM based applications allow the parent to communicate with the users S S and B when they are logged in and appear online.

The parent can communicate with the users S S and B and also view additional information related to each of the user s activities within their personal setup. Examples of such additional information include but are not limited to a list of multimedia content being played by the users the user s geographical location and list of web pages visited by the user recently and so on. Each of the users may be associated with a SDR data . The SDR data can be made available to other users belonging to the same family or in some cases can be made available to users who may be known to them. For example the SDR data associated with the siblings i.e. users S and S may be available to each other but not to user B. The data associated with the users S and S may not be made available to user B as they made be unknown to user B. However the siblings and user B may both be known to the parent allowing their respective SDR data to be made available to the parent.

As indicated previously the SDR data includes gadget data e.g. the gadget data of to be consumed by a gadget e.g. as associated with any of the users S S and B and rendering information providing details of one or more gadgets e.g. the gadget s of that may be capable of rendering the user information. The parent receives the SDR data from one or more of the users S S and B. A module e.g. the gadget creation module of may extract the user related information or extended information from the SDR data . In one implementation a gadget creation module may either acquire the relevant gadget s from an external source or may allow for creation of gadget s e.g. through user input . The gadget s renders the gadget data for example based on a gadget rendering framework e.g. the gadget rendering framework of .

The gadget rendering framework provides a platform and various interfaces to render the gadget data using the gadget s in conformance with the rendering information included within the SDR data . Rendering of the gadget data makes relevant output i.e. extended information about one or more of the users visible or audible etc. to the parent and or user S through their messenger window and respectively. Such a scheme allows the parent to view or hear information associated with user S such as multimedia content being played back by the user a description of the user s geographical location and a list of web pages visited by the user recently. This may enable parent D to monitor and be aware of his her children s activities and whereabouts through the additional information they obtain on the IM systems.

The computing environment includes a plurality of client devices . . . N collectively referred to as the clients a network instant messaging IM server and a web server . The clients instant messaging IM server and the web server are communicatively connected to each other through the network . The computing environment may be implemented as broadly described above with respect to .

The web server can be for example a general purpose computing device a server a cluster of servers and mainframes. The web server can be configured to receive one or more queries such as web based queries from the one or more clients over the network . The communication between the web server and the clients may be based on one or more of the known web based communication protocols such as HTTP. In one implementation the web server may be configured to manage and share one or more of web based applications or services such as advertisements with the clients . Moreover the clients may communicate with each other through text based messages using an instant messaging application.

In one embodiment the web server can be web server providing online purchase of goods items. Websites associated with such web servers advertise one or more different products that may be purchased by one or more clients visiting the website. Such sites offer various features that may allow clients to create a wish list. The clients can include various consumer products that they desire to purchase in the wish list. Depending on their need or other considerations a user may choose to purchase one or more products included in the wish list. In one implementation the wish list created by a client may be stored on the web server .

As indicated previously the additional information or extended information associated with any user such as one of the clients may be made available to other clients who are known to the client for example through a messenger window in the IM application. In one implementation the additional information may be the wish list that may be created by one or more of the clients and stored on the web server . For example the additional information included in SDR data is associated with the client and indicative of one or more products that may be included in the client s wish list. The client may also be willing to share his her wish list with other clients such as the clients . . . N.

As indicated previously the SDR data includes gadget data describing the wish list of the client and also includes rendering information for rendering and displaying gadget data. In one implementation the web server may instruct the IM server to add the wish list as the gadget data of the SDR data .

The SDR data associated with the client can be made available to other clients through the network . A module may extract the gadget data from the SDR data . In one implementation a gadget creation module may either acquire the appropriate gadget s from an external source based on the gadget data or may create one or more gadget s based on the SDR data . The gadget s may render the gadget data based on a framework. A gadget rendering framework can provide a platform and various interfaces to render the gadget data using the gadget s in conformance with the rendering information included within the SDR data .

Rendering of the gadget data in the SDR data allows the wish list associated with the client to be displayed to the other clients through their respective messenger windows . This allows the clients to view the wish list associated with the client without visiting the web site of the web server hosting the online transaction service.

In one implementation the gadget data of the SDR data can include information associated with various advertisements such as advertisements hosted by the web server . The information included in the gadget data can be rendered on the messenger windows of the clients based on the techniques described previously.

The computing environment includes a plurality of client devices and collectively referred to as the clients a network an IM server and a location server . The clients are communicatively connected through the network via the IM server . The clients may be connected with a location server . The computing environment and each of its elements may be implemented as broadly described with respect to . The IM server hosts an IM application allowing the clients to communicate with each other using text based messages.

The clients communicate with each other when they are logged in and appear online. In one implementation the clients and are referred to as users Susan Silvia Konpal and Joe respectively. Each of the users Susan Silvia Konpal and Joe can communicate with each other through one or more IM based applications and also view additional information related to each of the users. Examples of such additional information or extended information include but are not limited to geographical location like coordinates specifying the GSM or GPS or IP attributes associated with the respective clients and so on. The presence of the clients may be displayed in a graphical interface say presence UI in the IM application. For example the presence UI of user Susan indicates the presence status of other users namely Silvia Konpal as online and Joe as offline.

The location server can be for example a general purpose computing device a server a cluster of servers and mainframes. The location server manages and indicates geographical location and related details of one or more clients to identify the location where the respective clients may be located along with sharing the location information with the other clients .

In the example of additional information for example a geographical description of a location associated with the user Silvia can be shared as SDR location data or SDR data with other users Susan Konpal and Joe. It may be appreciated that the current illustration can be presented from the perspective of other users. As indicated previously the SDR data includes the information associated with user Silvia along with rendering information to render the associated information. The rendering information may provide details of one or more gadgets for rendering the gadget data associated with the user Silvia . In the example of a gadget available from a LIVE EARTH server provides for rendering the associated information in the SDR data .

For sharing the additional information users Susan Konpal and Joe receive the SDR data associated with the user Silvia. As indicated previously a gadget creation module can acquire gadget data from the SDR data . The gadget creation module may either acquire the relevant gadget from an external source such as for example the location server based on information included in the gadget data or may create gadget based on the SDR data . The gadget can render the gadget data using a rendering framework where the rendering framework provides a platform and various interfaces to render the gadget data using the gadget in conformance with the rendering information included within the SDR data .

Rendering of the gadget data generates relevant output i.e. the geographical location associated with the user Silvia which is displayed to other users through their respective gadget user interfaces . The gadget UI may depict the presence in various visual forms. For example the location may be depicted as a push pin on an animated globe depicting the geographical presence on Earth or on a two dimensional surface like a route map and the like. This may enable an online user to locate his her friends relatives colleagues and other acquaintances displayed on the gadget UI .

An exemplary method includes receiving data from a user of an instant messaging system parsing the data to identify descriptive data about the user and to identify a location of a gadget accessing the location of the gadget and downloading the gadget and executing the gadget to render the descriptive data. Such a method may include executing the gadget to visual renders the descriptive data and or executing the gadget to audibly render the descriptive data. The descriptive data about the user may include information about an audio file or a video file.

In a call block the method calls one or more APIs to integrate the SDR data into an IM system presence e.g. to load or otherwise make available to an IM server . Once integrated in a retrieval block contacts in an IM neighborhood can retrieve the SDR data from an appropriate source e.g. an IM server . In turn per a download block a contact s computing device parses the retrieved SDR data to uncover an instruction to access and download the appropriate gadget. A rendering block then renders the data using the downloaded gadget. Such rendering may make the data visible or audible to a contact in the IM environment.

An exemplary method includes generating descriptive data about a user of an instant messaging system identifying a network location of a gadget configured to render the generated descriptive data and transmitting the descriptive data and the network location of the gadget to an instant messaging server of the instant messaging system. Such a method may further include accessing the instant messaging server and downloading the descriptive data and the network location of the gadget. Yet further such a method may include downloading the gadget from the network location and executing the gadget to render the descriptive information. In various methods descriptive data may be extended information that extends presence information of the user of an instant messaging system.

As mentioned API calls may be used to implement of facilitate various aspects of self described rendering of data. For example a method may include calling one or more APIs to perform transmitting descriptive data and a network location of a gadget to an instant messaging server of an instant messaging system.

In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . The operating system include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash. The device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data forms. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

