---

title: Aggregation of network traffic source behavior data across network-based endpoints
abstract: Aggregation of network traffic source behavior data across network endpoints may be implemented. Indications of endpoint-specific network traffic directed to different network endpoints may be received. Aggregate traffic source behavior data may be generated across multiple aggregation levels. One or more traffic aggregation nodes may be implemented for each aggregation level to maintain different respective portions of the aggregate traffic source behavior data. Different granularity of the aggregate traffic source behavior data may be maintained at each of the aggregation levels. An indication of traffic source behavior for traffic sources may be provided such that responsive actions, such as traffic control actions, may be performed with regard to the traffic sources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09591018&OS=09591018&RS=09591018
owner: Amazon Technologies, Inc.
number: 09591018
owner_city: Reno
owner_country: US
publication_date: 20141120
---
Virtualization technologies may be leveraged to create many different types of services or perform different functions for client systems or devices. For example virtual machines may be used to implement a network based service for external customers such as an e commerce platform. Virtual machines may also be used to implement a service or tool for internal customers such as information technology IT service implemented as part of an internal network for a corporation. Network traffic may therefore be directed to these virtual machines in order to perform the various functions or tasks provided by the services or functions performed utilizing the virtual machines. Network traffic however may not always be sent for legitimate use of the virtual machines. Malicious or fraudulent network traffic may waste virtual machine resources for handling legitimate network traffic. Moreover malicious or fraudulent network traffic that is successful in its objectives may comprise the service as well as client information. Such challenges are not limited to network traffic directed to virtual machines but may generally all network based resources that receive network traffic at some network endpoint.

While embodiments are described herein by way of example for several embodiments and illustrative drawings those skilled in the art will recognize that the embodiments are not limited to the embodiments or drawings described. It should be understood that the drawings and detailed description thereto are not intended to limit embodiments to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description or the claims. As used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . Similarly the words include including and includes mean including but not limited to.

The systems and methods described herein may implement aggregating network traffic source behavior data according to some embodiments. Network based resources such as web sites services or any other network accessible data and or content may often be subject to unwanted or illegitimate traffic directed to the resource. For example various automated requestors such as robots also referred to as bots may send bad malformed or high volumes of requests to network endpoints for the network based resources. In some cases this unwanted traffic may be simply time consuming or wasteful to process. However in some instances the network traffic may be directed to a network based resource as part of some network attack e.g. a denial of service attack computer viral activity or attempts to fraudulently access the network based resource e.g. attempts to hack a customer account login or password . Oftentimes knowledge of the sources of these attacks is often limited to the entity or operator of the network based resource receiving the illegitimate traffic only allowing reactive actions to be taken with regard to the illegitimate traffic. Moreover sophisticated illegitimate traffic may target multiple network based resources in such a way as to elude detection at any one network based resource. Aggregation of network traffic source behavior data across network endpoints may be implemented to allow for a response to unwanted traffic.

Aggregation of network traffic source behavior data across network endpoints may be implemented for a variety of different types of network based resources reached via the network endpoints. For example in various embodiments a provider network may supply clients operators or other customers with access to and or control of one or more computing resources which may operate as network based resources exposed to potential unwanted or illegitimate network traffic. These resources may include various types of computing systems or devices configured for communication over a network.

In some embodiments a provider network may provide virtual computing resources to clients users or other type of customers in the form of reserved compute instances e.g. a virtual machine acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource as part of a virtual computing service among other network based services. Clients of the provider network may reserve i.e. purchase or buy one or more compute resources such as compute instances to perform various functions services techniques and or applications. As part of performing these functions services techniques and or applications network traffic may be received for the different compute resources from traffic sources external to the provider network. For example a set of compute resources such as multiple servers providing a payment service for an e commerce website may receive network traffic to facilitate payments for items purchased at the e commerce website.

Provider clients who utilize computing resources may take advantage of the flexibility with which new resources can be acquired. Virtual compute resources for example can be quickly scaled to meet demand such as for a provider client implementing a fast growing web service. However processing unwanted or illegitimate network traffic at the virtual compute resources may increase the number of resources required to provide the desired functionality. Such unwanted utilization of resources may be wasteful for both provider clients and the provider network itself which may offer the wasted resources to other provider clients. Implementing aggregation of network traffic source behavior data across network endpoints may allow responsive actions such as various traffic control actions like dropping blocking or redirecting network traffic to be performed proactively without receiving network traffic from an identified traffic source based on traffic source behavior information collected from network traffic directed to other computing resources in the provider network. In this way provider clients could reduce the number of computing resources to handle network traffic based on the reduced amount of illegitimate traffic received at the computing resources.

The larger the pool of aggregate network traffic source behavior data the earlier a problematic traffic source may be detected and dealt with. Thus similar benefits may be provided when implementing these aggregation techniques for other network based resources in addition to or instead of the example computing resources described above.

As illustrated in traffic reporting for the endpoint specific traffic may be performed to provide indications of the network traffic to the network endpoints into cross endpoint traffic analysis system service . In at least some embodiments cross endpoint traffic analysis may implement multiple different aggregation levels such as levels and . Each aggregation level may provide an aggregate view of traffic directed to network endpoints according to a particular granularity for the aggregation level as discussed below with regard to . For instance aggregation level may maintain endpoint specific granularity such as that the particular endpoint specific traffic directed to a network endpoint from particular traffic source s may be visible and thus actionable for performing responsive actions against those traffic source s . Different granularities of the aggregate traffic behavior data may allow for responsive actions to be tuned or configured specific to the network based resource behind the network endpoint .

In at least some embodiments cross endpoint traffic analysis may implement multiple traffic behavior aggregation nodes such as described in detail below with regard to . Traffic behavior aggregation nodes may maintain a portion of the aggregate traffic source behavior data. Traffic behavior aggregation nodes may also belong to a particular aggregation level. For instance traffic behavior aggregation nodes and are illustrated as belonging to aggregation level while traffic behavior aggregation node is illustrated as belonging to aggregation level and traffic behavior aggregation node is illustrated as belonging to aggregation level . These nodes may act in various embodiments as clusters either within a particular aggregation level or within the cross endpoint traffic analysis service in some embodiments. For instance as illustrated in communication between nodes may occur traffic aggregation and reporting and .

Traffic aggregation and reporting may generate the different respective granularities maintained in the different aggregation levels at the different traffic behavior aggregation nodes in various embodiments. As discussed below with regard to traffic behavior aggregation nodes may receive traffic behavior data and generate an aggregate version of the data according to the granularity for a next aggregation level before reporting the traffic source behavior data. For example at aggregation level traffic sources may be identified that exceed some number of requests e.g. 10 requests to any network endpoint in a particular time period e.g. 1 second or timeslice. For generating an aggregated version of the data according to a different granularity the traffic sources may be identified that exceed some greater number of requests e.g. 100 requests to any network endpoint in the particular time period. Providing different levels of granularity may allow for the different aggregation levels to filter according to different events data or behavior of significance. For instance aggregate traffic source behavior data maintained in aggregation level as a higher aggregation level may be more coarse identifying those traffic source s with traffic behavior that is particular significant e.g. high likelihood of illegitimate traffic .

As illustrated in source traffic behavior information may be obtained and may in various embodiments be used to determine whether to perform responsive actions such as various traffic control actions for traffic directed to network endpoints . For example indications of traffic behavior for particular traffic source s may be obtained and or provided to traffic enforcement agents as discussed below with regard to or other mechanisms to implement responsive actions based on the information. In this way network endpoint may for example block traffic from a particular traffic source based on the traffic reporting for network endpoint which may have received network traffic from the particular traffic source s even though the particular traffic source s did not send network traffic to network endpoint

Please note that previous descriptions are not intended to be limiting but are merely provided as an example of network endpoints aggregation levels and or traffic behavior aggregation nodes. Various other components may interact with or assist in aggregating network traffic source behavior data across network endpoints.

This specification next includes a general description of cross endpoint traffic analysis service which may implement aggregating network traffic source behavior data across network endpoints. Then various examples of the cross endpoint traffic analysis service are discussed including different components modules or arrangements of components module that may be employed as part of implementing the service. A provider network which may implement the service is also discussed. A number of different methods and techniques to implement aggregating network traffic source behavior data across network endpoints are then discussed some of which are illustrated in accompanying flowcharts. Finally a description of an example computing system upon which the various components modules systems devices and or nodes may be implemented is provided. Various examples are provided throughout the specification.

A virtual compute instance e.g. or may for example comprise one or more servers with a specified computational capacity which may be specified by indicating the type and number of CPUs the main memory size and so on and a specified software stack e.g. a particular version of an operating system which may in turn run on top of a hypervisor . A number of different types of computing devices may be used singly or in combination to implement the compute instances of provider network in different embodiments including general purpose or special purpose computer servers storage devices network devices and the like. In some embodiments endpoint clients or other any other user may be configured and or authorized to direct network traffic to a compute instance.

Compute instances may operate or implement a variety of different platforms such as application server instances Java virtual machines JVMs general purpose or special purpose operating systems platforms that support various interpreted or compiled programming languages such as Ruby Perl Python C C and the like or high performance computing platforms suitable for performing client applications without for example requiring the client to access an instance. In some embodiments compute instances have different types or configurations based on expected uptime ratios. The uptime ratio of a particular compute instance may be defined as the ratio of the amount of time the instance is activated to the total amount of time for which the instance is reserved. Uptime ratios may also be referred to as utilizations in some implementations. If a client expects to use a compute instance for a relatively small fraction of the time for which the instance is reserved e.g. 30 35 of a year long reservation the client may decide to reserve the instance as a Low Uptime Ratio instance and pay a discounted hourly usage fee in accordance with the associated pricing policy. If the client expects to have a steady state workload that requires an instance to be up most of the time the client may reserve a High Uptime Ratio instance and potentially pay an even lower hourly usage fee although in some embodiments the hourly fee may be charged for the entire duration of the reservation regardless of the actual number of hours of use in accordance with pricing policy. An option for Medium Uptime Ratio instances with a corresponding pricing policy may be supported in some embodiments as well where the upfront costs and the per hour costs fall between the corresponding High Uptime Ratio and Low Uptime Ratio costs.

Compute instance configurations may also include compute instances with a general or specific purpose such as computational workloads for compute intensive applications e.g. high traffic web applications ad serving batch processing video encoding distributed analytics high energy physics genome analysis and computational fluid dynamics graphics intensive workloads e.g. game streaming 3D application streaming server side graphics workloads rendering financial modeling and engineering design memory intensive workloads e.g. high performance databases distributed memory caches in memory analytics genome assembly and analysis and storage optimized workloads e.g. data warehousing and cluster file systems . Size of compute instances such as a particular number of virtual CPU cores memory cache storage as well as any other performance characteristic. Configurations of compute instances may also include their location in a particular data center availability zone geographic location etc. . . . and in the case of reserved compute instances reservation term length.

In various embodiments compute instances may be a network based resource behind an endpoint for receiving network traffic. For instance endpoint may be a domain name or network address for compute instance which endpoint client s may direct network traffic to. Similarly endpoints and may serve as targets for network traffic directed to compute instance s and respectively. Please note that other service s may also implement network based resource s e.g. database systems platforms workflow engines or data storage which may be targeted for network traffic via endpoint s . In at least some embodiments external network resources e.g. web sites services etc. may report network traffic to respective endpoint s and or consume aggregated network traffic source behavior data for enforcement at traffic reporting enforcement agents .

In at least some embodiments the different network based resources may implement a traffic reporting enforcement agent to report endpoint specific traffic to cross endpoint traffic analysis service and receive traffic source behavior data from cross endpoint traffic analysis service and perform responsive actions such as enforcement or traffic controls actions. As illustrated in traffic reporting enforcement agents and may be implemented at the network based resources. As such these agents may be able to report encrypted or otherwise unobtainable data from provider network s point of view in order to provide a richer set of data for the traffic source behavior data that is reported with various provider network client permissions and controls set up to ensure that only customer approved data is reported .

As illustrated in virtualization hosts such as virtualization hosts and may implement and or manage multiple compute instances and respectively in some embodiments and may be one or more computing devices such as computing system described below with regard to . A virtualization host may include a virtualization management module such as virtualization management modules and capable of instantiating and managing a number of different client accessible virtual machines or compute instances. The virtualization management module may include for example a hypervisor and an administrative instance of an operating system which may be termed a domain zero or dom0 operating system in some implementations. The dom0 operating system may not be accessible by clients on whose behalf the compute instances run but may instead be responsible for various administrative or control plane operations of the network provider including handling the network traffic directed to or from the compute instances. For instance virtualization management modules may implement traffic reporting enforcement agents such as agents and . Traffic reporting enforcement agents implemented at virtualization management modules may allow provider network computing service and or cross endpoint traffic analysis service to automatically collect traffic source behavior data and perform responsive actions without any action or implementation at the network based resource hosted at the virtualization host.

Provider network may implement cross endpoint traffic analysis service which is discussed in further detail below with regard to .

Provider network may implement internal network . Internal network may include the hardware e.g. modems routers switches load balancers proxy servers etc. and software e.g. protocol stacks accounting software firewall security software etc. necessary to establish a networking links between different components of provider network such as virtualization hosts cross endpoint traffic analysis service other service s as well as external networks e.g. the Internet . In some embodiments provider network may employ an Internet Protocol IP tunneling technology to provide an overlay network via which encapsulated packets may be passed through internal network using tunnels. The IP tunneling technology may provide a mapping and encapsulating system for creating an overlay network on network and may provide a separate namespace for the overlay layer and the internal network layer. Packets in the overlay layer may be checked against a mapping directory e.g. provided by mapping service not illustrated to determine what their tunnel target should be. The IP tunneling technology provides a virtual network topology the interfaces that are presented to clients and may be attached to the overlay network so that when a client provides an IP address that they want to send packets to the IP address is run in virtual space by communicating with a mapping service that knows where the IP overlay addresses are. In some embodiments various techniques to report traffic source behavior and perform responsive actions such as discussed above with regard to traffic reporting enforcement agents may be implemented as part of internal network .

Provider network clients may encompass any type of client configurable to submit requests to network provider . For example a given client may include a suitable version of a web browser or may include a plug in module or other type of code module configured to execute as an extension to or within an execution environment provided by a web browser. Alternatively a client may encompass an application such as a database application or user interface thereof a media application an office application or any other application that may make use of compute instances to perform various operations. In some embodiments such an application may include sufficient protocol support e.g. for a suitable version of Hypertext Transfer Protocol HTTP for generating and processing network based services requests without necessarily implementing full browser support for all types of network based data. In some embodiments clients may be configured to generate network based services requests according to a Representational State Transfer REST style network based services architecture a document or message based network based services architecture or another suitable network based services architecture. In some embodiments a client e.g. a computational client may be configured to provide access to a compute instance in a manner that is transparent to applications implement on the client utilizing computational resources provided by the compute instance. Endpoint client s may be similarly implemented as discussed above with regard to provider network client s in order to direct network traffic to various network endpoints in provider network .

Clients and may convey network based services requests to provider network via external network . In various embodiments external network may encompass any suitable combination of networking hardware and protocols necessary to establish network based communications between clients and provider network . For example a network may generally encompass the various telecommunications networks and service providers that collectively implement the Internet. A network may also include private networks such as local area networks LANs or wide area networks WANs as well as public or private wireless networks. For example both a given provider client and provider network may be respectively provisioned within enterprises having their own internal networks. In such an embodiment a network may include the hardware e.g. modems routers switches load balancers proxy servers etc. and software e.g. protocol stacks accounting software firewall security software etc. necessary to establish a networking link between the given provider client and the Internet as well as between the Internet and provider network . It is noted that in some embodiments clients and may communicate with provider network using a private network rather than the public Internet.

In at least some embodiments cross endpoint traffic analysis service may implement a control plane . Various different computing systems servers and or nodes such as computing system described below with regard to may be implemented in various embodiments. Control plane may perform various management and operational functions to implement aggregating network traffic source behavior data in various embodiments. For example control plane may implement an interface for cross endpoint traffic analysis service . Interface may provide a programmatic and or graphical interface which may be utilized to perform various actions. For example additional network endpoints may be added for aggregation or requests indications of various traffic behavior for resources may be provided. In at least some embodiments a graphical user interface GUI may be implemented that allows clients of a provider network e.g. clients in to select modify enable disable and or otherwise configure traffic control policies for different network endpoints e.g. implemented at virtual compute instances .

In at least some embodiments control plane may implement aggregation management . Aggregation management may create provision initiate organize and or otherwise manage the operation of traffic behavior aggregation nodes in various embodiments. For example aggregation management module may determine the number of traffic behavior aggregation nodes to assign to each aggregation level tracking the storage space available for each aggregation level. If insufficient storage space remains for an aggregation level then aggregation management may provisions new traffic behavior aggregation nodes to assign to the aggregation level in need. In some embodiments aggregation management may determine the number of aggregation levels. Such changes to the organization or assignments of traffic behavior aggregation node may also introduce changes to the aggregation levels. For example if insufficient storage space remains at a top or highest aggregation level then an aggregation level may be implemented and the aggregate traffic source behavior data may be redistributed across the same and or different traffic behavior aggregation nodes according to a distribution schema e.g. a hash distribution schema . Aggregation management module may determine the distribution schema for aggregation traffic source data among the traffic behavior aggregation nodes for each aggregation level in various embodiments.

Aggregation management may determine the network endpoints allowed or authorized to report indications of network traffic in various embodiments. For example aggregation management may coordinate manage the receipt of network traffic indications for network endpoints implemented for network based resources external to a provider network e.g. network resources in in some embodiments. Aggregation management may also manage the addition of new network endpoints reporting indications of network traffic for new resources internal to a provider network.

Aggregation management may also determine the granularity of data specified for each aggregation level. For example aggregation management module may implement one or more aggregation policies for each aggregation level. An aggregation policy may describe the traffic behavior of traffic sources that should be reported in an aggregated version of the data. For example the data may include various information about the traffic source e.g. network address user agent and or other network protocol header information such as Hypertext Transfer Protocol or Transmission Control Protocol header information may be described as predicates conditions or other criteria in aggregation policies that determine when traffic source behavior is to be aggregated to a higher aggregation level. In at least some embodiments various commands requests may be received at interface to modify the aggregation policies for one or more of the aggregation levels.

In at least some embodiments control plane may implement aggregate traffic behavior discovery and reporting . Aggregate traffic behavior discovery and reporting module may be configured to provide indications of network behavior to traffic reporting and enforcement agent s . In at least some embodiments traffic reporting enforcement agent s may send requests via interface for specific information such as traffic behavior data for a specific network endpoint to aggregate traffic behavior discovery reporting . Aggregate traffic behavior discovery reporting may perform various techniques such as those discussed below with regard to to retrieve the requested traffic behavior data from the appropriate traffic behavior aggregation node . Aggregate traffic behavior discovery reporting may publish indications of traffic behavior data such as a black list white list or other indications of traffic source behavior to various storage locations communication platforms e.g. a messaging service implemented as part of a provider network or any other method of communication that may allow traffic reporting enforcement agent s to consume the indications of traffic behavior data for traffic sources. In at least some embodiments the indications of traffic source behavior data may be provided to clients implementing network based resources behind network endpoints that are external to a provider network e.g. externally hosted web sites . The indications may include various kinds or types of information describing a traffic source e.g. user agent network address and or behavior e.g. number of requests per timeslice number of access attempts password reset etc. . In at least some embodiments the indications may be coded rated or otherwise identified with different confidence levels e.g. 30 confident illegitimate traffic 100 confident illegitimate traffic etc. .

In at least some embodiments control plane may manage the enforcement of various traffic control policies or other responsive reactions to be performed with regard to traffic sources based on traffic behavior of the traffic sources. For example clients of a provider network e.g. provider network that implement network based resources behind the network endpoints may request the implementation of various traffic control policies or an enforcement mechanism to perform responsive actions for a network endpoint. For example enforcement management may download install register and or otherwise provide a traffic reporting enforcement agent onto a host of a network based resource and initiate traffic control policies to be enforced based on the violation of the traffic control policies or satisfaction of control policy criteria . Updates or notifications of traffic source behavior may be pushed out to traffic reporting enforcement agent s or may be placed in a location that the indications may be obtained e.g. a storage service database or other accessible location . In at least some embodiments enforcement management may receive requests to initiate and or configure traffic controls based on traffic behavior of traffic sources via a GUI implemented at interface .

Once received the aggregate traffic behavior data may be stored in persistent storage such as aggregate traffic behavior data . Various different types or formats of data stores may implemented such as various online analytical processing OLAP or online transaction processing OLTP type data stores in order to aid the update and or querying of data from aggregate traffic behavior data . Traffic analysis may analyze the received aggregate traffic behavior data according to a granularity specified for a next or higher aggregation level. This aggregate version of the data may be passed to traffic reporting which may provide the aggregate traffic behavior to the next aggregation level . Traffic reporting may identify according to a distribution schema for the next aggregation level an aggregation node to send the aggregate version in various embodiments.

Traffic behavior aggregation node may in various embodiments implement a query engine to receive queries for traffic behavior data. The queries may include various predicates or selection criteria which query engine may be able to evaluate in order to obtain the requested data. In at least some embodiments query engine may be configured to recognize queries for data for which insufficient granularity of the aggregate traffic behavior data exists at the current aggregation level. For instance an error response might be returned for a request for endpoint specific traffic behavior data at an aggregation node in a higher aggregation level. Once the requested data is obtained from aggregate traffic behavior data then a traffic behavior data response may be sent. In some embodiments not illustrated query engine may be configured to send a request to the appropriate node in the appropriate aggregation level e.g. as described below with regard to .

The examples of implementing aggregation of network traffic source behavior data across network endpoints discussed above with regard to have been given in regard to virtual computing resources or other resources offered by a provider network. Various other types or configurations of a provider network may implement these techniques or other collections of network based resources behind network endpoints. is high level flowchart illustrating various methods and techniques for aggregating network traffic source behavior data across network endpoints according to some embodiments. These techniques may be implemented using various components of virtual computing resource provider as described above with regard to or other provider network components.

As indicated at indications of endpoint specific network traffic directed to different network endpoints may be received from traffic sources. Network traffic may be any form of message request or communication that initiates request processing at the network resource behind the network endpoint. Indications of the endpoint specific network traffic may include metrics e.g. requests per timeslice from traffic source X . Such data may be continually collected and received in various embodiments. As indicated at aggregate traffic source behavior data may be generated that is maintained across different aggregation levels at different respective granularities. As discussed above each aggregation level may maintain a different view of the aggregate endpoint specific network traffic. In at least some embodiments different traffic aggregation nodes may be implemented for each aggregation level to maintain different respective portions of the aggregate traffic source behavior data at the granularity of the aggregation level to which the aggregation nodes are assigned.

As indicated at in various embodiments traffic behavior notification for different traffic sources may be provided that is based at least in part on the aggregate traffic source data at one or more aggregation levels. For example traffic source behavior data that is specific to a particular network endpoint may be retrieved from an aggregation level that is low enough to maintain endpoint specific aggregation e.g. level in . For other indications of traffic behavior other aggregation levels may be accessed alone or in combination to provide the traffic behavior indications. discussed below provides further discussion for techniques to obtain traffic source behavior data. As indicated at in various embodiments a responsive action may be performed for a network endpoint based on the traffic behavior indications for a traffic source. For example if the indication describes that the rate of requests exceeds some threshold e.g. 1 000 requests per 1 second then a responsive action e.g. dropping traffic from the traffic source may be performed. provides further discussion of performing responsive actions in various embodiments.

As indicated at traffic behavior aggregation node s of the identified aggregation level s may be identified according to the distribution schema s for the aggregation level s in various embodiments. For example if a hash mod function distributing traffic source identifiers e.g. network address is performed to distribute the data among 4 nodes then the result of the hash mod function may indicate which node of a particular aggregation level to query for the traffic behavior data. As indicated at a query may be sent to the identified traffic behavior aggregation node s to obtain the requested traffic behavior data in various embodiments. For example the query may be formatted according to a programmatic interface specific to aggregation nodes or for a cross endpoint traffic analysis service. In at least some embodiments an initial request to a highest level aggregation node may instigate the performance of this technique or a similar technique to traverse the different nodes and aggregation levels to locate the requested data.

The methods described herein may in various embodiments be implemented by any combination of hardware and software. For example in one embodiment the methods may be implemented by a computer system e.g. a computer system as in that includes one or more processors executing program instructions stored on a computer readable storage medium coupled to the processors. The program instructions may be configured to implement the functionality described herein e.g. the functionality of various servers and other components that implement the virtual computing resource provider described herein . The various methods as illustrated in the figures and described herein represent example embodiments of methods. The order of any method may be changed and various elements may be added reordered combined omitted modified etc.

Embodiments of aggregating network traffic source behavior data across network endpoints as described herein may be executed on one or more computer systems which may interact with various other devices. is a block diagram illustrating an example computer system according to various embodiments. For example computer system may be configured to implement nodes of a cross endpoint traffic analysis service provider network and or a client in different embodiments. Computer system may be any of various types of devices including but not limited to a personal computer system desktop computer laptop or notebook computer mainframe computer system handheld computer workstation network computer a consumer device application server storage device telephone mobile telephone or in general any type of computing device.

Computer system includes one or more processors any of which may include multiple cores which may be single or multi threaded coupled to a system memory via an input output I O interface . Computer system further includes a network interface coupled to I O interface . In various embodiments computer system may be a uniprocessor system including one processor or a multiprocessor system including several processors e.g. two four eight or another suitable number . Processors may be any suitable processors capable of executing instructions. For example in various embodiments processors may be general purpose or embedded processors implementing any of a variety of instruction set architectures ISAs such as the x86 PowerPC SPARC or MIPS ISAs or any other suitable ISA. In multiprocessor systems each of processors may commonly but not necessarily implement the same ISA. The computer system also includes one or more network communication devices e.g. network interface for communicating with other systems and or components over a communications network e.g. Internet LAN etc. . For example a client application executing on system may use network interface to communicate with a server application executing on a single server or on a cluster of servers that implement one or more of the components of the data warehouse system described herein. In another example an instance of a server application executing on computer system may use network interface to communicate with other instances of the server application or another server application that may be implemented on other computer systems e.g. computer systems .

In the illustrated embodiment computer system also includes one or more persistent storage devices and or one or more I O devices . In various embodiments persistent storage devices may correspond to disk drives tape drives solid state memory other mass storage devices or any other persistent storage device. Computer system or a distributed application or operating system operating thereon may store instructions and or data in persistent storage devices as desired and may retrieve the stored instruction and or data as needed. For example in some embodiments computer system may host a storage system server node and persistent storage may include the SSDs attached to that server node.

Computer system includes one or more system memories that are configured to store instructions and data accessible by processor s . In various embodiments system memories may be implemented using any suitable memory technology e.g. one or more of cache static random access memory SRAM DRAM RDRAM EDO RAM DDR 10 RAM synchronous dynamic RAM SDRAM Rambus RAM EEPROM non volatile Flash type memory or any other type of memory . System memory may contain program instructions that are executable by processor s to implement the methods and techniques described herein. In various embodiments program instructions may be encoded in platform native binary any interpreted language such as Java byte code or in any other language such as C C Java etc. or in any combination thereof. For example in the illustrated embodiment program instructions include program instructions executable to implement the functionality of a provider network and or cross endpoint traffic analysis service in different embodiments. In some embodiments program instructions may implement multiple separate clients server nodes and or other components.

In some embodiments program instructions may include instructions executable to implement an operating system not shown which may be any of various operating systems such as UNIX LINUX Solaris MacOS Windows etc. Any or all of program instructions may be provided as a computer program product or software that may include a non transitory computer readable storage medium having stored thereon instructions which may be used to program a computer system or other electronic devices to perform a process according to various embodiments. A non transitory computer readable storage medium may include any mechanism for storing information in a form e.g. software processing application readable by a machine e.g. a computer . Generally speaking a non transitory computer accessible medium may include computer readable storage media or memory media such as magnetic or optical media e.g. disk or DVD CD ROM coupled to computer system via I O interface . A non transitory computer readable storage medium may also include any volatile or non volatile media such as RAM e.g. SDRAM DDR SDRAM RDRAM SRAM etc. ROM etc. that may be included in some embodiments of computer system as system memory or another type of memory. In other embodiments program instructions may be communicated using optical acoustical or other form of propagated signal e.g. carrier waves infrared signals digital signals etc. conveyed via a communication medium such as a network and or a wireless link such as may be implemented via network interface .

In some embodiments system memory may include data store which may be configured as described herein. In general system memory e.g. data store within system memory persistent storage and or remote storage may store data blocks replicas of data blocks metadata associated with data blocks and or their state configuration information and or any other information usable in implementing the methods and techniques described herein.

In one embodiment I O interface may be configured to coordinate I O traffic between processor system memory and any peripheral devices in the system including through network interface or other peripheral interfaces. In some embodiments I O interface may perform any necessary protocol timing or other data transformations to convert data signals from one component e.g. system memory into a format suitable for use by another component e.g. processor . In some embodiments I O interface may include support for devices attached through various types of peripheral buses such as a variant of the Peripheral Component Interconnect PCI bus standard or the Universal Serial Bus USB standard for example. In some embodiments the function of I O interface may be split into two or more separate components such as a north bridge and a south bridge for example. Also in some embodiments some or all of the functionality of I O interface such as an interface to system memory may be incorporated directly into processor .

Network interface may be configured to allow data to be exchanged between computer system and other devices attached to a network such as other computer systems which may implement one or more storage system server nodes database engine head nodes and or clients of the database systems described herein for example. In addition network interface may be configured to allow communication between computer system and various I O devices and or remote storage . Input output devices may in some embodiments include one or more display terminals keyboards keypads touchpads scanning devices voice or optical recognition devices or any other devices suitable for entering or retrieving data by one or more computer systems . Multiple input output devices may be present in computer system or may be distributed on various nodes of a distributed system that includes computer system . In some embodiments similar input output devices may be separate from computer system and may interact with one or more nodes of a distributed system that includes computer system through a wired or wireless connection such as over network interface . Network interface may commonly support one or more wireless networking protocols e.g. Wi Fi IEEE 802.11 or another wireless networking standard . However in various embodiments network interface may support communication via any suitable wired or wireless general data networks such as other types of Ethernet networks for example. Additionally network interface may support communication via telecommunications telephony networks such as analog voice networks or digital fiber communications networks via storage area networks such as Fibre Channel SANs or via any other suitable type of network and or protocol. In various embodiments computer system may include more fewer or different components than those illustrated in e.g. displays video cards audio cards peripheral devices other network interfaces such as an ATM interface an Ethernet interface a Frame Relay interface etc. 

It is noted that any of the distributed system embodiments described herein or any of their components may be implemented as one or more network based services. For example a compute cluster within a computing service may present computing services and or other types of services that employ the distributed computing systems described herein to clients as network based services. In some embodiments a network based service may be implemented by a software and or hardware system designed to support interoperable machine to machine interaction over a network. A network based service may have an interface described in a machine processable format such as the Web Services Description Language WSDL . Other systems may interact with the network based service in a manner prescribed by the description of the network based service s interface. For example the network based service may define various operations that other systems may invoke and may define a particular application programming interface API to which other systems may be expected to conform when requesting the various operations. though

In various embodiments a network based service may be requested or invoked through the use of a message that includes parameters and or data associated with the network based services request. Such a message may be formatted according to a particular markup language such as Extensible Markup Language XML and or may be encapsulated using a protocol such as Simple Object Access Protocol SOAP . To perform a network based services request a network based services client may assemble a message including the request and convey the message to an addressable endpoint e.g. a Uniform Resource Locator URL corresponding to the network based service using an Internet based application layer transfer protocol such as Hypertext Transfer Protocol HTTP .

In some embodiments network based services may be implemented using Representational State Transfer RESTful techniques rather than message based techniques. For example a network based service implemented according to a RESTful technique may be invoked through parameters included within an HTTP method such as PUT GET or DELETE rather than encapsulated within a SOAP message.

Although the embodiments above have been described in considerable detail numerous variations and modifications may be made as would become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such modifications and changes and accordingly the above description to be regarded in an illustrative rather than a restrictive sense.

