---

title: Metadata based platform for accessing and managing multiple heterogeneous information services
abstract: A request is received for a service provider to perform an action associated with a canonical feature. Metadata associated with the service provider is used to interact with the service provider in a way that causes the service provider to perform the action.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08965991&OS=08965991&RS=08965991
owner: Okta, Inc.
number: 08965991
owner_city: San Francisco
owner_country: US
publication_date: 20140205
---
This application is a continuation of U.S. application Ser. No. 12 870 370 filed Aug. 27 2010 which is incorporated by reference herein in its entirety.

Service providers e.g. third party service providers create and provide a number of useful services. In some cases the service is provided over the web or Internet and is used by one or more employees of a company. These services may be used by an employee to perform a job responsibility e.g. members of a software team use a web based code revision application to check in code updates and track bugs an accounting team uploads information to the website of their external auditing company so that an audit can be performed etc. or the services may be available to all employees of a company such as services related to employee benefits e.g. an employee uses a web based payroll service to change the number of deductions uses a web based brokerage service to access an employee stock purchase plan or incentive stock options etc. .

While these services are useful the task of managing these services e.g. by a system administrator and accessing them e.g. by an employee can be inconvenient since these services are provided by many different companies and the interfaces and or capabilities vary from service provider to service provider. It would be desirable if these systems could be managed in a way that made managing the services easier for system administrators and or made accessing and using the services easier for non system administrators.

The invention can be implemented in numerous ways including as a process an apparatus a system a composition of matter a computer program product embodied on a computer readable storage medium and or a processor such as a processor configured to execute instructions stored on and or provided by a memory coupled to the processor. In this specification these implementations or any other form that the invention may take may be referred to as techniques. In general the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein the term processor refers to one or more devices circuits and or processing cores configured to process data such as computer program instructions.

A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.

Using metadata to manage a plurality of services associated with a plurality of service providers is described. A request is received for a service provider to perform an action associated with a canonical feature. For example the service provider may be associated with a calendar or scheduling application and the canonical features relates to logging on specifically from a signal point of access e.g. sign on once for all service providers from a single interface . Metadata associated with the service provider is used to interact with the service provider in a way that causes the service provider to perform the action. For example a processor may access metadata associated with or relating to the service provider and the metadata may instruct or inform the processor how to interact with the service provider. In some embodiments some functionality is called or executed with appropriate settings e.g. specific to a user a service provider and or a company this functionality may be included in the metadata or may be external to the metadata.

Payroll service provider provides one or more services related to payroll management and all employees of MyCompany have at least some access to its services. Some examples of payroll service providers include ADP and Intuit and some examples of payroll related services including changing a number of tax deductions changing a routing number and account number for automatic deposit etc.

Sales marketing service provider provides one or more services to support sales and or marketing professionals. Some examples of a sales marketing service provider include Constant Contact which provides email marketing services and salesforce.com which provides services related to sales and collaborations tracking As marketing professionals director of marketing and marketing employee have access to and use services provided by sales marketing service provider . Engineer is not a sales or marking professional and therefore in this example does not have access to services provided by sales marketing service provider e.g. she does not have a user account at sales marketing service provider . System administrator in some embodiments has access to sales marketing service provider for example to resolve any technical issues so that employees and can perform their sales or marketing job responsibilities.

Code repository service provider provides one or more services related to code management. For example a software product or semiconductor product may comprise a plurality of modules or functions developed by a team of engineers and code repository service provider provides one or more services associated with for example checking out a module function checking in a new version of a module function tracking versions of code or when features are added e.g. in a comments section tracking the detection and resolution of bugs etc. Some examples of code repository service providers include Bugzilla and Codesion. In this example engineer has access to code repository service provider but employees and do not since they are not engineers. In some embodiments system administrator has access to code repository service provider in order to support engineer .

In some embodiments services provided by one or more of service providers are web based services. In such embodiments the services can for example be accessed using Internet protocols and or by accessing a certain website or URL. In some embodiments one or more of service providers include a web server for communicating with services management server via network .

Services management server communicates with service providers on behalf of one or more of employees to provide one or more canonical features to employees . In some embodiments services management server is a service provider because in addition to managing access to service providers services management server provides its own set of services to one or more of employees . A canonical feature as used herein is an operation or action for which a uniform or consistent interaction or experience is attempted to be provided to an end user across multiple service providers. In some embodiments a service management server or other mediating node is configured to interact with services providers to make one or more canonical features available to end users across services including by interacting with service providers in a manner required to cause the service provider to perform actions necessary to provide such canonical features for example as when invoked by end users. This uniform or consistent experience by the user is where possible independent of the underlying set of services provided by a particular service provider and or the manner or sequence with which interactions with a particular service provider are performed. One example of a canonical feature is to have a central point of user account creation. Services management server attempts to provide an interface in which a system administrator is able to create user accounts e.g. for a new employee for all service providers e.g. relevant for that new employee from a central or single point which is independent of the underlying account creation steps or interfaces exposed by or used by the relevant service providers. The creation of a user account at each of services is presented to or experienced by system administrator in the same way independent of how each of services are interacted with e.g. in the background to create a new user. This is in contrast to having to go to different locations e.g. different websites of the service providers and having different interactions with the services in order to create a user account. This makes the job of system administrator in easier since he can create user accounts for a new employee for any of services from a single interface or point rather than accessing each service provider individually and entering the same user information repeatedly.

In some embodiments a canonical feature relates to or is associated with a user account. Some examples include changing user account permissions or settings changing a group comprising of one or more user accounts viewing activity for a user account etc. In some embodiments a canonical feature is related to security or authorization. For example a company may want to have employees set passwords that include a capital letter a number and a special character this policy is enforced as part of a canonical feature independent of any individual requirements services might have in some embodiments. In some embodiments a canonical feature is defined by or is in the context of a particular company. Put another way canonical features for one company may differ from that of another company e.g. using services of the same service provider in some embodiments.

Services management server communicates with payroll service provider sales marketing service provider and code repository service provider as needed to provide canonical features some examples of which are described in further detail below. This includes services management server performing any prerequisites translation mediation and or proxying associated with service providers as needed. Without services management server users may have to access each service provider directly e.g. the website of each service provider and may not have a central interface or point of access from which all services can be accessed.

In various embodiments a variety of communication devices and or protocols are employed to manage services as described herein. In some embodiments users use an Internet browser application e.g. Microsoft Internet Explorer or Mozilla Firefox running on a variety of devices e.g. on a computer or a smart phone such as an Apple iPhone or a Motorola Droid to access a web server associated with services management server . The web server associated with services management server in turn communicates with service providers and relays information between the end users and service providers . In some embodiments users use a special purpose application running on a smart phone e.g. an app running on an iPhone to access canonical features associated with service providers via services management server .

The first example canonical feature shown in is a central point of user account creation. This canonical feature enables a system administrator to create from a single or central interface new user accounts for those services that are appropriate for that particular employee e.g. when a new employee is hired or an employee s needs have changed . In contrast other systems may require a system administrator to go to each service provider s website and re enter the same user information over and over at each service provider. Payroll service provider in does not support this canonical feature but sales marketing service provider in and code repository service provider in do using proprietary application programming interfaces APIs respectively. For example the code repository service provider may have implemented its own API and although other devices or entities are able to interface to it it is relatively unique API. As used herein an unsupported canonical feature means that that service provider does not expose or provide any interface or functionality with which a services management server can interface or communicate with for that canonical feature. In some embodiments a service provider which expects human users to go directly to a service provider s website and manually enter information for a canonical feature is one that does not support that canonical feature.

The second canonical feature shown in this example is single portal access to services. This allows a user e.g. either a system administrator or a non system administrator to view and access all the services for which they have user accounts or access from a single portal or interface for example after signing on only once. This is convenient for the user since she does not need to remember a different URL or portal for each service and local usernames and passwords. The user can also quickly and easily see what services she has access to. In table the payroll service provider supports this canonical feature using a proprietary API the sales marketing service provider supports this canonical feature using SAML Security Assertion Markup Language and the code repository service provider supports it with a propriety API. In some embodiments the API associated with the payroll service provider and the API associated with the code repository service provider are different proprietary APIs.

The third example canonical feature is one button user account deactivation. For example when an employee leaves a company a system administrator is able to deactivate all user accounts for all services for which that employee has an account from a single point using a single interaction. As used herein deactivation disables a user s ability to access an account service or services thereof. In some embodiments deactivation is performed by deleting a user account. In some other embodiments the user account or user information still exists but the user is no longer able to access services. One button user account deactivation is more convenient than for example figuring out which services an employee has an account with going to each of those service providers e.g. their website and deactivating or deleting the account locally and or individually at each service provider. The sales marketing service provider supports this canonical feature with a proprietary API the code repository service provider supports this with a propriety API and the payroll service provider does not support this canonical feature.

In some embodiments information functions actions or services that are specific to a particular service or service provider are outside of the domain of canonical features. Put another way a services management server may not necessarily interfere with service specific data. For example the second exemplary canonical feature described above is a single portal access to services. In some embodiments once the user selects one of the service providers from a single point of access e.g. from a list or graphical interface showing all relevant service providers for that user a services management server will not perform translation or mediation for subsequent service specific actions and or information exchanged between the payroll service provider and a user e.g. one of employees in . For example changing the number of payroll deductions is service specific and is outside of the scope of a canonical feature a services management server would not necessarily perform any translation or mediation related to changing the number of payroll deductions since the need for a uniform and or consistent experience does not apply.

The following figures show some example user interfaces that one or more of employees in may be presented with when interacting with services provided by one or more of service providers . Some of the user interfaces described below relate to the example canonical features shown in .

In a user e.g. a system administrator selects one of five applications to be assigned to the user and in response to the selection a new user account is created with the appropriate service provider not shown . In some embodiments multiple applications are able to be assigned to a user account simultaneously if desired e.g. more than one radio button in can be selected . The specific interfaces required fields and or underlying processing associated with creating a new user account at each of the service providers i.e. WebEx Workday GoTo Meeting SuccessFactors and Ring Central may vary from service provider to service provider and a services management server e.g. in communicates with each service provider as needed on behalf of the user e.g. system administrator in to create a user account if so requested. This enables a system administrator or other user to perform a certain action in this case create a user account in a uniform and or consistent manner independent of the service provider and any underlying processing or interfaces. A service provider can change from one interface or underlying process to another without a user e.g. a system administrator being aware of it and or having to interact directly with the new interface or underlying process.

In some embodiments a services management server has accessed information associated with John Smith e.g. prior to generating and displaying interface and the applications or services presented in are selected based on John Smith s job requirements as described in the retrieved information.

In some embodiments in order to get to interface a user goes to a website or portal associated with a services management service e.g. www.okta.com . In some embodiments a user goes to a website or portal associated with or accessible from a company s website or intranet e.g. www.mycompany.com in order to access interface .

In some embodiments the services for which a user e.g. Ramon Jones has access to may be dictated by that employee s job functionality or job requirements. For example beneath Salesforce icon is displayed Sales and Marketing. In some embodiments all sales and marketing professionals have access to at least some Salesforce services. In some cases a service is made available to all employees. For example Google Calendar may be made available to all employees. In some embodiments prior to generating and presenting interface a services management server accesses stored information associated with Ramon Jones determines what services Ramon has access to and presents icons associated with those services to Ramon in interface .

In some embodiments administration icon is presented in user interface to a system administrator. For example by clicking on icon interfaces and from may be accessible. In some embodiments administration icon is presented to a non system administrator. Some examples of administration services available to non system administrators accessed by clicking on administration icon include but are not limited to requesting access to additional services for which the user already has a user account but for which some services are currently limited or restricted requesting creation of a new user account at a desired service provider e.g. which a system administrator will review and respond to changing a password required to access user interface etc.

In some embodiments the services accessible to a particular user may depend on a position or rank within the company e.g. defined by inclusion in a group called Managers or Executives . For example managers or executives may have access to some service providers or some services for a given service provider that non managers and non executives may not. In one example an employee training service provider provides online training for all employees of a company. However managers have to do additional training which non managers are not required to complete. In that example two employees both have access to the same service provider e.g. they would both see an icon for the training service provider in user interface but the specific services that are accessible would vary e.g. after clicking on the icon for the training service provider in user interface . In another example an employee has access to a particular service provider based on their position within a company. For example a company may provide a car service for executives but does not offer this benefit to non executives. Access to a reservation system associated with the car service may be restricted to executives in that example and executives would see an icon for a car service in user interface whereas non executives would not.

Metadata as used herein is any information or data describing or associated with a service provider. The metadata may include information associated with canonical feature e.g. whether a canonical feature is supported by a service provider and or may include information associated with an action e.g. an underlying action used by a particular service provider to support a particular canonical service . In some embodiments metadata includes information from the left column of table in metadata includes information from the middle column of table and metadata includes information from the right column of table . In some embodiments metadata includes software code code snippets executable instructions processes or other functionality for communicating with or interacting with a service provider to perform one or more tasks in order to accomplish a desired canonical service. In some embodiments metadata indicates or describes what function or process to execute or call. In some embodiments metadata includes what settings or values to provide or populate a function or process with. Some specific examples of metadata are described in further detail below.

Mediation engine uses the appropriate metadata associated with a service provider to interact with a service provider in order to perform a requested action. For example. If a user requests an action associated with the payroll service provider then mediation engine accesses metadata associated with the payroll service provider and interacts via a network with payroll service provider in as prescribed by metadata .

In some embodiments mediation engine includes information associated with one or more employees. For example mediation engine may store user names and passwords for each of plurality of service providers an employee has. Referring back to for example mediation engine may store user names and passwords for the services that employee has access to user names and passwords for the services employee has access to etc. In some embodiments mediation engine includes information associated with a company e.g. MyCompany in . There may be a plurality of end user companies and each end user company may have a different set of requirements or canonical features.

In some embodiments mediation engine includes one or more translators or mediators functions executables or processes for communicating with a service provider in order to support a canonical service. In some embodiments metadata e.g. or indicates which such process located in mediation engine to use and mediation engine performs or runs the indicated process. For example returning back to there may be a process included in mediation engine configured to communicate with or interact with a proprietary API in order to provide support for a central point of user account creation top row right column in table in and there may be another process within mediation engine configured to interact with a SAML type interface middle row middle column in table . In some embodiments formats variables fields settings or values e.g. input or passed to an executed process are obtained from metadata and passed to the appropriate process within mediation engine .

Using a metadata based platform as described herein to manage multiple service providers provides a number of advantages. For example from the point of view of end users such as employees in using a metadata based platform enables those end users to have a uniform experience with respect to all service providers regardless of how each service provider implements or supports a particular canonical feature. For example with respect to single sign on in by describing in metadata how each service provider implements or supports that canonical feature permits a user to have the same experience for the payroll service provider the sales marketing service provider and the code repository service provider even though two of them use a proprietary API and one uses a SAML type interface. They can for example access those applications without knowing the underlying mechanism is different e.g. proprietary API vs. SAML . The user experience is also consistent and seamless as service providers upgrade or otherwise change how they support a particular canonical feature. A change from a proprietary API to a SAML type interface for example by the service provider would not be noticed or perceived by an end user since the user experience would be the same both before and after the change.

Some advantages of using a metadata based platform as described herein become apparent in a dynamic environment where service providers are making improvements and changes to their systems on a fairly regular basis. Using metadata to describe how to interact with a particular service provider enables code or functionality to be reused for upgrades to be supported seamlessly and for the code or functionality used to interact with service providers to be decoupled from the metadata e.g. describing how to interact those service providers . In one example a service provider upgrades its systems at midnight on a certain day. If that service provider or a services management server which knows about the upgrade in advance changes the associated metadata at midnight to reflect the system changes then end users such as employees in will not notice any disruption of service. Another advantage is the reuse of code or other functionality. For example if the upgraded system requires a similar interaction as a second service provider then code or functionality created to interact with the second service provider can be reused and no new code or functionality needs to be written. Another advantage is the ability to separate if desired the information describing how to interface with a particular service provider for a particular canonical feature or action with the various functionality or code used for interacting with various service providers for various tasks. For example this may enable a limited group of people to manage and update the processes or code used to interact but permits the metadata excluding any code snippets or functionality for interacting to be updated by a larger group of people. This may be desirable since having too many people being able to edit code may increase the likelihood of a bug or a crash but having many people update the metadata again excluding any code snippets or functionality for interacting may distribute the responsibility of tracking and managing upgrades at the various service providers amongst a larger group of people thus enabling changes to be detected and reflected in metadata faster.

At metadata associated with the service provider is used to interact with the service provider in a way that causes the service provider to perform the action. For example if the request is associated with Salesforce then mediation engine may use metadata in to interact with sales marketing service provider in . In some embodiments metadata includes a code snippet for communicating with a service provider to perform the requested action. In some embodiments metadata indicates what process or functionality to use and that process or functionality is located external to the metadata.

At a service provider and a canonical feature are identified from a received request. For example if the request is triggered by selecting the radio button for WebEx in window in then the service provider is WebEx and the canonical feature is associated with a central point of user account creation. Metadata associated with the identified service provider is accessed at . To continue the previous example metadata associated with WebEx is retrieved e.g. from the services management server if stored there . The identified service provider is interacted with as prescribed by metadata for the indentified canonical feature at . In some embodiments metadata includes a code snippet for this purpose.

At it is determined from an accessed portion of metadata what functionality to use in interacting with a service provider and what service provider company and or user specific settings to use if any . A service provider is interacted with by performing the functionality using the service provider company and or user specific settings if any at . In some embodiments a code snippet executable or other functionality is included in the metadata itself. In some embodiments the accessed portion of metadata indicates what function or process to call and the executed function or process interacts with the service provider. For example referring back to metadata for the sales marketing service provider center column indicates that a SAML interaction function should be used and metadata for the code repository service provider right column indicates that a proprietary API interaction function should be used.

If needed the functionality is provided or pre populated with settings for example that are associated with the service provider e.g. payroll service provider in the company e.g. MyCompany and or the employee e.g. director of marketing in . Some examples of settings include locations or URL s e.g. with which the process or function interacts or communicates with credentials e.g. user names or passwords . In some embodiments these settings are obtained from metadata e.g. if the setting is associated with a particular service provider and or from storage e.g. if the setting is associated with a particular employee or company .

Metadata is associated with sales marketing service provider and is generated by and stored at MyCompany server . Server is sometimes referred to as an end user server. In one example employees at MyCompany want to use services of sales marketing service provider in the environment described herein and generated metadata in order to achieve this.

Metadata is associated with generated by and stored at code repository service provider . Code repository service provider may have generated metadata to enable its customers e.g. MyCompany to be able to use the services of code repository service provider.

In the metadata shows the version number i.e. 3 and the location at which the metadata is stored i.e. http www.okta.com schema metadata upgrade . In this particular example the metadata is stored at a services management server e.g. in .

In the metadata is shown with an add application section expanded. Section includes general information associated with the service provider including the URL of the website a name to display and a description of the service provider. Section also includes a links section and an ssoProtocols section which are described in further detail below.

In links section and ssoProtocols section are shown in expanded detail. In this and other subsequent examples a links section includes metadata related to a graphical user interface in which a plurality of service providers is displayed. For example the information included in links section is used to generate and display pivotal icon in . ssoProtocols section is associated with single sign on and the mode value of exclusive indicates that that service provider only supports one single sign on technique or interaction. In some embodiments a service provider supports two or more single sign on techniques e.g. both SAML and an OpenID API and the value of mode would be set to nonexclusive.

As described above this particular service provider does not support canonical features. To make interaction with this service provider as convenient as possible ssoProtocols section securely stores the user name and user password so that a user e.g. any of employees in do not have to remember and or enter it in. Section in the metadata enables a processor e.g. mediation engine in to know where to log on e.g. https www.pivotaltracker.com signin a manner in which to exchange information e.g. post what fields exist e.g. user name and password what values to populate the fields with. In some embodiments this process of going to a log on URL populating fields at that URL and posting i.e. returning or entering those populated values is triggered when a user clicks on an icon from a single point of access e.g. clicks on icon in .

In some embodiments some sections of the metadata shown herein are re used in other metadata if the service provider corresponding to that metadata has a similar interface. For example suppose Saleforce in similarly did not support a SAML sign on. In some embodiments metadata for Salesforce would include a secure password store section but the number of fields the field names and or the field values may differ as appropriate from the example shown in .

In a version number and location at which the metadata is stored are shown. In metadata relating to the website display name description and sort order are shown in add applications section . In some embodiments the value of the sort order is used to determine what order to display items in e.g. the order in which to display icons in .

Supported features section is shown in expanded detail in . In this example five canonical features are supported by Google importing new users e.g. from Google into a services management server importing profile updates e.g. for an existing user from Google into a services management server pushing new users e.g. from a services management server to Google pushing profile updates e.g. changing first last names permissions job titles etc. from a services management server to Google and pushing password updates e.g. to reset a password to set a new password that meets new password requirements such as when a company goes from only have requirements regarding password length to one that further requires a capital letter special character or number .

Message is associated with user lock out a canonical feature associated with user management. In this particular example user lock out is not supported and message is a warning message that a user is still able to directly access services even if a user s account is deactivated at the services management server. In some embodiments message is a rollover message presented when a mouse pointer is positioned over the text user lock out in display .

In some embodiments integration summary is generated using metadata associated with a service provider of interest. For example metadata associated with a service provider may be parsed to determine what canonical features if any are supported by a service provider of interest. The supported column in display is then populated with a Yes or a No depending upon the metadata for that particular canonical feature.

In some embodiments an integration summary is generated and displayed for multiple service providers so that the viewer can see how two or more service providers possibly competitors compare in their integration. For example such a display may be presented to a service provider to encourage them to support the various canonical features. A service provider may be encouraged to further support canonical features if a competitor does but they do not. In some embodiments a display is presented to a system administrator or other representative of an end user company e.g. MyCompany to demonstrate for one or more desired service providers whether canonical features are supported e.g. if MyCompany is evaluating whether to acquire the services of services management server in .

In some embodiments interacting with interface causes metadata associated with a service provider or saved information e.g. associated with a one or more employees of a company to be updated or otherwise changed. For example editing the logo and or label for Salesforce using interface may cause metadata in links section in to change. In another example a user is locked out and the system administrator resets that user s password. This resetting of the password or other change is a setting privilege or status of a user may be reflected in stored information associated with that user.

In some embodiments there is an interface e.g. similar to that shown in presented to and used by an administrator at a service provider. For example a system administrator at an end user company e.g. in may generate a request or message to be sent to a particular service provider e.g. 100 . The request may be a request for support e.g. letting them know the service is down or a link is broken a request for new features or services or a request to migrate or elevate up a support level of one or more canonical features e.g. a request may be sent to the payroll service provider in to support a central point of user account creation and or one button user account deactivation or to code repository service provider to move from a proprietary API to an industry standard such as SAML . In particular a request to upgrade or migrate support may be more compelling coming from an end user company than a similar request from a services management service and may encourage service providers to provide support where none existed before to move to a more commonly used industry standard from a proprietary interface. In some embodiments a communication or message is sent from a services management server to an administrator or other user at a service provider. In one example if a service provider goes down a message is sent to all customers of the service management server. These exemplary communications and their responses if any may be accessed and managed via an interface similar to that shown in . Other features such as generating reports and managing information associated with user accounts company level account information etc. may also be accessed via such an interface.

The following figures show some embodiments of user interfaces and metadata associated with single sign on performed using a secure password store or performed using a browser plugin e.g. into Mozilla Firefox or Microsoft Internet Explorer . In a secure password store technique login information e.g. some examples of which are shown in the metadata examples above is stored securely and is posted and provided to the service provider so that the user is logged in without the user having to intervene. In some cases a service provider is implemented using Java script and or stored cookies and a secure password store technique is not be able login the user. In some embodiments a browser plugin is used to perform single sign on in such cases. First some metadata embodiments are shown and then some user interfaces associated with a browser plugin are shown.

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive.

