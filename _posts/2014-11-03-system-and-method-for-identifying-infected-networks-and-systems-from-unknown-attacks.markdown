---

title: System and method for identifying infected networks and systems from unknown attacks
abstract: Systems and method of the present disclosure are directed to a network security monitor. The monitor can receive logs of a second computer network indicative of a status of the second computer network determined by a monitoring agent executing on the second computer network. The monitor can generate indexed logs from the logs based on log format. The monitor can retrieving a list of threat indicators from a database based on a schema from a plurality of threat indicators received from a plurality of heterogeneous repositories via the first computer network. The monitor can compare the list of threat indicators with the indexed logs. The monitor can generate a report based on the comparing to identify a threat.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09392007&OS=09392007&RS=09392007
owner: Crypteia Networks S.A.
number: 09392007
owner_city: Athens
owner_country: GR
publication_date: 20141103
---
This application claims the benefit of priority under 35 U.S.C. 119 of U.S. Provisional Patent Application No. 61 899 373 filed Nov. 4 2013 which is incorporated by reference herein in its entirety.

This disclosure generally relates to systems and methods for a network security tool that identifies infected network infrastructure.

Computer networks or systems may have vulnerabilities that can be exploited by an attack or a threat. An exploited vulnerability can adversely affect the operation of the computer network such as by slowing down the flow of data over the computer network or preventing access to resources of the computer system.

The present disclosure relates generally to network security measures such as intrusion detection systems and intrusion prevention systems IDS IPS . In some embodiments a network security tool identifies networks and systems that are infected via a previously unknown attack. The network security tool can receive log information from a protected network and threat indicator information from large information networks or third party information networks such as those maintained by various entities standards organizations or corporations. The network security monitor can index the logs and the threat indicator lists using a schema and then determine whether or not the network has been compromised by a threat such as an advanced persistent threat APTs that persists within networks for extended durations e.g. several weeks several months hundreds of days etc. to gather and manipulate data of the network.

Corporations companies organizations and private groups utilize computer networks to communicate store information and execute transactions or schedule services. Although computer networks can be created such that they are isolated most often computer networks are created such that they are linked to the internet and thereby can utilize the internet to send information to more remote locations in the network. For example a company utilizing a private network which is hosted on the internet can connect various different company locations all together into one network so that information such as a word document can be transmitted very quickly between locations which may be separated by fairly large geographical distances. Additionally networks may be set up such that outside parties can interact with the network over the internet as is the case in electronic commerce one of the most common and widespread business practices taking place on the internet. In some situations it is also advantageous to allow external access such that a verified company employee or network member may access information stored on the network even when they are not at a company owned location. By enabling outside interaction with the network these advantages including but not limited to remote access and electronic commerce are enabled.

However enabling outside access to a network also carries several disadvantages including attacks from external sources attempting to damage the network or steal information from the network. Stealing information from a network can be particularly damaging to the owners of that network especially if the information that was stolen is confidential or proprietary information like passwords lists or design plans. The stolen information can sometimes be used to carry out further malicious activities including but not limited to identity theft further information theft and asset theft. Such malicious activities can be costly for victims and as a result it is important that the chances of a network security breach be minimized.

In response to the threats against networks networks can include and maintain some form of network security such as firewalls intrusion detection systems intrusion prevention systems and intrusion detection and prevention systems. Firewalls are in path security measures which are intended to control the flow of information into a network. This is accomplished by examining the incoming data packets and comparing them to a set of rules. Any offending packets usually assumed to be malicious are dropped by the firewall thereby protecting the network that is behind the firewall. Firewalls monitor traffic which is incoming into the network and are capable of dropping data packets which may be malicious. Thus the firewall may be capable of defending the network from a variety of external threats.

An intrusion detection system detects malicious attacks and then raises an alarm such that an authorized system administrator is notified of the attack and can take the appropriate actions to stymie it. An intrusion prevention system works to identify potential attacks and then automatically takes the appropriate action to disrupt or cease the attack. An intrusion prevention system may or may not notify system administrators when an attack is detected and thwarted by the system. An intrusion detection and prevention system IDPS combines these two functionalities detecting potential attacks and both alerting system administrators and automatically moving to impede the attack. The IDPS may or may not notify system administrators if it is successful in stopping the attack or may notify a system administrator if it fails to sufficiently stop the attack and other actions may need to be taken.

One type of threat to a secured network is known as Advanced Persistent Threat APT . Advanced persistent threats are a serious concern for information holders for a number of different reasons. As opposed to a virus or brute force attack which infiltrate networks and cause large amounts of damage in addition to stealing information APTs may remain undetected while in the network. When infiltrating a network an APT silently gathers information while spreading its influence throughout the network such that it can gain even greater access to protected information found on the network. In some cases an APT can remain in a network for hundreds of days e.g. 100 to 400 days or more collecting and disseminating information during that time without being detected or noticed. APTs may be directed to high value targets which allow them to steal valuable data. This stolen data can be used by malicious entities to further their own agendas. In an illustrative example the APT lifecycle includes four general stages including preparation infection deployment and maintenance. The persistent and recurring nature of APTs makes them a destructive and costly threat to deal with for large organizations who maintain extensive information networks. Some examples of organizations that may fall prey to APTs include but are not limited to the military defense contractors state organizations and energy companies.

Systems and methods of the present disclosure serve to detect and alert network administrators of the presence of an APT such that administrators may take the appropriate action to remove the APT and repair damage caused by the APT. A network security monitor of the present disclosure can identify networks and systems infected with attacks known or unknown . The network security monitor can detect multiple types of APTs that are present in the network prior to the network security monitor being initiated or APTs that may attempt to infiltrate the network after the integration of the network security monitor.

In some embodiments the network security monitor is directed to detection of APTs. The network security monitor can utilize lists of malware exploits untrustworthy IP addresses IPS signatures and IDS signatures to detect threats. These lists can be updated based on a time interval periodically in real time dynamically continuously etc. . In some embodiments the network security monitor may update the lists via crowd sourcing. For example crowd sourcing may refer to members of the online community contribute to one or more lists of malware exploits untrustworthy IP addresses IPS signatures and IDS signatures. The network security monitor may receive retrieve parse or otherwise obtain the one or more lists updated via crowd sourcing thereby improving network security monitor s coverage of APTs. The network security monitor may use in some embodiments techniques related to Knowledge Management Semantics Big Data technology and analytics to facilitate updating the list.

At least one aspect of the present disclosure is directed to a method of managing security on network infrastructure. In some embodiments the method includes a log collector receiving a plurality of logs of a second computer network. The log collector is configured on a processor of a network security monitor to receive the plurality of logs via a first computer network. The plurality of logs are indicative of a status of the second computer network and the status can be determined by a monitoring agent executing on the second computer network. The method can include a log indexer generating indexed logs from the plurality of logs based on log format. The log indexer can also be configured on the network security monitor. The method can include the network security monitor retrieving a list of threat indicators from a database. The data base can store the list of threat indictors using a schema. The list of threat indicators can be based on a plurality of threat indicators received from a plurality of heterogeneous repositories via the first computer network. The method can include a log correlation engine configured on the network security monitor comparing the list of threat indicators with the indexed logs. The method can include a report engine configured on the network security monitor generating a report based on the comparing to identify a threat.

In some embodiments the method may include an aggregator receiving one or more threat indicators from a plurality of heterogeneous sources via the first computer network. The method can include a normalizer using the schema to transform the one or more threat indicators to the list of threat indicators. This list of threat indicators can include structured information configured for use by the correlation engine.

In some embodiments the method may include an aggregator of the network security monitor obtaining a first configuration for accessing a first repository via the first computer network. The method may include the aggregator obtaining a second configuration for accessing a second repository via the first computer network. The method may include the aggregator using the first configuration to establish a first connection with the first repository via the first computer network. The method may include the aggregator using the second configuration to establish a second connection with the second repository via the first computer network. The method may include the network security monitor updating based on the schema the list of threat indicators based on one or more threat indicators received from at least one of the first repository or the second repository.

In some embodiments the method may include the network security monitor receiving via the first computer network a first threat indicator from a first repository in a first format. The method may include the network security monitor receiving via the first computer network a second threat indicator from a second repository in a second format. The first repository may be different from the second repository and the first format may be different from the second format. The method may include the network security monitor transforming the first threat indicator and the second threat indicator to the list of threat indicators based on the schema.

In some embodiments the method may include the network security monitor initiating the comparing by the log correlation engine response to receiving at least one of an update to the list of threat indicators or a new log of the second computer network.

In some embodiments the method may include the log correlation engine searching for a correlation between the indexed logs of the second computer network. The method may include the log correlation engine identifying a match based on the correlation between the indexed logs and the list of threat indicators.

In some embodiments the method may include the log correlation engine identifying a portion of the plurality of logs as corresponding to a first type of the log format. The method may include the log correlation engine identifying one or more threat indicators of the list of the threat indicators corresponding to the first type. The method may include the log correlation engine comparing the portion of the plurality of logs with the one or more threat indicators to identify a match.

In some embodiments the method includes the log correlation engine comparing historical logs and current logs with the one or more threat indicators to identify a match.

In some embodiments the method includes the log correlation engine initiating instructing or indicating to the report engine to generate the report responsive to identifying a match based on the comparing.

In some embodiments the second computer network is a secure network configured to block unauthorized access. In some embodiments the plurality of logs include a compilation of logs generated by the monitoring agent the monitoring agent including at least one of an antivirus tool a network security element an intrusion prevention system or an intrusion detection system. In some embodiments the plurality of logs include at least one of a general system log a network security log an intrusion prevention system log an intrusion detection system log or an antivirus application log. In some embodiments the log format include at least two of a threat log mapping a traffic log mapping an email log mapping a performance log mapping an AAA log mapping a VPN log mapping or an access control log mapping.

In some embodiments the method includes the network security monitor inputting via an interface the indexed logs in memory configured with a data structure corresponding to the indexed logs. In some embodiments the method includes the network security monitor transmitting the report via the first computer network to an administrator device associated with the second computer network.

Another aspect of the present disclosure is directed to a system for management of security on network infrastructure. In some embodiments the system includes a log collector configured on a processor of a network security monitor. The log collector is configured to receive via a first computer network a plurality of logs of a second computer network. The plurality of logs are indicative of a status of the second computer network determined by a monitoring agent executing on the second computer network. The system includes a log indexer configured on the network security monitor. The log indexer is configured to generate indexed logs from the plurality of logs based on log format. The network security monitor is further configured to retrieve a list of threat indicators from a database based on a schema from a plurality of threat indicators received from a plurality of heterogeneous repositories via the first computer network. The system includes a log correlation engine configured with a heuristic technique to perform a comparison of the list of threat indicators with the indexed logs. The system includes a report engine configured on the network security monitor to generate a report based on the comparison to identify a threat.

In some embodiments the system includes an aggregator and a normalizer. The aggregator may be configured to receive one or more threat indicators from a plurality of heterogeneous sources via the first computer network. The normalizer may be configured to use the schema to transform the one or more threat indicators to the list of threat indicators. The list of threat indicators can include structured information configured for use by the correlation engine.

In some embodiments the system includes an aggregator configured to obtain a first configuration for accessing a first repository via the first computer network. The aggregator can be further configured to obtain a second configuration for accessing a second repository via the first computer network. The aggregator can be further configured to use the first configuration to establish a first connection with the first repository via the first computer network. The aggregator can be further configured to use the second configuration to establish a second connection with the second repository via the first computer network. The network security monitor can be further configured to update based on the schema the list of threat indicators based on one or more threat indicators received from at least one of the first repository or the second repository.

In some embodiments the network security monitor is further configured to receive via the first computer network a first threat indicator from a first repository in a first format. The network security monitor can be further configured to receive via the first computer network a second threat indicator from a second repository in a second format. The first repository can be different from the second repository and the first format can be different from the second format. In some embodiments the network security monitor transforms the first threat indicator and the second threat indicator to the list of threat indicators based on the schema.

In some embodiments the log correlation engine is further configured to identify a portion of the plurality of logs as corresponding to a first type of the log format. The log correlation engine can be further configured to identify one or more threat indicators of the list of the threat indicators corresponding to the first type. The log correlation engine can be further configured to compare the portion of the plurality of logs with the one or more threat indicators to identify a match.

In some embodiments the log correlation engine is further configured to initiate responsive to identifying a match based on the comparing the report engine to generate the report.

For purposes of reading the description of the various embodiments below the following descriptions of the sections of the specification and their respective contents may be helpful 

Section A describes a network environment and computing environment which may be useful for practicing embodiments described herein.

Prior to discussing specific embodiments of the present solution it may be helpful to describe aspects of the operating environment as well as associated system components e.g. hardware elements in connection with the methods and systems described herein. Referring to an embodiment of a network environment is depicted. In brief overview the network environment includes one or more clients also generally referred to as local machine s client s client node s client machine s client computer s client device s endpoint s or endpoint node s in communication with one or more servers also generally referred to as server s node or remote machine s via one or more networks . In some embodiments a client has the capacity to function as both a client node seeking access to resources provided by a server and as a server providing access to hosted resources for other clients 

Although shows a network between the clients and the servers the clients and the servers may be on the same network . In some embodiments there are multiple networks between the clients and the servers . In one of these embodiments a network not shown may be a private network and a network may be a public network. In another of these embodiments a network may be a private network and a network a public network. In still another of these embodiments networks and may both be private networks.

The network may be connected via wired or wireless links. Wired links may include Digital Subscriber Line DSL coaxial cable lines or optical fiber lines. The wireless links may include BLUETOOTH Wi Fi Worldwide Interoperability for Microwave Access WiMAX an infrared channel or satellite band. The wireless links may also include any cellular network standards used to communicate among mobile devices including standards that qualify as 1G 2G 3G or 4G. The network standards may qualify as one or more generation of mobile telecommunication standards by fulfilling a specification or standards such as the specifications maintained by International Telecommunication Union. The 3G standards for example may correspond to the International Mobile Telecommunications 2000 IMT 2000 specification and the 4G standards may correspond to the International Mobile Telecommunications Advanced IMT Advanced specification. Examples of cellular network standards include AMPS GSM GPRS UMTS LTE LTE Advanced Mobile WiMAX and WiMAX Advanced. Cellular network standards may use various channel access methods e.g. FDMA TDMA CDMA or SDMA. In some embodiments different types of data may be transmitted via different links and standards. In other embodiments the same types of data may be transmitted via different links and standards.

The network may be any type and or form of network. The geographical scope of the network may vary widely and the network can be a body area network BAN a personal area network PAN a local area network LAN e.g. Intranet a metropolitan area network MAN a wide area network WAN or the Internet. The topology of the network may be of any form and may include e.g. any of the following point to point bus star ring mesh or tree. The network may be an overlay network which is virtual and sits on top of one or more layers of other networks . The network may be of any such network topology as known to those ordinarily skilled in the art capable of supporting the operations described herein. The network may utilize different techniques and layers or stacks of protocols including e.g. the Ethernet protocol the internet protocol suite TCP IP the ATM Asynchronous Transfer Mode technique the SONET Synchronous Optical Networking protocol or the SDH Synchronous Digital Hierarchy protocol. The TCP IP internet protocol suite may include application layer transport layer internet layer including e.g. IPv6 or the link layer. The network may be a type of a broadcast network a telecommunications network a data communication network or a computer network.

In some embodiments the system may include multiple logically grouped servers . In one of these embodiments the logical group of servers may be referred to as a server farm or a machine farm . In another of these embodiments the servers may be geographically dispersed. In other embodiments a machine farm may be administered as a single entity. In still other embodiments the machine farm includes a plurality of machine farms . The servers within each machine farm can be heterogeneous one or more of the servers or machines can operate according to one type of operating system platform e.g. WINDOWS NT manufactured by Microsoft Corp. of Redmond Wash. while one or more of the other servers can operate on according to another type of operating system platform e.g. Unix Linux or Mac OS X .

In one embodiment servers in the machine farm may be stored in high density rack systems along with associated storage systems and located in an enterprise data center. In this embodiment consolidating the servers in this way may improve system manageability data security the physical security of the system and system performance by locating servers and high performance storage systems on localized high performance networks. Centralizing the servers and storage systems and coupling them with advanced system management tools allows more efficient use of server resources.

The servers of each machine farm do not need to be physically proximate to another server in the same machine farm . Thus the group of servers logically grouped as a machine farm may be interconnected using a wide area network WAN connection or a metropolitan area network MAN connection. For example a machine farm may include servers physically located in different continents or different regions of a continent country state city campus or room. Data transmission speeds between servers in the machine farm can be increased if the servers are connected using a local area network LAN connection or some form of direct connection. Additionally a heterogeneous machine farm may include one or more servers operating according to a type of operating system while one or more other servers execute one or more types of hypervisors rather than operating systems. In these embodiments hypervisors may be used to emulate virtual hardware partition physical hardware virtualize physical hardware and execute virtual machines that provide access to computing environments allowing multiple operating systems to run concurrently on a host computer. Native hypervisors may run directly on the host computer. Hypervisors may include VMware ESX ESXi manufactured by VMWare Inc. of Palo Alto Calif. the Xen hypervisor an open source product whose development is overseen by Citrix Systems Inc. the HYPER V hypervisors provided by Microsoft or others. Hosted hypervisors may run within an operating system on a second software level. Examples of hosted hypervisors may include VMware Workstation and VIRTUALBOX.

Management of the machine farm may be de centralized. For example one or more servers may comprise components subsystems and modules to support one or more management services for the machine farm . In one of these embodiments one or more servers provide functionality for management of dynamic data including techniques for handling failover data replication and increasing the robustness of the machine farm . Each server may communicate with a persistent store and in some embodiments with a dynamic store.

Server may be a file server application server web server proxy server appliance network appliance gateway gateway server virtualization server deployment server SSL VPN server or firewall. In one embodiment the server may be referred to as a remote machine or a node. In another embodiment a plurality of nodes may be in the path between any two communicating servers.

Referring to a cloud computing environment is depicted. A cloud computing environment may provide client with one or more resources provided by a network environment. The cloud computing environment may include one or more clients in communication with the cloud over one or more networks . Clients may include e.g. thick clients thin clients and zero clients. A thick client may provide at least some functionality even when disconnected from the cloud or servers . A thin client or a zero client may depend on the connection to the cloud or server to provide functionality. A zero client may depend on the cloud or other networks or servers to retrieve operating system data for the client device. The cloud may include back end platforms e.g. servers storage server farms or data centers.

The cloud may be public private or hybrid. Public clouds may include public servers that are maintained by third parties to the clients or the owners of the clients. The servers may be located off site in remote geographical locations as disclosed above or otherwise. Public clouds may be connected to the servers over a public network. Private clouds may include private servers that are physically maintained by clients or owners of clients. Private clouds may be connected to the servers over a private network . Hybrid clouds may include both the private and public networks and servers .

The cloud may also include a cloud based delivery e.g. Software as a Service SaaS Platform as a Service PaaS and Infrastructure as a Service IaaS . IaaS may refer to a user renting the use of infrastructure resources that are needed during a specified time period. IaaS providers may offer storage networking servers or virtualization resources from large pools allowing the users to quickly scale up by accessing more resources as needed. Examples of IaaS can include infrastructure and services e.g. EG 32 provided by OVH HOSTING of Montreal Quebec Canada AMAZON WEB SERVICES provided by Amazon.com Inc. of Seattle Wash. RACKSPACE CLOUD provided by Rackspace US Inc. of San Antonio Tex. Google Compute Engine provided by Google Inc. of Mountain View Calif. or RIGHTSCALE provided by RightScale Inc. of Santa Barbara Calif. PaaS providers may offer functionality provided by IaaS including e.g. storage networking servers or virtualization as well as additional resources such as e.g. the operating system middleware or runtime resources. Examples of PaaS include WINDOWS AZURE provided by Microsoft Corporation of Redmond Wash. Google App Engine provided by Google Inc. and HEROKU provided by Heroku Inc. of San Francisco Calif. SaaS providers may offer the resources that PaaS provides including storage networking servers virtualization operating system middleware or runtime resources. In some embodiments SaaS providers may offer additional resources including e.g. data and application resources. Examples of SaaS include GOOGLE APPS provided by Google Inc. SALESFORCE provided by Salesforce.com Inc. of San Francisco Calif. or OFFICE 365 provided by Microsoft Corporation. Examples of SaaS may also include data storage providers e.g. DROPBOX provided by Dropbox Inc. of San Francisco Calif. Microsoft SKYDRIVE provided by Microsoft Corporation Google Drive provided by Google Inc. or Apple ICLOUD provided by Apple Inc. of Cupertino Calif.

Clients may access IaaS resources with one or more IaaS standards including e.g. Amazon Elastic Compute Cloud EC2 Open Cloud Computing Interface OCCI Cloud Infrastructure Management Interface CIMI or OpenStack standards. Some IaaS standards may allow clients access to resources over HTTP and may use Representational State Transfer REST protocol or Simple Object Access Protocol SOAP . Clients may access PaaS resources with different PaaS interfaces. Some PaaS interfaces use HTTP packages standard Java APIs JavaMail API Java Data Objects JDO Java Persistence API JPA Python APIs web integration APIs for different programming languages including e.g. Rack for Ruby WSGI for Python or PSGI for Perl or other APIs that may be built on REST HTTP XML or other protocols. Clients may access SaaS resources through the use of web based user interfaces provided by a web browser e.g. GOOGLE CHROME Microsoft INTERNET EXPLORER or Mozilla Firefox provided by Mozilla Foundation of Mountain View Calif. . Clients may also access SaaS resources through smartphone or tablet applications including e.g. Salesforce Sales Cloud or Google Drive app. Clients may also access SaaS resources through the client operating system including e.g. Windows file system for DROPBOX.

In some embodiments access to IaaS PaaS or SaaS resources may be authenticated. For example a server or authentication server may authenticate a user via security certificates HTTPS or API keys. API keys may include various encryption standards such as e.g. Advanced Encryption Standard AES . Data resources may be sent over Transport Layer Security TLS or Secure Sockets Layer SSL .

The client and server may be deployed as and or executed on any type and form of computing device e.g. a computer network device or appliance capable of communicating on any type and form of network and performing the operations described herein. depict block diagrams of a computing device useful for practicing an embodiment of the client or a server . As shown in each computing device includes a central processing unit and a main memory unit . As shown in a computing device may include a storage device an installation device a network interface an I O controller display devices a keyboard and a pointing device e.g. a mouse. The storage device may include without limitation an operating system software and a software of a network security monitor NSM . As shown in each computing device may also include additional optional elements e.g. a memory port a bridge one or more input output devices generally referred to using reference numeral and a cache memory in communication with the central processing unit .

The central processing unit is any logic circuitry that responds to and processes instructions fetched from the main memory unit . In many embodiments the central processing unit is provided by a microprocessor unit e.g. those manufactured by Intel Corporation of Mountain View Calif. those manufactured by Motorola Corporation of Schaumburg Ill. the ARM processor and TEGRA system on a chip SoC manufactured by Nvidia of Santa Clara Calif. the POWER7 processor those manufactured by International Business Machines of White Plains N.Y. or those manufactured by Advanced Micro Devices of Sunnyvale Calif. The computing device may be based on any of these processors or any other processor capable of operating as described herein. The central processing unit may utilize instruction level parallelism thread level parallelism different levels of cache and multi core processors. A multi core processor may include two or more processing units on a single computing component. Examples of multi core processors include the AMD PHENOM IIX2 INTEL CORE i5 and INTEL CORE i7.

Main memory unit may include one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the microprocessor . Main memory unit may be volatile and faster than storage memory. Main memory units may be Dynamic random access memory DRAM or any variants including static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Single Data Rate Synchronous DRAM SDR SDRAM Double Data Rate SDRAM DDR SDRAM Direct Rambus DRAM DRDRAM or Extreme Data Rate DRAM XDR DRAM . In some embodiments the main memory or the storage may be non volatile e.g. non volatile read access memory NVRAM flash memory non volatile static RAM nvSRAM Ferroelectric RAM FeRAM Magnetoresistive RAM MRAM Phase change memory PRAM conductive bridging RAM CBRAM Silicon Oxide Nitride Oxide Silicon SONOS Resistive RAM RRAM Racetrack Nano RAM NRAM or Millipede memory. The main memory may be based on any of the above described memory chips or any other available memory chips capable of operating as described herein. In the embodiment shown in the processor communicates with main memory via a system bus described in more detail below . depicts an embodiment of a computing device in which the processor communicates directly with main memory via a memory port . For example in the main memory may be DRDRAM.

A wide variety of I O devices may be present in the computing device . Input devices may include keyboards mice trackpads trackballs touchpads touch mice multi touch touchpads and touch mice microphones multi array microphones drawing tablets cameras single lens reflex camera SLR digital SLR DSLR CMOS sensors accelerometers infrared optical sensors pressure sensors magnetometer sensors angular rate sensors depth sensors proximity sensors ambient light sensors gyroscopic sensors or other sensors. Output devices may include video displays graphical displays speakers headphones inkjet printers laser printers and 3D printers.

Devices may include a combination of multiple input or output devices including e.g. Microsoft KINECT Nintendo Wiimote for the WII Nintendo WII U GAMEPAD or Apple IPHONE. Some devices allow gesture recognition inputs through combining some of the inputs and outputs. Some devices provides for facial recognition which may be utilized as an input for different purposes including authentication and other commands. Some devices provides for voice recognition and inputs including e.g. Microsoft KINECT SIRI for IPHONE by Apple Google Now or Google Voice Search.

Additional devices have both input and output capabilities including e.g. haptic feedback devices touchscreen displays or multi touch displays. Touchscreen multi touch displays touchpads touch mice or other touch sensing devices may use different technologies to sense touch including e.g. capacitive surface capacitive projected capacitive touch PCT in cell capacitive resistive infrared waveguide dispersive signal touch DST in cell optical surface acoustic wave SAW bending wave touch BWT or force based sensing technologies. Some multi touch devices may allow two or more contact points with the surface allowing advanced functionality including e.g. pinch spread rotate scroll or other gestures. Some touchscreen devices including e.g. Microsoft PIXELSENSE or Multi Touch Collaboration Wall may have larger surfaces such as on a table top or on a wall and may also interact with other electronic devices. Some I O devices display devices or group of devices may be augment reality devices. The I O devices may be controlled by an I O controller as shown in . The I O controller may control one or more I O devices such as e.g. a keyboard and a pointing device e.g. a mouse or optical pen. Furthermore an I O device may also provide storage and or an installation medium for the computing device . In still other embodiments the computing device may provide USB connections not shown to receive handheld USB storage devices. In further embodiments an I O device may be a bridge between the system bus and an external communication bus e.g. a USB bus a SCSI bus a FireWire bus an Ethernet bus a Gigabit Ethernet bus a Fibre Channel bus or a Thunderbolt bus.

In some embodiments display devices may be connected to I O controller . Display devices may include e.g. liquid crystal displays LCD thin film transistor LCD TFT LCD blue phase LCD electronic papers e ink displays flexile displays light emitting diode displays LED digital light processing DLP displays liquid crystal on silicon LCOS displays organic light emitting diode OLED displays active matrix organic light emitting diode AMOLED displays liquid crystal laser displays time multiplexed optical shutter TMOS displays or 3D displays. Examples of 3D displays may use e.g. stereoscopy polarization filters active shutters or autostereoscopy. Display devices may also be a head mounted display HMD . In some embodiments display devices or the corresponding I O controllers may be controlled through or have hardware support for OPENGL or DIRECTX API or other graphics libraries.

In some embodiments the computing device may include or connect to multiple display devices which each may be of the same or different type and or form. As such any of the I O devices and or the I O controller may include any type and or form of suitable hardware software or combination of hardware and software to support enable or provide for the connection and use of multiple display devices by the computing device . For example the computing device may include any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices . In one embodiment a video adapter may include multiple connectors to interface to multiple display devices . In other embodiments the computing device may include multiple video adapters with each video adapter connected to one or more of the display devices . In some embodiments any portion of the operating system of the computing device may be configured for using multiple displays . In other embodiments one or more of the display devices may be provided by one or more other computing devices or connected to the computing device via the network . In some embodiments software may be designed and constructed to use another computer s display device as a second display device for the computing device . For example in one embodiment an Apple iPad may connect to a computing device and use the display of the device as an additional display screen that may be used as an extended desktop. One ordinarily skilled in the art will recognize and appreciate the various ways and embodiments that a computing device may be configured to have multiple display devices 

Referring again to the computing device may comprise a storage device e.g. one or more hard disk drives or redundant arrays of independent disks for storing an operating system or other related software and for storing application software programs such as any program related to the software for the network security monitor. Examples of storage device include e.g. hard disk drive HDD optical drive including CD drive DVD drive or BLU RAY drive solid state drive SSD USB flash drive or any other device suitable for storing data. Some storage devices may include multiple volatile and non volatile memories including e.g. solid state hybrid drives that combine hard disks with solid state cache. Some storage device may be non volatile mutable or read only. Some storage device may be internal and connect to the computing device via a bus . Some storage device may be external and connect to the computing device via a I O device that provides an external bus. Some storage device may connect to the computing device via the network interface over a network including e.g. the Remote Disk for MACBOOK AIR by Apple. Some client devices may not require a non volatile storage device and may be thin clients or zero clients . Some storage device may also be used as an installation device and may be suitable for installing software and programs. Additionally the operating system and the software can be run from a bootable medium for example a bootable CD e.g. KNOPPIX a bootable CD for GNU Linux that is available as a GNU Linux distribution from knoppix.net.

Client device may also install software or application from an application distribution platform. Examples of application distribution platforms include the App Store for iOS provided by Apple Inc. the Mac App Store provided by Apple Inc. GOOGLE PLAY for Android OS provided by Google Inc. Chrome Webstore for CHROME OS provided by Google Inc. and Amazon Appstore for Android OS and KINDLE FIRE provided by Amazon.com Inc. An application distribution platform may facilitate installation of software on a client device . An application distribution platform may include a repository of applications on a server or a cloud which the clients may access over a network . An application distribution platform may include application developed and provided by various developers. A user of a client device may select purchase and or download an application via the application distribution platform.

Furthermore the computing device may include a network interface to interface to the network through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 Gigabit Ethernet Infiniband broadband connections e.g. ISDN Frame Relay ATM Gigabit Ethernet Ethernet over SONET ADSL VDSL BPON GPON fiber optical including FiOS wireless connections or some combination of any or all of the above. Connections can be established using a variety of communication protocols e.g. TCP IP Ethernet ARCNET SONET SDH Fiber Distributed Data Interface FDDI IEEE 802.11a b g n ac CDMA GSM WiMax and direct asynchronous connections . In one embodiment the computing device communicates with other computing devices via any type and or form of gateway or tunneling protocol e.g. Secure Socket Layer SSL or Transport Layer Security TLS or the Citrix Gateway Protocol manufactured by Citrix Systems Inc. of Ft. Lauderdale Fla. The network interface may comprise a built in network adapter network interface card PCMCIA network card EXPRESSCARD network card card bus network adapter wireless network adapter USB network adapter modem or any other device suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein.

A computing device of the sort depicted in may operate under the control of an operating system which controls scheduling of tasks and access to system resources. The computing device can be running any operating system such as any of the versions of the MICROSOFT WINDOWS operating systems the different releases of the Unix and Linux operating systems any version of the MAC OS for Macintosh computers any embedded operating system any real time operating system any open source operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system capable of running on the computing device and performing the operations described herein. Typical operating systems include but are not limited to WINDOWS 2000 WINDOWS Server 2012 WINDOWS CE WINDOWS Phone WINDOWS XP WINDOWS VISTA and WINDOWS 7 WINDOWS RT and WINDOWS 8 all of which are manufactured by Microsoft Corporation of Redmond Wash. MAC OS and iOS manufactured by Apple Inc. of Cupertino Calif. and Linux a freely available operating system e.g. Linux Mint distribution distro or Ubuntu distributed by Canonical Ltd. of London United Kingdom or Unix or other Unix like derivative operating systems and Android designed by Google of Mountain View Calif. among others. Some operating systems including e.g. the CHROME OS by Google may be used on zero clients or thin clients including e.g. CHROMEBOOKS.

The computer system can be any workstation telephone desktop computer laptop or notebook computer netbook ULTRABOOK tablet server handheld computer mobile telephone smartphone or other portable telecommunications device media playing device a gaming system mobile computing device or any other type and or form of computing telecommunications or media device that is capable of communication. The computer system has sufficient processor power and memory capacity to perform the operations described herein. In some embodiments the computing device may have different processors operating systems and input devices consistent with the device. The Samsung GALAXY smartphones e.g. operate under the control of Android operating system developed by Google Inc. GALAXY smartphones receive input via a touch interface.

In some embodiments the computing device is a gaming system. For example the computer system may comprise a PLAYSTATION 3 or PERSONAL PLAYSTATION PORTABLE PSP or a PLAYSTATION VITA device manufactured by the Sony Corporation of Tokyo Japan a NINTENDO DS NINTENDO 3DS NINTENDO WII or a NINTENDO WII U device manufactured by Nintendo Co. Ltd. of Kyoto Japan an XBOX 360 device manufactured by the Microsoft Corporation of Redmond Wash.

In some embodiments the computing device is a digital audio player such as the Apple IPOD IPOD Touch and IPOD NANO lines of devices manufactured by Apple Computer of Cupertino Calif. Some digital audio players may have other functionality including e.g. a gaming system or any functionality made available by an application from a digital application distribution platform. For example the IPOD Touch may access the Apple App Store. In some embodiments the computing device is a portable media player or digital audio player supporting file formats including but not limited to MP3 WAV M4A AAC WMA Protected AAC RIFF Audible audiobook Apple Lossless audio file formats and .mov .m4v and .mp4 MPEG 4 H.264 MPEG 4 AVC video file formats.

In some embodiments the computing device is a tablet e.g. the IPAD line of devices by Apple GALAXY TAB family of devices by Samsung or KINDLE FIRE by Amazon.com Inc. of Seattle Wash. In other embodiments the computing device is an eBook reader e.g. the KINDLE family of devices by Amazon.com or NOOK family of devices by Barnes Noble Inc. of New York City N.Y.

In some embodiments the communications device includes a combination of devices e.g. a smartphone combined with a digital audio player or portable media player. For example one of these embodiments is a smartphone e.g. the IPHONE family of smartphones manufactured by Apple Inc. a Samsung GALAXY family of smartphones manufactured by Samsung Inc or a Motorola DROID family of smartphones. In yet another embodiment the communications device is a laptop or desktop computer equipped with a web browser and a microphone and speaker system e.g. a telephony headset. In these embodiments the communications devices are web enabled and can receive and initiate phone calls. In some embodiments a laptop or desktop computer is also equipped with a webcam or other video capture device that enables video chat and video call.

In some embodiments the status of one or more machines in the network are monitored generally as part of network management. In one of these embodiments the status of a machine may include an identification of load information e.g. the number of processes on the machine CPU and memory utilization of port information e.g. the number of available communication ports and the port addresses or of session status e.g. the duration and type of processes and whether a process is active or idle . In another of these embodiments this information may be identified by a plurality of metrics and the plurality of metrics can be applied at least in part towards decisions in load distribution network traffic management and network failure recovery as well as any aspects of operations of the present solution described herein. Aspects of the operating environments and components described above will become apparent in the context of the systems and methods disclosed herein.

Systems and method of the present disclosure are directed to identifying networks and systems that are infected with an unknown attack. In an illustrative example a network security monitor of the present disclosure can provide network security by detecting threats known as advanced persistent threats APTs . APTs can remain within networks for an extended duration e.g. several days weeks months or hundreds of days . During this time APTs can damage the network access data retrieve data resulting in large amounts of network damage and information theft.

An illustrative system of the present disclosure interacts with or includes a protected network a network security monitor or APT intelligence platform a database and a communications method. The protected network may represent an information exchange or storage network which is being protected by the network security monitor. The network security monitor can alert network operators of the existence of threats present within the protected network or attempts made by external forces to infiltrate the network. Thus the network security monitor of the present disclosure can protect the protected network by keeping network operators aware of APTs that currently are or historically were attempting to compromise the security of the protected network.

The network security monitor or APT intelligence platform detects APTs which are currently in the network or are currently attempting to infiltrate the network. The network security monitor or APT intelligence platform may include a computing device server one or more processors an application or a specialized computer algorithm which combines or invokes a plurality of different functionalities for the detection of APTs on information networks. The APT intelligence platform may include one or more of the following components a log collector a log indexer a log correlation engine and a report engine. The log collector may receive system logs from the protected network. The APT intelligence platform or network security monitor can analyze system logs which may be generated by the protected network. The system logs may be provided to the APT intelligence platform via a secure network connection.

The network security monitor may include a log indexer that organizes system logs provided to the network security monitor by the protected network. The system logs may include different types of logs generated by the protected including but not limited to general system logs network security logs such as those generated by IPSs and IDSs and logs generated by anti virus applications. These logs are organized by the network security monitor so the organized logs can be compared to extensive lists of threat indicators in order to determine whether or not the protected network is currently infected by an APT. By indexing the logs provided to the network security monitor the system can achieve greater efficiency by comparing logs to the appropriate lists of potential threat indicators thereby reducing the amount of computing resources consumed by the network security monitor during operation.

The network security monitor may include a log correlation engine that takes the logs provided by the protected network and indexed by the log indexer and compares those logs to the lists of threat indicators stored on the database. The log correlation engine can include a specially designed heuristic algorithm configured to simultaneously search through the logs provided by the protected network and compare them to the lists of threat indicators. The log correlation engine may searches for similarities or correlations between the logs of the protected network and the threat indicator lists.

When the log correlation engine identifies a similarity or correlation the log correlation engine instructs or initiates the report engine to generate a report of the threat. This report may be provided to network operators e.g. for display on a display device communicatively coupled to the network security monitor . The report engine is responsible for generating and compiling reports which indicate to the network operators that an APT may be present within their network. The report engine generates the report based on correlations and similarities found by the log correlation engine and illustrates these similarities within the report such that the network operators can determine or identify the nature of the APT potentially be affecting the protected network. The report engine can delivers the report to the network operators via the protected or external network.

The network security monitor can include or have access to a database. The database may be stored in memory a hard drive storage or other computer readable medium. In addition to storing the logs which are generated and delivered to the network security monitor via the protected network the database can include threat indicator lists. The log correlation engine can use the threat indicator lists to detect potential APTs. The log correlation engine can use the threat indicator lists in a comparative function against the system logs provided by the network. Thus the log correlation engine can identify potential APTs based upon their behavior and the patterns they create within the system patterns which may be otherwise undetectable but can be revealed by the analysis performed by the correlation engine. The threat indicator list can include one or more categories that indicate APTs in different ways or from different perspectives or different types of APTs. For example the threat indicators can include the following three categories IP addresses malware and malicious code samples and IPS signatures. The log correlation can use the threat indicators to determine a presence of an APT within the protected network.

The network security monitor can update the threat indicator lists stored on the database. The network security monitor may crowd source threat information via an external network e.g. via the Internet to update the threat indicator lists. By crowd sourcing the threat information the network security monitor can use threat identification lists contributed by the public that may have more recent and relevant information for the detection of various different APTs as illustrated in . Thus the network security monitor can access e.g. via an Internet connection private and open source threat intelligence repositories including but not limited to IP addresses malware and malicious code samples and IPS signatures. The network security monitor can aggregate and store the threat intelligence in a database infrastructure e.g. file server file system using a threat intelligence schema format for organizing and making the aggregated threat intelligence manageable and maintainable. The network security monitor may normalize the threat intelligence using the schema.

The schema format used by the network security monitor organizes the aggregated threat intelligence and makes the threat intelligence database manageable and maintainable. The threat intelligence schema format can be applied to threat indicators aggregated from different private and open source threat intelligence repositories including e.g. IP addresses malware and malicious code samples and IPS signatures to be structured and expressed to get consumed and utilized by the log correlation engine. A normalizer of the network security monitor can use the threat intelligence schema format to transform threat intelligence gathered by the aggregator of the system to structured information ready to be used by the log correlation engine.

In an illustrative example a threat intelligence aggregator of the network security monitor can different private and open source threat intelligence repositories via the Internet using protocols such as HTTP FTP P2P etc. To make such connections the aggregator can be configured with configuration details for accessing the repository. The configured details may include URLs of a repository information transfer protocol and or authentication credentials specified by repositories vendors. Once the aggregator aggregates threat intelligence the network security monitor may pass the aggregated threat intelligence to the normalizer. The normalizer can be aware of the threat intelligence schema format and transforms the aggregated generic threat intelligence to structured information ready for use by the log correlation engine. As new threat intelligence repositories become available to the aggregator the schema format may be revised or updated to allow the intelligence coming from each new repository to be formatted properly by the normalizer. The network security monitor may then store the normalized threat intelligence in the threat intelligence database.

The network security device can use one or more communications methods to send a report generated by the report engine to network operators of the protected network or other entities. The communications methods may include any type of modern communications such as electronic mail instant messaging SMS notifications push alerts badges icons etc. The network operators may receive the report through a variety of different modern computing devices including but not limited to tablet computers smart phones desktop computers notebook computers mobile telecommunications devices smart watches etc.

Referring now to a block diagram depicting an embodiment of a system comprising a network security monitor is shown. In brief overview the system includes a network security monitor NSM that can receive and or transmit data via a protected network and or an external network . The system may include one or more clients and or one or more servers that access the protected network . The system may include security intelligence repositories such as third party threat intelligence providers crowd sourced threat intelligence etc. The network security monitor can include an interface that access the protected network and external network . The interface may also facilitate interactions or communication between one or more modules engines or databases of the network security monitor . The network security monitor may include a log collector that obtains logs for the protected network. The network security monitor may include a log indexer that indexes the logs obtained by the log collector . The network security monitor may include a log correlation engine that compares the indexed logs with threat intelligence stored in the database . The database may include stored logs threat intelligence schema reports and profiles e.g. configuration details for accessing a repository . The network security monitor may include an aggregator that obtains threat intelligence information from one or more repositories and a normalizer that normalizes the aggregated threat intelligence. The network security monitor may include a report engine that generates a report based on whether or not at threat is detected in the protected network and communicates the report to a client via the protected network or other entity.

The network security monitor interface log collector log indexer aggregator log correlation engine report engine normalizer and database may each include one or more processing units or other logic devices such as programmable logic array engines modules or circuitry designed and constructed to facilitate managing security on a network infrastructure.

In further detail the network security monitor includes an interface . The interface can be designed and constructed to communicate via a protected network or an external network . A protected network may refer to a private network e.g. a network that the network security monitor is attempting to monitor or protect. For example this network may refer to an internal network or intranet of a company organization university or other entity. The interface may be designed and constructed to communicate via an external network such as the World Wide Web or Internet. The interface may facilitate interaction or communication between one or more modules or components of or associated with the tool such as the log collector log indexer aggregator log correlation engine report engine normalizer and database . The interface may directly interface with the modules or networks and or the interface may communicate with the modules or networks via an intermediary device application program interface input output device etc.

The network security monitor may include a log collector designed and constructed to obtain logs. The log collector may receive the logs via interface or another interface of the log collector . The log collector can receive the logs securely from the protected network e.g. an encrypted network password protected network access restricted network time restricted network etc. . The log collector may receive request retrieve or obtain logs from the protected network that indicate a status of the protected network. The logs may indicate network activity on the protected network including e.g. threats traffic email performance authentication authorization and accounting AAA VPN and access control information. Each log may have a log identifier and indicate information associated with the network activity such as device identifiers time stamps domains level of severity of the log event source port of the session source internet protocol IP of the session destination IP of the session reference URL etc. Tables 1 8 are an illustrative example of the type of information that can be obtained or determined by the log collector .

The log collector can obtain the logs based on a time interval. In some embodiments the log collector may continuously receive logs in real time e.g. as logs are created. In some embodiments the log collector may receive the logs based on a time interval or in a batch process e.g. multiple logs stored in one or more data files . For example the log collector may receive logs hourly every 12 hours every 24 hours weekly every two weeks or any other time interval set by an administrator of the network security monitor that facilitates managing the security of the protected network . In some embodiments the network security monitor e.g. via the log collector may receive logs responsive to a request for logs.

The log collector may request logs from an agent executing on the protected network such as a monitoring agent. A monitoring agent can execute on a server of the protected network or client . The monitoring agent may include for example an antivirus tool a network security element an intrusion prevention system or an intrusion detection system. In some embodiments the log collector may obtain network information or logs from a vulnerability assessment tool e.g. Open Vulnerability Assessment System OpenVAS which may include a framework of several services and tools offering a vulnerability scanning and vulnerability management solution. The monitoring agent may create one or more types of logs including e.g. general system logs network security logs intrusion prevention system logs intrusion detection system logs or an antivirus application log.

The logs received by the log collector may be in any format that provides information on network activity of the protected network . In some embodiments log files may include plain text files comma delimited files binary files spreadsheets etc. For example a text file may be comma delimited to reflect headers for each column in the log file. In some embodiments depending on the monitoring agent the monitoring agent may create a log folder that contains a series of logs files one file for each day of log entries. The log files may be named MMDDYYYY.log where MMDDYYYY indicates the date of the log entries.

In some embodiments the monitoring agent may store log files in a predetermined directory of a server or client of the protected network. The log collector may access the predetermined directory based on a time interval e.g. periodically upon request or some other time interval to determine whether there are new or updated logs that can be retrieved. In some embodiments the log collector may retrieve or receive the logs and store the logs in database . The log collector may store all previous logs aggregate logs based on type or delete the logs after a time period e.g. 24 hours 48 hours a week month year etc. .

The network security monitor may include a log indexer designed and constructed to organize the logs obtained by the log collector . The logs may include different types of logs generated by the protected including but not limited to general system logs network security logs such as those generated by IPSs and IDSs and logs generated by anti virus applications. The log indexer can organize the logs in a manner that facilitates comparing the logs to extensive lists of threat indicators in order to determine whether or not the protected network is currently infected by an APT. By indexing the logs provided to the network security monitor the network security monitor can achieve greater efficiency by comparing logs to the appropriate lists of potential threat indicators thereby reducing the amount of computing resources consumed by the network security monitor during operation.

The log indexer may receive the logs directly from the log collector or may access the database to obtain the logs after the log collector stores the logs in the database . The log indexer may index the logs based on threat indicators. The log indexer is configured with a log normalizations schema that allows the log indexer to organize different types of logs obtained from different types of devices collectors tools applications or monitoring agents. Since each monitoring agent may use a different type of log representation indexing all the received logs using a common log format or schema can improve the efficiency of the log correlation engine .

The log indexer can parse analyze or otherwise process received logs to determine a type of log e.g. threat log email log traffic log authentication log etc. and one or more parameters or fields associated with the log. The log indexer can then index the log based on the type of log e.g. threat log and organize the data or parameters associated with the log using a log format or schema. The log indexer may index historical logs that were not previously indexed as well as new logs received by the log collector . The log indexer may index logs in real time as they arrive or the log indexer may index logs in a batch process run based on a time interval e.g. hourly daily weekly or some other time period that facilitates managing security of the network .

The following tables 1 8 illustrate embodiments of a log format or schema used by the log indexer to organize index or normalize the logs received by the log collector or stored in the database . The log indexer may use different formats or schema based on the type of log. The log indexer may apply this format or schema for all received logs corresponding to the same type. For example table 1 illustrates an embodiment of a log format or schema for mapping received logs to indexed threat logs table 2 illustrates an embodiment of a log format or schema for mapping received logs to indexed traffic logs table 3 illustrates an embodiment of a log format or schema for mapping received logs to indexed email logs table 4 illustrates an embodiment of a log format or schema for mapping received logs to indexed performance logs table 5 illustrates an embodiment of a log format or schema for mapping received logs to indexed AAA authentication authorization and accounting logs table 6 illustrates an embodiment of a log format or schema for mapping received logs to indexed VPN logs table 7 illustrates an embodiment of a log format or schema for mapping received logs to indexed access control logs table 8 illustrates an embodiment of a log format or schema for that are used for mapping one or more types of logs.

The network security monitor may include an aggregator designed and constructed to obtain receive retrieve threat intelligence from one or more repositories. The aggregator can access one or more threat repositories via the external network such as the security intelligence repositories using protocols such as HTTP FTP P2P etc. To access or establish a connection with a repository the aggregator may obtain configuration details from the database including e.g. URL of a repository information transfer protocol and or authentication credentials specified by repository vendors. Using the connection the aggregator may periodically ping receive or otherwise obtain current or up to date information from the security intelligence database or resource . This information may be provided by a security community or crowd sourced and accessed via an external network . The information may be time stamped or otherwise flagged so the network security monitor can determine if the information is new. In some embodiments the network security monitor may receive a real time data feed of security information. The crowd sourced information may be in multiple forms such as Vulnerabilities Exploits signatures MD5s IP Reputation Domains Reputation Traffic Patterns etc. from public and private repositories such as CERTs TOR forums social networking feeds Security Vendors Academia Private Security Researchers Metasploit ExploitDB etc.

A vulnerability may refer to a weakness in software hardware or firmware of the protected network or system or component thereof. Such weakness might allow an adversary to violate the confidentiality the availability and the integrity of the system its processes applications as well as the data the system generate and manage. In network security vulnerability may refer to the weakness of a network device station that could allow unauthorized intrusion in the network. Further human weaknesses regarding the information security sensitivity are considered as vulnerabilities that can be exploited by social engineering techniques. In security industry there are a plethora of vulnerability schemes and registries specified generated and maintained by various enterprises organizations or research institutions. Such registries for instance are the CERT Advisories maintained by the Software Engineering Institute at Carnegie Mellon University of Pittsburgh Pa. the CVE scheme maintained by MITRE Corporation of Bedford Mass. the Bugtraq vulnerability list maintained by Security Focus of SYMANTEC CORPORATION of Mountain View Calif. Various entities corporations or software firms may also maintain public vulnerabilities registries regarding the products they develop in relevant web sites. In various embodiments the network security monitor can be configured to receive access look up process analyze or otherwise obtain and utilize information of one or more vulnerabilities lists or registries in one or more formats standards or schemes. For example the network security monitor via the aggregator can be configured to use the CVE vulnerability scheme created by MITRE Corporation. However in some embodiments the tool can be vulnerability scheme independent.

In some embodiments an exploit refers to a piece of software a chunk of data or a sequence of commands that takes advantage of a bug or vulnerability in order to cause computer software and or hardware to have unintended or unanticipated behavior. Such behavior may aim to gain control of a system allowing privilege escalation or a denial of service attack. Signatures can refer to attack patterns that are used by the tool. The signatures or patterns specify attacks in a network a network node a networked device at a host level.

The aggregator can access the security intelligence repositories or resource to update the threat indicator lists stored in the database . The aggregator may crowd source threat information via an external network e.g. the Internet to update the threat indicator list using private and or open source threat intelligence repositories including but not limited to IP addresses malware and malicious code samples and IPS signatures. The network security monitor can aggregate and store the threat intelligence in a database infrastructure e.g. file server file system using a threat intelligence schema format for organizing and making the aggregated threat intelligence manageable and maintainable.

In some embodiments the aggregator can access multiple disparate heterogeneous security intelligence repositories to retrieve threat intelligence. These repositories may be referred to heterogeneous because they provide different types of threat intelligence e.g. IP address malware code malicious code IPS signatures in different formats or an unstructured. To access the security intelligence repositories the aggregator may access configuration details or a profile in database that provided access credentials such as a username password token etc. to allow the aggregator to obtain threat intelligence. The profile stored in database may include configuration details or credentials for some or all of the repositories . In some embodiments the aggregator may maintain an open connection with one or more repositories in order to continuously obtain up to date threat intelligence information while in other embodiments the aggregator may periodically ping one or more repositories or receive a push notification or other indication of new threat intelligence.

The network security monitor may include a normalizer designed and constructed to organize normalize process transform or otherwise analyze the threat intelligence obtained by the aggregator or stored in database to generate a list of threat indicators. In some embodiments normalizing the threat intelligence data may include de duplicating redundant data and or transforming the threat intelligence data into a structured list of threat indicators corresponding to a threat scheme or log format schema . The network security monitor can generate the list of threat indicators based on a schema for threats e.g. threat schema or threat intelligence schema . The schema used by the network security monitor e.g. normalizer organizes the aggregated threat intelligence and makes the threat intelligence database manageable and maintainable. The threat intelligence schema format can be applied to threat indicators aggregated from different private and open source threat intelligence repositories including e.g. Internet Protocol address a malware code sample a malicious code sample or an intrusion prevention system signature to be structured and expressed as a list of threat indicators to allow the log correlation engine to identify a threat.

The network security monitor can use an ontology definition that models security in different types of infrastructures such as based on public private cloud premise implementations . The threat intelligence schema can be based on semantics and indicators regarding internet protocol IP and domain blacklists malware and vulnerabilities signatures. For example the threat intelligence schema may include a section for IP reputation that specifies field about the actual IP host IP country types of threats from this IP and latest activity.

In some embodiments the threat intelligence schema can include the log format schema illustrated in tables 1 8. By normalizing or organizing the threat intelligence received from disparate heterogeneous sources with different formats and structures the log correlation engine can efficiently identify threats in the protected networks . In some embodiments the normalizer can organize or normalize the threat intelligence received from the security intelligence repositories using some or all of the same schema illustrated in tables 1 8 that is used to index the logs received by the log collector . By using the same or similar schema or some or all of the schema or log format in tables 1 8 the network security monitor can improve the log correlation engine performance.

In some embodiments the network security monitor can update the schema stored in the database to index the logs or normalize the threat intelligence. For example as new threat intelligence repositories become available to the aggregator network security monitor may revise the schema format to allow the intelligence coming from each new repository to be formatted properly by the normalizer. The revisions may include the addition of new fields for new types of threat intelligence grouping of different intelligence into the same or different fields new naming conventions etc.

The network security monitor may include a log correlation engine designed and constructed to compare the list of threat of indicators with the indexed logs to identify a threat in the protected network. The log correlation engine may obtain or retrieve the list of threat indicators and the indexed logs from database . In some cases the log correlation engine may receive the list of threat indicators from the normalizer or aggregator and or receive the indexed logs from the log indexer . The log correlation engine can include or be configured with a heuristic algorithm that can search through the indexed logs and compare them to the one or more lists of threat indicators. In some embodiments the log correlation engine can search the indexed logs and compare them to threat indicators at the same time simultaneously in parallel or close together in time. For example the log correlation engine may utilize multiple cores or processing threads to search and compare logs with list of threat indicators. In some embodiments the log correlation engine can search for a first type of log in the indexed logs e.g. email and then compare those indexed logs with a corresponding list of threat indicators while searching for another type of indexed log.

The log correlation engine may determine a threat exists in the protected network by identifying similarities or correlations between the indexed logs of the protected network and the threat indicator lists. The log correlation engine can identify potential APTs based upon their behavior and the patterns they create within the system patterns which may be otherwise undetectable but can be revealed by the analysis performed by the correlation engine. The log correlation engine can store the results of the comparison in the database or provide the results of the comparison to the report engine to generate a report or an alert.

The log correlation engine can use a heuristic algorithm to identify a threat. The heuristic algorithm can include or be configured with one or more correlation rules whose conditions involve both the indexed logs and the list of threat indicators. The correlation rules may be applied to some or all the indexed logs. For example the log correlation engine can apply a correlation rule to some of the indexed logs e.g. recently indexed within a time period such as a day week month etc. or all of the indexed logs including indexed historical logs. By analyzing indexed historical logs the log correlation engine can identify APTs that may have been infecting the protected network for hundreds of days or longer. In some embodiments the log correlation engine can compare logs responsive to a new log or new indexed log or responsive to new threat intelligence information or new list of threat indicators. For example the log correlation engine can perform a new comparison if the schema or format changed for the log index or the list of threat indicators or if new logs or threat information is received.

In an illustrative example the log correlation engine can use the following correlation rule to identify a threat At any time for any traffic log if log s source or destination IP address is blacklisted then generate an alert including the involved IP addresses of the under examination log. This exemplary correlation rule includes several conditions or parameters such as a temporal parameter any time a log type traffic log a log fields source or destination IPs and a list of threat indicators blacklisted IPs . The correlation rule further indicates what type of report is to be generated by the report engine and what the report is to include. Thus the network security monitor can identify a match e.g. when the conditions of the correlation rule are satisfied by an indexed log and a threat indication and notify an administrator or user of the protected network that there is network activity or a communication between the protected network e.g. an internal IP address of the protected system and an IP address that is known to be malicious based on security intelligence.

As this example illustrates a correlation rule can include a condition or a parameter of the indexed log that is to be compared with a threat indicator to identify a match. The correlation rule may further include temporal information. In another example a correlation rule may include In the last 7 days for any email log if the sender of the email is blacklisted and the email includes an attachment then generate an alert including the timestamp of the email and the sender of the email. Yet another example of a correlation rule may be In the last 72 hours for any performance log if the percentage of CPU usage is greater than 90 and or the percentage of memory usage is greater than 90 then generate an alert with the type of the event and the device identifier.

In some embodiments both normalized threat intelligence and log repositories are updated constantly e.g. in response to receiving a new log or threat information . The threat intelligence or list of threat indicators are updated with new threat intelligence from the open source security repositories while the logs or indexed logs are updated with the behavioral information translated in logs from the devices collectors e.g. monitoring agent of the protected system. In addition to using correlation rules the network security monitor may analyze the recorded logs to maintain behavioral profiles for the protected network . The behavioral profile may be for a user of the protected system and include behavioral indicators and corresponding baselines of the behavior of the system. A baseline behavior of the system may indicate the behavior when there is no threat present in the protected network . For example performance behavior based on performance logs or traffic behavior based on traffic logs when the network security monitor determines that there is APT present in the protected network.

Using this baseline behavior profile stored in the database the network security monitor may be able to predict threats. By analyzing logs and comparing them to baseline behavior may allow the network security monitor to provide early notification about unknown and or advanced persistence threats. In some embodiments the network security monitor obtains a baseline behavior profile for the protected system or specific server or client thereof and compares the baseline behavior profile with a current indexed log for the corresponding client or server or a similar type of component . If the current behavior differs from the baseline behavior e.g. a threshold amount of different performance usage different email senders pings different URLs etc. then the network security monitor may generate an alert or report. In some cases the network security monitor may initiate the aggregator to actively search for and obtain new threat intelligence responsive to identifying a change in behavior from the baseline behavior.

The network security monitor may include a report engine designed and constructed to generate a report based on the log correlation performed by the log correlation engine . The report engine can store the reports in the database or provide the report to an administrator or user of the network security monitor via a communications method such as network or network . The report engine may generate the report responsive to the log correlation engine identifying a threat. In some embodiments the report engine may generate a report based on a time interval e.g. hourly daily weekly monthly regardless of whether a threat was identified e.g. report may indicate that no threats detected in protected network in last 24 hours .

The report engine may include information associated with the protected network or identified threat in the report. The report engine may include type of threat a correlation rule that triggered the threat a timestamp an identifier of a device or network component or network associated with the threat and additional information that may be specified by an administrator of the network security tool or in the correlation rule that initiated triggered or instructed the report engine to generate the report.

Referring to and in further detail at step a log collector receives logs of a protected network. The logs may be generated by a monitoring agent executing running or monitoring one or more aspect of the protected network. The monitoring agent may reside on a server or client device of the protected network. The monitoring agent may monitor performance of hardware resources e.g. CPU memory input output hardrive accesses etc. . The monitoring agent may monitor an email server or file server of the protected network. The monitoring agent may generate logs based on traffic in the protected network e.g. source destination IP addresses or ports URLs etc. . The monitoring agent can include various tools such as antivirus tools or other tools that monitor aspects of a protected network and generate logs that can facilitate identifying a threat in a protected network. The logs may be provided to the log indexer or network security monitor in real time e.g. as logs are generated or based on a time interval e.g. hourly daily weekly etc. . In some embodiments the log indexer may request a log and the log indexer may receive one or more logs from the monitoring agent response to the request.

At step a log indexer can index the logs based on a log format. The log format may include a schema or format illustrated in tables in 1 8. To index the logs the log indexer can determine a type of log e.g. email log threat log from an antivirus tool AAA log etc. . The log indexer may then retrieve from a database the corresponding schema for that log. The log indexer may then identify from the log the information corresponding to each field and label or tag the information with the field information. The log indexer may then store this information in a structured manner in a data structure or database. Thus by indexing the logs using the log format and storing it in a data structure configured with the log format the log indexer can improve the efficiency of the log correlation engine.

At step a log correlation engine can retrieve a list of threat indicators from a database. The list of threat indicators may be stored in the database in a manner that facilitates them being compared to the indexed logs. The threat indicators can be organized based on categories such as IP address related threats malicious code samples or threat signatures. The log correlation engine can compare the one or more lists of threat indicators. For example each list of threat indicators may correspond to a different category. The log correlation may only retrieve the category that corresponds to the indexed log for which a comparison is to be performed. For example if the log indexer receives threat logs at this time then the log correlation engine may retrieve a list of threat indicators corresponding to threat logs e.g. IP addresses and perform the comparison.

The log correlation engine may include correlation rules with conditions. The log correlation engine can determine a match between an indexed log and a list of threat indicators using the rule. For example a rule may indicate a threat if greater than 5 pings are received from a blacklisted IP address within a short duration.

In some embodiments an aggregator can receive threat indicators from heterogeneous sources via an external network e.g. Intranet . These sources may include threat intelligence repositories or security intelligence repositories. The threat intelligence maybe crowd sourced from various feeds including e.g. social network feeds blogs news articles websites on which security companies publish latest threat information etc. Heterogeneous sources may include these different types of sources. The normalizer can use a schema or organization rule to remove duplicate threat information and categorize the threats into lists of threat indicators e.g. IP Addresses malware and malicious codes IPS signatures that include structured information for use by the correlation engine.

In some embodiments the aggregator may access a database with configuration details that grant the aggregator access to a security intelligence repository. Configuration details may include a URL or IP address of the security intelligence repository username password etc. In some embodiments the aggregator may obtain multiple configuration details or log in credentials in order to access multiple threat intelligence repositories. For example the aggregator may use a first configuration to establish a connection with a first repository and a second configuration to establish a connection with a second repository. The aggregator may then update the list of threat indicators based on one or more received threat indicators from the repositories.

At step the log correlation engine can compare the list of threat indicators with the indexed logs. The log correlation engine may use a correlation rule to compare the threat indicator with the indexed logs. The correlation rule may include conditions such as temporal conditions or other conditions based on fields in the schema for logs as illustrated in tables 1 8. The correlation rules may include Boolean logic operators e.g. AND OR NOT or correlation conditional logic e.g. If x then y . The correlation engine can search for correlations between logs and threat indicators and identify a match based on the correlation e.g. a match may refer to satisfying the condition of the correlations or a semantic or literal match between fields of the log index and the threat indicator a substantial match based on a percentage of matching such as 90 match or 80 match or 95 match etc. .

The log correlation engine may perform the comparison on a subset of logs. For example if new threat information of a certain category of threats is received the log correlation engine may retrieve a subset of indexed logs from the database corresponding to the category of the updated threat information and perform a correlation on the retrieved subset of logs. This may improve the efficiency of the log correlation engine and allow the log correlation engine to more quickly account for new threat information when monitoring the protected network. Similarly when the log correlation receives a new log file the log correlation engine can index the log identify a type of log e.g. email log and then compare the newly indexed log with a corresponding subset of threat indicators that corresponds to the log type.

In some embodiments the log correlation engine may perform the comparison responsive to receiving new logs from the protected network. The log correlation engine may perform the comparison responsive to receiving new threat information from the aggregator or a security intelligence repository.

At step a report engine can generate a report that indicates a threat was detected. The repot engine can generate the report responsive to the log correlation engine completing a run. The report engine may generate a report regardless of whether a threat was detected. For example the report may indicate that the network is clean. For example the report engine can generate a report based on the comparing to identify a threat where the report indicates that the network was either clean e.g. no threat identified as a result of the comparing or the network is infected e.g. a threat was identified as a result of the comparing .

The report engine can communicate this report via a network in various forms using various communication techniques including e.g. text messages SMS messages instant messaging emails notifications prompts visual alerts lights alarm sounds etc.

The big data indexer can index the logs received from the protected network . Big data indexer can include components or functionality of a log indexer and the big data infrastructure to facilitate indexing the logs.

The system can include a correlation engine that compares threat intelligence information with log received from the protected network . The correlation engine can include one or more components of the correlation engine . Threat information can include IP data that indicates geography or reputation malware samples botnets lists and or IPS IDS signature lists . The system can include update modules that update the information stored in databases data structures repositories or modules and . The information stored in the repositories and may include threat information received from various third party security intelligence repositories. In some instances the information stored in repositories and may include organized or normalized threat information. The threat information may be normalized by removing duplicate threat indicators or otherwise organizing the threat information based on threat types.

The system may include a report engine responsive to the correlation engine can generate an alert or a report with the findings of the correlation engine . The report engine may include one or more component or functionality of report engine .

As shown in system the APT intelligence platform or network security monitor is separated from the external network by a firewall . This firewall may also protect the protected network . Thus the APT intelligence platform and protected network may be on the same side of the firewall . The APT intelligence platform may access the protected network to obtain logs or the APT intelligence platform may access repositories and storing logs obtained from the protected network .

In further detail at step the monitor is set up to receive system logs from the protected network. These system logs are sent to the monitor via the internet and are received by the log collector. In some embodiments the monitor is a third party system that is not directly installed into the protected network which it is protecting. Since it is not directly installed on the protected network the monitor receives the logs from the protected network.

At step the protected network monitors its daily status through one or more tools including but not limited to antivirus programs system status logs and network security systems such as IPSs. This information is compiled into a package of data which can be later sent to the monitor e.g. APT intelligence platform for analyzing at step . These logs are used to determine whether or not the protected network is currently infected with an APT. At step the monitor receives the system logs from the protected network. The system logs are received by the log collector. The monitor can receive the system logs from the protected network.

At step the logs are indexed and organized by the log indexer. Indexing the logs provides advantages in that the logs can be compared to only specific sections of the threat indicator list which helps to improve the efficiency of the present invention. At step the indexed log files are stored on the database for later use.

At step the log correlation engine compares the logs to the threat indicator lists. The threat indicator list may be broken into three or more categories including but not limited to IP addresses malware and malicious code samples and IPS signatures. The monitor may compare the system logs and the threat indicator lists to determine if there are any similarities between the systems logs and the threat indicator lists. The log correlation engine may use a correlation rule or heuristic algorithm to identify similarities or a match. If similarities or correlations are present then may be indicative of an APT within the protected network.

At step the report engine generates a report based upon similarities or matches between the system logs and the threat indicator lists as discovered by the log correlation engine. These similarities are indicative of a potential APT being present within the protected network and the report engine generates a report to notify the network operators of this finding. The report may also include information on how the APT was detected thereby helping the network operators to eliminate the threat and repair any damage it may have caused. The system may generate a report even if no similarities are discovered. The method may repeat by returning to step continuing to monitor the protected network on a continuous basis or based on some other time interval e.g. hourly daily weekly etc. .

Increasing the frequency of system log creation and the frequency with which the system logs are sent to the APT intelligence platform or network security monitor can increase the resolution of the network security monitor as it may be possible to perform more analysis in a time interval.

The threat information received from the crowd sourcing repositories may be organized into three threat categories IP addresses malware and malicious codes and IPS signatures . IPS signatures may refer to misuse based or signature based behaviors. For example a set of misuse patterns or signatures can be generated by focusing on a limited amount of information that was sufficient to distinguish an attack from a legitimate use of the network or system in the past.

Block represents another scenario where the network is clean. The APT intelligence engine receives the network logs at step that were generated at step . Since the network is clean the APT intelligence engine may generate a report indicating no threats at . However at a later point in time the network may become infected at step . Since the APT intelligence engine can continuously monitor the protected network e.g. as frequently as the APT intelligence receives network logs the APT intelligence engine can determine that there is a threat and generate an emergency report indicated there is a threat at step .

Thus the systems and methods of the present disclosure detect APTs within a protected network. In some embodiments a system can aggregate threats intelligence in multiple forms such as Vulnerabilities Exploits MD5s IP Reputation Domains Reputation Traffic Patterns etc. from public and private repositories such as CERTs TOR forums social networking feeds Security Vendors Academia Private Security Researchers Metasploit ExploitDB etc. The system can normalize the feeds from public and private repositories in a unified format and via an automated process delete duplications. The system can store the feeds from these private and public repositories based on their reputation which is adjusted by the accuracy and quality of their data. If the accuracy quality drops below a certain level an alert is generated for the administrator to manually validate the content of the feed. For example a feed may be deemed to be inaccurate if multiple other threat sources indicate that a threat identified in the feed is not really a threat or a false positive. Poor quality may refer to lack of useful data to actually identify a threat e.g. missing fields in data so it cannot be properly indexed or normalized . The system can edit and update the feeds lists based on manual adding and removing sources in the form of RSS an XML based standard for rich site summary TOR Forums crawlers e.g. an anonymous method of conducting online activity by separating identification and routing by encrypting and then randomly bounding communications through a network of relays run by volunteers around the globe emailing lists APIs social network feeds crawlers etc. The system of claim can continuously update check crawl etc. available private and public threat repositories so the system is constantly up to date. The system can further normalize the threat information each time the system receives new threat information.

The system can collect store and index logs from various systems of the protected network such as log repositories SIEMs network security elements etc. The system can also normalize these logs in a unified format as to be easier to correlate them. The system can correlate current and past logs and log sets in real time continuously as to identify threats of a type that are now penetrating the protected network or had passed unnoticed in the past. The system can generate alerts in various formats such as SMS email visual signs via its GUI etc. for matches found along with the associated logs internal IPs external IPs type of incident triggered repository etc. In some embodiments the system may be accessible by 3parties via an API as to enable network and information security elements systems platforms etc. to utilize its threat intelligence for their own systems accuracy optimization. In some embodiments the system may be cloud based and the normalized repositories both threat intelligence and logs can be elastic.

While the invention has been particularly shown and described with reference to specific embodiments it should be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention described in this disclosure.

