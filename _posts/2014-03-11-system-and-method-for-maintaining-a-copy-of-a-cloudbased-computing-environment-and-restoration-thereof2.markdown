---

title: System and method for maintaining a copy of a cloud-based computing environment and restoration thereof
abstract: A method and system for securing continued operation of a primary cloud-based computing environment (CBCE) residing in a first cloud environment are disclosed. The system comprises gathering information respective of the primary CBCE; storing the gathered information in a storage space, wherein the gathered information substantially provides a baseline to initiate the creation of a reconstructed CBCE upon a need to recreate the primary CBCE; updating the gathered information with new information gathered respective of changes to the primary CBCE; receiving a periodic status notification from the primary CBCE; and initiating a reconstruction of the primary CBCE in the second cloud environment responsive to the status notification requesting one of: a reconstruction request and failure of the primary CBCE.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09582386&OS=09582386&RS=09582386
owner: CloudEndure, Ltd.
number: 09582386
owner_city: Ramat Gan
owner_country: IL
publication_date: 20140311
---
This patent application claims the benefit of U.S. provisional patent application No. 61 787 178 filed on Mar. 15 2013 assigned to common assignee and is included herein by reference for all that it contains.

The invention generally relates to computing environments implemented in the cloud and more particularly to backup and restoration techniques for computing environments in the cloud.

In recent years more and more providers have begun providing the ability to create computing environments in the cloud. For example Amazon Web Services also known as AWS launched in 2006 a service that provides users with the ability to configure an entire environment tailored to an application executed over the cloud platform. In general such services allow developing scalable applications in which computing resources are utilized to support efficient execution of the application. To this end a programmer a user of the cloud computing environments can define the computing resources such as servers web servers routers storage load balancers firewalls backup and connectivity as may be desired. Services for creating computing environments in the cloud allow dynamic changes to the set of computing resources and their configurations. This may include adding components or removing components from the configured environment as may be necessary as well as changes to other configurations of the environment and changes to the configuration of each component.

Organizations and businesses that develop provide or otherwise maintain cloud based applications have become accustomed to relying on these services and implementing various types of environments from complex web sites to data mining systems and much more. However there is a challenge as greater reliance is made on such systems since such systems have to maintain a very high up time and any failure may become highly problematic and or costly to a user of the system. That is there is a requirement to allow for business continuity. For example for an e commerce application executed in a cloud based environment any down time of such application means revenue lost. As a result providers of such applications often utilize measures to ensure continuity of operations by backing up information that is relevant to maintaining operations.

While the providers of such cloud based environments provide various backup capabilities that automatically or semi automatically store data from one computer in another storage space that is separate from the computer those providers still rely on the user to address these issues effectively. Therefore in order to ensure continuous operations of the application mirror or backup environments are manually created by the application developer or application owner. In addition any changes made to the primary environment must be manually updated in the backup environment.

For example when a machine allocated in the cloud environment for execution of the application includes certain firewall configuration parameters these parameters have to be copied manually to the respective backup machine if the user or provider desires that such parameters be identical in character to those of the backed up machine. Additionally while coherency maintenance between machines such as physical and or virtual machines is well within the realm of existing solutions cloud service providers do not currently support coherency maintenance for other computing resources such as load balancers. A solution that periodically backs up data of a machine by way of taking a snapshot and storing such data would be desired. This solution would enable reconstruction of the data in case of failure or when otherwise needed.

Therefore the disadvantages of prior art solutions are quite obvious. At all times it is necessary to maintain a full copy of the cloud based computing environment CBCE . That is both machines and services in at least another cloud environment or platform.

It would be therefore advantageous to provide an efficient solution for maintaining the ability to create a redundant CBCE in case of a failure of a primary CBCE.

Certain embodiments disclosed herein include a system and method for securing continued operation of a primary cloud based computing environment CBCE residing in a first cloud environment. The method comprises gathering information respective of the primary CBCE storing the gathered information in a storage space wherein the gathered information substantially provides a baseline to initiate the creation of a reconstructed CBCE upon a need to recreate the primary CBCE updating the gathered information with new information gathered respective of changes to the primary CBCE receiving a periodic status notification from the primary CBCE and initiating a reconstruction of the primary CBCE in the second cloud environment responsive to the status notification requesting one of a reconstruction request and failure of the primary CBCE.

It is important to note that the embodiments disclosed herein are only examples of the many advantageous uses of the innovative teachings herein. In general statements made in the specification of the present application do not necessarily limit any of the various claims. Moreover some statements may apply to some inventive features but not to others. In general unless otherwise indicated singular elements may be in plural and vice versa with no loss of generality. In the drawings like numerals refer to like parts through several views.

Certain embodiments disclosed herein include a system for maintaining a copy of a cloud based computing environment CBCE and restoration thereof. The disclosed system and embodiments may provide an efficient and cost effective solution for business continuity of a defined CBCE. Information respective of the CBCE is maintained by accessing and analyzing the CBCE and storing baseline data respective of the CBCE. Thereafter the system is continuously monitored for changes and any changes to data and or configuration are captured and stored. Upon determination of a failure of the primary CBCE the resources and the configuration of such CBCE are replicated to a secondary CBCE using the stored baseline and any changes made thereon. The secondary CBCE may be in the same or another cloud platform as the primary CBCE.

A primary CBCE is created and defined in the cloud to execute a cloud based application. As noted above such application may include among other things an e commerce application a social media application an enterprise application a gaming application a media sharing application and so on. To support the execution of the cloud based application the CBCE is configured with various computing components or resources A B and C each of which can be a machine or a service.

A machine of a computing component is a general purpose virtual machine capable of running an operating system and applications. A service of a computing component is a cloud based functionality controllable by a user interface or one or more application programming interfaces APIs . Examples of machines of computing components are web servers database servers cache servers storage servers virtual appliances and the like. Examples of services of computing components are network architecture management services load balancing services auto scaling services content delivery network CDN services network addresses allocation services database services and domain name system DNS services and the like. Each such computing component or resource A typically contains its own data and a set of configurations.

The CBCE as a whole also has its own set of configurations which includes various aspects that define the operation of the CBCE in the cloud . The set of configurations of the CBCE further extends beyond the specific components also to configure the desired operation modes inter machine dependencies firewall settings available services definitions as well as many other parameters required for the operation of the CBCE in the cloud environment in order to support efficient execution of the cloud based application. For the sake of simplicity and without limiting the scope of the claimed embodiments the CBCE is the primary environment for execution of the cloud based application. In an embodiment the cloud based application is configured with the restoration services provided by the disclosed embodiments. The cloud based application may belong to an organization subscribed to such services. It should be noted that the CBCE may be configured to execute a plurality of cloud based applications each of which may be configured with the restoration services disclosed herein.

The system further includes a server that is communicatively connected using an Internet connection to the CBCE . The connection may be a secured connection. In an embodiment the server is part of the cloud the cloud or in a network not shown of the owner or otherwise developer of the cloud based application.

According to the disclosed embodiments the server is configured to manage monitor and gather information that enables restoration of the CBCE upon detection of a failure. The server is communicatively connected to a storage device and configured to maintain information respective of the CBCE in the cloud in the storage space of a storage device . That is the server maintains the data and configurations of components A B and C in the CBCE . In addition the configuration information of the CBCE is kept in the storage space .

In one embodiment a plurality of monitoring agents e.g. monitoring agents A B and C are installed in the primary CBCE . The monitoring agents A B and C are configured to monitor for changes in data and configuration of the components A B and C. Collectively or alternatively another monitoring agent is installed in the CBCE to detect changes in the data and configuration for the entire CBCE and or any or all of the machines therein. Moreover any monitoring agent may be further configured to monitor services of the CBCE through monitoring of the service s APIs. In an embodiment when a copy of the primary CBCE is created in the second cloud the monitoring agents A B C and are included in the CBCE Copy.

The information in the storage space is maintained for the purpose of replicating either identically or substantially identically the CBCE in case such is required for example in the case of a failure. The server is further configured to maintain in the storage space any information pertaining to any changes made to the components both data and configuration and the configuration of the CBCE which may also include information about computing components addition to and removal from the CBCE as well as other information for restoring or substantially restoring the CBCE . Specifically all information that is necessary to recreate in a cloud e.g. the cloud including but not limited to information for running a secondary CBCE Copy which functions as or at least substantially as the primary CBCE . A failover to the secondary CBCE C may occur for example in the case of a failure of the CBCE the cloud or both. A trigger for the failover event may be an unresponsive or un operational cloud based application or a request from a user e.g. an IT administrator . It should be understood that the CBCE copy is created only upon such a trigger and is created based on the information gathered. At such time that CBCE Copy becomes operative the primary CBCE ceases operation and is typically released.

Upon a trigger of a failover event as detailed above the server is configured to establish a communication link to the cloud . It should be noted that the server is at liberty to select any one of a plurality of clouds available at the time of failure for example in the cloud or any other available cloud infrastructure that can support a copy of the CBCE . It should be further noted that the CBCE Copy can be created or instantiated in the cloud on physical resources different than the physical resources allocated for the primary CBCE .

In an embodiment the server is configured to set a copy CBCE Copy respective of the data and configuration stored in the storage space about the primary CBCE its computing components A copy B copy and C copy and respective information. Once the restoring of the primary CBCE as the secondary CBCE Copy is complete the CBCE Copy begins operating in its target cloud e.g. cloud .

In one embodiment the server and the storage space can be used to monitor the copy CBCE Copy so that it may be possible to replicate it in case of failure or in response to an indication of a desire to resume operation in the first cloud environment once the reason for failure has been resolved. In one embodiment such a transfer back to the cloud is performed either responsive to a command from a user or responsive to an automatic detection. At such time the CBCE Copy may be deactivated and the server will resume monitoring of the CBCE as explained herein above. The server comprises a processing unit not shown coupled to a memory not shown containing instructions that when executed by the processing unit perform the processes described herein. The server further comprises at least a network interface to allow communication to and from the server as further discussed herein.

In one embodiment the user e.g. an IT administrator responsible for maintaining the cloud based application configures the server with credentials to access the primary CBCE and its components and respective information. Using the credentials the server is configured to create an initial baseline of information respective of the primary CBCE to ensure accurate backup and timely failover according to the disclosed embodiments.

This initial baseline information is stored in the storage space as explained herein and therefrom updated with any changes to components respective data and or configuration of the primary CBCE without creating a copy environment until such time that such a copy environment becomes necessary. For example disks may be copied for their data content to the storage space or changes thereto such as for example write operations to disks. Information respective of the write operations may further comprise the likes of timestamp offset content and length of written data. This provides a significant cost savings as the proper replication or copy of service components only occurs when restoration of such components becomes necessary rather than requiring storage of replications of every component at any given time. It should be appreciated that a service computing component such as a network architecture management service a load balancing service an auto scaling service a content delivery network CDN service a network addresses allocation service a database service and a domain name system DNS service cannot be merely replicated on the fly upon a detection of a failure.

It should be noted that the cloud may comprise a plurality of clouds wherein each contains one or more elements of the primary CBCE. Similarly the cloud may comprise a plurality of clouds each containing one or more elements of the secondary restored CBCE Copy.

In S credentials of the primary CBCE are received to allow access to the CBCE . In S an automated identification process of computing components data and configuration of the primary CBCE takes place and baseline information respective thereto is stored for example in the storage space . In an embodiment a user e.g. an IT administrator may provide such baseline information as an input.

In S monitoring agents are installed in the primary CBCE that monitor for changes in the computing components data and configuration of the primary CBCE. As noted above an agent may be installed for the entire CBCE and or any or all of the machines therein. Moreover an agent may also monitor services of the CBCE through monitoring of the service s APIs. In addition some of the monitoring functions can be performed by a server that is not part of the primary CBCE for example the server . The operation of the monitoring step is further discussed below.

In S changes respective of the primary CBCE are received by the server in push or pull mode of operation . In S received changes are stored in the storage space e.g. storage space respective of the baseline information of the primary CBCE. In S it is checked whether the process is desired to continue and if so execution continues with S otherwise execution terminates.

In S a status with regard to the functioning or operation of the primary CBCE is received. Such status can be received either in a pull or push mode of operation from the primary CBCE. The status received from the CBCE may provide an indication that the cloud based application is unresponsive that a machine and or a service has failed that a network malfunction has occurred and the like.

In S it is checked whether the status requires a transfer of the operation from a first cloud to a second cloud that is if a failover should take place. In an embodiment a determination is made if the received status requires a failover based on the nature of the reported status or its severity. In an embodiment the server may be configured with a list of status codes that trigger a failover operation. If S results with a Yes answer execution continues with S otherwise execution continues with S. The failover operation is performed using the information stored in a storage space for example storage space .

In S a second cloud is selected in which to replicate the primary CBCE. Selection of the second cloud may be based on e.g. a user s preference size of available data in existing clouds and so on. In S the primary CBCE is replicated or substantially replicated to the second cloud which means that all components forming the CBCE its configuration and data are provided in the copy CBCE. The primary CBCE is replicated as a copy CBCE for example copy CBCE Copy based on the information respective of the primary CBCE in the storage space. In an embodiment S further includes the instantiation of machines and services in the second cloud based on the replicated information. That is upon completion of S the second cloud would include environment that can support the execution of cloud based applications based on the provisions set in the primary CBCE.

Optionally in S user traffic is redirected from the primary CBCE to the second CBCE. As an example user traffic may be redirected by changing DNS mapping using HTTP redirects or using a forwarding device. In optional step S the primary CBCE is released for example for the purpose of reducing utilization of cloud based resources. In optional step S it is checked whether continuation is desired and if so execution continues with S otherwise execution terminates.

It should be understood that the embodiments disclosed herein are not limited to the specific architectures discussed herein and other architectures may be used without departing from the scope of the embodiments. Specifically server may reside in the cloud cloud or any other location cloud or otherwise not shown connectable to the CBCE may be on premises at a user s site or may be implemented virtually in a distributed server less fashion. Moreover in one embodiment there may be a plurality of servers operating as described hereinabove and configured to either operate with one server being a standby server to take control in a case of failure or to share the load between them or to split the functions between different types of servers.

In yet another embodiment a first portion of a CBCE for example a first portion of CBCE may be restored in a first cloud environment while a second portion is being restored in a second cloud environment and further while the server is being configured to enable a configuration that allows the operation of the split copy CBCE as the primary CBCE functioned while operative. Moreover in yet another embodiment only a partial copy of the CBCE is restored and either linked to the master CBCE to operate jointly or to operate independently.

According to certain exemplary embodiments a user may provide their credentials for accessing a CBCE. Accordingly in such embodiments a user adds one or more of the computing components in the CBCE to the list of components that should be monitored. The user optionally marks which cloud s and or cloud region s to use when activating a copy of each primary component different sets of primary components or the entire CBCE. Then the configuration of the CBCE and each of such components are read and stored in storage and are monitored for changes.

One of ordinary skill in the art should readily appreciate that no running or idle mirror machine is created at the stage of replication or copy thereby providing for a significant reduction in resource utilization. In addition the automatic copy and continuous update of all or a significant part of the configuration saves much labor in comparison to manual configuration and maintenance of the replicated CBCE and the configuration. If an error occurs during the replication or copy process such as but not limited to a reboot of a machine a disconnect of a traced disk network failures etc. a synchronization process is invoked when the error terminates to synchronize the data maintained by server with the data of the monitored CBCE and continue the replication or copy process described above.

When at least one component has an activated copy running in the cloud the following takes place the monitoring activities for the component s that has a copy activated may be stopped and each component A copy through C copy and CBCE Copy can be activated with the latest data of the corresponding primary CBCE and components thereof or with the data as it was at a specific time in the past. It is possible to activate the copy CBCE and components thereof using the state of all or some of the primary CBCE and components thereof in exactly the same point in time e.g. for consistency groups support . External references which are not a part of the CBCE for example the DNS addresses of a site on an external DNS server are optionally updated automatically or manually .

In one embodiment it can be automatically detected when one or more components one or more CBCEs or any combination thereof can be put back to normal mode i.e. a mode in which the primary CBCE and its primary components resume operation and the second CBCE and or its second components cease functioning . Detection can also be performed manually followed by an instruction to begin the return of the component s the CBCE s or the combination s thereof to normal mode. The primary component s primary CBCE s or combination s thereof are synchronized with their respective copies so that all the changes made on the copy component s in copy CBCE including but not limited to information on their disks and the component configurations CBCE s or combination s thereof will be applied to their primary counterparts. These steps may be performed while the copy CBCE or its respective components are active.

In accordance with an embodiment it is possible to achieve a replication of a primary CBCE without continuously having to operate a secondary CBCE by performing the method described in more detail above i.e. the method described in on the copy component s of the copy CBCE copy CBCE s or combination s thereof followed by performing the method described in more detail above i.e. the method described in on the primary component s primary CBCE s or combination s thereof.

In another embodiment a return to normal mode can be performed on demand when leaving copy mode. Thus all changes performed on the copy component s of the copy CBCE copy CBCE s and combination s thereof are sent to the primary CBCE s and then applied on the primary component s thereof. The copy components and copy CBCEs are no longer synchronized respective of their primary counterparts. External references to the components brought from copy mode which are not part of the CBCE and for example the DNS addresses of a site on an external DNS server are optionally updated automatically or manually . The copy CBCE and or its respective components are optionally turned off and or destroyed. This failback operation therefore copies from the copy CBCE and components thereof all or essentially all of the changes made in the copy CBCE and components thereof to the primary CBCE and components thereof prior to reactivating or otherwise resuming the operation of the primary CBCE.

The embodiment disclosed herein can be implemented as hardware firmware software or any combination thereof including but not limited to software products. Moreover the software is preferably implemented as an application program tangibly embodied on a program storage unit or computer readable medium. The application program may be uploaded to and executed by a machine comprising any suitable architecture. Preferably the machine is implemented on a computer platform having hardware physical or virtual such as a processing unit CPU a memory and input output interfaces. The computer platform may also include an operating system and microinstruction code. The various processes and functions described herein may be either part of the microinstruction code or part of the application program or any combination thereof which may be executed by a CPU whether or not such computer or processor is explicitly shown. In addition various other peripheral units may be connected to the computer platform such as an additional data storage unit and a printing unit and or display unit.

All examples and conditional language recited herein are intended for pedagogical purposes to aid the reader in understanding the principles of the invention and the concepts contributed by the inventor to furthering the art and are to be construed as being without limitation to such specifically recited examples and conditions. Moreover all statements herein reciting principles aspects and embodiments of the invention as well as specific examples thereof are intended to encompass both structural and functional equivalents thereof. Additionally it is intended that such equivalents include both currently known equivalents as well as equivalents developed in the future i.e. any elements developed that perform the same function regardless of structure.

