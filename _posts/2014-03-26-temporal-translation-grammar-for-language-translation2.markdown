---

title: Temporal translation grammar for language translation
abstract: In language translation and intent understanding scenarios, the automated translation of expressions including temporal elements (e.g., calendar dates, date ranges, times, and durations) may be achieved by an implementation of translation techniques, such as compiled rule sets and/or machine learning recognizers that have been trained with a training set. However, sharing development resources among various implementations may be difficult; e.g., updates that extend a rule set for application of the translation techniques to a new context may be difficult to utilize while updating a machine learning recognizer. Presented herein are techniques for facilitating the development of temporal translation resources by providing a temporal translation grammar, comprising recognition rules that specify the recognition of temporal elements; normalization rules that specify the normalization of recognized temporal elements into normalized temporal elements and temporal intent; and translation rules that translate the normalized temporal elements of an expression into dates in a translated expression.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535904&OS=09535904&RS=09535904
owner: Microsoft Technology Licensing, LLC
number: 09535904
owner_city: Redmond
owner_country: US
publication_date: 20140326
---
Within the field of language translation many techniques may be utilized to identify normalize and or translate temporal elements of an expression that are associated with a date such as a calendar date a weekday a time of day or a duration. These techniques often involve the configuration of a device to apply a translation logic to the expression such as a rule set comprising a set of manually developed rules that respectively specify the translation of a temporal element of an expression into a translated expression or a machine learning recognizer that has been trained using a training data set to facilitate the translation of temporal elements into translated expressions. Many such techniques may be devised and implemented for a variety of contexts e.g. a first implementation may comprise a comparatively simple rule set that provides basic date translation for use on a mobile device having comparatively limited computational resources and a second implementation may comprise a robust machine learning recognizer and a sophisticated logic that together provide sophisticated highly accurate date translation for use on computationally plentiful servers.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The development and invocation of language translation resources for a variety of contexts as described in the foregoing manner may encounter some development difficulties. For example when rule sets that are developed manually for a particular context and machine learning recognizers that are trained using a training data set for a particular context it may be difficult to extend these language translation resources for other contexts such as localizing the resources for translation to a new language or dialect. In particular some techniques may utilize a variety of rule sets and or machine learning recognizers e.g. various resources devised for different devices and or services or a combination of such techniques and it may be difficult to share temporal translation resources among the development of such various implementations. That is while developing a first implementation for a first context e.g. a rule set for a mobile device and a second implementation for a second context e.g. a machine learning recognizer for a computationally robust service it may be difficult to develop a shared base of information that is utilized by the logic for both implementations. Additionally in order to extend such resources to new devices languages and or contexts developers may have to achieve such extensions by working with the specific implementations e.g. by developing new rules that utilize the same language as the existing rules and or by developing a new training data set that enables a machine language recognizer to be extended as desired. However such implementation specific development may introduce further complication in the already complicated field of automated temporal language evaluation.

Presented herein are techniques for developing temporal translation resources that are based on a temporal translation grammar comprising several sets of rules that together provide a translation pipeline for temporal elements in expressions. The temporal translation grammar includes at least one recognition rule that identifies a temporal element of an expression at least one normalization rule that normalizes a temporal element of the expression into a normalized temporal element and a translation rule that translates the normalized temporal element into a date which may be incorporated in a translated expression.

A temporal translation grammar of this type may be devised e.g. as a human readable implementation independent set of rules such as an extensible markup language XML file that indicates the various sets of rules comprising the temporal translation grammar. Specific implementations of various types may consume the temporal translation grammar in various ways e.g. a comprehensive language translation rule set may include the temporal translation grammar and a machine learning recognizer may be trained with both the training set and the temporal translation grammar and or may evaluate an expression together with the temporal translation grammar. These variations thus enable implementations based on a variety of techniques to share an implementation independent temporal translation grammar thereby facilitating the development of temporal translation resources in accordance with the techniques presented herein.

To the accomplishment of the foregoing and related ends the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects advantages and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.

The claimed subject matter is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident however that the claimed subject matter may be practiced without these specific details. In other instances structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.

In view of the significant language variance in temporal elements that each relate the same date s relating to the same basic fact it may be appreciated that configuring a computer to recognize and interpret the specified dates correctly may be difficult. In order to achieve such recognition e.g. in order to produce a translated expression that includes the date s identified by the various temporal elements a variety of language translation techniques may be implemented. A first computer may include a rule set that has been compiled by a developer to translate the temporal elements of expressions in order to generate the translated expression while a second computer may include a machine learning recognizer e.g. an artificial neural network genetically derived algorithm and or Bayesian classifier that has been trained on a training data set to recognize temporal elements and may invoke the machine learning recognizer to identify and translate the temporal elements of the expressions . Other computers may include a combination of such techniques optionally in conjunction with other techniques in order to translate the expressions .

Among the range of available implementations of temporal translation resources particular implementations may vary in terms of accuracy translation speed ease of maintenance extensibility to new contexts e.g. other languages or dialects and or the efficient use of computational resources. In some scenarios these characteristics may represent a tradeoff and for a suitable translation context e.g. based on the resources of a particular computer a suitable implementation may be selected as a balance of these tradeoffs. For example for a computer with comparatively constrained computational resources such as a mobile phone a simple rule set may be implemented that is capable of correctly recognizing only the simplest temporal elements e.g. only the first two expressions in but may do so in a rapid and resource efficient manner. Conversely for a computer with comparatively plentiful computational resources such as a server a more robust implementation utilizing a machine learning recognizer may be selected that is capable of accurately recognizing a large body of varying temporal elements e.g. many of the expressions of and may fully utilize the computational resources of the server to achieve this result in a rapid manner. In these and other ways a temporal language translation platform may exhibit various characteristics based on the type and details of the selected implementation.

However it may be appreciated that as development continues for such implementations e.g. as the refinement of an implemented temporal translation library of a computer or as the deployment of an implemented temporal translation library across a variety of computers having different characteristics the ease of further developing such resources and or of sharing such extensions among different embodiments may be significant but difficult to achieve. As a first example the extension of a resource for a new context e.g. localization for a new country or language may depend on the nature of the implementation. For example a rule set may be extended by compiling an updated set of rules and a machine learning recognizer may be extended by developing an additional training data set including cases featuring the new features and training the machine learning recognizer on the additional training data set. Achieving such an extension of a resource thus entails a full understanding of the nature of the resource and the manner of providing the extension in accordance with the selected implementation. As a second example scenarios involving the development of temporal translation resources on a variety of devices may entail different implementations e.g. a computationally conservative rule based temporal translation library on a mobile device and a computationally expensive machine learning based temporal translation library on a server . However while developing an extension of this set of resources into a new context it may be difficult to share an extension among two or more implementations. For example a rule set may be extended by compiling an updated set of rules and a machine learning recognizer may be extended by developing an additional training data set including cases featuring the new features and training the machine learning recognizer on the additional training data set but these development efforts are not intercompatible.

As an example in the case of the expression The Twenties the temporal translation grammar of the exemplary scenario of is applied in the following manner. First a temporal element recognition is applied wherein the recognition rule identifies the phrase Twenties as a temporal element . Second a normalization is applied wherein the normalization rule indicates the translation of the temporal element Twenties to the normalized temporal element 2X . Third a translation is applied wherein the translation rule specifies that the phrase The Twenties is translated as 19 plus the normalized temporal element 2X resulting in a translated expression with the date 192X indicating all years between 1920 and 1929. In this manner the temporal translation grammar in the exemplary scenario of is applicable to achieve the automated translation of a temporal element of an expression into a date of a translated expression in accordance with the techniques presented herein.

The exemplary scenario of further illustrates that the temporal translation grammar is usable by a temporal translation system utilizing a variety of implementations and techniques such as a rule set based on the temporal translation grammar and a machine learning recognizer that utilizes the temporal translation grammar in conjunction with training utilizing a training data set. Because the temporal translation grammar is specified in an implementation independent manner these various implementations may utilize the temporal translation grammar as a shared base of temporal translation logic. Accordingly the contents of the temporal translation grammar are specified in a manner that is comparatively easy for developers to understand as it is not constrained to the details of a particular implementation. Additionally disparate implementations may be updated and or adapted for a new context simply by updating the temporal translation grammar . These and other advantages may be achievable through the provision of a temporal translation grammar for use by various temporal translation systems in accordance with the techniques presented herein.

Still another embodiment involves a computer readable medium comprising processor executable instructions configured to apply the techniques presented herein. Such computer readable media may include e.g. computer readable storage devices involving a tangible device such as a memory semiconductor e.g. a semiconductor utilizing static random access memory SRAM dynamic random access memory DRAM and or synchronous dynamic random access memory SDRAM technologies a platter of a hard disk drive a flash memory device or a magnetic or optical disc such as a CD R DVD R or floppy disc encoding a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein. Such computer readable media may also include as a class of technologies that are distinct from computer readable storage devices various types of communications media such as a signal that may be propagated through various physical phenomena e.g. an electromagnetic signal a sound wave signal or an optical signal and in various wired scenarios e.g. via an Ethernet or fiber optic cable and or wireless scenarios e.g. a wireless local area network WLAN such as WiFi a personal area network PAN such as Bluetooth or a cellular or radio network and which encodes a set of computer readable instructions that when executed by a processor of a device cause the device to implement the techniques presented herein.

An exemplary computer readable medium that may be devised in these ways is illustrated in wherein the implementation comprises a computer readable storage device e.g. a CD R DVD R or a platter of a hard disk drive on which is encoded computer readable data . This computer readable data in turn comprises a set of computer instructions configured to operate according to the principles set forth herein. In one such embodiment the processor executable instructions may be configured to perform a method of causing a computer to translate expressions such as the exemplary method of . In another such embodiment the processor executable instructions may be configured to implement a system configured to cause a computer to translate expressions such as the exemplary system of . Some embodiments of this computer readable medium may comprise a computer readable storage device e.g. a hard disk drive an optical disc or a flash memory device that is configured to store processor executable instructions configured in this manner. Many such computer readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.

The techniques discussed herein may be devised with variations in many aspects and some variations may present additional advantages and or reduce disadvantages with respect to other variations of these and other techniques. Moreover some variations may be implemented in combination and some combinations may feature additional advantages and or reduced disadvantages through synergistic cooperation. The variations may be incorporated in various embodiments e.g. the exemplary method of and the exemplary system of to confer individual and or synergistic advantages upon such embodiments.

A first aspect that may vary among embodiments of these techniques relates to the scenarios wherein such techniques may be utilized.

As a first variation of this first aspect the techniques presented herein may be utilized to achieve the configuration of a variety of computers such as workstations servers laptops tablets mobile phones game consoles portable gaming devices portable or non portable media players media display devices such as televisions appliances home automation devices and supervisory control and data acquisition SCADA devices.

As a second variation of this first aspect the techniques presented herein may be utilized to translate many types of temporal elements such as calendar dates times date collections date ranges and durations. Additionally the techniques presented herein may be utilized to translate such temporal elements while performing translation among many types of languages including natural languages such as spoken written and gestural languages formal languages such as mathematical equations and programming languages and unstructured text content. In some circumstances the language of the expression may not be known and may have to be recognized or a variety of languages may be utilized and different translation techniques may be applied to the respective portions of the expression for each language. Such techniques may also be applicable to many types of translation including the normalization of expressions in a language the translation of expressions from a first dialect of a language to a second dialect of the same language the translation of expressions from a first modality of a language to a second modality such as translating spoken English to written English the translation of expressions between two languages the translation of expressions into a standardized format such as an ISO 8061 date and time format comparisons of expressions and corresponding translated expressions such as the validation of a translation algorithm and the training of language processors such as semantic parsing of expressions . These and other scenarios may be suitable for applications of the techniques presented herein.

A second aspect that may vary among embodiments of the techniques presented herein involves the implementation of such techniques in devices that perform translation of expressions .

As a first variation of this second aspect the respective rules of the temporal translation grammar may be specified in various ways. As presented in the exemplary scenario of the respective rules of the temporal translation grammar may comprise e.g. declarative instructions specified in a human readable format such as an extensible markup language XML schema. Alternatively the rules may be specified in a programming language such as an interpretable script or compilable source code document or in a machine language such as a partially or wholly compiled binary. As further illustrated in the exemplary scenario of the rules may be specified e.g. as regular expressions such as the recognition rule that provides a regular expression for matching temporal elements of expressions as declarative instructions such as the normalization rules associating particular temporal elements of an expression with normalized temporal elements e.g. twenties normalized as 2X and or programming instructions such as the translation rules providing a programming instruction that is executable to concatenate a string and the output parameter of a normalize function call and assign it to the year value of a timex object .

As a second variation of this second aspect embodiments of the techniques presented herein involve applying a temporal translation grammar to a provided expression but such application may be implemented in various ways. As a first such example the temporal translation grammar may be compiled into a rule set such as a partially or wholly compiled binary that instructs a computer to apply the rules of the temporal translation grammar to the expressions . For example a compiled rule set may be provided to identify the temporal elements of expressions and an expression translator may invoke the compiled rule set with an expression to identify the temporal elements of the expression according to the temporal training grammar . As a second such example the temporal translation grammar may be used to inform a machine learning recognizer . For example the temporal translation grammar may be provided with a training set in order to guide the training of the machine learning recognizer to recognize normalize and or translate temporal elements of expressions to dates of translated expressions . Alternatively or additionally the temporal translation grammar may be provided as input to the machine learning recognizer to translate the temporal elements of a particular expression to dates e.g. an expression translator may invoke the machine learning recognizer with the temporal recognition grammar to recognize the temporal elements of the expression . A combination of such techniques may be utilized e.g. the recognition rules may comprise a set of regular expressions while the normalization rules may comprise a compiled rule set and the translation rules may comprise a machine learning recognizer that is trained to translate normalized temporal elements into dates of a translated expression and that is invoked with the temporal translation grammar to achieve the translation of the temporal elements of a particular expression . These and other implementations may be devised to translate the temporal elements of expressions in accordance with the techniques presented herein.

A third aspect that may vary among embodiments of the techniques presented herein relates to the contents of the logic embodied by the temporal translation grammar that achieves the recognition normalization and translation of temporal elements of expressions .

As a first variation of this third aspect the rules of the temporal translation grammar may recognize normalize and or translate various combinations of temporal elements or temporal elements specified in the expression in various ways. The exemplary scenario of provides a set of such examples to which the rules of the temporal translation grammar may be oriented. Additionally an embodiment may recognize only a portion of an expression and may leave the remainder of the expression untranslated e.g. where the remainder does not include temporal elements where the temporal elements are ambiguous and difficult to translate into a specific translated temporal element or where the temporal element is equivalent to the translated temporal element.

As a first example of this first variation of this third aspect an expression may comprise a first temporal element and a second temporal element e.g. moon landings occurred in 69 and in the early 1970 s and the rules of the temporal translation grammar may apply to the expression a first normalization rule to normalize the first temporal element of the expression to a first normalized temporal element e.g. normalizing 69 as identifying the year 1969 and a second normalization rule that is different from the first normalization rule and that normalizes the second temporal element of the expression to a second normalized temporal element e.g. normalizing the early 1970 s to the period of 1970 1975 .

As a second example of this first variation of this third aspect at least one selected normalized temporal element may be associated with at least two dates such as a collection of years or a date range specified from a start date to an end date e.g. the range 1971 1972 or Monday Wednesday and at least one selected translation rule of the temporal translation grammar may translate the selected normalized temporal element into at least two dates e.g. the year 1971 and the year 1972 or calendar dates corresponding to the Monday Tuesday and Wednesday weekdays of a particular week . As another example at least one selected normalized temporal element may be associated with a portion of a date range such as one or more seasons that occur annually during a year and the translation may result in translated temporal elements that specify typical dates within each year for the specified seasons.

As a second variation of this third aspect a computer embodying the techniques presented herein may have access to a knowledge store comprising at least one fact and the temporal translation grammar may include rules that utilize the knowledge store to translate the normalized temporal elements of an expression into a date using the facts of the knowledge store. For example a user of the computer may also provide a user profile such as a social profile with a social network and the expressions of the user may invoke facts associated with the facts of the user profile such as the user s birthday. The temporal translation grammar may include rules that enable the use of such facts in the identification of such temporal expressions e.g. a recognition rule providing a regular expression such as s birthday to identify this portion of the expression as a temporal element a normalization rule providing a normalization of such a temporal element such as specifying the location within the user profile of the specified individual where his or her birthday may be found and or a translation rule providing a translation of the normalized temporal element . Such contextual knowledge may also be utilized e.g. to determine an anchor date relative to which the temporal elements of the expression are specified. For example an expression such as the Monday after John s birthday may be evaluated by the temporal translation grammar by first recognizing the Monday after as a temporal element and John s birthday as an anchor date by accessing the knowledge store to determine the date of John s birthday and by applying a normalization rule and or translation rule to determine the calendar date of the Monday following the birthdate of the individual named John. Many such variations in the logic exhibited in the recognition normalization and or translation of the temporal elements of the expressions may be included in temporal translation grammars in accordance with the techniques presented herein.

A fourth aspect that may vary among embodiments of the techniques presented herein involves additional features that may be included in some embodiments.

As a first variation of this fourth aspect some embodiments may include a grammar extender that adds to the temporal translation grammar at least one rule provided by an application of the computer . For example one or more applications may provide one or more supplemental recognition rules normalization rules and or translation rules that may extend the temporal translation grammar for a new domain e.g. a cultural holidays database may provide such rules to enable the recognition normalization and translation of temporal elements associated with the holidays of a particular culture.

As a second variation of this fourth aspect one or more rules may include instructions that are to be applied to the expression and or normalized temporal elements in particular conditions. For example a normalization rule may comprise a normalization condition that is associated with a temporal element of the expression and at least one normalization instruction to be performed when the normalization condition is satisfied e.g. the normalization rule may specify that upon identifying a temporal element specified as next leap year the computer is to execute instructions that determine the next leap year following the current year and to select the calendar year as the normalized temporal element for this temporal element . The translation may also identify parts of speech of the expression and may identify the temporal elements of the expression through part of speech evaluation e.g. in view of a typical characterization of dates and times as nouns such as Saturday is a holiday or adjectives such as The Saturday appointment is canceled . Such instructions may be specified e.g. as compiled code to be invoked upon the expression to achieve the specified normalization. The computer may accordingly be configured to upon determining that a temporal element of the expression satisfies the normalization condition of the selected normalization rule apply the normalization instructions of the selected normalization rule to the expression .

As a third variation of this fourth aspect in addition to applying the temporal translation grammar to the expression an embodiment may further substitute the respective temporal elements of the expression with the dates achieved by such application e.g. in addition to determining the dates referenced by the temporal elements the computer may insert the determined dates into a translated expression . In an embodiment this insertion is achieved with the date formatted according to a standardized date format such as the timex format.

Although not required embodiments are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like. Computer readable instructions may be loaded in memory for execution by processing unit for example.

The term computer readable media as used herein includes computer readable storage devices. Such computer readable storage devices may be volatile and or nonvolatile removable and or non removable and may involve various types of physical devices storing computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage storage devices include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape and magnetic disk storage or other magnetic storage devices.

Device may also include communication connection s that allows device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB Firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments provided herein. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

As used in this application the terms component module system interface and the like are generally intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a controller and the controller can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Furthermore the claimed subject matter may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Various operations of embodiments are provided herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment provided herein.

Moreover the word exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as advantageous over other aspects or designs. Rather use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or . That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims may generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form.

Also although the disclosure has been shown and described with respect to one or more implementations equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components e.g. elements resources etc. the terms used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. that is functionally equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore to the extent that the terms includes having has with or variants thereof are used in either the detailed description or the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

