---

title: Securing application information in system-wide search engines
abstract: Securing application information in a shared, system-wide search service, in which each application can register a security filtering module that is to be used at search time to filter data associated with that application. Initial, unfiltered search results are obtained based on the contents of the shared search index, and are organized by application. Previously registered filter modules are called to perform user specific, per-application filtering on the initial results, such that data to which the user issuing the search request does not have access is removed from the search results, resulting in a set of filtered search results that are presented to the user and that contain indications only of data that is accessible to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09230083&OS=09230083&RS=09230083
owner: International Business Machines Corporation
number: 09230083
owner_city: Armonk
owner_country: US
publication_date: 20141130
---
The present invention relates generally to search indexes and more specifically to a method and system for securing application information for multiple applications and users in a system wide search engine.

In order to improve performance of operations such as searches sorts and others it is often useful to create and maintain a search index data structure. A search index enables efficient matching of tokens within a search query to documents containing those tokens. For the contents of a document to be represented in a search index the document must go through an indexing step resulting in information describing the document contents being added to the index.

As search services become foundation services provided on a desktop e.g. Google Desktop Search or as part of the underlying operating system itself e.g. Microsoft Windows it becomes natural that applications not implement their own search features but instead index their data using a shared system wide index. For example a messaging application that provides a searchable history of messages might not implement its own search index but instead could simply be designed to push or otherwise make messages it desires to be indexed available to a shared global index.

In order to support search indexes that are shared across multiple applications providers of existing search technologies are publishing APIs Application Programming Interfaces that allow applications to push their data into the index. One example of such an approach is found in the Microsoft IFilter API. This API is used by the Microsoft Windows operating system to make various file types searchable by a service that is part of the operating system. To make files of a specific type searchable applications must implement a specific interface create an indexing filter and register the indexing filter for a specific file extension. When the service detects a new file or a change in a file it loads the indexing filter associated with the file type and uses it to index the content of the file.

Another example of an existing search technology API is found in the Google Desktop SDK System Developer s Kit . This API has two flavors 1 an API similar to the Microsoft IFilter API through which applications register indexing filters for corresponding file types and the indexer uses the specific indexing filter when a file of the corresponding type is indexed in a pull operation and 2 an API that allows applications to push data directly into the index.

A significant shortcoming exists in these existing solutions since they operate at indexing time only and accordingly are limited with respect to providing security. Specifically these systems are inadequate when a centralized search index may contain data on behalf of several different users. In that case there is a need for a search service that processes search results so that results are only presented to a user if that user has access to the corresponding data. Moreover since security logic usually belongs to the application from which the data was indexed in the first place appropriate search result filtering cannot be performed by existing systems since they do not provide a mechanism for accessing each application s security logic at search time.

Other existing technology has provided security with regard to a specific type of content. In IBM Websphere Portal a security model has been used based on Portal Access Control with regard to Portal Pages that are indexed. This type of approach although providing an index with secured data is restricted to using only one security mechanism Portal Access Control and only one content type Portal Pages . A system level search service should instead provide an extensible framework in which multiple applications can conveniently introduce new content types and new security mechanisms for such new content types.

For the above reasons and others it would be desirable to have a new system for securing application information in a shared system wide search service.

To address the above described and other shortcomings of prior solutions a new method and system are disclosed for securing application information in a shared system wide search service. In the disclosed system each application can register a security filtering module that is to be used at search time to filter data associated with that application based access rights of the user issuing the search as defined by the application.

When a user performs a search initial unfiltered search results are obtained based the query and all the contents of the shared search index. The unfiltered search results are organized by application such that those search results indicating data passed to the index from Application A are grouped together those search results indicating data passed to the index from Application B are grouped together and so on.

After the initial search results are obtained one or more previously registered filter modules are called to perform user specific per application access filtering. The filtering performed by the filter modules causes data to which the user issuing the search request does not have access to be removed from the initial search results on a per application basis. Thus the filter registered for Application A determines which of the initial search results associated with Application A are accessible to the user the filter registered for Application B determines which of the initial search results associated with Application B are accessible to the user and so on. Those of the initial search results that are determined to not be accessible to the user issuing the search request are removed resulting in a set of filtered search results that may be displayed or otherwise delivered to the user. The filtered search results thus contain indications only of data that is accessible to the user. In this way the system wide search service filters search results to remove indications of data which match the search criteria provided by the user but to which the user does not have access based on a conveniently extensible per application search result filtering process.

The disclosed system can securely index and search information that is relevant to multiple users. By allowing registration of external security mechanisms an extensible search service is provided enabling new applications to participate in both the indexing of their content and the filtering of search results based on individual user s security credentials. Secure filtering is provided as part of a core search engine that allows existing search interfaces to return secure search results for new applications without prior knowledge of the design or existence of the new applications.

As shown in an illustrative embodiment of the disclosed system includes a Shared Search Index that is shared by multiple computer application programs show for purposes of illustration as including an Application and an Application . Each of the applications sharing the Shared Search Index may further have multiple users shown for purposes of illustration by User and User of Application . The applications sharing the Shared Search Index may include any specific kind or type of computer application program such as communications programs including electronic mail instant messaging and the like document editing programs such as word processors text or video editors and the like and or any other specific kind of application program that manipulates computer data during its operation.

During operation of the components shown in each of the applications sharing the Shared Search Index and requiring security filtering on search results registers a corresponding security filtering software module shown for purposes of illustration by the Application Filtering Module and the Application Filtering Module . The Application Filtering Module corresponds to Application and is registered by Application and the Application Filtering Module corresponds to Application and is registered by Application .

Registration of a security filtering module causes that security filtering module to be associated with the application that registered it. Accordingly when Application Filtering Module is registered by Application the result is an association between Application Filtering Module and Application and when Application Filtering Module is registered by Application the result is an association between Application Filtering Module and Application . The association between an application and the corresponding security filtering module is known by or stored within the Shared Search Index in any appropriate type of data structure such as for example a table or the like.

Each application using the Shared Search Index may use a credential system provided in the underlying execution platform support a form of single sign on or some alternative credential system that does not support single sign on. Authentication credentials for any of these approaches may be stored in and retrieved from a credential store such as the Credential Vault shown in .

In one embodiment security filtering modules that use independent application specific authentication systems are permitted to extend an underlying execution platform s authentication mechanism. Mappings between the identity of a user logged in to the underlying execution platform and application specific authentication credentials for that user may accordingly be established to be used by individual security filtering modules. Such mappings enable the individual security filtering modules to associate a currently logged in user that has been authenticated by the underlying application platform with application specific credentials for that user. The security filtering module can then use the application specific credentials to obtain access information describing which documents associated with the corresponding application the user has access to. For example the User ID of the user for the underlying platform can be mapped to previously stored credentials for an application. In order to obtain application specific credentials that have not previously been stored user name and password prompts or the like may generated to the user for each application for which credentials have not yet been obtained for that user. Such mapping information that maps a currently logged in user to application specific credentials may for example be stored at registration time with the application specific credentials in the Credential Vault and subsequently be retrieved by individual security filtering modules when filtering search results.

The application programs sharing the Shared Search Index the Shared Search Index the application filtering modules and and the Credential Vault may each be embodied as program code stored in and executing on one or more computer systems each of which may for example include at least one processor program storage such as memory for storing program code executable on the processor and one or more input output devices and or interfaces such as data communication and or peripheral devices and or interfaces as well as appropriate operating system software.

While for purposes of clear illustration and concise explanation shows only two applications sharing the Shared Search Index and two corresponding security filtering modules and the disclosed system is not so limited and those skilled in the art will recognize that there may be any specific number of applications sharing the Shared Search Index each of which may have a corresponding security filtering module.

Documents may be obtained from applications through either push or pull models. For example in a push model documents are passed to the Shared Search Index by individual applications through an API provided for this purpose. Alternatively in a pull model a process sometimes referred to as a crawler operates on behalf of the Shared Search Index to automatically index crawl through the documents associated with all the applications.

The index entries are all associated with an entry for doc in the Document Application Table . Entry indicates that doc was obtained from an application App by way of the tag that it contains. Those of entries describing the contents of another document doc might indicate the entry in the Document Application Table where the entry indicates that doc was obtained from an application App by way of the tag that entry contains.

Similarly the Matching Application Data is passed to the Application Filtering Module . The Application Filtering Module obtains any credentials needed to authenticate User with Application from the Credential Vault as part of the Credentials . The Application Filtering Module then uses such credentials to authenticate User through any authentication system that may be used by Application . The Application Filtering Module then determines which of the documents indicated by the Matching Application Data can be accessed by User and removes any documents that User cannot access from the Matching Application Data . The result is the Matching Application Data Accessible to User in the Filtered Results Set . The Matching Application Data Accessible to User thus contains only indications of those documents obtained by the Shared Search Index for indexing from the Application that match the Search Query and that are accessible to User . The determination of which documents of the documents obtained from Application and matching the Search Query that are accessible to User is made by the Application Filtering Module based on the access rights for User as defined by Application which had previously registered Application Filtering Module for this purpose.

As a result of the above described operations of the Application Filtering Module and the Application Filtering Module the Filtered Results Set can be displayed to User without displaying any indications of documents to which User does not have access.

In one embodiment the interface for each security filtering module provides a method similar to bitset hasAccess Userinfo DocumentId where UserInfo provides enough information to the module so that the module can use an underlying execution platform s User ID for the user a Lightweight Third Party Authentication LTPA token for single sign on operation or perform a mapping to a different application specific User ID from the Credential Vault . The list DocumentId contains all the documents in the initial search results that are associated with the corresponding application and the returned bitset contains corresponding bits having values indicating those of the documents in DocumentId to which the user issuing the search request has access.

At step the disclosed system processes a search query obtained from a user based on per application user access information applied through the registered security filtering modules corresponding to each application. For example a set of initial search results that include all documents matching the search query and potentially organized by originating application may be filtered by the registered security filtering modules to remove those documents from the search results to which the user does not have access based on per application user access rights. After application of the registered security filtering modules at step at step filtered search results can be returned and displayed that do not contain any indications of documents to which the user that requested the search does not have access.

The disclosed system results in a number of specific advantages over prior solutions. One noteworthy advantage of the disclosed system is that it is a secure platform wide full text search framework that is extensible in that it supports dynamic registration of additional application specific security filtering modules.

The disclosed system can take the form of an entirely software embodiment an entirely hardware embodiment or an embodiment containing both software and hardware elements. The figures include block diagram and flowchart illustrations of methods apparatus s and computer program products according to an embodiment of the invention. It will be understood that each block in such figures and combinations of these blocks can be implemented by computer program instructions. These computer program instructions may be loaded onto a computer or other programmable data processing apparatus to produce a machine such that the instructions which execute on the computer or other programmable data processing apparatus create means for implementing the functions specified in the block or blocks. These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function specified in the block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the block or blocks.

Those skilled in the art should readily appreciate that programs defining the functions of the present invention can be delivered to a computer in many forms including but not limited to a information permanently stored on non writable storage media e.g. read only memory devices within a computer such as ROM or CD ROM disks readable by a computer I O attachment b information alterably stored on writable storage media e.g. floppy disks and hard drives or c information conveyed to a computer through communication media for example using wireless baseband signaling or broadband signaling techniques including carrier wave signaling techniques such as over computer or telephone networks via a modem.

While the invention is described through the above exemplary embodiments it will be understood by those of ordinary skill in the art that modification to and variation of the illustrated embodiments may be made without departing from the inventive concepts herein disclosed.

