---

title: Power management scheme that accumulates additional off time for device when off for an extended period and credits additional off time to power control feedback loop when awakened
abstract: In one embodiment, a system includes a power management controller that controls a duty cycle of a processor to manage power. By frequently powering up and powering down the processor during a period of time, the power consumption of the processor may be controlled while providing the perception that the processor is continuously available. Before powering the processor up, the power management control may determine whether or not there is work for the processor to perform. If there is no work to perform, the power management control may delay powering the processor up until there is work to perform, saving additional power. This additional power savings may be tracked, and may serve as a “credit” for the processor when subsequently powered up again.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09348393&OS=09348393&RS=09348393
owner: Apple Inc.
number: 09348393
owner_city: Cupertino
owner_country: US
publication_date: 20140828
---
This application is a divisional of U.S. patent application Ser. No. 13 329 675 filed Dec. 19 2011 and now U.S. Pat. No. 8 856 566 which is a continuation of U.S. patent application Ser. No. 13 326 614 filed Dec. 15 2011 and now abandoned.

Embodiments described herein are related to the field of power management in integrated circuits and systems employing integrated circuits.

As the number of transistors included on an integrated circuit chip continues to increase power management in the integrated circuits continues to increase in importance. Power management can be critical to integrated circuits that are included in mobile devices such as personal digital assistants PDAs cell phones smart phones laptop computers net top computers etc. These mobile devices often rely on battery power and reducing power consumption in the integrated circuits can increase the life of the battery. Additionally reducing power consumption can reduce the heat generated by the integrated circuit which can reduce cooling requirements in the device that includes the integrated circuit whether or not it is relying on battery power .

Clock gating is often used to reduce dynamic power consumption in an integrated circuit disabling the clock to idle circuitry and thus preventing switching in the idle circuitry. Additionally some integrated circuits have implemented power gating to reduce static power consumption e.g. consumption due to leakage currents . With power gating the power to ground path of the idle circuitry is interrupted reducing the leakage current to near zero.

Power gating can be an effective power conservation mechanism. On the other hand power gating reduces performance because the power gated circuitry cannot be used until power is restored and the circuitry is initialized for use. The tradeoff between performance especially perceived performance from the user perspective and power conservation is complex and difficult to manage.

In one embodiment a system includes a power management controller that controls a duty cycle of a processor to manage power. The duty cycle may be the amount of time that the processor is powered on as a percentage of the total time to complete a task. By frequently powering up and powering down the processor during a period of time the power consumption of the processor may be controlled while providing the perception that the processor is continuously available. For example the processor may be a graphics processing unit GPU and the period of time over which the duty cycle is managed may be a frame to be displayed on the display screen viewed by a user of the system.

Before powering the processor up the power management control may determine whether or not there is work for the processor to perform. For example in the case of a GPU there is work to perform is there are graphics objects to be rendered into a frame. If there is no work to perform the power management control may delay powering the processor up until there is work to perform saving additional power. This additional power savings may be tracked and may serve as a credit for the processor when subsequently powered up again. Using the credit the processor may be permitted to consume more power than would otherwise be permitted which may improve overall performance. For example in an embodiment the power management control may include a feedback loop to control power consumption by the processor over time. The power management control may account for the credit by exercising the feedback loop with a zero power consumption input. The feedback loop may be exercised for a number of iterations determined from the credit.

While the invention is susceptible to various modifications and alternative forms specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood however that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed but on the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the present invention as defined by the appended claims. The headings used herein are for organizational purposes only and are not meant to be used to limit the scope of the description. As used throughout this application the word may is used in a permissive sense i.e. meaning having the potential to rather than the mandatory sense i.e. meaning must . Similarly the words include including and includes mean including but not limited to.

Various units circuits or other components may be described as configured to perform a task or tasks. In such contexts configured to is a broad recitation of structure generally meaning having circuitry that performs the task or tasks during operation. As such the unit circuit component can be configured to perform the task even when the unit circuit component is not currently powered on because it includes the circuitry that implements the task. In general the circuitry that forms the structure corresponding to the task may include hardware circuits and or memory. The memory may store program instructions that are executable to implement the operation. The memory can include volatile memory such as static or dynamic random access memory. Additionally or in the alternative the memory may include nonvolatile memory such as optical or magnetic disk storage flash memory programmable read only memories etc. Similarly various units circuits components may be described as performing a task or tasks for convenience in the description. Such descriptions should be interpreted as including the phrase configured to. Reciting a unit circuit component that is configured to perform one or more tasks is expressly intended not to invoke 35 U.S.C. 112 paragraph six interpretation for that unit circuit component.

In one embodiment the power management unit described below may be configured to manage the duty cycle of a processor to control its power consumption. The power management unit may be configured to permit the processor to temporarily exceed a power budget for the processor as long as the average power consumed remains within budget. The power management unit may implement a negative feedback loop based on the actual power consumed and the target power and may use the error between the actual power and target power to control the duty cycle. The error in the case that the actual power is lower than the target power may be used for bursts of high power consumption when the workload of the processor increases.

Additionally the power management unit may be configured to extend the power down time of the processor at the end of the power down portion of the duty cycle if there is no work for the processor to perform. That is tasks e.g. threads may be scheduled for the processor in a task queue or other data structure in memory. If the task queue is empty or the number of tasks in the queue is low enough that there is no urgent need for processor execution the power off time may be extended.

The power management unit may be configured to monitor the amount of additional off time that the processor experiences. The additional off time conserves more power than the feedback loop was expecting and may be used as a credit to permit additional power consumption by the processor. For example the feedback loop may receive an indication of the additional off time and may lengthen the on time in subsequent duty cycles based on the credit. In an embodiment the feedback loop may be iterated a number of times to cover the additional off time and the actual processor power input to the feedback loop may be set to zero. For example the feedback loop may be iterated at an approximately fixed time interval while the processor is powered up and the feedback loop may be iterated until the number of iterations multiplied by fixed interval is approximately equal to the additional off time. Alternatively or in addition the feedback loop may be re initialized to an average processor power of zero if additional off time greater than a threshold has been accumulated.

Some of the embodiments below use a GPU as an example of the processor for which the power management unit is used. However other embodiments may implement the power management unit with any processor e.g. a central processing unit CPU other special purpose processors such as input output processors IOPs digital signal processors DSPs embedded processors microcontrollers etc. . Still further other embodiments may implement the power management to control fixed function circuitry.

The PMU is configured to generate voltage requests to the power supply which is configured to supply the requested voltages on one or more voltage inputs to the IC . More particularly the PMU may be configured to transmit a request for a desired voltage magnitude including a magnitude of zero when the corresponding circuitry is to be powered down in some embodiments . The number of independent voltage inputs supported by the IC may vary in various embodiments. In the illustrated embodiment the Vinput is supported for the GPU along with a Vinput for the CPU and a Vinput for the rest of the integrated circuit . Each voltage input may be provided to multiple input pins on the integrated circuit to support enough current flow and power supply voltage stability to the supplied circuitry. Other embodiments may power the CPU with a separate supply but the GPU may receive the Vsupply. Still other embodiments may include other non CPU voltage supplies besides the Vand Vinputs.

The supply voltage to power gated circuits such as the GPU may be controlled via voltage requests from the PMU but may also be controlled via power gate controls issued internally by the PMU e.g. the Power Gate control signals shown in . Gating the power internally may be performed more quickly than issuing voltage requests to the power supply and powering up may be performed more quickly as well . Accordingly voltage requests to the power supply may be used to vary the magnitude of the supply voltage to adjust an operating point of the GPU and the power gating during times that the GPU is sleeping or off may be controlled internal to the IC .

As mentioned above the PMU may implement a negative feedback loop to control power consumption in the GPU . The PMU may be configured to adjust the duty cycle of the GPU responsive to the error between a target power and the actual power. Generally the duty cycle may be viewed as a limit to the percentage of time that the GPU is on not power gated in a given period of time. The percentage of time that the GPU is on in a given period of time may be the utilization. For example the duty cycle and utilization may be measured over a frame time where a frame time is the period of time elapsing for the display of one frame on a display device such as monitor a touch screen display etc. Viewed in another way the utilization may be the ratio of the GPU s powered up time to an overall time for the display of multiple frames. In other embodiments that control other processors or fixed function circuitry the utilization may similarly be defined as the on time of the controlled circuitry to the total time.

The target power may be determined in a variety of fashions. For example the target power may be programmed in a register in the PMU . Alternatively the target power may be based on the operating temperature in the system e.g. as measured by the temperature sensors A B . In yet another example for a portable system that operates on a limited power supply such as a battery the target power may be based on the remaining battery life. Combinations of the above factors and or other factors may be used to determine the target power.

The actual power consumed may be measured e.g. by the power measurement circuit or by a similar circuit internal to the IC . Alternatively the actual power may be estimated as a function of the activity in the GPU and a profile of the power consumption of various parts of the GPU . The profile may be based on simulation of the GPU design and or based on measurements of the GPU in operation.

The PMU and or various components thereof such as shown in in an embodiment may be implemented as any combination of hardware circuitry and or instructions executed on one or more processors such as the CPU and or the GPU . The instructions may be stored on a computer accessible storage medium such as that shown in . Accordingly a power management unit power control unit or controller may be any combination of hardware and or processor execution of software in various embodiments.

The power measurement circuit may e.g. be configured to measure the current flow on the Vsupply. Based on the requested voltage the power consumed in the GPU may be determined either by the power measurement circuit or the PMU . The power measurement circuit may e.g. be readable by software to determine the current power measurement or may supply the current power measurement on an input to the IC . In cases in which the additional off time is being credited within the feedback loop the power measured by the power measurement circuit may be overridden to set the input power consumption to the feedback loop to zero.

The clock generator may supply clocks to the CPU CPU Clk in the GPU GPU Clk in the PMU and any other circuitry in the IC . The clock generator may include any clock generation circuitry e.g. one or more phase lock loops PLLs digital delay lock loops DLLs clock dividers etc. . The clock generator may be programmed by the PMU to set the desired clock frequencies for the CPU clock the GPU clock and other clocks.

Together the supply voltage and clock frequency of a circuit in the IC may be referred to as an operating point for the circuit. The operating point may directly affect the power consumed in the circuit since the dynamic power is proportional to the frequency and to the square of the voltage. Accordingly the reduced power consumption in the circuit when both the frequency and the voltage are reduced may be a cubic effect. However operating point adjustments which change only the frequency or only the voltage may be made also as long as the circuitry operates correctly at the selected frequency with the selected voltage .

The CPU may be any type of processor and may implement an instruction set architecture. Particularly the CPU may implement any general purpose instruction set architecture. The CPU may have any microarchitecture including in order or out of order speculative or non speculative scalar or superscalar pipelined multithreaded etc.

The GPU may implement any graphics application programming interface API architecture. The graphics API architecture may define an abstract interface that is specially purposed to accelerate graphics operations. The GPU may further support various languages for general purpose computation e.g. OpenCL etc.

The temperature sensors A B may be any type of temperature sensing circuitry. When more than one temperature sensor is implemented the temperature sensors may be physically distributed over the surface of the IC . In a discrete implementation the temperature sensors may be physically distributed over a circuit board to which the discrete components are attached. In some embodiments a combination of integrated sensors within the IC and external discrete sensors may be used.

It is noted that while the illustrated embodiment includes components integrated onto an IC other embodiments may include two or more ICs and any level of integration or discrete components.

Turning next to a block diagram of one embodiment of the PMU is shown in greater detail. The GPU and the temperature sensors A B are shown as well. In the illustrated embodiment the PMU includes a summator coupled to receive an actual temperature measurement from the temperature sensors A B and a target temperature e.g. that may be programmed into the PMU for example or that may be set as a software parameter . As illustrated by the plus and minus signs on the inputs to the summator the summator is configured to take the difference between the target temperature and the actual temperature. The resulting temperature difference may be provided to a temperature control unit which may output a target GPU power to a summator . The summator may receive the actual GPU power from a GPU power measurement unit through a low pass filter LPF in the illustrated embodiment . The output of the summator may be the difference between the actual GPU power and the target GPU power as illustrated by the plus and minus signs on the inputs and may be an error in the power tracking. The difference may be input to a GPU power tracking controller . In the illustrated embodiment the GPU power tracking controller may include a proportional controller PControl an integral controller IControl a limiter a summator and a Max block . Thus in the illustrated embodiment the GPU power tracking controller may be a proportional integral PI controller. More particularly in the illustrated embodiment the difference output from the summator may be input to the PControl and the IControl . The output of the IControl may be passed through a limiter to a summator which also receives the output of the PControl the output of which may passed through a Max block to ensure that it is greater than zero. The output of the Max block may be added to an application specified off time in the summator to produce a desired duty cycle. A GPU control unit may receive the duty cycle and may change the GPU to a different operating point in response. The available operating points may be stored in a GPU state table .

The summator may be the beginning of the negative feedback loop that is configured to track the power error and is configured to attempt to minimize the error of the actual power exceeding the target power. In this embodiment the actual power may be less than the target power by any amount. Other embodiments may also limit the difference between the actual power and the target power below a lower threshold for example to improve performance. In the illustrated embodiment a proportional integral PI control may be implemented in the GPU power tracking controller . The proportional component of the control may be configured to react to the current error while the integral component may be configured to react to the error integrated over time. More particularly the integral component may be configured to eliminate the steady state error and control the rate at which the target GPU power is reached. The amount of integral control may be limited through the limiter in some embodiments as desired. Generally the gains of both the proportional controller and integral controller may be programmable as may the limiter .

The summator may be configured to sum the outputs of the proportional controller and the limiter generating a value that may be inversely proportional to the duty cycle to be implemented by the GPU control unit . The block may ensure that the output is positive effectively ignoring the case where the actual power is less than the target power. Together the components and may be referred to as the duty cycle controller herein. In other embodiments the duty cycle controller may output the duty cycle itself.

In the illustrated embodiment the operation of the feedback loop may be exposed to applications. Some applications may attempt to control GPU power consumption at a higher level of abstraction and the applications efforts may interfere with the operation of the PMU . By providing exposure to the application the PMU may permit the application to have an effect on loop operation and thus the application developer may no longer include application level efforts to control GPU power. In other embodiments application input may not be provided and the summator may be eliminated. In the illustrated embodiment the application may specify an off time for the GPU during a given frame time.

While PI control is shown in for the GPU power tracking controller other embodiments may implement other control units such as including derivative control PID or any other subcombination of proportional integral and derivative control. Still further any other control design may be used e.g. table based .

The GPU control unit may be configured to adjust the operating point of the GPU based on the utilization of the GPU . The utilization of the GPU may be viewed as the percentage of a frame time that the GPU is powered up and operating. The duty cycle indicated by the duty cycle controller and converted to duty cycle by the GPU control unit as discussed in more detail below may serve as a limit to the utilization in order to meet thermal requirements battery life requirements etc. However the actual utilization may be smaller e.g. if the GPU is performing relatively simple operations each frame time the actual utilization may be lower than the duty cycle . If the utilization is lower than the duty cycle it may still be desirable to reduce the operating point of the GPU to reduce power consumption increasing the utilization. The duty cycle may vary between 100 no throttling by the duty cycle controller and a lower limit within the range of duty cycles. For example the lower limit may be about 70 of the frame time. If the utilization is lower than a threshold amount the GPU control unit may reduce the operating point to a lower power state e.g. lower voltage and or frequency to lengthen the utilization but reduce the power consumption. That is if the utilization is low then it appears to the control unit that the GPU is finishing it s tasks for the frame rapidly and is sleeping for long periods of time. The GPU may therefore operate at a reduced operating point and may run for longer periods. Similarly if the utilization is high then more performance may be needed from the GPU . Accordingly the GPU control unit may increase the operating point up to the limit set by the duty cycle controller.

In the GPU control unit is shown coupled to the GPU . The GPU control unit may actually be coupled to the clock generator to change GPU clock frequency and the power supply to request a different supply voltage magnitude . The GPU control unit may be configured to record the current operating point of the GPU and when the GPU control unit determines that the operating point is to be changed the GPU control unit may be configured to read the new operating point from the GPU state table . That is the GPU state table may store the permissible operating points for the GPU and the GPU control unit may be configured to select the desired operating point from the operating points listed in the GPU state table .

The GPU power measurement unit may be configured to measure the GPU power consumption. In some embodiments the GPU power measurement unit may receive data from the power measurement circuit to measure the GPU power. In other embodiments the GPU power measurement unit may estimate the power consumption based on the activity in the GPU . For example the GPU power measurement unit may be configured to read a variety of performance counters in the GPU . The values in the performance counters along with factors derived from simulations of the GPU or direct measurements on an implementation the GPU may be used to estimate the power consumption. The factors may be programmable in the GPU power measurement unit fixed in hardware or any combination of programmable and fixed factors.

The GPU power measurement unit in is coupled to receive the additional off time measured for the GPU if it remains off when the GPU would otherwise power back on based on the duty cycle. The GPU power measurement unit may override the actual power measurement for a number of iterations to account for the additional off time using zero as the actual GPU power for those iterations. The iterations may be run back to back when the GPU is powered back on rather than at the fixed intervals to account for the additional off time. In one embodiment the GPU power measurement unit may comprise firmware that executes on the GPU itself and the additional iterations may be executed in response to the GPU powering back on. In other embodiments the GPU power measurement unit may execute on the CPU and or may be implemented in circuitry within the GPU . In other embodiments the override of the actual GPU power may be implemented in the low pass filter or at the summator .

It is noted that one reason for iterating the feedback loop to account for the additional of time may be found in the PI controller. Integral control retains some amount of residual from previous measurements and thus supplying the actual power of zero and iterating the feedback loop may reduce the residual to reflect the lack of power consumption in the additional off time.

In an embodiment power consumption measurements may be made on the order of once a millisecond while the duty cycle controller may operate more slowly e.g. on the order of once per second . Accordingly the low pass filter may filter the measurements to smooth out the measurements and reduce momentary spikes that might occur. The low pass filter may effectively bank power that is not consumed e.g. in the area of and may permit the power consumption to possibly exceed the power budget briefly after a period of low power consumption. Other embodiments may not require the filtering and the low pass filter may be eliminated.

In the illustrated embodiment the negative feedback loop to control power may be included within a thermal loop to control temperature. For example in the temperature measured by the temperature sensors A B may be compared to the target temperature and the temperature control unit may generate a target GPU power value responsive to the difference in the temperatures. As the actual temperature rises toward the target temperature or perhaps surpasses the target temperature the temperature control unit may be configured to reduce the target GPU power value. By reducing power consumption in the GPU the temperature may be reduced and thus may approach the target temperature or remain below the target temperature.

The temperature control unit may implement any control mechanism. For example the temperature control unit may include a table of temperatures and corresponding target power values. Alternatively the temperature control unit may implement PID control or any subset thereof or any other control functionality. In other embodiments other factors than temperature may be used to determine target power consumption. For example desired battery life for a mobile device may be translated to target power consumption.

In one embodiment the PMU may be implemented in hardware or a combination of hardware and software. Specifically in an embodiment the temperature control unit may be implemented in software as part of an operating system executing in the system . The duty cycle controller blocks and may be implemented in a driver that is executed by the CPU and that controls the GPU. Alternatively the duty cycle controller may be implemented in a control thread that executes on the GPU itself referred to as GPU firmware . In other embodiments the duty cycle controller may be implemented in a combination of GPU driver and firmware. The GPU control unit may be implemented in the GPU firmware. Similarly the GPU power measurement unit may be implemented in firmware. It is noted that a summator may be any combination of hardware and or software that produces a sum of the inputs to the summator where an input having a minus sign may be negated into the sum and the sum may be a signed addition .

If the duty cycle off time has not yet expired decision block no leg the PMU is idle with regard to the GPU . However if the duty cycle off time has expired decision block yes leg and the GPU is still powered off and there is no work for the GPU to do e.g. the GPU s task queue is empty decision block yes leg the PMU may accumulate the additional off time block . The additional off time may be the amount of time that exceeds the off time specified by the feedback loop for the current duty cycle. In some embodiments the amount of additional off time may saturate at a certain amount i.e. no additional credit for the GPU power consumption is accrued when the amount is reached . The saturation amount may be based on the amount of effort needed to process the accumulated off time e.g. in terms of number of iterations of the feedback loop . The amount of effort to process the accumulated off time beyond the saturation amount may impact performance to an unacceptable extent by delaying the power on sequence for example. The saturation amount may further be based on the amount at which additional accumulation is not effective e.g. because the feedback loop reaches 100 duty cycle at the highest operating point or close to such a level etc. If the GPU is off but there is work to be performed decision block no leg and decision block yes leg the PMU may wake the GPU to perform the work and may provide the additional off time to be credited within the feedback loop block . Waking the GPU may include powering up the GPU initializing the GPU to a known state and loading the thread s to be executed.

If the additional off time provided by the PMU is greater than zero decision block yes leg the GPU power measurement unit may set the actual GPU power to zero block . Additionally the GPU power measurement unit may reduce the additional off time block . For example the additional off time may be measured in iterations of the feedback loop and the GPU power measurement unit may decrement the iteration count by one. In another example the additional off time may be measured in real time and the additional off time may be reduced by the amount of time between iterations of the feedback loop in the normal mode. The feedback loop may actually iterate more quickly while crediting for the additional off time. If the additional off time is not greater than zero decision block no leg the GPU power measurement unit may compute the actual GPU power from performance measurements or direct power measurement as described previously block .

Turning next to a flowchart is shown illustrating operation of one embodiment of the duty cycle controller e.g. the combination of the summators and the PControl the IControl the limiter and the block in . While the blocks are shown in a particular order for ease of understanding any order may be used.

If the actual power exceeds the target power decision block yes leg the duty cycle controller may decrease the duty cycle i.e. increase the off time block . The determination of the actual power exceeding the target power may be more than a simple mathematical comparison on the current actual power and the target power. For example the low pass filter may have captured the lack of power consumption during a time such as the area in and the actual power may be able to exceed the target power for a period of time to use the unused power from the previous low power consumption.

In some embodiments if the target power is greater than the actual power the duty cycle controller may not limit the utilization by controlling the duty cycle e.g. the duty cycle may be increased up to 100 or the off time may be zero decision block yes leg and block .

Turning next to a flowchart is shown illustrating operation of one embodiment of the GPU control unit . While the blocks are shown in a particular order for ease of understanding any order may be used. The operation of may be repeated continuously during use to update the power state of the GPU as it s workload changes over time.

If the utilization of the GPU is less than a low threshold e.g. 70 in one example decision block yes leg the GPU control unit may transition the GPU to a lower power state block . If the utilization of the GPU is greater than a high threshold e.g. 90 in one example and the duty cycle is 100 e.g. no throttling due to thermal limits decision block yes leg the GPU control unit may transition the GPU to a higher power state block .

In one embodiment the output of the duty cycle controller e.g. the output of the summator in may be a value representing the off time for the GPU . The GPU control unit may implement a transfer function converting the off time or amount of throttling to a duty cycle measurement. is an example of such a transfer function. If the output of the duty cycle controller is zero e.g. the actual power is less than or equal to the target power the duty cycle may be 100 . As the duty cycle controller output off time increases to a maximum amount the duty cycle may decrease to a minimum duty cycle line . Once the minimum duty cycle maximum off time is reached the duty cycle remains at the minimum duty cycle even if the off time output would otherwise be greater line . The minimum duty cycle and or maximum off time may be programmable or fixed in the PMU in various embodiments.

Turning now to a block diagram of a computer accessible storage medium is shown. Generally speaking a computer accessible storage medium may include any storage media accessible by a computer during use to provide instructions and or data to the computer. For example a computer accessible storage medium may include storage media such as magnetic or optical media e.g. disk fixed or removable tape CD ROM DVD ROM CD R CD RW DVD R DVD RW or Blu Ray. Storage media may further include volatile or non volatile memory media such as RAM e.g. synchronous dynamic RAM SDRAM Rambus DRAM RDRAM static RAM SRAM etc. ROM or Flash memory. Storage media may also include non volatile memory e.g. Flash memory accessible via a peripheral interface such as the Universal Serial Bus USB interface a flash memory interface FMI a serial peripheral interface SPI etc. Storage media may include microelectromechanical systems MEMS as well as storage media accessible via a communication medium such as a network and or a wireless link.

The computer accessible storage medium in may store an operating system OS a GPU driver and a GPU firmware . As mentioned above the temperature control unit may be implemented in the operating system the power control to generate a duty cycle may be implemented in the GPU driver and the GPU control unit may be implemented in the GPU firmware . Each of the operating system the GPU driver and the GPU firmware may include instructions which when executed in the system may implement the operation described above. In an embodiment the OS and the GPU driver may be executed on the CPU and the GPU firmware may be executed on the GPU . A carrier medium may include computer accessible storage media as well as transmission media such as wired or wireless transmission.

Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

