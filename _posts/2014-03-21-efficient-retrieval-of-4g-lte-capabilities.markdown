---

title: Efficient retrieval of 4G LTE capabilities
abstract: A mobile device executes a background process under an on demand model that queries a remote service exposed by a mobile broadband network to receive status updates as to the capabilities of devices, such as the ability to stream video, that are associated with contacts that are stored on the mobile device. When a mobile device user invokes an action like using a dialer application that causes a contact to be displayed on the device's user interface (UI) such as in a contact card or contact list format, the background process immediately retrieves status for that contact card or list. While waiting for the status retrieval to complete, the background process will trigger the display of a temporary UI on the mobile device which can show either unknown capabilities status or show the most recently retrieved status that is read out of a cache.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09282181&OS=09282181&RS=09282181
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09282181
owner_city: Redmond
owner_country: US
publication_date: 20140321
---
Mobile devices are leveraging new communication services on advanced mobile operator MO networks that provide broadband services to support rich user experiences such as video messaging and video calling. Such networks may include for example 4G LTE Fourth Generation Long Term Evolution systems as described by the 3GPP Third Generation Partnership Project as an evolution of the GSM UMTS Global System for Mobile communication Universal Mobile Telecommunications System standards. While such advanced mobile broadband networks perform satisfactorily in many applications further improvements are desired to enable additional features and improved experiences for mobile device users.

This Background is provided to introduce a brief context for the Summary and Detailed Description that follow. This Background is not intended to be an aid in determining the scope of the claimed subject matter nor be viewed as limiting the claimed subject matter to implementations that solve any or all of the disadvantages or problems presented above.

A mobile device executes a background process under an on demand model that queries a remote service exposed by a mobile broadband network such as a 4G LTE network to receive status updates as to the capabilities of devices that are associated with contacts that are stored on the mobile device. Such capabilities can include the availability of a contact s device to support streaming video for example as part of video messaging and video calling features. When a mobile device user invokes an action like using a dialer application that causes a contact to be displayed on the device s user interface UI such as in a contact card or contact list format the background process immediately retrieves status for that contact card or list. While waiting for the status retrieval to complete the background process will trigger the display of a temporary UI on the mobile device which can show either unknown capabilities status or show the most recently retrieved status that is read out of a cache.

Advantageously the retrieval of capabilities status under the on demand model enables resource costs to be incurred that are more proportional to the number of contacts that a user is actually going to access. Compared with other techniques such as proactively querying the service on a periodic basis and pulling down current status for all of the contacts just in case it is needed the present capability retrieval can reactively obtain status from the service on demand when the user accesses a contact card or a contact list. Thus the UI provides up to date status for contact cards and lists viewed by the user on the mobile device while minimizing the use of resources such as battery life.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. It will be appreciated that the above described subject matter may be implemented as a computer controlled apparatus a computer process a computing system or as an article of manufacture such as one or more computer readable storage media. These and various other features will be apparent from a reading of the following Detailed Description and a review of the associated drawings.

Like reference numerals indicate like elements in the drawings. Elements are not drawn to scale unless otherwise indicated.

However alternative types of electronic devices are also envisioned to be usable within the telecommunications environment so long as they are configured with telephony capabilities and can connect to the mobile broadband network as described in more detail below. Such alternative devices variously include handheld computing devices PDAs Personal Digital Assistants portable media players wearable computers navigation devices such as GPS Global Positioning System systems laptop PCs personal computers desktop computers multimedia consoles gaming systems or the like. In the discussion that follows the use of the term mobile device is intended to cover all devices that are configured with telephony capabilities and are capable of wireless connectivity to the mobile broadband network .

Each mobile device will typically have a prearranged association with the mobile broadband network . For example a user will typically be a subscriber to a cellular service plan so that the user s mobile device can access the mobile broadband network as valid and authenticated user equipment. The mobile broadband network in this illustrative example is configured as a 4G LTE network which includes a radio access network having a number of macrocells that support access by the devices to a mobile operator MO core network . The backend of the mobile broadband network typically includes interfaces that support a connection to network infrastructure including a public switched telephone network PSTN so that communication is enabled between the mobile device and conventional wireline user equipment . A connection to the Internet is also typically supported so that the mobile devices can access content provided by one or more external content providers . A network element is located in the MO core network which exposes a service that may be configured to provide status regarding particular capabilities of the devices as described in more detail below.

The various mobile devices and wireline equipment in the telecommunications environment can support different features functionalities and capabilities here referred to generally as features . For example various types of equipment support their own feature set as indicated by respective reference numerals and in . As shown in some of the features supported on a given device can be similar to those supported on others while other features may be unique to a given device. The degree of overlap and or distinctiveness among features supported on the various mobile devices can vary by implementation. For example some devices can support touch controls gesture recognition and voice commands while others may enable a more limited user interface UI . Some devices may support video consumption and Internet browsing while other devices may support more limited media handling and network interface features.

Some features may not be available on a device because of technical reasons. For example a mobile device might include support for voice calling but is not equipped to handle video due to technical reasons such as various hardware software and or firmware constraints that are imposed by design. In other situations a given feature may be capable of support by the technology in the mobile device but the features are disabled for non technical reasons such as personal preference business and or policy reasons. For example a user may wish to disable video handling and streaming to a mobile device so as to reduce the expense for data access that is part of a subscription package to MO services. Or an enterprise or business may wish to restrict execution of some applications or limit access to some external content providers for its corporate users.

Features may also be subject to availability based on temporal and or environment conditions. For example a user may wish to consume a streaming video on a mobile device that can normally handle video but the device is near the monthly data cap that is part of the user s subscription. Or the user may be on a train that is going through a tunnel and has no cellular access or be in an area that supports only voice calling but not data access on the mobile broadband network .

One particular example of a feature supported on a mobile device is shown in in which information about contacts are stored. As shown a given mobile device may organize the stored information using one or more contact lists that represent information about the group of contacts . Some of the contacts may be subscribers to the mobile broadband network while other contacts can be subscribers or otherwise associated with other networks e.g. other telephony networks mobile networks PSTNs etc. . Each contact list typically comprises a collection of contact cards where each card is used to store information about a particular user or institution organization business etc. such as contact name and picture telephone numbers for mobile work home etc. personal and work email addresses home and office addresses websites significant other s and children s names birthdays and the like.

In this example various information about a contact named Thomas Howard is provided on a UI supported on the display screen. The user not shown can interact with the UI here by touching the screen at appropriate locations to launch various actions from the contact card such as placing a call to a contact s mobile phone sending him a text or email etc. Additional information can typically be revealed by using the touchscreen to scroll e.g. up down side to side to other places on the contact card . Thus the contact card may contain collective information about the contact that is more extensive that can be shown at one time on a single UI screen. The additional information that is available but not currently displayed is organized into virtual screens or pages collectively referred to here as screens where each screen can be loaded for display on the UI in response to the user s scrolling actions. It is emphasized that the particular scrolling UI with accessible virtual screens shown in the example herein and the user interaction therewith is intended be illustrative and that other UI designs and behaviors may be utilized to meet the needs of a particular implementation of the present video capability retrieval.

As shown in and in enlarged view a glyph is displayed near the contact s photo to indicate to the user that the contact is associated with a mobile device that currently supports broadband video capability over the mobile broadband network . In addition certain features are enabled on the contact card including sending a video message indicated by reference numeral and making a video call to the contact s mobile number indicated by reference numeral . The video message is shown as using the emerging RCS Rich Communication Service which is a service offering supported by the MO in this example that has similarity to conventional SMS Short Message Service and MMS Multimedia Message Service services which are typically and ubiquitously supported today.

In comparison to the contact card shown in the contact card shown in for a contact named Peter Yanovich does not display the video glyph nor does its UI enable video features such as video based messaging and calling. Thus in this example the contact card indicates to the user that the contact currently is not able to reached and communicated using video features. As described above there could be various reasons for the limited availability of video features for that particular contact. For example the contact may not have a video capable mobile device has chosen not to enable video features is not presently in an area of network coverage that supports broadband data access or the like.

The status as to the availability of features on each of the mobile devices in the user s contacts may be obtained in various ways. For example a given mobile device may query the service in the MO s mobile broadband network on a periodic basis to request status as to feature support and capabilities collectively referred to here as status including video capability for each device associated with each contact. While such periodic background bulk retrieval enables the UI on the device to show a cached status that is current as of the last status update battery drain increases as retrieval frequency increases as as does the impact on other mobile device resources such as processing cycles and memory utilization. Battery drain is also likely to occur at higher than direct proportion to status retrieval frequency due to overhead cost of initializing and operating the mobile device s radio. However staleness of status increases as frequency decreases and at some average level of staleness performing the periodic background bulk status retrieval is no longer worthwhile.

A supplementary solution to periodic bulk retrieval is to initiate an immediate retrieval of a single instance of status when the user opens a particular contact card on the device s UI. The UI in this case can initially reflect cached status from the most recent periodic background bulk retrieval but then can be quickly refreshed to show current status from the initiated single instance retrieval. Battery drain versus staleness could potentially be balanced by tuning the frequency of periodic bulk status retrieval.

Unfortunately for many users it can be expected that bulk retrieval with or without immediate retrieval of status can still be less than optimally performant in many scenarios. For example if the bulk retrieval frequency is once every 60 minutes and a user visits the contact cards only 10 times per month the mobile device will still do 720 periodic background bulk retrievals covering everyone in the user s group of contacts. In addition it has been observed that the more contacts a user has the less likely it is for a given number s status to be needed. In some cases users have 2 000 or more contacts. The popularity of social networking systems and other online resources makes it quite easy to have a large contact list but it is unlikely that users regularly interact with most of their contacts. Thus the resource costs in retrieving status using the solutions described above can be prohibitive.

The present video capability retrieval enables resource costs to be incurred that are more proportional to the number of contacts that a user is actually going to access. Instead of proactively querying the service on a periodic basis and pulling down current status for all of the contacts just in case it is needed the present video capability retrieval can reactively obtain status from the service on demand when the user accesses a contact card or a contact list.

An on demand model is utilized as shown in . In summary the on demand model is implemented on a mobile device so that when the user accesses a contact card or a contact list status is retrieved from the service in response to a request using a background process or thread that is implemented by functionality that is provided for example by an application or operating system that executes on the mobile device.

When a contact list is accessed by the user and displayed the on demand model calls for status to be retrieved for additional contacts in virtual pages or screens beyond those contacts that are currently displayed on the UI. That way some status data is pre fetched in case it is needed to be displayed for the user or is given prioritization for retrieval over other data here pre fetched and prioritized status data is commonly referred to as pre fetched status . The pre fetched status in accordance with the on demand model is contextually related with the contacts that are currently being accessed by the user as described in more detail below. The use of such contextual relationship enables the pre fetched status under the on demand model to have greater potential relevance to the user while reducing the amount of retrieval of less relevant data and accordingly reducing the load on resources . The on demand model thus stands in contrast with the aforementioned bulk retrieval technique where large amounts of data may be retrieved irrespective of its likelihood that it is actually accessed by the user.

As shown in the request for status can comprise a single number or a batch of numbers . The term number here typically refers to the telephone number that is uniquely associated with a mobile device or other device having telephony capabilities. For example the number may comprise the 10 digit string including area code in the United States or comprise the MSISDN Mobile Subscriber Integrated Services Digital Network or IMSI International Mobile Subscriber Identity in some cases. As shown in the status sent by the service as a response to the request includes current RCS availability per number. Additional information per number such as capabilities of a mobile device other than RCS can also be included in the status in some implementations as indicated by reference numeral . In some cases the service may optionally provide a timestamp in the status . Alternatively the mobile device and or the background process may apply its own timestamp when the status is received.

The current RCS availability reported by the service in the status for a given number can be analyzed using another process or thread that executes on the mobile device . As shown in various heuristics may be applied to the RCS availability in order to estimate RCS capabilities and or non RCS capabilities in some cases in a broader sense. In an illustrative example the RCS availability of a number over time can be analyzed to generate historical data. The analysis can thus enable some prediction to be made as to the likelihood that a contact has video capability at any given point in time. For example the historical data could tend to show that a contact does not have video capabilities at certain times of night perhaps because the mobile device is shut off or the user does not wish to be disturbed. In another example the analysis may indicate a high probability that a particular mobile device has video capability based on its past history of RCS availability.

The present on demand model for efficiently retrieving video capability may be implemented using a tiered approach as shown in in which different options may be utilized depending on the particular needs of a given implementation. These include a minimal option a basic caching option a caching with timestamp option a retrieval in lists option and a retrieval in lists with APIs Application Programming Interfaces option . Each successive option builds on the others which advantageously enables reduced development time for deployments using the present on demand model since software code in the minimal option is reused in substantial part in the basic caching option which is reused in the caching with timestamp option and so on. It is noted that contact lists are commonly supported in many mobile devices hence it can be expected that the retrieval in lists option and the retrieval in lists with APIs option will be utilized in many typical deployments. The other options i.e. minimal basic caching and caching with timestamp are typically more suited to deployments in which the UI on a mobile device shows individual contact cards and does not show contact lists.

In step a mobile device user opens a contact card that is stored on the mobile device . In step the background process retrieves status for the number in the contact card from the service . While waiting for the status retrieval to finish a temporary UI is shown on the device s display screen in step . The temporary UI can either show that the status for the contact is currently unknown or that the status is false i.e. that no video capability is presently supported for the contact . The UI is then updated with current status when the status retrieval from the service is completed in step .

The cached timestamp may be utilized to enable the status to automatically expire after some predetermined time interval. The length of the time interval can vary according to the needs of a particular implementation. Generally a longer time interval prior to status expiration means that a smaller number of retrievals are utilized which can preserve resources but there is a risk with longer intervals that the status becomes stale and does not accurately reflect the video capabilities of a contact. In step status retrieval attempts may be throttled using the timestamp so that status retrieval for a contact will not be attempted so long as the status of the contact of interest remains valid i.e. unexpired .

Another example includes the user invoking a dialer application in order to place a voice call. shows a screenshot of an illustrative UI exposed by a dialer application that executes on a mobile device . In this example the dialer application provides a virtual keypad on the lower portion of the display which is configured as a touchscreen display here . The dialer application in this example is configured as a predictive or smart dialer that is designed to save key presses and reduce the amount of user input needed to place the call. The UI includes a digit display towards the top of the display where in this example the user has entered the digit 4. The predictive dialer has been configured to interpret this digit 4 using its assigned text representation of the letters G H and I. Accordingly the predictive dialer shows a list of contacts having either first or last names that start with one of these letters.

This particular UI is designed to show four contacts at a time above the keypad and below the digit display other UI designs can vary in the number of contacts that are shown at the same time . The four contacts thus constitute one screen of the full list of contacts that meet the criteria of first or last names starting with the letters G H or I. As it is possible that the list of contacts meeting such criteria has more than four members additional contacts may typically be viewed on the UI by scrolling or using other actions in order to reveal additional screens that are shown on the display. In a similar manner to that shown in video glyphs representatively indicated by reference numeral are displayed on the UI next to contacts that are associated with devices that have video capability based on cached or retrieved status.

Returning to after the mobile device user invokes an action that causes a contact list to be shown such as using the smart dialer as shown in the background process in step makes a batch request to retrieve status from the service for each of the contacts currently being displayed. The background process in this step will also retrieve status for additional screens of contacts in the list to pre fetch data that the user may wish to see for example by scrolling the UI. The criteria that may be applied when retrieving additional status are described below in the text accompanying .

In step a temporary UI is shown on the mobile device s display while waiting for the status retrieval to finish using the most recently cached status for the contacts in the list that is shown. Accordingly the background process will typically prioritize retrieval of the status for contacts being currently shown over the retrieval of status for the additional screens. The UI is updated with current status when the status retrieval from the service is completed in step and the retrieved status is cached in memory in the mobile device in step for future use.

In step a timestamp for the retrieved status for each contact is cached by the background process on the mobile device . The cached timestamp may be utilized to enable the status to automatically expire after some predetermined time interval. Contact cards and contact lists can have different expiration intervals. For example status for a contact card may expire in one minute while status for a contact list may expire in 15 minutes these time intervals are intended to be illustrative and other expiration intervals can be used to meet the needs of a particular implementation . In step status retrieval attempts may be throttled using the timestamp so that status retrieval for a contact will not be attempted so long as the status of the contact card or contact list of interest remains valid i.e. unexpired .

The UIs and shown in are typically arranged to enable the user to select a contact from a contact list e.g. contact lists and and then place the call. For example by touching the picture or name of the contact to select it the user may place the call by touching the call button at the bottom of the keypad. Alternatively the user may select a contact and place a call using a voice command or non touch gesture in some implementations.

As shown in the UI depicted in the user has placed a call to the contact named Thomas Howard. The UI is arranged in this example to show the picture of the contact in enlarged view the contact s phone number the call duration in minutes and seconds and a video glyph to indicate that the contact has video capability based on the retrieved status. The UI also exposes various call control features that may be invoked using buttons that are included towards the bottom of the UI. In alternative implementations call control features can be invoked using voice command or non touch gestures. In this illustrative example a video button is included in the UI that can make the call a video call when invoked. By comparison in the UI shown for the contact Peter Yanovich in there is no video glyph displayed because the status for the contact indicates no video capability is currently supported. In addition the video button is grayed out to indicate that the capability is unavailable in alternative implementations the button may not be displayed at all among the call control buttons .

The relationship proximity of contacts indicated by reference numeral may also be used as criteria when retrieving status for contacts in additional screens. Here the additional contacts are those that are proximate in relationship to the currently displayed contacts and can include special contacts frequently used contacts contacts called before or most recently called and contacts having known capabilities . In some implementations an individual criterion may be used or a mix of criteria can also be used and not all criteria shown in need to be used in every implementation.

Special contacts can include those that the user has designated or categorized on the mobile device as having special importance or belonging to a particular group. For example such categories could include friends and family colleagues inner circle favorites and the like. So if one or more contacts shown in the currently displayed list have special importance or are members of a particular group the background process can pre fetch status for other contacts that also have such properties. Similarly if one or more contacts in the currently displayed list are among the user s most frequently used or accessed contacts then other such contacts that are also frequently used or accessed can be pre fetched for display in additional screens. What constitutes frequently used in this particular context can vary by implementation. If the one or more contacts in the currently displayed list have been called before and or have been among the most recently called contacts then other contacts having similar properties can be pre fetched for display in additional screens. What constitutes most recently called in this particular context can vary by implementation. If one or more contacts having known capabilities e.g. the contact is known to have video capability through application of heuristics to the status data as described above are shown in the currently displayed list the other contacts having similar or the same capabilities can be pre fetched for display in additional screens.

The additional screen retrieval criteria can further include location and time and also take into account various other associative properties of contacts or filtering . The location criteria can take into account a location of mobile device associated with a contact so that for example status can be pre fetched for other contacts that are in the same city as a contact that is currently displayed in a list where the location boundaries in this context can vary by implementation . The time criteria can take into account the current time for a mobile device associated with a user. So for example status can be pre fetched for other contacts that share the same time zone as a contact that is currently displayed in a list where the time boundaries in this context can vary by implementation .

As noted above the additional screen retrieval criteria can be used individually or in combination. Thus status can be pre fetched only for contacts that meet several criteria. For example status can be pre fetched for contacts that are members of the user s frequently called numbers and are located in the same city as a contact that is currently shown in a list that is displayed on a mobile device.

The retrieval in lists with APIs option discussed above in conjunction with uses a method that is substantially similar to that described for method above and shown in . The difference is that the retrieval in lists with APIs option uses a method that interfaces with several public APIs. In an illustrative example the public APIs are exposed by the service as shown in . In a first of the public APIs is configured to respond to a request with status for one number contact at a time. When status is received at the mobile device it may trigger additional requests which can be delayed in some cases in order to place them closer in time in a pseudo batch manner so that radio initialization overhead costs are shared among multiple requests.

In a second of the public APIs is configured to respond to batched retrieval requests with batched status for multiple contacts numbers at a time. A notification is also sent by the service when the status update to the mobile device is complete. In typical implementations in which contact lists are shown on the UI of the mobile device it is anticipated that the second public API would be utilized by the background process to retrieve status updates due to resource savings that are enabled through the batched processing. When a single contact card is accessed then the first public API could be used without incurring a resource penalty.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs other program modules and program data . A user may enter commands and information into the computer system through input devices such as a keyboard and pointing device such as a mouse. Other input devices not shown may include a microphone joystick game pad satellite dish scanner trackball touchpad touch screen touch sensitive device voice command module or device user motion or user gesture capture device or the like. These and other input devices are often connected to the processor through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port or universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor personal computers typically include other peripheral output devices not shown such as speakers and printers. The illustrative example shown in also includes a host adapter a Small Computer System Interface SCSI bus and an external storage device connected to the SCSI bus .

The computer system is operable in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be selected as another personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer system although only a single representative remote memory storage device is shown in . The logical connections depicted in include a local area network LAN and a wide area network WAN . Such networking environments are often deployed for example in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer system is connected to the local area network through a network interface or adapter . When used in a WAN networking environment the computer system typically includes a broadband modem network gateway or other means for establishing communications over the wide area network such as the Internet. The broadband modem which may be internal or external is connected to the system bus via a serial port interface . In a networked environment program modules related to the computer system or portions thereof may be stored in the remote memory storage device . It is noted that the network connections shown in are illustrative and other means of establishing a communications link between the computers may be used depending on the specific requirements of an application of the present video capability retrieval.

The architecture illustrated in includes a CPU a system memory including a RAM and a ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the architecture such as during startup is stored in the ROM . The architecture further includes a mass storage device for storing software code or other computer executed code that is utilized to implement applications the file system and the operating system.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable storage media provide non volatile storage for the architecture .

Although the description of computer readable storage media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable storage media can be any available storage media that can be accessed by the architecture .

By way of example and not limitation computer readable storage media may include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer readable media includes but is not limited to RAM ROM EPROM erasable programmable read only memory EEPROM electrically erasable programmable read only memory Flash memory or other solid state memory technology CD ROM DVDs HD DVD High Definition DVD Blu ray or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the architecture .

According to various embodiments the architecture may operate in a networked environment using logical connections to remote computers through a network. The architecture may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit also may be utilized to connect to other types of networks and remote computer systems. The architecture also may include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly the input output controller may provide output to a display screen a printer or other type of output device also not shown in .

It should be appreciated that the software components described herein may when loaded into the CPU and executed transform the CPU and the overall architecture from a general purpose computing system into a special purpose computing system customized to facilitate the functionality presented herein. The CPU may be constructed from any number of transistors or other discrete circuit elements which may individually or collectively assume any number of states. More specifically the CPU may operate as a finite state machine in response to executable instructions contained within the software modules disclosed herein. These computer executable instructions may transform the CPU by specifying how the CPU transitions between states thereby transforming the transistors or other discrete hardware elements constituting the CPU .

Encoding the software modules presented herein also may transform the physical structure of the computer readable storage media presented herein. The specific transformation of physical structure may depend on various factors in different implementations of this description. Examples of such factors may include but are not limited to the technology used to implement the computer readable storage media whether the computer readable storage media is characterized as primary or secondary storage and the like. For example if the computer readable storage media is implemented as semiconductor based memory the software disclosed herein may be encoded on the computer readable storage media by transforming the physical state of the semiconductor memory. For example the software may transform the state of transistors capacitors or other discrete circuit elements constituting the semiconductor memory. The software also may transform the physical state of such components in order to store data thereupon.

As another example the computer readable storage media disclosed herein may be implemented using magnetic or optical technology. In such implementations the software presented herein may transform the physical state of magnetic or optical media when the software is encoded therein. These transformations may include altering the magnetic characteristics of particular locations within given magnetic media. These transformations also may include altering the physical features or characteristics of particular locations within given optical media to change the optical characteristics of those locations. Other transformations of physical media are possible without departing from the scope and spirit of the present description with the foregoing examples provided only to facilitate this discussion.

In light of the above it should be appreciated that many types of physical transformations take place in the architecture in order to store and execute the software components presented herein. It also should be appreciated that the architecture may include other types of computing devices including handheld computers embedded computer systems smartphones PDAs and other types of computing devices known to those skilled in the art. It is also contemplated that the architecture may not include all of the components shown in may include other components that are not explicitly shown in or may utilize an architecture completely different from that shown in .

The illustrated mobile device can include a controller or processor e.g. signal processor microprocessor microcontroller ASIC Application Specific Integrated Circuit or other control and processing logic circuitry for performing such tasks as signal coding data processing input output processing power control and or other functions. An operating system can control the allocation and usage of the components including power states above lock states and below lock states and provides support for one or more application programs . The application programs can include common mobile computing applications e.g. image capture applications email applications calendars contact managers web browsers messaging applications or any other computing application.

The illustrated mobile device can include memory . Memory can include non removable memory and or removable memory . The non removable memory can include RAM ROM Flash memory a hard disk or other well known memory storage technologies. The removable memory can include Flash memory or a Subscriber Identity Module SIM card which is well known in GSM Global System for Mobile communications systems or other well known memory storage technologies such as smart cards. The memory can be used for storing data and or code for running the operating system and the application programs . Example data can include web pages text images sound files video data or other data sets to be sent to and or received from one or more network servers or other devices via one or more wired or wireless networks.

The memory may also be arranged as or include one or more computer readable storage media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer readable media includes but is not limited to RAM ROM EPROM EEPROM Flash memory or other solid state memory technology CD ROM compact disc ROM DVD Digital Versatile Disc HD DVD High Definition DVD Blu ray or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the mobile device .

The memory can be used to store a subscriber identifier such as an International Mobile Subscriber Identity IMSI and an equipment identifier such as an International Mobile Equipment Identifier IMEI . Such identifiers can be transmitted to a network server to identify users and equipment. The mobile device can support one or more input devices such as a touch screen microphone for implementation of voice input for voice recognition voice commands and the like camera physical keyboard trackball and or proximity sensor and one or more output devices such as a speaker and one or more displays . Other input devices not shown using gesture recognition may also be utilized in some cases. Other possible output devices not shown can include piezoelectric or haptic output devices. Some devices can serve more than one input output function. For example touchscreen and display can be combined into a single input output device.

A wireless modem can be coupled to an antenna not shown and can support two way communications between the processor and external devices as is well understood in the art. The modem is shown generically and can include a cellular modem for communicating with the mobile communication network and or other radio based modems e.g. Bluetooth or Wi Fi . The wireless modem is typically configured for communication with one or more cellular networks such as a GSM network for data and voice communications within a single cellular network between cellular networks or between the mobile device and a public switched telephone network PSTN .

The mobile device can further include at least one input output port a power supply a satellite navigation system receiver such as a Global Positioning System GPS receiver an accelerometer a gyroscope not shown and or a physical connector which can be a USB port IEEE 1394 FireWire port and or an RS 232 port. The illustrated components are not required or all inclusive as any component can be deleted and other components can be added.

Based on the foregoing it should be appreciated that technologies for video capability retrieval have been disclosed herein. Although the subject matter presented herein has been described in language specific to computer structural features methodological and transformative acts specific computing machinery and computer readable storage media it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features acts or media described herein. Rather the specific features acts and mediums are disclosed as example forms of implementing the claims.

The subject matter described above is provided by way of illustration only and should not be construed as limiting. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described and without departing from the true spirit and scope of the present invention which is set forth in the following claims.

