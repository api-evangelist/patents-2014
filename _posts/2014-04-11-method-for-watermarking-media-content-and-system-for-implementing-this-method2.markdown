---

title: Method for watermarking media content and system for implementing this method
abstract: A method for watermarking digital media content received in a form of at least one encrypted sample to which metadata is assigned. Each sample is encrypted by means of a sample key. The metadata comprises first data, second data and a signature resulting from the first and second data. The first data is encrypted by a transport key and comprises at least a content key and watermarking metadata. The second data comprises an initialization vector so that the content key and the initialization vector form a unique pair of cryptographic data equivalent to the sample key. The method comprises the steps of extracting the metadata from the media content, decrypting the first data by using the transport key, authenticating the signed data and, in case of positive outcome, descrambling each sample by using the pair of cryptographic data, and marking each descrambled sample by using the watermarking metadata.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09571899&OS=09571899&RS=09571899
owner: NAGRAVISION S.A.
number: 09571899
owner_city: Cheseaux-sur-Lausanne
owner_country: CH
publication_date: 20140411
---
This application is a U.S. National Stage Application of International Application No. PCT EP2014057331 filed Apr.11 2014 which claims priority from European Patent Application No. 13165496.4 filed Apr. 26 2013.

The present invention relates to the field of watermarking for adding digital watermark to media content such as digital images audio data or audio video data stream. More particularly the invention refers to a scrambled encrypted content received by a processing device such as a set top box in the pay TV domain which has to add copyright information onto the related descrambled content.

In the pay media environment such as a pay television system multimedia content sent to digital media players is provided in an encrypted form i.e. a scrambled form in order to provide a restricted access. Accordingly only subscribers who have paid for the right to descramble such content receive suitable decryption keys for retrieving the content in its clear form. However once descrambled the content is subject to any fraudulent copies which can then be transmitted in its clear form to anybody without the ability to determine who is the owner or the authorized user of this content.

A known technique aiming to prevent or deter unauthorized copying of digital content and thereby preserve the copyrights attached to this content is the digital watermarking process. Watermarking is the process of embedding information into a digital signal which may be used to verify its authenticity or the identity of its owners similarly as paper bearing a watermark for visible identification. If the signal is copied then information relating to the watermark is also carried in the copy. There are generally two classes of digital watermarks the visible watermarks and the invisible watermarks. Multimedia content such as TV programs downloadable movies or audio video data provided by streaming will preferably include invisible watermarks for obvious purposes.

In the particular case of the set top box domain the content e.g. video and audio is secured by a key generated by a Conditional Access System CAS . Both the encrypted content and metadata comprising an encrypted decryption key are broadcasted or are available to subscribers for instance through Dynamic Adaptive Streaming over HTTP DASH .

The DASH is an enabler which provides formats to enable efficient and high quality delivery of streaming services over the Internet. Media content of these services are delivered from conventional HTTP web servers. The DASH is based on the standard ISO base media file format ISO BMFF . Files conforming to the ISO BMFF are formed as a series of objects called boxes . Referring to this standard the content could be encrypted using either Advanced Encryption Standard AES Counter CTR mode or AES Cipher block Chaining CBC mode. These two modes require Initialization Vector IV to encrypt the content.

The decryption process is performed at the user end by a Conditional Access Module CAM . After this operation the content is generally marked by application software of the user device e.g. a set top box by using watermarking metadata. Such metadata comprising typically information about where the watermark has to be embedded and which data has to be used as watermark. This means that the unprotected content and the watermarking metadata are exposed to such application software. Therefore the enforcement of the marking depends on the security of the software running on the user device. If this device is successfully attacked or just open no software authentication it is easier to bypass modify the marking of the media content. Besides it should be noted that upon request the application software is also able to perform any decryption process if it is provided with a decryption key. Generally the initialization vector and the encrypted form of the decryption key are accessible by the application software. Therefore the application software would be able to perform the decryption of the media content and finally to have access to the unprotected content.

Taking in account that such application software is untrusted and that it may have access to the unprotected content an attack on the watermarking process is still possible.

Therefore there is a need to provide an efficient solution to secure the watermarking process performed onto unprotected media content which is received in an encrypted form by application software to add a digital watermark thereon.

Document EP 2 391 125 A1 relates to a method for embedding the tracing secret data into multimedia contents delivered to particular users. To this end this document is focused on marking the data outputted by a security module in charge of the security operations for a descrambler unit. The aim is to produce a marked stream between the security module and the descrambling unit embodying some values representative of the security module having produced this stream of data. The data transmitted to the descrambling unit refers to post marked correction data allowing calculation of reconstruction values so as to obtain a unique reconstructed marked video stream from a modified video stream and said correction data.

Document US 2010 0208891 A1 discloses a process to perform a personalized marking of an audiovisual sequence which can be securely distributed by broadcasting means. To this end this document suggests sending to all of the receiver facilities unique information comprising a modified stream and a complementary stream. The reconstructed stream differs from the original stream by the fact that it comprises a first mark applied by a first watermarking step at the server. This first mark is preferably troublesome for the user. The complementary stream comprises watermarked data belonging to the marked audiovisual stream. A second mark is generated by the audiovisual decoder of the receiver and is used as personalization identifier for marking the reconstructed stream.

In order to solve the above mentioned problems the present invention suggests a method for watermarking digital media content received through a first interface by application software running within a user device typically a computing unit such as a set top box or any other kind of decoder. The digital media content is received in a form of at least one encrypted sample i.e. a piece of content which can be a content packet . The digital media content is related to metadata assigned to the samples preferably to each sample. To this end the metadata may comprise information allowing to identify the sample to which this metadata refer. This relation between sample and related metadata could be also obtained by a specific arrangement of such data within a data stream or could be obtained by a synchronization process. Each sample is encrypted by means of a sample key.

The metadata comprises at least first data second data and a digital signature resulting from the signature of the first and second data. The first data comprises at least the content key and watermarking metadata. Preferably the first data also comprises key metadata relating to the content key. At least the first data is encrypted by at least one transport key. The content key is used as first input in a cryptographic process. The second data comprises at least an initialization vector. This initialization vector is used as second input in the cryptographic process so that the content key and the initialization vector allow to retrieve the sample key for encrypting decrypting each sample of the digital media content.

According to the invention the application software is able to communicate through a second interface with a secure environment in charge of handling the metadata of decrypting encrypted data and of watermarking the media content if required. Accordingly the application software is not allowed to process data contained within the metadata. The secure environment is able to extract the transport key from a secure memory or to derive the transport key by calculation from a secret key stored in a secure memory of the secure environment.

The present invention also refers to a system for watermarking digital media content in accordance with the above mentioned method. This system comprises a computing unit for running the application software into which each encrypted sample and its assigned metadata is input in an application software through the first input interface. The media content comprises at least the samples. According to the invention the system also comprises a secure environment able to communicate with the application software through the second interface. This secure environment comprises the following components 

Besides and still in accordance with the present invention application software is configured to extract the metadata from the digital media content before transmitting the metadata to the secure environment for processing. Alternatively the metadata could be also extracted from a playlist media presentation description so that the metadata themselves can then be downloaded separately from the content data. The second interface is further used for outputting the descrambled sample from the secure environment in view to be played by a rendering device.

Accordingly each sample can be descrambled then watermarked within a trustworthy secure environment which can be controlled by the conditional access system provider. Indeed thanks to the present invention the watermarking process is a secure process that cannot be bypassed or be changed by a malicious person for instance by tampering the watermarking metadata in view to change the watermark embedded in the descrambled sample provided by the application software. Thanks to the encryption of said first data the content key is bound with the watermarking metadata and thanks to the signature involving the first and second data the watermarking metadata is bound with the initialization vector.

Referring to the latter schematically shows one embodiment of the digital media content processed as input data in the present invention. The digital media content comprises at least one encrypted sample and the media content is related to metadata assigned or associated to the sample s preferably to each sample.

This media content can refer to any kind of multimedia content such as audio and or video content or a content comprising still image s and or text data or even a mixed of such information data . Preferably the digital media content will refer to a stream of multimedia content. As this content can be a heavy content it is segmented into packets or into portions or pieces of content defined as being samples of content in the present invention. In some particular cases the media content may comprise one sample only. However most of the time the media content comprises a plurality of samples S S S . . . Sn as shown in .

The digital media content can be made of a single stream as shown in or it can be made of a plurality of streams synchronized between them. For instance one of these streams can for instance comprise video data while another stream may comprise the related audio data or the related metadata. Alternatively a first stream can comprise audio video data and a second stream synchronized with the first stream can comprise related metadata . Besides the stream containing the samples i.e. the content to be played by the end user device can be provided by a first content source while metadata can be provided by another source namely a second source distinct from the content source e.g. playlist . In any cases metadata must be processed in synchronism with the related samples.

The samples do not need to comprise a constant number of bytes and therefore do not need to have all the same size. By knowing successively the relevant size of each sample it becomes possible to retrieve each of them. Accordingly the size of each sample can be defined by size information SZ FIG. and used for this purpose in accordance to a preferred embodiment. However the sample can be retrieved from the stream by another manner for instance by means of markers or other data comprised in headers. Besides in the case where all the samples have the same size clock information could be also uses to the same purpose.

The samples of the media content are initially encrypted by means of a sample key Kc which can be different for a set of samples even for each sample . This is illustrated in by writing the identifiers S to Sn of the sample between brackets and by adding the Kc index. Although the metadata are not globally encrypted even it can include encrypted data the digital media content to be processed as input data in the present invention is noted CT as shown in and in .

Referring now to the latter shows according to one embodiment the main data included in metadata and how this data are organized grouped . Metadata comprises first data second data and a digital signature . This signature is typically a digest provided e.g. from a hash function applied to the first and second data in particular to at least some data of the so called first data e.g. the content key Kc and watermarking metadata WM and to at least some data of the so called second data e.g. the initialization vector IV and size information SZ . Besides the signature is preferably determined from non encrypted data i.e. the signature is calculated before the encryption of the data comprised in the so called first data . Accordingly the signature could be also encrypted and therefore be part of the first data . The function or the algorithm to provide this signature is kept secret so that it remains unknown for the application software. Of course the same function or the same algorithm is used for generating this signature at the sender side and for authenticating it at the recipient side . The digitally signed data are schematically shown in by the pictogram illustrating the inkwell and the feather assigned to the area surrounding the first and second data see the largest dotted line .

The first data refers to encrypted data as shown by the pictogram illustrating a padlock. This first data comprises at least a content key Kc and watermarking data WM. The content key Kc is a global key required as first input of a cryptographic process for decrypting the encrypted samples. This cryptographic process is used in particular during the encryption scrambling of the samples by the content provider e.g. by the head end or by any other remote server and during the decryption typically at the user end e.g. by a user computer a set top box STB or any other computing device . The second input of this cryptographic process is provided by an initialization vector IV which will be described in more detail hereafter. The same content key Kc could be used for encrypting all the samples broadcasted in the media content or provided by any other means to several end users e.g. subscribers . However and in accordance with the preferred embodiment the content key Kc varies within the data stream in order to define so called crypto periods. Accordingly several samples are comprised in one crypto period and these samples are encrypted with the same content key Kc. But different content keys Kc are used during successive crypto periods in particular during each crypto period.

Watermarking metadata WM includes the main data and information for watermarking the samples preferably for watermarking each sample of the media content. For instance watermarking metadata comprises at least part of the data to be embedded into the sample as watermark and information stating where the watermark must be embedded within the sample namely at which location. This location could be defined e.g. by coordinates or by providing the relative offset of the block to be watermarked the sample being formed by a plurality of data blocks .

In one embodiment the watermarking metadata can comprise common pre watermarking data namely data which are identical in several watermarking metadata and which will be used for watermarking several samples. Pre watermarking data could be in the form of a record containing an address of the block to be marked and at least one alternate value. At the client device in particular in a secure environment each record is processed and the alternate value is selected or not selected according to each bit of a unique identifier pertaining to the secure environment and stored in the latter or according to each bit of an identification to be included into the metadata.

The first data is encrypted by at least one transport key KT. It means that all data comprised in the so called first data are encrypted by the same key KT or by several different keys. For instance the content key Kc could be encrypted by the transport key KT and the watermarking data WM could be encrypted by a second transport key KT distinct from the first above mentioned transport key KT.

The second data comprises the initialization vector IV and preferably size information SZ. The initialization vector IV is used as second input in the above mentioned cryptographic process so that the content key Kc and the initialization vector IV form together a unique pair of cryptographic data Kc IV for encrypting decrypting each sample of said digital media content . Accordingly the initialization vector changes from one sample to another. As the pair of cryptographic data Kc IV comprises data used for encryption decryption this pair forms the so called sample key Kc . In other words this unique pair of cryptographic data Kc IV is equivalent to the sample key Kc .

The cryptographic process used to scramble i.e. to encrypt the samples can refer to any cryptographic algorithm involving an initialization vector. Accordingly this algorithm can refer to Advanced Encryption Standard AES Counter CTR mode or a Cipher Block Chaining CBC encryption mode such as AES CBC or TDES CBC. In these modes other modes could be also used an initialization vector is used as supplementary input in addition to the encryption key. Therefore the initialization vector can be seen as a parameter used for altering the encryption key. Typically this initialization vector is a numerical value used in combination with the base encryption key before the first step of the encrypting content process. Initialization vectors are often used to prevent a sequence of data that is identical to a previous sequence from producing the same result when encrypted. Thus the use of initialization vectors is fully suitable for encrypting data such as content packets resulting from packetized events or programs to be broadcast. Contrary to the content key Kc the initialization vector does not need to remain secret.

Advantageously the watermarking data WM and the initialization vector IV are bound together by the signature . Besides the watermarking data WM and the content key Kc are also bound together by the signature.

According to the invention the digital media content shown in is received through a first interface by application software APP. As already mentioned the digital media content comprises at least one encrypted sample and it is related to metadata assigned preferably to each sample . Accordingly metadata can be included within the media content as shown in or can be supplied to the application software APP via another channel namely another source such as a remote server. In the case where metadata and samples are provided by two different channels metadata and samples must be synchronized to each other. Synchronization can be done during the emitting of the data e.g. at the head end during the reception by the application software within this application software or even within the secure environment before processing this data. In the embodiment shown in the synchronization between the samples and the related metadata is implicit given that it is provided by the arrangement of this data in the content stream .

Besides it should be also noted that some data of the metadata such as the so called second data and in particular the initialization vector IV could be received by the application software APP separately from the other data of the metadata namely by a different channel. Once again in this case data provided by another channel must be processed in synchronism with any other input data i.e. the other data of the metadata and the samples . For the sake of simplicity one considers in the following description that the metadata relating to a sample are comprised in the same packet and that the metadata and the samples are arranged in the media content as illustrated in .

The application software APP can run e.g. within a user device typically a computing unit such as a set top box or any other kind of decoder. Alternatively application software could be remotely accessed for instance through a media path and could be hosted by a remote server. More particularly the media content is received through the input port shown on the left side of of this first interface in a form of at least one encrypted sample . Application software APP is able to communicate through a second interface with a secure environment SE . This secure environment is in charge of handling the metadata . Therefore and in accordance with the invention the application software APP is not allowed to successfully process the data comprised in the so called metadata . Indeed given that metadata comprises at least some encrypted data in particular sensitive data such as the content key and the watermarking metadata requiring at least a secret key to be decrypted and given that the metadata is further at least partly digitally signed with an signing algorithm or function which could be kept secret by the manufacturer by the vendor or by the provider of the secure environment therefore the application software is unable to successfully access to the sensitive data comprised in the metadata.

The first step refers to instruct the application software APP for extracting metadata for example from the digital media content before transmitting the metadata to the secure environment . This can be done by successively identifying a metadata e.g. by means of the detection of a header or any specific information during the processing of the encrypted data stream namely during the successive reading of each data contained in the stream. In addition and according to a preferred embodiment one has taken care to introduce in advance a specific code programming instructions in an application layer of the application software e.g. during an initialization step to direct transmission of each metadata upon receipt towards the secure environment through the second interface . Accordingly the step aiming to instruct the application software APP to extract the metadata from the digital media content and to transmit the metadata to the secure environment can be performed by modifying an application layer within a standard application software APP i.e. a common APP .

Then the next following steps are performed within the secure environment until the currently processed sample has been decrypted and watermarked unless otherwise stated. To this end the secure environment performs the decryption of at least a part of the first data i.e. at least some data of said first data such as the content key Kc by means of the cryptographic unit . This unit used the same cryptographic algorithm or a paired algorithm as that used during the encryption process. For the decryption the cryptographic unit will use the transport key s KT KT to retrieve at least the content key Kc and preferably the watermarking metadata WM comprised in the encrypted first data . If the first data has been encrypted with only one key instead of two keys the cryptographic unit needs to obtain only one so called transport key KT. To this end the secure environment is able either to extract the transport key s KT KT from a secure memory or to derive said transport key s KT KT from a secret key Ks stored in the secure memory . Indeed the so called transport key s KT KT can for instance be calculated by a plurality of cryptographic modules which determine a plurality of keys by successive cryptographic operations until the final transport key s KT KT is obtained. Accordingly the transport key KT KT can be derived from the secret key Ks stored in the secure memory.

The transport key s KT KT can be stored in the secure memory during the manufacturing of the secure environment or during its personalization for instance via a downloading process which can be performed during an initialization phase.

Thanks to the transport key s KT KT at least the content key Kc and the watermarking metadata WM if required can be retrieved in an intelligible form. If the same content key Kc is used for the decryption process of several samples within the same crypto period preferably the system will store in a temporary memory the content key Kc in its intelligible form during the entire crypto period thereby avoiding determining the content key Kc each time a sample is decrypted during this crypto period.

Preferably the first data also comprises key metadata KcM as shown in . The key metadata is preferably encrypted by the same transport key KT as that used for encrypting the content key Kc. The key metadata KcM can refer to parameters relating to the utilization of the content key Kc. For instance these parameters may inform a descrambler that the related content key has to be used for decrypting a stream e.g. each sample encrypted with AES CTR mode. In one embodiment the key metadata KcM may comprise information that enforces the decryption of the samples with a particular cryptographic algorithm and chaining mode such as AES CTR. The chaining mode is handled in the secure environment in particular in the descrambler and can not be modified by the application software APP. Other information such as a flag can be included in the key metadata as suggested hereafter. If key metadata KcM is present within the first data then the key metadata KcM is decrypted and processed before the decryption of the watermarking metadata WM because the decryption of the watermarking metadata WM may depend on the state of the flag comprised in the key metadata KcM as explained hereafter.

Then during the next step one proceeds with the verification of the authentication of the digitally signed first and second data. To this end the digitally signed metadata is introduced together with the digital signature SI into an authentication unit comprising the secret function algorithm for verifying the signature of the signed data. The verification is performed by calculating a second signature on the basis of the signed data received by the authentication unit and by comparing this second signature with the original signature . If there is a match then the metadata is authentic i.e. this metadata has not been tampered during the transmission from the sender to the recipient and are therefore identical to the original metadata of the sender. Further to this result the authentication unit can provide a message noted Y N as for Yes or No in e.g. to a central processing unit in order to inform the latter whether the metadata is authentic or not.

If the authentication unit provides a negative message preferably the system will undertake countermeasures. For instance the system can stop any subsequent descrambling process for at least one crypto period. In variant the system can send an encrypted message e.g. to the content provider or the authority managing the subscriptions in order to inform this entity that this system identified e.g. by a unique identifier has found tampered metadata. An intelligible message can also be sent to the attention of the end user for instance towards the rendering device connected to the application software or to its host computing device.

On the contrary if the authentication step provides a positive outcome then the watermarking metadata WM is transmitted to a watermarking unit .

Then the digital media content the content key Kc and the initialization vector IV is transmitted to a descrambler for descrambling each encrypted sample by means of the sample key Kc . The decryption of the encrypted sample is performed by means of the pair of cryptographic data Kc IV used as input data in the cryptographic process within the descrambler .

In another embodiment the transmission of the content key Kc and or the initialization vector IV to the descrambler can be performed only if the authentication step provides a positive outcome. In variant the transmission of the digital media content to the descrambler can also depend on the outcome of the authentication step so that the media content is transmitted only in case of positive outcome.

According to another embodiment the decryption step performed by the cryptographic unit could be performed after the authentication step. In this case if the authentication step provides a negative outcome the system could be able to prevent at least the transmission of the content key Kc towards the descrambler .

According to the preferred embodiment each sample can be retrieved typically from the data stream owing to size information SZ. Accordingly size information is also input into the descrambler as shown in .

Once the sample has been decrypted the descrambled sample is then input into the watermarking unit for digitally marking it by means of the watermarking metadata WM which contains at least one watermark marker to embed within the descrambled sample . Preferably this watermark or at least its location within the sample changes from one sample to another.

According to a preferred embodiment the watermarking unit is supplied with a first additional input Wreferring to a complementary watermark in particular to a unique watermark like a unique stamp which is specific to the secure environment by including e.g. the unique identifier ID of this secure environment or a derived value. This identification watermark Wallows to identify the secure environment having processed the samples and thus enable to identify the user device e.g. STB into which this secure environment is installed. As shown in the identification watermark Wcan be e.g. stored in the secure memory within the secure environment.

In variant this identification watermark Wcould be obtained by processing pre watermarking data together with the bits defining the unique identifier ID assigned to the secure environment . The pre watermarking data could comprise at least one common watermark W and at least one record which could be represented by the following notation R Adr V V. Each record comprises a position or the address of the block which has to be marked Adr and an alternate value namely a bi state value V V which can be either Vor V. For instance by having ID 01011 as identifier of the secure environment and by having five records R to R i.e. one record for each bit of the ID the identification watermark Wcould be obtained by marking the sample with Vat position Adr Vat position Adr Vat position Adr Vat position Adrand Vat position Adr.

According to another embodiment the watermarking of the descrambled sample may depend on the state of at least one flag F so that the watermarking unit can output watermarked samples or descrambled samples without any watermark. Indeed the system is able to control the watermarking unit by providing information via the flag F stating either that the watermarking has to be done or that the watermarking must not be done. Accordingly some descrambled sample of the same media content can be watermarked while others remain without watermark. Alternatively all of the descrambled samples could remain without watermark. Thus such information could be used for indicating to the watermarking unit that the entire data stream must or must not be watermarked. In this case a second flag could be also used for that purpose. The flag F may include a single bit providing two states 1 or 0 for defining if the watermark must be applied or not. For security reason this flag could comprise more than one bit. The flag F is included in the metadata preferably within first data .

According to the preferred embodiment there are two flags F. The first flag F is used for controlling the watermarking of each descrambled sample namely in an individual manner. Accordingly the first flag F is comprised in the watermarking metadata WM and this flag is processed first in order to know depending on its state 0 1 whether the relevant scrambled sample has to be watermarked or not.

The second flag F is used for controlling the watermarking of a plurality of descrambled samples for instance in order to know whether the entire media content has to be watermarked or not. Accordingly the second flag F is comprised in the key metadata KcM processed by the cryptographic unit so that the activation of the watermarking is linked to data relating to the content key Kc. Besides the state of the second flag F controls the consideration of the first flag F and the achievement of the authentication step. Indeed in the case where the second flag F indicates that no watermarking is required e.g. for all the descrambled samples of a media content stream then the authentication step will be bypassed until a new instruction is provided through the second flag F and preferably the decryption of the watermarking metadata WM will not be performed because it is unnecessary . Accordingly the second flag F provides an indication whether the stream of samples has to be watermarked or not. Given that this second flag F is included in the key metadata KcM therefore the key metadata KcM will be decrypted and read before the decryption of the watermarking metadata WM. In the case where the second flag F indicates that the samples have to be watermarked then the state of the first flag F is taken into account as a subordinate condition. Thus although the second flag F indicates that the stream has to be watermarked some individual samples of this stream may remain without watermark in the case where the first flag F occasionally indicates that no watermarking is requested for certain samples.

The flags F F are preferably processed by the central processing unit so that this CPU may decide to undertake the appropriate steps.

Owing to such flags in particular owing to the first flag F it becomes possible to introduce fake watermarking metadata within the metadata . Such fake watermarking metadata will not be taken into account if a flag F stating that no watermarking is required is provided. Indeed the structure of the metadata in particular the structure of the watermarking metadata WM is kept regardless metadata includes true of fake watermarking metadata. Therefore a malicious person will be unable to distinguish between true and fake watermarking metadata contrarily to the system which will be informed accordingly by means of the flag.

Finally the system transmits the sample provided at the output of the watermarking unit to the application software APP or to a secure media path for rendering purposes.

According to one embodiment the digital media content is a stream media content compliant with the ISO Base Media File Format ISO BMFF . It could be also compliant with an HTTP based media streaming communications protocol such as Http Live Streaming HLS .

In accordance with a further embodiment the secure environment is controlled by a firmware Firm i.e. a microcode or a program code implemented into a processing unit e.g. a CPU within the secure environment. Accordingly the secure environment is able to work in an independent manner once it has received the metadata .

Whatever the embodiment the firmware can be downloadable or upgradeable through the application software APP. However in the case where the firmware is installed via the application software into the secure environment e.g. in a non volatile memory in view to be run by an internal central processing unit located within the secure environment then the firmware will be downloaded in an encrypted and signed form by the internal CPU. Accordingly the downloaded firmware is installed only if it has been successfully authenticated by a related secret authentication process within the secure environment. Besides the firmware Firm could be also stored outside the secure environment for instance within the application software APP. In this case the firmware will be stored in an encrypted form and will be decrypted by the secure environment only.

As already mentioned the present invention also refers to a system for implementing the above described method. To this end the invention also refers to a system for watermarking digital media content supplied in an encrypted form more particularly at least partially encrypted as described in reference to .

As shown in the attached figures especially in the system comprises a computing unit for running the application APP into which the digital media content is input through the first interface in a form of at least one encrypted sample whose size is defined e.g. by size information SZ . The digital media content comprises the same data as already explained in reference to the method and the media content is also related to metadata . For the sake of simplicity and as already mentioned in reference to the method one considers that the metadata relating to a sample are comprised in the same packet and that the metadata and the samples are arranged in the media content as illustrated in .

According to the invention the system further comprises a secure environment communicating with the application software APP through the second interface .

In addition the application software APP comprised in the system is also configured to extract metadata from the digital media content or from another source e.g. a playlist before transmitting the extracted metadata to the secure environment for processing. The second interface is further used for outputting the descrambled sample i.e. either a descrambled sample without watermark or a watermarked descrambled sample from the secure environment in view to be played by a rendering device.

The second interface can refer to a protocol intended to be used as an interface software components such as Application Programming Interface API and allowing two programs or software firmware etc . . . to communicate with each other.

Preferably the secure memory further comprises a unique identification watermark Wto be transmitted to the marking unit either upon request from this unit or by order of the cryptographic unit for adding a unique identification mark during watermarking of the sample. Accordingly the watermarked sample can comprise at least two distinct watermarks namely the watermark provided by the watermarking metadata WM and the identification watermark Wspecific to the secure environment the same is applicable for the above method .

According to a preferred embodiment the secure environment comprises a central processing unit and a non volatile memory into which the firmware Firm is implemented for controlling all components circuits logical units memory etc . . . of the secure environment. Thus the secure environment acts as a secure master processing unit.

In variant the secure environment could be devoid of any central processing unit such as the CPU running a firmware for controlling its components but could be controlled by the application software APP as a secure processing slave unit namely without any possibility for the application software APP to have access to any sensitive data. Accordingly sensitive data such as decrypted data is always processed by the secure environment only.

Preferably the secure environment is made of a monolithic chipset. Besides this secure environment or this monolithic chipset can be accommodated by a smartcard.

In another embodiment the descrambler and the watermarking unit could be physically separated from the secure embodiment while remaining physically connected to the latter.

Thanks to the present invention the watermarking of the samples is enforced by cryptographically binding the watermarking metadata WM with the content protection right namely the content key Kc and related key metadata KcM if any and with the initialization vector IV used to decrypt the content samples . Only the secure environment is able to retrieve the content key Kc and the watermarking metadata WM to decrypt and mark the digital media content. Even if the application software APP has access to this data IV WM it could not exploit them to understand modify how the WM process works.

