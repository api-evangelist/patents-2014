---

title: Packet tracing in a software-defined networking environment
abstract: An example method to perform packet tracing in a Software-Defined Networking (SDN) environment is provided. The SDN environment comprises an SDN controller device and a plurality of forwarding devices configurable by the SDN controller device. The method may comprise the SDN controller device configuring the plurality of forwarding devices to generate trace information of packets associated with a communication flow in the SDN environment, and the SDN controller device receiving, from the plurality of forwarding devices, trace information comprising header information and payload information of packets associated with the communication flow. Based on the trace information, the SDN controller device may generate aggregated trace information that identifies forwarding devices that processed a particular packet associated with the communication flow, or packets associated with the communication flow that are processed by a particular forwarding device, or both.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09419874&OS=09419874&RS=09419874
owner: NICIRA, INC.
number: 09419874
owner_city: Palo Alto
owner_country: US
publication_date: 20140327
---
Communications networks are generally packet switched networks that operate based on Internet Protocol IP . Packets from a source device may travel to a destination device via paths chosen by forwarding devices connecting them. Since the forwarding devices operate independently and generally make local forwarding decisions the path between the source and destination devices may not be the same for each packet and may not be the same in each direction. This presents a challenge to trace packets and their paths through different forwarding devices in the network.

In the following detailed description reference is made to the accompanying drawings which form a part hereof. In the drawings similar symbols typically identify similar components unless context dictates otherwise. The illustrative embodiments described in the detailed description drawings and claims are not meant to be limiting. Other embodiments may be utilized and other changes may be made without departing from the spirit or scope of the subject matter presented here. It will be readily understood that the aspects of the present disclosure as generally described herein and illustrated in the drawings can be arranged substituted combined and designed in a wide variety of different configurations all of which are explicitly contemplated herein.

Referring to the SDN controller device on the left hand side of at block the SDN controller device configures the forwarding devices one shown for simplicity to each generate trace information of packets associated with a communication flow in the SDN environment. At block the SDN controller device receives from the forwarding devices trace information that includes header information and payload information of the packets associated with the communication flow. At block based on the trace information the SDN controller device generates aggregated trace information that identifies forwarding devices that processed a particular packet or packets processed by a particular forwarding device or both.

Referring to the forwarding device on the right hand side of at block the forwarding device receives configuration information from the SDN controller device to generate trace information of packets associated with a communication flow. At blocks and the forwarding device receives packets generates trace information of packets associated with the communication flow and sends the trace information to the SDN controller device.

Unlike a conventional network the SDN environment according to example process allows logical separation between a control plane that decides how packets are forwarded and a data plane that implements how packets are forwarded. The SDN controller device acts as the control plane and configures the forwarding devices which act as the data plane to generate trace information.

Since the trace information received from the forwarding devices includes both header information and payload information the SDN controller device may generate aggregated trace information that provides a global view of how and which packets are forwarded in the SDN environment. For example the aggregated trace information identifies forwarding devices that processed a particular packet or packets processed by a particular forwarding device or both. Each forwarding device may process a packet in any suitable manner such as forwarding the packet to another forwarding device forwarding the packet to the SDN controller device forwarding the packet to a user or host in the user space modifying the header information of the packet before forwarding it and dropping the packet etc.

Using example process the forwarding devices may be configured by the SDN controller device to generate trace information associated with any communication flow of interest. The aggregated trace information may then be used in any suitable application such as network debugging packet loss analysis and monitoring network infrastructure health monitoring network security monitoring security policy compliance monitoring and application network protocol analysis e.g. Network File System NFS etc.

SDN controller device represents the control plane that decides how packets are forwarded and what trace information to capture by forwarding devices in SDN environment . SDN controller device may also be responsible for other higher level control functions such as policy enforcement security checks and naming etc. Forwarding devices represent the data plane that performs packet forwarding and generates trace information depending on configuration by SDN controller device .

Forwarding devices each maintain a flow table e.g. Flow Table at Forwarding Device Flow Table at Forwarding Device etc. that is configurable by SDN controller device . For example SDN controller device may instruct adding entries to or deleting entries from flow table of forwarding device . Each entry may include flow characteristic information to be matched by forwarding device against received packets and action to be performed once a match is found.

Any suitable flow characteristic information may be used to match a packet against a particular communication flow such as fields from different protocol layers etc. Examples include source and destination Internet Protocol IP addresses source and destination Media Access Control MAC addresses source and destination port numbers in a transport layer e.g. Transmission Control Protocol TCP and User Datagram Protocol UDP port numbers and protocol e.g. IPv4 or IPv6 protocol number etc.

Action specifies how forwarding device handles or processes a packet that matches flow characteristic information . For example action may be to drop the packet forward the packet to an outgoing port forward the packet to SDN controller device and generate trace information associated with a communication flow etc. Forwarding device may also modify header information of the packet before forwarding it to another device SDN controller device or a user not shown for simplicity . In flow table entry may further include other fields such as priority of the entry timeouts i.e. maximum of idle time before a flow is expired etc.

Entries in flow table may each be associated with a communication flow which may generally refer to a stream of packets between source device and destination device . SDN controller device decides whether a communication flow is permissible in SDN environment such as according to network policy etc. Although not shown in there may be multiple communication flows in SDN environment between different source devices and destination devices and each communication flow may be assigned with a different flow identifier ID by SDN controller device .

Any suitable SDN protocol may be used by SDN controller device to configure forwarding devices in SDN environment such as Open Flow protocol OFP CLIs Command line Interfaces NETCONF Network Configuration Protocol NETCONF Yang Schema SNMP Simple Network Management Protocol XMPP Extensible Messaging and Presence Protocol OpenStack virtualization software APIs Application Programming Interfaces OF Config Open Flow Management and Configuration Protocol and Secure Shell SSH etc. SDN controller device and forwarding devices may communicate via a secure channel.

At block related to in SDN controller device configures forwarding device to generate trace information. The configuration may be set up by for example a network manager to trace packets associated with a communication flow. In the example in SDN controller device performs the configuration by sending configuration information to forwarding device to update its flow table .

At block related to in forwarding device receives configuration information and updates flow table . In particular forwarding device adds or modifies flow table entry to include flow characteristic information of a communication flow e.g. Flow and action to generate trace information if a packet is matched against flow characteristic information .

At block SDN controller device may also specify a trace duration in configuration information . In this case forwarding device will generate trace information during the trace duration and report to SDN controller device after the trace duration elapses. The trace duration may be tracked by each forwarding device using any suitable technique such as setting a timer etc. Setting the trace duration reduces the need for forwarding device to report to SDN controller device every time a packet is received thereby reducing processing burden on forwarding device and traffic in SDN environment .

At block related to in forwarding device receives packet from source device or another device e.g. Forwarding Device receiving packet from Forwarding Device . Forwarding device then parses and matches header information of the packet against flow characteristic information in flow table entry . For example header information that may be extracted from packet include source and destination IP addresses source and destination MAC addresses TCP or UDP port number and IP version number etc.

At block related to in in response to finding a match forwarding device generates trace information and stores it locally in any suitable data structure. In the example in trace information includes Flow ID associated with packet e.g. Flow header and payload information of packet device ID of forwarding device e.g. Forwarding Device and direction at which packet is travelling . For example direction may be indicated by an outgoing port via which packet is forwarded or an address e.g. IP or MAC of the next hop etc.

It will be appreciated that header and payload information in trace information may be a copy of the corresponding header and payload information in packet . Alternatively forwarding devices may analyse packet to generate an extract of the packet s header and payload . Generating the extract instead of an exact copy of packet requires additional processing at forwarding device but reduces the size of trace information sent to SDN controller device .

At block related to in forwarding device determines whether the trace duration set by SDN controller device has elapsed. If not forwarding device repeats blocks to for the next received packet. Otherwise forwarding device sends trace information that includes header and payload information of packets associated with Flow to SDN controller device .

Trace information from forwarding devices may then be used by SDN controller device to generate aggregated trace information according to blocks and in .

In the example in trace information from Forwarding Device is associated with Flow and includes Flow ID 1 see header and payload information of Kpackets labelled to K see Device ID 1 see and direction see . Similarly trace information N from Forwarding Device N is also associated with Flow and includes Flow ID 1 see N header and payload information of Kpackets labelled N to N K see N Device ID N see N and direction see N . Since forwarding devices may receive different numbers of packets associated with Flow within a trace duration set by SDN controller device values Kto Kmay be different.

To generate aggregated trace information SDN controller device compares trace information to N from Forwarding Devices to N to identify inter alia forwarding devices that processed a particular packet e.g. Forwarding Devices to N processed Packet or different packets processed by a particular forwarding device e.g. Packets to N are processed by Forwarding Device or both.

For example SDN controller device may identify a particular packet e.g. Packet based on header and payload information from a particular device e.g. from Forwarding Device which may then be mapped to header and payload information from another device e.g. from Forwarding Device . This process is repeated for other devices e.g. Forwarding Devices to N to trace a path through which the same packet is forwarded.

Since header information of packet may be updated by forwarding devices as it is forwarded its payload information generally provides a more accurate indication as to whether two packets e.g. Packet processed at Forwarding Device and Packet N processed at Forwarding Device N are the same. For example the checksum of Packet may be compared against the checksum of Packet N to verify whether they are the same packet.

Once a particular packet e.g. Packet is identified SDN controller device may determine which forwarding devices e.g. Forwarding Devices to N have processed that particular packet e.g. Packet based on device IDs see to N . Further based on direction see to N SDN controller device may then determine which path the packet e.g. Packet is forwarded and whether it is forwarded or dropped at different forwarding devices along the path. For example as indicated at Packet is forwarded along a path defined by Forwarding Devices to N. Also Packet is forwarded by Forwarding Devices to N before being dropped at Forwarding Device N.

Similarly SDN controller device may determine packets processed by a particular forwarding device e.g. Forwarding Device N once different packets are identified. For example as indicated at based on header and payload information of different packets to N SDN controller device may determine that Forwarding Device N has processed Packet to Packet M of Flow including forwarding Packet and Packet but dropping Packet .

The above examples can be implemented by hardware including hardware logic circuitry software or firmware or a combination thereof. is a schematic diagram of an example system that includes first computing device capable of acting as SDN controller device and second computing device capable of acting as forwarding device .

First computing device may include processor and memory that may communicate with each other via a bus not shown for simplicity etc. Memory stores instructions which in response to execution by processor cause processor to perform processes described herein with reference to to . For example processor may implement trace configuration unit to configure forwarding devices according to block in and block in and trace processing unit to process received trace information to generate aggregated trace information according to blocks and in and .

Second computing device may include processor and memory that may communicate with each other via a bus not shown for simplicity etc. Memory stores instructions which in response to execution by processor cause processor to perform processes described herein with reference to to . For example processor may implement trace generation unit to generate trace information as described with reference to .

Although not shown first computing device and second computing device may each include multiple interfaces e.g. outgoing ports and incoming ports via which information is received or sent.

The techniques introduced above can be implemented in special purpose hardwired circuitry in software and or firmware in conjunction with programmable circuitry or in a combination thereof. Special purpose hardwired circuitry may be in the form of for example one or more application specific integrated circuits ASICs programmable logic devices PLDs field programmable gate arrays FPGAs and others. The term processor is to be interpreted broadly to include a processing unit ASIC logic unit or programmable gate array etc.

The foregoing detailed description has set forth various embodiments of the devices and or processes via the use of block diagrams flowcharts and or examples. Insofar as such block diagrams flowcharts and or examples contain one or more functions and or operations it will be understood by those within the art that each function and or operation within such block diagrams flowcharts or examples can be implemented individually and or collectively by a wide range of hardware software firmware or virtually any combination thereof.

Those skilled in the art will recognize that some aspects of the embodiments disclosed herein in whole or in part can be equivalently implemented in integrated circuits as one or more computer programs running on one or more computers e.g. as one or more programs running on one or more computer systems as one or more programs running on one or more processors e.g. as one or more programs running on one or more microprocessors as firmware or as virtually any combination thereof and that designing the circuitry and or writing the code for the software and or firmware would be well within the skill of one of skill in the art in light of this disclosure.

Software and or firmware to implement the techniques introduced here may be stored on a non transitory machine readable storage medium and may be executed by one or more general purpose or special purpose programmable microprocessors. A machine readable storage medium as the term is used herein includes any mechanism that provides i.e. stores and or transmits information in a form accessible by a machine e.g. a computer network device personal digital assistant PDA mobile device manufacturing tool any device with a set of one or more processors etc. . For example a machine accessible storage medium includes recordable non recordable media e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices etc. 

The drawings are only illustrations of an example wherein the units or procedure shown in the drawings are not necessarily essential for implementing the present disclosure. Those skilled in the art will understand that the units in the device in the examples can be arranged in the device in the examples as described or can be alternatively located in one or more devices different from that in the examples. The units in the examples described can be combined into one module or further divided into a plurality of sub units.

It will be appreciated by persons skilled in the art that numerous variations and or modifications may be made to the above described embodiments without departing from the broad general scope of the present disclosure. The present embodiments are therefore to be considered in all respects as illustrative and not restrictive.

