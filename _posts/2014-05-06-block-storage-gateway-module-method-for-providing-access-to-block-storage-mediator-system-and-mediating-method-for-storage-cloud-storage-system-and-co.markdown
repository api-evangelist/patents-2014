---

title: Block storage gateway module, method for providing access to block storage, mediator system and mediating method for storage, cloud storage system, and content delivery apparatus
abstract: Disclosed herein is a block storage gateway module comprising a receiver unit and an access unit. The receiver unit intercepts an operating system call indicating a local access to a storage volume in order to generate a proximal access command. The access unit proximally accesses a storage array based on the said command. The storage array corresponds to the storage volume; the proximal access corresponds to the local access. Also disclosed herein is a mediator system for storage, the system comprising a load balancer device and one or more storage resource devices. Each storage resource device comprises an aforementioned module and a daemon module. The load balancer device receives a remote access request, selects one storage resource device, and sends an address of the selected storage resource device in a grant message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09477429&OS=09477429&RS=09477429
owner: WISTRON CORPORATION
number: 09477429
owner_city: New Taipei
owner_country: TW
publication_date: 20140506
---
This non provisional application claims priority under 35 U.S.C. 119 a on Patent Application No. 102148862 filed in Taiwan R.O.C. on Dec. 27 2013 the entire contents of which are hereby incorporated by reference.

The present invention relates to cloud storage particularly to the art of providing fault tolerant access to and load balancing of block storage.

All common storage devices e.g. hard disk drives optical disks flash memories and magnetic tapes are implemented as block storage the appellation block signifying that data is read or written on the storage devices as fixed length bit strings. As a high level concept however cloud storage emphasizes load balancing extremely high availability and the ability to scale in and out and is oblivious to the operation of lower level storage devices. With the advent of the era of big data a mechanism is needed to wrap or virtualize block storage devices to an abstract layer so as to render them cloud worthy.

In light of the above the present invention discloses a block storage gateway module a mediator system for storage comprising a said module a corresponding mediating method a cloud storage system comprising a said mediator system a method corresponding to the said module for providing access to block storage and a content delivery apparatus for deploying a computer capable of executing that method. An access may be but not limited to a read write open close erase scan format set verify or test diagnosis operation.

The block storage gateway module provided by this disclosure comprises a receiver unit and an access unit. The receiver unit is configured to intercept a system call to an operating system in order to generate a proximal access command the system call indicating a local access to a storage volume. The access unit is configured to perform based on the proximal access command a proximal access to a storage array corresponding to the storage volume. In one embodiment the block storage gateway module further comprises a codec unit configured to generate a fault tolerant datum corresponding to an original datum and to restore the original datum from the fault tolerant datum. The proximal access signifies reading the fault tolerant datum from the storage array when the local access signifies reading the original datum from the storage volume. The proximal access signifies writing the fault tolerant datum into the storage array when the local access signifies writing the original datum into the storage volume.

In the method for providing access to block storage as provided by this disclosure a system call to an operating system is intercepted in order to generate a proximal access command based on which a proximal access to a storage array is performed. The system call indicates a local access to a storage volume corresponding to the storage array. In one embodiment a fault tolerant datum corresponding to an original datum is generated and written into the storage array when the local access signifies writing the original datum into the storage volume. In another embodiment the fault tolerant datum is read from the storage array and restored to the original datum when the local access signifies reading the original datum from the storage volume.

The mediator system for storage as provided by this disclosure comprises at least one storage resource device and a load balancer device. The storage resource device comprises a daemon module and a block storage gateway module. The daemon module is configured to receive a remote access command in order to generate a system call the remote access command indicating a remote access to the storage resource device. The block storage gateway module is configured to intercept the system call and thereby perform a proximal access to a storage array. The proximal access corresponds to the remote access the storage array corresponds to the storage resource device. The load balancer device is configured to receive a remote access request to select one of the one or more storage resource devices and to send a grant message comprising an address of the selected storage resource device.

The mediating method for storage as provided by this disclosure comprises receiving a remote access request selecting one of one or more storage resource devices sending a grant message comprising an address of the selected storage resource device receiving a remote access command in order to generate a system call the remote access command indicating a remote access to the selected storage resource device intercepting the system call and performing based on the system call a proximal access to a storage array. The proximal access corresponds to the remote access the storage array corresponds to the storage resource device.

The cloud storage system provided by this disclosure comprises a plurality of storage nodes one or more storage resource devices and a load balancer device. Each storage resource device is configured to receive a remote access command to intercept a system call corresponding thereto and to perform based on the system call a proximal access to a storage array. The remote access command indicates a remote access to the storage resource device the storage array corresponds to the storage resource device and comprises at least a portion of the storage nodes. The load balancer device is configured to receive a remote access request to select one of the one or more storage resource devices and to send a grant message comprising an address of the selected storage resource device.

The content delivery apparatus provided by this disclosure is configured to deploy a computer causing it to be provided with program code which in turn causes it to execute a plurality of instructions. The instructions comprises intercepting a system call to an operating system in order to generate a proximal access command the system call indicating a local access to a storage volume and performing based on the proximal access command a proximal access to a storage array corresponding to the storage volume. In one embodiment a fault tolerant datum corresponding to an original datum is generated and written into the storage array when the local access signifies writing the original datum into the storage volume. In another embodiment the fault tolerant datum is read from the storage array and restored to the original datum when the local access signifies reading the original datum from the storage volume.

In the following detailed description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the disclosed embodiments. It will be apparent however that one or more embodiments may be practiced without these specific details. In other instances well known structures and devices are schematically shown in order to simplify the drawings.

Please refer to . As shown in the block diagram a block storage gateway module belongs to a storage resource device and comprises a receiver unit a codec unit and an access unit . The access unit is coupled with a storage array . The storage resource device comprises additionally a daemon module . In this embodiment the daemon module the receiver unit the access unit and the storage array form an uninterrupted chain of command and the codec unit is a functional block made use of by the access unit . In another embodiment however as shown in a block storage gateway module may be such that a receiver unit is coupled with a codec unit which is in turn coupled with an access unit .

In the operating system run on a computer implementing the storage resource device the receiver unit may be a hooked or injected kernel module configured to receive a system call generated by the daemon module to access a local storage volume. The storage volume may be virtualized storage like a logical volume and thus may not be physically present in the computer. The system call intended for handling by another kernel module or driver inherent to the operating system is intercepted by the receiver unit which generates a corresponding proximal access command for the access unit . In other words the receiver unit augments or replaces in part the executable object code or machine code for handling system calls associated with the said storage volume in the operating system. The built in program code of the operating system may still be executed before during or after the receiver unit .

One way to hook the receiver unit is to direct an entry in the system call table of the operating system syscall table.S in some Linux distributions instructing how the system call should be handled toward the file path or memory location on which the receiver unit resides. In an operating system without an apparent system call table hooking the receiver unit may involve replacing the input output area where the built in program code resides directly with the receiver unit and selectively backing up the built in program code beforehand.

In one embodiment the said proximal access command is an input output control such as ioctl on Linux or Mac operating systems or DeviceIoControl defined in the Microsoft Windows API application programming interface while part or all of the access unit resides in the user space or userland. In another embodiment the proximal access command is an inter process communication IPC from the receiver unit to a driver that is also in the kernel space and is subordinate to the access unit . The proximal access command is configured to instruct the access unit to access the storage array coupled therewith. The access here is a proximal one for it may be a bus cable or local area network that lies between the access unit and the storage array . Please refer to for an illustration of the proximal relationship between the access unit and the storage array . As shown in the block diagram the storage array is an arbitrary combination of an arbitrary number of direct attached storage DAS nodes network attached storage NAS nodes or storage area networks SAN . The NAS nodes are coupled with the access unit through a wired or wireless network . As a basic unit of the storage array a storage node may be a block device e.g. a DAS node or a constituent of a SAN . Please note that the storage array corresponding to the said storage volume or the storage resource device is what is visible to the access unit or the block storage gateway module and what is perceived by the access unit or the block storage gateway module may be another storage array. Obviously the storage arrays may be disjoint or share at least some of their elements. They are a collection or a family of sets of all the storage nodes that are mentioned in this disclosure.

The proximal access corresponds to the local access to the storage volume as signified by the said system call that is both instances of access have the same operational nature. For example if the daemon module intends that an original datum written into the storage volume then the access unit instructs the codec unit to generate a fault tolerant version of the original datum and writes it into the storage array based on the conversion of commands by the receiver unit . In the case of the block storage gateway module the codec unit generates the fault tolerant datum and forwards it along with the proximal access command to the access unit .

Given that what is written is fault tolerant in most cases subsequent retrieval of the original datum by the daemon module is not affected even if some nodes in the storage array are broken or incapacitated. Fault tolerance usually implies introducing a measure of redundancy in the original datum. Specifically in one embodiment the codec unit performs forward error correction FEC on the original datum in other words the codec unit encodes the original datum using an error correcting code ECC . There are a multitude of ECCs of which the erasure code is taken as an example in the following description of . As shown in the flowchart after the receiver unit intercepts step S the system call indicating that the original datum written into the storage volume and generates in step S the proximal access command the codec unit generates m datum blocks in step S based on the original datum and the employed erasure code in being a positive integer. A datum block may be a portion of the original datum a redundancy for error correction or a combination of both. The access unit then selects some nodes of the storage array and writes the datum blocks and other required information respectively into these nodes in step S. Depending on the relative quantity of the nodes and the datum blocks there may be nodes in the storage array that are not stored with any of the m datum blocks or it may be that every node stores an m th of the fault tolerant version or that some nodes store more than one of the m datum blocks.

The erasure code works in such a way that the original datum can be restored from any k said datum blocks k being a positive integer not greater than m that is assuming that every node in the storage array stores an m th of the fault tolerant datum the integrity and validity of the original datum is intact when there are no more than m k broken or incapacitated nodes. Please refer to as a complement of . As shown in after the receiver unit intercepts step S the system call indicating that the original datum read from the storage volume and generates in step S the proximal access command the access unit reads in step S at least k datum blocks from the storage array in particular from the nodes storing one of the in datum blocks. In step S the codec unit restores the original datum based on the read datum blocks and other required information .

Please refer to . As shown in the block diagram a mediator system for storage comprises storage resource devices and and a load balancer device . The storage resource device comprises a block storage gateway module a daemon module a maintenance module and a proximal access module . The storage resource device may be the same as the storage resource device in therefore the daemon module is the daemon module and the block storage gateway module is coupled with the storage array at the access unit just as the block storage gateway module is. The daemon module communicates with a client that may be coupled thereto through a network especially when it receives from the client a remote access command issued against the storage resource device . The communication between the daemon module and the client may conform with iSCSI Internet Small Computer System Interface or its Ethernet counterpart HyperSCSI Fibre Channel or its Ethernet or Internet Protocol counterpart Fibre Channel over Ethernet or IP ATA over Ethernet or another network storage protocol. In iSCSI jargon the storage resource devices and may represent the same target and the daemon module may be a daemon waiting for SCSI commands tgtd being a common example.

In terms of iSCSI please refer to which illustrates the interaction between the client the load balancer device and the storage resource devices and . As shown in the flowchart the client sends a remote access request in step S consulting the load balancer device on how to access a particular target. The load balancer device selects in step S one storage resource device from the storage resource devices and and others that may be present in the mediator system . Suppose that the storage resource device is chosen. In step S the load balancer device sends a grant message comprising an address of the storage resource device in reply to the client . The address may be a network address comprising a domain name or port number or a code name sufficient for identifying the storage resource device . In this regard the load balancer device also functions similarly to a domain name server DNS .

Based on the address obtained in step S the client sends a remote access command in step S to the storage resource device as an initiator. The remote access command is converted by the daemon module to a system call which is intercepted in step S by the block storage gateway module . Thereafter follows the procedure illustrated in .

In one embodiment the storage resource devices and operating normally periodically report to the load balancer device using heartbeat messages based on whose existence and contents the load balancer device executes step S. Please refer to and take the storage resource device as a concrete example. As shown in the flowchart periodically the maintenance module sends a heartbeat message in step S. Because the heartbeat message from the storage resource device is received just now in step S the load balancer device determines in step S that the storage resource device is operating normally and includes it in a candidate set in step S while expecting the next heartbeat message sent by the maintenance module in step S. In one embodiment the storage resource devices in the candidate set are selected in a round robin manner step S in response to remote access requests for the target they represent e.g. alternating between the storage resource devices and .

As described before there may be DAS nodes in the storage array such as the intrinsic hard disk drives of a computer implementing the storage resource device . In one embodiment the heartbeat message of the storage resource device further comprises a load value of the storage resource device e.g. how much percentage or how many units of capacity is left of the DAS nodes . In another embodiment the load balancer device actively or passively detects the load of the storage resource device through another channel. Suppose that in the mediator system the load of the storage resource device is significantly greater than that of the storage resource device or another that may be present e.g. its load value exceeds the average of the load values of all the storage resource devices by a standard deviation. The load balancer device thereby issues commands to redistribute the portion of data overloading the storage resource device by transferring it to the storage resource device for instance. The redistributing commands may be sent to the daemon module the maintenance module or the said channel depending on the implementation.

As shown in the storage resource device is coupled with the DAS node at the block storage gateway module and the proximal access module . Obviously the proximal access module may but not necessarily share program code with the access unit . In one embodiment when the storage resource device performs a proximal access to the storage array that it sees and when that storage array comprises the DAS node the storage resource device may complete the part of the proximal access relevant to the DAS node through the proximal access module . Specifically the driver of a network interface controller NIC of the storage resource device may be modified or hooked to handle special instructions associated with the mediator system e.g. from another storage resource device.

Please refer to . As shown in the block diagram a cloud storage system comprises a load balancer device storage resource devices and and a plurality of storage nodes forming a superset . The load balancer device may be the same as the load balancer device in the storage resource device or may be the storage resource device and the superset also includes the storage array . An outside client accesses the cloud storage system through a network talking first to the load balancer device and then to the storage resource device or another that may be present in the cloud storage system in a procedure detailed by steps S to S in .

The content delivery apparatus provided by this disclosure is configured to deploy a storage resource device in particular equipping it with a block storage gateway module. Specifically the content delivery apparatus may provide a computer that is implementing the storage resource device with the installer or patch of the block storage gateway module or it may push a configuration of the operating system to the computer. Alternatively the content delivery apparatus may simply be a file server hosting the program code implementing the method for providing access to block storage and a management of a cloud storage system downloads the program code and distributes it to the managed storage resource devices. The management is coupled with one or more storage resource devices in much the same way as a load balancer device is.

To summarize by mediating between block storage and the client side load balanced highly available and scalable cloud storage can be constructed from commodity hardware. The present invention with its purely software defined storage does not rely on any special hardware design and is thus flexible and agile in management.

