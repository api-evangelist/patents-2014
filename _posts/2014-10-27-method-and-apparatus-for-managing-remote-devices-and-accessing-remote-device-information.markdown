---

title: Method and apparatus for managing remote devices and accessing remote device information
abstract: A method, apparatus, system, and computer program product are disclosed to manage access to device information. The system may include a plurality of devices configured to provide device information to a device management server. The system may also include a remote server including the device management server. The device management server may be configured to receive the device information, to determine a receiver for the device information based on one or more permission settings for the plurality of devices, to provide the device information to the determined receiver, and to provide a device management interface, the device management interface includes an interface for modifying the permission settings for one or more particular devices associated with a user account accessing the device management interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09329816&OS=09329816&RS=09329816
owner: ZIH CORP.
number: 09329816
owner_city: Lincolnshire
owner_country: US
publication_date: 20141027
---
This application claims priority to U.S. Provisional Application No. 61 895 993 filed Oct. 25 2013 the entire contents of which are incorporated herein by reference.

Example embodiments of the present invention relate generally to systems that provide information between devices and software applications and more particularly to systems and related embodiments which are configured for managing and sharing access to data among a plurality of disparate devices.

Applicant has discovered problems with current methods for providing information to and from devices. Through applied effort ingenuity and innovation Applicant has solved many of these identified problems by developing a solution that is embodied by the present invention which is described in detail below.

Accordingly methods apparatuses and computer program products are provided for providing information to and from devices. Example embodiments may include a method for managing access to a plurality of devices. The method may include receiving a first set of device permissions for a first particular device of the plurality of devices the set of device permissions received from a first user account the first user account being authorized to manage the first particular device and receiving a second set of device permissions for a second particular device of the plurality of devices. The set of device permissions received from a second user account different from the first user account. The second user account may be authorized to manage the second particular device and being unauthorized to manage the first particular device. The method may also include receiving a first set of device information from the first particular device receiving a second set of device information from the second particular device providing the first set of device information based on the first set of device permissions and providing the second set of device information based on the second set of device permissions. The first set of device information may be provided based on contents of the first set of device information. The first set of device information may be presented in a JavaScript Object Notation format. The first set of device information may be provided via a Representational State Transfer API. The first set of device information may be provided to at least one of an application a device or a user portal. The first particular device may be a printer.

Embodiments may also include a system for providing a device management infrastructure. The system may include a plurality of devices configured to provide device information to a device management server and a remote server comprising the device management server. The device management server may be configured to receive the device information to provide the device information based on one or more permission settings for the plurality of devices and to provide a device management interface. The device management interface may include an interface for modifying the permission settings for one or more particular devices associated with a user account accessing the device management interface. The device management server may be further configured to process the device information to determine the contents of the device information and wherein the device information is provided based on the contents of the device information. The device information may be provided at least in part based on the contents of the device information by assigning a device that provided the device information to a particular device group based on the contents of the device information. The device management server may be further configured to provide a reduced portion of the device information to a receiver of the device information and the reduced portion may be determined based on a set of permissions associated with the receiver.

Embodiments may also include method for managing access to a plurality of devices. The method may include receiving device information from at least one device the at least one device managed by a first user account determining using a processor a receiver for the device information based on one or more device groups to which the at least one device belongs wherein the receiver comprises at least one of an application a device or a user account that is authorized to access a device group of the one or more device groups wherein the receiver is managed by a second user account and providing the device information to the determined receiver. The method may also include assigning the at least one device to a second device group based on the contents of the device information.

Embodiments may also include a method for managing access to a plurality of devices. The method may include receiving device information from at least one device generating using the device information a graphical representation of a status of the at least one device receiving from a requesting device associated with a particular user account an access request for the graphical representation and in response to determining that the particular user account is authorized to access the graphical representation providing the graphical representation to the requesting device. The graphical representation may be provided via a web portal. An update interval for the graphical representation may be determined based on one or more characteristics of the at least one device. The one or more characteristics may include at least one of a maximum bandwidth or a battery status.

Embodiments may also include a gateway device for providing device information to a device management infrastructure. The gateway device may include a memory subsystem a communication interface for receiving device information in a device native format and transmitting the device information to a remote server in a device agnostic format and a device information processor configured to convert the device information into a device agnostic format by encoding the device information in a JavaScript Object Notation JSON object.

Embodiments may also include a method for managing one or more devices via a device management infrastructure. The method may include receiving device information from at least one of the one or more devices via a local area network detecting a firewall between the local area network and a remote server implementing the device management infrastructure circumventing the firewall to enable communications with the remote server and transmitting the device information to the remote server.

Embodiments may also include an apparatus for managing one or more devices using a device management infrastructure. The apparatus may include a memory and at least one processor configured to receive external device information from at least one first external device other than the apparatus to determine internal device information for the apparatus and to transmit the internal device information and the external device information to a remote server implementing the device management infrastructure. The apparatus may be a mobile phone. The apparatus may include a display and the processor may be further configured to receive additional device information from the remote server the additional device information received by the remote server from a second external device and to display the additional device information on the display. The processor may be further configured to detect the presence of the at least one first external device via a device discovery process and to request the device information from the at least one first external device in response to detecting the presence of the at least one first external device.

Embodiments may also include an apparatus. The apparatus may include first communications circuitry configured to enable the apparatus to transmit and or receive a device information message by at least formatting the device information message in a device native format second communications circuitry configured to enable the apparatus to transmit and or receive the device information message by at least formatting the device information message in a device agnostic format and a processor configured to determine which of the first communications circuitry or the second communications circuitry to use to transmit and or receive the device information message. The apparatus may be a printer and the device information message comprises a printer command. The printer command may be encoded in a printer control language. The printer control language may be Zebra Programming Language.

Embodiments may also include a method for managing devices via a device management infrastructure. The method may include receiving a first set of device information in a device native format from one or more devices in communication with a gateway device converting the first set of device information to a device agnostic format and transmitting the first set of device information in the device agnostic format to a remote server. The method may also include receiving a second set of device information in the device agnostic format converting the second set of device information to the device native format and transmitting the second set of device information in the device native format to a device wherein the device provided the first set of device information. The device agnostic format may be JavaScript Object Notation and the device native format may be Zebra Programming Language. The device may be a printer.

The above summary is provided merely for purposes of summarizing some example embodiments to provide a basic understanding of some aspects of the invention. Accordingly it will be appreciated that the above described embodiments are merely examples and should not be construed to narrow the scope or spirit of the invention in any way. It will be appreciated that the scope of the invention encompasses many potential embodiments in addition to those here summarized some of which will be further described below.

Some embodiments of the present invention will now be described more fully hereinafter with reference to the accompanying drawings in which some but not all embodiments of the inventions are shown. Indeed these inventions may be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will satisfy applicable legal requirements. Like numbers refer to like elements throughout.

Businesses typically use various software applications such as Enterprise Resource Planning ERP systems Remote Device Management RDM systems Mobile Device Management MDM systems Warehouse Management Systems Energy Management Systems or Fleet Logistics Systems. Healthcare facilities may have patient management systems. Retail stores entertainment and recreation venues have applications that manage customer interactions. All of these systems rely on data from the physical world. Increasingly the data from the physical world is supplied by devices that identify objects sense conditions and track locations of objects. These applications also frequently must actuate devices to affect real world objects such as printing a label sorting items on a conveyor changing a temperature or rerouting a vehicle. The overall benefits that businesses derive from these applications are frequently proportional to the number of devices that provide or receive data to or from the applications. However as the number of devices in communication with the system increases so too does the complexity of implementing communications between and among these disparate devices. Furthermore many organizations utilize software applications that are remotely hosted in cloud based data centers. This makes connectivity to devices that gather physical world data even more difficult. Additionally discovery and configuration of both wireless and wired devices to enable communication via a device management infrastructure introduces new challenges such as the need to traverse an organization s firewall. As the costs of Internet connected devices continue to decrease organizations are likely to employ increasing numbers of network aware sensing devices. This substantial increase in the number of connected devices creates a significant technical hurdle in connecting to and managing the devices.

Furthermore the inventors have identified that even when connectivity is established to devices obtaining organizing managing processing and providing data received to those devices in a coherent robust manner is difficult. Existing frameworks fail to provide technical solutions for managing access permissions for devices providing credentialing mechanisms to access data received from those devices and the like. To address these problems the inventors have created a platform that addresses these technical problems providing for increased availability of data improved network bandwidth due to management of which connections receive which data and the like.

In view of these technical problems and others that may arise from time to time some organizations may be not be able to take advantage of the cost savings efficiency increases and performance improvements offered by these software applications that utilize data from the physical world. Furthermore even organizations that have connectivity between software applications and devices are limited by multiple proprietary system configurations and communication protocols. Accordingly to overcome these problems example embodiments of the present invention provide a robust flexible and configurable platform that provides systems and methods that combine software applications with devices without the need for users to purchase lease or maintain their own server hardware. Embodiments provide a robust platform and architecture that enables multiple users and organization to leverage the capabilities of a system using device information while reducing or eliminating the overhead costs associated with such a system. Embodiments further provide the capability to manage and share access to data among a plurality of heterogeneous devices. Embodiments provide for managing device access levels such that access to device state may be provided to other devices applications and users via a unified platform and architecture. Embodiments may facilitate these services and benefits through a cloud based service architecture that allows for the sharing of data among devices while preserving user security settings and access rights based on permissions established by the users. Embodiments may also be operable to provide device information to devices applications and the like external to the architecture such as by exposing such state information via an Application Programming Interface API .

As used herein the terms data content information and similar terms may be used interchangeably to refer to data capable of being transmitted received proxied and or stored in accordance with embodiments of the present invention. Thus use of any such terms should not be taken to limit the spirit and scope of embodiments of the present invention. Further where a computing device is described herein to receive data from another computing device it will be appreciated that the data may be received directly from the another computing device or may be received indirectly via one or more intermediary computing devices such as for example one or more servers relays routers network access points base stations hosts and or the like sometimes referred to herein as a network. Similarly where a computing device is described herein to send data to another computing device it will be appreciated that the data may be sent directly to the another computing device or may be sent indirectly via one or more intermediary computing devices such as for example one or more servers relays routers network access points base stations hosts and or the like.

As used herein the term device management infrastructure should be understood to refer to a system configured to provide a plurality of users with access to device information from one or more devices configured to communicate with one or more remote servers. The device management infrastructure may be configured to manage access of particular devices by the users. The device management infrastructure may allow users to determine which users devices and or applications are able to receive device information for devices managed by the particular user. For example a user may use the device management infrastructure to configure a particular device e.g. a printer owned by a particular client to communicate with an application managed by another user e.g. a printer maintenance application operated by a printer maintenance service . The communication between the device and application may be facilitated by the device management infrastructure. To this end the device management infrastructure may act as a proxy for transferring device information to from and among various devices in communication via the device management infrastructure. The device management infrastructure may facilitate these proxy operations by enabling communication of device information in a device agnostic format.

In some embodiments the device management infrastructure may be configured to authenticate user credentials for a user account. User accounts may be associated with particular sets of access rights for various devices and applications. For example a user account may own several devices thereby having complete or full access rights to device information and to set permissions for each owned device while having more limited access rights to certain devices owned by other users. In some embodiments a user may configure certain devices to report certain data to other devices users or applications. For example the user may expose selected device information to one user e.g. a ribbon out printer status may be exposed to a printer maintenance service but may not expose other device information to that user e.g. data indicative of what the printer is currently printing i.e. print data .

Embodiments of the device management infrastructure may also provide the capability to execute one or more applications to process device information received from one or more devices. These applications may execute internally to the device management infrastructure. For example an application may receive data from a barcode scanner at a loading dock. As each incoming package is scanned the application may look up data from the scanned barcode in a data table and update the location of the package in a database. The database may be maintained internally to the device management infrastructure. In contrast embodiments may also include the ability to notify applications external to the device management infrastructure. For example the device management infrastructure may implement an API e.g. a Representational State Transfer REST API for communication with one or more applications or devices external to the device management infrastructure.

The term device information should be understood to refer to any electronic data and or signals that may be sent or received from an electronic device. For example device information may include electronic data packets that reference a device state such as the device s settings firmware or software. The device information may also include data received from one or more sensors e.g. motion sensors bar code readers device diagnostic sensors GPS sensors radio frequency identifier tag readers cameras battery monitors consumable monitors or the like coupled to or associated with a device in communication via a device management infrastructure. Further examples of device information may include but are not limited to product inventory levels device battery readings device error conditions print data device consumable media levels location information image data audio data motion sensor readings RFID and or NFC tag information bar code scan information or the like. The device information may also be information sent to a device like an actuator position a desired temperature information to be displayed information to be printed radio frequencies a motor speed conveyor belt position settings engine shutdown commands local and or remote temperatures a measured humidity a measured pressure infrared sensing information ultrasonic sensing information or the like. In some embodiments the device information may include commands such as configuration settings instructions to perform certain actions or the like.

The term device should be understood to refer to any object that is instrumented with electronic systems operable to exchange device information with and or be managed by the device management infrastructure. Devices may be associated with particular sets of permissions such as associated with particular users or organizations as described above. In some embodiments particular users may have administrative rights to control access to particular devices via the device management infrastructure. In some embodiments devices may include one or more components that separately report device information. It should be readily appreciated that the distinction between a device and a component may be different in different contexts. These different contexts may be presented via an interface such as a web based device dashboard a device management application or the like although it should be appreciated that the context may also be defined by other means than a user interface e.g. based on a relationship between a particular component and a particular application . For example a factory manager may be presented with device information for a particular manufacturing equipment as a single device when viewing the manufacturing equipment in a web based dashboard while a repair technician tasked with maintenance of the particular manufacturing equipment may be presented with the same manufacturing equipment as multiple devices e.g. cooling system power supply main processor etc. . In the context of this application the term device should be understood to refer to devices managed by the device management infrastructure. For example an external accounting database or ERP system that communicates with the device management infrastructure but is not managed by the device management infrastructure and does not report device information to the device management infrastructure would not qualify as a device under the definition of device as used herein.

Devices may be categorized as edge devices and or legacy devices . The term edge device should be understood to refer to any device that is managed by the device management infrastructure and capable of direct communication with the device management infrastructure according to one or more communication protocols associated with the device management infrastructure. Devices that contain communications modules operable to communicate with a management server in a device agnostic format e.g. via a device management API supported by the management server can be considered edge devices. These edge devices may include one or more software applications or device drivers to facilitate communication in the device agnostic format such as by generating one or more messages containing the device information for transmission in the device agnostic format. Example edge devices may include but are not limited to network enabled printers capable of communicating via the device management infrastructure in the device agnostic format laptops desktops smartphones or tablet computers executing an application or driver to communicate via the device management infrastructure in the device agnostic format or any other device capable of direct communication via a device agnostic format and using the device management infrastructure.

In contrast with the edge devices the term gateway devices is used to refer to bridge devices that enable one or more legacy devices to communicate via the device management infrastructure. Gateway devices may serve to perform a protocol translation to translate device information provided in a device native format into the device agnostic format used throughout the device management infrastructure. The term legacy device may refer to any device that is configured to communicate in a device native format instead of a device agnostic format used by the device management infrastructure. A gateway device may receive device information from a legacy device in the device native format and an application executing on the gateway device may translate the device information into a device agnostic format. It should be appreciated that translation from a device native format to a device agnostic format may not require a translation in communication protocols. For example a legacy device may communicate device information to a gateway device via one or more data packets sent using Internet Protocol IP with the contents of the data packets presented in the device native format. The gateway device may receive these data packets and reformat the contents to generate one or more IP packets containing the device information formatted in the device agnostic format.

It should further be appreciated that a device may possess the capability to connect to a device management infrastructure as both an edge device and a legacy device. For example a device may ship to a customer containing circuitry configured to connect both directly to the device management infrastructure e.g. as an edge device and via a gateway device e.g. a legacy device . As a specific example one such device could be a printer implemented to communicate via both a native printer language format e.g. Zebra Programming Language ZPL and with the cloud via a device agnostic format. The native printer language format might be received and processed by a gateway device to communicate with the device management infrastructure or the printer may communicate directly with the device management infrastructure as an edge device. In some embodiments devices that are capable of operating as both an edge device and a legacy device may be configured by a purchaser or user to select how to communicate with other devices and with a device management infrastructure.

The term interface should be understood to apply to connections used to provide access to device information gathered via the device management infrastructure. Examples of interfaces may include web based device dashboards e.g. a web page associated with a particular device group of devices or the like APIs used to communicate with external applications e.g. an API interface for communication with a customer database not managed by the device management infrastructure and or an external application communicating via an API.

It should also be appreciated that there may be some overlap between edge devices gateway devices and interfaces. For example a gateway device e.g. a router configured to translate data received from connected device into a device agnostic format may also be managed by the device management infrastructure and thus function as an edge device. Such a gateway device may also provide an interface e.g. a web server allowing a user to access device information provided by the device management infrastructure. Similarly in some embodiments a mobile phone may function as an edge device e.g. by reporting the status of the mobile phone directly a gateway device e.g. by receiving Wi Fi communication from nearby devices and translating such communications into a device agnostic format for transmission to the device management infrastructure and an interface e.g. by providing a user with web browser access to a web based device state dashboard hosted by the device management infrastructure or by running a native application .

The term user should be understood to refer to an individual associated with a particular set of account credentials for accessing the device management infrastructure. The term organization should be understood to refer to an entity that may include multiple users. Devices may be associated with specific users and or organizations. For example a particular business may have an organization set up via the device management infrastructure and all of the business s devices may be associated with the organization. Individual users associated with the business may be given separate user accounts and associated with the organization. In some embodiments the device management infrastructure provides for role based management of users within organizations. For example an organization administrator may assign particular devices to particular users for access management and the like. It should be appreciated that an organization administrator may have control over managing access to any and all devices and applications owned or managed by the organization.

The term world is used to refer to the set of all devices applications and other entities to which a particular user or organization has access to within the device management infrastructure at any one particular time. As such the world associated with a particular user may encompass all entities managed by the device management infrastructure that are visible to the user such as devices to which the user has specifically been granted access by others public devices devices owned by the user and the like. Any one user may have access to a multiplicity of worlds. At minimum the user will have access to his home world which refers to the user s account which he created when joining the service. Additionally there may be a public world which encompasses all devices and entities that all users have chosen to make publicly available to all other users. Additionally users may choose to create private or semi private worlds and invite or offer access to other users to these worlds. Users may be able to add subsets of devices they have access to called Groups to these worlds thereby creating a plurality of subsets of devices and entities that various sets of users have access to and can collaborate with. In some embodiments whether a device is a member of a particular group is based on who is responsible for maintaining servicing updating possessing or using the device. Groups may be dynamic such that devices or applications are automatically added or removed from groups based on rules and or based on dynamically changing device information. In some embodiments groups are used to determine which devices are within a given world such as if the world is defined as containing a certain group as devices are added to that certain group they are also added to the world.

The method apparatus and computer program product of the present invention may be embodied by any of a variety of components. For example the method apparatus and computer program product of an example embodiment may be embodied by networked equipment such as a server or other network entity configured to communicate with one or more components which may include one or more edge devices gateway devices interfaces or the like. Additionally or alternatively the components may include fixed computers such as a personal computer or a computer workstation. Still further example embodiments may be embodied by any of a variety of mobile terminals such as a portable digital assistant PDA portable data terminals PDTs sensors readers mobile telephone smartphone laptop computer tablet computer or any combination thereof.

The management server may provide various applications interfaces tools and utilities to manage access interact with communicate with and process information from edge devices A N gateway devices A N and interfaces A N. The management server may be implemented in a cloud environment whereby the management server is located remotely from one or more of the edge devices gateway devices and interfaces . In some embodiments the edge devices gateway devices and or interfaces are owned and or operated by a different entity than the management server . For example a business may own several edge devices and gateway devices that provide data to the management server while the management server is owned and or maintained by a management company other than the business.

In some embodiments users may purchase or lease access to the management server . For example a user may pay a fee to access device management services offered by the management server . The fee may be determined based on a time duration e.g. monthly weekly or annually based on a number of devices managed e.g. a fee that increases per device in communication with the management server based on a number of users who have access to the account or the like.

The edge devices A N may include various devices capable of directly providing information via the device management infrastructure . For example edge devices may include but are not limited to various electronic devices configured to communicate with the device management server via a device agnostic protocol. Examples of these devices may include such as cellular phones network routers laptop computers tablet computers network enabled printers network enabled laminators radio frequency identifier RFID readers barcode scanners netbooks or the like. In some embodiments the edge devices may execute one or more applications to facilitate communication via the device management infrastructure . For example the edge devices may include a driver program or middleware program that generates messages in a device agnostic format readable by the management server .

The gateway devices A N may include devices operable to enable one or more legacy devices A N to communicate with the device management infrastructure. To enable this communication a gateway device may receive device information in a device native format translate device information to a device agnostic format and transmit the translated data to the management server . For example a data structure used to send settings to a printer might have the following structure 

And a data structure used to register a device and create a new virtual device model for management via the device management infrastructure might have the following structure 

The interfaces A N may include various systems and components for accessing and viewing data provided via the device management infrastructure. These interfaces may include systems operable to view information generated by the device management infrastructure such as a web browser used to view a web based portal application. For example the interfaces may include cellular phones network routers laptop computers tablet computers or netbooks. Some types of information generated by the device may be communicated with a buzzer message or sounds via a speaker with light via a LED screen or industrial lighting system or printed output from a printer copier message board or facsimile machine. In some embodiments the interfaces may include external systems or applications designed to interface with the device management infrastructure via an API such as a REST API. For example the interfaces may include application servers external to the device management infrastructure such as external ERP systems database systems or the like.

The management server may access a permissions database for routing of data throughout the device management infrastructure . The permissions database may define access permissions for the edge devices gateway devices legacy devices and or interfaces . For example each edge device gateway device and legacy device may be owned and or managed by a particular user account identified in the permission database. The user account may specify which other edge devices gateway devices legacy devices interfaces and or user accounts may access data provided by an edge device or legacy device owned by the user account. Device permissions may be set for particular types of data provided by each device. For example a printer may provide error condition information consumable level information and data indicating the content of the document the printer is currently rendering for printing. An owner of the printer may allow another user e.g. a printer maintenance service to access the error condition information and consumable level information but not the print data or content.

In some embodiments the permission database may include one or more group definitions. Group definitions may categorize devices into particular groups with particular access levels. For example users may have access to particular groups and the groups may be determined dynamically. In some embodiments users or organizations may freely configure one or more groups and may publish such groups e.g. make them accessible to one or more third parties i.e. other users or organizations within the device management infrastructure .

Returning to the printer example provided above a group may be established for printer devices with error conditions . Upon providing data to the management server that a particular printer device is experiencing an error condition the printer device may be added to the printer devices with error conditions group. A printer maintenance service may have access to device information provided by any device that has been added to the printer devices with error conditions group such that when the printer receives an error condition the printer maintenance service is provided with access to the status of the printer so they can attempt to remediate the error. In some embodiments once the printer maintenance service services one or more printers having error conditions i.e. addresses such error conditions the one or more printers are removed from the printer devices with error conditions group.

It should be readily appreciated that device information can be routed according to various other dynamically defined groups. As another specific non limiting example a scanner e.g. a barcode scanner or RFID reader may register that a good has been dropped off with a common carrier for delivery to a destination. Upon receipt of the good the scanner device may notify the management server and a device e.g. a radio frequency identification tag associated with the good may be added to a group including all of the items present within the shipment being made by the common carrier. An owner or operator of the common carrier may be provided with access to this group to monitor the items they are shipping. When the goods are delivered to their final destination the management server may be notified e.g. by scanning the radio frequency identifier tag again at the destination by another scanner device and access may be removed from the common carrier.

The operations of the management server may be enabled by a device management system . The device management system may include hardware and or software to facilitate the operations of the management server . For example the device management system may serve to facilitate user authentication services management of device permission settings hosting of a web portal for interfacing with the management server operating a publish subscribe system for transferring data throughout the device management infrastructure providing a REST API for interfacing with external systems and or any other functionality necessary to support the device management infrastructure .

The management server may be embodied by a computing system such as the apparatus shown in . As illustrated in the apparatus may include a processor a memory input output circuitry communications circuitry credentialing circuitry application management circuitry and device model management circuitry . The apparatus may be configured to execute the operations described above with respect to and below with respect to . Although these components are described with respect to functional limitations it should be understood that the particular implementations necessarily include the use of particular hardware. It should also be understood that certain of these components may include similar or common hardware. For example two sets of circuitry may both leverage use of the same processor network interface storage medium or the like to perform their associated functions such that duplicate hardware is not required for each set of circuitry. The use of the term circuitry as used herein with respect to components of the apparatus should therefore be understood to include particular hardware configured to perform the functions associated with the particular circuitry as described herein.

The term circuitry should be understood broadly to include hardware and in some embodiments software for configuring the hardware. For example in some embodiments circuitry may include processing circuitry storage media network interfaces input output devices and the like. In some embodiments other elements of the apparatus may provide or supplement the functionality of particular circuitry. For example the processor may provide processing functionality the memory may provide storage functionality the communications circuitry may provide network interface functionality and the like.

In some embodiments the processor and or co processor or any other processing circuitry assisting or otherwise associated with the processor may be in communication with the memory via a bus for passing information among components of the apparatus. The memory may be non transitory and may include for example one or more volatile and or non volatile memories. In other words for example the memory may be an electronic storage device e.g. a computer readable storage medium . The memory may be configured to store information data content applications instructions or the like for enabling the apparatus to carry out various functions in accordance with example embodiments of the present invention.

The processor may be embodied in a number of different ways and may for example include one or more processing devices configured to perform independently. Additionally or alternatively the processor may include one or more processors configured in tandem via a bus to enable independent execution of instructions pipelining and or multithreading. The use of the term processing circuitry may be understood to include a single core processor a multi core processor multiple processors internal to the apparatus and or remote or cloud processors.

In an example embodiment the processor may be configured to execute instructions stored in the memory or otherwise accessible to the processor. Alternatively or additionally the processor may be configured to execute hard coded functionality. As such whether configured by hardware or software methods or by a combination thereof the processor may represent an entity e.g. physically embodied in circuitry capable of performing operations according to an embodiment of the present invention while configured accordingly. Alternatively as another example when the processor is embodied as an executor of software instructions the instructions may specifically configure the processor to perform the algorithms and or operations described herein when the instructions are executed.

In some embodiments the apparatus may include input output circuitry that may in turn be in communication with processor to provide output to the user and in some embodiments to receive an indication of a user input. The input output circuitry may comprise a user interface and may include a display and may comprise a web user interface a mobile application a client device a kiosk or the like. In some embodiments the input output circuitry may also include a keyboard a mouse a joystick a touch screen touch areas soft keys a microphone a speaker or other input output mechanisms. The processor and or user interface circuitry comprising the processor may be configured to control one or more functions of one or more user interface elements through computer program instructions e.g. software and or firmware stored on a memory accessible to the processor e.g. memory and or the like .

The communications circuitry may be any means such as a device or circuitry embodied in either hardware or a combination of hardware and software that is configured to receive and or transmit data from to a network and or any other device circuitry or module in communication with the apparatus . In this regard the communications circuitry may include for example a network interface for enabling communications with a wired or wireless communication network. For example the communications circuitry may include one or more network interface cards antennae buses switches routers modems and supporting hardware and or software or any other device suitable for enabling communications via a network. Additionally or alternatively the communication interface may include the circuitry for interacting with the antenna s to cause transmission of signals via the antenna s or to handle receipt of signals received via the antenna s .

The connection management circuitry includes hardware that may be configured to support management of connectivity of one or more devices to the apparatus . The connection management circuitry may include hardware that allows the apparatus to discover register establish communications with and send data to and from devices that are in communication with the apparatus . To this end the connection management circuitry includes hardware for performing these functions including but not necessarily limited to a processor and network interface hardware. The connection management circuitry further includes or communicates with a memory for storing data relating to connected devices.

The credentialing circuitry includes hardware that may be configured to manage access permissions and credentials for users and devices in communication with the apparatus . The credentialing circuitry is responsible for determining which users applications and devices have access to data provided by particular applications and devices. To this end the credentialing circuitry may include hardware configured to apportion devices into particular groups and worlds and to provide particular users and applications with access to the devices contained within those groups and worlds. To perform these functions the credentialing circuitry may include hardware for receiving requests to access data related to particular devices hardware for managing user account data e.g. user login and password information hardware for maintaining and updating a set of permissions associated with users groups worlds devices and the like and the like. For example the credentialing circuitry may include a processor such as the processor to manage and process requests to add delete and modify device permissions user account data and the like. Credentials account information and associations between devices and particular users groups or worlds may be stored in a memory such as the memory .

The application management circuitry includes hardware that may be configured to manage access to device information for one or more applications. The application management circuitry may include hardware configured to provide an application programming interface allowing applications to access the device information. The application management circuitry may provide applications with the ability to access data associated with particular devices send data to those particular devices receive and calculate statistics related to devices and the like. The application management circuitry may interact with the credentialing circuitry to determine whether particular applications are allowed to access data received from particular devices. The applications that communicate with the application management circuitry may execute locally on the apparatus remotely on a remote computer or the like. In some embodiments applications may be provided by an owner or maintainer of the apparatus . In some embodiments applications may additionally or alternatively execute remotely and interact with the device information via an application programming interface. The application management circuitry may include a processor such as the processor for executing local applications and responding to inquiries and requests from remote applications. The application management circuitry may further include a memory such as the memory for storing data associated with applications device information accessible to the applications and the like. In some embodiments the application management circuitry may interact with the device model management circuitry to obtain device information prompt configuration changes to devices and the like.

The device model management circuitry includes hardware that may be configured to manage one or more device models to allow applications devices and users to interact with the device model and to propagate changes made to the device models. In some embodiments the device model management circuitry includes hardware configured to update the status of the device model based on data received from devices in communication with the apparatus . In some embodiments the device model management circuitry may provide a framework and or API that allows users applications and other devices to affect changes to devices in communication with the apparatus by making changes to the device model. For example the device model management circuitry may identify interactions with the device model by applications users devices and the like determine configuration changes for the device associated with the device model in response to the identified interactions and transmit the configuration changes or otherwise cause the configuration changes to the device associated with the device model based on the determined configuration changes. To perform these functions the device model management circuitry may include a processor such as the processor . The device models may be maintained by the device model management circuitry using a memory such as the memory . Changes may be propagated to the devices using a network interface such as provided by the communications circuitry .

The gateway device s may be embodied by one or more computing systems such as apparatus shown in . As illustrated in the apparatus may include a processor a memory input output circuitry device communications circuitry and management server communications circuitry . The apparatus may be configured to execute the operations described below with respect to . The functioning of the processor the memory and the input output circuitry may be similar to the similarly named components described above with respect to . For the sake of brevity additional description of these components is omitted.

The gateway device may include separate circuitry for communication with devices and with the device management server represented as the device communications circuitry and the management server communications circuitry respectively. The device communications circuitry may include hardware configured to communicate with devices proximate or otherwise locally accessible to the gateway device via a device specific protocol and the management server communications circuitry may be configured to communicate with a management server located remotely via a device agnostic protocol. For example the device communications circuitry may include hardware for communicate with local devices via infrared radio frequency identification RFID Bluetooth ZigBee or the like. Although the device communications circuitry may typically communicate via short range or line of sight protocols such as those described above it should be appreciated that the device communications circuitry may employ any protocol for communicating with devices.

The management server communications circuitry includes hardware configured to communicate with a management server via a device agnostic format. For example the apparatus may translate data received in a device specific or short range protocol and package the data for transmission to the management server and receive data from the management server by transmission control protocol TCP or the like.

As will be appreciated any such computer program instructions and or other type of code may be loaded onto a computer processor or other programmable apparatus s circuitry to produce a machine such that the computer processor other programmable circuitry that execute the code on the machine create the means for implementing various functions including those described herein.

It is also noted that all or some of the information presented by the example displays discussed herein can be based on data that is received generated and or maintained by one or more components of apparatuses and . In some embodiments one or more external systems such as a remote cloud computing and or data storage system may also be leveraged to provide at least some of the functionality discussed herein.

As described above and as will be appreciated based on this disclosure embodiments of the present invention may be configured as methods mobile devices backend network devices and the like. Accordingly embodiments may comprise various means including entirely of hardware or any combination of software and hardware. Furthermore embodiments may take the form of a computer program product on at least one non transitory computer readable storage medium having computer readable program instructions e.g. computer software embodied in the storage medium. Any suitable computer readable storage medium may be utilized including non transitory hard disks CD ROMs flash memory optical storage devices or magnetic storage devices.

Referring now to a block diagram is illustrated showing an example device management server in accordance with embodiments of the present invention. The device management server may provide for management of a device management infrastructure such as the device management infrastructure described above with respect to . Example embodiments of the device management server may include the device management system and the apparatus described above.

The device management server may interface with one or more external applications devices external connections and users . The device management server may comprise one or more virtual device models . The virtual device modules may serve as a representation of the status of the device as known to a device management infrastructure. For example each device in communication with the device management server may have an object representation in a memory or database. The virtual device models may also be used to generate a graphical representation of the device status such as a web portal interface providing the device information.

In some embodiments the virtual device models may be accessed by one or more internal applications to provide information to the internal applications and to allow the internal applications to interact with the devices . In some embodiments a user may provide or configure one or more of the internal applications for use within the device management server . Example internal applications may include a device dashboard that is visible in a web browser interface to display data associated with the virtual device model. Other example internal applications may include applications for monitoring and presenting statistics related to the devices as derived from the virtual device models and or other applications for analyzing processing and or packaging device information derived from the virtual device models .

The device management server may provide users with the ability to host certain applications designed to send and receive data via a device management infrastructure. For example a user may use the device management server to execute an inventory management application that receives data from one or more sensors within a warehouse to monitor stock on hand.

In some embodiments the internal applications may connect with one or more devices or applications. For example the inventory management application described above may be configured to interact with a business storefront to receive orders generate invoices and direct the shipment of goods from the warehouse. In some embodiments the internal applications may function as data aggregators. For example if a particular device or devices are configured to provide device information to the public then an analysis application may aggregate device information from all similar devices to perform analytics tasks. For example certain users may elect to have supply chain transit times made publicly available to assist other users with estimating transit times using certain common carriers. It should be appreciated that some data may be obfuscated or redacted e.g. the exact contents of customer shipments in order to protect confidential company customer and user information. As another example manufacturers may wish to receive aggregated error information e.g. barcode scanner error rates to identify possible software defects and opportunities for product improvement. As yet another example maintenance personnel may receive information aggregated from multiple devices that indicate which devices are in need of maintenance. As a further example RFID readers may be used to sense the arrival of goods and this data may be coupled with temperature sensor data gathered from inside the shipping container in which the goods were delivered to indicate the arrival time as well as condition of the shipment.

The device management server may further include management applications designed to facilitate the administration and operation of the device management infrastructure. For example the device management server may include a connection management module a system management module and a user and organization management module .

The connection management module may facilitate connections between the device management server and the various devices and interfaces external to the device management server . In some embodiments the functionality of the connection management module is provided by the connection management circuitry described above with respect to . The connection management module may for example configure the manner and frequency of device state reporting and polling control routing of device state throughout the device management infrastructure and the like. For example reporting the status of a device may be a power intensive task. As such if an edge device is configured to report its state frequently and the device operates from battery power frequent reporting to update the virtual device model may drain the battery. Similarly devices that operate under bandwidth constraints may also be adversely affected by frequent updating of the state of their attendant virtual device model. Therefore the virtual device model may be configured to reduce a reporting interval in certain circumstances such as if a device is operating from battery power or is otherwise bandwidth constrained. Similarly the virtual device model may also be configured to induce a more frequent reporting interval if the attendant edge device is in a charging state or in response to the device being plugged into an outlet or recharging station. The connection management module may also detect network congestion to determine a reporting interval. For example in an environment with many devices reporting increasing a device reporting interval may make communications on the network difficult. As such the connection management module may reduce a reporting interval for most devices to ensure network traffic is received in a timely manner. In the event a device experiences an error condition the connection management module may increase the reporting frequency of the device in an error state to allow for easier troubleshooting.

The system management module may operate to control the different elements of the device management server such as configuration and execution of the processes necessary to control the functionality of the device management server . In some embodiments the functionality of the system management module is provided by the device model management circuitry and or the application management circuitry described above with respect to . The system management module may act to ensure that data is properly routed between other modules it may ensure that subsystems are working properly and restarted when necessary and it may make sure that the system loads are balanced between modules to ensure efficient and robust operation.

The user and organization management module may be operable to maintain and edit the access permissions associated with the users organizations devices and groups communicating via the device management infrastructure. In some embodiments the functionality of the user and organization management module is provided by the credentialing circuitry described above with respect to . The user and organization management module may function to determine which devices and groups belong to which users organizations and the like and to control how data is provided to authorized parties. In some embodiments the user and organization management module may be operable to control which devices are added and removed to which groups in addition to determining access by users and applications to those groups. For example a given corporation may be associated with an organization and employees of the corporation may each have independent user accounts. An administrator associated with the corporation may define which corporation user accounts have access to which particular devices applications groups and the like. When a user leaves the corporation the administrator may revoke the user s access. In some embodiments access is defined based on certain roles associated with the user e.g. a job title such that multiple devices applications or groups may be reassigned to a different user by associating the different user with the appropriate role e.g. a quality control manager may have certain baseline access rights to various devices .

The device management server may further include connections to external applications connections to devices and connections to users . The connections to external applications may include connections to applications executing on computing nodes external to the device management infrastructure. For example the connections to external applications may be facilitated using a REST API to enable other systems e.g. client ERP systems to send and receive data via the device management infrastructure. In some embodiments communication is implemented using JavaScript Object Notation JSON via a REST API. In some embodiments communication is implemented using Constrained Application Protocol CoAP . The connections to devices may include connections to the edge devices and gateway devices such as described above with respect to .

In some embodiments the interface to user portal applications e.g. a graphical display of data received by the device management server is provided via connections to users . The connections to users may include applications configured to provide a web based portal interface allowing a user to view the status of a particular device or devices. Each of the connections to devices applications and users external to the device management server may be facilitated by one or more APIs. For example these connections may include APIs for communication with applications executing via the device management server e.g. internal applications APIs to establish device properties and methods device management APIs device discovery APIs user and account management APIs and security and authentication APIs. The various APIs may be structured similarly. For example each API may be are embodied as one or more HTTP REST calls which use JSON payloads when necessary. The API function calls may be used to perform Create Read Update Delete Execute and Owner CRUDXO functions using HTTP POST PUT GET and DELETE functions.

Depending upon the details of the specific call all the functions of the different modules can be executed.

The device gateway may communicate with one or more devices via various network protocols. In some embodiments the communication functionality of the device gateway with respect to devices is provided by device communications circuitry as described above with respect to . For example the device gateway may communicate with the devices over a wireless protocol such as the IEEE 802.11 family of protocols. The device gateway may process data received from the one or more devices e.g. the legacy devices described with respect to and transmit the data to a cloud software application such as the device management server described above with respect to . The device gateway may communicate with the device management server using management server communications circuitry as described above with respect to .

The device gateway may include one or more internal applications a device discovery and management module and a connection module for communicating with devices . The device gateway may further comprise a connection management module a system management module a security module and a connection module for communicating with a cloud application .

The internal applications may refer to various applications that execute on the device gateway to receive and process data prior to transmission to either the devices or the cloud . Execution of the internal applications may be performed by a processor such as the processor described above with respect to . For example the internal applications may include applications to aggregate data received from multiple devices prior to transmission to the cloud or applications configured to convert messages received from the cloud to a format suitable for managing the devices. In the context of the device gateway the internal applications may refer to application specific code resident on the gateway which is optionally loaded when the gateway needs to execute some special functions needed only by a specific application. For example a gateway may execute an application to filter RFID reads coming from an RFID reader. Such an application may be loaded only on gateways that are associated with RFID readers need this code.

The device discovery and management module may be configured to detect local devices and register the detected devices with the cloud . Discovery and management of local devices may be performed by device communications circuitry as described above with respect to . The device discovery and management module may be used to discover devices on a network in a variety of different ways. For example a device will broadcast its presence and compatible devices may respond with identity information that allows the device to establish a connection. In some embodiments the gateway device may employ several methods to detect all compatible devices. In some embodiments the gateway may be loaded with a priori data via the cloud to establish this connection.

The connections to devices may be performed according to various protocols including but not limited to Bluetooth the IEEE 802.11 protocol suite ZigBee or any other network protocol suitable for communication between electronic devices. It should be appreciated that while such communication may generally be performed wirelessly the device gateway may also be configured for wired communication and other direct communication methods.

The connection management module may be operable to facilitate communication among the devices the device gateway and the cloud . As above connections between devices and the device gateway may be provided by device communications circuitry and connections to the device management server may be provided by the management server communications circuitry as described above with respect to . In some embodiments the connection management module is configured to interface with a device management server over a network. In some embodiments this communication may be performed via a local network and Internet connection maintained by the user. Such local networks commonly implement firewalls to secure the local network from intrusion from external threats. As such the connection management module may provide various features such as port forwarding network address translation or the like for communicating through such a firewall. If a proxy server prevents the connection management module from communicating with the device management server the connection management module may be loaded with credentials prior to making the attempt to connect. These credentials may be loaded locally via computer with local access to the gateway.

The system management module may ensure that the other modules are functioning properly. For example the system management module may ensure that modules are updated and restarted when necessary. If necessary the system management module may force the gateway to restart to reload global updates. The security module may enable certain security protocols and privacy settings. For example the security module may ensure that only authorized devices are allowed to register with the device gateway and communicate with the cloud . The security module may manage the encryption decryption of data to from the cloud as well as ensure the appropriate use of certificates for this process. The functionality of the system management module and the security module may be provided by applications executing on a processor such as the processor described above with respect to .

The connections to the cloud may function to transmit device information received from the devices to a remote server located in a cloud operating environment such as the management server described with respect to . These connections may be provided by management server communications circuitry as described above with respect to .

The device library may provide functions that allow a given device or associated application to self describe the characteristics of the device such as through the definition and use of a JavaScript Object Notation JSON data structure. In some embodiments the device libraries provide a framework that allows a software developer user or the like to specify the characteristics of the particular device to be stored and or displayed in a virtual device model associated with the device as managed by the platform . In some embodiments the device library may include functions operable to interface with the logic of an application developed by a manufacturer or owner of a device that enable the device to connect to the platform disconnect from the platform receive instructions from the platform read device information from the platform write data to the platform or the like. In some embodiments these functions are provided via an embedded programming language such as Embedded C.

Applications may interact with the platform via an application API . The platform may expose the application API and allow applications to obtain device information for which the particular application has appropriate credentials. For example a given application may be associated with a particular user group of users or the like that have access to a particular device or group of devices. The application API may allow applications to read data from and write data to any device to which the application has appropriate access credentials. In some embodiments the application API is provided as a REST API.

The present example provides a set of printers that are remote devices in communication via a device management infrastructure such as described above with respect to . The set of remote printers are associated with three separate user accounts Client A a printer maintenance service and Client B . Each of these user accounts is provided with access to a particular group of printers. In the present example Client A has access to the group of printers owned by Client A and Client B has access to the group of printers owned by Client B . A third grouping of printers also exists a group of printers in need of maintenance to which access is provided to the printer maintenance service .

In the present example if Client A were to access a web portal provided by the device management infrastructure Client A would be permitted to access representations of status information received from each of the printers in the group owned by Client A. Similarly for Client B and the printer maintenance service the device management infrastructure may provide a web based interface for accessing each of the associated printer groupings.

Additionally the device management infrastructure may also provide for dynamic group assignment and association. For example if one of the printers in Client B s grouping suffers an error state that printer may report the error state to a remote server via the device management infrastructure. In response to detecting the error state the remote server or an application executing thereon may assign the printer to the group of printers in need of maintenance. Upon assigning the printer to the group of printers in need of access the remote server may provide the printer maintenance service with access to the newly failed printer. In this manner various implementations of rule based access permissions may be implemented via the device management infrastructure based on status information received from devices in communication via the device management infrastructure. It should be appreciated that the printer maintenance service may be provided with access to printers from more than one owner e.g. both Client A and Client B within the same group.

As an alternative embodiment an example device group organization may be implemented by the printer maintenance service creating a world and inviting each client to join that world e.g. a printer maintenance world . Each client may add whichever printer s they wish to the printer maintenance world and the owner of the printer maintenance world may then be provided with the capability to monitor each of the printers added to that world. The owner of the printer maintenance world may then create a group within the printer maintenance world called printers in need of maintenance with a rule to add each printer within the printer maintenance world to the newly created group when said printer experiences an error condition e.g. based on a particular result from a particular sensor on the printer .

In the present example the manufacturer s world includes one or more RFID scanners barcode scanners computer nodes mobile devices printers and conveyor belts . The manufacturer s world may also include one or more gateway devices to allow legacy devices to communicate with a network cloud . The network cloud may include a remote server for implementing one or more device management functions as described above with respect to . It should be readily appreciated that the cloud described with respect to is intended to represent a single device management infrastructure. While this device management structure may include communication over known networks such as the Internet the network cloud is intended to represent communication with a particular device management infrastructure. While the manufacturer s world depicted in includes devices associated with a shipping process the manufacturer s world may also include various manufacturing devices sensors scanners computers and the like used throughout the acquisition of raw materials through generation of a finished product which are not shown in . In the present example the printer may be configured to communicate both directly with the device management infrastructure via the cloud and also via the gateway device . For example the printer may communicate with the gateway device according to a device native format e.g. Zebra Programming Language and with the cloud via a device agnostic format e.g. JSON . It should be appreciated that the printer may be configured to communicate according to one format the other format or both formats via a processor. In some embodiments the format used by the printer to communicate with the cloud is determined by a user of the printer such as by a printer management menu.

A product inventory may be monitored by one or more RFID sensors . For example each product may be marked with an RFID tag and or barcode to facilitate monitoring of the place of the product in the supply chain. When an order is received for a particular product e.g. through a manufacturer computer system a particular product may be removed from inventory and loaded onto a conveyor belt for transport to a shipping bay. When the product is removed from inventory the RFID sensor may transmit a notification that the product has been removed to the device management infrastructure by communicating with the gateway device . An application executing within the device management infrastructure may reconcile the removal of the product against a customer order to perform inventory security and management functions.

Once the product is placed on the conveyor a barcode scanner may report the barcode of the product to the cloud . When the product reaches the end of the conveyor at the shipping dock another barcode scanner may report that the product is ready for shipping via a shipping service .

It should be appreciated that each of the devices present within the manufacturer s world may report both states and error conditions of each device e.g. whether the device is receiving an error condition and any data acquired by device sensors e.g. a barcode read by the barcode scanners or an RFID tag read by the RFID scanner . All of this device information may be reported to the cloud for analysis aggregation processing and reporting.

The carrier s world may include a plurality of shipping trucks and a particular shipping truck that is shipping the package received from the manufacturer as described with respect to . The particular shipping truck may include one or more devices that allow the particular shipping truck to provide information via the cloud. For example a GPS sensor on the particular shipping truck may provide notifications of the location and speed of the truck using the device management infrastructure.

The carrier s world may also include one or more barcode scanners located at a merchant receiving dock. As shipments are delivered by the carrier a barcode scanner owned by the merchant receiving the delivery may scan the incoming package and notify the carrier that the package has been delivered. Similarly to the barcode scanner at the loading dock the merchant s barcode scanner may be owned by the merchant and the carrier may be provided with access through the device management infrastructure.

The rack entity may include a plurality of individual devices. For example the rack entity may include multiple RFID antennae in communication with one or more RFID readers . The RFID antennae may detect and report the presence of particular RFID tags within a given location of the rack e.g. a particular drawer . The RFID readers may receive signals from the RFID antennae and communicate the presence of particular tags to an edge box . The edge box may function similarly to the device gateway described above with respect to above. As described above the edge box may also execute one or more applications to analyze process or aggregate received data. For example the edge box may aggregate data from each RFID reader to build a data structure describing the entire inventory status of the rack entity . This rack inventory data structure may be transmitted to the device management server rather than reporting every tag reading from each RFID reader separately.

It should also be appreciated that despite the fact that the rack entity contains several individual devices e.g. multiple RFID readers and antennae possibly multiple redundant edge boxes etc. the rack entity may be represented by the device management infrastructure as a single virtual device model. In some embodiments virtual device models may be presented in a hierarchical fashion allowing the viewer to drill down to particular individual components as desired.

Turning now to example operations for device management parameters are illustrated from the perspective of a device management server. The operations illustrated in may for example be performed by the device management system and or the device management server with the assistance of and or under the control of one or more devices such as the apparatus and may use the processor the memory the input output module the communications module and the device management server .

In operation the apparatus includes means such as input output module communications module or the like for receiving device information from one or more devices. This device information may be retrieved or received from one or more edge devices as described with respect to . It should be appreciated that although the instant example is described with respect to receiving device information from a device device information may also be received and processed in a similar manner from other entities configured to communicate with the device management infrastructure e.g. applications executing within the infrastructure or external systems communicating via an API . Routing of information may be determined by adding the device information to a representation of the device e.g. a virtual device model object . Access to the representation of the device may be provided to other entities within the device management infrastructure based on the configuration of the representation of the device e.g. permission settings whether particular applications are executing and have access to the representation etc. .

In operation the apparatus includes means such as the processor to determine a set of permissions for the device associated with the device information. For example as described above the device management infrastructure may include a permissions database indicating how data for particular devices should be routed.

In operation the apparatus includes means such as the processor or credentialing circuitry to identify one or more receivers for the device information based on the set of permissions. For example the permissions may define one or more rules for the routing of data. These rules may include routing to different receivers based on the type of data such as routing certain types of data e.g. printer consumable levels to a first receiver and other types of data e.g. data on the contents that the printer is printing to a second receiver. In some embodiments these rules may include alterations to the device permissions status e.g. assigning the device to a different group based on the content of the device information e.g. placing the printer in a group accessible to a maintenance service in response to detection of an error condition on the printer . It should be appreciated that the receiver can include another device a particular user dashboard a particular application or applications executing within the device management infrastructure a group of devices an application or system external to the device management infrastructure or the like.

At action the device information is provided to the determine receiver. Providing the device information may include transmitting the device information to the particular receiver placing the information in a transmission queue sending a message external to the device management infrastructure sending the device information via an API or the like.

As will be appreciated computer program code and or other instructions may be loaded onto a computer processor or other programmable apparatus s circuitry to produce a machine such that execution of the code on the machine by the computer processor or other circuitry creates the means for implementing various functions including those described herein.

As described above and as will be appreciated based on this disclosure embodiments of the present invention may be configured as methods mobile devices backend network devices and the like. Accordingly embodiments may comprise various means including entirely of hardware or a combination of software and hardware. Furthermore embodiments may take the form of a computer program product on at least one computer readable storage medium having computer readable program instructions e.g. computer software embodied in the storage medium. Any suitable computer readable storage medium may be utilized including non transitory hard disks CD ROMs flash memory optical storage devices magnetic storage devices or the like.

Embodiments of the present invention have been described above with reference to block diagrams and flowchart illustrations of methods apparatuses systems and computer program products. It will be understood that each block of the circuit diagrams and process flowcharts and combinations of blocks in the circuit diagrams and process flowcharts respectively can be implemented by various means including computer program instructions. These computer program instructions may be loaded onto a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the computer program product includes the instructions which execute on the computer or other programmable data processing apparatus create a means for implementing the functions specified in the flowchart block or blocks.

These computer program instructions may also be stored in a computer readable storage device that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable storage device produce an article of manufacture including computer readable instructions for implementing the function discussed herein. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus thereby producing a computer implemented process such that the instructions executed on the computer or other programmable apparatus cause performance of the steps and thereby implement the functions discussed herein.

Accordingly blocks of the block diagrams and flowchart illustrations support combinations of means for performing the specified functions combinations of steps for performing the specified functions and program instruction means for performing the specified functions. It will also be understood that each block of the circuit diagrams and process flowcharts and combinations of blocks in the circuit diagrams and process flowcharts can be implemented by special purpose hardware based computer systems that perform the specified functions or steps or combinations of special purpose hardware and computer instructions.

Many modifications and other embodiments of the inventions set forth herein will come to mind to one skilled in the art to which these embodiments of the invention pertain having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore it is to be understood that the embodiments of the invention are not to be limited to the specific embodiments disclosed and that modifications and other embodiments are intended to be included within the scope of the appended claims. Although specific terms are employed herein they are used in a generic and descriptive sense only and not for purposes of limitation.

