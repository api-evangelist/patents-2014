---

title: Distributed split browser content inspection and analysis
abstract: Distributed split browser content inspection and analysis are described. A server, comprising a browser engine, stores a definition of sets of browser policies. A definition of one or more sets of users is stored. The server stores an association with a respective set of browser policies for the one or more sets of users. A request is received from a client browser associated with a user, wherein the client browser is configured to communicate with the server browser engine. The server determines which set of users the user is associated with. The server identifies a first set of browser policies that is associated with the determined set of users and applies the identified first set of browser policies to the request. A determination is made, for one or more browser processes, which browser processes are to be executed by the server browser engine and which browser processes are to be executed by the client browser.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09635041&OS=09635041&RS=09635041
owner: Amazon Technologies, Inc.
number: 09635041
owner_city: Seattle
owner_country: US
publication_date: 20140616
---
Web browsers are ubiquitously employed by users to access content such as Web pages and files over the Internet. However there is a significant amount of harmful content on the Web. For example malware such as viruses or worms may be installed on a user s computer as a result of the user accessing an infected website or downloading a file using a browser. Further certain websites may be phishing websites that masquerade as a trustworthy entity and attempt to collect valuable information such as passwords and financial data from users for malicious purposes.

Thus the browser is a key entry point for malicious software. Although many modern browsers include security features which may be user enabled browser users are typically unsophisticated and do not make adequate use of such security features or actually disable certain security features in order to make browsing simpler.

The risks posed by Web browsers are dramatically increased in an enterprise environment where computer resources are shared and networked together. For example malware downloaded via one user s browser can self replicate and spread to different network resources in the enterprise.

Conventionally information technology IT administrators in an enterprise have not had an adequate way to manage the security aspects options and policies of user browsers. Typically an IT administrator needs to separately manage each browser installation on enterprise computers. Such an approach is time consuming and subject to errors and lapses.

Although aspects of the embodiments described in the disclosure will focus for the purpose of illustration on the management of anonymized browsing using a remote browse session one skilled in the art will appreciate that the techniques disclosed herein may be applied to any number of software processes or applications. Further although various aspects of the disclosure will be described with regard to illustrative examples and embodiments one skilled in the art will appreciate that the disclosed embodiments and examples should not be construed as limiting.

As described above browsers may act as a conduit via which malware and phishing attacks may be conducted. Certain types of malware may infect large portions of an enterprise including servers desktop computers and portable computers. Conventionally it has proven challenging for IT administrators to manage the numerous browser installations across an enterprise on a user machine by user machine basis so as to prevent or reduce the chances of malware infecting enterprise nodes. In addition it has proven challenging to conventionally manage options of user browsers.

Accordingly an enterprise browser administration system is described herein some embodiments of which address some or all of the deficiencies of conventional techniques noted above. A browser architecture may be used wherein certain browser processes and functions are executed locally e.g. on a user device such as a user s computing device hosting the browser and certain processes and functions are executed on a remote system which may act as an intermediary system between the browser hosted on the user device and content provider systems. Such a configuration is sometimes referred to as a split browser. By way of illustration in an example embodiment for a given webpage requested by a browser hosted on the user device the split browser system may dynamically determine which browser processes e.g. networking HTML processing page rendering etc. are to be run locally on the user device and which browser processes to run remotely on the intermediary system which may include one or more proxy servers .

For example the remote intermediary system may access network resources from third party content providers and may also pre render e.g. using a headless browser portions or all of the requested network resources e.g. webpages to facilitate display on certain types of devices such as tablets and smartphones or other computing devices. The remote intermediary system can then transmit the pre rendered portions to the user device and or transmit graphics painting commands so that the browser on the user device does not have to execute the corresponding HTML code or the like. By controlling what processes are executed on the intermediary system and by controlling security settings with respect to such processes IT personnel can centrally manage through a common access point browsers associated with sets of users user types and user devices and protect the enterprise and individual enterprise components against malware and other types of malicious exploitations. Further utilizing a split browser architecture enables browser related options and policies to be centrally managed. Thus certain embodiments obviate or reduce the need to manage user browsers on a user machine by user machine basis.

For example IT personnel can define and store in memory rules browser configurations and or browser settings for individual users individual user devices or for specified sets of users and or sets of user devices. By way of illustration IT personnel can specify some or all of the following examples 

The enterprise browser administration system may access one or more of such rules browser configurations and or browser settings in determining how to configure a given set of browsers how to process requests from such browsers in determining what content is to be provided to such browsers and or in determining what actions such browsers may take with respect to returned content by way of example.

One or more administrative user interfaces may be provided e.g. via a Web service application programming interface via which IT personnel or other authorized person can define rules browser configurations and or browser settings sometimes collectively referred to herein as a browser policies such as those discussed above. For example the user interface may include menus radio buttons checkboxes and or sliders via which IT personnel select which browser features or functions are to be enabled or disabled select which security features are to be enabled or disabled which browser menu items are to be enabled or disabled which browser menu items are to be displayed or not displayed etc. Optionally the administrative user interface may include fields configured to receive rules e.g. in the form of a Boolean formula or otherwise locators e.g. URLs for blacklisting or whitelisting purposes and or names or file locators for files that store rules browser configurations and or browser settings.

Further a menu of user sets may be provided listing different classes or sets of users or user devices associated with users where a given set of rules browser configurations and or browser settings may be applied to one or more specified sets. For example users may be classified according to job function e.g. manager administrator technical staff security analyst support staff researcher agent etc. employee type full time part time contractor length of employment e.g. less than 3 months less than 1 year more than 1 year etc. level of training e.g. did not receive browser security training received basic browser security training received advanced browser security training etc. what data stores the user has access to e.g. does the user have access to customer data stores and sensitive customer information such as credit cards information and user passwords what applications the user currently has open e.g. applications that have access to sensitive customer information and or otherwise. The IT personnel or other authorized person may select one or more sets and select a specified set of rules browser configurations and browser settings to be applied to the selected sets. Users may be assigned to a given set manually by authorized personnel or users may be automatically assigned to a set based at least in part on metadata associated with the user e.g. based on a user record that includes the user s title employee type classification job function descriptor department name length of employment etc. .

By way of illustration a set of blacklisted websites may be defined. The IT personnel may specify via an administrative user interface that manager browsers are permitted to access the blacklisted websites and that support staff are not permitted to access the blacklisted sites. By way of further example IT personnel may specify via an administrative user interface that the browsers of researchers managers and administrators are permitted to download Word documents and that browsers of customer service personnel and part time employees are not permitted to download Word documents.

With reference to an illustrative example a user may cause a user device to load a software browser application henceforth referred to as a browser for accessing content provided by one or more content providers. Illustratively the content may include a collection of one or more network resources e.g. a Web page and embedded resources such as images video audio text executable code and or other resources. The browser may be configured to download executable and non executable files from remote systems. The browser may have a content display area for displaying the accessed network content in addition to one or more local interface components such as toolbars menus buttons or other user interface controls. Certain local interface components may be selectively configured to be managed and controlled by the software browser application or any other process executing or implemented locally at the user device. Certain local interface components may be selectively configured to be managed and controlled by processes executing or implemented on the remote intermediate system in accordance with certain policies and rules examples of which are discussed herein. Illustratively managing certain user interface controls remotely may enable security policies and rules to be applied at a central location to a set of user devices rather than having to manage local browser installations on client terminals.

Subsequent to the browser being loaded a user or automated browser process may cause the user device to transmit a request to access content from a content provider by establishing a browse session with a network computing and storage provider across a private or public network. The network computing and storage provider may host or access the enterprise browser administration system. The browse session request may include information identifying one or more sources for the requested content. The identifiers can be in the form of network addresses of network resources such as a Web site or other network accessible piece of content. For example the user may select or enter a URL e.g. http www.xyzwebsite.com into a browser window causing the user device to transmit a request for a new browse session to the network computing and storage provider including the selected URL. The address or location of a network computing and storage provider capable to service the browse session request may be hardcoded into the browser may be configurable by the user may be obtained from a network address service or may be determined in any other way.

In an illustrative embodiment responsive to the browse session request received from the user device the network computing and storage provider may instantiate or cause to have instantiated one or more computing components associated with the network computing and storage provider that will host a browser software application. For example the network computing and storage provider can instantiate or cause to have instantiated an instance of a virtual machine e.g. a proxy server that includes a software browser application capable of requesting resources from a communication network. Illustratively in some situations one or more devices associated with the network computing and storage provider may be located in a data center or other robustly networked computing environment and as compared to the user device may experience relatively little latency or delay when obtaining network resources.

The network computing and storage provider may inspect using the enterprise browser administration system the browser request identify to which set the user and or client associated with the request belong based on the identified set of users and or clients identify the set of browser policies that apply to that set of users and or clients and then apply the set of browser policies to the browser request and other browser session activities.

By way of illustrative example based on the set of browser policies the enterprise browser administration system may determine whether or not to request the identified network resource s from one or more content providers. If a determination is made that the network resource is to be requested the enterprise browser administration system may analyze the associated resource content being returned and or any certificates associated with the network resource and determine whether to provide some or all of the content to the requesting browser and whether to enable the requesting browser to perform certain actions with respect to the content. Of course other factors such as those discussed above may be taken into account in determining what resources may be requested what content is to be returned to the user device and what operations the user device browser is to perform with respect to the returned content.

By way of an illustrative example the enterprise browser administration system EBAS may inspect the set of browser policies and determine whether the set of browser policies specifies that a blacklist of whitelist apply. If a blacklist applies the enterprise browser administration system may compare the browser network resource request to the blacklist and if the browser request matches a resource on the blacklist the enterprise browser administration system will inhibit the network computing components from requesting the identified network resource or the enterprise browser administration system may permit the identified resource to be requested but prevent the content associated with the identified network resource from being provided to the requesting browser. In addition if the browser request matches a resource on the blacklist the network computing components may transmit a corresponding notification to the requesting browser or otherwise cause a notification to be presented via the requesting browser where the notification informs the user that the user is not permitted to access the requested resource. Optionally if the user s IT administrator has an override procedure to grant a given user access to a blocked resource the notification may inform the user of the procedure and provide a user interface via which the user may submit a request to access the blocked resource in accordance with the override procedure. The override request may be processed by the EBAS and approved or disapproved. If the override request is approved the network computing components may request the resource and forward the requested resource to the user browser.

If a whitelist is specified by the set of browser policies the enterprise browser administration system may compare the browser network resource request to the whitelist and if the browser request matches a resource on the blacklist the enterprise browser administration system may permit the network computing components to request the identified network resource and to forward the network resource to the user browser.

By way of further example the browser network resource request may be inspected by the enterprise browser administration system to determine if it appears to be a misspelling on another network resource e.g. a misspelling of a popular Website s URL and if so the request of the network resource may be inhibited. By yet further example other criteria may be used to determine whether a network resource request should be permitted. For example if the request includes a domain name a determination may be made whether it has been existence for less than a specified threshold of time e.g. 2 months 1 day or other threshold and if so access of the domain may be inhibited.

If a determination is made that the identified network resource is to be requested the network computing and storage provider using the instantiated network computing components may request the identified network resource s from one or more content providers a content delivery network or a local or associated cache component. For example the browser software application on the instantiated network computing component can process a primary network resource and then generate additional content requests for content identified in one or more embedded resource identifiers e.g. pictures video files etc. . Illustratively in the case of other non browser applications network resources or content may include any file type or format known in the art and supported by the specific software application. Having obtained the requested content e.g. the requested network resource and embedded resources the enterprise browser administration system may examine the content and determine based at least in part on the set of browser policies which if any content is to be provided to the requesting browser and may further determine what actions the requesting browser may take with respect to the content.

For example the enterprise browser administration system may determine based on the set of browser policies for the requesting browser that cookies are not to be provided to the requesting browser and or are not to be stored by the browser. By way of further example the set of browser policies may specify the browser plugins may not be installed by the browser. The network computing components may pre fetch and pre render e.g. virtually render requested content e.g. a webpage and identify and filter out malware content as prohibited content. The network computing components will then inhibit the transmission of prohibited content to the requesting browser and or inhibit certain browser actions with respect to content provided to the browser.

Having obtained the requested content e.g. the requested network resource and embedded resources and determined that some or all of the obtained requested content is to be provided to the requesting browser the network computing and storage provider may identify a remote session browsing configuration specifying a remote session communication protocol for use in transmitting the requested content user interaction data intermediate processing results browser settings and other information between the browser being executed on the user device and the browser being executed at the instantiated network computing component on the computing and storage provider. The information exchanged between the browser on the instantiated network computing component and the browser on the user device can be generally referred to as browser session information. 

In addition to specifying a remote session communication protocol for transmitting information between the user device and the instantiated network computing component the identified remote session browsing configuration may specify that one or more processing actions to be performed on the requested content are to be performed at the network computing and storage provider rather than or in addition to at the user device. The decision as to which processing actions are to be performed at the network computing and storage provider and which processing actions are to be performed at the user device may be based in part on the set of browser policies for the particular requesting browser or for the set associated with the requesting browser.

For purposes of illustration the processing of network content by a browser may involve various processing actions before content can be rendered in an appropriate form on a user device. A Web page for example may be parsed and processed to process various HTML layout information and references to associated resources or embedded content such as CSS style sheets and JavaScript as well as embedded content objects such as images video audio etc. Each object or piece of code may be parsed and processed before a representative object model corresponding to the web page may be constructed and processed further for layout and display. In accordance with the selected remote session browsing configuration the user device and the instantiated network computing component may exchange processing results via browser session information e.g. state data or display data representing the requested content .

As will be appreciated by those of skill in the relevant art a network environment may include any number of distinct user devices and or content sources . In addition multiple e.g. two or more intermediary systems may be used. For example separate intermediary systems may be located so that they are close in either a geographical or networking sense to sets of current or potential user devices or content sources . In such a configuration a user device may request content via the intermediary system to which it is closest rather than all user devices requesting content via a single intermediary system .

Optionally in addition or instead a user device connected over the network to the content sources may request content from content sources directly without having the request traverse the intermediary system hosting an enterprise browser administration and threat detection system e.g. without requiring the request to be first submitted to the intermediary system so that the enterprise browser administration and threat detection system can inspect the browser request identify to which browser policies apply to the request or requester and then apply the policies to the browser request as discussed in greater detail elsewhere herein . The user device browser may then optionally selectively submit requests to the threat detection system for inspection of certain content and or content sources.

The user devices can include a wide variety of computing devices including personal computing devices terminal computing devices laptop computing devices tablet computing devices electronic reader devices mobile devices e.g. mobile phones media players handheld gaming devices etc. wearable devices with network access and program execution capabilities e.g. smart watches or smart eyewear wireless devices set top boxes gaming consoles entertainment systems televisions with network access and program execution capabilities e.g. smart TVs and various other electronic devices and appliances. Individual user devices may execute a browser application to communicate via the network with other computing systems such as the intermediary system or content sources and in order to request and display content.

Illustratively a user may use a browser application to request network accessible content e.g. content pages images video etc. hosted or provided by a content source such as an origin content server or a CDN server . The user device or browser application may be associated with the intermediary system or otherwise configured to request the content through and receive content display commands from the intermediary system rather than communicating directly with the content source. The browser application may include a remote graphics module that receives remotely generated display commands such as those generated by the intermediary system . The remote graphics module or some other module of the browser application can execute the remote generated display commands to display a representation of the requested content on the user device . Advantageously the remote graphics module may facilitate the display of graphical representations of requested content at the user device without requiring the user device to receive content files e.g. HTML files JPEG images etc. directly or indirectly from content sources and .

In some embodiments the browser may be a conventional web browser that is not specifically designed or configured to execute remotely generated graphics commands and other display commands. For example the browser may use or otherwise be associated with a remote graphics module that is not integrated with the browser such as a browser add in or extension. In some embodiments applications other than a browser may include or use a remote graphics module or some similar module to execute graphics commands generated by an intermediary system . For example content aggregators or other specialized content display applications for mobile devices e.g. Flipboard may utilize a remote graphics module .

The intermediary system can be a computing system configured to retrieve content on behalf of user devices and generate display commands for execution by the user devices . For example the intermediary system can be a server or group of servers that may be accessed via the network . In some embodiments the intermediary system may be a proxy server a system operated by an internet service provider ISP or some other device or group of devices that retrieve content on behalf of user devices .

The intermediary system may include various modules components data stores and the like to provide the content retrieval and processing functionality described herein. For example the intermediary system may include a server based browser application or some other content rendering application to process content retrieved from content sources. Such a content rendering application may be referred to as a headless browser . Generally described a headless browser does not or is not required to cause display of content by a graphical display device of the server that on which the headless browser is executing. Instead the headless browser comprises a browser engine and provides display commands to separate user devices . Illustratively the headless browser may obtain requested content from an origin content server and or CDN server obtain additional items e.g. images and executable code files referenced by the requested content execute code e.g. JavaScript that may be included in or referenced by the content generate graphics commands to display a graphical representation of the content and transmit the graphics commands to the user device . By performing some or all of these operations at the intermediary system the substantial computing resources and high speed network connections typically available to network based server systems may be leveraged to perform the operations much more quickly than would otherwise be possible on a user device with comparatively limited processing capability.

The headless browser may include various modules to provide the functionality described above and in greater detail below. For example the headless browser may include a content processing module that parses content files and generates a document object model DOM representation of the content a graphics processing module that receives the DOM representation and generates display commands e.g. SKIA commands to render a graphical representation of the content at a user device and an interaction processing module that communicates with the browser to receive information regarding interactions with the content at the user device and to update the graphical representation of the content if necessary. In some embodiments a headless browser may include additional or fewer modules than those shown in .

The intermediary system may include an enterprise browser administration and threat detection system which may inspect a browser request identify to which set the user and or client associated with the request belong based on the identified set identify the set of browser policies that apply to that set of users and or clients and then apply the security configuration to the browser request and other browser session activities.

The intermediary system may include additional modules components data stores and the like to provide the features described above and in greater detail below. For example the intermediary system may include a cache that stores content items received form content sources and graphics commands generated by the headless browser and the like. The intermediary system may also include a logged user behaviors data store that stores information about user requests and user user browser interactions with content e.g. to identify any adverse results of such interaction .

Because the intermediary system may be processing requests and responses on behalf of an entire enterprise or multiple enterprises the intermediary system will have a voluminous amount of historical data related to such requests and associated responses stored in data store . Such historical crowd sourced data may be used to identify patterns and threats. For example each time a request comprising a URL is received from a user browser at an enterprise the intermediary system may analyze the logged user behaviors data store and determine if the URL has ever been previously been requested by a browser at the enterprise and if not the request may be identified as a potential risk request and processed in accordance with a specified policy. By way of further example if the intermediary system determines that a URL had not been requested prior to a specified date and that suddenly e.g. over a period of one hour or one day thousands of requests including the URL are received the URL may be identified as a high risk and requests for that URL may be processed in accordance with a specified policy. By way of yet further example if an adverse event was recorded as a result of a client browser accessing certain content that event may be recorded and other browsers may be inhibited from accessing such content.

Thus even if malware accessed via a client browser adversely affects one client the intermediary system may use the historical data stored in the logged user behaviors data store to prevent the spread of the malware to other clients. Further certain types of malware are configured not to initiate any harmful action if the malware detects it is being executed in some type of a security environment such as a detonation chamber or other dynamic execution environments configured to isolate potential malware for examination. Therefore in contrast to certain embodiments described herein that use logged user behaviors data to stop or slow the spread of malware conventional systems that merely rely on detonation chambers to detect malware will fail to identify and halt the spread of certain types of malware. However optionally a detonation chamber or other dynamic execution environments configured to isolate potential malware for examination are included in the embodiments disclosed herein.

In certain cases such as for privacy reasons a user or enterprise may not want to share certain types of logged user behaviors data with other users or enterprises even for the prevention of malware. Thus the embodiments disclosed herein optionally enable a user or enterprise to specify via a user interface what type s of data e.g. content content URLs content hashes etc. may or may not be shared with other users or enterprises and for what purpose s and such specifications may be stored in memory and used to share data accordingly. For example some enterprises may be willing to share all accessed content and content URLs. Other enterprises may be willing to share hashes of content but not the content or URLs. Some enterprises may be willing to share certain information with the intermediary system for malware detection and remediation purposes but not for other purposes or for other enterprises. Certain policies may specify that a given enterprise s logged user behaviors data may be used to identify to other enterprises domains associated with threats but that otherwise their logged user behaviors data is not to be shared by way of further example.

As noted above optionally a user device may request content from content sources directly without having the request traverse the intermediary system . However based on certain rules the browser may selectively submit content such as embedded content received from content sources or a link to such content to the intermediary system for inspection by the enterprise browser administration and threat detection system to determine the likelihood that the content poses a threat e.g. that the content comprises malware . The enterprise browser administration and threat detection system may then inspect the content transmitted by the client browser or accessed from a content link sent by the client browser .

For example the enterprise browser administration and threat detection system may as appropriate execute such content in a secure environment or compare such content to known content threats to determine if there is a match e.g. by generating a content hash and comparing it against content hashes of known threats from logged user behaviors data store and thereby determine the likelihood of the content being a threat e.g. determine the likelihood that the content is malware such as a rootkit a virus ransomware spyware adware or other such items . In indicating the likelihood that content is a threat content may simply be designated as a threat or as no threat or the indication may be in the form of a sliding scale or score e.g. high risk of threat medium risk of threat low risk of threat or 90 likelihood content is a threat 50 likelihood content is a threat 10 likelihood content is a threat . The browser administration and threat detection system may then transmit an indication to the client browser as to the likelihood that the content is a threat. The client browser may then process the content accordingly in accordance with browser rules e.g. not execute content that is a high or medium risk of threat .

Optionally a control may be provided via the client browser which enables or disables the transmission by the browser of content or content links or other content locators to the enterprise browser administration and threat detection system . For example a user may not want to send content or content links to the enterprise browser administration and threat detection system for privacy reasons.

Optionally the browser may have rules that determine at least in part which content should be submitted for inspection to the browser administration and threat detection system . For example the browser may include rules that indicate that non executable files such as JPEG files which are typically of low risk do not need to be submitted to the browser administration and threat detection system while executable files which are typically of higher risk do need to be submitted browser administration and threat detection system for inspection. Other criteria that may be used in determining whether or not to forward content to the enterprise browser administration and threat detection system for inspection may be the processing power needed to determine whether the content is a risk or whether the historical data stored in the logged user behaviors data store may be helpful in determining the risk level of the content.

The intermediary system may be a single computing device or it may include multiple distinct computing devices such as computer servers logically or physically grouped together to collectively operate as an intermediary system. The components of the intermediary system can each be implemented as hardware such as a server computing device or as a combination of hardware and software. In addition the modules and components of the intermediary system can be combined on one server computing device or separated individually or into groups on several server computing devices. In some embodiments the intermediary system may include additional or fewer components than illustrated in .

In some embodiments the features and services provided by the intermediary system may be implemented as web services consumable via the communication network . In further embodiments the intermediary system is provided by one more virtual machines implemented in a hosted computing environment. The hosted computing environment may include one or more rapidly provisioned and released computing resources which computing resources may include computing networking and or storage devices. A hosted computing environment may also be referred to as a cloud computing environment.

The origin content servers and CDN servers can correspond to logical associations of one or more computing devices for hosting content and servicing requests for the hosted content over the network . For example a content server or CDN server can include a web server component corresponding to one or more server computing devices for obtaining and processing requests for content such as content pages from user devices the intermediary system or other devices or service providers. In some embodiments one or more content servers may be associated one or more CDN service providers e.g. entities that manage multiple CDN servers application service providers etc.

With reference now to an example process is illustrated illustrating the processing of network resource requests from a client such as a user browser including the application of browser policies. The process can begin at block with the receipt at intermediary system e.g. hosting a proxy server of a browse session request from a user device. From the perspective of the user of the user device the request for the new browse session corresponds to an intended request to transmit the request to one or more corresponding content providers. Optionally the intermediary system may utilize a registration application program interface API to accept browse session requests from the user device. The browse session request can include a client and or user identifier also referred to as a requester identifier and network address information corresponding to a requested network resource which may be in any form including but not limited to an Internet Protocol IP address a URL a Media Access Control MAC address etc. Optionally rather than receiving the requester identifier as part of the browse session request the requester identifier may be stored on the user device and the intermediary system may access the requester identifier from the user device after receiving the browse session request.

Subsequent to the receipt of the browse session request the intermediary system may select an associated network computing component hereinafter NCC point of presence hereinafter POP to service the browse session request. The selection of the NCC POP may determine the processing and network resources available to the instantiated virtual machine. The selection of processing and network resources and the provisioning of software at the NCC POP instance may be done at least in part in order to enhance communication with content provider systems and user devices.

At block the enterprise browser administration system may use the requester identifier to determine what policy set the requester belongs to. At block the enterprise browser administration system may access the set of browser policies for the identified policy set of users clients. As discussed above the browser policies may include security rules. At block the enterprise browser administration system may determine whether access to the requested resource is permitted based on the set of browser policies. As discussed above the set of browser policies may specify various techniques such as whitelists blacklists pattern matching misspelling checking checking for lack of proper certificate and or website age by way of example that are to be used in determining whether access to a requested resource is permitted. By way of further example certain types of requests such as those passing certain credentials e.g. corporate credentials to a requested location external to the enterprise system may be prohibited all together. If a determination is made that the client is not permitted to access the requested network resource then at block an access denial notification e.g. a text message graphic or the like such as in the form of a webpage notification may be provided to the client user and the requested network resource is not provided to the requesting user device browser.

If a determination is made at block that access to the requested network resource is permitted then at block the resource is requested from the content provider system by the proxy server optionally using the headless browser . For example the selected intermediate system may generate a browse session corresponding to the client browse session request and may provide the request for the network resource to a content provider system based on a network address included in the client browse session request. For example a browse session request may include a URL for a Web page such as http www.xyzsite.com default.htm. The intermediate system may resolve the URL to an IP address through a DNS resolver associated with the network computing and storage provider not shown and may request the Web page from the content provider system at the resolved IP address. In various embodiments a network resource may be retrieved from any combination of content providers content delivery network hereinafter CDN servers or caches associated with the network computing and storage provider. For example the network computing and storage provider may check if a resource is stored in a local cache or in another server or service provider associated with the network computing and storage provider. If a network resource is stored in a local or associated location the intermediate system may retrieve the network resource from the local or associated location rather than from the third party content provider or CDN service provider. Illustratively the intermediate system may provide requests for any number of network resources as included in the browse session request and may obtain these network resources from any number of different sources sequentially or in parallel.

At block the requested network resource is received from the content provider. In certain cases the requested network resource may include embedded source identifiers and code e.g. scripts . For example a network resource such as a Web page may include embedded CSS style information and JavaScript as well as embedded resource identifiers to additional resources such as text images video audio animation executable code and other HTML CSS and JavaScript files.

At block the enterprise browser administration system may inspect the returned network resource and the embedded resource identifiers and at block may determine if the embedded resources are to be requested. If a determination is made that the embedded resources are not to be requested then at block an access denial notification e.g. a text message graphic or the like such as in the form of a webpage notification may be provided to the client user and the prohibited embedded resources are not provided to the requesting user device browser. If a determination is made that the embedded resources are to be requested then at block the embedded resources are requested by the proxy server using the headless browser .

For example the intermediate system may provide resource requests to one or more sources of content such as content server or CDN server . The resource requests may correspond to embedded resources based on one or more embedded resource identifiers extracted from a requested network resource e.g. a Web page . In various embodiments embedded resources may be retrieved from any combination of content providers CDN servers or caches associated with the intermediate system . For example the network computing and storage provider may check if an embedded resource is stored in a local cache or in another server or service provider associated with the intermediate system . If an embedded resource is stored in a local or associated location the intermediate system may retrieve the embedded resource from the local or associated location rather than the third party content provider or CDN. Illustratively the intermediate system may provide requests for any number of embedded resources referenced by a network resource and may obtain these embedded resources from any number of different sources sequentially or in parallel. At block the requested resources are received and the intermediate system may process the resources and requested content. For example the system may execute in a safe environment executable files included in the resources and requested content.

At block the enterprise browser administration system may inspect the returned embedded network resources and or the results of processing the embedded network resources and execution of executable files and based on the applicable set of policies determine whether the embedded resources and or the results of processing the embedded network resources are to be provided to the client. The inspection may include pre processing and pre rendering the embedded network resources using the headless browser to determine whether the processing or rendering of the embedded network resources will result in a prohibited event. For example a determination may be made as to whether the resources and requested content includes malware such as a rootkit a virus ransomware spyware adware or other such items. Such determination may be made by comparing information such as a hash value or a signature of a resource with that of known malware to determine if there is a matching hash value or signature thereby indicating the resource is malware. If a determination is made that the embedded resources are not to be provided to the client then at block an access denial notification e.g. a text message graphic or the like displayed by the browser such as in the form of a webpage notification may be provided to the client user and the prohibited embedded resources and or results of the processing the prohibited embedded resources are not provided to the requesting user device browser.

If a determination is made that the embedded resources and or results of processing the embedded resources are to be provided to the requesting user device browser then at block the request network resource and permitted embedded resources are returned to the requesting user device browser. It is understood that optionally permitted embedded resources may be provided to the requesting user device browser and prohibited embedded resources may not be provided to the requesting user device browser or optionally if there are any prohibited embedded resources then none of the embedded resources are provided to the requesting user device browser.

At block the proxy server may receive via the headless browser remote interaction data from the user device browser. For example if the user activates a link in the returned content e.g. in a webpage the link activation data e.g. a URL will be received at the proxy server. By way of further example if the user attempts to change a browser security setting the setting change request will be received at the proxy server. At block the enterprise browser administration system may inspect the interaction data and determine whether interaction is permitted by the applicable set of browser policies. If the interaction is permitted then at block the interaction is processed accordingly. If the interaction is not permitted then at block the user is notified of the request denial with respect to the interaction.

At block the threat detection system receives the inspection request. At block the threat detection system accesses threat detection rules and criteria such as discussed elsewhere herein. At block the threat detection system determines whether an analysis had previously been performed for the content. For example the threat detection system may generate a hash for the content and search through a data store of historical content threat analysis to determine if there is a matching hatch and an associated threat analysis that had been previously been performed using the threat detection rules and criteria from block . Optionally the threat detection system may only identify an historical threat analysis that is fairly recent and so more likely to be reliable and will filter out older less reliable threat analysis and or a threat analysis that was not performed using the threat detection rules and criteria from block . For example a thirty day threshold may be set wherein if the threat analysis is more than thirty days old it is considered stale and not to be relied upon. If a sufficiently recent historical threat analysis is located then at block the historical threat analysis is accessed and at block the threat detection system transmits threat detection results from the historical threat analysis such as content risk levels to the browser .

If at block a sufficiently recent historical threat analysis is not located at block the threat detection system applies the threat detection rules and criteria to the content from block to identify levels of risks posed by the content e.g. low risk medium risk high risk as similarly discussed above e.g. by comparing hash values of content with that of known malware by executing executable files in a safe environment and reviewing the results etc. . If the browser inspection request includes links or other locators associated with the content rather than the content itself the threat detection system may access the content for inspection using such links or other locators. At block the threat detection system transmits threat detection results such as content risk levels to the browser .

At block the browser receives the threat detection results from the threat detection system . At block the browser processes the content in accordance with the threat detection results. For example if the threat detection results indicate a particular video download is high risk the browser will not download the video file.

Thus as described above methods and systems are provided that enable a user to efficiently administrate browsers on a user client set basis.

Depending on the embodiment certain acts events or functions of any of the processes or algorithms described herein can be performed in a different sequence can be added merged or left out altogether e.g. not all described operations or events are necessary for the practice of the algorithm . Moreover in certain embodiments operations or events can be performed concurrently e.g. through multi threaded processing interrupt processing or multiple processors or processor cores or on other parallel architectures rather than sequentially.

The various illustrative logical blocks modules routines and algorithm steps described in connection with the embodiments disclosed herein can be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. The described functionality can be implemented in varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the disclosure.

Moreover the various illustrative logical blocks and modules described in connection with the embodiments disclosed herein can be implemented or performed by a machine such as a general purpose processor device a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor device can be a microprocessor but in the alternative the processor device can be a controller microcontroller or state machine combinations of the same or the like. A processor device can include electrical circuitry configured to process computer executable instructions. In another embodiment a processor device includes an FPGA or other programmable device that performs logic operations without processing computer executable instructions. A processor device can also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. Although described herein primarily with respect to digital technology a processor device may also include primarily analog components. A computing environment can include any type of computer system including but not limited to a computer system based on a microprocessor a mainframe computer a digital signal processor a portable computing device a device controller or a computational engine within an appliance to name a few.

The elements of a method process routine or algorithm described in connection with the embodiments disclosed herein can be embodied directly in hardware in a software module executed by a processor device or in a combination of the two. A software module can reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of a non transitory computer readable storage medium. An exemplary storage medium can be coupled to the processor device such that the processor device can read information from and write information to the storage medium. In the alternative the storage medium can be integral to the processor device. The processor device and the storage medium can reside in an ASIC. The ASIC can reside in a user terminal. In the alternative the processor device and the storage medium can reside as discrete components in a user terminal.

Conditional language used herein such as among others can could might may e.g. and the like unless specifically stated otherwise or otherwise understood within the context as used is generally intended to convey that certain embodiments include while other embodiments do not include certain features elements and or steps. Thus such conditional language is not generally intended to imply that features elements and or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding with or without other input or prompting whether these features elements and or steps are included or are to be performed in any particular embodiment. The terms comprising including having and the like are synonymous and are used inclusively in an open ended fashion and do not exclude additional elements features acts operations and so forth. Also the term or is used in its inclusive sense and not in its exclusive sense so that when used for example to connect a list of elements the term or means one some or all of the elements in the list.

Disjunctive language such as the phrase at least one of X Y Z unless specifically stated otherwise is otherwise understood with the context as used in general to present that an item term etc. may be either X Y or Z or any combination thereof e.g. X Y and or Z . Thus such disjunctive language is not generally intended to and should not imply that certain embodiments require at least one of X at least one of Y or at least one of Z to each be present.

While the above detailed description has shown described and pointed out novel features as applied to various embodiments it can be understood that various omissions substitutions and changes in the form and details of the devices or algorithms illustrated can be made without departing from the spirit of the disclosure. As can be recognized certain embodiments described herein can be embodied within a form that does not provide all of the features and benefits set forth herein as some features can be used or practiced separately from others. The scope of certain embodiments disclosed herein is indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

