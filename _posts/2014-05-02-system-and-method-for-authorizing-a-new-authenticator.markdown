---

title: System and method for authorizing a new authenticator
abstract: A system, apparatus, method, and machine readable medium are described for authorizing a new authenticator with a relying party. For example, one embodiment of a method comprises: identifying a plurality of relying parties with which an old authenticator is registered; generating at least one key for each of the plurality of relying parties; authenticating with each of the relying parties using a client having the old authenticator configured thereon, the client authorizing the new authenticator by providing an authorization object to each relying party comprising the at least one key, data identifying the new authenticator, and cryptographic data to be used by the relying party to verify the authorization object; and wherein, in response to verifying the authorization object, each relying party registers the new authenticator.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09413533&OS=09413533&RS=09413533
owner: NOK NOK LABS, INC.
number: 09413533
owner_city: Palo Alto
owner_country: US
publication_date: 20140502
---
This invention relates generally to the field of data processing systems. More particularly the invention relates to a system and method for authorizing a new authenticator.

While the system shown in is oriented towards biometric authentication various other or additional authentication techniques may be employed on the exemplary client . For example the client side authenticators may be based on a PIN or other secret code e.g. a password entered by the user and or may be triggered based on user presence e.g. a button that user pushes to verify presence .

Systems have been designed for providing secure user authentication over a network using biometric sensors. In such systems the score generated by the application and or other authentication data may be sent over a network to authenticate the user with a remote server. For example Patent Application No. 2011 0082801 801 Application describes a framework for user registration and authentication on a network which provides strong authentication e.g. protection against identity theft and phishing secure transactions e.g. protection against malware in the browser and man in the middle attacks for transactions and enrollment management of client authentication tokens e.g. fingerprint readers facial recognition devices smartcards trusted platform modules etc .

The assignee of the present application has developed a variety of improvements to the authentication framework described in the 801 application. Some of these improvements are described in the following set of US Patent Applications Co pending Applications all filed Dec. 29 1012 which are assigned to the present assignee and incorporated herein by reference Ser. No. 13 730 761 Query System and Method to Determine Authentication Capabilities Ser. No. 13 730 776 System and Method for Efficiently Enrolling Registering and Authenticating With Multiple Authentication Devices Ser. No. 13 730 780 System and Method for Processing Random Challenges Within an Authentication Framework Ser. No. 13 730 791 System and Method for Implementing Privacy Classes Within an Authentication Framework Ser. No. 13 730 795 System and Method for Implementing Transaction Signaling Within an Authentication Framework.

Briefly the Co Pending Applications describe authentication techniques in which a user enrolls with authentication devices or Authenticators such as biometric devices e.g. fingerprint sensors on a client device. When a user enrolls with a biometric device biometric reference data is captured e.g. by swiping a finger snapping a picture recording a voice etc . The user may subsequently register the authentication devices with one or more servers over a network e.g. Websites or other relying parties equipped with secure transaction services as described in the Co Pending Applications and subsequently authenticate with those servers using data exchanged during the registration process e.g. cryptographic keys provisioned into the authentication devices . Once authenticated the user is permitted to perform one or more online transactions with a Website or other relying party. In the framework described in the Co Pending Applications sensitive information such as fingerprint data and other data which can be used to uniquely identify the user may be retained locally on the user s authentication device to protect a user s privacy.

Described below are embodiments of an apparatus method and machine readable medium for authorizing a new authenticator. Throughout the description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances well known structures and devices are not shown or are shown in a block diagram form to avoid obscuring the underlying principles of the present invention.

The embodiments of the invention discussed below involve authentication devices with user verification capabilities such as biometric modalities or PIN entry. These devices are sometimes referred to herein as tokens authentication devices or authenticators. While certain embodiments focus on facial recognition hardware software e.g. a camera and associated software for recognizing a user s face and tracking a user s eye movement some embodiments may utilize additional biometric devices including for example fingerprint sensors voice recognition hardware software e.g. a microphone and associated software for recognizing a user s voice and optical recognition capabilities e.g. an optical scanner and associated software for scanning the retina of a user . The user verification capabilities may also include non biometric modalities like PIN entry. The authenticators might use devices like trusted platform modules TPMs smartcards and secure elements for cryptographic operations and key storage.

In a mobile biometric implementation the biometric device may be remote from the relying party. As used herein the term remote means that the biometric sensor is not part of the security boundary of the computer it is communicatively coupled to e.g. it is not embedded into the same physical enclosure as the relying party computer . By way of example the biometric device may be coupled to the relying party via a network e.g. the Internet a wireless network link etc or via a peripheral input such as a USB port. Under these conditions there may be no way for the relying party to know if the device is one which is authorized by the relying party e.g. one which provides an acceptable level of authentication strength and integrity protection and or whether a hacker has compromised or even replaced the biometric device. Confidence in the biometric device depends on the particular implementation of the device.

The term relying party is sometimes used herein to refer not merely to the entity with which a user transaction is attempted e.g. a Website or online service performing user transactions but also to the secure transaction servers implemented on behalf of that entity which may performed the underlying authentication techniques described herein. The secure transaction servers may be owned and or under the control of the relying party or may be under the control of a third party offering secure transaction services to the relying party as part of a business arrangement.

The term server is used herein to refer to software executed on a hardware platform or across multiple hardware platforms that receives requests over a network from a client responsively performs one or more operations and transmits a response to the client typically including the results of the operations. The server responds to client requests to provide or help to provide a network service to the clients. Significantly a server is not limited to a single computer e.g. a single hardware device for executing the server software and may in fact be spread across multiple hardware platforms potentially at multiple geographical locations.

In some instances it may be useful to allow a new authenticator to be enabled using registered authenticators on existing client devices. For example if the user purchases a new device with a new set of authenticators it would be beneficial to provide the user with a way to automatically register all of the new authenticators using the existing authenticators.

The embodiments of the invention described below allow a user to authorize the authenticator s on a new client device using an existing old trusted client device that is registered with one or more relying parties. In particular these embodiments may be used to enable new authenticators on new or existing client devices and keep the registrations in sync between multiple client devices.

In one embodiment once the connection is established between the client with Aold and the client with Anew a secure protocol is implemented described in detail below to transfer and integrate the registration data from the old existing client to the new client . For example in one embodiment the old client sends registration data to the new client which then generates a new set of key pairs e.g. one for each relying party and sends the public keys back to the old client along with an indication of the types of authenticators on the new client . The client with Aold then generates a signed authorization object e.g. using the public keys authenticator identification data and user account data which it sends to each respective relying party .

As illustrated in an authenticator authorization application may be executed on the new device and old device respectively to establish the secure connection exchange the authorization data and verify the registrations with a secure transaction service on each relying party . As used herein an old authenticator Aold is an authenticator that a user has already registered with one or more relying parties. A new authenticator Anew is one which the user wishes to enable with all the relying party registrations currently being used with the old authenticator. Thus the authentication engine in the described embodiments has previously registered one or more old authentication devices with a relying party. The goal of one embodiment is to transfer registrations from the old authentication engine to the new authentication engine to enable the new authenticators with each relying party.

As illustrated the new client and the old client both include secure storage and respectively for storing the registration data for each relying party e.g. public private key pairs used during authentication . In addition the relying party includes a secure transaction database for securely storing registration data for each of the client devices e.g. user account data authenticator identification data public keys provided by for each authenticator etc .

In one embodiment the user initiates the authenticator authorization application on the new client device and the authenticator authorization application on the old client device to establish the initial secure connection. The authenticator authorization applications may be mobile device apps or applications specifically designed to perform the authorization operations described herein. In another embodiment the authenticator authorization applications may be browser plugins executed in response to the user indicating that he she wishes to perform authorization e.g. via a web page with embedded Javascript or other applet or executable program code . Moreover the authenticator authorization applications may be software modules within a larger application such as an authentication application designed to manage authentications with relying parties. It should be noted however that the underlying principles of the invention are not limited to any particular implementation of the authenticator authorization applications .

In one embodiment to approve the authorization operations on the old device the user is verified by the authentication engine on the old device e.g. providing biometric input to a user authentication device . Similarly in one embodiment the user may be verified by the authentication engine on the new client device . These two verification steps may provide authorization for the authenticator authorization applications to perform the authorization process.

As mentioned at the start of the authorization process the authenticator authorization applications establish a secure connection e.g. using Bluetooth WiFi etc . In one embodiment the authenticator authorization application on the new client device receives a set of registration data for each relying party with which the old client device is registered. The registration data may include usernames and a unique code associated with the user s account on each relying party. This unique code associating the user with each relying party is sometimes referred to herein as an AppID. In some embodiments where a relying party offers multiple online services a user may have multiple AppIDs with a single relying party one for each service offered by the relying party .

In one embodiment the authenticator authorization application on the new client then generates a new public private key pair for each relying party e.g. one for each Username AppID pair . The authenticator authorization application on the new client sends the authenticator authorization application on the old client the key pair or just the public key along with an authenticator ID identifying each new authenticator type e.g. an Authenticator Attestation ID or AAID . The user may then be prompted to confirm the authorization of the new authenticator s .

In one embodiment the authenticator authorization application generates a signed authorization object comprising a signature over the tuple of the AAID the public key and the AppID for each relying party. In one embodiment the signature is generated using the current authentication key associated with the relying party e.g. a private key associated with the old authenticator for the relying party . The authenticator authorization application then authenticates to each of the relying parties e.g. via the old authentication engine and one or more old authenticators and includes the signed authorization object as an extension to one of the authentication messages.

Upon receiving the signed authentication message the secure transaction service may then verify the signature e.g. using the public key corresponding to the private key used to generate the signature . Once verified it may identify the user s account with the AppID and store the new AAID and the new public key for the new authenticator s within the secure transaction database . The user may subsequently authenticate using the new authenticators without re registering with each relying party .

Although illustrated in as a new user device the underlying principles of the invention may also be implemented in a scenario where a user installs a new authenticator on an existing client device. For example the user may upgrade or add an authenticator to an existing desktop notebook or other type of client. In such a case the communication of between the authenticator authorization applications shown in may occur internally e.g. via internal function calls between software modules implemented on the client .

One embodiment of a method for authorizing a new authenticator is illustrated in . The method may be implemented within the context of a system such as shown in but is not limited to any particular system architecture.

At the user triggers the authorization of one or more new authenticators Anew and establishes a secure communication channel with the old authenticator s Aold . As mentioned the secure communication channel may be established via a direct connection e.g. via NFC Bluetooth etc or over a network e.g. via an Ethernet or WiFi connection .

At the new authenticator generates a public private key pair for each username AppID pair e.g. for each unique relying party account .

At the old authenticator receives the key pairs and an authenticator attestation ID code identifying the type of each new authenticator e.g. an AAID . The user may then be asked to confirm the authorization operation.

At the old authenticator generates a signed authorization object comprising a signature over the tuple of the AAID the public key and the AppID for each relying party. As mentioned the signature may be generated using the current authentication key associated with the relying party e.g. a private key associated with the old authenticator for the relying party .

At the old authenticator authenticates to each relying party and includes the signed authorization object as an extension to the authentication message. Once this operation is successfully completed the user may then authenticate with each relying party using the new device and or new authenticators.

In one embodiment each relying party R Rn can choose whether or not to accept the new authenticator . For example if the AAID indicates an authenticator type which is not sufficiently reliable or accurate then the relying party may choose to deny the new registration. Thus each relying party may maintain an authenticator database i.e. Metadata containing data for all known authenticators e.g. identified by AAID . It may then query the database in response to receiving the authorization object from the old authenticator determine the characteristics of the new authenticator and determine whether those characteristics are acceptable.

In one embodiment of the invention an authenticator can specify a more generic confirmation method where the authenticators may be indirectly controlled by the same entity but still belong to different users. For example in the old authenticator might be integrated into an Owner Control System controlled by a single owner operator e.g. a corporation or government entity . The new authenticator in this example may be authenticator belonging to a staff computer and authorization of the new authenticator may be trigger by the owner control system using a known trusted authenticator . In this example the interactions between the new authenticator and old authenticator may be as described above e.g. the new authenticator generating new key pairs and the old authenticator sending an authorization object to a device comprising an owner or vendor trust anchor e.g. for storing authenticator registration data as does the secure transaction database of the secure transaction service in .

It should be noted that the term relying party is used herein to refer not merely to the entity with which a user transaction is attempted e.g. a Website or online service performing user transactions but also to the secure transaction servers implemented on behalf of that entity which may perform the underlying authentication techniques described herein. The secure transaction servers may be owned and or under the control of the relying party or may be under the control of a third party offering secure transaction services to the relying party as part of a business arrangement. These distinctions are indicated in discussed below which show that the relying party may include Websites and other network services as well as the secure transaction servers for performing the authentication techniques on behalf of the websites and network services.

In particular illustrate two embodiments of a system architecture comprising client side and server side components for authenticating a user. The embodiment shown in uses a browser plugin based architecture for communicating with a website while the embodiment shown in does not require a browser. The various user confirmation and authorization techniques described herein may be employed on either of these system architectures. For example the authentication engines and authenticator authorization applications may be implemented as part of the secure transaction service including interface . It should be noted however that the embodiments described above may be implemented using logical arrangements of hardware and software other than those shown in .

Turning to the illustrated embodiment includes a client equipped with one or more authentication devices for enrolling and authenticating an end user. As mentioned above the authentication devices may include biometric devices such as fingerprint sensors voice recognition hardware software e.g. a microphone and associated software for recognizing a user s voice facial recognition hardware software e.g. a camera and associated software for recognizing a user s face and optical recognition capabilities e.g. an optical scanner and associated software for scanning the retina of a user and non biometric devices such as a trusted platform modules TPMs and smartcards. A user may enroll to the biometric devices by providing biometric data e.g. swiping a finger on the fingerprint device which the secure transaction service may store as biometric template data in secure storage via interface .

While the secure storage is illustrated outside of the secure perimeter of the authentication device s in one embodiment each authentication device may have its own integrated secure storage. Additionally each authentication device may cryptographically protect the biometric reference data records e.g. wrapping them using a symmetric key to make the storage secure .

The authentication devices are communicatively coupled to the client through an interface e.g. an application programming interface or API exposed by a secure transaction service . The secure transaction service is a secure application for communicating with one or more secure transaction servers over a network and for interfacing with a secure transaction plugin executed within the context of a web browser . As illustrated the Interface may also provide secure access to a secure storage device on the client which stores information related to each of the authentication devices such as a device identification code user identification code user enrollment data e.g. scanned fingerprint or other biometric data and keys used to perform the secure authentication techniques described herein. For example as discussed in detail below a unique key may be stored into each of the authentication devices during registration and used when communicating to servers over a network such as the Internet.

Once the user has enrolled with an authentication device on the client the secure transaction service may register the authentication device with the secure transaction servers over the network e.g. using the registration techniques described herein and subsequently authenticate with those servers using data exchanged during the registration process e.g. encryption keys provisioned into the biometric devices . The authentication process may include any of the authentication techniques described herein e.g. generating an assurance level on the client based on explicit or non intrusive authentication techniques and transmitting the results to the secure transaction servers .

As discussed below certain types of network transactions are supported by the secure transaction plugin such as HTTP or HTTPS transactions with websites or other servers. In one embodiment the secure transaction plugin is initiated in response to specific HTML tags inserted into the HTML code of a web page by the web server within the secure enterprise or Web destination sometimes simply referred to below as server . In response to detecting such a tag the secure transaction plugin may forward transactions to the secure transaction service for processing. In addition for certain types of transactions e.g. such as secure key exchange the secure transaction service may open a direct communication channel with the on premises transaction server i.e. co located with the website or with an off premises transaction server .

The secure transaction servers are coupled to a secure transaction database for storing user data authentication device data keys and other secure information needed to support the secure authentication transactions described below. It should be noted however that the underlying principles of the invention do not require the separation of logical components within the secure enterprise or web destination shown in . For example the website and the secure transaction servers may be implemented within a single physical server or separate physical servers. Moreover the website and transaction servers may be implemented within an integrated software module executed on one or more servers for performing the functions described below.

As mentioned above the underlying principles of the invention are not limited to a browser based architecture shown in . illustrates an alternate implementation in which a stand alone application utilizes the functionality provided by the secure transaction service to authenticate a user over a network. In one embodiment the application is designed to establish communication sessions with one or more network services which rely on the secure transaction servers for performing the user client authentication techniques described in detail below.

In either of the embodiments shown in the secure transaction servers may generate the keys which are then securely transmitted to the secure transaction service and stored into the authentication devices within the secure storage . Additionally the secure transaction servers manage the secure transaction database on the server side.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

Elements of the present invention may also be provided as a machine readable medium for storing the machine executable program code. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnetic or optical cards or other type of media machine readable medium suitable for storing electronic program code.

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. For example it will be readily apparent to those of skill in the art that the functional modules and methods described herein may be implemented as software hardware or any combination thereof. Moreover although some embodiments of the invention are described herein within the context of a mobile computing environment the underlying principles of the invention are not limited to a mobile computing implementation. Virtually any type of client or peer data processing devices may be used in some embodiments including for example desktop or workstation computers. Accordingly the scope and spirit of the invention should be judged in terms of the claims which follow.

