---

title: Domain name system bypass in user applications
abstract: Disclosed herein are methods, systems, and software for bypassing a domain name system. In one example, a method of operating a user communication device includes receiving a user instruction requesting content within a user application of the user communication device. The method further provides, in response to the user instruction, processing at least a domain name system bypass data structure on the user communication device to identify a network address for retrieving the content. The method further includes, requesting the content from a content node using the network address.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09509596&OS=09509596&RS=09509596
owner: Fasly, Inc.
number: 09509596
owner_city: San Francisco
owner_country: US
publication_date: 20140605
---
This application hereby claims the benefit of and priority to U.S. Provisional Patent Application 61 832 604 titled DOMAIN NAME SYSTEM BYPASS IN USER APPLICATIONS filed Jun. 7 2013 and which is hereby incorporated by reference in its entirety.

Network provided content such as Internet web pages or media content such as video pictures music and the like are typically served to end users via networked computer systems. End user requests for the network content are processed and the content is responsively provided over various network links. These networked computer systems can include origin hosting servers which originally host network content of content creators or originators such as web servers for hosting a news website. However these computer systems of individual content creators can become overloaded and slow due to frequent requests of content by end users.

Content delivery networks have been developed that add a layer of caching between the origin servers of the content providers and the end users. The content delivery networks typically have one or more content nodes distributed across a large geographic region to provide faster and lower latency access to the content for the end users. When end users request content such as a web page the content node is configured typically through domain name systems or DNS to respond to the end user requests instead of the origin servers. Domain name systems provide translations of domain names into IP addresses allowing a content node to act as a proxy for the origin servers.

Content of the origin servers can be cached into the content nodes and can be requested via the content nodes from the origin servers of the content originators when the content has not yet been cached. Content nodes usually cache only a portion of the original source content rather than caching all content or data associated with an original content source. The content nodes can maintain only recently accessed and most popular content as cached from the original content sources. Thus content nodes exchange data with the original content sources when the end users request requires new or un cached information or if something has changed in the original content source data.

Examples disclosed herein provide methods systems and software for domain name system bypassing. In one example a method of operating a user communication device includes receiving a user instruction requesting content within a user application of the user communication device. The method further provides in response to the user instruction processing at least a domain name system DNS bypass data structure on the user communication device to identify a network address for retrieving the content. The method further includes requesting the content from a content node using the network address.

In another instance a computer readable medium having program instructions stored thereon that when executed by a user communication device direct the user communication device to at least receive a user instruction requesting content within a user application executed on the user communication device. In response to the user instruction the program instructions further direct the user communication device to process at least a DNS bypass data structure on the user communication device to identify a network address for retrieving the content and request the content from a content node using the network address.

In another example a system for domain name system bypassing includes a DNS bypass system configured to transfer DNS bypass information to a user communication device. The system further includes the user communication device configured to insert the DNS bypass information into a DNS bypass data structure and receive a user instruction requesting content within a user application executed on the user communication device. In response to the content request the user device is configured to process at least the DNS bypass data structure on the user communication device to identify a network address for retrieving the content and request the content from a content node using the network address.

Network content such as web page content typically includes content such as text hypertext markup language HTML pages pictures video audio code scripts or other content viewable by an end user in a browser or other application. This various network content can be stored and served by origin servers and equipment. The network content includes example website content referenced in such as www.gamma.gov www.alpha.com and www.beta.net among others. In some examples origin servers can serve the content to end user devices. However when a content delivery network CDN or other content delivery system is employed the content delivery network can act as a proxy to cache content delivery between origin servers and the end user devices.

Content delivery networks can add a layer of caching between origin servers of the content providers and the end users. The content delivery networks typically have one or more content nodes or cache nodes distributed across a large geographic region to provide faster and lower latency local access to the content for the end users. When end users request content such as a web page a locally proximate content node will respond to the content request instead of the associated origin server. Various techniques can be employed to ensure the content node responds to content requests instead of the origin servers such as associating web content of the origin servers with network addresses of the content nodes instead of network addresses of the origin servers using domain name system DNS registration and lookup procedures. DNS registration is an Internet service that translates domain names into IP addresses. For example user devices that request data from a webpage such as www.example.com must first request the DNS service to find the appropriate network address that corresponds to the domain name. This querying of the DNS service takes time as the user device must look externally for the appropriate network address.

To further illustrate a brief description of the operation of communication system is included. In operation end user devices request network content such as content associated with origin servers . Instead of these requests being handled by the individual origin servers individual content nodes of content delivery network receive the content requests over one of links and process the content requests for delivery of the content to the associated end user devices . Requested network content that is already stored in ones of CN can be provided quickly to the end user devices while network content that is not already stored in ones of CN can be responsively requested by an associated one of CN from an appropriate origin server for delivery by the CN and possible caching by the CN. In this manner each of CN can act as intermediary proxy nodes to provide local and fast access for end user devices to network content of origin servers without burdening origin servers . shows cached content included in data storage system of CN as comprised of content and thus content is currently shown as cached by CN . Other configurations are possible including subsets of content being cached in individual ones of CN .

Although shows content of origin servers being cached by data storage system CN can handle other content. For example dynamic content generated by activities of end user devices need not originally reside on origin servers and can be generated due to scripting or code included in web page content delivered by CN . This dynamic content can also be cached by ones of CN and can be specific to a particular end user device during a communication session.

Packet network can communicatively couple DNS system with content delivery network . In some examples when end user devices desire content from a domain name or uniform resource locator URL user devices will contact a DNS system such as DNS system to translate alphanumeric domain names and URLs to numerical network address. As demonstrated in if one of user device requests content from www.delta.com a DNS lookup request is transferred by the one of user device for delivery to DNS system . DNS system then responsively returns a network address that corresponds to the domain name. From this numerical address a content request can then be made to the appropriate CN or other server associated with the network address received from DNS system . In many examples the network address comprises an Internet protocol IP address such as indicated by 192.168.1.1 associated with www.delta.com in .

As illustrated in user devices such as end user device can include applications that receive content from content delivery network . In the present example such applications include Application A Application B and Application C. When Application A and Application B require content user device will use a DNS request to DNS system to determine the network address of the appropriate content. However Application C includes DNS bypass module to avoid the DNS request to DNS system in contrast to Application A and Application B.

Instead of using the DNS system DNS bypass module can update a DNS bypass data structure with CN access information for Application C. This access information comprises network address information prioritized within the data structure based on various access factors discussed herein. The access factors can include which CNs are closest in physical location or network proximity to user device which CNs are available to serve content to user device which CNs provide the least amount of latency for user device or any other distinction for determining the appropriate priority for the CNs including combinations thereof. DNS bypass data structure can include a list of the prioritized CNs or any other data structure capable of prioritizing the CNs. Updating of DNS bypass data structure can occur on a given period such as every ten minutes every time a new CN is made available to the user device every time the application is executed on the device or any other predetermined event driven or periodic update schedule. By maintaining a local prioritized DNS bypass data structure for Application C the application is capable of requesting content from the appropriate CN without a DNS query to DNS system or other DNS systems.

DNS bypass system is configured to communicate with user device to update user device with DNS bypass information such as possible CN network addresses for Application C. The user device can test or otherwise evaluate the network addresses from DNS bypass system to create a prioritized order in the data structure. In some examples DNS bypass system can be configured to test access factors such as the availability and latency of the CNs with other user devices to assist user device in prioritizing the network addresses. Although not illustrated for simplicity it should be understood that DNS bypass system can communicate with CNs or management system .

In some instances DNS bypass module can include a software development kit SDK or application programming interface API that allows user device to communicate with DNS bypass system . The SDK or API can be configured to receive and store network addresses for the one or more CNs into DNS bypass data structure request network addresses for the one or more CNs prioritize the CNs in DNS bypass data structure or any other process for storing and arranging items within DNS bypass structure .

Management system handles configuration changes and status information collection and delivery for system operators and for the origin server operators or managers. For example operator device can transfer configuration for delivery to management system where configuration can alter the handling of network content requests by CN among other operations. Also management system can monitor status information for the operation of CN such as operational statistics and provide this status information as to operator device . Furthermore operator device can transfer content for delivery to origin servers to include in content . Although one operator device is shown in it should be understood that this is merely representative and communication system can include many operator devices for receiving status information providing configuration information or transferring content to origin servers. In some examples management system can be combined with DNS bypass system . In other examples management system or DNS bypass system can be combined with elements of content delivery network .

In response to the user instruction end user device processes at least DNS bypass data structure on user device to identify a network address for retrieving the content . In some examples DNS bypass data structure includes network addresses for one or more content nodes. The network address indicated for a highest priority content node can be identified to retrieve the content requested by the user instruction.

In some examples DNS bypass module on user device can prioritize items in the data structure such as the network addresses based on various access factors of content nodes in the system. For instance DNS bypass module can prioritize based on a physical location or network closeness of a content node an access latency with regards to the content node an ability of the content node to serve content to the end user device or other factors including combinations thereof. DNS bypass data structure can be updated every time the user executes the application can be updated at set time increments or can updated in any other periodic event driven or predetermined way.

In some examples DNS bypass data structure can receive updates from DNS bypass system . DNS bypass system can be configured to communicate with user device to update user device with DNS bypass information such as network addresses for content nodes. The updates can allow user device to configure and test the network addresses to create the prioritized data structure. In some examples DNS bypass system can be configured to further test the availability and latency of the content nodes to assist the user device in prioritizing the network addresses.

Responsive to identification of the network address user device will request the content from a content node using the network address identified above . In some examples the highest priority content node can be unavailable or unreachable. In these situations the user device can then select the next network address within DNS bypass data structure to obtain the requested content. This process can then be repeated as many times as necessary until the requested content is returned to the end user device. Furthermore based on the response of the content nodes during content requests DNS bypass data structure can be updated based on a variety of access factors. These access factors can include the availability of the CNs the latency of the CNs the location of the CNs or any other CN access factor including combinations thereof.

Referring back to the elements of CN origin servers management system packet network DNS system and DNS bypass system can each include communication interfaces network interfaces processing systems computer systems microprocessors storage systems storage media or some other processing devices or software systems and can be distributed among multiple devices. Examples of CN origin servers management system packet network DNS system and DNS bypass system can each include software such as an operating system logs databases utilities drivers caching software networking software and other software stored on a computer readable medium. Content delivery network in addition to including CN can include equipment and links to route communications between CN and any of end user devices origin servers management system packet network DNS system and DNS bypass system among other operations.

End user devices can include subscriber equipment customer equipment access terminal smartphone personal digital assistant PDA computer tablet computing device e book Internet appliance media player game console or some other user communication apparatus including combinations thereof. End user devices include storage media for storing DNS bypass data structures similar to DNS bypass data structure . These data structures allow user devices to make content requests without inquiries to a DNS system similar to DNS system .

Communication links each use metal glass optical air space or some other material as the transport media. Communication links can each use various communication protocols such as Time Division Multiplex TDM asynchronous transfer mode ATM Internet Protocol IP Ethernet synchronous optical networking SONET hybrid fiber coax HFC circuit switched communication signaling wireless communications or some other communication format including combinations improvements or variations thereof. Communication links can each be a direct link or can include intermediate networks systems or devices and can include a logical network link transported over multiple physical links. Although one main link for each of links is shown in it should be understood that links are merely illustrative to show communication modes or access pathways. In other examples further links can be shown with portions of the further links shared and used for different communication sessions or different content types among other configurations. Communication links can each include many different signals sharing the same associated link as represented by the associated lines in comprising resource blocks access channels paging channels notification channels forward links reverse links user communications communication sessions overhead communications carrier frequencies other channels timeslots spreading codes transportation ports logical transportation links network sockets packets or communication directions.

In the operation of user device applications such as application ABC can request content from network devices such as server using a browser application which a user has entered a domain name or URL to request content. To gather the content from server user device must first request from domain name system time TA the network address associated with the domain name or URL requested by the user of user device . Typically domain name system translates alphanumeric domain names to numerical network addresses needed for the purpose of locating network devices such as server . Once domain name system has determined the appropriate network address for the domain name or URL domain name system will return the appropriate network address to user device time TA .

Upon receipt of the network address user device can then issue a content request to server for the user requested content for application ABC time TA . Server can then return the requested content for application ABC if server is available time TA .

In contrast to application user device includes application XYZ with DNS bypass capability. Application can include social media applications video streaming applications music streaming applications news reading applications and other user applications. However application is not a web browser in this example. Also a user entry of a domain name or URL is also not considered a user request for content in this example. Instead a user can request content using various graphical user interface elements such as icons pictures text buttons or other user interface elements to select or request content within application .

In operation user device can be updated with network addresses for one or more cache nodes by DNS bypass system time TB . These network addresses will then be prioritized and stored within a DNS bypass data structure on user device such that when application requests content user device can use a network address in DNS bypass data structure . Thus instead of requesting a network address from a domain name system at the time of a user request for content user device can access DNS bypass data structure locally to identify the appropriate network address. The network address can then be used to make a request to the appropriate cache nodes time TB such as cache node and cache node can return the appropriate content time TB .

In determining the priority within DNS bypass data structure user application XYZ can consider the location of a content node the latency with regards to the content node the ability for the content node to serve content to the end user device or any other method of prioritizing items in a DNS bypass data structure as discussed herein. Further DNS bypass data structure can be updated every time the user executes the application can be updated at set time increments or can be updated in any other periodic or systematic way. In some instances DNS bypass data structure can comprise a list but the prioritizing information can be stored in any other data form capable of prioritizing the network addresses. In some cases DNS bypass structure can be updated based on the response of cache nodes during a content request. Thus if a cache node suddenly became unavailable or slow that cache node can be given a lower priority for the next content request.

In some examples DNS bypass system can be used to assist user device in prioritizing the cache node addresses. In such instances DNS bypass system can consider access factors such as the availability as well as the latency for the available cache nodes. DNS bypass system can accumulate statistical data from other user devices to assist prioritizing of DNS bypass data structure . Such statistical data can include the latency location success rates and availability of cache nodes upon content requests for other user devices. DNS bypass system can then process the statistical data to assist user device in generating a prioritized DNS bypass data structure such as by sorting or prioritizing a list of network addresses before transfer of the list to user device .

User device includes processing system software application storage system communication interface and user interface . Processing system loads and executes software including application from storage system . When executed by user communication device application directs processing system to operate as a user communication device described herein.

In one example application can encounter a request or instruction from a user of the user communication device for content from within application . Upon the request application directs processing system to process a domain name system bypass data structure represented by bypass module in to identify a network address for retrieving content associated with the content request. Further application directs processing system to request the content from a content node using the network address.

In some instances application can include a software development kit SDK or application programming interface API that allows user communication device to communicate with DNS bypass computing system . The SDK or API can be configured to receive and store network addresses for the one or more CNs in a bypass data structure represented by original data structure request network addresses for the one or more CNs prioritize the CNs in a bypass data structure represented by prioritized data structure or any other process for storing and prioritizing items within a DNS bypass structure.

Communication interface can be configured to receive content from content nodes and network addresses for CNs from DNS bypass computing system . Communication interface can also be configured to request content for user communication device .

Referring still to processing system can comprise a microprocessor and other circuitry that retrieves and executes software from storage system . Processing system can be implemented within a single processing device but can also be distributed across multiple processing devices or sub systems that cooperate in executing program instructions. Examples of processing system include general purpose central processing units application specific processors and logic devices as well as any other type of processing device combinations of processing devices or variations thereof.

Storage system can comprise any non transitory storage media readable by processing system and capable of storing software . Storage system can include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Storage system can be implemented as a single storage device but can also be implemented across multiple storage devices or sub systems. Storage system can comprise additional elements such as a controller capable of communicating with processing system .

Examples of storage media include random access memory read only memory magnetic disks optical disks flash memory virtual memory and non virtual memory magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and that can be accessed by an instruction execution system as well as any combination or variation thereof or any other type of storage media. In some implementations the storage media can be a non transitory storage media.

User interface can include a mouse a keyboard a voice input device a touch input device for receiving a gesture from a user a motion input device for detecting non touch gestures and other motions by a user and other comparable input devices and associated processing elements capable of receiving user input or user instructions. Output devices such as a video display or graphical display speakers printer haptic devices and other types of output devices can also be included in user interface .

DNS bypass computing system includes processing system software software module storage system communication interface and user interface . Processing system loads and executes software including software module from storage system . When executed by computing system software module directs processing system to operate as a DNS bypass system described herein. In one example software module is configured to pass DNS bypass information to user communication device .

Communication interface can be configured to communicate DNS bypass information such as CN network addresses to user communication device . Communication interface can further be configured to gather network addresses for one or more content nodes. In some instances communication interface can be configured to receive prioritizing information from CNs .

Referring still to processing system can comprise a microprocessor and other circuitry that retrieves and executes software from storage system . Processing system can be implemented within a single processing device but can also be distributed across multiple processing devices or sub systems that cooperate in executing program instructions. Examples of processing system include general purpose central processing units application specific processors and logic devices as well as any other type of processing device combinations of processing devices or variations thereof.

Storage system can comprise any non transitory storage media readable by processing system and capable of storing software . Storage system can include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Storage system can be implemented as a single storage device but can also be implemented across multiple storage devices or sub systems. Storage system can comprise additional elements such as a controller capable of communicating with processing system .

Examples of storage media include random access memory read only memory magnetic disks optical disks flash memory virtual memory and non virtual memory magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and that can be accessed by an instruction execution system as well as any combination or variation thereof or any other type of storage media. In some implementations the storage media can be a non transitory storage media.

User interface can include a mouse a keyboard a voice input device a touch input device for receiving a gesture from a user a motion input device for detecting non touch gestures and other motions by a user and other comparable input devices and associated processing elements capable of receiving user input from a user. Output devices such as a video display or graphical display speakers printer haptic devices and other types of output devices can also be included in user interface . User interface can be omitted in some examples.

To further illustrate the operation of domain name system bypass environment a brief description of prioritizing the network addresses for CN is included. As illustrated in CN can have one or more associated network addresses that can be used to serve content to user communication device . In this example the network addresses are IP addresses. In operation these network addresses will be gathered by DNS bypass computing system to form collected addresses which will be transferred to user communication device . Once transferred to user communication device the network addresses will be stored in original data structure by bypass module . Once stored in original data structure bypass module can prioritize the data structure based on a variety of access factors to generate prioritized data structure . These access factors can include the physical location of a content node a network closeness of a content node an access latency for a content node the ability for a content node to serve content to user communication device or any other factor for prioritizing items in the data structure.

In some instances DNS bypass computing system can be configured to assist user communication device in generating prioritized data structure . In such examples DNS bypass computing system can collect statistics from one or more other user communication devices. These statistics can include the latency of the content nodes the availability of the content nodes past access success statistics of content requests by other user devices past access latency data of other user devices or any other relevant factor in determining a content node priority. Once the data is gathered the data can then be combined with statistics from user communication device to determine the appropriate priority within prioritized data structure .

Data structures include DNS bypass information such as network addresses for one or more content distribution nodes. These network addresses allow the application to call the appropriate content distribution node without having to make a domain name system call. Although illustrated as a list the DNS bypass information can be stored in any other data form capable of prioritizing the network addresses. Data structures can comprise databases linked lists spreadsheets tree structures or other data storage and prioritization structures. Data structures can be stored with the application data on the user device storage media.

In operation a domain name bypass system can pass DNS bypass information including the network addresses for one or more content distribution nodes to user communication device . In the present example the network addresses are the network addresses for CNs . This information is then placed in original data structures for application A and application B. Following the placement of the DNS bypass information original data structures can be prioritized based on a variety of access factors. These factors can include the physical location of a content node the latency for a content node to respond to a request the availability for the content node to serve content to user device or any other factor for prioritizing items in the data structures. Once prioritized the network addresses can then be placed in prioritized data structures .

As illustrated in the top priority network address for application A is 192.168.3.10 as illustrated in data structure and the top priority network address for application B is 192.169.3.10 as illustrated in data structure . Upon a user instruction requesting content for either application A or application B user device will process data structure or data structure to retrieve the top priority network address. This top priority network address will then be used to request the appropriate content from the corresponding content node. In some instances the content node cannot respond to a request of the user device because the content node is unavailable. In such examples the user device can then move to lower priority network addresses until the request is fulfilled. The user device can then adjust the priority in data structures based on the latency or availability during the content request.

Prioritizing the data structures can occur on a given period such as every ten minutes every time a new content node is made available to the user device every time the application is executed on the device or any other systematic or periodic update schedule. Further user device can be updated with new and discontinued content nodes on a given time period every time the user initiates the application or any other systematic or periodic update for available content nodes.

The included descriptions and figures depict specific implementations to teach those skilled in the art how to make and use the best mode. For the purpose of teaching inventive principles some conventional aspects have been simplified or omitted. Those skilled in the art will appreciate variations from these implementations that fall within the scope of the invention. Those skilled in the art will also appreciate that the features described above can be combined in various ways to form multiple implementations. As a result the invention is not limited to the specific implementations described above but only by the claims and their equivalents.

