---

title: Method and system for enterprise search navigation
abstract: A method can include receiving a search request from a user interface (UI), selecting one or more repositories in response to the search request, and displaying, on a display device, search results corresponding to the selected repositories. The selected repositories are a subset of a plurality of available repositories, as specified by an administrator. By selecting or de-selecting the available repositories, a user can define or refine a search of the available repositories. In various implementations, the method includes interface elements that assist a user in previewing revised search results based on revised selections of repositories, and/or selections of subcategories of information available in one or more of the repositories.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09311409&OS=09311409&RS=09311409
owner: Oracle International Corporation
number: 09311409
owner_city: Redwood Shores
owner_country: US
publication_date: 20140421
---
The present patent application is a continuation of U.S. patent application Ser. No. 12 618 351 filed Nov. 13 2009 and entitled Method and System for Enterprise Search Navigation which is hereby incorporated by reference herein in its entirety and for all purposes.

The present invention is related to information searches and particularly relates to displaying and refining searches in an enterprise environment.

Searches of extensive data sources often provide many results which can span multiple screens or pages on the requesting user s display interface. In an attempt to highlight the most relevant results search tools can use automated algorithms to rank order the results in a list. Nonetheless it is not unusual for search results to fail to include the desired target information at the top of this list. If a search returns an extensive list of results a document desired by a user may actually end up being listed on page 3 or 4 or further down in a multi page list of search results. The user may altogether miss the desired search result if the list of results is too lengthy to conveniently browse. With existing search tools users are generally left to their own creativity when the time comes to refine a data search to hone in on the desired results. In addition the standard approach of deciding on and typing in additional keywords raises a perceptible barrier to users who may be pressed for time. When faced with disappointing search results users may often give up after one or two attempts to compose and enter revised search terms.

Such failures arise for a variety of reasons. For example the user may not have carefully selected the search terms. As another example the user may not be aware of the right search terms that would obtain the desired results. The latter example illustrates a particular problem faced by users if the users knew exactly what they were looking for they could rely less on the sophistication of the search engine. It would be helpful to have search tools that can guide a user to better formulate a search request. Similarly it would be helpful to have search tools that can assist a user to better refine the results that are obtained in their initial searches.

Described herein are various tools and techniques for supporting data searches in an enterprise environment. The implementations detailed herein can be used in business educational institutions government offices and other enterprises to assist users who seek information from one or more data sources or other repositories maintained by or connected with the enterprise.

In one embodiment a method assists users in formulating search requests by providing options to select among a plurality of administrator specified repositories. The method also includes receiving a selection of the repositories from the user receiving a set of search terms from the user and performing a search of the selected repositories based on the search terms.

In various implementations the selections and search results are displayed in a graphical user interface GUI . The GUI provides a combined portal for searching through a variety of administrator specified repositories. A user can select which of the available repositories should be searched and can revise these selections with simple interface operations such as mouse clicks. In various situations the GUI may allow a user to quickly and easily change the selection of repositories after reviewing an initial set of search results. By selecting additional repositories and or de selecting previous repositories a user can quickly tailor an initial search to obtain a revised set of search results.

One reason for repository selection is that the available repositories may store data of different types e.g. video music textual documents instant messaging data blog data and social networking site data . The search results can be displayed in several sections separated according to the source repositories to which they link and or according to the types of data and or according to other categorizations. The GUI can provide options to the user for selecting one or more types of data to be presented in the search results.

In another embodiment a system includes a memory configured to store a search index and a processor coupled to the memory. The processor is configured to display a graphical user interface GUI on a display device receive a search request from the GUI and select one or more repositories in response to the search request. The selected repositories are a subset of a plurality of administrator specified repositories displayed on the GUI. The processor is also configured to obtain search results from the search index and to display the search results on the display device. The search results correspond to the selected repositories.

In various implementations the system includes an indexing module a selection module and a search module. The indexing module is configured to read contents of the plurality of administrator specified repositories and to update the search index based at least in part on the contents of the data repositories. The selection module is configured to display selection inputs in the GUI and to receive selections and de selections of the administrator specified repositories. The selection inputs correspond to the plurality of administrator specified repositories. A search request includes keywords entered by a user along with the user s selections of the administrator specified repositories. The search module is configured to generate the search results based on the search index and the search request excluding results that point to data in the un selected repositories. The GUI can also enable a user to refine a search to show only results that correspond to one of the selected repositories. Additionally the GUI can be configured to further refine the search according to various sub categories of information. In various situations these tools may assist a user in composing an initial search request reviewing the results obtained from a search and or revising the search.

The large variety of information available from a global search is generally valuable but it can often be a hindrance. On one hand it is helpful for search results to be an exhaustive review of the available information available across an enterprise. On the other hand a user can be overwhelmed by the large number of results from a global search only a small fraction of which are likely to be relevant. An alternative is to provide users with a site specific or repository specific search. In this approach each user interface associated with a particular repository is typically customized to assist a user searching for information in that repository. Without a centralized search tool however a user may need to repeat a search formulated in different ways on several different portals to collect the desired information from several different sources of interest. Thus wide reaching global searches and narrow single source searches each have disadvantages from a user s perspective.

It has been found that the definition and refinement of a search can be enhanced by allowing users to specify the user s desired sources of information. An enterprise may store data in separate data repositories for a variety of reasons such as the needs of the information technology staff who implement the repositories. This partitioning can lead either deliberately or inadvertently to content groupings. For example an engineering company s technical training department may develop proprietary videos and store them in an internal web accessible intranet data source. The decision to create this separate intranet site may have been driven by system requirements for storing large quantities of data and for streaming that data at appropriate transmission speeds to users. While this repository may have been defined largely by the data s type video data a useful consequence is that the repository ends up being a concentrated source of information with a particular content a user may recognize that it holds narrative how to information for engineers in the company s line of work. Another repository may be defined by the type of software that is used to manage the data such as Microsoft Exchange Server . A user may recognize however that this repository is a relevant source of data relating to ongoing conversations. A search for information can therefore benefit by discriminating among repositories even if the repositories were not initially intended to categorize the data according to content.

Described herein are centralized search tools and techniques that can be used in various implementations to obtain relevant search results from user selected repositories and present them to a user in a combined format. In one embodiment a search tool enables a user to select among a variety of repositories or other data sources maintained by an enterprise. This search tool enables a user to conveniently restrict a search to the selected data repositories. This selectivity takes advantage of the user s assessment of those repositories most likely to hold the desired data. In one embodiment the search tool further enables the user to easily revise repository selections while reviewing the search results. The ability to specify and quickly revise searches based on selected repositories can also be extended to selected data types associated with repositories and other criteria. In one embodiment a search tool assists a user with the winnowing of search results guiding the user s efforts to drill down into narrower search results based on selected repositories the types of available data and other factors.

Data search system includes a search index that is coupled to an indexing module a user support module and an administrator support module . Administrator support module is coupled to indexing module and to a set of repository interfaces and collectively repository interfaces . Support modules and also interface with network .

The various repositories and are coupled to data search system by a system administrator s who installs or configures the appropriate interfaces and respectively for the repositories. Interfaces for the repositories can be in the form of for example an application programming interface API . Repository interfaces provide indexing module with communication links to the data repositories. Indexing module communicates with repository interfaces using protocols that are agnostic with regard to the types of the repositories.

Various types of data can be found in repositories such as repositories and . Depending on the needs of an enterprise the repositories can hold data such as collections of spreadsheets presentations portable documents blueprints word processing files and other electronic documents databases email collections Short Message Service Silent Messaging Service SMS logs Multimedia Messaging Service MMS logs and other communications archives collections of digitized photographs audio recordings video files and other multimedia files web sites web logs blogs discussion forums wikis community sites within an organization and other collections of social network data collections of desktop widgets internet widgets and other tools that can be used to collect and store data and other types of reposited data such as mashups tag clouds podcasts and syndicated feeds among others. A variety of interfaces can be used to access these data such as file systems web browser portals and application programming interfaces.

For example the enterprise s internal web site data can be stored and or archived in repository . The corresponding repository interface includes appropriate tools for reading and interacting with the intranet web data and indexing module can use these tools to examine contents of repository . This examination can be used to populate and update search index entries in search index .

Interfaces and can include appropriate modules for interacting with various types of storage hardware and with various storage device operating systems file systems virtual storage interfaces and other relevant storage protocols. Interfaces and can also include appropriate modules for reading the stored data such as web crawlers and parsing tools. For example if one or more of the repositories includes a database managed by Microsoft Exchange Server the corresponding repository interface may interact with the Exchange Server though a Messaging Application Programming Interface MAPI module. Alternatively the repository interface may include a module that directly reads data from the Exchange database.

Data search procedure commences by providing GUI input elements in which a user can enter parameters for a search request . The input elements can include for example text entry blocks radio buttons check boxes and other data entry widgets.

The user interface can include selective indicators e.g. button input elements for the repositories that are available for searching. Input elements can also enable the user to enter desired search terms in textual format. In other embodiments the search terms or other criteria can be entered non textually. For example a user can select text boxes describing the content of a desired video clip or a point s on a color wheel describing a color in a desired photograph. Through the various input elements the user interface receives a search request from a user .

Once the search parameters are provided the procedure examines a search index e.g. search index based on the search parameters . This examination identifies entries in the search index that refer to data which is relevant based on the user s search terms and the user s selections of the desired repositories. The search index is updated on an ongoing basis by tools that examine the data in the various available data repositories e.g. indexing module . Each entry in the search index indicates the associated source repository and includes a link to the corresponding data in the source repository. The search index can be made according to a variety of algorithms such as sorting page ranking or entry ranking algorithms that can enable the examination to provide fast and relevant search results.

The identified index entries can be rank ordered according to relevance for the search . Index entries that are most likely to link to data desired by the user can be included at the top of the ordering. The ordering continues according to decreasing relevance. Such selections and rankings of search results can be provided through the use of appropriate ranking algorithms such as ranking procedures used to generate the search index and or procedures that consider other ranking factors such as temporal considerations e.g. a recent results request by a user age or linguistic considerations e.g. the language used by a particular user or the age of the user geographical considerations and or jurisdictional considerations e.g. the location of the user and or legal restrictions on the use of content in that location . In various implementations of the procedure the examination of the search index can be augmented by an examination of the selected repositories.

Data search procedure can also obtain search results which briefly describe the linked data for a set of the highest ranked index entries . The search results can include previews such as text snippets or graphic thumbnails of the data that are referenced by these links. If the search index includes these snippets or thumbnails then the preview information can be obtained from the search index itself. Alternatively or in addition the snippets or thumbnails can be obtained or augmented by data retrieved from the corresponding repositories. The search results also include links to the data to which they refer e.g. text addresses and or clickable hypertext links . The search results are displayed for the user . Additional lower ranked links and corresponding preview information can be concurrently retrieved from the search index and or from the repositories.

The user can then be given an opportunity to decide how to proceed in light of the displayed set of highest ranked results. For example at any subsequent point in the procedure the user may elect to examine the actual data indicated by one of the displayed search results. The user can also indicate whether a set of the next highest ranked search results is desired . This indication can be provided thorough appropriate input elements e.g. a Next Page button . If the user requests those additional search results then the display is refreshed in preparation for showing the next set of search results . This next set of search results may have been obtained while the previous results were being displayed e.g. during block as discussed above . These lower ranked search results can then be displayed by returning to block .

If the user does not wish to view the lower ranked search results then the user can indicate whether to revise the search terms . This indication can be provided though appropriate input elements such as by re presenting one or more of the search term entry interfaces to the user along with the search results. If the user enters new search terms then a new search is performed based on those terms .

If the user does not enter new search terms then the user can indicate whether to revise the existing search with a different selection of the repositories . This determination can be made though appropriate input elements such as by re presenting the user with input elements that allow the user to select or de select from the available repositories. If the user does not desire any revisions to the search then data search procedure terminates or stands by and awaits a selection of one of the displayed search results . If the user makes a revised selection of repositories then a revision of the existing search is initiated based on the revised selection.

In various implementations of the procedure this revision of the search can include a determination of whether the revised repository selection is narrower than the selections from the previous search . That is the procedure determines whether the new selection includes only a subset of the repositories that were selected in the previous search. If the new selection includes one or more repositories other than the repositories from the previous search i.e. the revised search is not for a subset of the previously selected repositories then a new search of the search index is initiated .

On the other hand if the revised repository selection is narrower than the selections from the previous search then the already obtained search results can be used without initiating a new examination of the search index. The existing search results can be winnowed to obtain the narrower set of search results .

A determination is then made as to whether the winnowed search results need to be re ranked . This determination depends on whether the revised repository selection impacts the ranking of the search results. In most situations a narrowed repository search does not need to be re ranked once entries from the de selected repositories are removed the remaining entries are already sorted in the appropriate order.

In some situations however a re ranking of search results may be appropriate. For example various implementations of a search index can include several contributing factors to the weighting of each entry depending on which other repositories are considered when generating the weightings. For example ranking algorithms can assign weights to a data entry based on votes from other data entries that point to that data entry. In various implementations of a ranking system if an entire repository of data entries is excluded from a search then the ranking can be altered to reflect the revised weightings that arise from the exclusion of those votes. Other factors regarding the construction of the search index and the ranking algorithms may also necessitate a re ranking of search results.

If a re ranking is appropriate then the winnowed search results are re ranked . Otherwise the highest ranked winnowed search results are displayed .

A search is performed using the entered parameters when the user clicks button Search . In the depicted example a user has requested a search using the terms David Gelfrong muscle car. As shown by check boxes this search request specifies three repositories the internal corporate web site the social networking site and the customer support database. The search results obtained for these three selected repositories are shown in output pane . The displayed results do not include search results that link to data in the non selected repositories.

The search results can be obtained from an examination of an already assembled search index e.g. search index . Alternatively or in combination all or a portion of the search results can be obtained from an examination of the selected repositories. In the depicted example each search result includes a snippet and or a thumbnail of the linked data boldface type for words that match the user s search terms and an address of the linked data. The addresses can be for example file paths uniform resource locators URLs locations within a file or database or other types of addresses or combinations thereof. The search results can be hyperlinked to corresponding entries in the selected repositories. For example if a user clicks on or otherwise selects a particular search result the corresponding data from within a repository can be displayed in a new window or tab.

As illustrated search results may exceed a viewing area that is available in output pane . Various tools can be used to assist the user in locating the desired search results among those that have been obtained. For example a scroll bar can be provided to allow scrolling through the rank ordered search results. As another example the search results can be sorted in a hierarchical fashion grouped according to the repositories.

Repository buttons and illustrate such a technique of associating result entries with repositories to assist users in locating the desired search results. In repository buttons and are displayed in response to a search request alongside output pane . The repository buttons correspond to the selected repositories of the search request. Each of the repository buttons serves both as an output element and as an input element. As an output element button indicates that among the results in pane 85 search results hits are associated with the internal corporate web site. That is these search results refer to 85 instances of data that were found in the Acme Intranet repository. Similarly repository button indicates that 782 of the search results are associated with the AcmeFolk social networking site. Repository button indicates that four of the search results are associated with the CustomerCare support database.

As input elements repository buttons and allow a user to conveniently refine the display of search results by clicking on one of the buttons. If a user clicks on a repository button the interface is revised to focus on a category of search results from only that repository. This operation assists a user to drill down to a deeper set of narrowed search results. For example if the user clicks on button then the initial output pane is replaced with revised information corresponding only to the results that link to information in the CustomerCare support database.

Along with check boxes repository buttons and enable a user to deliberately select or de select collections of data at any time in the search review process. As discussed above even if these collections are created and partitioned by criteria other than content a user can recognize that some collections may have more relevant or less relevant information content for a particular search. In the context of a particular search the various administrator specified repositories can serve as a useful categorization of the search results. The depicted examples enable a user to employ this recognition to the user s benefit.

The ability to select among repositories can be especially helpful in an enterprise environment. For example a user may initiate a search by requesting search results associated with several of the enterprise s repositories. After reviewing the initial search results the user may decide to quickly narrow the search drilling down into a social network repository e.g. AcmeFolk for some searches or into corporate intranet pages e.g. Acme Intranet for others. As discussed below buttons and can be used to simplify this operation. In contrast to environments that require a user to repeat a search through several different portals for each of several different repositories interface can provide simplified and faster searches.

Sub category tree assists a user in further winnowing the search results. For example the depicted sub category tree includes four buttons for corresponding sub categories Profile comments Posted links Photos and Videos . By clicking on one of these buttons a user can obtain a further narrowed set of search results. In this example clicking on sub category button would narrow the search results to show only those results which both point to the AcmeFolk repository and which include video content.

Various types of sub categories can be provided to assist a user in narrowing the search results. In the examples shown in one level of sub categories is provided. The sub categories correspond to types of content profile comments posted links photos videos that appear in a social network repository. These categories can be configured by an administrator when the search tool is initially connected to the repository. The administrator may tailor the sub categories according to the expected types of content in each repository. Alternatively the administrator or a user may choose a single set of sub categories for the entire collection of repositories e.g. chronological sub categories that divide the content according to creation dates or modification dates . If a ranking algorithm and or administrator settings are used to generate sub categories then these automated sub categories can assist users to at least partially refine their searches without entering any additional search terms or keywords. Moreover multiple levels of sub categories can also be provided to further assist users to refine their searches.

Administrative procedure commences by determining whether an existing repository needs to be disconnected removed or whether an additional repository is desired to be installed added . This determination can be based on an administrator input. For example a system administrator may enter an instruction through administrator terminal for the addition of the additional repository. If an additional repository is to be installed then a corresponding repository interface e.g. interface can be installed . The corresponding repository interface includes appropriate modules for communicating with the additional repository e.g. reading and writing data to the repository . If the added repository includes linked entries such as intranet pages or other hypertext material then the repository interface can include appropriate spider or crawler modules for spanning the data in the repository. The system that executes administrative procedure can also configure and update a search index e.g. search index to accommodate and include an indexed description of the data in the added repository .

The system that executes administrative procedure can also configure user interfaces so that they indicate the presence of the additional repository and so that a user can select or de select the additional repository when requesting a search for information . An administrator configures the user interfaces to provide an added input element e.g. another check box for the additional repository. The acts and include a combination of manual and automated operations. In other implementations these acts can be performed under fully automatic control or under manual guidance and programming by an administrator s . After installing the additional repository administrative procedure can terminate or can repeat if any further administration is needed .

If a repository is to be removed then user interfaces are updated to remove the option for selecting the now discontinued repository and the index entries for the discontinued repository are deleted or disabled from the search index . These index entries can optionally be archived for historical analysis or in anticipation that the repository may be returned to service at some point in the future. The corresponding repository interface can be removed or disabled . The acts and can be performed under automatic or manual control or some combination thereof. Administrative procedure then terminates or repeats if any further administration is needed .

Computer system can also include devices such as a keyboard and mouse other human interface input devices a SCSI interface one or more network interfaces supporting wired and or wireless communications a graphics module and display other human interface output devices a hard disk and a CD ROM all of which are coupled to processor by a communications bus . It will be apparent to those having ordinary skill in the art that computer system can also include numerous elements not shown in the figure such as additional storage devices communications devices input devices and output devices as illustrated by the ellipses shown.

Although the present invention has been described in connection with several embodiments the invention is not intended to be limited to the specific forms set forth herein. On the contrary it is intended to cover such alternatives modifications and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims.

