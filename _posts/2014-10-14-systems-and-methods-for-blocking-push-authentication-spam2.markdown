---

title: Systems and methods for blocking push authentication spam
abstract: The disclosed computer-implemented method for blocking push authentication spam may include (1) detecting an attempt by an unauthenticated source to gain access to a web resource protected by an MFA service, (2) issuing, to a mobile device of an authenticated user of the MFA service, a push authentication request to query the authenticated user about whether to allow the unauthenticated source's attempt, (3) determining, based at least in part on the push authentication request issued to the mobile device, that the authenticated user has not allowed the unauthenticated source's attempt, and (4) in response to determining that the authenticated user has not allowed the unauthenticated source's attempt, blacklisting the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the unauthenticated source. Various other methods, systems, and computer-readable media are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09571497&OS=09571497&RS=09571497
owner: Symantec Corporation
number: 09571497
owner_city: Mountain View
owner_country: US
publication_date: 20141014
---
Security is often described as a continuum between convenience and safety. A system that requires ten layers of authentication may be very difficult to attack but it may also be so inconvenient that it will never be used. At the opposite end a system with no means of authentication or authorization is highly convenient for users but also highly insecure. Many systems now offer an option for Multi Factor Authentication MFA which uses at least one additional piece of information beyond or in place of the traditional username and password combination. Some MFA systems may involve additional devices such as mobile phones and tablets. These MFA systems may ask the user to enter a code sent to a mobile device or to take an action on the mobile device that is then transmitted back to an authentication server to complete the login process.

One downside of MFA systems that involve mobile devices is that repeated illegitimate login attempts by malicious third parties may cause a flood of push authentication requests to the mobile device annoying users. Some traditional systems may allow a user to block requests from being pushed to their mobile device. However these traditional systems may be all or nothing filters that cannot allow legitimate push authentication requests through while blocking spam requests. Accordingly the instant disclosure identifies and addresses a need for additional and improved systems and methods for blocking push authentication spam.

As will be described in greater detail below the instant disclosure describes various systems and methods for blocking push authentication spam by blacklisting spam sources based on user responses to push authentication requests from the spam sources.

In one example a computer implemented method for blocking push authentication spam may include 1 detecting an attempt by an unauthenticated source to gain access to a web resource protected by an MFA service 2 issuing to a mobile device of an authenticated user of the MFA service a push authentication request to query the authenticated user about whether to allow the unauthenticated source s attempt to gain access to the web resource 3 determining based at least in part on the push authentication request issued to the mobile device that the authenticated user has not allowed the unauthenticated source s attempt to gain access to the web resource and 4 in response to determining that the authenticated user has not allowed the unauthenticated source s attempt to access the web resource blacklisting the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the unauthenticated source.

In some embodiments the unauthenticated source may include an Internet Protocol IP address. In one embodiment the web resource may include a protected uniform resource locator URL and detecting the unauthenticated source s attempt to gain access to the web resource may include capturing by a script running on the protected URL an IP address of the unauthenticated source. In this embodiment blacklisting the unauthenticated source may include blacklisting the IP address of the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the blacklisted IP address.

Additionally or alternatively the web resource may include a gateway service and detecting the unauthenticated source s attempt to gain access to the web resource may include capturing by the gateway service an IP address of the unauthenticated source. In this embodiment blacklisting the unauthenticated source may include blacklisting the IP address of the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the blacklisted IP address.

In one embodiment determining that the authenticated user has not allowed the unauthenticated source s attempt to gain access to the web resource may include determining that the authenticated user has not allowed a number of attempts by the unauthenticated source to access the web resource and determining that the number of attempts by the unauthenticated source exceeds a certain threshold. In some examples blacklisting the unauthenticated source may include blacklisting the unauthenticated source due at least in part to the number of attempts by the unauthenticated source exceeding the certain threshold.

Additionally or alternatively determining that the authenticated user has not allowed the unauthenticated source s attempt to gain access to the web resource may include determining that the authenticated user has not allowed at least one other attempt by at least one other source to gain access to the web resource and determining that the unauthenticated source and the other source exceed a threshold level of similarity relative to one another. In some examples blacklisting the unauthenticated source may include blacklisting the unauthenticated source due at least in part to the authenticated user not having allowed the other source s attempt to gain access to the web resource and the unauthenticated source and the other source exceeding the threshold level of similarity.

In some examples determining that the authenticated user has not allowed the unauthenticated source s attempt to access the web resource may include determining that the authenticated user has rejected the push authentication request. In other examples determining that the authenticated user has not allowed the unauthenticated source s attempt to access the web resource may include determining that the authenticated user has not responded to the push authentication request within a certain time period.

In one embodiment the computer implemented method may further include detecting a subsequent attempt by the unauthenticated source to gain access to the web resource protected by the MFA service and refusing to issue a subsequent push authentication request to the mobile device in response to the subsequent unauthenticated source s attempt due at least in part to the unauthenticated source being blacklisted. Additionally or alternatively the computer implemented method may further include detecting a subsequent attempt by the unauthenticated source to gain access to the web resource protected by the MFA service and blocking a subsequent push authentication request from reaching the mobile device due at least in part to the unauthenticated source being blacklisted. In some examples blacklisting the unauthenticated source may include classifying the unauthenticated source as a source of push authentication spam.

In one embodiment the unauthenticated source may include an instance of an application used in the attempt to gain access to the web resource and detecting the unauthenticated source s attempt to gain access to the web resource may include generating by a script provided to the unauthenticated source a unique identifier that identifies the instance of the application used in the attempt to gain access to the web resource. In this embodiment blacklisting the unauthenticated source may include blacklisting the instance of the application used in the attempt to gain access to the web resource such that the MFA service refuses to issue any subsequent push authentication requests in connection with the blacklisted instance of the application.

In one embodiment a system for implementing the above described method may include 1 a detection module stored in memory that detects an attempt by an unauthenticated source to gain access to a web resource protected by an MFA service 2 an issuing module stored in memory that issues to a mobile device of an authenticated user of the MFA service a push authentication request to query the authenticated user about whether to allow the unauthenticated source s attempt to gain access to the web resource 3 a determination module stored in memory that determines based at least in part on the push authentication request issued to the mobile device that the authenticated user has not allowed the unauthenticated source s attempt to gain access to the web resource 4 a blacklisting module stored in memory that in response to determining that the authenticated user has not allowed the unauthenticated source s attempt to access the web resource blacklists the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the unauthenticated source and 5 at least one physical processor configured to execute the detection module the issuing module the determination module and the blacklisting module.

In some examples the above described method may be encoded as computer readable instructions on a non transitory computer readable medium. For example a computer readable medium may include one or more computer executable instructions that when executed by at least one processor of a computing device may cause the computing device to 1 detect an attempt by an unauthenticated source to gain access to a web resource protected by an MFA service 2 issue to a mobile device of an authenticated user of the MFA service a push authentication request to query the authenticated user about whether to allow the unauthenticated source s attempt to gain access to the web resource 3 determine based at least in part on the push authentication request issued to the mobile device that the authenticated user has not allowed the unauthenticated source s attempt to gain access to the web resource and 4 blacklist in response to determining that the authenticated user has not allowed the unauthenticated source s attempt to access the web resource blacklisting the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the unauthenticated source.

Features from any of the above mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments features and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.

Throughout the drawings identical reference characters and descriptions indicate similar but not necessarily identical elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather the instant disclosure covers all modifications equivalents and alternatives falling within the scope of the appended claims.

The present disclosure is generally directed to systems and methods for blocking push authentication spam. As will be explained in greater detail below by blacklisting sources of push authentication spam based at least in part on user responses the systems and methods described herein may be able to block push authentication spam without blocking legitimate push authentications. In addition by blocking push authentication sources that are suspiciously similar to previously blacklisted sources the systems described herein may be able to more quickly and accurately identify and or blacklist sources of push authentication spam.

The following will provide with reference to detailed descriptions of exemplary systems for blocking push authentication spam. Detailed descriptions of corresponding computer implemented methods will also be provided in connection with . Detailed descriptions of a push authentication on a mobile device will be provided in connection with . In addition detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with respectively.

Exemplary system may also include a determination module that determines based at least in part on the push authentication request issued to the mobile device that the authenticated user has not allowed the unauthenticated source s attempt to gain access to the web resource. Exemplary system may additionally include a blacklisting module that blacklists in response to the determination that the authenticated user has not allowed the unauthenticated source s attempt to access the web resource the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the unauthenticated source. Although illustrated as separate elements one or more of modules in may represent portions of a single module application and or service such as MFA service .

In certain embodiments one or more of modules in may represent one or more software applications or programs that when executed by a computing device may cause the computing device to perform one or more tasks. For example and as will be described in greater detail below one or more of modules may represent software modules stored and configured to run on one or more computing devices such as the devices illustrated in e.g. computing device server and or mobile device computing system in and or portions of exemplary network architecture in . One or more of modules in may also represent all or portions of one or more special purpose computers configured to perform one or more tasks.

As illustrated in exemplary system may also include one or more authentication services such as MFA service . The term multi factor authentication and the abbreviation MFA as used herein generally refer to any type or form of service that authenticates access to one or more resources based at least in part on certain authentication factors other than or in addition to a username and password. Such authentication factors include without limitation a code sent to a mobile device a user action on a mobile device an action on and or with respect to an additional web resource a biometric authentication factor combinations of one or more of the same or any other suitable authentication factors.

In one example MFA service may handle authentication for access to a web resource . The term web resource as used herein generally refers to any type or form of computing resource and or object that is accessible via a network such as the Internet . In one example web resource may include information stored in connection with a web site and or a web service. For example web resource may include one or more files stored in connection with a user s login credentials for a web site and or web service. Examples of web resource include without limitation Internet resources web pages web sites scripts servers application programming interfaces databases remote devices files web services URLs portions of one or more of the same variations of one or more of the same combinations of one or more of the same or any other suitable web resource.

As illustrated in exemplary system may additionally include one or more push authentication requests such as push authentication request . The term push authentication request as used herein may refer to any type or form of communication and or message sent to a user s device as part of an MFA process. In one example push authentication request may include an authentication push notification sent to a user s mobile device as part of a login attempt. In this example push authentication request may prompt the user to take an action in connection with an attempt to access and or log into web resource . For example push authentication request may ask the user to allow or deny an attempt to access and or log into web resource via MFA service .

Exemplary system in may be implemented in a variety of ways. For example all or a portion of exemplary system may represent portions of exemplary system in . As shown in system may include a computing device in communication with a mobile device and or a server via a network . In one example server may be programmed with one or more of modules . Additionally or alternatively mobile device may be programmed with one or more of modules .

In one example computing device may enable an unauthenticated source to initiate an attempt to gain access to web resource via MFA service . In this example MFA service may issue push authentication request to query an authenticated user of MFA service about whether to allow or deny attempt to gain access to web resource .

In one embodiment one or more of modules from may when executed by at least one processor of server enable server to block push authentication spam. For example and as will be described in greater detail below detection module may detect an attempt by an unauthenticated source to gain access to web resource protected by MFA service . Next issuing module may issue to a mobile device of an authenticated user of MFA service push authentication request to query authenticated user about whether to allow attempt by unauthenticated source to gain access to web resource . Determination module may determine based at least in part on push authentication request issued to mobile device that authenticated user has not allowed attempt by unauthenticated source to gain access to web resource . Finally blacklisting module may in response to the determination that authenticated user has not allowed attempt by unauthenticated source to gain access web resource blacklist unauthenticated source such that MFA service refuses to issue any subsequent push authentication requests in connection with unauthenticated source .

Computing device generally represents any type or form of computing device capable of reading computer executable instructions. Examples of computing device include without limitation laptops tablets desktops servers cellular phones Personal Digital Assistants PDAs multimedia players embedded systems wearable devices e.g. smart watches smart glasses etc. gaming consoles combinations of one or more of the same exemplary computing system in or any other suitable computing device.

Server generally represents any type or form of computing device capable of facilitating and or providing at least a portion of an MFA service. Examples of security server include without limitation security servers application servers web servers storage servers and or database servers configured to run certain software applications and or provide various security web storage and or database services. In one example server may belong to an authentication service provider responsible for protecting against unauthorized access to web resource . Although illustrated as a single device server may represent a plurality of servers working in conjunction with one another to protect against unauthorized access to web resource .

Mobile device generally represents any type or form of portable computing device capable of reading computer executable instructions. Examples of computing device include without limitation laptops tablets cellular phones PDAs multimedia players wearable devices combinations of one or more of the same or any other suitable computing device.

Network generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network include without limitation an intranet a Wide Area Network WAN a Local Area Network LAN a Personal Area Network PAN the Internet a Power Line Communications PLC network a cellular network e.g. a Global System for Mobile Communications GSM network exemplary network architecture in or the like. Network may facilitate communication or data transfer using wireless and or wired connections. In one embodiment network may facilitate communication among computing device mobile device and or server .

Unauthenticated source generally represents to any entity that may initiate an authentication attempt and or any identifier of an entity that may initiate of an authentication attempt. The term unauthenticated as used herein generally refers to any type or form of state and or condition of being disallowed legitimate access to a protected resource. In one example unauthenticated source may include and or represent an identifier of computing device used to initiate attempt to gain access to web resource . Additionally or alternatively unauthenticated source may include and or represent an identifier of an application used to initiate attempt to gain access to web resource . Examples of unauthenticated source include without limitation an IP address an application fingerprint combinations of one or more of the same a computing device a user a bot a botnet and or any other unauthenticated source.

The term attempt as used herein generally refers to any type or form of action directed to gaining access to a web resource. In one example attempt may include and or represent an attempt to log into MFA service . Additionally or alternatively attempt may include and or represent an attempt to intercept and or download web resource .

The term authenticated user as used herein generally refers to any user with legitimate access to a protected resource. In some examples authenticated user may be a user in possession of mobile device that is configured with an MFA application for accessing web resource . Additionally or alternatively authenticated user may be a user whose credentials are being used in attempt to access web resource .

As illustrated in at step one or more of the systems described herein may detect an attempt by an unauthenticated source to gain access to a web resource protected by an MFA service. For example detection module may as part of server in detect attempt by unauthenticated source to gain access to web resource protected by MFA service .

Detection module may detect attempt in a variety of ways and or contexts. For example detection module may represent part of MFA service . As part of MFA service detection module may monitor all attempts to access resources protected by MFA service .

In another example detection module may represent part of web resource . As part of web resource detection module may forward login attempts from web resource to MFA service .

At step one or more of the systems described herein may issue to a mobile device of an authenticated user of the MFA service a push authentication request to query the authenticated user about whether to allow the unauthenticated source s attempt to gain access to the web resource. For example issuing module may as part of server in issue push authentication request to query authenticated user about whether to allow attempt by unauthenticated source to gain access to web resource . In this example push authentication request may be destined and or intended for mobile device of authenticated user .

Issuing module may issue push authentication request in a variety of ways and or contexts. For example issuing module may be part of MFA service that may issue a push notification to mobile device as part of an MFA process. In another embodiment issuing module may be part of an MFA application on mobile device and may display a push notification on mobile device in response to a request from another part of MFA service .

In some examples push authentication request may include user interface elements on a mobile device. As illustrated in mobile device may include an authentication application . In some examples authentication application may be part of an MFA system that protects a web resource. Authentication application may receive push authentication request . In some embodiments push authentication request may display two buttons in the user interface Allow and Deny. In other embodiments the Allow button may have other labels such as Accept Authorize Okay and or Yes and or the Deny button may have other labels such as Reject Mark as Spam Cancel and or No. 

Returning to at step one or more of the systems described herein may determine based at least in part on the push authentication request issued to the mobile device that the authenticated user has not allowed the unauthenticated source s attempt to gain access to the web resource. For example determination module may as part of server in determine based at least in part on push authentication request issued to mobile device that authenticated user has not allowed attempt by unauthenticated source to gain access to web resource .

Determination module may determine that authenticated user has not allowed attempt in a variety of ways and or contexts. For example determination module may receive a response from authenticated user indicating that attempt to gain access to web resource is denied. In one example determination module may determine that authenticated user has not allowed attempt by unauthenticated source to access web resource by determining that authenticated user has rejected push authentication request .

In other examples determination module may determine that authenticated user has not allowed attempt by unauthenticated source to access web resource by determining that authenticated user has not responded to push authentication request within a certain time period. Examples of a certain time period may include without limitation one minute ten minutes and or an hour.

In some examples determination module may determine that authenticated user has not allowed at least one other attempt by at least one other source not illustrated in to gain access to web resource and may also determine that unauthenticated source and the other source exceed a threshold level of similarity relative to one another. For example the other source and unauthenticated source may have the same or similar IP addresses application fingerprints time stamps and or other characteristics indicating that the attempts from the sources were likely caused by the same entity. If the user has disallowed the previous attempt from the other source as not being legitimate then attempt from unauthenticated source may also not be legitimate.

In some embodiments determination module may determine that authenticated user has not allowed attempt by unauthenticated source to gain access to web resource by determining that authenticated user has not allowed a number of attempts by unauthenticated source to access web resource and the number of attempts by unauthenticated source exceeds a certain threshold. For example determination module may determine that authenticated user has rejected two previous attempts from unauthenticated source as illegitimate and that therefore the current attempt is likely also illegitimate and should be disallowed. In this example the systems described herein may not send push authentication request for the attempt to the user.

At step one or more of the systems described herein may in response to determining that the authenticated user has not allowed the attempt by the unauthenticated source to access the web resource blacklist the unauthenticated source such that the MFA service refuses to issue any subsequent push authentication requests in connection with the unauthenticated source. For example blacklisting module may as part of server in blacklist in response to determining that authenticated user has not allowed attempt by unauthenticated source to access web resource blacklist unauthenticated source such that MFA service refuses to issue any subsequent push authentication requests in connection with unauthenticated source .

Blacklisting module may blacklist unauthenticated source in a variety of ways and or contexts. For example blacklisting module may refuse to issue authentication push notifications in connection with attempts by unauthenticated source . In another example blacklisting module may block any or all stages of login attempts originating from unauthenticated source . In some embodiments blacklisting module may blacklist unauthenticated source by classifying unauthenticated source as a source of push authentication spam.

In some examples blacklisting module may blacklist unauthenticated source by blacklisting unauthenticated source due at least in part to the number of attempts by unauthenticated source exceeding the certain threshold. For example an authenticated user may reject three attempts from unauthenticated source . In this example if the certain threshold for blacklisting a source is three blacklisting module may classify unauthenticated source as spam based at least in part on the three attempts initiated by unauthenticated source being rejected by the user.

Additionally or alternatively blacklisting module may blacklist unauthenticated source due at least in part to authenticated user not having allowed some other source s attempt to gain access to web resource . For example another source not illustrated in may have the same application fingerprint as unauthenticated source and only a slightly different IP address suggesting that the other source may represent the same entity as unauthenticated source . In this example blacklisting module may blacklist unauthenticated source based at least in part on having already blacklisted another source connected to the same entity.

In some embodiments web resource may include a protected URL. In these embodiments detection module may detect attempt by unauthenticated source to gain access to web resource by capturing via a script running on the protected URL an IP address of unauthenticated source . In addition blacklisting module may blacklist unauthenticated source by blacklisting the IP address of unauthenticated source such that MFA service refuses to issue any subsequent push authentication requests in connection with the blacklisted IP address. In one example a script may include JAVASCRIPT embedded in the URL that captures the IP address and or includes the IP address with any other information sent by scripts and or forms on the page represented by the URL to a server.

In some embodiments web resource may include a gateway service. In these embodiments detection module may detect attempt by unauthenticated source to gain access to web resource by capturing by the gateway service an IP address of unauthenticated source . In addition blacklisting module may blacklist unauthenticated source by blacklisting the IP address of unauthenticated source such that MFA service refuses to issue any subsequent push authentication requests in connection with the blacklisted IP address. In one example push authentication request may be issued by SYMANTEC S VIP ENTERPRISE RADIUS GATEWAY SERVICE. In this example the VIP RADIUS SERVICE may capture the tunnel client endpoint attribute that provides the authenticating client s IP address and or may forward the IP address to MFA service and or other parts of the systems described herein.

In one embodiment unauthenticated source may include an instance of an application used in attempt to gain access to web resource and detection module may detect attempt by unauthenticated source to gain access to web resource by generating via a script provided to unauthenticated source a unique identifier that identifies the instance of the application used in attempt to gain access to web resource . In this embodiment blacklisting module may blacklist unauthenticated source by blacklisting the instance of the application used in attempt to gain access to web resource such that MFA service refuses to issue any subsequent push authentication requests in connection with the blacklisted instance of the application. In some examples the unique identifier may include an application fingerprint.

In some embodiments the systems described herein may go through a variety of decision points while evaluating an attempt to access a protected web resource. As illustrated in at step the systems described herein may detect a login attempt. Depending on the origin of the login attempt the systems described herein may capture the IP address with a script as in step and or via a gateway as in step . If the IP address is already blacklisted the systems described herein may block the login attempt and or decline to send a push request. If not the systems described herein may check to see if the attempt exceeds a threshold for similar attempts i.e. attempts from the same or similar sources . If the attempt does exceed the threshold the systems described herein may block the login attempt and or decline to send a push request.

At step the systems described herein may send a push request to a mobile device. If the user of the mobile device allows the attempt the systems described herein may allow the login attempt to proceed. In some examples the login process may now be complete in other examples additional login steps may be necessary. If the user does not allow the attempt the systems described herein may evaluate the login attempt characteristics such as the source of the login attempt for potential blacklisting using any or all of the methods described above.

In some examples detection module may detect a subsequent attempt by unauthenticated source to gain access to web resource protected by MFA service and the systems described herein may refuse to issue a subsequent push authentication request to mobile device in response to the subsequent attempt by unauthenticated source due at least in part to unauthenticated source being blacklisted. For example a login attempt may originate from a blacklisted IP address and the systems described herein may block the login attempt due to the IP address being blacklisted. Additionally or alternatively the systems described herein may block a subsequent push authentication request from reaching mobile device due at least in part to unauthenticated source being blacklisted.

As explained in connection with method above the systems described herein may prevent push authentication spam via spam detection and or spam prevention. The systems described herein may detect spam by recording any IP address that attempts to access protected resources and marking an IP address as a source of spam if a user repeatedly discards or denies push authentication requests initiated by that IP address. Once an IP address is marked as spam systems described herein may prevent spam by declining to process attempts to access protected resources by that IP address including blocking login attempts and or declining to generate and or issue push authentication requests. The systems described herein may also pre emptively prevent spam by comparing new sources of attempts to access protected resources to previous sources of attempts and blacklisting and or blocking access attempts by any source with a weighted Euclidean distance too close to other sources previously categorized as spam. By detecting and preventing push authentication spam in this way the systems described herein may reduce annoyance to users as well as reducing resource use by servers that would otherwise be tasked with generating and or issuing spam push authentication requests from illegitimate sources.

Computing system broadly represents any single or multi processor computing device or system capable of executing computer readable instructions. Examples of computing system include without limitation workstations laptops client side terminals servers distributed computing systems handheld devices or any other computing system or device. In its most basic configuration computing system may include at least one processor and a system memory .

Processor generally represents any type or form of physical processing unit e.g. a hardware implemented central processing unit capable of processing data or interpreting and executing instructions. In certain embodiments processor may receive instructions from a software application or module. These instructions may cause processor to perform the functions of one or more of the exemplary embodiments described and or illustrated herein.

System memory generally represents any type or form of volatile or non volatile storage device or medium capable of storing data and or other computer readable instructions. Examples of system memory include without limitation Random Access Memory RAM Read Only Memory ROM flash memory or any other suitable memory device. Although not required in certain embodiments computing system may include both a volatile memory unit such as for example system memory and a non volatile storage device such as for example primary storage device as described in detail below . In one example one or more of modules from may be loaded into system memory .

In certain embodiments exemplary computing system may also include one or more components or elements in addition to processor and system memory . For example as illustrated in computing system may include a memory controller an Input Output I O controller and a communication interface each of which may be interconnected via a communication infrastructure . Communication infrastructure generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure include without limitation a communication bus such as an Industry Standard Architecture ISA Peripheral Component Interconnect PCI PCI Express PCIe or similar bus and a network.

Memory controller generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example in certain embodiments memory controller may control communication between processor system memory and I O controller via communication infrastructure .

I O controller generally represents any type or form of module capable of coordinating and or controlling the input and output functions of a computing device. For example in certain embodiments I O controller may control or facilitate transfer of data between one or more elements of computing system such as processor system memory communication interface display adapter input interface and storage interface .

Communication interface broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system and one or more additional devices. For example in certain embodiments communication interface may facilitate communication between computing system and a private or public network including additional computing systems. Examples of communication interface include without limitation a wired network interface such as a network interface card a wireless network interface such as a wireless network interface card a modem and any other suitable interface. In at least one embodiment communication interface may provide a direct connection to a remote server via a direct link to a network such as the Internet. Communication interface may also indirectly provide such a connection through for example a local area network such as an Ethernet network a personal area network a telephone or cable network a cellular telephone connection a satellite data connection or any other suitable connection.

In certain embodiments communication interface may also represent a host adapter configured to facilitate communication between computing system and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include without limitation Small Computer System Interface SCSI host adapters Universal Serial Bus USB host adapters Institute of Electrical and Electronics Engineers IEEE 1394 host adapters Advanced Technology Attachment ATA Parallel ATA PATA Serial ATA SATA and External SATA eSATA host adapters Fibre Channel interface adapters Ethernet adapters or the like. Communication interface may also allow computing system to engage in distributed or remote computing. For example communication interface may receive instructions from a remote device or send instructions to a remote device for execution.

As illustrated in computing system may also include at least one display device coupled to communication infrastructure via a display adapter . Display device generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly display adapter generally represents any type or form of device configured to forward graphics text and other data from communication infrastructure or from a frame buffer as known in the art for display on display device .

As illustrated in exemplary computing system may also include at least one input device coupled to communication infrastructure via an input interface . Input device generally represents any type or form of input device capable of providing input either computer or human generated to exemplary computing system . Examples of input device include without limitation a keyboard a pointing device a speech recognition device or any other input device.

As illustrated in exemplary computing system may also include a primary storage device and a backup storage device coupled to communication infrastructure via a storage interface . Storage devices and generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. For example storage devices and may be a magnetic disk drive e.g. a so called hard drive a solid state drive a floppy disk drive a magnetic tape drive an optical disk drive a flash drive or the like. Storage interface generally represents any type or form of interface or device for transferring data between storage devices and and other components of computing system .

In certain embodiments storage devices and may be configured to read from and or write to a removable storage unit configured to store computer software data or other computer readable information. Examples of suitable removable storage units include without limitation a floppy disk a magnetic tape an optical disk a flash memory device or the like. Storage devices and may also include other similar structures or devices for allowing computer software data or other computer readable instructions to be loaded into computing system . For example storage devices and may be configured to read and write software data or other computer readable information. Storage devices and may also be a part of computing system or may be a separate device accessed through other interface systems.

Many other devices or subsystems may be connected to computing system . Conversely all of the components and devices illustrated in need not be present to practice the embodiments described and or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system may also employ any number of software firmware and or hardware configurations. For example one or more of the exemplary embodiments disclosed herein may be encoded as a computer program also referred to as computer software software applications computer readable instructions or computer control logic on a computer readable medium. The term computer readable medium as used herein generally refers to any form of device carrier or medium capable of storing or carrying computer readable instructions. Examples of computer readable media include without limitation transmission type media such as carrier waves and non transitory type media such as magnetic storage media e.g. hard disk drives tape drives and floppy disks optical storage media e.g. Compact Disks CDs Digital Video Disks DVDs and BLU RAY disks electronic storage media e.g. solid state drives and flash media and other distribution systems.

The computer readable medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer readable medium may then be stored in system memory and or various portions of storage devices and . When executed by processor a computer program loaded into computing system may cause processor to perform and or be a means for performing the functions of one or more of the exemplary embodiments described and or illustrated herein. Additionally or alternatively one or more of the exemplary embodiments described and or illustrated herein may be implemented in firmware and or hardware. For example computing system may be configured as an Application Specific Integrated Circuit ASIC adapted to implement one or more of the exemplary embodiments disclosed herein.

Client systems and generally represent any type or form of computing device or system such as exemplary computing system in . Similarly servers and generally represent computing devices or systems such as application servers or database servers configured to provide various database services and or run certain software applications. Network generally represents any telecommunication or computer network including for example an intranet a WAN a LAN a PAN or the Internet. In one example client systems and or and or servers and or may include all or a portion of system from .

As illustrated in one or more storage devices N may be directly attached to server . Similarly one or more storage devices N may be directly attached to server . Storage devices N and storage devices N generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions. In certain embodiments storage devices N and storage devices N may represent Network Attached Storage NAS devices configured to communicate with servers and using various protocols such as Network File System NFS Server Message Block SMB or Common Internet File System CIFS .

Servers and may also be connected to a Storage Area Network SAN fabric . SAN fabric generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric may facilitate communication between servers and and a plurality of storage devices N and or an intelligent storage array . SAN fabric may also facilitate via network and servers and communication between client systems and and storage devices N and or intelligent storage array in such a manner that devices N and array appear as locally attached devices to client systems and . As with storage devices N and storage devices N storage devices N and intelligent storage array generally represent any type or form of storage device or medium capable of storing data and or other computer readable instructions.

In certain embodiments and with reference to exemplary computing system of a communication interface such as communication interface in may be used to provide connectivity between each client system and and network . Client systems and may be able to access information on server or using for example a web browser or other client software. Such software may allow client systems and to access data hosted by server server storage devices N storage devices N storage devices N or intelligent storage array . Although depicts the use of a network such as the Internet for exchanging data the embodiments described and or illustrated herein are not limited to the Internet or any particular network based environment.

In at least one embodiment all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server server storage devices N storage devices N storage devices N intelligent storage array or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program stored in server run by server and distributed to client systems and over network .

As detailed above computing system and or one or more components of network architecture may perform and or be a means for performing either alone or in combination with other elements one or more steps of an exemplary method for blocking push authentication spam.

While the foregoing disclosure sets forth various embodiments using specific block diagrams flowcharts and examples each block diagram component flowchart step operation and or component described and or illustrated herein may be implemented individually and or collectively using a wide range of hardware software or firmware or any combination thereof configurations. In addition any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.

In some examples all or a portion of exemplary system in may represent portions of a cloud computing or network based environment. Cloud computing environments may provide various services and applications via the Internet. These cloud based services e.g. software as a service platform as a service infrastructure as a service etc. may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud based computing environment.

In various embodiments all or a portion of exemplary system in may facilitate multi tenancy within a cloud based computing environment. In other words the software modules described herein may configure a computing system e.g. a server to facilitate multi tenancy for one or more of the functions described herein. For example one or more of the software modules described herein may program a server to enable two or more clients e.g. customers to share an application that is running on the server. A server programmed in this manner may share an application operating system processing system and or storage system among multiple customers i.e. tenants . One or more of the modules described herein may also partition data and or configuration information of a multi tenant application for each customer such that one customer cannot access data and or configuration information of another customer.

According to various embodiments all or a portion of exemplary system in may be implemented within a virtual environment. For example the modules and or data described herein may reside and or execute within a virtual machine. As used herein the term virtual machine generally refers to any operating system environment that is abstracted from computing hardware by a virtual machine manager e.g. a hypervisor . Additionally or alternatively the modules and or data described herein may reside and or execute within a virtualization layer. As used herein the term virtualization layer generally refers to any data layer and or application layer that overlays and or is abstracted from an operating system environment. A virtualization layer may be managed by a software virtualization solution e.g. a file system filter that presents the virtualization layer as though it were part of an underlying base operating system. For example a software virtualization solution may redirect calls that are initially directed to locations within a base file system and or registry to locations within a virtualization layer.

In some examples all or a portion of exemplary system in may represent portions of a mobile computing environment. Mobile computing environments may be implemented by a wide range of mobile computing devices including mobile phones tablet computers e book readers personal digital assistants wearable computing devices e.g. computing devices with a head mounted display smartwatches etc. and the like. In some examples mobile computing environments may have one or more distinct features including for example reliance on battery power presenting only one foreground application at any given time remote management features touchscreen features location and movement data e.g. provided by Global Positioning Systems gyroscopes accelerometers etc. restricted platforms that restrict modifications to system level configurations and or that limit the ability of third party software to inspect the behavior of other applications controls to restrict the installation of applications e.g. to only originate from approved application stores etc. Various functions described herein may be provided for a mobile computing environment and or may interact with a mobile computing environment.

In addition all or a portion of exemplary system in may represent portions of interact with consume data produced by and or produce data consumed by one or more systems for information management. As used herein the term information management may refer to the protection organization and or storage of data. Examples of systems for information management may include without limitation storage systems backup systems archival systems replication systems high availability systems data search systems virtualization systems and the like.

In some embodiments all or a portion of exemplary system in may represent portions of produce data protected by and or communicate with one or more systems for information security. As used herein the term information security may refer to the control of access to protected data. Examples of systems for information security may include without limitation systems providing managed security services data loss prevention systems identity authentication systems access control systems encryption systems policy compliance systems intrusion detection and prevention systems electronic discovery systems and the like.

According to some examples all or a portion of exemplary system in may represent portions of communicate with and or receive protection from one or more systems for endpoint security. As used herein the term endpoint security may refer to the protection of endpoint systems from unauthorized and or illegitimate use access and or control. Examples of systems for endpoint protection may include without limitation anti malware systems user authentication systems encryption systems privacy systems spam filtering services and the like.

The process parameters and sequence of steps described and or illustrated herein are given by way of example only and can be varied as desired. For example while the steps illustrated and or described herein may be shown or discussed in a particular order these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.

While various embodiments have been described and or illustrated herein in the context of fully functional computing systems one or more of these exemplary embodiments may be distributed as a program product in a variety of forms regardless of the particular type of computer readable media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script batch or other executable files that may be stored on a computer readable storage medium or in a computing system. In some embodiments these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.

In addition one or more of the modules described herein may transform data physical devices and or representations of physical devices from one form to another. For example one or more of the modules recited herein may receive push authentication request data to be transformed transform the push authentication request data output a result of the transformation to a spam analysis algorithm use the result of the transformation to determine whether a push authentication notification is spam and store the result of the transformation to a blacklist of push authentication notification spam sources. Additionally or alternatively one or more of the modules recited herein may transform a processor volatile memory non volatile memory and or any other portion of a physical computing device from one form to another by executing on the computing device storing data on the computing device and or otherwise interacting with the computing device.

The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.

Unless otherwise noted the terms connected to and coupled to and their derivatives as used in the specification and claims are to be construed as permitting both direct and indirect i.e. via other elements or components connection. In addition the terms a or an as used in the specification and claims are to be construed as meaning at least one of. Finally for ease of use the terms including and having and their derivatives as used in the specification and claims are interchangeable with and have the same meaning as the word comprising. 

