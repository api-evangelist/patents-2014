---

title: Secure display element
abstract: Techniques for securely displaying sensitive information against attempts to capture such information via screenshots are introduced. Similar to the pieces of a puzzle, a plurality of images that collectively represent a keypad (for example) are generated and each image represents a different part of the characters. The generated images are to be displayed to a human user in a sequential fashion at at least a predetermined minimum frame rate, such that the plurality of images sequentially displayed are perceivable by the human user collectively as the keypad. In each of the plurality of images, at least a part of the characters of the keypad is disguised or concealed, and in some embodiments, to the extent that not a single character of the keypad is recognizable by a human or a machine. Not all of the plurality of images are displayed at any instant in time.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09483653&OS=09483653&RS=09483653
owner: Square, Inc.
number: 09483653
owner_city: San Francisco
owner_country: US
publication_date: 20141029
---
This invention relates generally to computer security and more particularly to protecting sensitive information displayed on a computer against an unauthorized attempt to capture such information.

With the prevalence of computers and portable electronic devices the preferred mode of information presentation has long since shifted from paper to electronic. Typically such an electronic device is equipped with a display screen e.g. a liquid crystal display LCD screen that presents visual information to a human user. In many instances for example when financial or commercial transactions are involved sensitive information such as a social security number or bank account number may be shown on the display screen. In addition touchscreen displays are often used to display keypads for the human user to enter sensitive data such as a secret personal identifier e.g. a personal identification number PIN . This state of technology has created a vulnerability for an unscrupulous entity to install a malicious software application e.g. on the user s computer such as a Trojan horse or other malware i.e. software designed to overcome data security measures without authorization to take screen captures screenshots or screen caps of what is displayed to capture the human user s password PIN number or other sensitive information. Specifically when sensitive information is displayed or when such information is entered by use of a touch screen interface one known type of malicious software malware can take screenshots or screen caps of a device s display screen e.g. in response to a detected touch event to capture the displayed information such as passwords social security numbers credit card numbers or other sensitive information.

References in this description to an embodiment one embodiment or the like mean that the particular feature function structure or characteristic being described is included in at least one embodiment of the present invention. Occurrences of such phrases in this specification do not necessarily all refer to the same embodiment. On the other hand the embodiments referred to also are not necessarily mutually exclusive.

Traditionally when a touch screen is utilized e.g. in an automatic teller machine ATM to input sensitive data such as a secret personal identifier or a PIN there is a risk that unauthorized parties will be able to obtain the numerals of the PIN. For example because ATMs are publicly accessible it may be possible for such parties to clean the touch screen prior to a particular target PIN entry and then analyze the fingermarks on the touch pad afterwards to determine the locations of the PIN entry touches and thus the numerals of the entered PIN. Nonetheless it is possible to randomize the positions of the digits on a displayed PIN pad to prevent or defeat such attack on ATMs. With the prevalence of personal and mobile computing devices many transactions that involve sensitive information or passcode entry are now conducted online and or through personal mobile devices because these devices are typically not subject to physical inspection by unscrupulous parties either immediately before or after the transactions these personal devices are less susceptible to this attack method of analyzing PIN locations by fingermarks.

On the other hand even without physical access to the victim s personal computing devices when sensitive information is displayed or when such information is entered by use of a touch screen interface one known type of malicious software malware can take screenshots or screen caps of a device s display screen e.g. in response to a detected touch event to capture the displayed information such as passwords social security numbers credit card numbers or other sensitive information. Typical users such as customers and merchants are particularly susceptible to this screen capture type of attack with the ever increasing involvement of computing devices e.g. tablet computers or smart phones in financial transactions. This is at least partly because these devices typically share the same or similar operating system environment the same operating systems that are used to handle not only these financial transactions but in many instances day to day computing and communications functions such as electronic mailing web browsing gaming and or other entertainments. Among other reasons the multi tasking role of these operating systems has created a large opportunity for unscrupulous parties to install malware e.g. by tricking the users to download the malware onto the victims computers to steal sensitive information. Accordingly there is a need for techniques that protect sensitive information or PIN pads displayed on a computer device against attempts to capture such information or keyed PINs by another software application i.e. a malware running on the same or another computer.

Notably merely randomizing the digits or injecting noise to obscure the sensitive information such as using a Completely Automated Public Turing test to tell Computers and Humans Apart CAPTCHA style mechanism which relies on complicated static images to disguise information in ways cognizable by humans but not machines may not be effective at defeating this screen capture type of attack. By inspecting the screenshots an unscrupulous person can still know where the digits are and can turn the touch events into the digits based on the screenshots. In addition it is difficult for an authorized software application e.g. a bank teller software application or an online shopping application to prevent or to block an unauthorized software application e.g. malware from taking screenshots.

Introduced here therefore is a technique that can securely display sensitive information or a touch sensitive user input mechanism e.g. a keypad while protecting the displayed information against an attempt to capture such information. As discussed in more detail below some aspects of the technique include utilizing a personal mobile computing device to generate a number of images. Consider a keypad displayed on a touch screen as an example. Similar to the pieces of a puzzle except that each piece may have overlapping portions each of the displayed images represents a different part of the characters on the keypad and the images collectively represent the keypad. The generated images are to be displayed to a human user of the mobile computing device by rendering e.g. using a graphics accelerator in the mobile computing device the images in the display. The images are displayed sequentially at at least a predetermined minimum frame rate. The predetermined minimum frame rate is configured such that the plurality of images sequentially displayed are perceivable by the human user collectively as the keypad. Ideally the images are sequentially displayed e.g. in a random or a predetermined sequence and or in a loop such that when displayed at or above the minimum frame rate the images look like one static image that is the keypad is substantially statically displayed on the touch screen like a single cohesive image as perceived by the human brain. For purposes of discussion here the term static or statically means when being observed by a human an object appears to be substantially stationary or lack of movement. The images are generated such that in each of the plurality of images at least a part of the characters of the keypad is disguised or concealed and in some embodiments to the extent that no single character of the keypad is recognizable by a human or a machine from any single one of the images.

In ways introduced here no single frame of that sequence entirely reveals all the digits that are on the keypad or more generally all the elements of the protected portion of the user interface . Because the sensitive information is broken down and distributed over time in ways that make it hard or even impossible for an unscrupulous party to decode it by sampling just one or even a few screenshots the techniques introduced here can securely protect keypad inputs or other sensitive information against screen capture type malware attacks. Due to the persistence of human visual perception a human user will still be able to recognize the displayed sensitive information e.g. the digits on a keypad when the plurality of images are sequentially displayed provided a fast enough frame rate is used.

As discussed in greater detail below in addition to generating a plurality of images other aspects of the technique can include utilizing one or more masks to conceal portions of the key pad or sensitive information. In some implementations the same or similar security effects may be achieved by varying a location and or a depth e.g. as defined in a z buffer of a mask e.g. a non transparent geometric shape such as a rectangle or a triangle or a non transparent three dimensional object . In other examples the images can be generated by varying an opacity translucency or transparency of a mask or by inserting different masks. Additionally a suitable combination of the above mentioned generation of images and other known information display security techniques such as distorting content of the sensitive information can be utilized to increase the security level even further. For example the image generation or concealment techniques introduced here can be combined with other known techniques such as inserting different light effect filters distorting or obscuring content e.g. CAPTCHA style distortion varying light source hue contrast rendered texture shading techniques e.g. Phong shading or flat shading and or other suitable lighting effects. Even further some embodiments introduced here can selectively insert bogus data e.g. onto some of the plurality of images that are generated to confuse the unscrupulous party.

In the following description the example of a point of sale POS system in a restaurant is used for illustrative purposes only to explain various aspects of the technique. Note however that the technique introduced here is not limited in applicability to restaurants or to any other particular kind of business. Additionally the technique introduced here is not limited to use with displaying keypads for PIN or passcode entry for credit cards or other types of payment cards rather the technique can be employed with essentially any suitable scenario that traditionally would involve the display of sensitive information. Additionally the term sale as in point of sale POS refers to any type of payment oriented transaction including providing of a service a lease or rental for example and is not limited to an actual purchase. Note also that in this description the term user generally refers to a customer as opposed to a merchant except where otherwise indicated and except that the term user interface does not necessarily refer to an interface used by a customer as will be apparent from the context.

The POS system may be a general purpose computer a specific computer designed for POS purposes and or a combination thereof e.g. a tablet computer combined with a docking station designed for POS purposes such as one illustrated in and may include a display screen for among other functions displaying information including the sensitive payment information. The user s mobile device can be for example a smart phone tablet computer notebook computer or any other form of mobile processing device all of which may have a display screen for displaying information. In some implementations of the optional embodiment a mobile payment application can run on the user s mobile device to interact with other components in the environment for example in one embodiment the mobile payment application can receive a digital version of a transaction receipt from the merchant and or can be utilized to view details of transactions and payment information. In some examples the user s mobile device can run a web browser that can load websites e.g. hosted by the merchant or by the payment service system within which transaction information and other payment details can be displayed online. Similarly the merchant can use his or her computing devices not shown in for simplicity to log in to his or her account on webpages provided by a payment service system for viewing various details of transactions.

In a typical credit card transaction the merchant swipes the user s credit card through a card reader at the merchant s POS system . Further in debit EMV and other similar transactions the user can enter a PIN number e.g. into the POS system or the mobile device . The POS system sends data read from the card e.g. the cardholder s name credit card number expiration date and CVV to the computer system of the merchant s acquirer hereinafter acquirer . The acquirer sends this data to the computer system of the card payment network e.g. Visa or MasterCard hereinafter card payment network which forwards the data to the computer system of the issuing bank hereinafter issuer . If the transaction is approved by the issuer a payment authorization message is sent from the issuer to the merchant POS system via a path opposite of that described above.

All the aforementioned pieces of financial transaction information can be displayed on the screens of various devices e.g. the POS system or the mobile device and therefore are examples of sensitive information that are susceptible to attacks from screen capturing malware.

The electronic device is a data processing device e.g. which may be either general purpose or application specific . For example the electronic device may be a mobile phone a tablet an e reader other mobile or portable computing devices or other stationary computing devices. The electronic device may be configured to facilitate a financial transaction. The electronic device may be coupled to a card reader which can initiate a financial transaction to purchase items from a merchant operating the electronic device upon detecting a swipe of a payment card .

In the illustrated embodiment the card reader is integral to a docking station and is coupled to the electronic device through the docking station . In other embodiments however the card reader can be a separate component connected to the electronic device or to the docking station . For example in embodiments the card reader may be replaced by a dongle type attachment that plugs into an audio port or data connector port of the electronic device and performs similar function of detecting swipe of the payment card and transfers information to the electronic device want to. The electronic device may fit into a cavity of the docking station as shown.

In the illustrated embodiment the docking station and or the electronic device are coupled to one or more peripheral components such as a label reader a receipt printer or a cashier drawer . The peripheral components can be coupled to the electronic device through a hub device such as a wired hub or a wireless router. A user may purchase various items for checkout through one of the peripheral components such as through the label reader coupled to the electronic device through a user s mobile device or through a storefront interface on the electronic device . During checkout the card reader can read and or access the payment card . The payment card may be a credit card a debit card an EMV card or another type of passive or active payment device. The payment card may communicate for example via magnetism electrical signal radio frequency near field communication NFC acoustic wave optical modulation or another method or methods of communication.

Usage of the payment card may require verification of a user identity. One method of verifying the user identity includes having the user inputting a passcode entry and verified the passcode entry against an authentic passcode stored on a remote computer system or on the payment card . For example the electronic device can display a passcode entry interface on a touchscreen of the electronic device . Once the payment card and the user identity are verified through the passcode entry interface the electronic device may facilitate the completion of financial transaction.

When the user inputs each character entry the passcode entry interface can implement a variety of security mechanisms to protect the passcode composition from getting stolen. As mentioned randomizing digits by scrambling out of sequence the character labels on buttons of the passcode entry interface as shown in is already proven to effectively prevent an onlooker that is in physical vicinity of the device from stealing the passcode composition.

Based on the technique introduced here the electronic device can further generate a number of images that collectively represent the PIN entry interface of an example of which is illustrated in . By the electronic device sequentially displaying these images at a predetermined minimum frame rate and based on human eye s persistence of vision the set of images can be perceived by human eye as one cohesive substantially static image. However as described in more specificity below by not displaying all of the plurality of images at any instant in time e.g. as illustrated in the electronic device can prevent passcode combination or other suitable displayed sensitive information from being captured and or decoded by a malicious software whether the malicious software is installed locally on the electronic device or remotely on another computing device. Note that for purposes of discussion herein generating of images shall not be construed as being limited to the generation of actual discrete image files rather the term is used to generally refer to the generation of data or data structures that represent e.g. when being rendered by a graphics hardware on a display device a plurality of images in other words the data generated are operable to facilitate the graphics hardware to render the plurality of images e.g. in a sequential manner .

The electronic device that can include one or more computer readable mediums processing system touch subsystem display graphics subsystem communications circuitry storage and audio circuitry . These components may be coupled by one or more communication buses or other signal lines. The electronic device can be the same as or similar to the electronic device or the electronic device .

The communications circuitry can include RF circuitry and or port for sending and receiving information. The RF circuitry permits transmission of information over a wireless link or network to one or more other devices and includes well known circuitry for performing this function. The port permits transmission of information over a wired link. The communications circuitry can communicate for example with the docking station or the backend system for verifying the passcode entry. The communications circuitry can be coupled to the processing system via a peripherals interface . The peripherals interface can include various known components for establishing and maintaining communication between peripherals and the processing system .

The audio circuitry can be coupled to an audio speaker not shown a microphone not shown an electronic card reader not shown or any combination thereof and includes known circuitry for processing voice signals received from the peripherals interface to enable a user to communicate in real time with other users. In some embodiments the audio circuitry includes a headphone jack not shown .

The peripherals interface can couple various peripherals such as an electronic card reader of the system to one or more processors and the computer readable medium . The one or more processors can communicate with one or more computer readable mediums via a controller . The computer readable medium can be any device or medium that can store code and or data for use by the one or more processors . The medium can include a memory hierarchy including but not limited to cache main memory and secondary memory. The memory hierarchy can be implemented using any combination of RAM e.g. SRAM DRAM DDRAM ROM FLASH magnetic and or optical storage devices such as disk drives magnetic tape CDs compact disks and DVDs digital video discs . The medium may also include a transmission medium for carrying information bearing signals indicative of computer instructions or data with or without a carrier wave upon which the signals are modulated . For example the transmission medium may include a communications network including but not limited to the Internet intranet s Local Area Networks LANs Wide Local Area Networks WLANs Storage Area Networks SANs Metropolitan Area Networks MAN and the like.

The touch I O controller is coupled to the touch hardware for controlling or performing various functions. The touch hardware communicates with the processing system via the touch I O device controller which includes various components for processing user touch input e.g. scanning hardware . One or more other input controllers not shown receives sends electrical signals from to other I O devices not shown . Other I O devices may include physical buttons dials slider switches sticks keyboards touch pads additional display screens or any combination thereof.

If embodied as a touch screen the touch hardware displays visual output to the user in a GUI. The visual output may include text graphics video and any combination thereof. Some or all of the visual output may correspond to user interface objects. The touch hardware forms a touch sensitive surface that accepts touch input from the user. The touch hardware and the touch controller along with any associated modules and or sets of instructions in the medium detects and tracks touches or near touches and any movement or release of the touch on the touch hardware and converts the detected touch input into interaction with graphical objects such as one or more user interface objects. In the case in which the touch hardware and the display are embodied as a touch screen the user can directly interact with graphical objects that are displayed on the touch screen. Alternatively in the case in which hardware is embodied as a touch device other than a touch screen e.g. a touch pad the user may indirectly interact with graphical objects that are displayed on a separate display screen. Embodiments in which the touch hardware is a touch screen the touch screen may use LCD liquid crystal display technology LPD light emitting polymer display technology OLED organic light emitting diode or OEL organic electro luminescence although other display technologies may be used in other embodiments.

In some embodiments the peripherals interface the one or more processors and the memory controller may be implemented on a single chip. In some other embodiments they may be implemented on separate chips. The storage can any suitable medium for storing data including for example volatile memory e.g. cache RAM non volatile memory e.g. Flash hard disk drive or a both for storing data including pages used for transition animations.

The one or more processors can run various software components stored in the medium to perform various functions for the electronic device . Note that the order of the modules in the medium does not necessarily denote the order of layers of a software stack as implemented in the medium . In some embodiments the software components include an operating system a communication module or set of instructions a touch processing module or set of instructions an interface module or set of instructions which can include a secure display element module and one or more applications or set of instructions . The secure display element module is illustrated in as a separate module in accordance with some embodiments. Each of these modules and above noted applications correspond to a set of instructions for performing one or more functions described above and the methods described in this application e.g. the computer implemented methods and other information processing methods described herein . These modules e.g. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise rearranged in various embodiments. In some embodiments the medium may store a subset of the modules and data structures identified above. Furthermore the medium may store additional modules and data structures not described above.

The operating system can include various procedures sets of instructions software components and or drivers for controlling and managing general system tasks e.g. memory management storage device control power management etc. and facilitates communication between various hardware and software components.

The communication module facilitates communication with other devices using the communications circuitry and includes various software components for handling data received from the RF circuitry and or the port .

The touch processing module includes various software components for performing various tasks associated with touch hardware including but not limited to receiving and processing touch input received from the I O device via a touch I O device controller . For example the touch processing module can also include software components for performing tasks associated with other I O devices not shown .

One or more applications can include any applications installed on the electronic device including without limitation modules of the electronic device a browser keyboard emulation widgets JAVA enabled applications encryption digital rights management voice recognition voice replication location determination capability such as that provided by the global positioning system GPS etc.

The interface module can provide animation instructions to an animation engine which can render the graphics and provide the rendering to graphics I O controller so that the graphics I O controller can display the graphics on display . The interface module can further control the audio circuitry to provide an auditory component to the passcode interface. The interface module can include various known software components for rendering animating and displaying graphical objects on a display surface. The secure display element module which may be integrated with the interface module is configured to present and maintain a predetermined display area for securely displaying sensitive information or in this case a passcode interface for a user to enter a passcode to authenticate the user s identity.

The graphics accelerator includes a rendering pipeline which typically includes a vertex shader which can be coupled to or be in the form of a vertex processor not shown a rasterizer and a frame buffer . The graphics accelerator may also include other known components such as texture mapping hardware sub processors e.g. a fragment processor buffers and or other I O controller these components are not shown for simplicity consequently the components shown in are communicatively coupled to each other which may be directly or indirectly connected to each other through one or more interconnects or wires.

The vertex shader receives vertex data from the host CPU that defines the primitives that make up the view to be displayed. The geometry accelerator typically includes various components for graphics rendering such as a clipping component an illumination component and a plane equations component. The transform component can perform transformations on the vertex data received by the rendering pipeline e.g. from the CPU such as rotation and translation of the image space defined by vertex data . Next the clipping component can reduce the amount of necessary calculation by clipping the vertex data so that only vertex data relating to primitives that make up the portion of the view that will be seen by the user is kept for further processing. The illumination or lighting component then calculates the final colors of the vertices of the primitives based on the vertex data and based on lighting conditions. The plane equations component generates floating point equations which define the image space within the vertices. The floating point equations are later converted into fixed point equations before being rasterized.

Thereafter the rasterizer and the texture mapping hardware not shown generate the final screen coordinates and color data for each pixel in each primitive. The pixel data is stored in the frame buffer for display after being converted from digital form into analog form by a digital to analog DAC converter for example on a video display screen . In variations the DAC is not necessary and the pixel data is transferred from the frame buffer digitally to the display . In this sense various components e.g. the vertex shader and the rasterizer in the rendering pipeline can generate based on the instruction s received from the processing system a plurality of images to be displayed on the display .

Notably is an abstract simplified diagram in which some of the illustrated components may include subcomponents. For example the vertex shader may be implemented as a multi core shader processor having a plurality of shader cores. It is not uncommon to see hundreds of specialized cores with highly parallel structures in modern GPU designs. Further according to some of the present embodiments the vertex shader is a programmable shader processor s that can be programmed e.g. by loading one or more shaders into the shader processor to perform a variety of shading tasks in addition or as an alternative to the vertex shading introduced above . For purposes of discussion herein the term shader can generally mean as will be apparent from the context i a shader program ii a shader hardware or iii a combination of a shader program loaded in a programmable shader hardware that is used to perform shading the production of appropriate levels of color within an image or in some instances to also produce special effects or do image video post processing.

According to some embodiments an instruction first is received to display a keypad for PIN entry or to display a piece of sensitive information in a predetermined area e.g. the area where the passcode entry interface is shown in . As one example the instruction can be received internally within the electronic device such as from the application e.g. a POS software application to the interface module or the secure display element module to display a PIN pad for authenticating the transaction when a debit card is swiped through the card reader. In another example the instruction can be received from the application e.g. the mobile payment application or the web browser . As yet another example the instruction can be received externally such as from the backend system to the electronic device to display a piece of sensitive information on the screen. Depending on the embodiment the instruction can be received through the communications circuitry e.g. in the case that the instruction s source is external and or via an application programming interface API that is implemented in the secure display element module e.g. in the case that the instruction s source is internal . In the example of the keypad is to be displayed in a predetermined display area of a display equipped with the electronic device. The keypad is displayed for a human user e.g. user or merchant of the electronic device to enter a personal identifier number PIN by use of the keypad. As shown in the figures the keypad includes a plurality of characters for a user to enter the PIN into the computing device via the keypad.

In response to the instruction the electronic device generates a plurality of images that each represent a different segment of the keypad in one or more ways introduced here. The plurality of images can collectively represent the keypad being statically displayed on the screen of the electronic device. In some embodiments the generation of the images is performed by the secure display element module issuing instructions e.g. through the processing system to the display graphics subsystem . Typical application programming interface API for controlling the display graphics subsystem e.g. the graphics accelerator include OpenGL Direct X WebGL and so forth. In many embodiments the graphic acceleration hardware equipped on the electronic device are capable of rendering three dimensional graphics at 45 60 frames per second or higher assuming normal graphics complexity which may be above what an human eye is able to perceive.

More specifically according to some implementations the secure display element module can cause to load a shading function or more generally an image processing function into the vertex shader of the graphics accelerator . The shading function or the image processing function configures the graphics accelerator such that at any instant in time at least one part of the characters of the keypad is disguised or concealed. For purposes of discussion herein the term disguise means to alter a piece of information s visual appearance and or its content in order to conceal the true content of the information the term mask means to use a covering to cover all or part of the information and the term conceal means to prevent from being known which can achieved by for example disguising or masking the information.

Then as mentioned above the rasterizer of the graphics accelerator converts the outputs sourced from the vertex shader into pixel information that respectively represents the plurality of images. In some embodiments the conversion may take place on the fly as one or more of the plurality of images are generated. In variations the conversion may be timed by one or more controllers based on how full a buffer that is used to store the input data for the rasterizer is.

According to some embodiments the secure display element module can generate the plurality of images by separating the PIN pad into a number of discrete images similar to a process of a paper shredder. As an alternative to separating the PIN pad the secure display element module can generate the plurality of images by masking different portions of the PIN pad each time the secure display module creates an image. For example in one implementation the PIN pad has random digits and each frame or image only displays one of the random digits. However note that in the embodiments where the content of the segments are randomly selected from the keypad extra mechanisms may be needed in the secure display element module to ensure that all portions of the keypad are still adequately represented by the totality of the plurality of images without missing any portion.

As respectively shown in each of the images A through F represents a different part of the plurality of characters but images A through F collectively represent the keypad with each of the images A through F representing two keys out of the twelve keys in total. It is noted that the example set of images shown in are intentionally simplified in order to facilitate easier understanding of the readers specifically the example set is simplified in that the PIN interface is only broken or segmented into six images with each image displaying two keys that the segmentation is predictable and rectangular and that there is no overlapping among the segments. As a practical matter for increased the security level each segment of the image should be small enough to disguise the critical information or the digits on the PIN pad for example by further separating each of the two keys displayed in images A through F into two smaller triangles not shown for simplicity . The segmentation may be random so that the resulting segments are not predictable. Additionally or alternatively the segmentation can follow features existing in the unsegmented image. For example a line detection algorithm can detect the line features in the unsegmented image of the keypad and can then segment the keypad along these detected line features. The shape of the segment can include but not limited to rectangular parallelogram lozenge or random. The determination of the dimensions of each segment can take reference from numerous standards for the security levels of paper shredders including German Institute for Standardization DIN 66399 for example. In some example implementations each image only contains a fragment or segment that is of a certain predetermined percentage e.g. 3 of the display area whether for displaying the keypad or for displaying sensitive information . To further increase the security level the image processing function by which the security display element module controls how the segments or the plurality of images are generated can automatically vary over time. For example the shape and size of the segments can be changed as time passes by so that the segments are even more irregular increasing the difficulty of extrapolating the passcode from screenshots because the way how one screenshot is segmented may not be the same as a subsequent screenshot.

Note that the information displayed on each segment is not necessarily mutually exclusive of that on another segment. In one or more embodiments each segment can have overlapping information with another segment though such overlapping is not illustrated in images A through F. Overlapping may happen for example when the content of each segment is randomly selected such as resulting from using a mask of random shape and or at random locations . However note that in the embodiments where the content of the segments are randomly selected extra mechanisms may be needed in the secure display element module to ensure that all portions of the keypad are still adequately represented by the totality of the plurality of images without missing any portion. In addition having too much overlapping information among the segments may adversely affect the security level because it makes it easier for an unscrupulous party to deduce e.g. by interpolation or extrapolation what information is disguised or concealed.

After the generation of segmented images the images are sequentially displayed or rendered in the secured display area at at least a predetermined minimum frame rate so that the keypad appears to be displayed to the human user as one substantially static image. Specifically the rasterizer stores the pixel information that is converted based on the outputs of the vertex shader into the frame buffer of the graphics accelerator. That is to say the rendering pipeline causes the plurality of images to be rendered in sequence at a frame rate by storing the plurality of images into the frame buffer the information stored in which is in turn output to the display for display. The rendering of the plurality of images are performed such that not all of the plurality of images are displayed at any instant in time however because the plurality of images are displayed sequentially at or above the predetermined minimum frame rate the plurality of images sequentially displayed are perceivable by the human user collectively as the keypad. Note that the sequence that the plurality of images are displayed need not be the sequence that each of the images is generated the display sequence can be a random sequence.

There are multiple theories on the psychophysics of human vision and among them the persistence of vision is a theory where an afterimage is thought to persist for approximately one twenty fifth of a second on a human s retina. As such when the plurality of images are displayed sequentially at or above the predetermined minimum frame rate the plurality of images are perceived as a substantially static image. Note that whether or not an individual person can actually detect flicking at the determined minimum frame rate defers by each person and this is because the flicker fusion threshold is a statistical rather than an absolute quantity. Typically there is a range of frequencies within which flicker sometimes will be seen and sometimes will not be seen. However objectively speaking for purposes of practicing the techniques here a minimum frame rate of 24 30 frame per second or above is desirable although a lower frame rate which may cause the displayed keypad to flicker may be acceptable.

Generally the steadiness i.e. the property of not visibly flickering of the displayed keypad increases when the plurality of images are sequentially rendered at a higher frame rate. However because the frame rate that the display graphics subsystem may vary depending on the performance of the computing system e.g. raw computing power of GPU CPU current workload etc. some embodiments of the secure display element can dynamically adjust the image processing function based on the performance of the computer. In some embodiments the secure display element module can first determine the predetermined minimum frame rate based on a computing performance of the electronic device for example during a start up phase or a set up phase. Then during normal operation the secure display element module can dynamically adjust the total number of the segments or granularity based an updated computing performance of the electronic device. In this way the number of segments i.e. the granularity or security level can be adjusted to compensate dropping frame rate in slower machines. For example if the granularity is high i.e. the size of each segment is small and when the secure display element detects that the frame rate at which the plurality of images are sequentially displayed is dropping to close or below a predetermined minimum frame rate e.g. 15 fps then the secure display element can reduce the granularity i.e. increasing the size of each segment thereby reducing the number of images that needs to be produced and handled by the display graphics subsystem and or the processing system . Nonetheless the secure display element can also be configured to have a minimum security level for example not allowing the granularity of the segments to be reduced to a level that is undesirably unsecure. One example the minimum security level is that the keypad should be segmented into at least 20 images other suitable numbers and or units such as a maximum percentage out of the total image each segment can display may be applicable depending on the application.

With the disclosed embodiments the unscrupulous party will not able to fully deduce passcode from the captured images A through D. In contrast without the technique disclosed here if a keypad is fully displayed and captured by the screenshots even with scrambled digits the unscrupulous party can easily steal the password by the malware logging the location of the touch event and matching the locations with PIN pad in the screenshot. In this way because any single frame of that sequence does not reveal what the digits are on the keypad the disclosed embodiments can securely protect sensitive information displayed on a computer device against attempts to capture such information by malware running on the same or another computer. But relying on the persistence of vision a human user will still be able to recognize the digits on the keypad or a piece of sensitive information when the plurality of images are sequentially displayed.

Note that for facilitating the description the shown screenshots are intentionally simplified and relatively straight forward to extrapolate some digits that the user has input for example the unscrupulous party can deduce that the digit entered on image B is 5 by matching the location with the image D. In practice the secure display element can display the PIN pad with a finer granularity and or with irregular segments so that in some embodiments such as illustrated by screenshots in no digit can be recognizable on any single image. Further note that the images A through D are implemented with a PIN pad with randomized digits which is the same one as shown in . As is demonstrated by the images A through D randomizing the digits does increase the security level because it reduces the possibility of the passcode being successfully extrapolated simply by the monitoring the location of the touch events however randomizing the digits may not be necessary for implementing the techniques disclosed here.

According to some embodiments the secure display element module can in ways described above e.g. by the image processing function loaded in the graphics accelerator conceal different segments of the PIN pad by varying a location a number a size and or a shape of the geometric shapes utilized in the masks . An example of such is shown in the screenshot B of in where the location and the size of the two circles are changed. Note that the circular shapes utilized in the masks do not have the dotted border lines. Similar to the granularity discussed above in order to maintain a minimum security level the total area that the masks blocks as compared to the total area of the PIN interface should over a minimum threshold. This minimum threshold can be defined and or configured in the secure display element .

In addition or as an alternative to changing the size number shape and or location of the geometric shapes in the masks other visual properties of the geometric shapes in the masks may be changed include for example opacity optical refractivity e.g. for a 3 D geometric object brightness texture or depth. For example in some embodiments the PIN pad can be stored e.g. as a unitary image with a depth of X in a depth buffer or a z buffer which is coupled to the vertex shader but not shown in in for simplicity of the graphics accelerator and then the vertex shader can be configured to vary the depth between depth X 1 and X 1 of one or more of the geometric shapes included in the masks to selectively block characters on the PIN pad. In variations the vertex shader can be configured to render an opaque or non transparent surface at depth X 1 to cover the PIN pad and move a location of a pinhole for example on the opaque surface over various characters on the PIN pad to make those characters visible. Notably the depth of the mask or the various geometric shapes included therein respectively is evaluated in relation to the depth of the PIN pad being displayed. As another variation the vertex shader can cause a three dimensional opaque polygon to be rendered at the same depth as the keypad but rotate and or relocate the three dimensional polygon such that at least a portion of the keys is concealed at any instant of time.

It will be appreciated by a person having ordinary skill in the art that through controlling the image processing function the secure display element can configure the graphics accelerator to perform various tasks to disguise mask segment or otherwise conceal the PIN pad. For example the image generation or concealment techniques introduced here can be combined with other known techniques such as inserting different light effect filters distorting or obscuring content e.g. CAPTCHA style distortion varying light source hue contrast rendered texture shading techniques e.g. Phong shading or flat shading and or other suitable lighting effects. However also note that in some preferred embodiments the color of the geometric shapes that are used in the masks are selected to be the same as the background color e.g. white or non transparent as the PIN pad interface so as to reduce the likelihood of the human user detecting discoloration of the PIN pad.

Additionally a suitable combination of the above mentioned generation of images and other known information display security skills such as distorting content of the sensitive information can increase the security level even further. For example lighting effects may be added to the masks such that at least some of the characters on the keypad are twisted disguised or altered to the extent that the characters on each image become unrecognizable by human and machine and yet when the images being sequentially rendered the images collectively show the characters being without substantially perceivable distortion or alteration.

In screenshot of the masks includes a rectangular shaped opaque object or objects that covers a majority portion of the digits on the keypad. However in the embodiment of the masks further contains a bogus data that is designed to confuse the unscrupulous person who is in control of the malware. The secure display element can be configured to disguise or conceal different keys of the keypad by altering the digits of keypad. In some embodiments the content alteration is such that at a select number of instances in time at least one different digit on the keypad is altered. In some variations the content alteration is such that at any instant in time at least one different digit on the keypad is altered on all images. But in similar fashions mentioned above when the plurality of images are sequentially displayed at or above the minimum frame rate the plurality of images are perceivable by a human user collectively as the piece of sensitive information without the content alteration. In the example screenshot the digit on the key has been altered from 6 to 3 by the secure display element module .

Specifically some embodiments of the secure display element module can analyze the content of the keypad or sensitive information that is to be displayed. If the content of the keypad contains for example alphanumerical data then the secure display element module can selectively choose to show bogus data or noise that includes characters that are fake. Overall embodiments of secure display element module that can perform bogus data insertion can alter the content e.g. characters on the keypad of what is to be displayed in the predetermined secure display area by changing the content with fake but analogous data of the same or similar content category e.g. from alphabet A to E from Roman character to or from number 6 to 3 etc. . In some implementations the secure display element module can choose the same or similar font typeface and style e.g. other characters in the same font set so that the bogus data can have same or similar appearance of true data. In some embodiments typeface font or other calligraphic properties can be extracted from metadata which for example may be received with the keypad or the sensitive information.

Two aspects in relation to this bogus data insertion technique that should be noted by the reader. First in some embodiments no conflicting bogus data is inserted for the same key or character during a predetermined period of time. For example if the secure display element module is to create 20 images for being sequentially displayed during 1 second i.e. displaying the keypad at 20 images per second and there has been at least one bogus data e.g. the fake 3 key to be inserted on one image e.g. image at a certain location where the fake 3 is displayed then the secure display element module does not insert another conflicting bogus data e.g. a fake 5 key at the same location in the remaining 19 images which are to be sequentially rendered during the 1 second . That is to say in these embodiments no two bogus data cover the same character in the plurality of images. In this fashion the secure display element can control the amount of bogus data inserted in each image so that no excessive overlapping of bogus data occurs causing the user to perceive noise or flickering in the displayed digits. However the inserted bogus data can still be changed as the time goes by to increase security. Also in the embodiments where no conflicting bogus data is inserted for the same key or character during a predetermined period of time the secure display element still can insert another bogus data for another key or character i.e. at a different location than the location that already contains bogus data insertion .

Further the secure display element module can control the ratio between the amount of the bogus data versus true data. This is similar to a signal to noise ratio control. Overall the true data i.e. signal should still be displayed more often than the bogus data i.e. noise so that the true data will not be overwhelmed by the bogus data or otherwise the human user may perceive the wrong data on the display screen. In some examples this ratio between the amount of the bogus data versus true data is 1 5 which means that for each image that contains a bogus data at one location there are at least 5 additional images that contains the true data at the same location. In another implementation the ratio is 1 2 an amount of the bogus data for a given character in the plurality of images is at or less than 50 of an amount of real data in the plurality of images for the given character. In addition this bogus data insertion technique can be combined with aforementioned techniques e.g. data masking for enhanced security.

First an instruction is received to display an image to be secured such as a keypad for PIN entry. The instruction can be received internally within the electronic device such as from the application to the interface module or from the processing system to the display graphics subsystem or the graphics accelerator . The instruction can also be received externally such as from the backend system to the electronic device . Depending on the embodiment the instruction can be received through the communications circuitry and or via an application programming interface API 

In response to the instruction the electronic device generates a plurality of images that each represent a different segment of the image to be secured e.g. a different key of the PIN pad in one or more ways introduced here. The plurality of images can collectively represent the image to be secured being statically displayed on the screen of the electronic device. In some embodiments the generation of the images is performed by the secure display element module issuing instructions e.g. through the processing system to the display graphics subsystem . Each of the images represents a different part of the image to be secured but the images collectively represent the image to be secured.

After the generation of the plurality of segmented images the images are sequentially displayed or rendered in the secured display area at at least a predetermined minimum frame rate so that the image to be secured appears to be displayed to the human user as one substantially static image. The rendering of the plurality of images are performed such that not all of the plurality of images are displayed at any instant in time however because the plurality of images are displayed sequentially at or above the predetermined minimum frame rate the plurality of images sequentially displayed are perceivable by the human user collectively as the image to be secured. Note that the sequence that the plurality of images are displayed need not be the sequence that each of the images is generated the display sequence can be a random sequence. To further increase the security level the image processing function by which the security display element module controls how the segments or the plurality of images are generated can automatically vary over time.

As an alternative to separating the image to be secured the secure display element module can generate the plurality of images by masking different portions of the image to be secured each time the secure display module creates an image in forming the plurality of images. For example one or more geometric shapes can be employed as masks to conceal segments of the image to be secured e.g. the keys on the keypad . The geometric mask can be either two dimensional or three dimensional. The secure display element module can e.g. by the image processing function loaded in the graphics accelerator conceal different segments of the image to be secured by varying a location a number a size and or a shape of the geometric shapes utilized in the masks. In addition or as an alternative other visual properties of the geometric shapes in the masks may be changed.

In accordance with some embodiments the secure display element module can analyze the content of the image to be secured e.g. a keypad or other sensitive information that is to be displayed. If the content of the image to be secured contains for example alphanumerical data then the secure display element module can selectively choose to show bogus data or noise that includes characters that are fake. Overall embodiments of secure display element module that can perform bogus data insertion can alter the content e.g. characters on the keypad of what is to be displayed in the predetermined secure display area by changing the content with fake but analogous data of the same or similar category. In some implementations the secure display element module can choose the same or similar font typeface and style e.g. other characters in the same font set so that the bogus data can have same or similar appearance of true data.

In the illustrated embodiment the processing system includes one or more processors memory a communication device and one or more input output I O devices all coupled to each other through an interconnect . The interconnect may be or include one or more conductive traces buses point to point connections controllers adapters and or other conventional connection devices. The processor s may be or include for example one or more general purpose programmable microprocessors microcontrollers application specific integrated circuits ASICs programmable gate arrays or the like or a combination of such devices. The processor s control the overall operation of the processing device . Memory may be or include one or more physical storage devices which may be in the form of random access memory RAM read only memory ROM which may be erasable and programmable flash memory miniature hard disk drive or other suitable type of storage device or a combination of such devices. Memory may store data and instructions that configure the processor s to execute operations in accordance with the techniques described above. The communication device may be or include for example an Ethernet adapter cable modem Wi Fi adapter cellular transceiver Bluetooth transceiver or the like or a combination thereof. Depending on the specific nature and purpose of the processing device the I O devices can include devices such as a display which may be a touch screen display audio speaker keyboard mouse or other pointing device microphone camera etc.

Unless contrary to physical possibility it is envisioned that i the methods steps described above may be performed in any sequence and or in any combination and that ii the components of respective embodiments may be combined in any manner.

The techniques introduced above can be implemented by programmable circuitry programmed configured by software and or firmware or entirely by special purpose circuitry or by a combination of such forms. Such special purpose circuitry if any can be in the form of for example one or more application specific integrated circuits ASICs programmable logic devices PLDs field programmable gate arrays FPGAs etc.

Software or firmware to implement the techniques introduced here may be stored on a machine readable storage medium and may be executed by one or more general purpose or special purpose programmable microprocessors. A machine readable medium as the term is used herein includes any mechanism that can store information in a form accessible by a machine a machine may be for example a computer network device cellular phone personal digital assistant PDA manufacturing tool any device with one or more processors etc. . For example a machine accessible medium can include recordable non recordable media e.g. read only memory ROM random access memory RAM magnetic disk storage media optical storage media flash memory devices etc. .

Note that any and all of the embodiments described above can be combined with each other except to the extent that it may be stated otherwise above or to the extent that any such embodiments might be mutually exclusive in function and or structure.

Although the present invention has been described with reference to specific exemplary embodiments it will be recognized that the invention is not limited to the embodiments described. Accordingly the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense.

