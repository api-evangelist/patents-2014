---

title: Peer based authentication
abstract: The disclosure is related to confirming an identity of a first user of a first user device. An aspect includes receiving a request to confirm the identity of the first user, determining whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device, and confirming the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09386004&OS=09386004&RS=09386004
owner: QUALCOMM Incorporated
number: 09386004
owner_city: San Diego
owner_country: US
publication_date: 20141021
---
The present Application for Patent claims the benefit of Provisional Application No. 61 894 828 entitled PEER BASED AUTHENTICATION filed Oct. 23 2013 and Provisional Application No. 61 904 384 entitled SECURITY IN PEER TABLE TRANSMISSION filed Nov. 14 2013 both of which are assigned to the assignee hereof and hereby expressly incorporated by reference herein in their entirety.

The Internet is a global system of interconnected computers and computer networks that use a standard Internet protocol suite e.g. the Transmission Control Protocol TCP and Internet Protocol IP to communicate with each other. The Internet of Things IoT is based on the idea that everyday objects not just computers and computer networks can be readable recognizable locatable addressable and controllable via an IoT communications network e.g. an ad hoc system or the Internet .

To protect the privacy and security of user information stored at a remote server e.g. a server accessible over the Internet the remote server will determine whether or not the user is authorized to access the information. Similarly for the user to perform some action at or with the assistance of the remote server such as making a bank transfer the remote server will determine whether or not the user is authorized to perform the action. Typically determining whether or not a user is authorized to access information or perform an action includes some way of authenticating that the user is who he says that he is. That is if the remote server can verify that the user is the owner of the user information or the bank account authentication the user is allowed to access the information or make the bank transfer authorization .

Client server user authentication is typically performed using a unique key known only to the client and the remote server. This can be a very limited system however because if the key becomes known to a malicious third party it is no longer secure. Additionally the user may have to remember multiple username and password combinations for each website and or application the user would like to log onto.

The following presents a simplified summary relating to one or more aspects and or embodiments disclosed herein. As such the following summary should not be considered an extensive overview relating to all contemplated aspects and or embodiments nor should the following summary be regarded to identify key or critical elements relating to all contemplated aspects and or embodiments or to delineate the scope associated with any particular aspect and or embodiment. Accordingly the following summary has the sole purpose to present certain concepts relating to one or more aspects and or embodiments disclosed herein in a simplified form to precede the detailed description presented below.

The disclosure is related to confirming an identity of a first user of a first user device. A method for confirming an identity of a first user of a first user device includes receiving a request to confirm the identity of the first user determining whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device and confirming the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device.

An apparatus for confirming an identity of a first user of a first user device includes logic configured to receive a request to confirm the identity of the first user logic configured to determine whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device and logic configured to confirm the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device.

An apparatus for confirming an identity of a first user of a first user device includes means for receiving a request to confirm the identity of the first user means for determining whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device and means for confirming the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device.

A non transitory computer readable medium for confirming an identity of a first user of a first user device includes at least one instruction to receive a request to confirm the identity of the first user at least one instruction to determine whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device and at least one instruction to confirm the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device.

Other objects and advantages associated with the mechanisms disclosed herein will be apparent to those skilled in the art based on the accompanying drawings and detailed description.

The present Application is related to Provisional Application No. 61 769 130 entitled AN IMPLICIT METHOD FOR CREATING RELATIONSHIPS BETWEEN INTERNET OF THINGS IOT DEVICES filed Feb. 25 2013 and assigned to the assignee hereof and hereby expressly incorporated by reference herein in its entirety.

The disclosure is related to confirming an identity of a first user of a first user device. An aspect includes receiving a request to confirm the identity of the first user determining whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device and confirming the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device.

These and other aspects are disclosed in the following description and related drawings to show specific examples relating to exemplary embodiments of security in peer table transmission. Alternate embodiments will be apparent to those skilled in the pertinent art upon reading this disclosure and may be constructed and practiced without departing from the scope or spirit of the disclosure. Additionally well known elements will not be described in detail or may be omitted so as to not obscure the relevant details of the aspects and embodiments disclosed herein.

The words exemplary and or example are used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary and or example is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise the term embodiments of the invention does not require that all embodiments of the invention include the discussed feature advantage or mode of operation.

Further many embodiments are described in terms of sequences of actions to be performed by for example elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits e.g. application specific integrated circuits ASICs by program instructions being executed by one or more processors or by a combination of both. Additionally these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus the various aspects of the invention may be embodied in a number of different forms all of which have been contemplated to be within the scope of the claimed subject matter. In addition for each of the embodiments described herein the corresponding form of any such embodiments may be described herein as for example logic configured to perform the described action.

A client device referred to herein as a user equipment UE may be mobile or stationary and may communicate with a radio access network RAN . As used herein the term UE may be referred to interchangeably as an access terminal or AT a wireless device a subscriber device a subscriber terminal a subscriber station a user terminal or UT a mobile terminal a mobile station and variations thereof. Generally UEs can communicate with a core network via the RAN and through the core network the UEs can be connected with external networks such as the Internet. Of course other mechanisms of connecting to the core network and or the Internet are also possible for the UEs such as over wired access networks WiFi networks e.g. based on IEEE 802.11 etc. and so on. UEs can be embodied by any of a number of types of devices including but not limited to PC cards compact flash devices external or internal modems wireless or wireline phones and so on. A communication link through which UEs can send signals to the RAN is called an uplink channel e.g. a reverse traffic channel a reverse control channel an access channel etc. . A communication link through which the RAN can send signals to UEs is called a downlink or forward link channel e.g. a paging channel a control channel a broadcast channel a forward traffic channel etc. . As used herein the term traffic channel TCH can refer to either an uplink reverse or downlink forward traffic channel.

Referring to UEs 1. . . N are configured to communicate with an access network e.g. the RAN an access point etc. over a physical communications interface or layer shown in as air interfaces and or a direct wired connection. The air interfaces and can comply with a given cellular communications protocol e.g. CDMA EVDO eHRPD GSM EDGE W CDMA LTE etc. while the air interface can comply with a wireless IP protocol e.g. IEEE 802.11 . The RAN includes a plurality of access points that serve UEs over air interfaces such as the air interfaces and . The access points in the RAN can be referred to as access nodes or ANs access points or APs base stations or BSs Node Bs eNode Bs and so on. These access points can be terrestrial access points or ground stations or satellite access points. The RAN is configured to connect to a core network that can perform a variety of functions including bridging circuit switched CS calls between UEs served by the RAN and other UEs served by the RAN or a different RAN altogether and can also mediate an exchange of packet switched PS data with external networks such as Internet . The Internet includes a number of routing agents and processing agents not shown in for the sake of convenience . In UE N is shown as connecting to the Internet directly i.e. separate from the core network such as over an Ethernet connection of WiFi or 802.11 based network . The Internet can thereby function to bridge packet switched data communications between UE N and UEs 1. . . N via the core network . Also shown in is the access point that is separate from the RAN . The access point may be connected to the Internet independent of the core network e.g. via an optical communication system such as FiOS a cable modem etc. . The air interface may serve UE 4 or UE 5 over a local wireless connection such as IEEE 802.11 in an example. UE N is shown as a desktop computer with a wired connection to the Internet such as a direct connection to a modem or router which can correspond to the access point itself in an example e.g. for a WiFi router with both wired and wireless connectivity .

Referring to a server is shown as connected to the Internet the core network or both. The server can be implemented as a plurality of structurally separate servers or alternately may correspond to a single server. As will be described below in more detail the server is configured to support one or more communication services e.g. Voice over Internet Protocol VoIP sessions Push to Talk PTT sessions group communication sessions social networking services etc. for UEs that can connect to the server via the core network and or the Internet and or to provide content e.g. web page downloads to the UEs.

While internal components of UEs such as the UEs A and B can be embodied with different hardware configurations a basic high level UE configuration for internal hardware components is shown as platform in . The platform can receive and execute software applications data and or commands transmitted from the RAN that may ultimately come from the core network the Internet and or other remote servers and networks e.g. application server web URLs etc. . The platform can also independently execute locally stored applications without RAN interaction. The platform can include a transceiver operably coupled to an application specific integrated circuit ASIC or other processor microprocessor logic circuit or other data processing device. The ASIC or other processor executes the application programming interface API layer that interfaces with any resident programs in the memory of the wireless device. The memory can be comprised of read only or random access memory RAM and ROM EEPROM flash cards or any memory common to computer platforms. The platform also can include a local database that can store applications not actively used in memory as well as other data. The local database is typically a flash memory cell but can be any secondary storage device as known in the art such as magnetic media EEPROM optical media tape soft or hard disk or the like.

Accordingly an embodiment of the invention can include a UE e.g. UE A B etc. including the ability to perform the functions described herein. As will be appreciated by those skilled in the art the various logic elements can be embodied in discrete elements software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example ASIC memory API and local database may all be used cooperatively to load store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively the functionality could be incorporated into one discrete component. Therefore the features of the UEs A and B in are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.

The wireless communication between the UEs A and or B and the RAN can be based on different technologies such as CDMA W CDMA time division multiple access TDMA frequency division multiple access FDMA Orthogonal Frequency Division Multiplexing OFDM GSM or other protocols that may be used in a wireless communications network or a data communications network. As discussed in the foregoing and known in the art voice transmission and or data can be transmitted to the UEs from the RAN using a variety of networks and configurations. Accordingly the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.

Referring to the communication device includes logic configured to receive and or transmit information . In an example if the communication device corresponds to a wireless communications device e.g. UE A or B AP a BS Node B or eNodeB in the RAN etc. the logic configured to receive and or transmit information can include a wireless communications interface e.g. Bluetooth WiFi 2G CDMA W CDMA 3G 4G LTE etc. such as a wireless transceiver and associated hardware e.g. an RF antenna a MODEM a modulator and or demodulator etc. . In another example the logic configured to receive and or transmit information can correspond to a wired communications interface e.g. a serial connection a USB or Firewire connection an Ethernet connection through which the Internet can be accessed etc. . Thus if the communication device corresponds to some type of network based server e.g. server etc. the logic configured to receive and or transmit information can correspond to an Ethernet card in an example that connects the network based server to other communication entities via an Ethernet protocol. For example where the communication device corresponds to or includes an authentication server as described herein the logic configured to receive and or transmit information may include logic configured to receive a request to confirm the identity of the first user and or logic configured to confirm the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device. In a further example the logic configured to receive and or transmit information can include sensory or measurement hardware by which the communication device can monitor its local environment e.g. an accelerometer a temperature sensor a light sensor an antenna for monitoring local RF signals etc. . The logic configured to receive and or transmit information can also include software that when executed permits the associated hardware of the logic configured to receive and or transmit information to perform its reception and or transmission function s . However the logic configured to receive and or transmit information does not correspond to software alone and the logic configured to receive and or transmit information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to process information . In an example the logic configured to process information can include at least a processor. Example implementations of the type of processing that can be performed by the logic configured to process information includes but is not limited to performing determinations establishing connections making selections between different information options performing evaluations related to data interacting with sensors coupled to the communication device to perform measurement operations converting information from one format to another e.g. between different protocols such as .wmv to .avi etc. and so on. For example where the communication device corresponds to or includes an authentication server as described herein the logic configured to process information may include logic configured to receive a request to confirm the identity of the first user logic configured to determine whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device and or logic configured to confirm the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device. The processor included in the logic configured to process information can correspond to a general purpose processor a digital signal processor DSP an ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration. The logic configured to process information can also include software that when executed permits the associated hardware of the logic configured to process information to perform its processing function s . However the logic configured to process information does not correspond to software alone and the logic configured to process information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further includes logic configured to store information . In an example the logic configured to store information can include at least a non transitory memory and associated hardware e.g. a memory controller etc. . For example the non transitory memory included in the logic configured to store information can correspond to RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. The logic configured to store information can also include software that when executed permits the associated hardware of the logic configured to store information to perform its storage function s . However the logic configured to store information does not correspond to software alone and the logic configured to store information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to present information . In an example the logic configured to present information can include at least an output device and associated hardware. For example the output device can include a video output device e.g. a display screen a port that can carry video information such as USB HDMI etc. an audio output device e.g. speakers a port that can carry audio information such as a microphone jack USB HDMI etc. a vibration device and or any other device by which information can be formatted for output or actually outputted by a user or operator of the communication device . For example if the communication device corresponds to UE A or UE B as shown in the logic configured to present information can include the display A of UE A or the touchscreen display B of UE B. In a further example the logic configured to present information can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers such as the server etc. . The logic configured to present information can also include software that when executed permits the associated hardware of the logic configured to present information to perform its presentation function s . However the logic configured to present information does not correspond to software alone and the logic configured to present information relies at least in part upon hardware to achieve its functionality.

Referring to the communication device further optionally includes logic configured to receive local user input . In an example the logic configured to receive local user input can include at least a user input device and associated hardware. For example the user input device can include buttons a touchscreen display a keyboard a camera an audio input device e.g. a microphone or a port that can carry audio information such as a microphone jack etc. and or any other device by which information can be received from a user or operator of the communication device . For example if the communication device corresponds to UE A or UE B as shown in the logic configured to receive local user input can include the keypad A any of the buttons A or B through B the touchscreen display B etc. In a further example the logic configured to receive local user input can be omitted for certain communication devices such as network communication devices that do not have a local user e.g. network switches or routers remote servers such as the server etc. . The logic configured to receive local user input can also include software that when executed permits the associated hardware of the logic configured to receive local user input to perform its input reception function s . However the logic configured to receive local user input does not correspond to software alone and the logic configured to receive local user input relies at least in part upon hardware to achieve its functionality.

Referring to while the configured logics of through are shown as separate or distinct blocks in it will be appreciated that the hardware and or software by which the respective configured logic performs its functionality can overlap in part. For example any software used to facilitate the functionality of the configured logics of through can be stored in the non transitory memory associated with the logic configured to store information such that the configured logics of through each performs their functionality i.e. in this case software execution based in part upon the operation of software stored by the logic configured to store information . Likewise hardware that is directly associated with one of the configured logics can be borrowed or used by other configured logics from time to time. For example the processor of the logic configured to process information can format data into an appropriate format before being transmitted by the logic configured to receive and or transmit information such that the logic configured to receive and or transmit information performs its functionality i.e. in this case transmission of data based in part upon the operation of hardware i.e. the processor associated with the logic configured to process information .

Generally unless stated otherwise explicitly the phrase logic configured to as used throughout this disclosure is intended to invoke an embodiment that is at least partially implemented with hardware and is not intended to map to software only implementations that are independent of hardware. Also it will be appreciated that the configured logic or logic configured to in the various blocks are not limited to specific logic gates or elements but generally refer to the ability to perform the functionality described herein either via hardware or a combination of hardware and software . Thus the configured logics or logic configured to as illustrated in the various blocks are not necessarily implemented as logic gates or logic elements despite sharing the word logic. Other interactions or cooperation between the logic in the various blocks will become clear to one of ordinary skill in the art from a review of the embodiments described below in more detail.

The various embodiments may be implemented on any of a variety of commercially available server devices such as server illustrated in . In an example the server may correspond to one example configuration of the application server described above. In the server includes a processor coupled to volatile memory and a large capacity nonvolatile memory such as a disk drive . The server may also include a floppy disc drive compact disc CD or DVD disc drive coupled to the processor . The server may also include network access ports coupled to the processor for establishing data connections with a network such as a local area network coupled to other broadcast system computers and servers or to the Internet. In context with it will be appreciated that the server of illustrates one example implementation of the communication device whereby the logic configured to transmit and or receive information corresponds to the network access ports used by the server to communicate with the network the logic configured to process information corresponds to the processor and the logic configuration to store information corresponds to any combination of the volatile memory the disk drive and or the disc drive . The optional logic configured to present information and the optional logic configured to receive local user input are not shown explicitly in and may or may not be included therein. Thus helps to demonstrate that the communication device may be implemented as a server in addition to a UE implementation as in A or B as in .

In an aspect where the server corresponds to or includes an authentication server configured to confirm the identity of a first user of a first user device the network access ports and or the processor may be configured to receive a request to confirm the identity of the first user. For example the network access ports may receive the request over the network and the processor may receive the request via the network access ports . The processor may be further configured to determine whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device. The processor and or the network access ports may be configured to confirm the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device. For example the processor may confirm the identity of the first user and the network access ports may send that confirmation to the requesting entity.

In general UEs such as telephones tablet computers laptop and desktop computers certain vehicles etc. can be configured to connect with each other either locally e.g. Bluetooth local Wi Fi etc. or remotely e.g. via cellular networks through the Internet etc. . Furthermore certain UEs may also support proximity based peer to peer P2P communication using certain wireless networking technologies e.g. Wi Fi Bluetooth Wi Fi Direct etc. that enable devices to make a one to one connection or simultaneously connect to a group that includes several devices in order to directly communicate with one another. To that end illustrates an exemplary wireless communication network or WAN that may support discoverable P2P services. For example in one embodiment the wireless communication network may comprise an LTE network or another suitable WAN that includes various base stations and other network entities. For simplicity only three base stations and one network controller and one Dynamic Host Configuration Protocol DHCP server are shown in . A base station may be an entity that communicates with devices and may also be referred to as a Node B an evolved Node B eNB an access point etc. Each base station may provide communication coverage for a particular geographic area and may support communication for the devices located within the coverage area. To improve network capacity the overall coverage area of a base station may be partitioned into multiple e.g. three smaller areas wherein each smaller area may be served by a respective base station . In 3GPP the term cell can refer to a coverage area of a base station and or a base station subsystem serving this coverage area depending on the context in which the term is used. In 3GPP2 the term sector or cell sector can refer to a coverage area of a base station and or a base station subsystem serving this coverage area. For clarity the 3GPP concept of cell may be used in the description herein.

A base station may provide communication coverage for a macro cell a pico cell a femto cell and or other cell types. A macro cell may cover a relatively large geographic area e.g. several kilometers in radius and may allow unrestricted access by devices with service subscription. A pico cell may cover a relatively small geographic area and may allow unrestricted access by devices with service subscription. A femto cell may cover a relatively small geographic area e.g. a home and may allow restricted access by devices having association with the femto cell e.g. devices in a Closed Subscriber Group CSG . In the example shown in wireless network includes macro base stations and for macro cells. Wireless network may also include pico base stations for pico cells and or home base stations for femto cells not shown in .

Network controller may couple to a set of base stations and may provide coordination and control for these base stations . Network controller may be a single network entity or a collection of network entities that can communicate with the base stations via a backhaul. The base stations may also communicate with one another e.g. directly or indirectly via wireless or wireline backhaul. DHCP server may support P2P communication as described below. DHCP server may be part of wireless network external to wireless network run via Internet Connection Sharing ICS or any suitable combination thereof. DHCP server may be a separate entity e.g. as shown in or may be part of a base station network controller or some other entity. In any case DHCP server may be reachable by devices desiring to communicate peer to peer.

Devices may be dispersed throughout wireless network and each device may be stationary or mobile. A device may also be referred to as a node user equipment UE a station a mobile station a terminal an access terminal a subscriber unit etc. A device may be a cellular phone a personal digital assistant PDA a wireless modem a wireless communication device a handheld device a laptop computer a cordless phone a wireless local loop WLL station a smart phone a netbook a smartbook a tablet etc. A device may communicate with base stations in the wireless network and may further communicate peer to peer with other devices . For example as shown in devices and may communicate peer to peer devices and may communicate peer to peer devices and may communicate peer to peer and devices and may communicate peer to peer while remaining devices may communicate with base stations . As further shown in devices and may also communicate with base stations e.g. when not engaged in P2P communication or possibly concurrent with P2P communication.

In the description herein WAN communication may refer to communication between a device and a base station in wireless network e.g. for a call with a remote entity such as another device . A WAN device is a device that is interested or engaged in WAN communication. P2P communication refers to direct communication between two or more devices without going through any base station . A P2P device is a device that is interested or engaged in P2P communication e.g. a device that has traffic data for another device within proximity of the P2P device. Two devices may be considered to be within proximity of one another for example if each device can detect the other device . In general a device may communicate with another device either directly for P2P communication or via at least one base station for WAN communication.

In one embodiment direct communication between P2P devices may be organized into P2P groups. More particularly a P2P group generally refers to a group of two or more devices interested or engaged in P2P communication and a P2P link refers to a communication link for a P2P group. Furthermore in one embodiment a P2P group may include one device designated a P2P group owner or a P2P server and one or more devices designated P2P clients that are served by the P2P group owner. The P2P group owner may perform certain management functions such as exchanging signaling with a WAN coordinating data transmission between the P2P group owner and P2P clients etc. For example as shown in a first P2P group includes devices and under the coverage of base station a second P2P group includes devices and under the coverage of base station a third P2P group includes devices and under the coverage of different base stations and and a fourth P2P group includes devices and under the coverage of base station . Devices and may be P2P group owners for their respective P2P groups and devices and may be P2P clients in their respective P2P groups. The other devices in may be engaged in WAN communication.

In one embodiment P2P communication may occur only within a P2P group and may further occur only between the P2P group owner and the P2P clients associated therewith. For example if two P2P clients within the same P2P group e.g. devices and desire to exchange information one of the P2P clients may send the information to the P2P group owner e.g. device and the P2P group owner may then relay transmissions to the other P2P client. In one embodiment a particular device may belong to multiple P2P groups and may behave as either a P2P group owner or a P2P client in each P2P group. Furthermore in one embodiment a particular P2P client may belong to only one P2P group or belong to multiple P2P group and communicate with P2P devices in any of the multiple P2P groups at any particular moment. In general communication may be facilitated via transmissions on the downlink and uplink. For WAN communication the downlink or forward link refers to the communication link from base stations to devices and the uplink or reverse link refers to the communication link from devices to base stations . For P2P communication the P2P downlink refers to the communication link from P2P group owners to P2P clients and the P2P uplink refers to the communication link from P2P clients to P2P group owners. In certain embodiments rather than using WAN technologies to communicate P2P two or more devices may form smaller P2P groups and communicate P2P on a wireless local area network WLAN using technologies such as Wi Fi Bluetooth or Wi Fi Direct. For example P2P communication using Wi Fi Bluetooth Wi Fi Direct or other WLAN technologies may enable P2P communication between two or more mobile phones game consoles laptop computers or other suitable communication entities.

According to one aspect of the disclosure illustrates an exemplary environment in which discoverable P2P services may be used to establish a proximity based distributed bus over which various devices may communicate. For example in one embodiment communications between applications and the like on a single platform may be facilitated using an interprocess communication protocol IPC framework over the distributed bus which may comprise a software bus used to enable application to application communications in a networked computing environment where applications register with the distributed bus to offer services to other applications and other applications query the distributed bus for information about registered applications. Such a protocol may provide asynchronous notifications and remote procedure calls RPCs in which signal messages e.g. notifications may be point to point or broadcast method call messages e.g. RPCs may be synchronous or asynchronous and the distributed bus e.g. a daemon bus process may handle message routing between the various devices .

In one embodiment the distributed bus may be supported by a variety of transport protocols e.g. Bluetooth TCP IP Wi Fi CDMA GPRS UMTS etc. . For example according to one aspect a first device may include a distributed bus node and one or more local endpoints wherein the distributed bus node may facilitate communications between local endpoints associated with the first device and local endpoints and associated with a second device and a third device through the distributed bus e.g. via distributed bus nodes and on the second device and the third device . As will be described in further detail below with reference to the distributed bus may support symmetric multi device network topologies and may provide a robust operation in the presence of device drops outs. As such the virtual distributed bus which may generally be independent from any underlying transport protocol e.g. Bluetooth TCP IP Wi Fi etc. may allow various security options from unsecured e.g. open to secured e.g. authenticated and encrypted wherein the security options can be used while facilitating spontaneous connections with among the first device the second device and the third device without intervention when the various devices come into range or proximity to each other.

According to one aspect of the disclosure illustrates an exemplary message sequence in which discoverable P2P services may be used to establish a proximity based distributed bus over which a first device Device A and a second device Device B may communicate. Generally Device A may request to communicate with Device B wherein Device A may a include local endpoint e.g. a local application service etc. which may make a request to communicate in addition to a bus node that may assist in facilitating such communications. Further Device B may include a local endpoint with which the local endpoint may be attempting to communicate in addition to a bus node that may assist in facilitating communications between the local endpoint on the Device A and the local endpoint on Device B .

In one embodiment the bus nodes and may perform a suitable discovery mechanism at message sequence step . For example mechanisms for discovering connections supported by Bluetooth TCP IP UNIX or the like may be used. At message sequence step the local endpoint on Device A may request to connect to an entity service endpoint etc available through bus node . In one embodiment the request may include a request and response process between local endpoint and bus node . At message sequence step a distributed message bus may be formed to connect bus node to bus node and thereby establish a P2P connection between Device A and Device B . In one embodiment communications to form the distributed bus between the bus nodes and may be facilitated using a suitable proximity based P2P protocol e.g. the AllJoyn software framework designed to enable interoperability among connected products and software applications from different manufacturers to dynamically create proximal networks and facilitate proximal P2P communication . Alternatively in one embodiment a server not shown may facilitate the connection between the bus nodes and . Furthermore in one embodiment a suitable authentication mechanism may be used prior to forming the connection between bus nodes and e.g. SASL authentication in which a client may send an authentication command to initiate an authentication conversation . Still further during message sequence step bus nodes and may exchange information about other available endpoints e.g. local endpoints on Device C in . In such embodiments each local endpoint that a bus node maintains may be advertised to other bus nodes wherein the advertisement may include unique endpoint names transport types connection parameters or other suitable information.

In one embodiment at message sequence step bus node and bus node may use obtained information associated with the local endpoints and respectively to create virtual endpoints that may represent the real obtained endpoints available through various bus nodes. In one embodiment message routing on the bus node may use real and virtual endpoints to deliver messages. Further there may one local virtual endpoint for every endpoint that exists on remote devices e.g. Device A . Still further such virtual endpoints may multiplex and or de multiplex messages sent over the distributed bus e.g. a connection between bus node and bus node . In one aspect virtual endpoints may receive messages from the local bus node or just like real endpoints and may forward messages over the distributed bus. As such the virtual endpoints may forward messages to the local bus nodes and from the endpoint multiplexed distributed bus connection. Furthermore in one embodiment virtual endpoints that correspond to virtual endpoints on a remote device may be reconnected at any time to accommodate desired topologies of specific transport types. In such an aspect UNIX based virtual endpoints may be considered local and as such may not be considered candidates for reconnection. Further TCP based virtual endpoints may be optimized for one hop routing e.g. each bus node and may be directly connected to each other . Still further Bluetooth based virtual endpoints may be optimized for a single pico net e.g. one master and n slaves in which the Bluetooth based master may be the same bus node as a local master node.

At message sequence step the bus node and the bus node may exchange bus state information to merge bus instances and enable communication over the distributed bus. For example in one embodiment the bus state information may include a well known to unique endpoint name mapping matching rules routing group or other suitable information. In one embodiment the state information may be communicated between the bus node and the bus node instances using an interface with local endpoints and communicating with using a distributed bus based local name. In another aspect bus node and bus node may each may maintain a local bus controller responsible for providing feedback to the distributed bus wherein the bus controller may translate global methods arguments signals and other information into the standards associated with the distributed bus. At message sequence step the bus node and the bus node may communicate e.g. broadcast signals to inform the respective local endpoints and about any changes introduced during bus node connections such as described above. In one embodiment new and or removed global and or translated names may be indicated with name owner changed signals. Furthermore global names that may be lost locally e.g. due to name collisions may be indicated with name lost signals. Still further global names that are transferred due to name collisions may be indicated with name owner changed signals and unique names that disappear if and or when the bus node and the bus node become disconnected may be indicated with name owner changed signals.

As used above well known names may be used to uniquely describe local endpoints and . In one embodiment when communications occur between Device A and Device B different well known name types may be used. For example a device local name may exist only on the bus node associated with Device A to which the bus node directly attaches. In another example a global name may exist on all known bus nodes and where only one owner of the name may exist on all bus segments. In other words when the bus node and bus node are joined and any collisions occur one of the owners may lose the global name. In still another example a translated name may be used when a client is connected to other bus nodes associated with a virtual bus. In such an aspect the translated name may include an appended end e.g. a local endpoint with well known name org.foo connected to the distributed bus with Globally Unique Identifier 1234 may be seen as G1234.org.foo .

At message sequence step the bus node and the bus node may communicate e.g. broadcast signals to inform other bus nodes of changes to endpoint bus topologies. Thereafter traffic from local endpoint may move through virtual endpoints to reach intended local endpoint on Device B . Further in operation communications between local endpoint and local endpoint may use routing groups. In one aspect routing groups may enable endpoints to receive signals method calls or other suitable information from a subset of endpoints. As such a routing name may be determined by an application connected to a bus node or . For example a P2P application may use a unique well known routing group name built into the application. Further bus nodes and may support registering and or de registering of local endpoints and with routing groups. In one embodiment routing groups may have no persistence beyond a current bus instance. In another aspect applications may register for their preferred routing groups each time they connect to the distributed bus. Still further groups may be open e.g. any endpoint can join or closed e.g. only the creator of the group can modify the group . Yet further a bus node or may send signals to notify other remote bus nodes or additions removals or other changes to routing group endpoints. In such embodiments the bus node or may send a routing group change signal to other group members whenever a member is added and or removed from the group. Further the bus node or may send a routing group change signal to endpoints that disconnect from the distributed bus without first removing themselves from the routing group.

To protect the privacy and security of user information stored at a remote server e.g. a server accessible over the Internet the remote server will determine whether or not the user is authorized to access the information. Similarly for the user to perform some action at or with the assistance of the remote server such as making a bank transfer the remote server will determine whether or not the user is authorized to perform the action. Typically determining whether or not a user is authorized to access information or perform an action includes some way of authenticating that the user is who he says that he is. That is if the remote server can verify that the user is the owner of the user information or the bank account authentication the user is allowed to access the information or make the bank transfer authorization .

Client server user authentication is typically performed using a unique key known only to the client and the server. This can be a very limited system however because if the key becomes known to a malicious third party it is no longer secure. Additionally the user may have to remember multiple username and password combinations for each website and or application the user would like to log onto.

Implicit authorization to access a resource can also be granted based on physical proximity. A user device can be authorized to access a resource based on its physical proximity to the user device that controls administers or otherwise authorizes access to the resource. For example given two peer devices in proximity to each other where one peer device controls access to a resource the fact that the other peer device is proximate the first peer device can imply that the other peer device is authorized to access the resource. That is the fact that the first peer device permits the second peer device to come into proximity with it can indicate the relationship between the peer devices and imply that the second peer device is authorized to access the resource controlled by the first peer device.

Physical proximity may be determined by a proximity check such as a Listen Location LILO proximity check a Bluetooth pairing communication over the same local wireless network or any other interaction between two UEs that indicates that they are physically proximate to each other.

Using proximity alone to authorize access to a resource however is only appropriate in certain locations such as a user s home. As such before granting access to a resource to another user device the authorizing user device should determine whether or not the other user device is in such a location. The user for example may define in which locations other user devices are permitted access to resources by virtue of their proximity

In an aspect the type of authorization may depend on the type of resource. For example a visitor s user device may be granted full access to a homeowner s stereo system when the visitor s user device is proximate the homeowner s user device. However under no circumstances may the visitor s user device be granted access to the homeowner s bank account based only on their proximity. Rather the homeowner may need to grant additional permission to access certain resources.

Proximity may also include user devices within the same physical boundary not just user devices that can be detected via a proximity check. For example once a visitor s user device has been granted access to another user s home it may be considered proximal to and thus have access to any device in the entire house even if the visitor s user device is not proximate the homeowner s user device.

Accordingly permissions can define domains in which a user device is authorized to access any available resources. That is once a user device is within a certain domain such as a user s home further authentication is not necessary. The domain can be defined by physical proximity e.g. a proximity check or within the same physical boundary by access e.g. based on some authentication check and or by virtual proximity.

Virtual proximity can include interactions between multiple user devices over a period of time not just user devices that are currently physically proximate to each other. Most users are in proximity to a number of peers over the course of each day. Utilizing these interactions or virtual proximity as a basis for an authentication system would distribute the authentication process thereby making it more secure.

UEs in the proposed authentication system track interactions with other UEs such as proximity detections text messages multimedia messages phone calls emails etc. As described above proximity detection may include a proximity check such as a LILO proximity check a Bluetooth pairing communication over the same local wireless network or any other interaction between two UEs that indicates that they are proximate to each other. Peer relationships can also be determined from UE interactions with GPS satellites.

A user UE may interact with many different UEs. These other UEs may belong to family members co workers roommates friends or acquaintances of the user for example. Alternatively the other UEs may include Internet of Things IoT devices belonging to the user such as the user s refrigerator washing machine dish washer thermostat etc. Based on the interactions with these other UEs the UE can build a user interaction table.

Each UE on a network may store a user interaction table and can upload its user interaction table to a server on request or periodically such as once per day. The server can include a database to store a user interaction table for each UE in the system. Alternatively instead of the UE storing its interaction table the interactions could be uploaded to the server as they occur in real time and added to the interaction table on the server that corresponds to the UE.

In an embodiment the server can cross reference these user interaction tables to verify the identity of i.e. authenticate a user UE logging on to a third party server. This system could work entirely in the background allowing users to maximize their time in other venues. Additionally it can eliminate the need for users to recall and type in their username and password for each logon request.

As an example operation of the proposed authentication system a user named Sarah may wish to logon to her bank s website. Accordingly the client on her smartphone sends a request to an authentication server. The authentication server searches Sarah s user interaction table for the ten most recent interactions. Sarah s most recent interactions may have been with for example users Jane Mark Jill Bill Dan Tara Frank and Ray.

The authentication server cross references the user interaction tables for Jane Mark Jill Bill Dan Tara Frank and Ray to Sarah s user interaction table. The authentication server is able to verify that Sarah interacted with for example Jane Jill and Ray based on their stored user interaction tables.

The authentication server also attempts to cross reference the user interaction tables for each of the remaining peers i.e. Mark Bill Tara Frank and Dan. In this example Mark has powered off his phone and the authentication server is therefore unable to retrieve his user interaction table in this case Mark s interaction table may be stored on his phone rather than the server or the version on the server may be older than the interaction being cross referenced . However if the authentication server can verify five of the last ten peer interactions based on the user interaction tables it will authenticate Sarah s logon request to the bank website. If it authenticates her Sarah will be logged on to her bank s website without having to recall a username and password.

Referring now to the user interaction tables in more detail user interaction tables can be organized by identifiers of the UEs to which they correspond. A user interaction table can store an identifier of the user UE the other user UE the type of interaction e.g. proximity email text message phone call etc. the time of the interaction e.g. the time the interaction began ended and or the duration of the interaction. The user interaction table may store all interactions for each UE or only a certain number of interactions such as the last ten interactions or all interactions in the last two days.

Table 1 illustrates an exemplary user interaction table according to an embodiment of the disclosure.

Although Table 1 illustrates the timestamp as the time alone it may also include the date of the interaction.

In the authentication server and the third party server are illustrated as two separate entities. In such a situation the authentication server may authenticate users for multiple third party servers including third party server . However the authentication server may alternatively reside on the third party server . That is the third party server may authenticate users rather than there being a separate authentication server that can authenticate users for a plurality of third party servers. The authentication server may be any server configured to perform the functionality described herein such as server in .

The authentication server can store user interaction tables for each user UE in the network including UE and UEs . The UE may have interacted with each of the UEs at some point in time. Each user may decide how he or she wishes his or her respective user interaction table to be stored. For example some users may wish to store it on their UE and have the authentication server request it or only the necessary entries as needed while other users may wish to simply upload their interactions to their user interaction tables stored on the authentication server .

In an embodiment when a user via the user s UE wishes to logon to the third party server which may be for example an email server or a banking server the UE sends an authentication request to the authentication server . The authentication request may include or be followed by the interaction table for UE . Alternatively the authentication server may retrieve the user interaction table corresponding to the UE . As described above the user interaction table may store the interactions that UE has had with UEs and the time of those interactions. The user interaction table may store all interactions for each UE or only a certain number of interactions such as the last ten interactions or all interactions in the last two days.

In response to receiving the authentication request from the UE the authentication server retrieves the user interaction tables for each user UE in the user interaction table for UE or only a certain number of user interaction tables. For example the authentication server may only retrieve the user interaction tables for at least the number of UEs of UEs that are required to authenticate UE . For example the authentication server may retrieve the user interaction tables for the first ten UEs of UEs all UEs of UEs with which the UE has interacted in the last two days or only the number of UEs required to authenticate UE e.g. five out of the last ten.

The authentication server may then cross reference the user interaction table for UE with the retrieved user interaction tables to verify that UE actually interacted with the cross referenced UEs and at the time indicated in the user interaction table. For example if the user interaction table for UE indicates that UE was proximate a given UE at a given time the authentication server will retrieve that UE s user interaction table to determine whether or not there is a corresponding entry for the interaction which would indicate that UE was actually proximate that UE at the given time.

The authentication server can perform this verification for the number of UEs required to authenticate the UE . For example if the UE can only be authenticated if five of the last ten interactions are verified then the authentication server will perform this verification check for each UE in the user interaction table for the UE until it verifies five UEs or has cross referenced ten UEs whichever comes first.

If the authentication server authenticates the UE based on the retrieved user interaction tables the authentication server can send an authentication logon message to the third party server indicating that the UE has been authenticated. The authentication message can include the user s logon credentials for the third party server such as a username and password or some other agreed upon authentication message such as a private key. The authentication server could store the logon credentials for the user so that the user only has to enter them once rather than the user having to enter them every time he or she tries to access the third party server . The third party server can then permit access to the UE 810.

While the example in illustrates the UE communicating with the third party server via the authentication server the UE could first access the third party server which could redirect the UE to the authentication server . Alternatively the UE could access the third party server and the third party server could communicate with the authentication server to determine whether or not the UE is authorized. The third party server could either send the UE s user interaction table to the authorization server or the UE could do so itself.

At the server receives a logon request from a first user device such as user device in . The first user device may be a smartphone a laptop computer a tablet computer a desktop computer a PDA or any other user device capable of logging on to a third party server. The logon request may be a logon request to log onto a third party server.

At the server retrieves a first user interaction table corresponding to the first user device. The server may retrieve the first user interaction table from the first user device or from a database linked to the server. The server may receive the first user interaction table from a third party server that the first user device is attempting to access. The first user interaction table may include an entry for a second user devices with which the first user device has interacted.

At the server retrieves a second user interaction table corresponding to a second user device with which the first user device has interacted such as a UE . The server may retrieve the second user interaction table from the second user device or from a database linked to the server. The second user device may be an IoT device belonging to the user of the first user device such as a refrigerator a washing machine a thermostat etc. or a user device belonging to another user such as a smartphone a laptop computer a tablet computer a PDA etc. or even an IoT device belonging to another user. That is the second user device may be any device capable of interacting with the first user device and communicating with the server.

At the server determines whether or not an entry for the second user device in the first user interaction table corresponds to an entry for the first user device in the second user interaction table. Where the entry for the first user device includes a first interaction type and or a first timestamp and where the entry for the second user device includes a second interaction type and or a second timestamp the determining may include determining whether or not the first interaction type matches the second interaction type and or determining whether or not the first timestamp matches the second timestamp. The server may match one or both of the interaction type and the timestamp. The interaction type may be one of a proximity detection a short messaging service SMS message a multimedia messaging service MMS message a phone call or an email.

If at the server determines that an entry for the second user device in the first user interaction table does not correspond to an entry for the first user device in the second user interaction table then the flow returns to and the server retrieves a user interaction table for another user device identified in the first user interaction table. If however the server determines that an entry for the second user device in the first user interaction table does correspond to an entry for the first user device in the second user interaction table then the flow proceeds to .

At the server determines whether enough entries have been verified. As discussed above this may be five out of ten entries all entries within a certain time period or the like. If not enough entries have been verified then the flow returns to and the server retrieves a user interaction table for another user device identified in the first user interaction table. If however enough entries have been verified then the flow proceeds to .

At the server authenticates the first user device based on the verifying. The authentication may include sending a message to the third party server indicating that the first user device is authenticated. The server may store logon credentials for the third party server corresponding to the first user device and send those logon credentials in the authentication message.

Although the server can authenticate the first user device based on only one other proximate user devices the more proximate user devices the server uses to authenticate the first user device the more confidence there can be in the authentication.

As illustrated in in order for the server to verify a user s identity it must receive the interaction tables generated at the UE and the UEs . However security is a concern when transmitting the full interaction table. Transmitting a complete interaction table is inherently dangerous as the transmission can be intercepted and spoofed.

Instead UEs and can store their interaction tables locally and the server either authentication server or third party server can query the interaction tables stored at the UEs and with specific questions. This prevents the interaction table from being intercepted and spoofed and as such keeps the information in it accurate and secure.

For example assume that two users Dana and Jake were at the same geo location at lunchtime. Their interaction tables can be queried with the following questions to determine the probability that they had lunch together How many people did you have lunch with in the last week Are you the type of person who has lunch with people often Finding out that Dana and Jake are both people who often eat lunch with others combined with their geo location data can allow the authentication server to assume that they ate lunch together.

This statistical confirmation provides a significant security improvement. The more data patterns that can be identified and the more statistics that can be generated the higher the level of confidence that can be attained. Additionally after an initial learning period the questions can be better tailored to the user thereby maximizing the amount of relevant data received with the minimum number of questions.

The specific aspects of authenticating UE by querying UEs and will now be described with respect to . illustrates an exemplary flow for authenticating a user device without transmitting the user device s interaction table. The flow illustrated in may be performed by the authentication server or a supervisor device of a user s home network. The supervisor device may belong to the user of UE for example. For simplicity the flow illustrated in will be described as being performed by the authentication server however as is apparent the flow may be performed by the above described supervisor device.

At the authentication server receives a request from a first user device such as UE to access a resource. The resource may be the user of UE s bank account or home network for example.

At the authentication server optionally determines that the first user device was proximate a second user device such as one of UEs at a given time. Determining that the first user device was proximate the second user device may include for example determining that the first user device and the second user device were both attached to the same network access point at the given time. This may include retrieving an identifier of the same network access point from the first user device and retrieving a list of user devices that were attached to the same network access point at the given time. The network access point may be a wireless local area network access point or a cellular network access point for example.

Alternatively determining that the first user device was proximate the second user device may include determining that the first user device and the second user device were within a threshold geographic distance of each other based on location information received from the first user device and location information received from the second user device. The location information may include the identifier s of the network access point s to which the user devices are attached GPS coordinates of the user devices and or the like.

At the authentication server sends a first query to the first user device to determine whether or not there is a relationship between the first user device and the second user device or between a user of the first user device and a user of the second user device. Determining whether or not there is a relationship may include determining whether or not the first user device interacted with the second user device or a user of the first user device interacted with a user of the second user device at the given time. If the authentication server determines that the first user device was proximate the second user device at the given time the authentication server can send the second query in response to that determination.

The first user device may determine the response to the first query based on information in the interaction table stored on the first user device. Alternatively the first user device may determine the response to the first query by displaying the first query to the user of the first user device and receiving the response from the user of the first user device. The response to the first query may be an affirmative response a negative response or a number for example. The response to the first query should not include information that the user of the first user device has determined to be private.

At the authentication server sends a second query to the second user device to determine whether or not there is a relationship between the second user device and the first user device or between the user of the second user device and the user of the first user device. Determining whether or not there is a relationship may include determining whether or not the second user device interacted with the first user device or the user of the second user device interacted with the user of the first user device at the given time. The second user device may be a user device belonging to a second user or an IoT device belonging to the user of the first device.

Note as discussed above the flow of may be performed by a supervisor device of a user s home network. In that case no information needs to be transmitted over a public network. Rather all communication illustrated in would occur over the user s home network.

The second user device may determine the response to the second query based on information in the interaction table stored on the second user device. Alternatively the second user device may determine the response to the second query by displaying the second query to the user of the second user device and receiving the response from the user of the second user device. The response to the second query may be an affirmative response a negative response or a number for example. The response to the second query should not include information that the user of the second user device has determined to be private.

Block is optional because the authentication server may send the second query without knowing that the first user device was proximate the second user device at the given time. In this case proximity means that if the user devices performed a proximity check such as a LILO proximity check they would be within range of each other. The authentication server may send the second query to each user device within a threshold geographic distance of the location of the first user device. The location of the first user device may be the first user device s current location or the location of the first user device at the given time if known. This may depend on how long ago the given time was.

For example if the given time is only a few hours before the current time the authentication server may assume that the first user device and the second user device are still in the same general location and perhaps even still served by the same network access point. As such sending the second query to each user device being served by the same network access point as the first user device will likely result in sending the query to a user device that interacted with the first user device at the given time. As will be appreciated the more recent the given time the more likely it will be to discover user devices that interacted with the first user device. However a recent given time provides less security as the first user device may have been lost or stolen before the given time.

Although illustrates the authentication server sending a single query to each user device the authentication server may send multiple queries to each device. Additionally the second query may requests the same information as the first query. For example the authentication server may ask both user devices if the users went out for lunch that day. The authentication server may also ask how many people the users had lunch with that day. The authentication server may send both queries at the same time or send the second query only if the first query was answered in the affirmative. If the answers to these questions match the authentication server can associate a higher confidence level with the access request at .

At the authentication server associates a confidence level with the access request based on a response to the first query and a response to the second query. The associating may include associating a lower confidence level if the response to the first query does not match the response to the second query than if the response to the first query matches the response to the second query. The confidence level indicates a confidence that the user of the first user device is authorized to access the resource.

Although not illustrated the authentication server can send a plurality of queries to a plurality of user devices to determine whether or not there is a relationship between any of the plurality of user devices and the first user device or between any users of the plurality of user devices and the user of the first user device. In this case the associating at may include associating the confidence level with the access request based on the response to the first query and responses to the plurality of queries.

Likewise the authentication server can send queries to user devices that were or might have been proximate the first user device at different time not just the given time. As will be appreciated the more user devices the authentication server queries the more likely it is to find user devices with which the first user device has interacted and thus the higher the confidence level it can assign.

At the authentication server authenticates the first user device based on the associated confidence level. As illustrated the authentication server can authenticate the first user device without retrieving the interaction table from the first user device. If the associated confidence level is below a threshold the authentication server can deny the request for access to the resource. Otherwise if the associated confidence level is above a threshold the authentication server can allow the request for access to the resource.

At the authentication server receives a request to confirm the identity of the first user. The request may be in the form of for example a logon request such as at of or a request to access a resource such as at of .

At the authentication server determines whether or not there is a relationship between the first user or the first user device and a second user of a second user device or the second user device based on a first list of user interactions associated with the first user device and a second list of user interactions associated with the second user device. The second user device may be any of UEs in . The first list of user interactions may include an entry for an interaction with the second user device as described above.

In an aspect the determining at may include determining whether or not the entry for the interaction with the second user device in the first list of user interactions corresponds to an entry for an interaction with the first user device in the second list of user interactions as at of . The authentication server may determine that there is a relationship between the first user or the first user device and the second user or the second user device based on the entry for the interaction with the second user device in the first list of user interactions corresponding to the entry for the interaction with the first user device in the second list of user interactions as at of .

In another aspect the determining at may include sending a first query to the first user device sending a second query to the second user device and determining whether or not there is a relationship between the first user or the first user device and the second user or the second user device based on a response to the first query and a response to the second query as discussed above with reference to of .

At the authentication server confirms the identity of the first user based on determining that there is a relationship between the first user or the first user device and the second user or the second user device. Although not illustrated in the authentication server may generate an identity score for the first user device based on the determining such as at of . In that case the confirming at may include confirming the identity of the first user based on the identity score. If the identity score is above a threshold the identity of the first user is confirmed and the first user can be authenticated as at of of . If at the authentication server determines that there is not a relationship between the first user or first user device and the second user or the second user device then at the authentication server does not confirm the identity of the first user. The authentication server may instead retrieve one or more additional user interaction tables as discussed above with reference to or send queries to one or more other user devices as described above with reference to as appropriate. Alternatively the authentication server may deny the request to confirm the identity of the first user thereby not authenticating the first user.

The functionality of the modules of may be implemented in various ways consistent with the teachings herein. In some designs the functionality of these modules may be implemented as one or more electrical components. In some designs the functionality of these blocks may be implemented as a processing system including one or more processor components. In some designs the functionality of these modules may be implemented using for example at least a portion of one or more integrated circuits e.g. an ASIC . As discussed herein an integrated circuit may include a processor software other related components or some combination thereof. Thus the functionality of different modules may be implemented for example as different subsets of an integrated circuit as different subsets of a set of software modules or a combination thereof. Also it will be appreciated that a given subset e.g. of an integrated circuit and or of a set of software modules may provide at least a portion of the functionality for more than one module.

In addition the components and functions represented by as well as other components and functions described herein may be implemented using any suitable means. Such means also may be implemented at least in part using corresponding structure as taught herein. For example the components described above in conjunction with the module for components of also may correspond to similarly designated means for functionality. Thus in some aspects one or more of such means may be implemented using one or more of processor components integrated circuits or other suitable structure as taught herein.

Those skilled in the art will appreciate that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

Further those skilled in the art will appreciate that the various illustrative logical blocks modules circuits and algorithm steps described in connection with the aspects disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application but such implementation decisions should not be interpreted to depart from the scope of the present disclosure.

The various illustrative logical blocks modules and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor a digital signal processor DSP an application specific integrated circuit ASIC a field programmable gate array FPGA or other programmable logic device discrete gate or transistor logic discrete hardware components or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor but in the alternative the processor may be any conventional processor controller microcontroller or state machine. A processor may also be implemented as a combination of computing devices e.g. a combination of a DSP and a microprocessor a plurality of microprocessors one or more microprocessors in conjunction with a DSP core or any other such configuration .

The methods sequences and or algorithms described in connection with the aspects disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM flash memory ROM EPROM EEPROM registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in an IoT device. In the alternative the processor and the storage medium may reside as discrete components in a user terminal.

In one or more exemplary aspects the functions described may be implemented in hardware software firmware or any combination thereof. If implemented in software the functions may be stored on or transmitted over as one or more instructions or code on a computer readable medium. Computer readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example and not limitation such computer readable media can comprise RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes CD laser disc optical disc DVD floppy disk and Blu ray disc where disks usually reproduce data magnetically and or optically with lasers. Combinations of the above should also be included within the scope of computer readable media.

While the foregoing disclosure shows illustrative aspects of the disclosure it should be noted that various changes and modifications could be made herein without departing from the scope of the disclosure as defined by the appended claims. The functions steps and or actions of the method claims in accordance with the aspects of the disclosure described herein need not be performed in any particular order. Furthermore although elements of the disclosure may be described or claimed in the singular the plural is contemplated unless limitation to the singular is explicitly stated.

