---

title: Conjuring and providing profiles that manage execution of mobile applications
abstract: Various aspects of the disclosure relate to configuring and providing policies that manage execution of mobile applications. In some embodiments, a user interface may be generated that allows an IT administrator or other operator to set, change and/or add to policy settings. The policy settings can be formatted into a policy file and be made available for download to a mobile device, such as via an application store or to be pushed to the mobile device as part of a data push service. The mobile device, based on the various settings included in the policy file, may perform various actions to enforce the security constraints that are represented by the policy. The various settings that can be included in a policy are numerous and some examples and variations thereof are described in connection with the example embodiments discussed herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09467474&OS=09467474&RS=09467474
owner: Citrix Systems, Inc.
number: 09467474
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20140401
---
This application is a continuation of and claims priority to U.S. Non Provisional patent application Ser. No. 14 041 923 filed Sep. 30 2013 and entitled CONFIGURING AND PROVIDING PROFILES THAT MANAGE EXECUTION OF MBILE APPLICATIONS which is a continuation of U.S. Non Provisional patent application Ser. No. 14 039 651 filed Sep. 27 2013 and entitled CONFIGURING AND PROVIDING PROFILES THAT MANAGE EXECUTION OF MOBILE APPLICATIONS which in turn claims priority to the following applications U.S. Provisional Patent Application Ser. No. 61 863 194 filed Aug. 7 2013 and entitled CONFIGURING AND PROVIDING PROFILES THAT MANAGE EXECUTION OF MOBILE APPLICATIONS U.S. Provisional Patent Application Ser. No. 61 713 715 filed Oct. 15 2012 and entitled MANAGING DYNAMIC PROFILES AND SETTINGS FOR MOBILE APPLICATIONS and U.S. Provisional Patent Application Ser. No. 61 806 577 filed Mar. 29 2013 and entitled SYSTEMS AND METHODS FOR ENTERPRISE MOBILITY MANAGEMENT. 

Aspects of the disclosure relate to computer hardware and software. In particular one or more aspects of the disclosure generally relate to computer hardware and software for providing an enterprise application store.

Increasingly corporations and other organizations are providing and or otherwise enabling their employees and other associates with mobile devices such as smart phones tablet computers and other mobile computing devices. As these devices continue to grow in popularity and provide an increasing number of functions many organizations may wish to place certain controls on how these devices can be used what resources these devices can access and how the applications running on these devices can interact with other resources.

Aspects of the disclosure provide more efficient effective functional and convenient ways of controlling how mobile devices can be used what resources mobile devices can access and how the applications running on these devices can interact with other resources. In particular in one or more embodiments discussed in greater detail below an enterprise application store may be implemented that can provide these and features.

Various aspects of the disclosure relate to configuring and providing one or more policies that can be used by a mobile to manage or constrain the execution of a mobile application also referred herein as a managed application . In particular some embodiments of this disclosure relate to systems one or more apparatuses and one or more computing devices that are configured to perform various methods for configuring and providing the policies. For example one or more computing devices may display a user interface that displays one or more policy settings for a managed application that is to be made available for download to a mobile device. Each of the one or more policy settings may provide a constraint to be enforced by the mobile device prior to the managed application being provided access to at least one resource that is accessible through an access gateway. The one or more computing devices may also receive input via the user interface that modifies the one or more policy settings which can result in one or more modified policy settings. The one or more computing devices may further produce a policy file for the managed application that includes the one or more modified policy settings and provide the policy file such that the policy is available for download to the mobile device. The various settings that can be included in a policy are numerous and some examples and variations thereof are described in connection with the example embodiments discussed herein.

In the following description of the various embodiments reference is made to the accompanying drawings identified above and which form a part hereof and in which is shown by way of illustration various embodiments in which aspects described herein may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made without departing from the scope described herein. Various aspects are capable of other embodiments and of being practiced or being carried out in various different ways.

As a general introduction to the subject matter described in more detail below various aspects of the disclosure relate to configuring and providing policies that manage execution of mobile applications. In some embodiments a user interface may be generated that allows an IT administrator or other operator to set change and or add to policy settings. The policy settings can be formatted into a policy file such as an Extensible Markup Language file XML file and be made available for download to a mobile device. The mobile device based on the various settings included in the policy file may perform various actions to enforce the security constraints that are represented by the policy. The various settings that can be included in a policy are numerous and some examples and variations thereof are described in connection with the example embodiments discussed herein.

It is to be understood that the phraseology and terminology used herein are for the purpose of description and should not be regarded as limiting. Rather the phrases and terms used herein are to be given their broadest interpretation and meaning. The use of including and comprising and variations thereof is meant to encompass the items listed thereafter and equivalents thereof as well as additional items and equivalents thereof. The use of the terms mounted connected coupled positioned engaged and similar terms is meant to include both direct and indirect mounting connecting coupling positioning and engaging.

Computer software hardware and networks may be utilized in a variety of different system environments including standalone networked remote access aka remote desktop virtualized and or cloud based environments among others. illustrates one example of a system architecture and data processing device that may be used to implement one or more illustrative aspects described herein in a standalone and or networked environment. Various network nodes and may be interconnected via a wide area network WAN such as the Internet. Other networks may also or alternatively be used including private intranets corporate networks LANs metropolitan area networks MAN wireless networks personal networks PAN and the like. Network is for illustration purposes and may be replaced with fewer or additional computer networks. A local area network LAN may have one or more of any known LAN topology and may use one or more of a variety of different protocols such as Ethernet. Devices and other devices not shown may be connected to one or more of the networks via twisted pair wires coaxial cable fiber optics radio waves or other communication media.

The term network as used herein and depicted in the drawings refers not only to systems in which remote storage devices are coupled together via one or more communication paths but also to stand alone devices that may be coupled from time to time to such systems that have storage capability. Consequently the term network includes not only a physical network but also a content network which is comprised of the data attributable to a single entity which resides across all physical networks.

The components may include data server web server and client computers . Data server provides overall access control and administration of databases and control software for performing one or more illustrative aspects describe herein. Data server may be connected to web server through which users interact with and obtain data as requested. Alternatively data server may act as a web server itself and be directly connected to the Internet. Data server may be connected to web server through the network e.g. the Internet via direct or indirect connection or via some other network. Users may interact with the data server using remote computers e.g. using a web browser to connect to the data server via one or more externally exposed web sites hosted by web server . Client computers may be used in concert with data server to access data stored therein or may be used for other purposes. For example from client device a user may access web server using an Internet browser as is known in the art or by executing a software application that communicates with web server and or data server over a computer network such as the Internet .

Servers and applications may be combined on the same physical machines and retain separate virtual or logical addresses or may reside on separate physical machines. illustrates just one example of a network architecture that may be used and those of skill in the art will appreciate that the specific network architecture and data processing devices used may vary and are secondary to the functionality that they provide as further described herein. For example services provided by web server and data server may be combined on a single server.

Each component may be any type of known computer server or data processing device. Data server e.g. may include a processor controlling overall operation of the rate server . Data server may further include RAM ROM network interface input output interfaces e.g. keyboard mouse display printer etc. and memory . I O may include a variety of interface units and drives for reading writing displaying and or printing data or files. Memory may further store operating system software for controlling overall operation of the data processing device control logic for instructing data server to perform aspects described herein and other application software providing secondary support and or other functionality which may or might not be used in conjunction with aspects described herein. The control logic may also be referred to herein as the data server software . Functionality of the data server software may refer to operations or decisions made automatically based on rules coded into the control logic made manually by a user providing input into the system and or a combination of automatic processing based on user input e.g. queries data updates etc. .

Memory may also store data used in performance of one or more aspects described herein including a first database and a second database . In some embodiments the first database may include the second database e.g. as a separate table report etc. . That is the information can be stored in a single database or separated into different logical virtual or physical databases depending on system design. Devices may have similar or different architecture as described with respect to device . Those of skill in the art will appreciate that the functionality of data processing device or device as described herein may be spread across multiple data processing devices for example to distribute processing load across multiple computers to segregate transactions based on geographic location user access level quality of service QoS etc.

One or more aspects may be embodied in computer usable or readable data and or computer executable instructions such as in one or more program modules executed by one or more computers or other devices as described herein. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types when executed by a processor in a computer or other device. The modules may be written in a source code programming language that is subsequently compiled for execution or may be written in a scripting language such as but not limited to HTML or XML. The computer executable instructions may be stored on a computer readable medium such as a nonvolatile storage device. Any suitable computer readable storage media may be utilized including hard disks CD ROMs optical storage devices magnetic storage devices and or any combination thereof. In addition various transmission non storage media representing data or events as described herein may be transferred between a source and a destination in the form of electromagnetic waves traveling through signal conducting media such as metal wires optical fibers and or wireless transmission media e.g. air and or space . Various aspects described herein may be embodied as a method a data processing system or a computer program product. Therefore various functionalities may be embodied in whole or in part in software firmware and or hardware or hardware equivalents such as integrated circuits field programmable gate arrays FPGA and the like. Particular data structures may be used to more effectively implement one or more aspects described herein and such data structures are contemplated within the scope of computer executable instructions and computer usable data described herein.

With further reference to one or more aspects described herein may be implemented in a remote access environment. depicts an example system architecture including a generic computing device in an illustrative computing environment that may be used according to one or more illustrative aspects described herein. Generic computing device may be used as a server in a single server or multi server desktop virtualization system e.g. a remote access or cloud system configured to provide virtual machines for client access devices. The generic computing device may have a processor for controlling overall operation of the server and its associated components including random access memory RAM read only memory ROM input output I O module and memory .

I O module may include a mouse keypad touch screen scanner optical reader and or stylus or other input device s through which a user of generic computing device may provide input and may also include one or more of a speaker for providing audio output and a video display device for providing textual audiovisual and or graphical output. Software may be stored within memory and or other storage to provide instructions to processor for configuring generic computing device into a special purpose computing device in order to perform various functions as described herein. For example memory may store software used by the computing device such as an operating system application programs and an associated database .

Computing device may operate in a networked environment supporting connections to one or more remote computers such as terminals also referred to as client devices . The terminals may be personal computers mobile devices laptop computers tablets or servers that include many or all of the elements described above with respect to the generic computing device or . The network connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. When used in a LAN networking environment computing device may be connected to the LAN through a network interface or adapter . When used in a WAN networking environment computing device may include a modem or other wide area network interface for establishing communications over the WAN such as computer network e.g. the Internet . It will be appreciated that the network connections shown are illustrative and other means of establishing a communications link between the computers may be used. Computing device and or terminals may also be mobile terminals e.g. mobile phones smartphones PDAs notebooks etc. including various other components such as a battery speaker and antennas not shown .

Aspects described herein may also be operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of other computing systems environments and or configurations that may be suitable for use with aspects described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

As shown in one or more client devices may be in communication with one or more servers generally referred to herein as server s . In one embodiment the computing environment may include a network appliance installed between the server s and client machine s . The network appliance may manage client server connections and in some cases can load balance client connections amongst a plurality of backend servers .

The client machine s may in some embodiments be referred to as a single client machine or a single group of client machines while server s may be referred to as a single server or a single group of servers . In one embodiment a single client machine communicates with more than one server while in another embodiment a single server communicates with more than one client machine . In yet another embodiment a single client machine communicates with a single server .

A client machine can in some embodiments be referenced by any one of the following non exhaustive terms client machine s client s client computer s client device s client computing device s local machine remote machine client node s endpoint s or endpoint node s . The server in some embodiments may be referenced by any one of the following non exhaustive terms server s local machine remote machine server farm s or host computing device s .

In one embodiment the client machine may be a virtual machine. The virtual machine may be any virtual machine while in some embodiments the virtual machine may be any virtual machine managed by a Type 1 or Type 2 hypervisor for example a hypervisor developed by Citrix Systems IBM VMware or any other hypervisor. In some aspects the virtual machine may be managed by a hypervisor while in aspects the virtual machine may be managed by a hypervisor executing on a server or a hypervisor executing on a client .

Some embodiments include a client device that displays application output generated by an application remotely executing on a server or other remotely located machine. In these embodiments the client device may execute a virtual machine receiver program or application to display the output in an application window a browser or other output window. In one example the application is a desktop while in other examples the application is an application that generates or presents a desktop. A desktop may include a graphical shell providing a user interface for an instance of an operating system in which local and or remote applications can be integrated. Applications as used herein are programs that execute after an instance of an operating system and optionally also the desktop has been loaded.

The server in some embodiments uses a remote presentation protocol or other program to send data to a thin client or remote display application executing on the client to present display output generated by an application executing on the server . The thin client or remote display protocol can be any one of the following non exhaustive list of protocols the Independent Computing Architecture ICA protocol developed by Citrix Systems Inc. of Ft. Lauderdale Fla. or the Remote Desktop Protocol RDP manufactured by the Microsoft Corporation of Redmond Wash.

A remote computing environment may include more than one server such that the servers are logically grouped together into a server farm for example in a cloud computing environment. The server farm may include servers that are geographically dispersed while and logically grouped together or servers that are located proximate to each other while logically grouped together. Geographically dispersed servers within a server farm can in some embodiments communicate using a WAN wide MAN metropolitan or LAN local where different geographic regions can be characterized as different continents different regions of a continent different countries different states different cities different campuses different rooms or any combination of the preceding geographical locations. In some embodiments the server farm may be administered as a single entity while in other embodiments the server farm can include multiple server farms.

In some embodiments a server farm may include servers that execute a substantially similar type of operating system platform e.g. WINDOWS UNIX LINUX iOS ANDROID SYMBIAN etc. In other embodiments server farm may include a first group of one or more servers that execute a first type of operating system platform and a second group of one or more servers that execute a second type of operating system platform.

Server may be configured as any type of server as needed e.g. a file server an application server a web server a proxy server an appliance a network appliance a gateway an application gateway a gateway server a virtualization server a deployment server a SSL VPN server a firewall a web server an application server or as a master application server a server executing an active directory or a server executing an application acceleration program that provides firewall functionality application functionality or load balancing functionality. Other server types may also be used.

Some embodiments include a first server that receives requests from a client machine forwards the request to a second server and responds to the request generated by the client machine with a response from the second server . First server may acquire an enumeration of applications available to the client machine and well as address information associated with an application server hosting an application identified within the enumeration of applications. First server can then present a response to the client s request using a web interface and communicate directly with the client to provide the client with access to an identified application. One or more clients and or one or more servers may transmit data over network e.g. network .

With further reference to a computer device may be configured as a virtualization server in a virtualization environment for example a single server multi server or cloud computing environment. Virtualization server illustrated in can be deployed as and or implemented by one or more embodiments of the server illustrated in or by other known computing devices. Included in virtualization server is a hardware layer that can include one or more physical disks one or more physical devices one or more physical processors and one or more physical memories . In some embodiments firmware can be stored within a memory element in the physical memory and can be executed by one or more of the physical processors . Virtualization server may further include an operating system that may be stored in a memory element in the physical memory and executed by one or more of the physical processors . Still further a hypervisor may be stored in a memory element in the physical memory and can be executed by one or more of the physical processors .

Executing on one or more of the physical processors may be one or more virtual machines A C generally . Each virtual machine may have a virtual disk A C and a virtual processor A C. In some embodiments a first virtual machine A may execute using a virtual processor A a control program that includes a tools stack . Control program may be referred to as a control virtual machine Dom Domain or other virtual machine used for system administration and or control. In some embodiments one or more virtual machines B C can execute using a virtual processor B C a guest operating system A B.

Virtualization server may include a hardware layer with one or more pieces of hardware that communicate with the virtualization server . In some embodiments the hardware layer can include one or more physical disks one or more physical devices one or more physical processors and one or more memory . Physical components and may include for example any of the components described above. Physical devices may include for example a network interface card a video card a keyboard a mouse an input device a monitor a display device speakers an optical drive a storage device a universal serial bus connection a printer a scanner a network element e.g. router firewall network address translator load balancer virtual private network VPN gateway Dynamic Host Configuration Protocol DHCP router etc. or any device connected to or communicating with virtualization server . Physical memory in the hardware layer may include any type of memory. Physical memory may store data and in some embodiments may store one or more programs or set of executable instructions. illustrates an embodiment where firmware is stored within the physical memory of virtualization server . Programs or executable instructions stored in the physical memory can be executed by the one or more processors of virtualization server .

Virtualization server may also include a hypervisor . In some embodiments hypervisor may be a program executed by processors on virtualization server to create and manage any number of virtual machines . Hypervisor may be referred to as a virtual machine monitor or platform virtualization software. In some embodiments hypervisor can be any combination of executable instructions and hardware that monitors virtual machines executing on a computing machine. Hypervisor may be Type 2 hypervisor where the hypervisor that executes within an operating system executing on the virtualization server . Virtual machines then execute at a level above the hypervisor. In some embodiments the Type 2 hypervisor executes within the context of a user s operating system such that the Type 2 hypervisor interacts with the user s operating system. In other embodiments one or more virtualization servers in a virtualization environment may instead include a Type 1 hypervisor not shown . A Type 1 hypervisor may execute on the virtualization server by directly accessing the hardware and resources within the hardware layer . That is while a Type 2 hypervisor accesses system resources through a host operating system as shown a Type 1 hypervisor may directly access all system resources without the host operating system . A Type 1 hypervisor may execute directly on one or more physical processors of virtualization server and may include program data stored in the physical memory .

Hypervisor in some embodiments can provide virtual resources to operating systems or control programs executing on virtual machines in any manner that simulates the operating systems or control programs having direct access to system resources. System resources can include but are not limited to physical devices physical disks physical processors physical memory and any other component included in virtualization server hardware layer . Hypervisor may be used to emulate virtual hardware partition physical hardware virtualize physical hardware and or execute virtual machines that provide access to computing environments. In still other embodiments hypervisor controls processor scheduling and memory partitioning for a virtual machine executing on virtualization server . Hypervisor may include those manufactured by VMWare Inc. of Palo Alto Calif. the XEN hypervisor an open source product whose development is overseen by the open source Xen.org community HyperV VirtualServer or virtual PC hypervisors provided by Microsoft or others. In some embodiments virtualization server executes a hypervisor that creates a virtual machine platform on which guest operating systems may execute. In these embodiments the virtualization server may be referred to as a host server. An example of such a virtualization server is the XEN SERVER provided by Citrix Systems Inc. of Fort Lauderdale Fla.

Hypervisor may create one or more virtual machines B C generally in which guest operating systems execute. In some embodiments hypervisor may load a virtual machine image to create a virtual machine . In other embodiments the hypervisor may executes a guest operating system within virtual machine . In still other embodiments virtual machine may execute guest operating system .

In addition to creating virtual machines hypervisor may control the execution of at least one virtual machine . In other embodiments hypervisor may presents at least one virtual machine with an abstraction of at least one hardware resource provided by the virtualization server e.g. any hardware resource available within the hardware layer . In other embodiments hypervisor may control the manner in which virtual machines access physical processors available in virtualization server . Controlling access to physical processors may include determining whether a virtual machine should have access to a processor and how physical processor capabilities are presented to the virtual machine .

As shown in virtualization server may host or execute one or more virtual machines . A virtual machine is a set of executable instructions that when executed by a processor imitate the operation of a physical computer such that the virtual machine can execute programs and processes much like a physical computing device. While illustrates an embodiment where a virtualization server hosts three virtual machines in other embodiments virtualization server can host any number of virtual machines . Hypervisor in some embodiments provides each virtual machine with a unique virtual view of the physical hardware memory processor and other system resources available to that virtual machine . In some embodiments the unique virtual view can be based on one or more of virtual machine permissions application of a policy engine to one or more virtual machine identifiers a user accessing a virtual machine the applications executing on a virtual machine networks accessed by a virtual machine or any other desired criteria. For instance hypervisor may create one or more unsecure virtual machines and one or more secure virtual machines . Unsecure virtual machines may be prevented from accessing resources hardware memory locations and programs that secure virtual machines may be permitted to access. In other embodiments hypervisor may provide each virtual machine with a substantially similar virtual view of the physical hardware memory processor and other system resources available to the virtual machines .

Each virtual machine may include a virtual disk A C generally and a virtual processor A C generally . The virtual disk in some embodiments is a virtualized view of one or more physical disks of the virtualization server or a portion of one or more physical disks of the virtualization server . The virtualized view of the physical disks can be generated provided and managed by the hypervisor . In some embodiments hypervisor provides each virtual machine with a unique view of the physical disks . Thus in these embodiments the particular virtual disk included in each virtual machine can be unique when compared with the other virtual disks .

A virtual processor can be a virtualized view of one or more physical processors of the virtualization server . In some embodiments the virtualized view of the physical processors can be generated provided and managed by hypervisor . In some embodiments virtual processor has substantially all of the same characteristics of at least one physical processor . In other embodiments virtual processor provides a modified view of physical processors such that at least some of the characteristics of the virtual processor are different than the characteristics of the corresponding physical processor .

With further reference to some aspects described herein may be implemented in a cloud based environment. illustrates an example of a cloud computing environment or cloud system . As seen in client computers may communicate with a cloud management server to access the computing resources e.g. host servers storage resources and network resources of the cloud system.

Management server may be implemented on one or more physical servers. The management server may run for example CLOUDSTACK by Citrix Systems Inc. of Ft. Lauderdale Fla. or OPENSTACK among others. Management server may manage various computing resources including cloud hardware and software resources for example host computers data storage devices and networking devices . The cloud hardware and software resources may include private and or public components. For example a cloud may be configured as a private cloud to be used by one or more particular customers or client computers and or over a private network. In other embodiments public clouds or hybrid public private clouds may be used by other customers over an open or hybrid networks.

Management server may be configured to provide user interfaces through which cloud operators and cloud customers may interact with the cloud system. For example the management server may provide a set of APIs and or one or more cloud operator console applications e.g. web based on standalone applications with user interfaces to allow cloud operators to manage the cloud resources configure the virtualization layer manage customer accounts and perform other cloud administration tasks. The management server also may include a set of APIs and or one or more customer console applications with user interfaces configured to receive cloud computing requests from end users via client computers for example requests to create modify or destroy virtual machines within the cloud. Client computers may connect to management server via the Internet or other communication network and may request access to one or more of the computing resources managed by management server . In response to client requests the management server may include a resource manager configured to select and provision physical resources in the hardware layer of the cloud system based on the client requests. For example the management server and additional components of the cloud system may be configured to provision create and manage virtual machines and their operating environments e.g. hypervisors storage resources services offered by the network elements etc. for customers at client computers over a network e.g. the Internet providing customers with computational resources data storage services networking capabilities and computer platform and application support. Cloud systems also may be configured to provide various specific services including security systems development environments user interfaces and the like.

Certain clients may be related for example different client computers creating virtual machines on behalf of the same end user or different users affiliated with the same company or organization. In other examples certain clients may be unrelated such as users affiliated with different companies or organizations. For unrelated clients information on the virtual machines or storage of any one user may be hidden from other users.

Referring now to the physical hardware layer of a cloud computing environment availability zones or zones may refer to a collocated set of physical computing resources. Zones may be geographically separated from other zones in the overall cloud of computing resources. For example zone may be a first cloud datacenter located in California and zone may be a second cloud datacenter located in Florida. Management sever may be located at one of the availability zones or at a separate location. Each zone may include an internal network that interfaces with devices that are outside of the zone such as the management server through a gateway. End users of the cloud e.g. clients might or might not be aware of the distinctions between zones. For example an end user may request the creation of a virtual machine having a specified amount of memory processing power and network capabilities. The management server may respond to the user s request and may allocate the resources to create the virtual machine without the user knowing whether the virtual machine was created using resources from zone or zone . In other examples the cloud system may allow end users to request that virtual machines or other cloud resources are allocated in a specific zone or on specific resources within a zone.

In this example each zone may include an arrangement of various physical hardware components or computing resources for example physical hosting resources or processing resources physical network resources physical storage resources switches and additional hardware resources that may be used to provide cloud computing services to customers. The physical hosting resources in a cloud zone may include one or more computer servers such as the virtualization servers described above which may be configured to create and host virtual machine instances. The physical network resources in a cloud zone or may include one or more network elements e.g. network service providers comprising hardware and or software configured to provide a network service to cloud customers such as firewalls network address translators load balancers virtual private network VPN gateways Dynamic Host Configuration Protocol DHCP routers and the like. The storage resources in the cloud zone may include storage disks e.g. solid state drives SSDs magnetic hard disks etc. and other storage devices.

The example cloud computing environment shown in also may include a virtualization layer e.g. as shown in with additional hardware and or software resources configured to create and manage virtual machines and provide other services to customers using the physical resources in the cloud. The virtualization layer may include hypervisors as described above in along with other components to provide network virtualizations storage virtualizations etc. The virtualization layer may be as a separate layer from the physical resource layer or may share some or all of the same hardware and or software resources with the physical resource layer. For example the virtualization layer may include a hypervisor installed in each of the virtualization servers with the physical computing resources. Known cloud systems may alternatively be used e.g. WINDOWS AZURE Microsoft Corporation of Redmond Wash. AMAZON EC2 Amazon.com Inc. of Seattle Wash. IBM BLUE CLOUD IBM Corporation of Armonk N.Y. or others.

In some embodiments the operating system of the mobile device may be separated into a managed partition and an unmanaged partition . The managed partition may have policies applied to it to secure the applications running on and data stored in the managed partition. The applications running on the managed partition may be secure applications. In other embodiments all applications may execute in accordance with a set of one or more policy files received separate from the application and which define one or more security parameters features resource restrictions and or other access controls that are enforced by the mobile device management system when that application is executing on the device. By operating in accordance with their respective policy file s each application may be allowed or restricted from communications with one or more other applications and or resources thereby creating a virtual partition. Thus as used herein a partition may refer to a physically partitioned portion of memory physical partition a logically partitioned portion of memory logical partition and or a virtual partition created as a result of enforcement of one or more policies and or policy files across multiple apps as described herein virtual partition . Stated differently by enforcing policies on managed apps those apps may be restricted to only be able to communicate with other managed apps and trusted enterprise resources thereby creating a virtual partition that is impenetrable by unmanaged apps and devices.

The secure applications may be email applications web browsing applications software as a service SaaS access applications Windows Application access applications and the like. The secure applications may be secure native applications secure remote applications executed by a secure application launcher virtualization applications executed by a secure application launcher and the like. The secure native applications may be wrapped by a secure application wrapper . The secure application wrapper may include integrated policies that are executed on the mobile device when the secure native application is executed on the device. The secure application wrapper may include meta data that points the secure native application running on the mobile device to the resources hosted at the enterprise that the secure native application may require to complete the task requested upon execution of the secure native application . The secure remote applications executed by a secure application launcher may be executed within the secure application launcher application . The virtualization applications executed by a secure application launcher may utilize resources on the mobile device at the enterprise resources and the like. The resources used on the mobile device by the virtualization applications executed by a secure application launcher may include user interaction resources processing resources and the like. The user interaction resources may be used to collect and transmit keyboard input mouse input camera input tactile input audio input visual input gesture input and the like. The processing resources may be used to present a user interface process data received from the enterprise resources and the like. The resources used at the enterprise resources by the virtualization applications executed by a secure application launcher may include user interface generation resources processing resources and the like. The user interface generation resources may be used to assemble a user interface modify a user interface refresh a user interface and the like. The processing resources may be used to create information read information update information delete information and the like. For example the virtualization application may record user interactions associated with a GUI and communicate them to a server application where the server application will use the user interaction data as an input to the application operating on the server. In this arrangement an enterprise may elect to maintain the application on the server side as well as data files etc. associated with the application. While an enterprise may elect to mobilize some applications in accordance with the principles herein by securing them for deployment on the mobile device this arrangement may also be elected for certain applications. For example while some applications may be secured for use on the mobile device others might not be prepared or appropriate for deployment on the mobile device so the enterprise may elect to provide the mobile user access to the unprepared applications through virtualization techniques. As another example the enterprise may have large complex applications with large and complex data sets e.g. material resource planning applications where it would be very difficult or otherwise undesirable to customize the application for the mobile device so the enterprise may elect to provide access to the application through virtualization techniques. As yet another example the enterprise may have an application that maintains highly secured data e.g. human resources data customer data engineering data that may be deemed by the enterprise as too sensitive for even the secured mobile environment so the enterprise may elect to use virtualization techniques to permit mobile access to such applications and data. An enterprise may elect to provide both fully secured and fully functional applications on the mobile device as well as a virtualization application to allow access to applications that are deemed more properly operated on the server side. In an embodiment the virtualization application may store some data files etc. on the mobile phone in one of the secure storage locations. An enterprise for example may elect to allow certain information to be stored on the phone while not permitting other information.

In connection with the virtualization application as described herein the mobile device may have a virtualization application that is designed to present GUI s and then record user interactions with the GUI. The application may communicate the user interactions to the server side to be used by the server side application as user interactions with the application. In response the application on the server side may transmit back to the mobile device a new GUI. For example the new GUI may be a static page a dynamic page an animation or the like thereby providing access to remotely located resources.

The secure applications may access data stored in a secure data container in the managed partition of the mobile device. The data secured in the secure data container may be accessed by the secure wrapped applications applications executed by a secure application launcher virtualization applications executed by a secure application launcher and the like. The data stored in the secure data container may include files databases and the like. The data stored in the secure data container may include data restricted to a specific secure application shared among secure applications and the like. Data restricted to a secure application may include secure general data and highly secure data . Secure general data may use a strong form of encryption such as AES 128 bit encryption or the like while highly secure data may use a very strong form of encryption such as AES 256 bit encryption. Data stored in the secure data container may be deleted from the device upon receipt of a command from the device manager . The secure applications may have a dual mode option . The dual mode option may present the user with an option to operate the secured application in an unsecured or unmanaged mode. In an unsecured or unmanaged mode the secure applications may access data stored in an unsecured data container on the unmanaged partition of the mobile device . The data stored in an unsecured data container may be personal data . The data stored in an unsecured data container may also be accessed by unsecured applications that are running on the unmanaged partition of the mobile device . The data stored in an unsecured data container may remain on the mobile device when the data stored in the secure data container is deleted from the mobile device . An enterprise may want to delete from the mobile device selected or all data files and or applications owned licensed or controlled by the enterprise enterprise data while leaving or otherwise preserving personal data files and or applications owned licensed or controlled by the user personal data . This operation may be referred to as a selective wipe. With the enterprise and personal data arranged in accordance to the aspects described herein an enterprise may perform a selective wipe.

The mobile device may connect to enterprise resources and enterprise services at an enterprise to the public Internet and the like. The mobile device may connect to enterprise resources and enterprise services through virtual private network connections. The virtual private network connections also referred to as microVPN or application specific VPN may be specific to particular applications particular devices particular secured areas on the mobile device and the like . For example each of the wrapped applications in the secured area of the phone may access enterprise resources through an application specific VPN such that access to the VPN would be granted based on attributes associated with the application possibly in conjunction with user or device attribute information. The virtual private network connections may carry Microsoft Exchange traffic Microsoft Active Directory traffic HTTP traffic HTTPS traffic application management traffic and the like. The virtual private network connections may support and enable single sign on authentication processes . The single sign on processes may allow a user to provide a single set of authentication credentials which are then verified by an authentication service . The authentication service may then grant to the user access to multiple enterprise resources without requiring the user to provide authentication credentials to each individual enterprise resource .

The virtual private network connections may be established and managed by an access gateway . The access gateway may include performance enhancement features that manage accelerate and improve the delivery of enterprise resources to the mobile device . The access gateway may also re route traffic from the mobile device to the public Internet enabling the mobile device to access publicly available and unsecured applications that run on the public Internet . The mobile device may connect to the access gateway via a transport network . The transport network may be a wired network wireless network cloud network local area network metropolitan area network wide area network public network private network and the like.

The enterprise resources may include email servers file sharing servers SaaS applications Web application servers Windows application servers and the like. Email servers may include Exchange servers Lotus Notes servers and the like. File sharing servers may include ShareFile servers and the like. SaaS applications may include Salesforce and the like. Windows application servers may include any application server that is built to provide applications that are intended to run on a local Windows operating system and the like. The enterprise resources may be premise based resources cloud based resources and the like. The enterprise resources may be accessed by the mobile device directly or through the access gateway . The enterprise resources may be accessed by the mobile device via a transport network . The transport network may be a wired network wireless network cloud network local area network metropolitan area network wide area network public network private network and the like.

The enterprise services may include authentication services threat detection services device manager services file sharing services policy manager services social integration services application controller services and the like. Authentication services may include user authentication services device authentication services application authentication services data authentication services and the like. Authentication services may use certificates. The certificates may be stored on the mobile device by the enterprise resources and the like. The certificates stored on the mobile device may be stored in an encrypted location on the mobile device the certificate may be temporarily stored on the mobile device for use at the time of authentication and the like. Threat detection services may include intrusion detection services unauthorized access attempt detection services and the like. Unauthorized access attempt detection services may include unauthorized attempts to access devices applications data and the like. Device management services may include configuration provisioning security support monitoring reporting and decommissioning services. File sharing services may include file management services file storage services file collaboration services and the like. Policy manager services may include device policy manager services application policy manager services data policy manager services and the like. Social integration services may include contact integration services collaboration services integration with social networks such as Facebook Twitter and LinkedIn and the like. Application controller services may include management services provisioning services deployment services assignment services revocation services wrapping services and the like.

The enterprise mobility technical architecture may include an application store . The application store may include unwrapped applications pre wrapped applications and the like. Applications may be populated in the application store from the application controller . The application store may be accessed by the mobile device through the access gateway through the public Internet or the like. The application store may be provided with an intuitive and easy to use User Interface.

A software development kit may provide a user the capability to secure applications selected by the user by wrapping the application as described previously in this description. An application that has been wrapped using the software development kit may then be made available to the mobile device by populating it in the application store using the application controller .

The enterprise mobility technical architecture may include a management and analytics capability . The management and analytics capability may provide information related to how resources are used how often resources are used and the like. Resources may include devices applications data and the like. How resources are used may include which devices download which applications which applications access which data and the like. How often resources are used may include how often an application has been downloaded how many times a specific set of data has been accessed by an application and the like.

In this case the left hand side represents an enrolled mobile device with a client agent which interacts with gateway server which includes access gateway and application controller functionality to access various enterprise resources and services such as Exchange Sharepoint PKI Resources Kerberos Resources Certificate Issuance service as shown on the right hand side above. Although not specifically shown the mobile device may also interact with an enterprise application store StoreFront for the selection and downloading of applications.

The client agent acts as the UI user interface intermediary for Windows apps desktops hosted in an Enterprise data center which are accessed using the HDX ICA display remoting protocol. The client agent also supports the installation and management of native applications on the mobile device such as native iOS or Android applications. For example the managed applications mail browser wrapped application secure container to which a VPN such as an application specific policy controller VPN can connect to shown in the figure above are all native applications that execute locally on the device. Client agent and application management framework of this architecture act to provide policy driven management capabilities and features such as connectivity and SSO single sign on to enterprise resources services . The client agent handles primary user authentication to the enterprise normally to access gateway AG with SSO to other gateway server components. The client agent obtains policies from gateway server to control the behavior of the managed applications on the mobile device .

The Secure IPC links between the native applications and client agent represent a management channel which allows client agent to supply policies to be enforced by the application management framework wrapping each application. The IPC channel also allows client agent to supply credential and authentication information that enables connectivity and SSO to enterprise resources . Finally the IPC channel allows the application management framework to invoke user interface functions implemented by client agent such as online and offline authentication.

Communications between the client agent and gateway server are essentially an extension of the management channel from the application management framework wrapping each native managed application . The application management framework requests policy information from client agent which in turn requests it from gateway server . The application management framework requests authentication and client agent logs into the gateway services part of gateway server e.g. NetScaler access gateway . Client agent may also call supporting services on gateway server which may produce input material to derive encryption keys for the local data vaults or provide client certificates which may enable direct authentication to PKI protected resources as more fully explained below.

In more detail the application management framework wraps each managed application . This may be incorporated via an explicit build step or via a post build processing step. The application management framework may pair with client agent on first launch of an application to initialize the Secure IPC channel and obtain the policy for that application. The application management framework may enforce relevant portions of the policy that apply locally such as the client agent login dependencies and some of the containment policies that restrict how local OS services may be used or how they may interact with the application .

The application management framework may use services provided by client agent over the Secure IPC channel to facilitate authentication and internal network access. Key management for the private and shared data vaults containers may be also managed by appropriate interactions between the managed applications and client agent . Vaults may be available only after online authentication or may be made available after offline authentication if allowed by policy. First use of vaults may require online authentication and offline access may be limited to at most the policy refresh period before online authentication is again required.

Network access to internal resources may occur directly from individual managed applications through access gateway . The application management framework is responsible for orchestrating the network access on behalf of each application . Client agent may facilitate these network connections by providing suitable time limited secondary credentials obtained following online authentication. Multiple modes of network connection may be used such as reverse web proxy connections and end to end VPN style tunnels .

The Mail and Browser managed applications have special status and may make use of facilities that might not be generally available to arbitrary wrapped applications. For example the Mail application may use a special background network access mechanism that allows it to access Exchange over an extended period of time without requiring a full AG logon. The Browser application may use multiple private data vaults to segregate different kinds of data.

This architecture supports the incorporation of various other security features. For example gateway server including its gateway services in some cases will not need to validate AD passwords. It can be left to the discretion of an enterprise whether an AD password is used as an authentication factor for some users in some situations. Different authentication methods may be used if a user is online or offline i.e. connected or not connected to a network .

Step up authentication is a feature wherein gateway server may identify managed native applications that are allowed to have access to highly classified data requiring strong authentication and ensure that access to these applications is only permitted after performing appropriate authentication even if this means a re authentication is required by the user after a prior weaker level of login.

Another security feature of this solution is the encryption of the data vaults containers on the mobile device . The vaults may be encrypted so that all on device data including files databases and configurations are protected. For on line vaults the keys may be stored on the server gateway server and for off line vaults a local copy of the keys may be protected by a user password or biometric validation. When data is stored locally on the device in the secure container it is preferred that a minimum of AES 256 encryption algorithm be utilized.

Other secure container features may also be implemented. For example a logging feature may be included wherein all security events happening inside an application are logged and reported to the backend. Data wiping may be supported such as if the application detects tampering associated encryption keys may be written over with random data leaving no hint on the file system that user data was destroyed. Screenshot protection is another feature where an application may prevent any data from being stored in screenshots. For example the key window s hidden property may be set to YES. This may cause whatever content is currently displayed on the screen to be hidden resulting in a blank screenshot where any content would normally reside.

Local data transfer may be prevented such as by preventing any data from being locally transferred outside the application container e.g. by copying it or sending it to an external application. A keyboard cache feature may operate to disable the autocorrect functionality for sensitive text fields. SSL certificate validation may be operable so the application specifically validates the server SSL certificate instead of it being stored in the keychain. An encryption key generation feature may be used such that the key used to encrypt data on the device is generated using a passphrase or biometric data supplied by the user if offline access is required . It may be XORed with another key randomly generated and stored on the server side if offline access is not required. Key Derivation functions may operate such that keys generated from the user password use KDFs key derivation functions notably PBKDF2 rather than creating a cryptographic hash of it. The latter makes a key susceptible to brute force or dictionary attacks.

Further one or more initialization vectors may be used in encryption methods. An initialization vector will cause multiple copies of the same encrypted data to yield different cipher text output preventing both replay and cryptanalytic attacks. This will also prevent an attacker from decrypting any data even with a stolen encryption key if the specific initialization vector used to encrypt the data is not known. Further authentication then decryption may be used wherein application data is decrypted only after the user has authenticated within the application. Another feature may relate to sensitive data in memory which may be kept in memory and not in disk only when it s needed. For example login credentials may be wiped from memory after login and encryption keys and other data inside objective C instance variables are not stored as they may be easily referenced. Instead memory may be manually allocated for these.

An inactivity timeout may be implemented wherein after a policy defined period of inactivity a user session is terminated.

Data leakage from the application management framework may be prevented in other ways. For example when an application is put in the background the memory may be cleared after a predetermined configurable time period. When backgrounded a snapshot may be taken of the last displayed screen of the application to fasten the foregrounding process. The screenshot may contain confidential data and hence should be cleared.

Another security feature relates to the use of an OTP one time password without the use of an AD active directory password for access to one or more applications. In some cases some users do not know or are not permitted to know their AD password so these users may authenticate using an OTP such as by using a hardware OTP system like SecurID OTPs may be provided by different vendors also such as Entrust or Gemalto . In some cases after a user authenticates with a user ID a text is sent to the user with an OTP . In some cases this may be implemented only for online use with a prompt being a single field.

An offline password may be implemented for offline authentication for those applications for which offline use is permitted via enterprise policy. For example an enterprise may want an enterprise application to be accessed in this manner. In this case the client agent may require the user to set a custom offline password and the AD password is not used. Gateway server may provide policies to control and enforce password standards with respect to the minimum length character class composition and age of passwords such as described by the standard Windows Server password complexity requirements although these requirements may be modified.

Another feature relates to the enablement of a client side certificate for certain applications as secondary credentials for the purpose of accessing PKI protected web resources via the application management framework micro VPN feature . For example an application may utilize such a certificate. In this case certificate based authentication using ActiveSync protocol may be supported wherein a certificate from the client agent may be retrieved by gateway server and used in a keychain. Each managed application may have one associated client certificate identified by a label that is defined in gateway server .

Gateway server may interact with an Enterprise special purpose web service to support the issuance of client certificates to allow relevant managed applications to authenticate to internal PKI protected resources.

The client agent and the application management framework may be enhanced to support obtaining and using client certificates for authentication to internal PKI protected network resources. More than one certificate may be supported such as to match various levels of security and or separation requirements. The certificates may be used by the Mail and Browser managed applications and ultimately by arbitrary wrapped applications provided those applications use web service style communication patterns where it is reasonable for the application management framework to mediate https requests .

Application management client certificate support on iOS may rely on importing a PKCS BLOB Binary Large Object into the iOS keychain in each managed application for each period of use. Application management framework client certificate support may use a HTTPS implementation with private in memory key storage. The client certificate will never be present in the iOS keychain and will not be persisted except potentially in online only data value that is strongly protected.

Mutual SSL may also be implemented to provide additional security by requiring that a mobile device is authenticated to the enterprise and vice versa. Virtual smart cards for authentication to gateway server may also be implemented.

Both limited and full Kerberos support may be additional features. The full support feature relates to an ability to do full Kerberos login to Active Directory AD using an AD password or trusted client certificate and obtain Kerberos service tickets to respond to HTTP Negotiate authentication challenges. The limited support feature relates to constrained delegation in AFEE where AFEE supports invoking Kerberos protocol transition so it can obtain and use Kerberos service tickets subject to constrained delegation in response to HTTP Negotiate authentication challenges. This mechanism works in reverse web proxy aka CVPN mode and when http but not https connections are proxied in VPN and MicroVPN mode.

Another feature relates to application container locking and wiping which may automatically occur upon jail break or rooting detections and occur as a pushed command from administration console and may include a remote wipe functionality even when an application is not running.

A multi site architecture or configuration of enterprise application store and an application controller may be supported that allows users to be service from one of several different locations in case of failure.

In some cases managed applications may be allowed to access a certificate and private key via an API example OpenSSL . Trusted managed applications of an enterprise may be allowed to perform specific Public Key operations with an application s client certificate and private key. Various use cases may be identified and treated accordingly such as when an application behaves like a browser and no certificate access is required when an application reads a certificate for who am I when an application uses the certificate to build a secure session token and when an application uses private keys for digital signing of important data e.g. transaction log or for temporary data encryption.

Many mobile resource management MRM solutions also referred to herein as EMM MDM and MAM each of which may include MRM may face the challenge of managing applications and their associated policies via a common control point managed by corporate information technology IT administrators. The actual policies that are available for any particular managed mobile application can vary greatly. Factors such as the particular MRM solution software version the specific version of MRM tools or SDK used to prepare the application and the application logic itself can all influence which policies and settings are available for IT administrators to configure and control.

Applications themselves can be developed and deployed quickly and updated frequently. As such it is recognized that efficiencies can be gained by decoupling the policies from the underlying control point in such a way that the policy settings themselves as well as the administrative user interface U I for configuring them need not be hardwired into the control point server software. Without this decoupling the control point software would need to be upgraded every time a new application policy setting was needed.

An improved technique ensures that a wide range of policies including application specific policies and settings can be composed configured through an administrative interface and delivered to the deployed applications without requiring changes to control point software.

Enterprises may create or adapt their native mobile applications using tools and SDKs associated with the MRM solution they have chosen to deploy. Depending upon the tools or SDK version used to prepare such applications one can expect that there will be a default set of policies that the MRM system provides automatically. These default policies can be further augmented by an application developer defining their own application specific policies and settings.

All policies and settings may be defined using a declarative syntax metadata that in some variations may include the various elements associated with each setting. In an example the metadata is provided in the form of an XML Extensible Markup Language document that defines individual elements listed for each setting. For example to define the beginning and end of a policy file an XML document may use the tags and respectively. The collection of policy setting may be between section tags and . Each policy setting may include elements such as the following 

The various setting group or category identifiers that are available for each policy setting may defined using special and tags and the collection of setting group or category identifiers may be included between and tags. The collection of setting group identifiers and the collection of settings may be included between the and tags. Accordingly an XML document that defines a policy may take the general form similar to the following nested arrangement of XML tags with comments in 

At step the one or more computing device may receive initial policy settings or other data for inclusion in a policy. For example application preparation tools may assemble one or more policies also referred herein interchangeably as policy metadata setting descriptions and the like including for example a set of default MRM system provided policies which may also include one or more application specific policies or settings provided by the application developer. Such policies or settings may be packaged directly into the application bundle that will be uploaded to the computing device configured to perform the method of e.g. a control point access gateway of or the like .

When a managed application is uploaded e.g for the purpose of publishing the application for enterprise users to consume the one or more computing devices may proceed to finalize configuration of the policy for the managed application as illustrated in steps of .

At step the one or more computing devices may create or otherwise display a user interface UI to display various portions of the initial policy settings. For example upon uploading of the managed application the one or more computing devices may read the initial policy settings or any other metadata associated with or packaged with the application and may dynamically compose an administrative user interface for all setting descriptions policy metadata etc. Further details related to the user interface will be discussed below in connection with

At step the one or more computing device may receive input via the user interface to set change and or add to one or more of the initial policy settings. For example the IT administrator or other user that for example has admin privileges may interact with the various controls of the user interface to perform various actions to set or change a policy including for example choosing modifying entering or creating settings that are appropriate for the managed application or leaving preexisting settings set to the current or default value.

At step the one or more computing devices may determine to produce one or more published versions of the policy. In some variations the determination may be made responsive to input that is received via the user interface from the IT administrator or other user . Such input may for example represent an acceptance of the policy for the managed application or a command to publish the policy.

Additionally the user interface may be configured to allow the IT administrator or other user to create multiple policies from the policy settings. Each policy may for example be specific to a different user role associated with the enterprise e.g. one policy for a sales employee a different policy for a designer etc. or application group e.g. a managed application may be assigned to an application group that provides various constraints or benefits to member applications such as shared access to data stored in data containers or the like .

At step the one or more computing devices may produce one or more policy files for the managed application. For example after the IT administrator or other user approves the policy for publishing distribution to one or more mobile devices a JSON JavaScript Object Notation or XML dictionary of key value pairs representing each defined setting name dictionary name and its assigned value may be produced. In some environments the settings of the policy file represent the corporate policy that should be enforced in order to access resources that are accessible via the access gateway or to execute the managed application.

As discussed above the user interface may be configured to allow the IT administrator or other user to create multiple policies from the policy settings. Accordingly multiple policies may be produced with each policy being specific to a different user role associated with the enterprise e.g. one policy for a sales employee a different policy for a designer etc. or application group e.g. a managed application may be assigned to an application group that provides various constraints or benefits to member applications such as shared access to data stored in data containers or the like .

At step the one or more computing devices may provide the managed application and the policy file available to be available for download by one or more mobile devices. For example once uploaded and configured the managed applications and any associated policy can be made available to an enterprise s employees to peruse and choose to install. In some instances the version of the application and the policy that is made available to each user can be based on their role within the organization. Alternatively such applications and policies can be pushed directly to mobile devices for users who have enrolled or registered their device with a corporate MDM server that provides such a push service.

Further in some instances distribution of the policy may be separate from distribution of the managed application. For example when an employee executes a managed application on the mobile device they may be challenged to authenticate their corporate identity along with passwords and other factors as dictated by corporate policy. After having authenticated the user and or device the access manager components of the system may verify that the user is entitled to the application in question and download the JSON or XML policy file that represent the settings that have been established by the administrator for this user or mobile device when using this specific managed application.

Transmission of the policy and managed application to the mobile device may in some variations be performed using one or more application specific VPN tunnels such as a MicroVPN discussed above .

After distribution to the user s devices and to enforce the various settings in the policy the policy file can be consulted by the application or MRM software embedded within the mobile device e.g. by the client agent of whenever a policy decision is needed at run time. In some embodiments the policy may be cached and periodically refreshed to ensure continued compliance with configured administrative settings produce a policy file for the managed application e.g. an IT administrator may update a policy by performing a method similar to that illustrated in to change delete or add to the policy . Indeed in some variations one of the policy settings may dictate a required update frequency to the policy. Alternatively the MRM system may be configured to check if an updated version of the policy exists when for example the access gateway receives an indication that the managed application is executing on the mobile device e.g. the access gateway receives a request to authenticate the user mobile device or application the access gateway receives a request to create an application specific VPN tunnel the access gateway receives a request to access a resource that is accessible through the access gateway or the like . If an update exists the MRM system may transmit the updated version of the policy to the mobile device.

In some variations transmission of an update to the policy may be performed without updating the managed application. Further the user of the mobile device may be unaware of the update to the policy.

As new versions of the EMM toolkit or SDK become available and as new applications are developed and adapted to this system the available set of policies needed by a current application mix that is installed on a mobile device can grow dramatically. However no change in control point software is needed to offer administrative control over the new settings surfaced by these newly deployed applications.

To configure one or more policies the settings included in a policy or other metadata an enterprise may provide a user interface that is usable by an operator to view create and edit the policies applications and other data related to the same. illustrate example user interfaces that can be used to configure one or more policies settings or metadata. In some embodiments the user interface may be executed by one or more computing devices such as an access gateway another server under control by an IT administrator of an enterprise or another device acting as a control point. In particular the user interface of may be usable by an operator or other user with administrator privileges. Accordingly the operator may be required to log in prior to viewing the user interface displayed in . as illustrated with an administrator being logged in as indicated at display of . While additional details for configuring a policy will be described throughout this disclosure e.g. in connection with the example user interfaces will be described for example to illustrate various settings that may comprise a policy and other data that an operator may view when an enterprise provides managed applications and policies to mobile devices.

As illustrated in an example dashboard interface is shown. The dashboard may provide a quick snapshot of user activity over a specified period of time e.g. the last 24 hours of user activity as shown at . In the illustrated embodiment the dashboard displays the total number of users that have logged in via display the number of applications or resources that have been accessed by those total number of users via display and the current number of connected user sessions via display .

After choosing one of the resource types or sub types the administrator may be presented with a listing of policies associated with that resource type. As further illustrated in the sub type Android for the application type has been selected and a number of icons are shown as being presented. Included in the icons is an icon for each policy that has been created e.g. icon and icon . While illustrates these icons as being blank they may include graphics and or text within the icon s border or surrounding the icon. Also included in the icons is an icon for creating a new policy . While the remaining portion of will be described in connection with configuring a policy for a mobile application of the Android operating system different policy settings and displays may be used for the different resource types.

As will be described in connection with each policy may also be given a category setting. The administrator may be able to filter the displayed icons by pull down selector which lists the various categories of the policies.

When an administrator selects an icon e.g. via a single click a summary window may appear that provides a few details from the policy file metadata and a few additional selectable options. For example when icon of is selected the details may include a display name for the policy which is editable at of a description for the policy which is editable at of an internal or workflow name for the policy which is editable at of a single sign on SSO type for the policy and a category for the policy which is editable at of . The additional selectable options may include an option to disable enable the policy an option to delete the policy an option to edit the policy and an option to push the policy to users devices.

If the administrator selects to edit the policy via option a mobile application details screen may be displayed in the user interface. The details screen may present an opportunity for the administrator to view and edit various settings of the policy.

When it is initially viewed the mobile application details screen may first present the settings associated with the details group for the policy e.g. setting group identifier for details settings . For example the resource name that the policy is for may be defined e.g. mobile application name setting and a short description of the resource may also be defined e.g. description . The resource type and resource version may both be viewable e.g. mobile application type and mobile application version and may have been defined when the policy was first created.

When the policy is first created the resource application that the policy is to be applied to may be analyzed to determine the default settings for the policy. For example an application can be analyzed to determine the application programming interface API calls that it performs and various settings can be included in the policy based on those API calls. As a particular example if the application makes a call to the mobile device s camera various settings to block allow access to the camera may be included in the policy. If no calls are made to the mobile device s camera setting s to block allow access to the camera may not be included in the policy.

The policy may also define various version constraints on the resource. For example illustrates a policy setting for enforcing a minimum and maximum operating system version for a mobile application at minimum OS version and maximum OS version . The policy may also exclude one or more devices from being able to access install the resource e.g. excluded devices setting . A category for the policy may be defined e.g. category setting and one of the types enumerated by pull down selector . The policy may include a user role setting to enforce a role a user must be assigned in order to access install the resource e.g. assigned role setting . The policy may also include a setting to enforce a requirement that the resource be installed on the mobile device e.g. require application installation setting . After viewing editing the various policy settings on the mobile application details screen the administrator may press the next button to save the settings of mobile application details screen to the policy file.

After pressing next button the user interface may display the settings associated with the workflow group for the policy e.g. setting group for workflow settings which is illustrated in . The settings that can be viewed edited at mobile application workflow screen include a setting that distribution of the policy to a user s device requires approval e.g. approval setting a setting specifying a workflow name for the policy e.g. workflow name and a description of the workflow e.g. description setting . After viewing editing the mobile application workflow settings the administrator may press next button to save the workflow settings of the mobile application details screen to the policy file.

After pressing next button the user interface may display the remaining policy settings e.g. policy settings which are illustrated in . Policy settings may include the remaining setting groups that are enumerated in the policy including for example a setting group for authentication settings setting group for authentication settings as illustrated in a setting group for device security settings setting group for device security settings as illustrated in a setting group for network requirement settings setting group for network requirement settings as illustrated in a setting group for miscellaneous access settings setting group for miscellaneous network access settings as illustrated in a setting group for encryption settings setting group for encryption settings as illustrated in a setting group for application interaction settings setting group for mobile application interaction settings as illustrated in a setting group for application restriction settings setting groups and for application restriction settings as illustrated in and a group for network access settings setting group for network access settings as illustrated in .

As illustrated in a policy file may include various settings defined as part of an authentication settings group identifier e.g. those illustrated in as being part of setting group .

Authentication group settings may include authentication setting which may define what level of authentication is required such as whether a networked log on with the access gateway is required before accessing the application whether offline access of the application is permitted whether access of the application can only be performed when offline or whether authentication is not required to access the application.

The policy may also specify a maximum offline period setting which specifies a time period that when exceeded by the mobile device would cause the mobile device to challenge the user for the enterprise logon before allowing access to the application. As illustrated maximum offline period setting is set for 72 hours. In some embodiments the minimum amount is 1 hour. Additionally in some arrangements where authentication setting is set to requiring a networked log on the user will be reminded that a networked log on will be required at various times before the period expires e.g. 30 minutes 10 minutes etc. and after expiration the application remains locked until the user completes a successful network log on. Alternatively if the authentication setting is set to requiring a networked log on setting may be ignored with no offline access allowed.

The policy may also specify a re authentication period setting which defines a period where when it is expired and the application is re started a user is challenged to re authenticate. In some arrangements if set to zero the user is prompted for authentication each time app is started or activated. As illustrated re authentication period setting is set for 480 minutes e.g. 8 hours . Accordingly when the application is re started after 8 hours from a previous authentication the user will be required to re authenticate e.g. supply the log on username and password .

The policy may also specify a domain name of the access gateway that the mobile device is to use when authenticating. As illustrated gateway domain name setting allows an administrator to specify a fully qualified domain name FQDN of an access gateway that will handle authentication.

As illustrated in a policy file may include various settings defined as part of a device security settings group identifier e.g. those illustrated in as being part of setting group .

Device security settings group may include a setting specifying whether to block jailbroken or rooted devices. For example block jailbroken setting if set to on the application is locked when the device is jailbroken or rooted. If setting is set to off the application can run even if the device is jailbroken or rooted.

The policy may also include a require device encryption setting . If require device encryption setting is set to on data stored on the mobile device will be encrypted e.g. in accordance with the encryption settings group as discussed below . If require device encryption setting is set to off the data stored on the mobile device is not encrypted.

The policy may also include a require device PIN personal identification number or password setting . If setting is set to on the user will be required to lock unlock the mobile device using a PIN or password. If set to off the mobile phone will not be required to be locked via a PIN or password.

The policy may also include a require device pattern screen lock setting . If setting is set to on the user will be required to lock unlock the mobile device using a pattern screen lock mechanism. If set to off the mobile phone will not be required to be locked via a pattern screen lock mechanism.

As illustrated in a policy file may include various settings defined as part of a network requirements settings group identifier e.g. those illustrated in as being part of setting group .

Network requirements setting group may include a require WiFi setting . If setting is set to on the application will be locked when the device is not connected to a WiFi network e.g. 3G 4G LAN connection etc. . If setting is set to of the application will be able to run even if the mobile device does not have an active WiFi connection.

The policy may also include a require internal network setting . If setting is set to on the application is allowed to run on the mobile device only when the mobile device is connected inside the enterprise network. If setting is set to off the application can run from an external network.

The policy may also include an internal WiFi network setting . Setting may be defined by a comma separated list of allowed internal WiFi network identifiers e.g. SSID . In some arrangements this setting applies only when connected via an internal enterprise network. For example when the mobile device is connected from inside the enterprise network application access is blocked unless the device is connected via one of the listed network identifiers. If setting is empty any internal WiFi network may be used. If logged on from an external network or not logged on this setting may not enforced.

As illustrated in a policy file may include various settings defined as part of a miscellaneous access settings group identifier e.g. those illustrated in as being part of setting group .

Miscellaneous access setting group may include an update grace period setting . Setting may define the grace period within which the application may continue to be used after the system has discovered that an update is available.

The policy may also include an authentication failure setting . Setting may define a number of consecutive failed offline password challenges that will cause the application to become locked. Once locked the application may only be unlocked through a successful network log on. In some arrangements if setting is set to zero authentication failures will never cause the application to become locked.

The policy may also include an erase application data setting . Setting may define whether application data should be deleted when the application is locked. If setting is set to on data maintained by the application may be erased when the application is locked. Erasing such data may effectively reset the application to its original installed state. If setting is set to off data maintained by the application is not erased when the app is locked. An application can be locked for various reasons such as for example loss of application entitlement for the user application subscription removed user account removed by the enterprise too many application authentication failures the mobile device being jailbroken or rooted without policy permitting application access when the device is jailbroken rooted device placed in lock state by administrative action and the like.

The policy may also include an active poll period setting . Setting defines a poll period for reaching the application controller and providing the application controller with information about the lock erase status of the mobile device and the enable disable status of the application. After a successful poll the interval may be restarted and a new poll will again be attempted upon expiration of the specified poll period.

As illustrated in a policy file may include various settings defined as part of an encryption settings group identifier e.g. those illustrated in as being part of setting group .

Encryption settings group may include an encryption keys setting to allow how encryption keys are managed. For example if setting is set to online access only data used to derive encryption keys cannot be persist on the device e.g. be stored in a long term storage . Instead such data must be recovered from the enterprise each time the encryption keys are to be derived. If setting is set to offline access permitted data used to derive encryption keys can persist on the device. In some arrangements if setting is set to online access only authentication setting is enforced to be set to network logon. 

The policy may also include a private file encryption setting that specifies a security group which can access the application s private files. This allows for different applications assigned to the specified security group to derive the keys used to encrypt decrypt the private files.

The policy may also include a private file encryption setting that specifies exclusions to databases specific locations where private files data will not be automatically encrypted.

The policy may also include a public file encryption setting that specifies a security group which can access the application s public files. This allows for different applications assigned to the specified security group to derive the keys used to encrypt decrypt the public files.

The policy may also include a public file encryption setting that specifies exclusions to databases specific locations where public files data will not be automatically encrypted.

The policy may also include a public file migration setting that specifies the access permissions that public files are assigned.

As illustrated in a policy file may include various settings defined as part of an application interaction settings group identifier e.g. those illustrated in as being part of setting group .

Application interaction setting group may include a security group setting that specifies a security group for the policy. In some arrangements when this setting is set to blank all applications can exchange data with the application. In some embodiments when this application is given one or more comma separated security group identifiers only security groups matching one of the listed identifiers will be able to exchange data with the application.

The policy may also include a cut and copy setting that for example specifies whether the application is able to perform cut and copy operations e.g. blocked or unrestricted or whether the application is only able to cut and copy operations with applications in its security group e.g. restricted . When setting is set to restricted cut or copied data is placed in a private clipboard that is only available to applications having the same security group as the application. A similar setting could be included in a policy related to paste operations.

The policy may also include a document exchange setting . Setting in some variations blocks permits or restricts document exchange operations for this application e.g. by being set to blocked unrestricted or restricted . When setting is set to restricted data can be exchanged only with other applications having the same security group as the application.

As illustrated in a policy file may include various settings defined as part of an application restriction settings group identifier e.g. those illustrated in as being part of setting group and setting group .

Application restriction settings group may include a disable diagnostic logging setting . If setting is set to on the application is unable to interact with the mobile device s diagnostic logging operations. If set to off the diagnostic logging operations are allowed to be performed for the application.

The policy may also include a block camera setting . If setting is set to on the application may be unable to access the mobile device s camera. If set to off the application may be able to access the mobile device s camera.

The policy may also include a block microphone record setting . If setting is set to on the application may be unable to record data via the mobile device s microphone. If set to off the application may be able to access record from the mobile device s microphone.

The policy may also include a block location services setting . If setting is set to on the application may be unable to access the mobile device s location services e.g. global positioning services GPS . If set to off the application may be able to access the mobile device s location services.

The policy may also include a block short messaging service SMS setting . If setting is set to on the application may be unable to access the mobile device s SMS compose function. If set to off the application may be able to access the mobile device s SMS compose function.

The policy may also include a block screen capture setting . If setting is set to on the application may be unable to access the mobile device s screen capture function. If set to off the application may be able to access the mobile device s screen capture function.

The policy may also include a block device sensor setting . If setting is set to on the application may be unable to access the mobile device s sensors e.g. acceleration orientation sensors and the like . If set to off the application may be able to access the mobile device s sensors.

As illustrated in a policy file may include various settings defined as part of a network access settings group identifier e.g. those illustrated in as being part of setting group .

Network access settings group may include a network access setting . Setting can have various values related to preventing permitting or redirecting network activity that is attempted by intended for the application. For example if setting is set to unrestricted no restrictions are placed on the network access of the application. If setting is set to blocked all network access is blocked. If setting is set to tunneled to the internal network an application specific VPN tunnel back to the access gateway may be required for all network access.

The policy may include a certificate label setting that allows for a particular certificate to be used for network access.

The policy may include an authentication support setting that specifies whether a user should be authenticated before allowing network access.

After viewing editing the various policy settings the administrator may press save button to save the policy settings to the policy file.

The above settings are meant to only be examples of the types of settings that could be included in a policy. Variations on the above settings or different settings not discussed above could be included in a policy.

For example additional types of policy settings not shown in include for example a disable e mail setting that blocks allows access to the mobile device s e mail functions a disable paste setting that blocks allows paste operations a disable print setting that blocks allows access to the mobile device s print functions a disable cloud setting that blocks allows access to the mobile device s cloud services and one or more network traffic filters.

One example of a traffic filter is an outbound traffic filter. Some applications such as iOS applications can dispatch uniform resource locator URL requests to other applications that have been registered to handle specific schemes such as http . Such an outbound traffic filter setting may provide a mechanism for an application to pass requests for help to another application. This setting serves to filter the URLs that are passed from this application to other applications. In some arrangements the value of the setting should be formatted as a comma separated list of patterns where each pattern may be preceded by a plus or minus . Outbound URLs can be compared against the patterns in the order listed until a match is found. Once matched the action taken may be dictated by the prefix. A minus prefix blocks the URL from being passed out to another application. A plus prefix permits the URL to be passed out to another application for handling. If neither or is provided with the pattern a default action may be taken e.g. allow is assumed . A pair of values separated by may indicate a substitution where occurrences of the first string are replaced with the second. The regular expression prefix may be used to require the pattern to occur at the beginning of the URL. In some embodiments if an outbound URL does not match any pattern in the list it will be blocked. A similar filter setting could be constructed for an inbound network traffic filter.

By relying on a comprehensive metadata description of all policies and settings associated with managed applications that in some instances may be embedded within the application bundle itself the administrative control point for the policies can dynamically compose user interface for these settings thereby decoupling the back end EMM server software from the specific knowledge of policies to be offered.

Further this data driven description of policy settings may simplify delivery of policy settings dynamically to an application at runtime without any middleware knowledge of the semantics of these settings.

In some embodiments an application developer may develop an application that is to be managed by one or more policies. The application developer may also produce initial policy metadata . The policy metadata may define a set of policies for controlling data flow into and or out of the managed application . In some instances the policy metadata may include a first set of policy metadata that is general to the MRM system and a second set of policy metadata that is specific to the managed application . The application developer or multiple developers may develop multiple mobile applications each with metadata general to the MRM system and with application specific metadata.

The managed application and policy metadata may be received at the MRM system e.g. received from application developer and provided to other otherwise received by the administrative UI generator . Upon receiving the managed application and policy metadata the administrative UI generator may dynamically generate an administrative UI . An administrator such as an IT administrator can then view the policy metadata via a viewing component of UI and customize the policy settings included in the policy metadata e.g. based on rules of the MRM system and or other considerations. Subsequent to the administrator s customizations is policy which may be an XML file and may include one or more settings different from policy metadata e.g. policy metadata may include a setting not included in policy policy metadata may not include a setting included in policy etc. . In an example the policy may be in the form of a dictionary of policy names and values e.g. key values pairs which may be included in an XML or JSON file for example.

With the settings of the policy established the managed application may be made available to users via the application store . Users such as a user of the mobile device can log on to the MRM system by for example submitting authentication requests to the authentication server e.g. via a MicroVPN tunnel and an access gateway as illustrated in and receiving authentication responses . Authenticated users can view applications in the application store and download them to their mobile devices. For example the user of the mobile device can download the managed application from the application store .

In some variations when the user downloads the managed application the user may also receive the policy . The application based on software installed on the mobile device e.g. the client agent as described in connection with can then be executed in such a way as to constrain its operation on the mobile device in accordance with the policy .

Additionally the managed application may be specially designed or adapted for use with the MRM system or enterprise. In other words the managed application can be considered to be not an application that general users can download for their own personal activities e.g. news apps Facebook app etc. . In some examples the managed application may be designed especially for the MRM system . In other examples the application may be a widely used application that is adapted specifically for use with the MRM system . For example the application may be injected with additional code that enables the application to conform with the framework of the MRM system . Such code can be compiled into the application using an SDK. Alternatively such code may be applied as a wrapper around the general use application. Such wrapping may provide one or more interfaces to adapt the application specifically for use with the MRM system . In general the additional code may for example divert application programming interface API calls from the application through the policy such that the policy is applied to control the behavior of the application on the mobile device .

The application developer s can periodically provide updated versions of the policy metadata . Such updates can be used to generate via the administrative UI generator an updated version of policy . In some examples the updated version of policy can be pushed to the mobile device to update the policy in use.

In some examples the policy residing on the mobile device may be refreshed periodically or in response to certain events such as starting the application on the mobile device in response to a MicroVPN connection being created between the mobile device and an access gateway of the MRM system or in accordance with a setting of policy that directs mobile device to request an update to the policy .

Having described certain embodiments numerous alternative embodiments or variations can be made. For example the MRM system has been shown and described as a server accessible via a network such as the Internet and may be implemented with both a server portion and a client portion that runs on the mobile device .

A policy may include any type of setting that an IT administrator or application developer may wish to implement for a managed application In connection with the numerous different settings that an IT administrator or application developer may wish to implement for a managed application a few additional embodiments and variations will be described in connection with .

For example temporal and geographic restrictions on data access may be useful in some variations. Accordingly an administrator may deploy a policy that restricts the availability of the data stored within the container to a specified time window and or a geographic zone e.g. as determined by a GPS chip of the mobile device within which the mobile device must be currently located in order to access the data. Further the policy can instruct deletion of data from the container or otherwise make them unavailable when the specified time period expires or if the mobile device is taken outside of the defined geographic zone. One example method for configuring and providing a policy that includes a setting to delete data will be discussed below in connection with .

As another example it may be important to include settings that constrain or otherwise affect how the application is to be executed. For example a policy may specify how data associated with the mobile application is to be stored by the mobile device and or how file system APIs called by the application are to be redirected and or how data associated with the mobile application is to be processed by the mobile device. One example method for configuring and providing a policy that includes one or more settings for managing execution of a managed application will be discussed below in connection with .

As another example it may be important to include settings that are specific to a user s role in the enterprise such as what department he or she is employed within the enterprise e.g. sales engineering etc. . It may also be important to include settings related to authenticating a user when the mobile application is executing e.g. a setting that specifies a token that can be used to authenticate a user when creating a MicroVPN connection specific to the managed application and that enables access by the mobile device application to one or more resources that are accessible via an access gateway . One example method for configuring and providing a policy that includes one or more settings related to user authentication and or user identification will be discussed below in connection with .

At step the one or more computing device may receive initial policy settings or other data for inclusion in a policy. This step may proceed similar to step of .

At step the one or more computing devices may create a user interface UI to display various portions of the initial policy settings. This step may proceed similar to step of .

At step the one or more computing device may receive input via the user interface to set change and or add to one or more settings related to providing a selective wipe on a mobile device e.g. a selective wipe setting . Aspects of this step may proceed similar to step of .

An IT administrator may provide input specifying one or more conditions that when not met by the mobile device instruct deletion of data or instruct the mobile device to perform a selective wipe. For example an IT administrator may provide input via the UI that specifies one or more temporal or geographic restrictions for data associated with the managed application. Accordingly one or more policy settings may be set changed and or added to restrict the availability of data to a specified time window and or a geographic zone e.g. as determined by a GPS chip of the mobile device within which the mobile device must be currently located in order to access data.

An IT administrator may provide input specifying one or more conditions that when met by the mobile device instruct deletion of data or instruct the mobile device to perform a selective wipe. For example one or more settings may be set changed and or added via the UI that specify one or more operating conditions of the mobile device. Such operating conditions may include for example an attempt to jailbreak the mobile phone install an application on a blacklist a number of failed attempts to log in to the mobile device an attempt to uninstall the managed application switch from a managed application to an unmanaged application switch from the managed application being stored in a managed partition of the mobile device to an unmanaged partition receive a message specifying that the user no longer is employed by the enterprise or otherwise use the mobile device in a disallowed configuration. Other operating conditions may include deleting data according to a specified schedule e.g. daily weekly or when a secure container has or exceeds a threshold amount of stored data. As the device is operated software on the device may monitor for the one or more operating conditions and when the operating conditions are met may perform a selective wipe or delete data from the mobile device in accordance with the policy setting. Further details as to how the mobile device performs a selective wipe or deletes data is described below in connection with step .

The IT administrator may also be able to set change and or add specific data that is to be deleted when performing the selective wipe. For example a specific data container s identifier or resource name may be included in the policy setting so that any data stored in the data container e.g. secure data container of the private data vault or shared data vault of etc. . The policy setting may also specify that a user s mobile device is deleted of all enterprise application s and corporate data when performing the selective wipe based on the policy setting.

At step the one or more computing devices may determine to produce one or more published versions of the policy. This step may proceed similar to step of .

At step the one or more computing devices may produce one or more policy files for the managed application that include the selective wipe setting. This step may proceed similar to step of .

The policy file produced by this step can be used by the mobile device to enforce the selective wipe settings. Accordingly the policy can cause the mobile device or application to perform various actions based on any selective wipe setting included in the policy file. Generally any of the above or other conditions described above in connection with step may form the basis for actions that the mobile device or application is caused to perform.

For example if the mobile device does not meet the conditions of a selective wipe setting or does meet conditions depending on what type of constraint the setting applies the mobile device may in response perform a selective wipe as defined by the selective wipe setting.

As one example a selective wipe may be performed by the mobile device as follows. The mobile device may begin by monitoring the operating conditions of the mobile device e.g. monitor for when the user discontinues employment violates a corporate policy such as if they jailbreak their device or otherwise use it in a disallowed configuration or the like . Based on any selective wipe setting included in the policy and the monitored conditions the mobile device may determine to perform a selective wipe of data. For example if a selective wipe setting specifies a number of failed attempts that result in performance of a selective wipe and the mobile device detects a sufficient number of consecutive failed attempts to enter a valid passcode e.g. 5 or 10 the mobile device may determine to perform a selective wipe.

Generally any of the above or other conditions described above in connection with step may form the basis of the determination of when the mobile device performs a selective wipe. To enforce the policy the mobile device may compare the monitored conditions to one or more policies and if the conditions match a condition specified in the policy that commands a selective wipe the mobile device may determine to perform a selective wipe.

In some embodiments the mobile device may perform a check to determine whether it has the most up to date policies that form a basis for performing the selective wipe. For example in some instances the mobile device may be performing a polling mechanism in a background thread that periodically polls for updates to the policies installed on the mobile device. In others the mobile device may prior to performing the selective wipe send a message to the access gateway that indicates a selective wipe is about to be performed. In addition to indicating that the selective wipe is about to be performed the message may include an indication of the version number of the policy that formed the basis for determining to perform the selective wipe. Responsive to receiving the message the access gateway may determine whether the mobile device has the most up to date policy settings e.g. determine whether the policy should be updated or not and based on the determination may respond with an acknowledgement that indicates the mobile device has the most up to date policy settings or respond with an update to the policy. After receiving the message or update the mobile device may proceed with performing the selective wipe or re determine whether the selective wipe should be performed based on the updated policy.

The mobile device may continue the selective wipe process by for example determining one or more secure containers for the selective wipe. For example the mobile device may determine which secure containers contain the data of the one or more managed applications. This determination may be based on information specified by the policy.

After determining to perform the selective wipe and determining which containers to delete from the mobile device may delete or otherwise make inaccessible the data of the one or more secure containers in accordance with the policy. For example a container may be configured to allow the client agent or mobile device to read from write to and or delete information from the container s file system. Deleting data from the container can include deleting actual data stored in the container deleting pointers to data stored in the container deleting encryption keys used to decrypt data stored in the container and the like. The container can enable some or all of the enterprise data stored in its file system to be deleted without modifying other data stored on the mobile device outside of the container.

After performing the selective wipe the mobile device may transmit a selective wipe acknowledgement to the enterprise. Such an acknowledgement may provide an indication to the enterprise that the selective wipe was successful. The acknowledgement may include a listing of applications and or listing of secure containers that were affected deleted by the selective wipe. The acknowledgement may also include a version number of the policy that included the selective wipe settings so that a computing device e.g. the access gateway can confirm that the most up to date version of the selective wipe settings were used. Upon receipt the enterprise e.g. access gateway may update its stored records accordingly.

At step the one or more computing devices may provide the managed application and the policy file to be available for download by one or more mobile devices. This step may proceed similar to step of .

At step the one or more computing device may receive initial policy settings or other data for inclusion in a policy. This step may proceed similar to step of .

At step the one or more computing devices may create a user interface UI to display various portions of the initial policy settings. This step may proceed similar to step of .

At step the one or more computing device may receive input via the user interface to set change and or add one or more settings related to application management of a managed application e.g. an application management setting . Aspects of this step may proceed similar to step of .

In some arrangements the UI administrator may provide input to set change or add a setting that specifies how data associated with the mobile application is to be stored by the mobile device and or how file system APIs called by the application are to be redirected and or how data associated with the mobile application is to be processed by the mobile device.

For example the IT administrator may assign one or more secure containers to the mobile application. Accordingly the policy may include one or more identifiers or resource names for the assigned secure container s .

As another example in some instances the mobile device may have previously used a different application prior to using the managed application e.g. a previous corporate e mail application and the previous application may not have enforced similar security settings that will be applied to the managed application e.g. the previous corporate e mail application did not encrypt the data of the inbox or the like . Accordingly one or more application management settings may be included in the policy so that legacy data will be processed when the application is configured in order to provide the user with access to the legacy data in accordance with the different security protocols being applied to the managed application.

An IT administrator may configure the policy so that for example it includes a location of the legacy data is defined within the policy and or includes an indication that the mobile device is to transfer legacy data for the managed application when configuring the application. The policy may also define an amount of legacy data to move to the secure containers e.g. a maximum amount of raw data a number of days of e mails all data etc. . In some arrangements the legacy data may be stored remotely such as by an enterprise resource.

The IT administrator may also provide input that specifies encryption and or decryption keys for use when a mobile device or application wants to read write or otherwise access a secure container on the mobile device when the managed application is running. Such a policy may link a specified encryption decryption key to one or more secure containers by specifying one or more secure container identifiers or resource names. For example encryption or decryption keys may be assigned based on a tuple of user device and application or application group and the policy may include information identifying the tuple e.g. an identifier of the user identifier of the mobile device and identifier of the application or application group .

The IT administrator may also provide input that specifies how and or how often the encryption and decryption keys should be updated or refreshed. For example the setting may include a time to live for each key so that when the time expires the mobile device must retrieve new keys via the access gateway. In some arrangements such settings may also specify that the new keys are retrieved via an application specific VPN such as a MicroVPN tunnel.

The IT administrator may also provide input that specifies which application group the managed application belongs to. Such an application management setting may include an identifier or resource name for a shared data vault that is accessible by other members of the application group.

The IT administrator may also provide input that specifies one or more secure data container that read or write operations from the managed application are to be redirected to when the mobile device executed the managed application. In some arrangements one of the secure data containers may be a private secured data container that is accessible to only the managed application e.g. the private app data vault of . In others one or more of the secure data containers may be a shared data container e.g. shared data vault of that for example is accessible to applications of the same application group.

At step the one or more computing devices may determine to produce one or more published versions of the policy. This step may proceed similar to step of .

At step the one or more computing devices may produce one or more policy files for the managed application that include the application management setting s . This step may proceed similar to step of .

The policy file produced by this step can be used by the mobile device to enforce the application management settings. Accordingly the policy can cause the mobile device or application to perform various actions based on any application management setting included in the policy file. Generally any of the above or other conditions described above in connection with step may form the basis for actions that the mobile device or application is caused to perform.

For example when the mobile device configures the managed application the mobile device may also configure one or more secure containers in accordance with the policy file. Based on the policy the mobile device may determine whether the assigned containers have been properly created and configured on the mobile device. If a container does not already exist a new empty vault is initialized including a file system for the container e.g. empty directory tree . An access manager for the container may also be configured. In some embodiments a secure container can be a logical interface into which read or write operations are redirected and in which data is in an encrypted form. The access manager of a secure container may govern access to the file system by applications and other components of the mobile device.

A software component such as the client agent of the mobile device may also be configured based on the policy. For example an interception layer may also be configured to be aware of any of the secure containers specified by the policy. To configure the interception layer it may be configured with information linking the identifiers or resource identifiers for the secure containers to one or more API calls that will be issued by the application during execution and may be configured with the locations of the keys that will be used when encrypting decrypting data to from the application. In such a way the interception layer may intercept such calls when the application is executing and redirect the calls to the appropriate secure container in accordance with the policy and in some variations without the application being aware of the interception.

If the policy specifies that legacy data for the managed application is to be configured for the application the mobile device may perform such configuring of the legacy data accordingly. For example the mobile device may retrieve from the location where the legacy data is stored and or an amount of data in accordance with the policy. The mobile device may then encrypt the data in accordance with the policy e.g. using the encryption protocols specified by the policy and using the keys specified by the policies . Some data may be encrypted using different keys based on which of the one or more secure containers they will be stored into. After encrypting the legacy data the mobile device may store the now encrypted legacy data into the specified secure container as determined by the policy . In some instances the policy may specify that some data is to be stored in one container e.g. a private container while other data is to be stored in a different container e.g. a shared container . Accordingly the data may be stored into the appropriate containers in their encrypted form. Such storage may be performed by updating or creating references to the location of the encrypted data in the secure container s file system. In some instances after successfully processing the legacy data any legacy data that remains on the mobile device in its unencrypted form may be deleted from the mobile device such deletion may also be specified by the policy .

At step the one or more computing devices may provide the managed application and the policy file to be available for download by one or more mobile devices. This step may proceed similar to step of .

At step the one or more computing device may receive initial policy settings or other data for inclusion in a policy. This step may proceed similar to step of .

At step the one or more computing devices may create a user interface UI to display various portions of the initial policy settings. This step may proceed similar to step of .

At step the one or more computing device may receive input via the user interface to set change and or add a setting related to user authentication or user identification e.g. a user authorization setting or a user identification setting . In some arrangements such a setting may provide a condition for authorizing or identifying a user in connection with providing the access to one or more resources that are accessible through an access gateway. Aspects of this step may proceed similar to step of .

In some arrangements an IT administrator may set change and or add a setting that specifies or includes a ticket or token these terms will be used interchangeably herein . Such tokens can be used by the mobile device in order to authenticate the user in a transparent manner. That is one or more tickets are provided to the mobile device from the enterprise in an effort to avoid burdening the user to re authenticate. When attempting to access an enterprise resource or initiating a secure connection to the enterprise resource the mobile device may provide the ticket to the access gateway instead of reauthenticating e.g. instead of requiring the user to input or otherwise provide his or her credentials such as a username and or password .

Such tickets however may expire and the IT administrator may specify the expiration time or expirations conditions of the ticket. If such tickets expire operations that required tickets instead now require that the user re authenticate. In some variations a ticket may be one time use and or time based and impose constraints and or privileges to the application or user when accessing an enterprise resource. For example a ticket may be specified as valid for a two week period or some other shorter or longer time period as the enterprise operator wishes e.g. provide short lived or longer lived access . In some arrangements access control is structured so that the level of security diminishes over time. For instance some applications which should have high security may be provided tickets that expire more quickly e.g. after a predefined amount of time such as an hour 15 minutes etc. . Other tickets associated with applications of lower security may expire at a later time e.g. after a later predefined amount of time such as a day etc. . Other ticket based techniques for imposing different levels of security based on time or other measure e.g. number of logins are suitable for use as well.

As one example of a ticket s use a ticket may be usable to provide authentication in connection with creating a VPN tunnel to enterprise resources. For example a ticket may include data or be otherwise configured to authenticate a user mobile device or application that is attempting to create a VPN tunnel to an enterprise resource that is accessible through an access gateway such as a MicroVPN tunnel or other type of application specific VPN tunnel.

The IT administrator may also provide input via the UI that specifies how a user is to log on to the MRM system. For example the policy may specify that the user can use single sign on functionality for authentication with the access gateway and the conditions with which the user can continue using single sign on functionality e.g. single sign on within particular geographic or mobile device location constraints within particular time windows constraints requiring an install of a particular application on the mobile device or the like .

As discussed above when a user executes a managed application on the mobile device the user is typically challenged to authenticate their corporate identity along with passwords and other factors as dictated by corporate policy. The policy may specify the constraints on the password and or specify the types of identification information that is to be included when requesting to authenticate e.g. authenticate with a password username and mobile device identifier .

The policy may also specify or include one or more certificates that can be used to respond to certificate challenges that are received by the mobile device.

The IT administrator may also provide input via the UI to create a policy that is assigned to the user s role within the enterprise or specific to the application s assigned application group. In such a way a single managed application may be associated with multiple policies with each policy being assigned to a different user role e.g. one policy for a sales employee a different policy for a designer etc. or application group e.g. a managed application may be assigned to multiple application groups where each provides various constraints or benefits to member applications such as shared access to data stored in data containers or the like and each of the multiple application groups corresponds to a different user role .

A policy may also be assigned to a group of applications. The group of applications could be for example a grouping of applications that apply to a particular industry e.g. the policy is assigned to a group of applications that are related to the healthcare industry apply to a particular organization e.g. the policy is assigned to a group of applications that were created by the same application developer or are provided by the same enterprise and the like. The UI may be configured to allow the IT administrator to provide input to create such assignments.

At step the one or more computing devices may determine to produce one or more published versions of the policy. This step may proceed similar to step of .

At step the one or more computing devices may produce one or more policy files for the managed application that include the user authentication or user identification setting s . This step may proceed similar to step of .

The policy file produced by this step can be used by the mobile device to enforce the user authentication or user identification settings. Accordingly the policy can cause the mobile device or application to perform various actions based on any user authentication or user identification setting included in the policy file. Generally any of the above or other conditions described above in connection with step may form the basis for actions that the mobile device or application is caused to perform.

For example a ticket specified by the policy may be first loaded into the mobile device when the policy is downloaded to the mobile device. The mobile device may transmit a message including the ticket when attempting to create an application specific VPN tunnel. If such token ticket has expired then the user may be asked to proceed through a full authentication process again before allowing VPN access. If the ticket is not expired the information included in the ticket may be used by a computing device e.g. access gateway to determine that the ticket is valid and the user is allowed to access resources that are accessible via the access gateway. After using the ticket to authenticate the user a VPN tunnel between the access gateway and mobile device may be constructed initialized that enables the mobile device with access to at least one resource. The VPN tunnel may be an application specific VPN such as a MicroVPN.

Use of the user authorization or user identification settings may in some embodiments cause the mobile device to be able perform various actions without the application and or the user being aware of the authorization or that the user identification was provided to the enterprise. For example the creation of the application specific VPN tunnel may be done without user interaction and without the user s knowledge that the application specific VPN tunnel has been created established. As another example certificates specified by the policy may be provided without the application or user being aware that such information was provided. As yet another example user log ins passwords or other identifying information may be provided to the enterprise without the user or application being aware that such information was provided.

At step the one or more computing devices may provide the managed application and the policy file to be available for download by one or more mobile devices. This step may proceed similar to step of .

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in any claim is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are described as some example implementations of the following claims.

