---

title: System and method for selective voicemail transcription
abstract: Disclosed herein are systems, methods, and non-transitory computer-readable storage media for selectively transcribing messages. Five general approaches are disclosed herein. The first approach is directed to checking for a transcription capable client, which transcribes messages when a client device is capable of receiving transcriptions. The second and third approaches are platform-controlled and user-controlled predefined selective transcription. One aspect of this approach is driven by transcription rules. The fourth approach is user-controlled on-demand selective transcription before the message is stored or deposited for transcription. An example of this is a user transferring an incoming caller to voicemail and indicating that the voicemail be transcribed. The fifth approach is user-controlled on-demand selective transcription after the message is stored. In one embodiment of this approach, a user must specifically request that a stored message be transcribed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09137375&OS=09137375&RS=09137375
owner: AT&T Intellectual Property I, L.P.
number: 09137375
owner_city: Atlanta
owner_country: US
publication_date: 20141103
---
The present application is a continuation of U.S. patent application Ser. No. 12 852 190 filed Aug. 6 2010 the content of which is incorporated herein by reference in its entirety.

The present disclosure relates to message transcriptions and more specifically to selectively transcribing messages in a messaging platform.

Transcribing voicemails or other messages from multimedia forms such as video images and audio to text is a very resource intensive process that can require significant amounts of processing time memory disk space and so forth. Many subscribers either do not have the ability to view transcriptions at the moment due to device based limitations or they do not have desire to read view the transcriptions at that time or for that particular message. Further certain subscribers simply do not access transcriptions regularly and prefer to listen to or view the original message instead of the transcription. In such cases the resources spent to transcribe messages are effectively wasted and could have been allocated to process more urgent messages. This waste leads system designers to intentionally overdesign a transcription and messaging system and spend more money constructing such a system than is actually necessary.

Additional features and advantages of the disclosure will be set forth in the description which follows and in part will be obvious from the description or can be learned by practice of the herein disclosed principles. The features and advantages of the disclosure can be realized and obtained by means of the instruments and combinations particularly pointed out in the appended claims. These and other features of the disclosure will become more fully apparent from the following description and appended claims or can be learned by the practice of the principles set forth herein.

Disclosed herein are systems methods and non transitory computer readable storage media for selectively transcribing messages. Five general approaches are disclosed herein. The first approach is directed to checking for a transcription capable client which transcribes messages when a client device is capable of receiving transcriptions and when an associated class of service indicates that transcriptions should be performed. The second approach is platform controlled predefined selective transcription and the third approach is user controlled predefined selective transcription. One aspect of this approach is driven by transcription rules. The fourth approach is user controlled on demand selective transcription before the message is stored or deposited for transcription. An example of this is a user transferring an incoming caller to voicemail and indicating that the voicemail be transcribed. The fifth approach is user controlled on demand selective transcription after the message is stored. In one embodiment of this approach a user must specifically request that a stored message be transcribed. These approaches can be used separately in combination with each other and or with other transcription optimization techniques.

Various embodiments of the disclosure are discussed in detail below. While specific implementations are discussed it should be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the disclosure.

The present disclosure addresses the need in the art for prioritizing and selectively transcribing messages. Some introductory principles and concepts are discussed first followed by a brief description of a basic general purpose system or computing device in which can be employed to practice the concepts is disclosed herein. A more detailed description of a unified messaging platform and the various methods will then follow.

Transcribing a voicemail from audio to text is a very resource intensive process requiring significant amounts of processor time memory storage and so forth. This disclosure provides a framework for optimizing resource utilization and thereby reducing costs through selective transcription mechanisms. This ensures that transcriptions are only performed when necessary. Five major types of selective transcription disclosed herein include 1 a transcription capable client check 2 platform controlled predefined selective transcription 3 user controlled pre defined selective transcription 4 user controlled on demand selective transcription pre deposit and 5 user controlled on demand selective transcription post deposit . These five types of selective transcription shall be discussed herein as the various embodiments are set forth. The disclosure now turns to .

With reference to an exemplary system includes a general purpose computing device including a processing unit CPU or processor and a system bus that couples various system components including the system memory such as read only memory ROM and random access memory RAM to the processor . The system can include a cache not shown of high speed memory connected directly with in close proximity to or integrated as part of the processor . The system copies data from the memory and or the storage device to the cache for quick access by the processor . In this way the cache provides a performance boost that avoids processor delays while waiting for data. These and other modules can be configured to control the processor to perform various actions. Other system memory may be available for use as well. The memory can include multiple different types of memory with different performance characteristics. It can be appreciated that the disclosure may operate on a computing device with more than one processor or on a group or cluster of computing devices networked together to provide greater processing capability. The processor can include any general purpose processor and a hardware module or software module such as module 1 module 2 and module 3 stored in storage device configured to control the processor as well as a special purpose processor where software instructions are incorporated into the actual processor design. The processor may essentially be a completely self contained computing system containing multiple cores or processors a bus memory controller cache etc. A multi core processor may be symmetric or asymmetric.

The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. A basic input output BIOS stored in ROM or the like may provide the basic routine that helps to transfer information between elements within the computing device such as during start up. The computing device further includes storage devices such as a hard disk drive a magnetic disk drive an optical disk drive tape drive or the like. The storage device can include software modules for controlling the processor . Other hardware or software modules are contemplated. The storage device is connected to the system bus by a drive interface. The drives and the associated computer readable storage media provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing device . In one aspect a hardware module that performs a particular function includes the software component stored in a non transitory computer readable medium in connection with the necessary hardware components such as the processor bus output device e.g. display and so forth to carry out the function. The basic components are known to those of skill in the art and appropriate variations are contemplated depending on the type of device such as whether the device is a small handheld computing device a desktop computer or a computer server.

Although the exemplary embodiment described herein employs the hard disk it should be appreciated by those skilled in the art that other types of computer readable media which can store data that are accessible by a computer such as magnetic cassettes flash memory cards digital versatile disks cartridges random access memories RAMs read only memory ROM a cable or wireless signal containing a bit stream and the like may also be used in the exemplary operating environment. Non transitory computer readable storage media expressly exclude media such as energy carrier signals electromagnetic waves and signals per se.

To enable user interaction with the computing device an input device represents any number of input mechanisms such as a microphone for speech a touch sensitive screen for gesture or graphical input keyboard mouse motion input speech and so forth. An output device can also be one or more of a number of output mechanisms known to those of skill in the art. In some instances multimodal systems enable a user to provide multiple types of input to communicate with the computing device . The communications interface generally governs and manages the user input and system output. There is no restriction on operating on any particular hardware arrangement and therefore the basic features here may easily be substituted for improved hardware or firmware arrangements as they are developed.

For clarity of explanation the illustrative system embodiment is presented as including individual functional blocks including functional blocks labeled as a processor or processor . The functions these blocks represent may be provided through the use of either shared or dedicated hardware including but not limited to hardware capable of executing software and hardware such as a processor that is purpose built to operate as an equivalent to software executing on a general purpose processor. For example the functions of one or more processors presented in may be provided by a single shared processor or multiple processors. Use of the term processor should not be construed to refer exclusively to hardware capable of executing software. Illustrative embodiments may include microprocessor and or digital signal processor DSP hardware read only memory ROM for storing software performing the operations discussed below and random access memory RAM for storing results. Very large scale integration VLSI hardware embodiments as well as custom VLSI circuitry in combination with a general purpose DSP circuit may also be provided.

The logical operations of the various embodiments are implemented as 1 a sequence of computer implemented steps operations or procedures running on a programmable circuit within a general use computer 2 a sequence of computer implemented steps operations or procedures running on a specific use programmable circuit and or 3 interconnected machine modules or program engines within the programmable circuits. The system shown in can practice all or part of the recited methods can be a part of the recited systems and or can operate according to instructions in the recited non transitory computer readable storage media. Such logical operations can be implemented as modules configured to control the processor to perform particular functions according to the programming of the module. For example illustrates three modules Mod1 Mod2 and Mod3 which can be modules configured to control the processor . These modules may be stored on the storage device and loaded into RAM or memory at runtime or may be stored as would be known in the art in other computer readable memory locations.

Having disclosed some basic system components the disclosure now turns to the exemplary method embodiment shown in . For the sake of clarity the method is discussed in terms of an exemplary system such as is shown in configured to practice the method.

The disclosure now turns to which illustrates an example overview of a unified messaging UM server and UM client configuration with a diversity of clients such as a limited display device A a smartphone B a telephone with no display C and a personal computer D. The UM server and or UM clients A B C D can include all or part of the elements of the exemplary system shown in . The UM server receives messages from multiple message sources via a communication network such as the public switched telephone network or the Internet. The message sources can provide message such as voicemails video messages faxes images multimedia messages and or hyperlinks.

When the UM server receives messages the UM server can identify a recipient also called user or subscriber herein of the message and retrieve a subscriber profile from a UM directory and can store the message in the subscriber s mailbox not shown . The subscriber profile can provide information about a class of service for the subscriber. For example one subscriber can pay a premium fee for real time transcription service another subscriber can pay a lower fee for a first non real time transcription service that indicates a preference for a short transcription time but the short time is not guaranteed and a third subscriber can use a second non real time transcription service for free that has no preference for a transcription delay. The UM server can send non text contents of messages e.g. voice messages to the transcription server s to be transcribed converted to text messages . Content to be transcribed is referred to as raw media content herein for conciseness. In at least one embodiment the UM server transmits raw content to the transcription server s after receiving a complete message which contains one or more raw content s . In another embodiment the UM server transmits raw content to the transcription server s even if the UM server has not received the entire message. While waiting to be transcribed non real time raw contents can be deposited in a queue internal to the UM server a queue internal to the transcription server s and or a queue external to both the UM server and the transcription server s . In one case multiple non real time queues can distinguish between different classes of non real time transcriptions.

The UM directory can store additional classes of service beyond the exemplary classes of service discussed herein. In one aspect a hybrid class of service provides a different class of service based on time location subscription date and other user parameters. For example a hybrid class of service for an accountant may indicate a real time class of service on weekdays which are not federal holidays between 8 00 a.m. and 6 30 p.m. and a no preference class of service all other times. In another example a salesman can indicate that all incoming messages from phone numbers or emails originating from a group of client companies are associated with a real time transcription class of service and all other messages are associated with a class of service which prefers but does not require a short transcription time. Other variations and classes of service can be applied.

In one aspect the UM directory or another component not shown associated with the UM server also provides information to the UM server related to the probability of messages being accessed in the near term. If the user receives and accesses a new message notification while the message transcription is pending the UM server can increase the probability that the message will be accessed in the near term. If the user receives the new message notification indicating to the user that he she has received a new message in his her mailbox on the UM server but the user does not access the message the UM server can lower the probability or leave it unchanged. The probability of near term access can be based on historical statistics for subscriber message transcription access times such as the average time between new message notification and transcription access. The average time can be per user for a very granular average for a particular user or can be averaged for similar customers. For example the average time between new message notification and message access can be calculated for males from ages 18 25 in Florida for Asian females in the Rocky Mountains or for college students nationwide.

The probability of near term access can further be based on subscriber presence information. Presence information can convey a user s available capacities to communicate. For example presence can indicate whether a user is available or not whether a user can accept a video feed or not the user s physical location which specific communication devices the user has available and so forth. Presence can also indicate a user s willingness to accept communications. For example a user presence can indicate do not disturb in a meeting or available . Presence information can be automatically generated e.g. based on communications with other components some of which are not shown or manually set by the user. In one configuration the UM directory receives subscriber presence information from UM clients A B C D and or components that directly and or indirectly communicate with such clients and bases the probability of messages being accessed in the near term on that presence information. Presence information can be gleaned from one source or from multiple sources such as web browser logins smartphone applications GPS signals calendar events and so forth. Furthermore presence information can also be determined from activities and or login status of subscribers using the sample devices for UM clients and

Other potentially relevant factors to the probability of near term access can include message parameters such as indicators of message urgency and message meta data such as a message source or message title where available . The UM server can also dedicate more resources to subscribers that have historically received higher confidence transcriptions from the transcription server s for their raw messages.

The UM server communicates with a transcription server s which transcribe all or part of each message from the message sources via a finite number of communication channels . The finite number of communication channels can be divided into multiple groups not shown . For example a first group of communication channels associated with a first group of transcription servers can handle real time transcriptions and a second group of communication channels associated with a second group of transcription servers can handle non real time transcriptions. The transcription server can transcribe messages using speech to text OCR pattern recognition and or any other suitable mechanism s to extract text from non textually formatted messages or raw content. The transcription server can also perform translation services to translate extracted text from one language to another if needed. The UM server can then offer an original language transcription and a translated transcription to the UM client. The UM server identifies a particular UM client A B C D for each message and transmits information to the respective UM client regarding the message including a transcription status. In the case of a voicemail the UM server can transmit information indicating a sender of the voicemail a duration of the voicemail a callback number a time of the voicemail a headline of the voicemail transcription and so forth.

Some example UM clients include smartphones PDAs cellular phones web browsers mobile phone applications a personal computer an intermediate UM server an IPTV set top box and so forth. Additional types of client devices can be used as well all of which are not shown in . When a UM client establishes a session with the UM server the UM server can return a listing of messages and possibly transcription progress for messages in the listing. If the UM server receives progress updates from the transcription server s such as a revised expected completion time or a completed transcription from the transcription server the UM server can transmit updated notifications to the appropriate UM client device.

Having disclosed some basic system components and an exemplary unified messaging server and client configuration the disclosure now turns to a discussion of five types of selective message transcription. The first type of selective message transcription is checking for a transcription capable UM client. Before transcription is enabled for a subscriber the UM server retrieves a Class of Service CoS such as from a UM directory for the subscriber to ensure that transcription is allowed. If the subscriber s CoS allows transcription the UM server proceeds to determine where possible whether the subscriber is currently accessing the UM server via a transcription capable device such as a device capable of displaying text. Some examples of such devices include a smartphone and a personal computer . Certain devices such as a plain telephone do not have any display capabilities and are thus not transcription capable. Some devices have limited ability to display text such as a desktop phone having a display capable of showing only a single short line of characters. Depending on these display capabilities the device may or may not qualify as transcription capable. The UM server can track user logins from specific clients client types client versions client identifications and so forth. In one embodiment the UM server tracks a source of the last getMessageTranscription application programming interface API call from UM client applications on behalf of each subscriber. For example the API call may include a fingerprint of the requesting client device that can identify the device type. The server can then look up in a table whether that device type is transcription capable. Alternately the API call can include a flag indicating whether a device is transcription capable or not.

In one variation if the last getMessageTranscription API call occurred within the last N days then the UM server enables transcription. N can be a CoS configurable attribute allowing different values to be used for different subscribers. The current state of transcription may be stored in an attribute in the UM Directory . Whenever the transcription capable state changes for a particular user the UM server can update such information in the UM server and or the UM directory for that user.

The second type of selective transcription is platform controlled pre defined selective transcription. In this type the UM server is configured to act based on pre defined transcription exceptions. The transcription exceptions can be applied globally or can be associated with a particular subscriber and or CoS. The UM directory can store these exceptions. Exceptions can take the form of a ruleset that determines when transcriptions should be skipped that would otherwise be performed. A ruleset can include one or more rules to skip entirely or change priorities of transcriptions such as skip transcription for any messages greater than 1 min in length or skip transcription if subscriber currently has more than 4 transcriptions pending . Rulesets can also include positive rules regarding which types of messages should always be transcribed.

The third type of selective transcription is user controlled pre defined selective transcription. In one variation of this approach the UM directory and or the UM server provide a subscriber interface to allow subscribers to adjust the details of each rule and to adjust the order in which the rules are applied to messages for that subscriber. Subscriber settings in the UM platform are updated to reflect new pre defined options for transcription. Some exemplary options and rules include skip transcription if the sender of the message is not an approved contact assign a low priority to transcriptions for messages left between midnight and 7 30 a.m. transcribe messages from unknown callers transcribe message from callers present in my address book transcribe message from callers not present in my address book transcribe messages marked urgent transcribe messages with a read receipt request and transcribe messages from callers in the Legal department . User controlled rules can be conditional such as based on a client device state a user location a current user activity calendar events and so forth. The conditional rules can depend on multiple user dependent or user independent factors. User controlled rules can be applied in addition to CoS rules or can be overridden by conflicting CoS rules and or exceptions.

The fourth type of selective transcription is pre deposit user controlled on demand selective transcription. This supports scenarios in which the subscriber is presented with an enhanced call handling interface such as an enhanced graphical interface on a smartphone IPTV or softphone. Upon receiving a new call the subscriber chooses an option to forward to voicemail and provide a transcription . The UM platform is enhanced to support receipt and processing of a new parameter in call signaling. Alternately the UM server can communicate with client devices via a separate data channel such as a web services API channel. This parameter indicates the specific feature that is being requested. For example when a call is forwarded to voicemail the system can associate a redirecting reason code with the redirecting number. In Session Initiation Protocol SIP this can be the reason code associated with a SIP diversion header a cause code associated with a Voicemail URI and so forth.

The fifth type of selective transcription is a post deposit user controlled on demand selective transcription. When this is enabled in a subscriber s CoS no messages are automatically transcribed. Instead the subscriber must specifically request transcription of a message. This approach can rely on additional functionality via a new API call to the UM server such as a TranscribeMessages arrays of message numbers API call whereby a client device to the UM server can request that the UM server initiate transcription for a particular message or a group of messages. This can lead to modification of systems which automatically transcribe all messages or no messages.

This approach is not limited to only subscribers that have on demand transcription service. The TranscribeMessages API call can include implied and or explicitly requested limits on the maximum number of simultaneously pending transcriptions for a given subscriber to ensure that a client does not request transcription for a large number of previously untranscribed messages in a short interval.

The approaches set forth herein can reduce the hardware cost for a unified messaging platform and can improve scalability of the platform by ensuring that transcriptions are only performed when subscribers are actively using transcription capable clients. The unified messaging platform can allow pre defined and on demand voicemail transcription and reduce the possibility of delays in voicemail transcription to improve the customer experience.

The disclosure now turns to the exemplary method embodiments of these types of selective transcription. illustrates a first example method embodiment for selectively transcribing messages. The method is discussed in terms of a system configured to practice the method such as system shown in . The system receives at a messaging server such as the UM server of a message addressed to a subscriber and retrieves a class of service associated with the subscriber . Then if the class of service indicates that transcription is to be performed the system determines whether the subscriber is accessing the messaging server via a transcription capable client . The system transcribes the message if the subscriber is accessing the messaging server via the transcription capable client . A transcription server separate from or incorporated into the system can transcribe the message. In one variation the system transcribes the message if the messaging server has received a request for a transcription from the subscriber within a threshold time. The threshold time can be associated with the class of service. The system can optionally identify a current transcription state for the subscriber store the current transcription state in a subscriber directory and notify the subscriber when the current transcription state changes.

The set of transcription rules can include a set of transcription exceptions. The set of transcription rules can be retrieved from a directory of user accounts. Each user s account can include a set of transcription rules and the user s class of service can indicate additional transcription rules to apply. Transcription rules can include transcription exceptions which define messages having a certain attribute or pattern of attributes that are not to be transcribed automatically. A user can explicitly define one or more transcription rules or the system can infer and automatically generate transcription rules by observing user behavior. In one aspect the transcription rules are not based solely on attributes of the message or the sender but also on factors external to the message. For example one of the transcription rules can be based on a threshold of the number of currently pending transcriptions.

If at least one of the message and at least one of the attributes matches any of the set of transcription rules the system passes the message to a transcription server for transcription and if at least one of the message and at least one of the attributes does not match at least one of the set of transcription rules the system leaves the message untranscribed .

Embodiments within the scope of the present disclosure may also include tangible and or non transitory computer readable storage media for carrying or having computer executable instructions or data structures stored thereon. Such non transitory computer readable storage media can be any available media that can be accessed by a general purpose or special purpose computer including the functional design of any special purpose processor as discussed above. By way of example and not limitation such non transitory computer readable media can include RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to carry or store desired program code means in the form of computer executable instructions data structures or processor chip design. When information is transferred or provided over a network or another communications connection either hardwired wireless or combination thereof to a computer the computer properly views the connection as a computer readable medium. Thus any such connection is properly termed a computer readable medium. Combinations of the above should also be included within the scope of the computer readable media.

Computer executable instructions include for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Computer executable instructions also include program modules that are executed by computers in stand alone or network environments. Generally program modules include routines programs components data structures objects and the functions inherent in the design of special purpose processors etc. that perform particular tasks or implement particular abstract data types. Computer executable instructions associated data structures and program modules represent examples of the program code means for executing steps of the methods disclosed herein. The particular sequence of such executable instructions or associated data structures represents examples of corresponding acts for implementing the functions described in such steps.

Those of skill in the art will appreciate that other embodiments of the disclosure may be practiced in network computing environments with many types of computer system configurations including personal computers hand held devices multi processor systems microprocessor based or programmable consumer electronics network PCs minicomputers mainframe computers and the like. Embodiments may also be practiced in distributed computing environments where tasks are performed by local and remote processing devices that are linked either by hardwired links wireless links or by a combination thereof through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

The various embodiments described above are provided by way of illustration only and should not be construed to limit the scope of the disclosure. Those skilled in the art will readily recognize various modifications and changes that may be made to the principles described herein without following the example embodiments and applications illustrated and described herein and without departing from the spirit and scope of the disclosure.

