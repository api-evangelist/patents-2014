---

title: System and method for integrating two-factor authentication in a device
abstract: A system and method for providing secondary-factor authentication with a third party application that can include enrolling a device application instance of an account into a secondary-factor authentication service on behalf of a service provider that includes at the secondary-factor authentication service, receiving a secondary factor of authentication enrollment request of an account, the request received from the service provider, transmitting an activation code, and pairing the device application instance with the account through the activation code; receiving an authentication request identifying the account; transmitting an authentication request to the device application instance paired with the account; validating a response to the application request; and transmitting an assessment to the service provider.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09338156&OS=09338156&RS=09338156
owner: Duo Security, Inc.
number: 09338156
owner_city: Ann Arbor
owner_country: US
publication_date: 20140224
---
This application claims the benefit of U.S. Provisional Application Ser. No. 61 768 248 filed on 22 Feb. 2013 which is incorporated in its entirety by this reference.

This invention relates generally to the authentication and authorization field and more specifically to a new and useful system and method for integrating two factor authentication in a device in the authentication and authorization field.

Passwords are becoming increasingly easy to compromise. Passwords can be stolen guessed or hacked. One form of authentication that has seen a rise is two factor authentication TFA which uses a secondary device such as a phone to provide an additional factor of authentication. Integrating such a tool into an application however can be challenging. For some service providers building a TFA system is outside of the service provider s core competency. In some cases an outside TFA service can be used. This solution can expose a secondary service to the user that provides the TFA as a service but this can be disruptive to users of the primary service or application. Introducing a third party TFA application may additionally be undesirable by the service provider. Thus there is a need in the authentication and authorization field to create a new and useful system and method for integrating two factor authentication in a device. This invention provides such a new and useful system and method.

The following description of preferred embodiments of the invention is not intended to limit the invention to these preferred embodiments but rather to enable any person skilled in the art to make and use this invention.

As shown in a system for integrating two factor authentication in a device of a preferred embodiment can include a two factor authentication TFA service with an authentication application programming interface API and a device application interface . The system can additionally include a two factor authentication TFA client service . The system functions to allow a two factor authentication or authorization solution to be seamlessly integrated into operation of a service provider. The TFA service and system can be configured to be transparent to the end user of the service provider. The system preferably enables an outside service provider to create a branded or co branded TFA implementation that can look and feel cohesive with the product of the service provider. To a user of the service provider the TFA can appear to be implanted by the outside service even though logic and authentication functionality is at least partially performed by a system of a preferred embodiment. The service provider may be a web application a mobile application or any suitable device or application. In some exemplary implementations the service provider will have a primary client portal and a secondary personal device portal. The primary client portal can be a web application a desktop client application gaming system or application a vehicle computing system an internet connected device or any suitable primary client portal that depends on user authentication. The secondary personal device portal is preferably an application on a mobile computing device such as a phone tablet wearable computing device or any suitable computing device. The primary client portal can be accessed by a device different from the device of the secondary personal device portal but the primary client portal may alternatively be accessed through the same device as the device of the secondary personal device portal e.g. accessing a web site on a mobile browser and performing a second factor of authentication through a secondary application on the phone . The secondary personal device portal preferably includes or utilizes the TFA client service to provide a second layer of authentication to an authentication attempts made through the primary client portal. The system can additionally or alternatively be used for authorization as described in U.S. patent application Ser. No. 13 039 209 filed 02 Mar. 2011 which is incorporated in its entirety by this reference.

In one preferred embodiment a web application can use the system so that a push notification or code is generated in a branded native application on a device. The push notification or codes are subsequently used to verify that the user has access to an enrolled device application. In another preferred embodiment a web application can use the system so that a push notification or code is generated in a co branded native application wherein the co branded native application may be shared for multi factor authentication of multiple applications or services as shown in . The system is preferably implemented for authentication but may additionally or alternatively be used for authorization or for any suitable form of an additional factor of security e.g. used as a third factor of authentication or to authorize an authentication attempt . The system is preferably configured for using mobile applications on a mobile computing device as the second factor of authentication but any suitable device such as a desktop computer or a TV connected computing device may additionally or alternatively be used.

The two factor authentication TFA service of the preferred embodiment functions to provide remote coordination management and operation of additional factors of security for a device application on behalf of a requesting service provider. The TFA service is preferably a multitenant internet accessible service. The TFA service is preferably composed of at least one server system and more preferably a distributed server system a server cluster or any suitable web accessible service. The TFA service will preferably maintain data records for registered device IDs or alternatively accounts usernames or other suitable identifiers and the associated device s that should be used for two factor authentication. The TFA service no may alternatively be described as a multi factor authentication service and be used as any additionally factor or layer of authentication or authorization. The database of records for registered devices can additionally manage and store notification credentials which are used in pushing or publishing notifications to the secondary device and or application. The TFA service preferably interfaces with at least a requesting service provider and a device running an application that can be used as the secondary factor of authentication.

The authentication application programming interface API of the preferred embodiment functions to provide a programmatic interface for outside applications. The authentication API is preferably used by at least the service provider that is using the system to create a TFA implementation. The authentication API accepts API calls requests from various services. In one mode of operation of the authentication API a service provider will enroll at least one user into the service by submitting an API call through the authentication API . For example a web application will post an HTTP call to a enroll endpoint of the authentication API when a user selects to use TFA. The authentication API will preferably reply with a status message an activation code. The activation code may alternatively be transmitted directly to the intended device. In another mode of operation of the authentication API a service provider will often enter a state where a user is attempting to complete some task requiring authentication e.g. login perform a sensitive transaction and the service provider will then make an API call through the authentication API that initiates the two TFA process.

In one exemplary TFA request process a service provider can post an HTTP call to a auth endpoint of the authentication API . The post can include a user identifier which will use the associated enrolled device for the second factor of authentication optionally a preferred medium of TFA additional meta data or information about the authentication request selection of an asynchronous mode secondary device ID to select one of multiple registered devices for a user and or other authentication parameter options. The medium of TFA can include push possibly specifying an application ID if multiple apps or destinations have push capabilities passcode SMS MMS phone or other suitable channels of two factor authentication. In a synchronous mode the response to an authentication request is made once the TFA transaction has completed or optionally timed out. In an asynchronous mode the response to an authentication request include an authentication transaction identifier that can be used to asynchronously check on the status of a TFA transaction. An authentication transaction can be queried by making a call to auth status with the transaction ID of the authentication transaction in question. The authentication API or other suitable components of the system can facilitate management and storage of user device information and or authentication request state and history. The authentication API may additionally be used for communication with a mobile application or other devices used as a second factor of authentication. The authentication API is preferably an application layer protocol e.g. HTTP HTTPS SPDY etc. based API and may be any suitable type of API such as a REST SOAP or other suitable form of API.

The TFA authentication request is preferably cryptographically secured to enable trust between the service provider and the TFA service no. During a configuration stage the service provider can create a new SDK configuration with the TFA service . A service provider can have one or more SDK configuration and each service provider is preferably given unique set of configuration parameters. The TFA service no can share an integration key and a secret key. These can be obtained from an administrator web panel of the TFA service provider. Additionally the service provider can be assigned an API hostname which can be a unique URL host endpoint used for API requests by the service provider. The TFA authentication request can additionally rely on synchronized server time between the TFA service and the service provider. The service provider additionally generates a secret application key that can be kept secret from outside entities including the TFA service . When ready to make a TFA the service provider signs the authentication request using the integration key the secret key the secret application key and a user identifier. In one variation the service provider performs HMAC SHA of the user identifier the integration key and an expiration timestamp using the secret key as the HMAC key after the first factors of authentication are completed by the service provider. This can be completed through a library operation provided by the TFA service provider. The response of the authentication synchronous or asynchronous can be a signed response from the TFA service . The service provider can use a verify response library function to verify the outcome of the TFA. The verification can use the integration key the secret key the application secret key and the signed response. Verification can apply HMAC SHA to the signed response to ensure the response is signed by the TFA service and preferably that the signature was not modified by the client in any way. Other suitable cryptographic security measures may additionally or alternatively be used.

The application interface of the preferred embodiment functions to enable applications to interact with the TFA service . The application interface may be included as a communication component of the TFA service . In one variation an application uses the authentication API or a similar API to communicate with the mobile device. The API of the application interface can be private but may alternatively be exposed. The application interface is preferably used by the TFA client service . The authentication interface is preferably engaged when enrolling a new device when notifying a device of an authentication request and or receiving user response to an authentication request. Communication between the TFA service no and the secondary personal device can additionally involve the use of other communication channels such as a push notification network SMS network MMS network phone network or any suitable communication channel.

The TFA client service of the preferred embodiment functions to provide a device side component to facilitate TFA verification from a device. The TFA client service can be one of several different variations that include a TFA software development kit SDK or library embedded within a native application of the device a standalone application callable by other applications and or an operating system level callable service. The system can be configured to incorporate any of the above or other suitable variable forms of the TFA client service into operation of the system. For example one service provider can integrate the TFA SDK into their app and a plurality of disparate service providers can use a callable service TFA client service . The TFA client service preferably enables the service provider to customize e.g. brand the TFA experience. This can range from customizing all views and interactions around notifying and receiving user input to selecting colors and graphic configurations.

In one preferred implementation the TFA client service of the system includes a TFA software development kit SDK or library that defines interactions communication and processing of a secondary device. The TFA SDK is preferably used to enable the device application to function as a second factor of authentication. The TFA SDK is preferably a software module integrated in a device application. The TFA SDK can be provided as source code configuration or as compiled binary version of the TFA SDK. A developer of the device application will preferably include or link the TFA SDK components such that the methods data and operational logic of the TFA SDK are compiled or otherwise included in the device application. The TFA service no preferably communicates with an application through an application interface and the TFA SDK manages that communication and abstracts processing for other operative software components of the application. The device application may be developed by the service provider or any suitable outside entity. The interface and appearance of the device application may be customized to the purposes of the developer. As shown in the authentication process can be integrated within a native application for a web service. The native application preferably embeds or includes the TFA SDK which communicates with the TFA service as shown in . The interaction flow aesthetics and features can be customized for the particular application. In an alternative embodiment the device application may be an authentication application that allows a plurality of service providers to create a co branded or partially customized experience.

In another preferred implementation the TFA client service of the system includes a system callable service which functions to provide a mechanism for native client application integration through an external mechanism. The system callable service is preferably a component configured substantially similar to the TFA SDK in how the callable service communicates with the application interface and the TFA service . However the callable service can be a background service that exists outside of the application using the callable service. The callable service can be a background application installed by the user or the callable service can be a background application installed by an administrator of the device e.g. if the device is managed as part of a fleet of enterprise devices or the phone OS provider as shown in . Alternatively the callable service can be a service available as part of the operating system. The callable service preferably includes a device wide interface that enables other applications to call activate or otherwise interact with the callable service. In a preferred implementation an application will programmatically call the background callable service to complete TFA specific tasks such as enrolling a device accessing TFA request information authentication a TFA request canceling a TFA request marking a TFA request as fraud and or any suitable TFA action. A callable service can include managed tokens and device cryptographic credentials that are stored within memory with permissions scoped sandboxed or otherwise limited to access by the callable service applications of the service providers cannot access the TFA credentials.

In another preferred implementation the TFA client service of the system includes an application callable service which functions to provide a mechanism for native client application integration to depend upon for TFA. The application callable service is preferably a user facing application that provides the user interface of the TFA process as shown in . As opposed to the application transparently using a background callable service as described above the application can transfer user interface control to the application callable service for TFA related interactions. In other words the application of a service provider delegates TFA user flows to the user interface and application logic of the application callable service. The application callable service can be a separate application that is downloaded and installed by the user. As with the system callable service the application callable service can be used by multiple disparate applications that implement TFA through the system. The interface of the application callable service can be skinable or otherwise customizable by a service provider. The application preferably uses a device wide interface to transfer to and from the application callable service. The device wide interface can be application URI redirection wherein different applications register different URI protocols and accessing a URI with that protocol results in passing the URI handling to the corresponding application. The system callable service can include registration for a system URI scheme and store a URI scheme of the sending application such that an application can redirect to a TFA native application and then transfer back to the application. Other suitable inter application communication and switching mechanisms may alternatively be used. Push notifications can go through the third party application and redirect to the application service. Alternatively push notifications can go through the application service and redirect to an appropriate application. As mentioned above any of the variations TFA client services can exist and be selectively engaged depending on the context and specific service provider.

As shown in a method of a preferred embodiment preferably includes processing an enrollment request for a device application on behalf of a service provider S and executing a two factor authentication request for an enrolled device application on behalf of the service provider S. More specifically the method of a preferred embodiment preferably includes receiving an enrollment request of an account S transmitting an activation code S pairing a device with the account through the activation code S receiving an authentication request for an enrolled application S notifying the application S delivering the authentication request to the application S validating an application response S and transmitting an assessment S. The method preferably functions to allow an application developer to seamlessly integrate a two factor authentication or authorization service into a web portal application or device. The service provider is preferably a web service web application or other device that has an additional access portal such as a mobile application.

The method enables a TFA challenge to be populated within a branded device application of the service provider as opposed to an application of the TFA service. For example a user may access a Service Provider A and choose to enable two factor authentication. The user then uses a mobile application of Service Provider A to complete enrollment. When the user subsequently tries to log into the web application of Service Provider A a TFA login request may be pushed to the mobile application. This scenario is preferably completed while Service Provider A is leveraging an outside TFA platform service. Alternatively or additionally a passcode can be generated on the mobile application and authenticated by the TFA service.

In a second preferred embodiment a TFA challenge may be populated within a co branded application that may be at least partially customized by the service provider. For example the service provider may set parameters of how TFA occurs and a logo and other branding aspects specified by the service provider. In such a variation a single application may be used to provide TFA challenge interactions for a plurality of application entities. In another variation the TFA challenge is performed through a third party application and cooperatively facilitated by the co branded application. The user flow of TFA can included redirection from the third part application to the co branded application to complete the authentication and then redirecting back to the third party application. In one implementation customization directives are passed from the third party application to the co branded application. The customization directives can specify defined interface assets e.g. graphics fonts etc. layout and or other styling. In an alternative implementation the customization directives can be stored within an SDK configuration of the service provider and retrieved from the TFA service when rendering the interface in the secondary application.

The two factor authentication system and processing is preferably transparent to the user. The method may include automatically or selectively determining a mode medium and or mechanism of TFA according to the application configuration of the requesting service provider and or account. The authentication mode can be selected from a set of options that can include notification mode passcode mode SMS mode and or any other suitable mode of an additional factor of authentication. If a mode is not specified or selected a default mode may be selected or alternatively a mode can be automatically selected according to the account. The history of the account e.g. the last used mode the default mode of the account or any suitable heuristic can be used. The method can additionally support multiple configurations for a single service provider account pair. Different accounts of the same service provider or different service providers can use different modes. The method preferably uses a TFA client service of a TFA SDK a background callable TFA service and or an application callable TFA service.

The method additionally includes providing a TFA client service to an application of a service provider S which functions to integrate TFA application logic and authentication data management within the interactions of an outside application as shown in . Step S preferably enables outside developers and users of an authentication layer e.g. a TFA service platform to provide multi factor authentication or authorization functionality without exposing end users of the service provider to the TFA service platform which may be an unknown entity to the end user. Providing a TFA client service to an application of a service provider S can include providing a TFA SDK S providing a callable client service S and or providing an application callable service S which all function to provide various mechanisms of integrating a third party application with a native application.

The TFA SDK of block S is preferably a downloadable data object distributed or offered by the implementer of the method e.g. the TFA service platform . The TFA SDK is preferably provided as source code configuration binary configuration mixed source and binary configuration and or any suitable data object form. The Service provider or more likely a developer on behalf of the service provider integrates the TFA SDK into an application of the service provider. The TFA SDK can be a framework linked in application source code development a library downloaded and included within the third party application or integrated in any suitable manner. A documented interface is preferably provided such that application logic configuration can interact with the TFA SDK during execution of an application instance. The TFA SDK is preferably compiled assembled linked and otherwise integrated into the executable file resource or data object that is distributed to devices of end users. Users of an application instance can preferably utilize application logic and resources of the TFA SDK by using the application.

As mentioned above there may be different modes that a service provider can use the provided TFA SDK. In a first mode the TFA SDK is used within a third party application instance. Communication cryptographic processing e.g. storing tokens signing of requests verification of signatures generation of passcodes etc. user interaction management e.g. displaying TFA request details receiving user input etc. and other TFA related processes can all be managed within the third party application. The third party application mode can afford a high level of customization control. The TFA SDK is preferably compiled into the third party application. In a second mode the TFA SDK is a secondary application that is instantiated on the same device as a third party application. The secondary application is preferably distributed by the TFA service provider and can be used by multiple third party applications. TFA operations that are triggered in the third party application can be redirected to the secondary application. In a modular operating system the application focus switches from the third party application to the secondary application. Redirection can alternatively bring the secondary application to the foreground within an application stack. The secondary application can act to centralize the storage management and service communications to a single controlled application. In a third mode the TFA SDK is installed as a background service. Similar to how TFA operations can be redirected to the secondary application TFA operations can be redirected to the background service. User interface elements are preferably presented and controlled by the third party application.

As shown in processing an enrollment request for a device application on behalf of a service provider S of a preferred embodiment can include receiving an enrollment request of an account S transmitting an activation code S and pairing a device with the account through the activation code S. The method of processing an enrollment request functions to create an association link or mapping between an account and at least one device. Preferably a mobile application is enrolled as the second factor of authentication but any suitable device or application instance may be enrolled. Additionally a plurality of devices may be enrolled and associated with an account. Additional device pairings may be used as backup devices or for alternative roles e.g. device of account user for authentication and device of an administrator for authorization . The pairing is preferably made on behalf of a service provider that is utilizing a TFA platform service e.g. system implementing the method and pairs with a TFA client service that is integrated with an application of the service provider. Herein the method is described from the perspective of a TFA service that interacts with service providers and third party application instances the method can additionally include the operational steps of the service provider the application instances TFA application instances and or other suitably involved components.

Step S which includes receiving an enrollment request of an account functions to be notified by a service provider that a device application should be provisioned for an account. The enrollment request will preferably be made by a web application a native application a web service or some other outside service provider. The TFA service is preferably configured to support TFA services for a plurality of service providers. Each service provider can include multiple user accounts that can be enrolled in the TFA service for TFA. Step S can initially include configuring SDK usage of a service provider which functions to initially set up a service provider to use the TFA SDK with a client application for authenticating events of the service provider e.g. login events . Configuring SDK usage can include sharing synchronizing of integration tokens secret tokens server time API hostnames and other suitable properties used by the service provider and the client applications.

After a service provider is configured in the TFA service users can be enrolled or added to the TFA service. The enrollment request is preferably made through an API by a service provider and received at a TFA service. Alternatively the enrollment may be made through a user interface control panel of the two factor authentication service or any suitable user interface. The requesting entity is preferably an administrator developer account of the service provider in the TFA service. The requesting entity preferably initially authenticates the account or alternatively provides authentication credentials in the parameters of the enrollment request so that the enrollment request can be validated. The enrollment request is preferably an API call to an enrollment resource e.g. enroll . The enrollment request can include parameters such as a username of the account associated with user device platform of the user device the role of the user device e.g. default TFA device backup TFA device authorization device etc. mode of TFA e.g. passcode or pushing a login request expiration as a TFA device application or any suitable parameter to associate with a device application.

Step S which includes transmitting an activation code functions to respond to the enrollment request. The TFA service preferably generates a unique activation code and a device identifier ID . The device ID is preferably generated for the account and associated with the unique activation code. Once the device is activated through the activation code the TFA service can use the device ID to know which device should be used in performing TFA. In one preferred embodiment the TFA service may only store a record of the device ID and necessary information to communicate with the related device. The TFA preferably transmits the activation code and the device ID. In this embodiment control and responsibility of associating devices with the account is delegated to the service provider. In an alternative embodiment the TFA service may additionally or alternatively use a supplied username or account ID provided by the service provider. The username account ID requesting entity ID or any suitable unique identifier may be used as the device ID or as an associated parameter. In one variation the activation code is encoded into a URI. In another variation the activation code is a character based key. In another variation the activation code may be graphical encoding of the activation code such as a QR code bar code or a computer readable code. The activation code is preferably single use and the activation code may additionally have an expiration time window or other conditional properties. For example the activation code may require the enrolling device to have a particular version of the mobile application be of a particular device type be from a particular geographical location or have any suitable property.

A service provider that receives the device ID and activation code can preferably use that information to activate an instance of a device application i.e. an application on client device used as an additional factor of authentication such as a smart phone or mobile computing device . The service provider will preferably store the device ID in a database relating the device ID to the associated account. The device ID can later be used in initiating a TFA interaction with the device. Additionally the service provider transmits the activation code to the user device or otherwise facilitates the transfer of the activation code to the device. This may be done in a number of ways. The activation code may be emailed sent in an SMS message sent in an MMS message sent in an application message e.g. push notification or application specific notification message displayed as a QR code or transmitted in any suitable medium. The activation code is preferably received by an instance of a device application that preferably implements the methods of a TFA SDK or alternatively natively implements methods to communicate with an application interface of the TFA service. In a variation where the activation code is a URI the URI may specify a particular application on the client device to redirect to upon accessing the URI the specified application can then process the activation code. When the URI is opened the mobile application may be able to recognize the URI as an activation code and trigger an activation process using the activation code portion of the URI. The activation URI may additionally be used to initially load a website where if the required applications are installed to complete TFA the user redirected to the appropriate application but if the required application is not installed the user is prompted to install the proper applications before completing activation. In an alternative embodiment the device application may scan a graphical activation code receive a user transcribable code e.g. a 6 digit code or obtain the activation code in any suitable manner. In another variation the service provider may recognize when the related account is logged in to a device application and transparently transfer the activation code directly from the service provider to the device application through a communication channel of the service provider. The activation code may alternatively be transferred to the mobile application in any suitable manner.

Step S which includes pairing a device with the account through the activation code functions to create an association between a device ID and a particular device application. The device application may process the activation code to verify that the request is valid. Additionally the device application may perform any suitable configuration so that the device application may subsequently be used for TFA. Configuring for TFA may include characterizing the identity of the application instance and or device registering the application for push notifications subscriptions or other messaging systems configuring a passcode generation service collecting any information such as a pin code passcode generation tokens biometric readings or other information and or performing any suitable processes for the application to be used as an additional factor of security. In one variation a remote notification system e.g. a push notification service of a carrier or phone manufacturer may be configured with a notification certificate such that the TFA service can transmit application notifications on behalf of the device application. The application preferably calls an activation method of the TFA SDK and the device application communicates pairing information between the TFA service and the device application. Upon successfully completing the pairing communication the device ID is preferably uniquely associated with the application instance and the application may be used as an additional factor of security.

As shown in a method for executing a two factor authentication request for the enrolled device on behalf of the application entity of a first preferred embodiment can include receiving an authentication request for an enrolled application S notifying the application S delivering the authentication request to the application S validating an application response S and transmitting an assessment S. The first preferred embodiment of S preferably functions to enable validation of an authentication request from within the application. A notification or message is preferably sent to the device which alerts the user. The notification or message preferably opens or directs a user to the application and then a user can complete the two factor authentication.

Step S which includes receiving an authentication request for an enrolled application functions to have a web application initiate two factor authentication. Preferably a service provider will make an API call to request TFA be completed for a particular device. In one variation the authentication request preferably includes a device ID. The TFA service can access records for that device ID to determine the device application to notify in S. In an alternative variation the authentication request may include a user name account ID or an alternative identifier. The TFA service preferably has a record such that the associated device application can be identified. The authentication request can additionally indicate the form of TFA if there are various forms of TFA. One preferred form of TFA is verification through a notification. Another preferred form of TFA is verification through an application generated passcode as described below. Additionally the TFA service may initiate a status API resource so that the service provider can asynchronously poll the status of the TFA process for a specific authentication request.

Step S which includes notifying the application functions to push a notification from the TFA service to the device application. The TFA service preferably maintains a database associating account identifiers with the multi authentication information. In one variation the multi authentication information is the device application communication addressing communication information which can be used to transmit authentication request information to the appropriate user device. In another variation the multi factor authentication. In one preferred embodiment the TFA service pushes a message to the device through a notification service of a carrier or device manufacturer. A device push or messaging service will preferably display a message notifying a user of an authentication attempt and upon user activation of the notification the device application will open or load. In an alternative embodiment Step S may be performed transparently selectively skipped or avoided entirely. If the application is already open then the TFA service may send a message or the device application may poll the TFA service to identify when an authentication request is pending.

Step S which includes delivering the authentication request to the device application functions to transfer necessary information to the device application to complete the authentication request. Preferably the device application will send a message to the TFA service requesting the authentication request details. The TFA service will map the device application to the pending authentication request for the device ID and respond to the application with the request details. At the device application the TFA SDK preferably facilitates the requesting and receipt of the authentication request details from the TFA service. The authentication request details may include a description of the type of request such as login money withdrawal change of password or any suitable type of request. The authentication request details may additionally include the response options such as confirm cancel fraud or any suitable response.

The device application can process or manage of the authentication request in variety of different modes. Processing the authentication request can include verifying of the authentication request rendering of authentication request information obtaining user response and transmitting a response to the authentication response. In a first mode the authentication request is delivered to a third party application that integrates the TFA SDK component. The third party application is preferably configured to process the authentication internally through internal calls to the TFA SDK. The user interface of the third party application can be entirely designed and customized to the specifications of the third party application. Alternatively pre configured user interface elements may be accessed through the TFA SDK. In an alternative mode the TFA SDK tools are installed as a background service. A third party application is configured to use the public interface to access the background service. The user interface may similarly be fully defined within the third party application. In another mode a secondary application that is configured to implement TFA SDK functionality can be used. In a first variation the authentication request is received at a third party application the third party application redirects to the second application passing the authentication request the secondary application processes the request and the secondary application can then redirect back to the third party application. All authentication processing is performed through the secondary application in this mode. The redirecting to the secondary application can provide interfaces to provide user interface customization such specifying the styling and media assets used within the authentication interface of secondary application. In an alternative variation 

Whether in the third party application a background service or in a secondary application processing the authentication request functions to cryptographically secure communication with the TFA service and to obtain user intent regarding the authentication attempt. The received authentication request is preferably cryptographically verified using shared tokens between the application on the client device and the TFA service which functions to ensure the request originates from the TFA service and is legitimate. The authentication request can include contextual information about the authentication request such as a description of the event such as time location event type and the like. This information may be displayed to the user. Then various response options can be displayed. The response options preferably include confirm and cancel options but may additionally include a fraud reporting option and any suitable options. A user s selected response option can be received through the user interface elements of the device and then used in replying to the authentication request.

Step S which includes validating an application response functions to obtain user confirmation. The application response is preferably received at the TFA service. The application response can include a cryptographic signature or be otherwise cryptographically validated as originating from the device. The TFA service can verify the origin of the authentication response. In one variation a signature could be verified through an asymmetric key verification process e.g. verified with a RSA public key associated with the RSA private key used of sign the response from the device . In another variation a symmetric key algorithm could be used. For the purposes of communication between the device application and the TFA service confidentiality of the network transport is preferably preserved through a secure transport protocol e.g. HTTPS TLS etc. . As described above the application can use the authentication request details to render a login request confirmation view. The user can confirm or deny the request as shown in . Additionally or alternatively the user may take any suitable action allowed by the TFA service. In one embodiment the user must complete a challenge such as entering a pin or passcode answering a security question or completing any suitable form of challenge. The login request confirmation view is preferably rendered within the application. The application may apply any suitable styling layout and or user interface customization to the confirmation view. Alternatively the TFA SDK may provide a method to render a substantially pre configured confirmation interface. The TFA SDK can additionally facilitate transmitting the obtained application response to the TFA service. Alternatively the confirmation response may be communicated to the TFA service by the application or any suitable component of the device. The TFA service can validate assess verify or check the response obtained from the application.

Step S which includes transmitting an assessment functions to transfer the result of the second factor of authentication to the service provider. If the user confirmed the authentication request in the device application the TFA service preferably communicates a successful completion of the second factor of authentication. If the user denied or canceled the authentication request the TFA service preferably communicates an indication of the failure of the second factor of authentication. The failure can be explicit in that the authentication request is canceled denied or is responded to with an error. The failure can alternatively be implicit such as with a null response. Other response options such as an option to report fraud can additionally be delivered to the service provider but alternatively the reported fraud may be managed within the TFA service to detect fraudulent requests. The web application will preferably use the assessment in enforcing the user request occurring within the web application. For example if the user was attempting to login to the web application the transmitted assessment is used in allowing or denying the login request. The service provider may use the TFA response for any suitable alternative purpose.

As shown in a method for executing a two factor authentication request of the enrolled device application on behalf of the service provider using a passcode S of a second preferred embodiment can include receiving an authentication request for an enrolled device application S generating a passcode in the device application S validating the passcode at the TFA service S and transmitting an assessment S. This method can function to enable a TFA request to be completed without the device application communicating directly with the TFA service. The first preferred embodiment of using an application prompt and the second preferred embodiment of using a passcode may additionally be used in combination as selective options by the service provider and or in combination with any suitable alternative forms of second factor security. The use of a passcode is preferably accompanied by configuring the passcode generation service during enrollment of the device application. Passcode generation may not require communication between the TFA service and the device application and instead operates through passcode generation synchronized through credentials established on the device application through the activation code. The passcode generation may additionally be dependent on establishing an integration key of the service provider a secret key of the service provider or any additional token or key for the passcode generation service. The passcode generation service can exist within the device application e.g. the device application uses an SDK that internally processes passcode generation requests but the passcode generation service may alternatively exist external to the device application wherein the SDK is used to communicate with a secondary application or a background passcode generation service. In the case of the secondary application the user interface can be customized according to interface directives of the device application service provider.

Step S which includes receiving an authentication request for an enrolled device application is preferably preformed substantially similar to that of the first preferred embodiment. In a variation where the form of TFA is a selective option the authentication request preferably indicates that the passcode form of TFA should be used. In one variation the authentication request is performed after generating a passcode in the device application S and the passcode is preferably included in the authentication request. For example a user will access a portal of a service provider and provide any initial authentication information e.g. username and password . Then the user can use the device application to obtain a passcode generated by a method of the TFA SDK. The user will supply the service provider with the passcode and the service provider will submit an authentication request with the passcode. The TFA service preferably replies with a synchronous response indicating the assessment of the passcode.

Step S which includes generating a passcode in the device application functions to create a single use passcode or otherwise unique token associated with the device application. The passcode is preferably a one time passcode generated using a technique of time synchronized passwords a cryptographic hash function a pre generated list of passwords stored on the device or generated using any suitable technique. The passcodes generated are preferably uniquely identifiable as originating from the device application. The passcode generation approach may be seeded or configured during the enrollment of the device. For example a one time password generation algorithm may be seeded during Step S. The passcode is preferably generated by the TFA SDK and then communicated to the device application. The device application then preferably displays an interface to communicate the passcode as shown in .

Step S which includes validating the passcode at the TFA service functions to verify or check the passcode supplied to the TFA service. The passcode is preferably verified for a particular device ID or other suitable identifier. As mentioned above the generated passcode is preferably unique to the device and the TFA service can preferably determine if the passcode is one that could have been generated by the device application. As mentioned above the passcode and the device ID are preferably supplied in the authentication request. Upon assessing the validity of the passcode the TFA service preferably sends a response validating or invalidating the passcode. The service provider can then enforce the result of the two factor authentication in any suitable manner.

The system and methods of the preferred embodiment and variations thereof can be embodied and or implemented at least in part as a machine configured to receive a computer readable medium storing computer readable instructions. The instructions are preferably executed by computer executable components preferably integrated with a two factor authentication service and or a two factor authentication software development kit. The computer readable medium can be stored on any suitable computer readable media such as RAMs ROMs flash memory EEPROMs optical devices CD or DVD hard drives floppy drives or any suitable device. The computer executable component is preferably a general or application specific processor but any suitable dedicated hardware or hardware firmware combination device can alternatively or additionally execute the instructions.

As a person skilled in the art will recognize from the previous detailed description and from the figures and claims modifications and changes can be made to the preferred embodiments of the invention without departing from the scope of this invention defined in the following claims.

