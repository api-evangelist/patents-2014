---

title: Web service API for unified contact store
abstract: An Application Programming Interface (API) provides functions for interacting with contact lists and contacts that are stored in a unified contact store by a primary contact service. For example, a client of a unified communications service may use the API to access contact information that is stored with a primary contact service (e.g. a messaging application/service). The contact information is maintained by the primary contact service. The API includes functions such as, but not limited to: adding a new IM contact to a group, adding a new IM group, removing an IM contact from a group, adding a distribution group to an IM list, getting an IM item list, and tagging an IM contact. The contacts may be obtained from the primary contact service and temporarily stored by the client (e.g. within a cache) of a different service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09501335&OS=09501335&RS=09501335
owner: Microsoft Technology Licensing, LLC
number: 09501335
owner_city: Redmond
owner_country: US
publication_date: 20140311
---
This application is a continuation of U.S. Pat. No. 8 689 243 filed Nov. 4 2011 and entitled Web Service API for Unified Contact Store the disclosure of which is incorporated by reference herein in its entirety.

Many different types of services programs use contacts for communication. For example email programs may use email addresses Instant Messaging IM programs may use buddy lists and IM contacts phone programs may use telephone numbers videoconferencing programs may use a variety of different contacts e.g. IM phone email . . . . Accessing and managing all of these different contacts and lists can be a complex task.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

An Application Programming Interface API provides functions for interacting with contact lists and contacts that are stored in a unified contact store by a primary contact service. For example a client of a unified communications service may use the API to access contact information that is stored with a primary contact service e.g. a messaging application service . Instead of maintaining separate copies of common contact information at both the unified communications service and the primary contact the contact information is maintained by the primary contact service. The API includes functions such as but not limited to adding a new IM contact to a group adding a new IM group removing an IM contact from a group adding a distribution group to an IM list getting an IM item list and tagging an IM contact. The contacts may be obtained from the primary contact service and temporarily stored by the client e.g. within a cache of a different service.

Referring now to the drawings in which like numerals represent like elements various embodiments will be described. In particular and the corresponding discussion are intended to provide a brief general description of a suitable computing environment in which embodiments may be implemented.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Other computer system configurations may also be used including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Distributed computing environments may also be used where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative computer architecture for a computer utilized in the various embodiments will be described. The computer architecture shown in may be configured as a server computing device a desktop computing device a mobile computing device e.g. smartphone notebook tablet . . . and includes a central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the central processing unit CPU .

A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system application s and other program modules such as Web browser API and contacts manager which will be described in greater detail below.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive the computer readable media can be any available media that can be accessed by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM Erasable Programmable Read Only Memory EPROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments computer may operate in a networked environment using logical connections to remote computers through a network such as the Internet. The computer may connect to the network through a network interface unit connected to the bus . The network connection may be wireless and or wired. The network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of other devices such as a touch input device. The touch input device may utilize any technology that allows single multi touch input to be recognized touching non touching . For example the technologies may include but are not limited to heat finger pressure high capture rate cameras infrared light optic capture tuned electromagnetic induction ultrasonic receivers transducer microphones laser rangefinders shadow capture and the like. According to an embodiment the touch input device may be configured to detect near touches i.e. within some distance of the touch input device but not physically touching the touch input device . The touch input device may also act as a display . The input output controller may also provide output to one or more display screens a printer or other type of output device.

A camera and or some other sensing device may be operative to record one or more users and capture motions and or gestures made by users of a computing device. Sensing device may be further operative to capture spoken words such as by a microphone and or capture other inputs from a user such as by a keyboard and or mouse not pictured . The sensing device may comprise any motion detection device capable of detecting the movement of a user. For example a camera may comprise a MICROSOFT KINECT motion capture device comprising a plurality of cameras and a plurality of microphones.

Embodiments of the invention may be practiced via a system on a chip SOC where each or many of the components processes illustrated in the FIGURES may be integrated onto a single integrated circuit. Such a SOC device may include one or more processing units graphics units communications units system virtualization units and various application functionality all of which are integrated or burned onto the chip substrate as a single integrated circuit. When operating via a SOC all some of the functionality described herein with respect to the Unified Communications via application specific logic integrated with other components of the computing device system on the single integrated circuit chip .

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked personal computer such as the WINDOWS SERVER WINDOWS 7 operating systems from MICROSOFT CORPORATION of Redmond Wash.

The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store one or more applications such as messaging application e.g. MICROSOFT OUTLOOK productivity applications and may store one or more Web browsers . The Web browser is operative to request receive render and provide interactivity with electronic documents such as a Web page. According to an embodiment the Web browser comprises the INTERNET EXPLORER Web browser application program from MICROSOFT CORPORATION.

Contacts manager is configured to interact with contacts and lists that are associated with one or more applications. Contacts manager may be a part of many different applications services. For example contacts manager may be a part of a cloud based multi tenant service that provides resources e.g. services data . . . to different tenants e.g. MICROSOFT OFFICE 365 . Contacts manager may be a part of a primary contact service that includes a unified contact store for at least the primary contact service and a different service. According to an embodiment primary contact service is MICROSOFT EXCHANGE and the different service is MICROSOFT LYNC 2010. An Application Programming Interface API provides functions for interacting with contact lists and contacts that are stored in a unified contact store by a primary contact service. For example a client of a unified communications service may use the API to access contact information that is stored with a primary contact service e.g. a messaging application service . Instead of maintaining separate copies of common contact information at both the unified communications service and the primary contact the contact information is maintained by the primary contact service. The API includes functions such as but not limited to adding a new IM contact to a group adding a new IM group removing an IM contact from a group adding a distribution group to an IM list getting an IM item list and tagging an IM contact. The contacts may be obtained from the primary contact service and temporarily stored by the client e.g. within a cache of a different service. Additional details regarding the operation of contacts manager will be provided below.

As illustrated service is a multi tenant service that provides resources and services to any number of tenants e.g. Tenants 1 N . According to an embodiment multi tenant service and unified communications service are cloud based services that provides resources services to tenants subscribed to the service and maintains each tenant s data separately and protected from other tenant data. For example service may be configured to provide services corresponding to messaging e.g. MICROSOFT EXCHANGE and unified communications service may be configured to provide a unified communications environment e.g. MICROSOFT LYNC 2010 that comprises video IM email sharing and the like. Both the primary contact service and the unified communications service interact with contacts such as IM contacts and lists.

One or more contacts manager may be included within the system. For example a single contacts manager may be utilized within service and or a contacts manager may be included at other locations e.g. each tenant and user . The distributed contacts managers may be configured to interact with each other. For example contacts manager at unified communications service may be configured to interact with the contacts manager on client and primary contact service .

Primary contact service is configured to include a unified contacts store that stores contacts for one or more services clients. Contacts lists originally stored at a different service e.g. contacts at service may be migrated to unified contacts at primary contact service such that service may interact with the contacts list using the web service APIs. According to an embodiment once the contacts are migrated to the primary contact service the contacts may be removed from the different service e.g. service . When desired copies may be obtained from primary contact service and stored. For example client has requested through the API one or more lists and contacts to be stored within a cache . Providing a unified contact store that may be accessed by different clients services assists in managing the common lists contacts between the different services.

After a start operation the process flows to operation where contacts are migrated from the different service client application to the primary contact service when determined According to an embodiment the contacts are IM contact lists that are migrated from a unified communications service to a messaging service. The contacts are migrated to the primary contact service when the contacts at the different service do not exist at the primary contact service. The contacts may be migrated using the API. Once the contacts are migrated from the different service to the primary contact service the contacts are maintained by the primary contact service and accessed manipulated using the API.

Moving to operation a call using the API is received by the primary contact service. The call may be made by a client application of a service e.g. a client of the different service that is different from the primary contact service and or from a service itself e.g. the different service . The API includes functions such as but not limited to adding a new IM contact to a group adding a new IM group removing an IM contact from a group adding a distribution group to an IM list getting an IM item list and tagging an IM contact. According to an embodiment each call to the API typically receives a context parameter and a request parameter. The context parameter is used for authentication and the request parameter is used to provide the information used to request the action to be performed regarding the identified contact s list s .

Flowing to operation the call using the API is authenticated by the primary contact service. The call is authenticated to help ensure that the requestor is authorized to perform the requested operation regarding the contacts lists through the API. The context parameter may include a variety of different information including but not limited to information about the requestor of the current call such as user identity preferred culture identification of a mailbox security information e.g. token certificate and the like. According to an embodiment each API call is stateless. In other words each API call can be processed and authenticated independently of other calls.

Transitioning to operation a determination is made as to what contact s list s are affected by the call. For example when adding a contact to a group a group is affected. Generally one or more contacts lists within the primary contact service may be added deleted changed queried in response to a call.

Moving to operation the requested operation is performed. For example an IM contact is added deleted to from group a group of contacts is added deleted a new group is added deleted an IM contact is added deleted a distribution group is added to an IM list an IM item list is retrieved an IM contact is tagged and the like.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

