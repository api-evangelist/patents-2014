---

title: Methods and systems for determining image similarity
abstract: In one embodiment, a computing device receives a first image from a client device associated with at least one user of a social-networking system. The computing device performs a content-aware hashing function on the first image and generates a large hash value. The computing device then performs a locality-sensitive hashing function on the large hash value to generate a small hash value. The computing device calculates a distance from the small hash value to a cluster center which is associated with the small hash values for at least one other image. If the distance is greater than a threshold distance, the first image is determined not similar to the at least one other image. The computing device creates a new cluster center for the first image. If the distance is less than the threshold distance, the first image is determined similar to the at least one other image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09361542&OS=09361542&RS=09361542
owner: Facebook, Inc.
number: 09361542
owner_city: Menlo Park
owner_country: US
publication_date: 20140828
---
This application is a continuation under 35 U.S.C. 120 of U.S. patent application Ser. No. 13 545 783 filed 10 Jul. 2012.

The present application relates to image processing and in particular systems and methods for determination of image similarity on a social networking system.

Social networking websites provide a dynamic environment in which members can connect to and communicate with other members. These websites commonly may provide online mechanisms allowing members to interact within their preexisting social networks as well as create new social networks. Members may include any individual or other entity such as an organization or business. Among other attributes social networking websites allow members to effectively and efficiently communicate relevant information to their social networks. For example a member may post personal information job information biographical information and other personalized content to areas of the website dedicated to the member. Other members may access the posted content by browsing member profiles or performing dedicated searches.

One popular type of content posted to social networking websites is images. Members often post images to communicate personal information to their social networks. For example posted images may depict family friends locations items and any other subject matter in which a member may have interest. Social networking websites usually encourage the posting of images because the sharing of personal information fosters communication among members and thus helps to realize the potential of the websites.

Certain images may contain content in which social networking websites take special interest for myriad reasons. For example a social networking website may seek to intervene when the same photo is repeatedly posted by different members in violation of the website s terms of use or other guidelines. As another example a social networking website may seek to restrict the posting of an image known by the website to contain inappropriate content. To identify these kinds of objectionable images images may be compared for similarity or identity with images known to be objectionable. When images similar to objectionable images are identified social networking websites may take appropriate action on them. However due to the large number of images maintained by social networking websites and the significant computational expense in performing image comparisons social networking websites confront challenges in efficiently identifying similar images.

To allow identification and management of images that are similar or identical in content embodiments of the invention provide for efficient comparison of images by a social networking system. When the social networking system determines that images are similar the similar images are associated. Association of similar images facilitates the performance of administrative action on the images. Administrative action may involve the control of certain images whose content may be subject to special handling by the social networking system. For example different members may post or attempt to post the same image in violation of guidelines of the social networking system that in certain circumstances encourage or mandate the posting of personalized unique content only. In accordance with its guidelines the social networking system may restrict postings of such an image. As another example if an image is found to contain inappropriate content the social networking system may prevent or remove all postings of the image. The effectiveness of these administrative actions is based on an ability to identify all instances of an image through image similarity determinations.

To determine possible image similarity a large hash value may be generated for a new image by applying a content aware hashing function to the image. A small hash value then may be generated for the image by applying locality sensitive hashing to the large hash value. Locality sensitive hashing involves projection of the large hash value onto one or more vectors that map to a corresponding coordinate system. Such projection involves reduction of the large hash value from a dimension number k to a dimension number d. Each vector of the d D coordinate system is divided into a number of segments that define buckets into which the small hash value may potentially fall.

The reduction in the number of dimensions in locality sensitive hashing results in loss of information increasing the probability that small hash values will be similar even when their corresponding images are actually different. Thus different images may be incorrectly deemed to be similar because their small hash values are similar or fall into the same bucket. This type of error is often referred to as false positives. Further based on arbitrary coordinate definitions that determine the boundary of a bucket similar images may be incorrectly deemed to be different because their small hash values fall into different buckets. This type of error is often referred to as false negatives. 

In an embodiment of the invention the problem of false positives is addressed. Existing cluster centers associated with the bucket into which the small hash value falls are identified. Existing cluster centers are those that have already been created for existing images and stored by the social networking system. The search space for the new image is substantially reduced by considering only cluster centers that are associated with the bucket instead of all cluster centers stored by the social networking system. The reduction in the search space provides computational efficiencies in the comparison of images.

If there are no existing cluster centers associated with the bucket then a new cluster center is created for the new image and is given the coordinates of the small hash value. The new image is then associated with the new cluster center. Conversely if there is at least one existing cluster center associated with the bucket the distance between the small hash value and each existing cluster center is determined. If the distance from the small hash value to any existing cluster center is greater than a threshold distance then the new image is considered to be different from the images associated with the existing cluster centers. A new cluster center is then created for the new image and the new image is associated with the new cluster center. Thus more than one cluster center may be created and associated with the bucket if the images are not considered to be similar. If the distance from the small hash value to at least one existing cluster center is less than the threshold distance then an existing cluster center with the smallest distance to the small hash value of the new image is identified. The new image is considered to be similar to the images associated with the identified existing cluster center and the new image may be associated with the identified existing cluster center.

In an embodiment of the invention the problem of false negatives is addressed. Buckets that are close to the small hash value may be identified. The identified buckets may be those that are adjacent to the small hash value and have as one of their vertices the vertex in the coordinate system closest to the small hash value. The buckets that are close to the small hash value may also be identified in other manners. All existing cluster centers associated with the identified buckets are identified. The search space for the new image is substantially reduced by considering only cluster centers that are associated with the buckets that are close to the small hash value instead of all cluster centers stored by the social networking system. The reduction of the search space provides further computational efficiencies in the comparison of images.

If there is no existing cluster center associated with any of the identified buckets a new cluster center is created for the new image and is given the coordinates of the small hash value. The new image is then associated with the new cluster center. Conversely if there is at least one existing cluster center associated with the identified buckets then the distance between the small hash value and each existing cluster center is determined. If the distance from the small hash value to any existing cluster center is greater than a threshold distance then the new image is considered to be different from the images associated with the existing cluster centers. A new cluster center is then created for the new image and the new image is associated with the new cluster center. If the distance from the small hash value to at least one existing cluster center is less than the threshold distance then an existing cluster center with the smallest distance to the small hash value of the new image is identified. The new image may be associated with the identified existing cluster center and the new image is considered to be similar to the images associated with the identified existing cluster center.

In an embodiment once the relevant buckets are identified with the small hash value the large hash value instead of the small hash value may be used to create a cluster center or to compare with an existing cluster center associated with the identified buckets in the assessment of image similarity.

In an embodiment of the invention administrative action may be taken to restrict use of an image based on identification of an associated cluster center. For example if an image is deemed inappropriate or otherwise subject to special handling by the social networking system the cluster center associated with the image may be identified. Then all images associated with the cluster center may be identified. Once so identified the images may be taken down from the social networking system. As another example if an image is deemed inappropriate the cluster center associated with the image may be identified. Once the cluster center is so identified any future images that may be associated with the cluster center will not be able to be uploaded to the social networking system.

Many other features and embodiments of the invention will be apparent from the accompanying drawings and from the following detailed description.

The figures depict various embodiments of the present invention for purposes of illustration only wherein the figures use like reference numerals to identify like elements. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

The user device comprises one or more computing devices that can receive input from a user and can transmit and receive data via the network . In one embodiment the user device is a conventional computer system executing for example a Microsoft Windows compatible operating system OS Apple OS X and or a Linux distribution. In another embodiment the user device can be a device having computer functionality such as a smart phone a tablet a personal digital assistant PDA a mobile telephone etc. The user device is configured to communicate via the network . The user device can execute an application for example a browser application that allows a user of the user device to interact with the social networking system . In another embodiment the user device interacts with the social networking system through an application programming interface API that runs on the native operating system of the user device such as iOS and ANDROID. The user device is configured to communicate with the external system and the social networking system via the network which may comprise any combination of local area and or wide area networks using wired and or wireless communication systems.

In one embodiment the network uses standard communications technologies and or protocols. Thus the network can include links using technologies such as Ethernet 802.11 worldwide interoperability for microwave access WiMAX 3G 4G CDMA GSM LTE digital subscriber line DSL etc. Similarly the networking protocols used on the network can include multiprotocol label switching MPLS transmission control protocol Internet protocol TCP IP User Datagram Protocol UDP hypertext transport protocol HTTP simple mail transfer protocol SMTP and file transfer protocol FTP . The data exchanged over the network can be represented using technologies and or formats including hypertext markup language HTML and extensible markup language XML . In addition all or some links can be encrypted using conventional encryption technologies such as secure sockets layer SSL transport layer security TLS and Internet Protocol security IPsec .

In one embodiment the user device may display content from the external system and or from the social networking system by processing a markup language document received from the external system and from the social networking system using a browser application . The markup language document identifies content and one or more instructions describing formatting or presentation of the content. By executing the instructions included in the markup language document the browser application displays the identified content using the format or presentation described by the markup language document . For example the markup language document includes instructions for generating and displaying a web page having multiple frames that include text and or image data retrieved from the external system and the social networking system . In various embodiments the markup language document comprises a data file including extensible markup language XML data extensible hypertext markup language XHTML data or other markup language data. Additionally a markup language document may include JavaScript Object Notation JSON data JSON with padding JSONP and JavaScript data to facilitate data interchange between the external system and the user device . The browser application on the user device may use a JavaScript compiler to decode such a markup language document .

In one embodiment the user device also includes one or more cookies including data indicating whether a user of the user device is logged into the social networking system which may enable customization of the data communicated from the social networking system to the user device .

The external system includes one or more web servers including one or more web pages which are communicated to the user device using the network . The external system is separate from the social networking system . For example the external system is associated with a first domain while the social networking system is associated with a separate social networking domain. Web pages included in the external system comprise markup language documents identifying content and including instructions specifying formatting or presentation of the identified content.

The social networking system comprises one or more computing devices storing a social network or a social graph including a plurality of users and providing users of the social network with the ability to communicate and interact with other users of the social network. The social networking system is further described below. In use users join the social networking system and then add connections to any number of other users of the social networking system to whom they desire to be connected. As used herein the term friend refers to any other user of the social networking system to whom a user has formed a connection association or relationship via the social networking system .

Connections may be added explicitly by a user or may be automatically created by the social networking systems based on common characteristics of the users e.g. users who are alumni of the same educational institution . For example a first user specifically selects a particular other user to be a friend. Connections in the social networking system are usually in both directions but need not be so the terms user and friend depend on the frame of reference. Connections between users of the social networking system are usually bilateral two way or mutual but connections may also be unilateral or one way. For example if Bob and Joe are both users of the social networking system and connected to each other Bob and Joe are each other s connections. If on the other hand Bob wishes to connect to Joe to view data communicated to the social networking system by Joe but Joe does not wish to form a mutual connection a unilateral connection may be established. The connection between users may be a direct connection however some embodiments of a social networking system allow the connection to be indirect via one or more levels of connections or degrees of separation.

In addition to establishing and maintaining connections between users and allowing interactions between users the social networking system provides users with the ability to take actions on various types of items supported by the social networking system . These items may include groups or networks where networks here refer not to physical communication networks but rather social networks of people entities and concepts to which users of the social networking system may belong events or calendar entries in which a user might be interested computer based applications that a user may use via the social networking system transactions that allow users to buy or sell items via the service and interactions with advertisements that a user may perform on or off the social networking system. These are just a few examples of the items upon which a user may act on a social networking system and many others are possible. A user may interact with anything that is capable of being represented in the social networking system or in the external system separate from the social networking system coupled to the social networking system via the network .

The social networking system is also capable of linking a variety of entities. For example the social networking system enables users to interact with each other as well as external systems or other entities through an API or other communication channels. The social networking system generates and maintains the social graph comprising a plurality of nodes interconnected by a plurality of edges. Each node in the social graph may represent an entity that can act on another node and or that can be acted on by another node. The social graph may include various types of nodes. Examples of types of nodes include users non person entities content items web pages groups events messages concepts and any other things that can be represented by an object in the social networking system . Other types of nodes in the social graph are relevant in the determination of image similarity by the social networking system . As discussed in more detail below these node types include images buckets in a coordinate system into which hash values of images may fall cluster centers grouping similar images as well as users linked to images. An edge between two nodes in the social graph represents a particular kind of connection or association between the two nodes which may result from node relationships or from an action that was performed by one of the nodes on the other node. For example when a first user identifies a second user as a friend an edge in the social graph is generated connecting a node representing the first user and a second node representing the second user. As various nodes relate or interact with each other the social networking system modifies edges connecting the various nodes to reflect the relationships and interactions.

As further examples of node relationships relevant to the determination of image similarity buckets may be associated with cluster centers a cluster center may be associated with images and images may be associated with users. These associations may be one way or two way. In an embodiment of the invention the associations between buckets and cluster centers are one way from buckets to cluster centers the associations between a cluster center and images are two way and the associations between images and users are two way. The social networking system may use the associations for example to identify similar images and to perform certain administrative actions on those images as discussed in more detail below. As another example if a user proposes posting of a particular new image to the social networking system the social networking system may determine the possible similarity of the new image with other images maintained by it. The user and the new image may be treated as nodes with an edge between them representing their connection.

The social networking system also includes user generated content which enhances a user s interactions with the social networking system . User generated content may include anything a user can add upload send or post to the social networking system . For example a user communicates posts to the social networking system from a user device . Posts may include data such as status updates or other textual data location information images such as photos videos links music or other similar data and or media. Content may also be added to the social networking system by a third party. Content items are represented as objects in the social networking system . In this way users of the social networking system are encouraged to communicate with each other by posting text and content items of various types of media through various communication channels increasing the interaction of users with each other and increasing the frequency with which users interact with the social networking system .

Users may desire to post images to the social networking system to share information about themselves or their interests. Such images may be photos or any other types of content items. To increase communications among users the social networking system may encourage or invite users to post images that depict or otherwise appropriately reflect their individuality and unique interests. To ensure that uploaded images are both unique and otherwise appropriate for the social networking system the social networking system may control or restrict the publication of images by users in some circumstances. For example when an image associated with a user is too similar to or identical with another image associated with another user the social networking system may control or restrict publication of the image. As another example the social networking system may determine that a particular image is inappropriate for publication because its content violates a guideline or other standard. In that situation the social networking system may control or restrict publication of the image and all similar or identical images. To manage the publication of images the social networking system includes an image similarity analysis module as discussed in more detail below.

User profiles include biographic demographic and other types of descriptive information such as work experience educational history hobbies or preferences location and the like that has been declared by users or inferred by the social networking system . This information is stored in the user profile store such that each user is uniquely identified. The social networking system also stores data describing one or more connections between different users in the connection store . The connection information may indicate users who have similar or common work experience group memberships hobbies or educational history. Additionally the social networking system includes user defined connections between different users allowing users to specify their relationships with other users. For example user defined connections allow users to generate relationships with other users that parallel the users real life relationships such as friends co workers partners and so forth. Users may select from predefined types of connections or define their own connection types as needed. Connections with other nodes in the social networking system such as non person entities buckets cluster centers images interests pages external systems concepts and the like are also stored in the connection store .

The social networking system maintains data about objects with which a user may interact. To maintain this data the user profile store and the connection store store instances of the corresponding type of objects maintained by the social networking system . Each object type has information fields that are suitable for storing information appropriate to the type of object. For example the user profile store contains data structures with fields suitable for describing a user s profile. When a new object of a particular type is created the social networking system initializes a new data structure of the corresponding type assigns a unique object identifier to it and begins to add data to the object as needed. This might occur for example when a user becomes a user of the social networking system and the social networking system generates a new instance of a user profile in the user profile store assigns a unique identifier to the user profile and begins to populate the fields of the user profile with information provided by the user.

The connection store includes data structures suitable for describing a user s connections to other users connections to external systems or connections to other entities. The connection store may also associate a connection type with a user s connections which may be used in conjunction with the user s privacy setting to regulate access to information about the user. In an embodiment of the invention the user profile store and the connection store may be implemented as a federated database.

Data stored in the connection store the user profile store and the activity log enables the social networking system to generate the social graph that uses nodes to identify various objects and edges connecting nodes to identify relationships between different objects. For example if a first user establishes a connection with a second user in the social networking system user profiles of the first user and the second users from the user profile store may act as nodes in the social graph. The connection between the first user and the second user stored by the connection store is an edge between the nodes associated with the first user and the second user. Continuing this example the second user may then send the first user a message within the social networking system . The action of sending the message which may be stored is another edge between the two nodes in the social graph representing the first user and the second user. Additionally the message itself may be identified and included in the social graph as another node connected to the nodes representing the first user and the second user.

In another example a first user may tag a second user in an image that is maintained by the social networking system or alternatively in an image maintained by another system outside of the social networking system . The image may itself be represented as a node in the social networking system . This tagging action may create edges between the first user and the second user as well as create an edge between each of the users and the image which is also a node in the social graph. In yet another example if a user confirms attending an event the user and the event are nodes obtained from the user profile store where the attendance of the event is an edge between the nodes that may be retrieved from the activity log . By generating and maintaining the social graph the social networking system includes data describing many different types of objects and the interactions and connections among those objects providing a rich source of socially relevant information.

The web server links the social networking system to one or more user devices and or one or more external systems via the network . The web server serves web pages as well as other web related content such as Java JavaScript Flash XML and so forth. The web server may include a mail server or other messaging functionality for receiving and routing messages between the social networking system and one or more user devices . The messages can be instant messages queued messages e.g. email text and SMS messages or any other suitable messaging format.

The API request server allows one or more external systems and user devices to access information from the social networking system by calling one or more APIs. The API request server may also allow external systems to send information to the social networking system by calling APIs. The external system in one embodiment sends an API request to the social networking system via the network and the API request server receives the API request. The API request server processes the request by calling an API associated with the API request to generate an appropriate response which the API request server communicates to the external system via the network . For example responsive to an API request the API request server collects data associated with a user such as the user s connections that have logged into the external system and communicates the collected data to the external system . In another embodiment the user device communicates with the social networking system via APIs in the same manner as external systems .

The action logger is capable of receiving communications from the web server about user actions on and or off the social networking system . The action logger populates the activity log with information about user actions enabling the social networking system to discover various actions taken by its users within the social networking system and outside of the social networking system . Any action that a particular user takes with respect to another node on the social networking system is associated with each user s profile through information maintained in the activity log or in a similar database or other data repository. Examples of actions taken by a user within the social networking system that are identified and stored may include for example adding a connection to another user sending a message to another user reading a message from another user viewing content associated with another user attending an event posted by another user posting an image attempting to post an image or other actions interacting with another user or another object. When a user takes an action within the social networking system the action is recorded in the activity log . In one embodiment the social networking system maintains the activity log as a database of entries. When an action is taken within the social networking system an entry for the action is added to the activity log . The activity log may be referred to as an action log.

Additionally user actions may be associated with concepts and actions that occur within an entity outside of the social networking system such as an external system that is separate from the social networking system . For example the action logger may receive data describing a user s interaction with an external system from the web server . In this example the external system reports a user s interaction according to structured actions and objects in the social graph.

Other examples of actions where a user interacts with an external system include a user expressing an interest in an external system or another entity a user posting a comment to the social networking system that discusses an external system or a web page within the external system a user posting to the social networking system a Uniform Resource Locator URL or other identifier associated with an external system a user attending an event associated with an external system or any other action by a user that is related to an external system . Thus the activity log may include actions describing interactions between a user of the social networking system and an external system that is separate from the social networking system .

The authorization server enforces one or more privacy settings of the users of the social networking system . A privacy setting of a user determines how particular information associated with a user can be shared. The privacy setting comprises the specification of particular information associated with a user and the specification of the entity or entities with whom the information can be shared. Examples of entities with which information can be shared may include other users applications external systems or any entity that can potentially access the information. The information that can be shared by a user comprises user profile information like profile photo phone numbers associated with the user user s connections actions taken by the user such as adding a connection changing user profile information and the like.

The privacy setting specification may be provided at different levels of granularity. For example the privacy setting may identify specific information to be shared with other users. For example the privacy setting identifies a work phone number or a specific set of related information such as personal information including profile photo home phone number and status. Alternatively the privacy setting may apply to all the information associated with the user. The specification of the set of entities that can access particular information can also be specified at various levels of granularity. Various sets of entities with which information can be shared may include for example all friends of the user all friends of friends all applications or all external systems . One embodiment allows the specification of the set of entities to comprise an enumeration of entities. For example the user may provide a list of external systems that are allowed to access certain information. Another embodiment allows the specification to comprise a set of entities along with exceptions that are not allowed to access the information. For example a user may allow all external systems to access the user s work information but specify a list of external systems that are not allowed to access the work information. Certain embodiments call the list of exceptions that are not allowed to access certain information a block list. External systems belonging to a block list specified by a user are blocked from accessing the information specified in the privacy setting. Various combinations of granularity of specification of information and granularity of specification of entities with which information is shared are possible. For example all personal information may be shared with friends whereas all work information may be shared with friends of friends.

The authorization server contains logic to determine if certain information associated with a user can be accessed by a user s friends external systems and or other applications and entities. The external system may need authorization from the authorization server to access the user s more private and sensitive information such as the user s work phone number. Based on the user s privacy settings the authorization server determines if another user the external system an application or another entity is allowed to access information associated with the user including information about actions taken by the user.

The image similarity analysis module may determine the similarity of images provided to the social networking system and associate the images based on their similarity to perform administrative actions. As used herein similarity between two or more images refers to image content that according to a threshold is identical or nearly identical. For image comparison the large hashing module computes a large hash value for an image which may be checked for similarity with other images in the social networking system . A large hash value is a representation of an image which may comprise pixels represented by bits. The large hash value may comprise a set of values. In an embodiment of the invention the large hashing module may use a content aware hashing function to compute the large hash value for the image.

To facilitate comparison between images the small hashing module computes a small hash value of the large hash value by projecting the large hash value onto a d dimensional d D coordinate system having reduced dimensions where d is the number of dimensions of the coordinate system and may be any integer value of one or greater. A small hash value is a more compact representation of an image and may comprise a set of values. In an embodiment of the invention the small hashing module may apply a locality sensitive hashing function to the large hash value to compute the small hash value. The projection of the large hash value results in the small hash value falling within a bucket of the coordinate system. A bucket is a smallest unit of a coordinate system. For example a bucket may be a smallest segment in a 1 D coordinate system a smallest square in a 2 D coordinate system or a smallest cube in a 3 D coordinate system.

The space searching module may determine the space in the coordinate system to search for cluster centers associated with possible similar images. A cluster center is a point in a coordinate system to which images deemed to be similar are associated. In an embodiment of the invention the space searching module may search for cluster centers only in the bucket within which the small hash value falls. Searching within the same bucket for possibly similar images avoids an incorrect assumption that all images associated with small hash values that fall within the same bucket are similar. In an embodiment of the invention the space searching module may also identify adjacent buckets and search for cluster centers associated with similar images in the adjacent buckets. The adjacent buckets may include buckets that coincide with a vertex of the coordinate system closest to the small hash value. Searching in multiple buckets for possibly similar images avoids an incorrect assumption that images associated with small hash values that fall within different buckets are different. The space searching module achieves computational efficiencies by not searching for cluster centers in all of the buckets of the coordinate system.

The cluster center creation module may create cluster centers associated with buckets and images. For a first image received by the social networking system the cluster center creation module creates a first cluster center associated with the first image. When the distance e.g. the Euclidian distance between a small hash value associated with a second image and the first cluster center is determined to exceed a threshold distance then the cluster creation module may create a second cluster center for the second image. Otherwise the second image is associated with the first cluster center and a new cluster center is not created for the second image as described in more detail below. Each cluster center represents one or more images deemed to be similar.

The proximity determination module may determine the distance between a small hash value associated with an incoming image and a cluster center for one or more existing images maintained in the social networking system . To analyze whether the images are similar the proximity determination module may i compute the distance between the small hash value of the incoming image and the cluster center of the existing image s and ii compare the computed distance against a threshold distance. The proximity determination module effectively applies a radius around the small hash value with the radius being determined by the threshold distance. The value of the threshold distance and radius is configurable and may be determined by for example the proximity determination module or an administrator of the social networking system . The proximity determination module determines when the cluster center falls within the radius and when it falls outside the radius. When the computed distance is less than the threshold distance the incoming image is associated with the cluster center of the existing image s . Conversely when the computed distance is more than the threshold distance the cluster center creation module creates a new cluster center associated with the small hash value of the incoming image.

The administrative action module allows an administrator of the social networking system to manage images based on the association of similar images. For example the administrative action module allows for the takedown and blocking of similar images.

The features and functionality of the large hashing module the small hashing module the space searching module the cluster center creation module the proximity determination module and the administrative action module is described in more detail below.

In certain circumstances the social networking system may desire to control or prevent publication of copied images. For example the social networking system may encourage or require each user to post content that is unique to the user. As another example the social networking system may limit or restrict the posting of an inappropriate image and all similar images. The identification of images similar to a particular image may be achieved by comparing the image against each of the existing images stored in the social networking system . However because the number of existing images may be large and each image may contain many pixels comparing the particular image against each existing image may be computationally intensive and hence impractical.

Images can be analyzed for similarity by applying one or more hashing functions. A hashing function is a function that receives an input value which may comprise many information bits and maps it to a hash value which may comprise fewer bits than the input value . Some hashing functions used for images are content aware. Hashing functions that are content aware have a characteristic that when two images are similar in content the images are mapped to similar hash values. When the distance between two hash values of two images is relatively small the images may be considered similar. For example a content aware hashing function may be applied to a first image of an apple to obtain a first hash value applied to a second image of another apple to obtain a second hash value and applied to a third image of a dog to obtain a third hash value. In this example the first hash value of the first image and the second hash value of the second image are more likely to be close in distance because the content depicted in the first image and the second image is similar. In contrast the first hash value of the first image and the third hash value of the third image are less likely to be close in distance because the content depicted in the first image and the third image is different. Likewise the second hash value of the second image and the third hash value of the third image are less likely to be close in distance because the content depicted in the second image and the third image is different.

Images may be hashed with a content aware hashing function to obtain large hash values for these images. For example a content aware hashing function may hash an image containing thousands or millions of pixels to a large hash value comprising hundreds of values. A large hash value thus may be represented by a set of values with the number of values in the set corresponding to the number of dimensions of the content aware hashing function. Although the content aware hashing function can substantially reduce the amount of information used to represent the image the large hash value still contains a relatively large amount of information. Hence it may be computationally expensive to compare i.e. calculate the distance between large hash values of a large number of images to identify similar images. The determination of possible similarity between images may be especially costly in terms of computational resources when the number of dimensions of the large hash values is large or when a significant number of images require comparison. For example to determine whether a particular image is similar to any other images of a social networking system large hash values for millions or billions of images may need to be computed and then compared posing significant computational expense.

Locality sensitive hashing lsh may be used to address computational expense. Locality sensitive hashing may be applied to a large hash value having a relatively large number of dimensions to obtain a small hash value having fewer dimensions. For example locality sensitive hashing may hash a large hash value having hundreds of dimensions to a small hash value having few e.g. two or three dimensions. A small hash value may comprise a few values whereas a large hash value may comprise many values.

For an image x and an image y locality sensitive hashing produces small hash values from large hash values with the following properties 

Locality sensitive hashing reduces the number of dimensions of large hash values by projecting large hash values onto one or more vectors of a coordinate system having a smaller number of dimensions than the large hash values. Each vector represents a different axis of the coordinate system and corresponds to one dimension of the coordinate system. The vectors of the coordinate system may or may not be orthogonal to one another. Reduction in the number of dimensions of the large hash values through projection enables more efficient comparison of small hash values to determine image similarity. In locality sensitive hashing large hash values may be projected to segments of one or multiple vectors. The segments of vectors in which small hash values may fall map to buckets in the corresponding coordinate system. Thus projection of large hash values associated with images results in small hash values falling into certain buckets.

Conventionally images associated with large hash values that project onto the same bucket are considered to be similar and images associated with large hash values that project onto different buckets are considered to be different i.e. not similar . In the example shown in the large hash values project onto the same bucket and their corresponding images would be deemed similar. Conversely the large hash values project onto different buckets respectively and their corresponding images would be deemed different. Deciding whether images are similar or not based solely on the buckets onto which their large hash values project can often lead to erroneous results as described below.

In the example shown in the large hash value is relatively far from the large hash values . The relatively small separation among the large hash values signifies that the corresponding images of these large hash values are likely to be similar. The relatively large separation between the large hash value and the large hash values signifies that the corresponding image of the large hash value is likely to be different from the corresponding images of the large hash values . Thus projection of the large hash value to fall within the same bucket as the large hash values should not conclusively signify that their corresponding images are similar. As another example the large hash value is relatively close to the large hash value . The relatively small separation between the large hash values signifies that their corresponding images are likely to be similar. Thus projection of the large hash value and the large hash values to fall within different buckets i.e. the bucket and the bucket respectively should not conclusively signify that their corresponding images are different.

As shown by the example in the image associated with the large hash value may be erroneously determined to be similar to the images associated with the large hash values because these large hash values project to the same bucket . Furthermore the image associated with the large hash value may be erroneously determined to be different from the image associated with the large hash value because these large hash values project to different buckets . These errors result from for example i mapping a large hash value having possibly many dimensions to a small hash value having only one dimension in the 1 D coordinate system in and ii quantization of a small hash value into one of the segments of the vector .

In general large hash values may be projected onto d vectors in a d D coordinate system where d may be any integer value. The use of multiple vectors instead of one vector in projections involving locality sensitive hashing may provide more accurate identifications of similar images and different images. Generally when more vectors are used in projections determinations regarding image similarity and differences are more accurate.

In certain cases projection of the large hash value and the large hash values to fall within different segments of the vector i.e. the segment and the segment respectively may more accurately signify that the corresponding image of the large hash value is different from the corresponding images of the large hash values . Likewise in certain cases projection of the large hash values to fall within the same segment may more accurately signify that the corresponding images of the large hash values are similar.

It is often assumed that large hash values projected into different buckets means that their corresponding images are different and that large hash values projected into the same bucket means that their images are similar. However even for projections involving more than one vector shown in these assumptions are often incorrect. Locality sensitive hashing of a large hash value reduces the number of dimensions of the large hash value. This reduction results in loss of information. When the reduction in the number of dimensions is large the loss of information may be large and the probability increases that small hash values will be similar even when their corresponding images are actually different. Thus different images may be incorrectly deemed to be similar because their small hash values are similar or fall into the same bucket. This type of error is often referred to as false positives. Further based on arbitrary coordinate definitions that determine the boundary of a bucket similar images may be incorrectly deemed to be different because their small hash values fall into different buckets. This type of error is often referred to as false negatives. 

In an embodiment of the invention a large hash value is first generated for an image by applying a content aware hashing function to the image. A small hash value is next generated for the image by applying locality sensitive hashing to the large hash value. Locality sensitive hashing involves projection of the large hash value onto one or more vectors. Such projection involves reduction of the large hash value from a dimension number k to a dimension number d. The reduction may be performed by matrix multiplication as follows u Hv where v denotes a set of k values representing the large hash value H denotes a matrix having dimensions d k and u denotes a set of d values representing the small hash value. In an embodiment of the invention the set of k values and the set of d values may be real numbers integers a combination thereof or any other suitable type of value. As shown by the equation above the large hash value is multiplied with the d k matrix H to obtain the small hash value. In effect a dot product is performed between set v for the large hash value and each row of matrix H to obtain a corresponding value in set u for the small hash value. Each row of matrix H corresponds to one vector in a d D coordinate system. The matrix multiplication results in projection of the large hash value onto a number of vectors equal to the dimension number d. In an embodiment of the invention when multiple vectors are used in projection the multiple vectors may be orthogonal to one another. Each vector of the d D coordinate system is divided into a number of segments. A bucket is defined by d segments of the d vectors i.e. one segment of each vector of the d D coordinate system.

In an embodiment of the invention dimension number d is selected to have a value of 3 and the total number of buckets is 10. In another embodiment of the invention dimension number d is selected to have a value other than 3. In an embodiment of the invention the total number of segments for a vector may be 10and thus the total number of buckets is 10. For purposes of illustration projections shown herein are simplified examples of locality sensitive hashing in two dimensions i.e. when dimension number d is selected to have a value of 2.

The mapping in the 2 D coordinate system shows a graphical representation of the projection . The 2 D coordinate system includes an x axis that corresponds to the vector and a y axis that corresponds to the vector . The x axis is divided into units corresponding to the segments of vector . The y axis is also divided into units corresponding to the segments of vector . The segments of the vectors define buckets in the 2 D coordinate system. For example the segment of the vector and the segment of the vector define a bucket in the 2 D coordinate system. A small hash value associated with the image p falls within the bucket . The small hash value comprises i an x value corresponding to the point at which a dashed line from the large hash value terminates on the vector and ii a y value corresponding to the point at which a dashed line from the large hash value terminates on the vector .

To search for images similar to the image p the space searching module in first determines whether any cluster centers are associated with the bucket . Because no cluster centers are associated with the bucket the cluster center creation module creates a first cluster center based on the small hash value . In an embodiment of the invention when the small hashing module determines that a small hash value associated with a new image falls within a bucket the space searching module performs a search for cluster centers associated with images similar to the new image in the same bucket. By limiting the search to cluster centers in one bucket the space searching module optimizes the search process allowing the search to be conducted more rapidly and efficiently. In another embodiment of the invention the space searching module may define the parameters of the search to include other buckets in the coordinate system in addition to the bucket within which the small hash value of the new image falls as discussed in more detail below.

The mapping in the 2 D coordinate system shows a graphical representation of the projection . The small hashing module determines that a small hash value associated with the image p falls within the bucket . To search for images similar to image p the space searching module first determines whether any cluster centers are associated with the bucket . Because the cluster center is associated with the bucket the proximity determination module in determines whether the cluster center is sufficiently close in distance to the small hash value . The proximity determination module computes the distance between the small hash value and the cluster center . The proximity determination module then determines whether the computed distance is less than a threshold distance. If the computed distance is less than the threshold distance which is the case in then the image p is deemed to be similar to the image p and the image p is associated with the cluster center . A new cluster center is not created as shown in . Conversely if the computed distance exceeds the threshold distance not shown in then the image p is deemed to be different from the image p and the cluster center creation module creates a new cluster center for the image p. In effect a circle having radius is drawn around the small hash value . The radius corresponds to the threshold distance. If the cluster center falls inside the circle then the image p is deemed to be similar to the image p and is associated with the cluster center . Conversely if the cluster center falls outside the circle then the image p is deemed to be different from the image p and a new cluster center is created for the image p.

In an embodiment of the invention the threshold distance i.e. the radius may be any suitable value. The value of the threshold distance may be selected based on the desired degree of possible actual similarity between images before the images are deemed to be similar. For example in contexts where images should be deemed to be similar only when there is a relatively high degree of possible actual similarity the threshold distance may be set to a relatively small value. As another example in contexts where images may be deemed to be similar when there is only a modest degree of possible actual similarity the threshold distance may be set to a relatively large value. As yet another example in contexts where an image may be particularly objectionable the threshold distance may be set to a relatively large value to identify more images that may be similar to the objectionable image. Thus the threshold distance may be configurable and may be programmed by an administrator of the social networking system to have any value appropriate for a given context of the social networking system such as a particular application module campaign group user image etc.

To search for images similar to image p the space searching module first determines whether any cluster centers are associated with the bucket . Because the cluster center is associated with the bucket the proximity determination module determines whether the cluster center is sufficiently close in distance to the small hash value . The proximity determination module computes the distance between the small hash value and the cluster center . The proximity determination module then determines whether the computed distance is less than a threshold distance. If the computed distance exceeds the threshold distance as shown in then the image p is deemed to be different from the image p and the cluster center creation module creates a new cluster center for the image p as shown in . Conversely if the computed distance is less than the threshold distance then the image p is deemed to be similar to the image p and the image p is associated with the cluster center not shown in and a new cluster center is not created. In effect a circle having the radius is drawn around the small hash value . If the cluster center falls inside the circle then the image p may be deemed to be similar to the image p and the image p and the image p is associated with the cluster center . Conversely if the cluster center falls outside the circle then the image p may be deemed to be different from the image pand the image p and a new cluster center is created for image p.

Small hash values associated with additional images may be considered in a manner similar to that described above. For example a small hash value associated with yet another image p may fall into a bucket. The bucket constitutes the search space to search for similar images. All cluster centers associated with the bucket are identified. The distance between the small hash value and each identified cluster center is computed and compared against the threshold distance. If the computed distance for any identified cluster center is less than the threshold distance then the image p is associated with the identified cluster center with the smallest distance to the small hash value for image p e.g. the identified cluster center as shown in . Conversely if the computed distances for all identified cluster centers are greater than the threshold distance then a new cluster center is created for the image p. In effect a circle of the predetermined radius may be drawn around the small hash value. If a cluster center is found within the circle then the image p is associated with the cluster center and deemed similar to the images already associated with the cluster center. Conversely if no cluster center is found within the circle then a new cluster center is created based on the small hash value and the image p is deemed different from other images associated with other cluster centers. The consideration of yet further images in addition to the images p p p p may proceed in a similar fashion. In general any number of cluster centers may be associated with a given bucket.

In block all existing cluster centers that are associated with the bucket are identified. Existing cluster centers are those that have already been created for existing images. The search space for the new image is substantially reduced by considering only cluster centers that are associated with the bucket instead of all cluster centers associated with other buckets. In block a determination is then made whether there is any existing cluster center associated with the bucket. If the answer is No for block then the small hash value of the new image is the first small hash value to be projected onto the bucket. In block a new cluster center is then created for the new image and is given the coordinates of the small hash value. In block the new image is then associated with the new cluster center.

Conversely if there is at least one existing cluster center associated with the bucket and the answer is Yes for block then in block the distance between the small hash value and each existing cluster center associated with the bucket is determined. In block a determination is then made whether the distance from the small hash value to any existing cluster center is less than a threshold distance. If the answer is No for block then in block the new image is considered to be different from the images associated with the existing cluster centers that are associated with the bucket. In block a new cluster center is then created for the new image and in block the new image is associated with the new cluster center. Hence more than one cluster center may be created and associated with the bucket if the images are not deemed to be similar.

However if the distance from the small hash value to at least one existing cluster center is less than the threshold distance and the answer is Yes for block then in block an existing cluster center with the smallest distance to the small hash value of the new image is identified. Another existing cluster center with a distance of less than the threshold distance to the small hash value may also be selected. In any case in block the new image may be associated with the identified existing cluster center. In block the new image is considered to be similar to the images associated with the identified existing cluster center.

In an embodiment of the invention the process may be entirely or partially performed by the image similarity analysis module . In an embodiment of the invention the process may be performed at least in part by the social networking system .

The mapping in the 2 D coordinate system shows a graphical representation of the projection . The 2 D coordinate system includes an x axis that corresponds to the vector and a y axis that corresponds to the vector . The x axis is divided into units corresponding to the segments of vector . The y axis is also divided into units corresponding to the segments of vector . The segments of the vectors define buckets in the 2 D coordinate system. For example the segment of the vector and the segment of the vector define a bucket in the 2 D coordinate system. A small hash value associated with the image p falls within the bucket .

To search for images similar to the image p the space searching module may consider adjacent buckets not merely the bucket . In an embodiment of the invention the space searching module may determine adjacent buckets by first locating a vertex nearest to a small hash value associated with a new image. A vertex is a point in a d D coordinate system corresponding to the corner of a set of buckets. In an embodiment of the invention a small hash value of an image may be quantized and the quantized small hash value may be deemed as a vertex. Buckets that coincide with the vertex i.e. having a corner at the vertex may be deemed adjacent buckets. In general the number of adjacent buckets sharing a vertex is dependent on the number of dimensions d in the d D coordinate system. There are 2adjacent buckets sharing a vertex in the d D coordinate system.

In an embodiment of the invention the number of adjacent buckets is 8 in a 3 D coordinate system and the number of adjacent buckets is 4 in a 2 D coordinate system. In general any number of adjacent buckets may be searched for similar images. The number of adjacent buckets to search may be dependent on various factors such as the threshold distance used to identify similar images the sizes of the segments defining each bucket the desired probability of false negatives etc. For purposes of illustration the projections shown herein are simplified examples of locality sensitive hashing in two dimensions i.e. when dimension number d is selected to have a value of 2. Accordingly based on the simplified examples the number of adjacent buckets to search as shown herein is 4.

As shown in a vertex is nearest to the small hash value . From the perspective of the vertex buckets are then considered to be adjacent buckets with respect to the small hash value . A determination is made as to whether any cluster centers are associated with the buckets . By limiting the search for cluster centers to a limited number of buckets the space searching module optimizes the search process allowing the search to be conducted more rapidly and efficiently. Because no cluster centers are associated with the buckets the cluster center creation module creates a first new cluster center based on the small hash value . The image p is associated with the cluster center . In an embodiment of the invention the first cluster center is associated with the four adjacent buckets .

The mapping in the 2 D coordinate system shows a graphical representation of the projection . The small hashing module generates a small hash value based on the large hash value associated with the image p. The small hashing module determines that the small hash value falls within the bucket . To search for images similar to the image p the space searching module considers adjacent buckets not merely the bucket . As shown in the vertex is nearest to the small hash value . From the perspective of the vertex the buckets are then considered to be adjacent buckets with respect to the small hash value like the small hash value . The space searching module determines whether any cluster centers are associated with either any or all of the adjacent buckets . In an embodiment of the invention each cluster center associated with all four of the adjacent buckets for the small hash value is considered. In another embodiment each cluster center associated with any one of the four adjacent buckets for the small hash value is considered. Because the cluster center is associated with the buckets the proximity determination module further determines whether the cluster center is sufficiently close in Euclidean distance to the small hash value . The distance between the small hash value and the cluster center is computed and compared against a threshold distance by the proximity determination module . If the computed distance is less than the threshold distance which is the case in then the image p is deemed to be similar to the image p and the image p is associated with the cluster center . A new cluster center is not created for the image p as shown in . Conversely if the computed distance exceeds the threshold distance not shown in then the image p is deemed to be different from the image p and the cluster center creation module creates a new cluster center for the image p. In effect a circle having radius may be drawn around the small hash value . When the cluster center falls inside the circle the image p may be deemed to be similar to the image p and the image p is associated with the cluster center . When the cluster center falls outside the circle the image p may be deemed to be different from the image p and the cluster center creation module may create a new cluster center associated with the buckets .

The threshold distance may be any suitable value which may be selected based on the considerations described above in connection with . The threshold distance in is larger than the threshold distance in . In an embodiment of the invention the threshold distance to determine false positives may be different from the threshold distance to determine false negatives.

The mapping in the 2 D coordinate system shows a graphical representation of the projection . The small hashing module generates a small hash value based on the large hash value associated with the image p. The small hash value falls within the bucket . To search for images similar to the image p the space searching module considers adjacent buckets not merely the bucket . As shown in the vertex is nearest to the small hash value . From the perspective of the vertex the buckets are then considered to be adjacent buckets with respect to the small hash value like the small hash value and the small hash value . The space searching module determines whether any cluster centers are associated with for example either all or any of the buckets . Because the cluster center is associated with the buckets the proximity determination module further determines whether the cluster center is sufficiently close in Euclidean distance to the small hash value . The distance between the small hash value and the cluster center is computed and compared against the threshold distance by the proximity determination module . If the computed distance exceeds the threshold distance shown in then the image p is deemed to be different from the image p and the cluster center creation module creates a new cluster center for the image p as shown in . Conversely if the computed distance is less than the threshold distance which is not the case in then the image p is deemed to be similar to the image p and the image p is associated with the cluster center not shown in . In effect a circle having the radius may be drawn around the small hash value . When the cluster center falls inside the circle the image p may be deemed to be similar to the image p and the image p is associated with the cluster center . When the cluster center falls outside the circle the image p may be deemed to be different from the image p and the cluster center creation module creates the new cluster center associated with the buckets shown in .

The mapping in the 2 D coordinate system shows a graphical representation of the projection . The small hashing module generates a small hash value based on the large hash value associated with the image p. The small hash value falls within a bucket . To search for images similar to the image p the space searching module considers adjacent buckets not merely the bucket . As shown in a vertex is nearest to the small hash value . From the perspective of the vertex buckets are then considered to be adjacent buckets with respect to the small hash value .

The space searching module determines whether any cluster centers are associated with for example either all or any of the buckets . Because the cluster center and the cluster center are associated with the buckets the proximity determination module further determines whether any of the cluster center and the cluster center is sufficiently close in Euclidean distance to the small hash value . The distance between the small hash value and each of the cluster centers and is computed and compared against the threshold distance by the proximity determination module . If either computed distance is less than the threshold distance which is the case in then the small hash value is associated with the closest cluster center and the image p is deemed to be similar to the image p associated with the cluster center as shown in . Conversely if the computed distances for all cluster centers exceed the threshold distance not shown in then the image p is deemed to be different from the images of these cluster centers and the cluster center creation module creates a new cluster center for the image p. In effect a circle having the radius may be drawn around the small hash value . If the cluster center or the cluster center falls inside the circle the image p may be deemed to be similar to the image p or the image p respectively and the image p is associated with the closer of the cluster center or the cluster center respectively. If the cluster center and the cluster center fall outside the circle the image p may be deemed different from the image p and the image p respectively and the cluster center creation module creates a new cluster center for the new image p associated with the buckets .

In another embodiment of the invention a cluster center may be associated with a single bucket instead of a group of adjacent buckets. To search for images similar to a new image a vertex that is closest to a small hash value for the new image may be determined by the space searching module . All adjacent buckets sharing this vertex may be identified and all cluster centers associated with these adjacent buckets may be identified. A determination may then be made by the proximity determination module whether the small hash value for the new image is sufficiently close to e.g. within the threshold distance of any of the identified cluster centers.

Small hash values associated with additional images may be considered in a manner similar to that described above. For example a small hash value associated with yet another image p may fall into a bucket. The vertex nearest to the small hash value may be identified and adjacent buckets may be identified. The adjacent buckets constitute the search space for similar images. All cluster centers associated with the adjacent buckets may be identified. The distance between the small hash value and each identified cluster center may be computed and compared against the threshold distance. If the computed distance for any identified cluster center is less than the threshold distance then the image p may be associated with the identified cluster center e.g. the identified cluster center with the smallest distance to the small hash value for the image p . Conversely if the computed distances for all identified cluster centers are greater than the threshold distance then a new cluster center may be created for the image p. In effect a circle of a suitable radius may be drawn around the small hash value. If a cluster center is found within the circle even if the cluster center is found in a different bucket the image p is associated with the cluster center and deemed similar to the images already associated with the cluster center. If no cluster center is found within the circle a new cluster center is created based on the small hash value and the image p is deemed different from other images associated with other cluster centers. The consideration of yet further images in addition to the images p p p p p may proceed in a similar fashion.

In the embodiments described above adjacent buckets are defined to include only buckets sharing a common vertex. In this embodiment only one layer of buckets surrounding the vertex is considered. Adjacent buckets may also be defined in other manners. For example adjacent buckets may be defined to include two layers of buckets surrounding a vertex that is closest to a small hash value. In this embodiment the adjacent buckets may include inner buckets sharing the same vertex as the small hash value as well as outer buckets sharing a vertex with any of the inner buckets. In general the probability of false negatives may be reduced by considering more adjacent buckets at the expense of increasing the search space and related computations.

In block buckets that are close to the small hash value may be identified based on the vertex. The identified buckets may be those that are adjacent to the small hash value and having the vertex determined in block as one of their vertices. The buckets that are close to the small hash value may also be identified in other manners. In any case in block all existing cluster centers that are associated with the identified buckets are identified. The search space for the new image is substantially reduced by considering only cluster centers that are associated with the buckets that are close to the small hash value instead of all cluster centers associated with all buckets. In block a determination is then made whether there is any existing cluster center associated with any of the identified buckets. If the answer is No for block then the small hash value of the new image is the first small hash value to be projected onto one of the identified buckets. In block a new cluster center is then created for the new image and is given the coordinates of the small hash value. In block the new image is then associated with the new cluster center.

Conversely if there is at least one existing cluster center associated with the identified buckets and the answer is Yes for block then in block the distance between the small hash value and each existing cluster center associated with any identified bucket is determined. In block a determination is then made whether the distance from the small hash value to any existing cluster center is less than a threshold distance. If the answer is No for block then in block the new image is considered to be different from the images associated with the existing cluster centers. In block a new cluster center is then created for the new image and in block the new image is associated with the new cluster center.

However if the distance from the small hash value to at least one existing cluster center is less than the threshold distance and the answer is Yes for block then in block an existing cluster center with the smallest distance to the small hash value of the new image is identified. Another existing cluster center with a distance of less than the threshold distance to the small hash value may also be selected. In any case in block the new image may be associated with the identified existing cluster center. In block the new image is considered to be similar to the images associated with the identified existing cluster center.

In an embodiment of the invention the process may be entirely or partially performed by the image similarity analysis module . In an embodiment of the invention the process may be performed at least in part by the social networking system .

In various embodiments the preceding figures and their related discussion herein have described the use of a small hash value of a large hash value of an image to identify relevant buckets as well as to create a cluster center or to compare with an existing cluster center associated with the identified buckets. In another embodiment once the relevant buckets are identified with the small hash value the large hash value instead of the small hash value may be used to create a cluster center or to compare with an existing cluster center associated with the identified buckets. For example with respect to determination of false positives a large hash value may be determined for a new image. The large hash value may be determined using for example a content aware large hashing function. A small hash value then may be determined for the new image based on the large hash value. The small hash value may be determined using for example a locality sensitive hashing function. The hashing function for the small hash value effectively may project the large hash value onto d vectors in a d D coordinate system. The small hash value may comprise d values for the d vectors that define the d D coordinate system. A bucket in the d D coordinate system within which the small hash value falls is determined.

All existing cluster centers that are associated with the bucket may be identified. Existing cluster centers are those that have already been created for existing images. The search space for the new image is substantially reduced by considering only cluster centers that are associated with the bucket instead of all cluster centers associated with other buckets. A determination may be made as to whether there is any existing cluster center associated with the bucket. If not then the large hash value of the new image is the first large hash value to be projected onto the bucket. A new cluster center then may be created for the new image and is given the coordinates of the large hash value. The new image then may be associated with the new cluster center.

Conversely if there is at least one existing cluster center associated with the bucket then the distance between the large hash value and each existing cluster center associated with the bucket is determined. A determination is then made whether the distance from the large hash value to any existing cluster center is less than a threshold distance. If not then the new image may be considered to be different from the images associated with the existing cluster centers that are associated with the bucket. A new cluster center then may be created for the new image and the new image is associated with the new cluster center. Hence more than one cluster center may be created and associated with the bucket if the images are not deemed to be similar.

However if the distance from the large hash value to at least one existing cluster center is less than the threshold distance then an existing cluster center with the smallest distance to the large hash value of the new image may be identified. Another existing cluster center with a distance of less than the threshold distance to the large hash value may also be selected. In any case the new image may be associated with the identified existing cluster center. The new image is considered to be similar to the images associated with the identified existing cluster center.

As another example with respect to determination of false negatives a large hash value of a new image may be determined. The large hash value may be determined using for example a content aware large hashing function. A small hash value then may be determined from the large hash value of the new image. The small hash value may be determined by using for example a locality sensitive hashing function. A vertex of a d D coordinate system that is nearest to the small hash is determined. The nearest vertex may be determined by i quantizing the d values of the small hash value and ii identifying the vertex in the d D coordinate system defined by the d quantized values.

Buckets that are close to the small hash value may be identified based on the vertex. The identified buckets may be those that are adjacent to the small hash value and having the vertex determined before as one of their vertices. The buckets that are close to the small hash value may also be identified in other manners. In any case all existing cluster centers that are associated with the identified buckets may be identified. The search space for the new image is substantially reduced by considering only cluster centers that are associated with the buckets that are close to the small hash value instead of all cluster centers associated with all buckets. A determination is then made whether there is any existing cluster center associated with any of the identified buckets. If not then the large hash value of the new image is the first large hash value to be projected onto one of the identified buckets. A new cluster center then may be created for the new image and is given the coordinates of the large hash value. The new image is then associated with the new cluster center.

Conversely if there is at least one existing cluster center associated with the identified buckets then the distance between the large hash value and each existing cluster center associated with any identified bucket may be determined. A determination then may be made whether the distance from the large hash value to any existing cluster center is less than a threshold distance. If not then the new image is considered to be different from the images associated with the existing cluster centers. A new cluster center then may be created for the new image and the new image is associated with the new cluster center.

However if the distance from the large hash value to at least one existing cluster center is less than the threshold distance then an existing cluster center with the smallest distance to the large hash value of the new image is identified. Another existing cluster center with a distance of less than the threshold distance to the large hash value may also be selected. In any case the new image may be associated with the identified existing cluster center. The new image is considered to be similar to the images associated with the identified existing cluster center.

Association of images with cluster centers facilitates administrative action that may be taken by the social networking system on similar images. The administration action module in may be programmed to perform takedown and blocking functions with respect to similar images. Takedown or blocking functions may be performed when for example an image is deemed undesirable or otherwise deemed inappropriate in a particular circumstance and all similar images should be taken down or blocked from the social networking system . The functions may be performed by following or crawling the path of associations between cluster centers and their corresponding similar images.

In a cluster center is mutually i.e. two way associated with images p p . A cluster center is mutually i.e. two way associated with image p . illustrates a takedown function performed by the administrative action module in accordance with an embodiment of the invention. If for example the image p is deemed inappropriate the cluster center associated with the image p may be identified by following the path of their association from the image p to the cluster center . Then the image p associated with the cluster center may be identified by following the path of their association from the cluster center to the image p . In a similar manner all images that are similar to the image p and associated with the cluster center like the image p can be identified. Thus once the cluster center is identified administrative action can follow the path of all associations from the cluster center to all associated images e.g. the images p p to take down the images from the social networking system .

In an embodiment of the invention the administration action module may perform other functions. For example if the social networking system permits the posting of similar images a message may be delivered or action may be taken with respect to users that have posted or will post similar images. The cluster center corresponding to an image of interest may be identified by following the path of their association from the image of interest to the associated cluster center. Then all images similar to the image of interest can be identified by following the path of their associations from the cluster center. Then users of the social networking system who are associated with the similar images can be identified by following the path of their associations from each of the similar images to the associated users. Once the users are identified messages may be delivered to them or action may be taken as to them.

In an embodiment of the invention the process may be entirely or partially performed by the image similarity analysis module . In an embodiment of the invention the process may be performed at least in part by the social networking system .

The foregoing processes and features can be implemented by a wide variety of machine and computer system architectures and in a wide variety of network and computing environments. illustrates an example of a computer system that may be used to implement one or more of the computing devices identified above. The computer system includes sets of instructions for causing the computer system to perform the processes and features discussed herein. The computer system may be connected e.g. networked to other machines. In a networked deployment the computer system may operate in the capacity of a server machine or a client machine in a client server network environment or as a peer machine in a peer to peer or distributed network environment. In an embodiment of the invention the computer system may be the social networking system the user device and the external system or a component thereof. In an embodiment of the invention the computer system may be one server among many that constitutes all or part of the social networking system .

The computer system includes a processor a cache memory and one or more executable modules and drivers stored on a computer readable medium directed to the processes and features described herein. Additionally the computer system includes a high performance input output I O bus and a standard I O bus . A host bridge couples processor to high performance I O bus whereas I O bus bridge couples the two buses and to each other. A system memory and one or more network communication interfaces couple to bus . The computer system may further include video memory and a display device coupled to the video memory not shown . Mass storage and I O ports couple to the bus . The computer system may optionally include a keyboard and pointing device a display device or other input output devices not shown coupled to the bus . Collectively these elements are intended to represent a broad category of computer hardware systems including but not limited to computer systems based on the x86 compatible processors manufactured by Intel Corporation of Santa Clara Calif. and the x86 compatible processors manufactured by Advanced Micro Devices AMD Inc. of Sunnyvale Calif. as well as any other suitable processor.

An operating system manages and controls the operation of the computer system including the input and output of data to and from software applications not shown . The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. Any suitable operating system may be used such as the LINUX Operating System the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems Microsoft Windows operating systems BSD operating systems and the like. Other implementations are possible.

The elements of the computer system are described in greater detail below. In particular the network interface provides communication between the computer system and any of a wide range of networks such as an Ethernet e.g. IEEE 802.3 network a backplane etc. The mass storage provides permanent storage for the data and programming instructions to perform the above described processes and features implemented by the respective computing systems identified above whereas the system memory e.g. DRAM provides temporary storage for the data and programming instructions when executed by the processor . The I O ports may be one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may be coupled to the computer system .

The computer system may include a variety of system architectures and various components of the computer system may be rearranged. For example the cache may be on chip with processor . Alternatively the cache and the processor may be packed together as a processor module with processor being referred to as the processor core. Furthermore certain embodiments of the invention may neither require nor include all of the above components. For example peripheral devices coupled to the standard I O bus may couple to the high performance I O bus . In addition in some embodiments only a single bus may exist with the components of the computer system being coupled to the single bus. Furthermore the computer system may include additional components such as additional processors storage devices or memories.

In general the processes and features described herein may be implemented as part of an operating system or a specific application component program object module or series of instructions referred to as programs. For example one or more programs may be used to execute specific processes described herein. The programs typically comprise one or more instructions in various memory and storage devices in the computer system that when read and executed by one or more processors cause the computer system to perform operations to execute the processes and features described herein. The processes and features described herein may be implemented in software firmware hardware e.g. an application specific integrated circuit or any combination thereof.

In one implementation the processes and features described herein are implemented as a series of executable modules run by the computer system individually or collectively in a distributed computing environment. The foregoing modules may be realized by hardware executable modules stored on a computer readable medium or machine readable medium or a combination of both. For example the modules may comprise a plurality or series of instructions to be executed by a processor in a hardware system such as the processor . Initially the series of instructions may be stored on a storage device such as the mass storage . However the series of instructions can be stored on any suitable computer readable storage medium. Furthermore the series of instructions need not be stored locally and could be received from a remote storage device such as a server on a network via the network communications interface . The instructions are copied from the storage device such as the mass storage into the memory and then accessed and executed by processor .

Examples of computer readable media include but are not limited to recordable type media such as volatile and non volatile memory devices solid state memories floppy and other removable disks hard disk drives magnetic media optical disks e.g. Compact Disk Read Only Memory CD ROMS Digital Versatile Disks DVDs other similar non transitory or transitory tangible or non tangible storage medium or any type of medium suitable for storing encoding or carrying a series of instructions for execution by the computer system to perform any one or more of the processes and features described herein.

For purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the description. It will be apparent however to one skilled in the art that embodiments of the disclosure can be practiced without these specific details. In some instances modules structures processes features and devices are shown in block diagram form in order to avoid obscuring the description. In other instances functional block diagrams and flow diagrams are shown to represent data and logic flows. The components of block diagrams and flow diagrams e.g. modules blocks structures devices features etc. may be variously combined separated removed reordered and replaced in a manner other than as expressly described and depicted herein.

Reference in this specification to one embodiment an embodiment other embodiments or the like means that a particular feature design structure or characteristic described in connection with the embodiment is included in at least one embodiment of the disclosure. The appearances of for example the phrase in one embodiment or in an embodiment in various places in the specification are not necessarily all referring to the same embodiment nor are separate or alternative embodiments mutually exclusive of other embodiments. Moreover whether or not there is express reference to an embodiment or the like various features are described which may be variously combined and included in some embodiments but also variously omitted in other embodiments. Similarly various features are described that may be preferences or requirements for some embodiments but not other embodiments.

The language used herein has been principally selected for readability and instructional purposes and it may not have been selected to delineate or circumscribe the inventive subject matter. It is therefore intended that the scope of the invention be limited not by this detailed description but rather by any claims that issue on an application based hereon. Accordingly the disclosure of the embodiments of the invention is intended to be illustrative but not limiting of the scope of the invention which is set forth in the following claims.

