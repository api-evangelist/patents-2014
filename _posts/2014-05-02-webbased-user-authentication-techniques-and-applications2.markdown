---

title: Web-based user authentication techniques and applications
abstract: A system, apparatus, method, and machine readable medium are described for performing user authentication. For example, one embodiment of a system comprises: media capture logic implemented as a component within a browser executed on a client, the media capture logic configured to capture a user's voice from a microphone on a client or images of the user's face or other portion of the user's body from a camera on the client, the media capture logic exposing an application programming interface (API); and a web authentication application implemented as another component within the browser for communicating with an authentication server to perform biometric authentication of a user, the web authentication application making calls to the API of the media capture logic to capture raw biometric data comprising the user's voice from the microphone and/or images of the user's face or other portion of the user's body from the camera, the web authentication application to implement a biometric authentication process to authenticate the user with the raw biometric data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09654469&OS=09654469&RS=09654469
owner: Nok Nok Labs, Inc.
number: 09654469
owner_city: Palo Alto
owner_country: US
publication_date: 20140502
---
This invention relates generally to the field of data processing systems. More particularly the invention relates to an apparatus and method for Web based user authentication techniques and associated applications.

Systems have also been designed for providing secure user authentication over a network using biometric sensors. In such systems the score generated by an authenticator and or other authentication data may be sent over a network to authenticate the user with a remote server. For example Patent Application No. 2011 0082801 801 Application describes a framework for user registration and authentication on a network which provides strong authentication e.g. protection against identity theft and phishing secure transactions e.g. protection against malware in the browser and man in the middle attacks for transactions and enrollment management of client authentication tokens e.g. fingerprint readers facial recognition devices smartcards trusted platform modules etc .

The assignee of the present application has developed a variety of improvements to the authentication framework described in the 801 application. Some of these improvements are described in the following set of US Patent Applications Co pending Applications which are assigned to the present assignee Ser. No. 13 730 761 Query System and Method to Determine Authentication Capabilities Ser. No. 13 730 776 System and Method for Efficiently Enrolling Registering and Authenticating With Multiple Authentication Devices Ser. No. 13 730 780 System and Method for Processing Random Challenges Within an Authentication Framework Ser. No. 13 730 791 System and Method for Implementing Privacy Classes Within an Authentication Framework Ser. No. 13 730 795 System and Method for Implementing Transaction Signaling Within an Authentication Framework and Ser. No. 14 218 504 Advanced Authentication Techniques and Applications hereinafter 504 Application .

Briefly the Co Pending Applications describe authentication techniques in which a user enrolls with authentication devices or Authenticators such as biometric devices e.g. fingerprint sensors on a client device. When a user enrolls with a biometric device biometric reference data is captured by the biometric sensor of the authentication device e.g. by swiping a finger snapping a picture recording a voice etc . The user may subsequently register the authentication devices with one or more servers over a network e.g. Websites or other relying parties equipped with secure transaction services as described in the Co Pending Applications and subsequently authenticate with those servers using data exchanged during the registration process e.g. cryptogtaphic keys provisioned into the authentication devices . Once authenticated the user is permitted to perform one or more online transactions with a Website or other relying party. In the framework described in the Co Pending Applications sensitive information such as fingerprint data and other data which can be used to uniquely identify the user may be retained locally on the user s authentication device to protect a user s privacy. The 504 Application describes a variety of additional techniques including techniques for designing composite authenticators intelligently generating authentication assurance levels using non intrusive user verification transferring authentication data to new authentication devices augmenting authentication data with client risk data and adaptively applying authentication policies and creating trust circles to name just a few.

The World Wide Web Consortium has specified a new set of Javascript Application Programming Interfaces APIs that allows local media including audio and video to be requested from a platform. See e.g. World Wide Web Consortium W3C Working Draft Media Capture and Streams 2013 . Modern browsers such as Chrome 21 Opera 18 Firefox 17 and their successors supporting these APIs can capture audio and video from a local device such as a video camera or microphone.

Described below are embodiments of an apparatus method and machine readable medium for implementing advanced authentication techniques and associated applications. Throughout the description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances well known structures and devices are not shown or are shown in a block diagram form to avoid obscuring the underlying principles of the present invention.

The embodiments of the invention discussed below involve authentication devices with user verification capabilities such as biometric modalities or PIN entry. These devices are sometimes referred to herein as tokens authentication devices or authenticators. While certain embodiments focus on facial recognition hardware software e.g. a camera and associated software for recognizing a user s face and tracking a user s eye movement some embodiments may utilize additional biometric devices including for example fingerprint sensors voice recognition hardware software e.g. a microphone and associated software for recognizing a user s voice and optical recognition capabilities e.g. an optical scanner and associated software for scanning the retina of a user . The user verification capabilities may also include non biometric modalities like PIN entry. The authenticators might use devices like trusted platform modules TPMs smartcards and secure elements for cryptographic operations and key storage.

In a mobile biometric implementation the biometric device may be remote from the relying party. As used herein the term remote means that the biometric sensor is not part of the security boundary of the computer it is communicatively coupled to e.g. it is not embedded into the same physical enclosure as the relying party computer . By way of example the biometric device may be coupled to the relying party via a network e.g. the Internet a wireless network link etc or via a peripheral input such as a USB port. Under these conditions there may be no way for the relying party to know if the device is one which is authorized by the relying party e.g. one which provides an acceptable level of authentication strength and integrity protection and or whether a hacker has compromised or even replaced the biometric device. Confidence in the biometric device depends on the particular implementation of the device.

The term local is used herein to refer to the fact that the user is completing a transaction in person at a particular location such as at an automatic teller machine ATM or a point of sale POS retail checkout location. However as discussed below the authentication techniques employed to authenticate the user may involve non location components such as communication over a network with remote servers and or other data processing devices. Moreover while specific embodiments are described herein such as an ATM and retail location it should be noted that the underlying principles of the invention may be implemented within the context of any system in which a transaction is initiated locally by an end user.

The term relying party is sometimes used herein to refer not merely to the entity with which a user transaction is attempted e.g. a Website or online service performing user transactions but also to the secure transaction servers implemented on behalf of that entity which may performed the underlying authentication techniques described herein. The secure transaction servers may be owned and or under the control of the relying party or may be under the control of a third party offering secure transaction services to the relying party as part of a business arrangement.

The term server is used herein to refer to software executed on a hardware platform or across multiple hardware platforms that receives requests over a network from a client responsively performs one or more operations and transmits a response to the client typically including the results of the operations. The server responds to client requests to provide or help to provide a network service to the clients. Significantly a server is not limited to a single computer e.g. a single hardware device for executing the server software and may in fact be spread across multiple hardware platforms potentially at multiple geographical locations.

Turning first to the illustrated embodiment includes a client equipped with one or more authentication devices sometimes referred to in the art as authentication tokens or Authenticators for enrolling and verifying an end user. As mentioned above the authentication devices may include biometric device such as fingerprint sensors voice recognition hardware software e.g. a microphone and associated software for recognizing a user s voice facial recognition hardware software e.g. a camera and associated software for recognizing a user s face and optical recognition capabilities e.g. an optical scanner and associated software for scanning the retina of a user and support for non biometric modalities such as PIN verification. The authentication devices might use trusted platform modules TPMs smartcards or secure elements for cryptographic operations and key storage.

The authentication devices are communicatively coupled to the client through an interface e.g. an application programming interface or API exposed by a secure transaction service . The secure transaction service is a secure application for communicating with one or more secure transaction servers over a network and for interfacing with a secure transaction plugin executed within the context of a web browser . As illustrated the Interface may also provide secure access to a secure storage device on the client which stores information related to each of the authentication devices such as a device identification code user identification code user enrollment data e.g. scanned fingerprint or other biometric data protected by he authentication device and keys wrapped by the authentication device used to perform the secure authentication techniques described herein. For example as discussed in detail below a unique key may be stored into each of the authentication devices and used when communicating to servers over a network such as the Internet.

As discussed below certain types of network transactions are supported by the secure transaction plugin such as HTTP or HTTPS transactions with websites or other servers. In one embodiment the secure transaction plugin is initiated in response to specific HTML tags inserted into the HTML code of a web page by the web server within the secure enterprise or Web destination sometimes simply referred to below as server . In response to detecting such a tag the secure transaction plugin may forward transactions to the secure transaction service for processing. In addition for certain types of transactions e.g. such as secure key exchange the secure transaction service may open a direct communication channel with the on premises transaction server i.e. co located with the website or with an off premises transaction server .

The secure transaction servers are coupled to a secure transaction database for storing user data authentication device data keys and other secure information needed to support the secure authentication transactions described below. It should be noted however that the underlying principles of the invention do not require the separation of logical components within the secure enterprise or web destination shown in . For example the website and the secure transaction servers may be implemented within a single physical server or separate physical servers. Moreover the website and transaction servers may be implemented within an integrated software module executed on one or more servers for performing the functions described below.

As mentioned above the underlying principles of the invention are not limited to a browser based architecture shown in . illustrates an alternate implementation in which a stand alone application utilizes the functionality provided by the secure transaction service to authenticate a user over a network. In one embodiment the application is designed to establish communication sessions with one or more network services which rely on the secure transaction servers for performing the user client authentication techniques described in detail below.

In either of the embodiments shown in the secure transaction servers may generate the keys which are then securely transmitted to the secure transaction service and stored into the authentication devices within the secure storage . Additionally the secure transaction servers manage the secure transaction database on the server side.

In one embodiment of the invention strong authentication between a client and an authentication service is carried over different channels e.g. to different relying parties . As such certain basic principles associated with registering and authenticating with an authentication service will be described with respect to followed by a detailed description of embodiments of the invention for carrying strong authentication over different channels.

A secure key provisioning protocol such as the Dynamic Symmetric Key Provisioning Protocol DSKPP may be used to share the key with the client over a secure communication channel see e.g. Request for Comments RFC 6063 . However the underlying principles of the invention are not limited to any particular key provisioning protocol.

Turning to the specific details shown in once the user enrollment or user verification is complete the server generates a randomly generated challenge e.g. a cryptographic nonce that must be presented by the client during device registration. The random challenge may be valid for a limited period of time. The secure transaction plugin detects the random challenge and forwards it to the secure transaction service . In response the secure transaction service initiates an out of band session with the server e.g. an out of band transaction and communicates with the server using the key provisioning protocol. The server locates the user with the user name validates the random challenge validates the device s authentication code if one was sent and creates a new entry in the secure transaction database for the user. It may also generate the key write the key to the database and send the key back to the secure transaction service using the key provisioning protocol. Once complete the authentication device and the server share the same key if a symmetric key was used or different keys if asymmetric keys were used.

Turning to the specific details shown in which shows a browser based implementation the user enters the uniform resource locator URL of the server in the browser . In an implementation which uses a stand alone application or mobile device app rather than a browser the user may enter a network address for a network service or the application or app may automatically attempt to connect to the network service at the network address.

For a browser based implementation the website embeds a query for registered devices in the HTML page. This may be done in many ways other than embedding the query in an HTML page such as through Javascript or using HTTP headers. The secure transaction plugin receives the URL and sends it to secure transaction service which searches the looks into the secure storage which as discussed includes a database of authentication device and user information and determines whether there is a user enrolled within this URL. If so the secure transaction service sends a list of provisioned devices associated with this URL to the secure transaction plugin . The secure transaction plugin then calls the registered JavaScript API and passes this information to the server e.g. the website . The server chooses the appropriate device from the sent device list generates a random challenge and sends the device information and argument back to the client. The website displays the corresponding user interface and asks for authentication from the user. The user then provides the requested authentication measure e.g. swiping a finger across the fingerprint reader speaking for voice recognition etc . The secure transaction service identifies the user this step can be skipped for devices which don t support storing users obtains the username from the database generates an authentication token using the key and sends this information to the website via the secure transaction plugin. The server identifies the user from the secure transaction database and verifies the token by generating the same token on the server e.g. using its copy of the key . Once verified the authentication process is complete.

At the user enters a particular website URL into the browser and is directed to the web server within the enterprise web destination servers which includes the secure transaction servers . At a query is sent back to the secure transaction service via the browser and plugin to determine which device s are registered with the website s URL. The secure transaction service queries the secure storage on the client to identify a list of devices which are sent back to the server at . At the server chooses a device to use for authentication generates a random challenge and a timeout indication and at sends this information back to the secure transaction service .

At the secure transaction service automatically detects that the random challenge is no longer valid upon reaching the end of the timeout period. Various different techniques may be employed for indicating and detecting the end of the timeout period. In one embodiment the timeout period comprises a period of time for which the random challenge is considered valid. After the timeout period has elapsed the random challenge is no longer considered valid by the server . In one embodiment the timeout period is specified simply as a point in time at which the random challenge will no longer be valid. Once this point in time is reached the random challenge is invalid. In another embodiment the timeout period is specified by using a current timestamp i.e. the time at which the random challenge is generated by the server and a duration. The secure transaction service may then calculate the timeout time by adding the duration value to the timestamp to calculate the point in time when the random challenge becomes invalid. It should be noted however that the underlying principles of the invention are not limited to any specific technique for calculating the timeout period.

Upon detecting the expiration of the random challenge at the secure transaction service transparently i.e. without user intervention notifies the server and requests a new random challenge. In response at the server generates a new random challenge and a new indication of the timeout period. As mentioned the new timeout period may be the same as previously sent to the client or may be modified. In either case at the new random challenge and timeout indication are sent to the secure transaction service .

The remainder of the transaction diagram shown in operates in substantially the same manner as described above see e.g. . For example at an authentication user interface is displayed e.g. directing the user to swipe a finger on a fingerprint sensor and at the user provides authentication e.g. swipes a finger on the fingerprint scanner . At the secure transaction service verifies the identity of the user e.g. comparing the authentication data collected from the user with that stored in the secure storage and uses the key associated with the authentication device to encrypt the random challenge. At the user name or other ID code and the encrypted random challenge are sent to the server . Finally at the server identifies the user within the secure transaction database using the user name or other ID code and decrypts verifies the random challenge using the key stored in the secure transaction database to complete the authentication process.

The particular implementation shown in includes a secure transaction plugin for establishing communication with the secure enterprise or Web destination sometimes referred to simply as server or relying party using techniques previously discussed. For example the secure transaction plugin may identify a specific HTML tag inserted into the HTML code by a web server . Thus in this embodiment the server policy is provided to the secure transaction plugin which forwards it to the secure transaction service implementing the policy filter .

The policy filter may determine the client authentication capabilities by reading the capabilities from the client s secure storage area . As previously discussed the secure storage may comprise a repository of all of the client s authentication capabilities e.g. identification codes for all of the authentication devices . If the user has already enrolled the user with its authentication devices the user s enrollment data is stored within the secure storage . If the client has already registered an authentication device with a server then the secure storage may also store an encrypted secret key associated with each authentication device.

Using the authentication data extracted from the secure storage and the policy provided by the server the policy filter may then identify a subset of authentication capabilities to be used. Depending on the configuration the policy filter may identify a complete list of authentication capabilities supported by both the client and the server or may identify a subset of the complete list. For example if the server supports authentication capabilities A B C D and E and the client has authentication capabilities A B C F and G then the policy filter may identify the entire subset of common authentication capabilities to the server A B and C. Alternatively if a higher level of privacy is desired as indicated by user preferences in then a more limited subset of authentication capabilities may be identified to the server. For example the user may indicate that only a single common authentication capability should be identified to the server e.g. one of A B or C . In one embodiment the user may establish a prioritization scheme for all of the authentication capabilities of the client and the policy filter may select the highest priority authentication capability or a prioritized set of N authentication capabilities common to both the server and the client.

Depending on what operation has been initiated by server Registration or Authentication the secure transaction service performs that operation on the filtered subset of authentication devices and sends the operation response back to server via the secure transaction plugin as shown in . Alternatively in an embodiment which does not rely on a plugin component of a Web browser the information may be passed directly from the secure transaction service to the server .

In one embodiment of the invention browsers that allow local media e.g. audio and video to be requested from a computing platform are used to support voice and video capture for user registration and authentication. For example in one embodiment the browser media capture and stream API is used to capture audio and video during registration and authentication with a remote server e.g. such as the relying party s secure transaction servers described above . This capability allows web applications to implement user authentication via biometric matching without the need for additional client software including browser extensions . For example user authentication via voice face matching may be performed directly from web applications running in the browser. In some embodiments described below it is assumed that the user has already created an account with the relying party which has a unique identifier such as user name.

As illustrated the media capture logic may interface with a microphone for capturing audio and with a camera for capturing video. The medial capture logic may access the microphone and camera via the device drivers configured on the client for these devices. In one embodiment the media capture logic comprises the Javascript Media Capture and Streams API see World Wide Web Consortium W3C Working Draft Media Capture and Streams 2013 . However the underlying principles of the invention are not limited to any particular type of program code or API implementation.

In the embodiments described below the user registers and authenticates remotely with a relying party having a website and one or more authentication servers . For registration the user initially logs in his her account at the website from the browser . The browser and the authentication server may then establish a secure communication channel using a protocol such as secure sockets layer SSL or transport layer security TLS although the underlying principles of the invention are not limited to any particular secure communication protocol .

In one embodiment the web application running in the browser then prompts the user to enroll his her voice face body part biometric. For voice this process may record the user s speech of certain words or phrases using the microphone and provide the raw voice data to the web authentication application via the media capture logic API e.g. with the web authentication application making a call to the API to gather the voice data . For facial recognition authentication this may involve taking a snapshot of the user s face with the camera and providing the raw image data to the web authentication application via the media capture logic API e.g. with the web authentication application making a call to the API to gather the image . For other body parts this may involve capturing an image of the user s hand shape tip of a finger for fingerprint recognition ear shape iris pattern or any other image which may be used for authentication purposes i.e. for which a biometric matching algorithm may be employed .

In one embodiment the web application sends the raw biometric data to the authentication server . A feature extraction module on the authentication server extracts specified characteristics of the raw biometric data e.g. focusing on certain regions of the user s face or other body part certain characteristics of the user s voice etc to generate biometric reference data that will be used for future authentication. For example the feature extraction module may extract certain spectral features of the user s voice and or certain geometric or photometric characteristics of the image of the user s face or other body part to generate the biometric reference data . In one embodiment the biometric reference data is stored in a database and associated with the user s account at the relying party .

Once the biometric reference data is stored the following operations may be used for authentication. The browser and authentication server establish a secure communication channel e.g. via SSL TLS or other security protocol and the user provides a user ID or other identification code in the web authentication application . The web authentication application may then prompt the user to authenticate using his her voice face or other portion of the user s body. For example the user may be prompted to speak one or more words via the microphone or to capture a facial body part image via the camera . The media capture logic may the provide the voice recording or image to the web authentication application .

The web authentication application sends the user s identifier and the captured raw biometric data to the authentication server . In one embodiment the authentication server queries for the stored biometric reference data with the user s identifier. Matcher logic compares the biometric reference data with certain features of the raw biometric data extracted by the feature extraction logic and generates an authentication result. In one embodiment the feature extraction module is configured to extract the same features as those extracted during the registration process e.g. spectral characteristics of the user s voice geometric or photometric characteristics of the user s image etc . The underlying principles of the invention are not limited to any particular set of extracted features. Any set of features which are useful for performing voice recognition face recognition or recognition of any portion of the user s body may be used.

In one embodiment the authentication result comprises a score based on the similarity between the extracted features and the biometric reference data . The authentication server may then use the score to determine whether the authentication was successful e.g. if the score is above a certain specified threshold .

At the user logs into a website of the relying party from a browser and establishes a secure communication channel with a server of the relying party. At a Web application running in the browser prompts the user to enroll and register a new face body part or voice biometric. At the user s voice is sampled from a microphone and or a picture of the user s face or other body part is captured with a camera on the client. As mentioned in one embodiment the voice video is captured using built in media capture logic within the browser context. At the server receives and converts the raw biometric data to generate biometric reference data. For example certain characteristics of the user s voice may be extracted from the raw voice data and or certain characteristics of the user s face or other body part may be extracted from the raw video image s . The resulting biometric reference data may be associated with the user s account and saved in a database from which it may subsequently be accessed during authentication . At the registration process is complete.

Turning to the authentication method of at the user attempts to enter into a transaction requiring authentication and in response the browser and the authentication server establish a secure communication channel e.g. via SSL TLS . At the user enters his her identifier in the web application running in the browser and at the web application prompts the user to authenticate using his her voice face body part e.g. recording the user s speech of certain words phrases and or taking a snapshot of the user s face or other body part . At the biometric data is captured via the browser. As mentioned above to capture the user s voice face body part biometric one embodiment of the invention initiates a call to the dedicated media capture logic built into the browser e.g. the web application calls the Javascript Media Capture and Streams API .

At the web application sends the user s identifier and the captured raw biometric data to the server. At the server identifies the stored biometric reference data based on the user s identifier and performs biometric matching based on extracted characteristics of the raw biometric data e.g. characteristics of the raw voice video data . If a match is detected determined at then the transaction is permitted at if not then the transaction is denied at and or additional authentication techniques are requested. As mentioned a match may be determined by calculating a score based on the correlation between the characteristics extracted from the raw biometric data and the biometric reference data and determining whether the score is above a specified threshold.

As in the web authentication application captures raw audio e.g. the user s voice and video e.g. snapshots of the user s face or other portion of the user s body via an API exposed by the media capture logic configured in the browser e.g. to capture the biometric reference data during registration and to authenticate the user using voice face and or body part recognition . As illustrated the media capture logic may interface with a microphone for capturing audio and with a camera for capturing video. The medial capture logic may access the microphone and camera via the device drivers configured on the client for these devices. In one embodiment the media capture logic comprises the Javascript Media Capture and Streams API see World Wide Web Consortium W3C Working Draft Media Capture and Streams 2013 . However the underlying principles of the invention are not limited to any particular type of program code or API implementation.

In operation the user logs in to his her account on a relying party website from the browser e.g. using a user name password . The browser then establishes a secure communication channel e.g. via SSL TLS with an authentication server and if not already registered receives a registration request from the authentication server . The web authentication application may process the registration request using the remote registration techniques described above e.g. generating a public private key pair performing policy filtering etc . If the registration policy permits the web authentication application prompts the user to enroll his her voice face body part biometric e.g. recording the user s speech of certain phrases and or taking a snapshot of the user s face or other body part . As in prior embodiments to capture the user s voice face body part biometric the web application may call the media capture logic e.g. using a Javascript Media Capture and Streams API .

In one embodiment the web authentication application processes the captured user biometric data and may convert the data to the form that it may used for authentication. For example the web authentication application may converts the raw biometric data to generate biometric reference data stored within a secure storage on the client . For example certain characteristics of the user s voice may be extracted from the raw voice data and or certain characteristics of the user s face or other portion of the user s body may be extracted from the raw video image s . In one embodiment using the media capture logic this series of operations take place within the browser .

In one embodiment the web authentication application generates a private public key pair as described for some embodiments above. Once generated the web authentication application may securely store the private key within secure storage and send a secure registration response to the authentication server containing the public key. In one embodiment the authentication server may then store the public key in a database entry associated with the user s account. In one embodiment the public private key generation and all other key based operations are implemented using the Javascript WebCrypto API. However the underlying principles of the invention are not limited to any particular type of program code for processing and managing keys. Once the keys have been successfully generated and exchanged the registration process terminates.

For authentication in response to the user attempting to enter into a transaction with the relying party the browser and the authentication server establish a secure communication channel e.g. via SSL TLS . The web authentication application running in the browser initiates authentication with the authentication server which then transmits an authentication request to the web authentication application Upon receipt the web authentication application may process the server authentication request as described in the above embodiments e.g. generating a random challenge using policy filtering to select authentication methods etc. . If permitted by the policy the web authentication application prompts the user to authenticate using a voice biometric face biometric or a biometric involving another portion of the user s body. As in prior embodiments for voice the media capture logic may use the microphone to capture the user s speech of certain words or phrases. For face body the media capture logic may use the camera take a snapshot of the user s face or portion of the user s body. The results are then provided to the web authentication application via a call to the media capture API e.g. the Javascript Media Capture and Streams API in one embodiment .

In one embodiment the feature extraction module extracts specified features from the raw voice face body part data and the matcher compares the extracted features with features from the biometric reference data to generates an authentication result. In one embodiment the authentication result comprises a score based on the similarity between the extracted features and the biometric reference data . The web authentication application may then use the score to determine whether the authentication was successful e.g. if the score is above a certain specified threshold .

In one embodiment if authentication is successful then the web authentication application locates the private key associated with the matching biometric data. It then uses the private key as previously described to perform remote authentication with the authentication server e.g. using the private key to generate a signature over a challenge provided by the authentication server and or encrypting a session key to establish a secure channel . In one embodiment the web authentication application performs all key related operations using the Javascript WebCrypto API. If authentication is successful then the relying party will allow the user to perform the desired transaction e.g. the transaction on the website which prompted the authentication request .

At the user logs into a website of the relying party from a browser and establishes a secure communication channel with a server of the relying party e.g. the authentication server described above and if not already registered receives a registration request at from the authentication server. The web authentication application may process the registration request using the remote registration techniques described above e.g. generating a public private key pair performing policy filtering etc . If the registration policy permits at the web authentication application prompts the user to enroll his her voice face body part biometric e.g. recording the user s speech of certain phrases and or taking a snapshot of the user s face or portions of the user s body . The user s voice may be sampled from a microphone and or a picture of the user s face body part may be captured with a camera on the client. As mentioned in one embodiment the voice video is captured using built in media capture logic within the browser context e.g. using a Javascript Media Capture and Streams API in one embodiment .

At the server receives and converts the raw biometric data to generate biometric reference data. For example certain characteristics of the user s voice may be extracted from the raw voice data and or certain characteristics of the user s face or other body part may be extracted from the raw video image s . The resulting biometric reference data may be associated with the user s account and saved in a secure storage device on the client from which it may subsequently be accessed during authentication .

At the web authentication application generates a public private key pair and stores the keys within a secure storage on the client which may be the same or a different storage than that used for the biometric reference data . At a registration response is sent to the authentication server which includes the public key of the public private key pair. At the server identifies the user account e.g. using the user ID or other identifying code and securely stores the public key.

At the biometric data is captured via the browser. As mentioned above to capture the user s voice face body part biometric one embodiment of the invention initiates a call to the dedicated media capture logic built into the browser e.g. the web application calls the Javascript Media Capture and Streams API .

At the web application compares the biometric reference data with certain features of the raw biometric data extracted in operation and generates an authentication result. In one embodiment the same features are extracted as those extracted during the registration process e.g. spectral characteristics of the user s voice geometric or photometric characteristics of the user s image etc . In one embodiment the authentication result comprises a score based on the similarity between the extracted features and the biometric reference data. The web application may then use the score to determine whether the authentication was successful e.g. if the score is above a certain specified threshold .

If successful determined at then the transaction is permitted and an indication of successful authentication is sent to the authentication server at . If not successful then at the transaction is disallowed and an authentication failure is sent to the authentication server.

As illustrated in the computer system which is a form of a data processing system includes the bus es which is coupled with the processing system power supply memory and the nonvolatile memory e.g. a hard drive flash memory Phase Change Memory PCM etc. . The bus es may be connected to each other through various bridges controllers and or adapters as is well known in the art. The processing system may retrieve instruction s from the memory and or the nonvolatile memory and execute the instructions to perform operations as described above. The bus interconnects the above components together and also interconnects those components to the optional dock the display controller display device Input Output devices e.g. NIC Network Interface Card a cursor control e.g. mouse touchscreen touchpad etc. a keyboard etc. and the optional wireless transceiver s e.g. Bluetooth WiFi Infrared etc. .

According to one embodiment of the invention the exemplary architecture of the data processing system may used for the mobile devices described above. The data processing system includes the processing system which may include one or more microprocessors and or a system on an integrated circuit. The processing system is coupled with a memory a power supply which includes one or more batteries an audio input output a display controller and display device optional input output input device s and wireless transceiver s . It will be appreciated that additional components not shown in may also be a part of the data processing system in certain embodiments of the invention and in certain embodiments of the invention fewer components than shown in may be used. In addition it will be appreciated that one or more buses not shown in may be used to interconnect the various components as is well known in the art.

The memory may store data and or programs for execution by the data processing system . The audio input output may include a microphone and or a speaker to for example play music and or provide telephony functionality through the speaker and microphone. The display controller and display device may include a graphical user interface GUI . The wireless e.g. RF transceivers e.g. a WiFi transceiver an infrared transceiver a Bluetooth transceiver a wireless cellular telephony transceiver etc. may be used to communicate with other data processing systems. The one or more input devices allow a user to provide input to the system. These input devices may be a keypad keyboard touch panel multi touch panel etc. The optional other input output may be a connector for a dock.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

Elements of the present invention may also be provided as a machine readable medium for storing the machine executable program code. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnetic or optical cards or other type of media machine readable medium suitable for storing electronic program code.

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. For example it will be readily apparent to those of skill in the art that the functional modules and methods described herein may be implemented as software hardware or any combination thereof. Moreover although some embodiments of the invention are described herein within the context of a mobile computing environment the underlying principles of the invention are not limited to a mobile computing implementation. Virtually any type of client or peer data processing devices may be used in some embodiments including for example desktop or workstation computers. Accordingly the scope and spirit of the invention should be judged in terms of the claims which follow.

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

