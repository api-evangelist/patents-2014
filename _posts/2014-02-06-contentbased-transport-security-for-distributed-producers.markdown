---

title: Content-based transport security for distributed producers
abstract: A content-producing computer system can use a locally generated key or a client-generated key to communicate with a client device during a session over a named-data network. During operation, the computer system can receive an Interest packet that includes a name for a piece of data or a service. The Interest's name can include a routable prefix, a session identifier, and an encrypted suffix. In some embodiments, the system can generating a session key based on the session identifier and a secret value, and decrypts the encrypted suffix using the session key to obtain a plaintext suffix. The system processes the plaintext suffix to obtain data requested by the Interest, and encrypts the data using the session key. In some other embodiments, the system can use a local private key to decrypt the encrypted suffix, and uses an encryption key obtained from the Interest to encrypt the Content Object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09531679&OS=09531679&RS=09531679
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09531679
owner_city: Palo Alto
owner_country: US
publication_date: 20140206
---
The subject matter of this application is related to the subject matter in a co pending non provisional application by the same inventors as the instant application and filed on the same day as the instant application entitled CONTENT BASED TRANSPORT SECURITY having Ser. No. 14 174 681 and filing date Feb. 6 2014.

This disclosure is generally related to establishing secure network connections. More specifically this disclosure is related to generating and or processing Interest and Content Object packets that include an encrypted name suffix.

Advancements in computer networks and wireless technologies have made it easier for manufacturers to create Internet enabled consumer devices. Some of these Internet enabled devices come in the form of consumer appliances such as digital thermostats home theater equipment and home security systems. Manufacturers oftentimes provide software applications and or online services that allow a user to remotely access or configure their devices. Also many of these devices can auto discover each other and can stream data between each other to provide a unified experience for the user. One example is home entertainment equipment where a user s laptop or mobile computing device can detect the presence of a television or audio video receiver AVR within a computer network and can stream content to the television or AVR to present the content to a user.

These Internet enabled consumer devices can communicate with an online service or with a peer consumer device by establishing a transmission control protocol TCP connection over an Internet protocol IP network. Oftentimes these consumer devices can establish a secure connection that encrypts the user s information by employing a transport layer security TLS protocol or a secure socket layer SSL protocol that encrypts data before transmitting the data over the IP network.

Unfortunately the TLS and SSL protocols are specific to IP based network protocols and cannot be used to establish a secure connection on other types of computer networks. For example smartphone and other mobile devices oftentimes switch between different networks within a single day which makes it difficult to reach a given mobile device when its IP address has changed. To solve this problem computer scientists are developing a content centric network CCN architecture that allows a computer network to route packets based on the packet s name and not based on a device s IP address. However it is not possible to use the TLS or SSL protocol on a CCN network given that the TLS and SSL protocols require using an IP address to establish the network connection.

One embodiment provides a content producing computer system that generates a session key to communicate with a client device during a session over a named data network. During operation the computer system can receive an Interest packet that includes a name for a piece of data or a service requested by a client device. The Interest s name can include a routable prefix a session identifier and or an encrypted name suffix. The system can generating a symmetric session key based on the session identifier and a secret value and decrypts the encrypted name suffix using the session key to obtain a plaintext suffix.

In some embodiments the system can process the plaintext name to obtain a piece of data that corresponds to the Interest s name and encrypts the piece of data using the session key. The system can then generate and disseminate a Content Object that includes the encrypted piece of data to satisfy the Interest.

In some embodiments the system can initiate the session with the client device. To initiate the session the system can receive a public key or a digital certificate from the client device and generates a session identifier for the session. The system then generates an encrypted session setup packet that includes at least the session identifier and the symmetric session key and includes the remote computer system s certificate. The encrypted session setup packet is encrypted using the client device s public key and can be signed according to the digital certificate of the content producing device. The system sends the encrypted session setup packet to the client device.

In some embodiments the system can receive from the client device a request for a digital certificate of the content producing device. In response to receiving the request the system sends to the client device the digital certificate of the content producing device. Also the system can initiate the session by receiving a temporary symmetric key from the client device such that the temporary symmetric key is encrypted using the public key of the content producing device. The system generates a session identifier for the session and generates an encrypted session setup packet that includes at least the session identifier and the symmetric session key. The encrypted session setup packet is encrypted using the temporary key from the client device. The system can then send the encrypted session setup packet to the client device.

In some embodiments while initiating the session the system can receive a resume setup packet that includes the session identifier and a public key certificate of the client device and decrypts the resume setup packet using the session key to obtain the client device s public key certificate. The system then authenticates the client device based on the public key certificate.

In some embodiments the session identifier is signed using a private key of the client device. Also to authenticate the client device the system can use the client device s public key to authenticate the signed session identifier.

One embodiment provides a content producing computer system that uses a client generated key to communicate with a client device during a session over a named data network. During operation the computer system can receive an Interest packet that includes a name for a piece of data or a service requested by a client device such that the Interest s name can include a routable prefix a session identifier and an encrypted name suffix. The system can obtain a decryption key e.g. a local private key or a session key decrypts the encrypted name suffix using the decryption key to obtain a plaintext suffix.

In some embodiments processes the name suffix to obtain a piece of data that corresponds to the Interest s name. The system obtains a client device public key from the Interest and encrypts the piece of data using the client device public key. The system can then generate and disseminate a Content Object that includes the encrypted piece of data to satisfy the Interest.

In some embodiments the decryption key includes one or more of a symmetric session key and a private asymmetric key.

In some embodiments while determining the decryption key the system can generate the decryption key based on one or more of the session identifier and a secret value.

The following description is presented to enable any person skilled in the art to make and use the embodiments and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus the present invention is not limited to the embodiments shown but is to be accorded the widest scope consistent with the principles and features disclosed herein.

Embodiments of the present invention provide network devices that solve the problem of protecting a user s privacy by using Interest packets with encrypted names. For example a client device can establish a session with a remote content producer over a named data network NDN to reach an agreement on the keys that each device can use to encrypt and decrypt an Interest s name or a Content Object s payload. Once the session is established the client device can request a piece of data by encrypting a portion of the name that identifies the data being requested and disseminating the Interest over the NDN. The Interest s name can include a beginning portion that indicates a routable prefix which can be used by various network nodes of a named data network to determine how to forward the Interest toward the content producer.

Once the content producer receives the Interest the content producer can use one of the established keys decrypt the portion of the name that s encrypted to determine the data or service requested by the Interest. In some embodiments the content producer can obtain a session identifier from the Interest s name and can use this session identifier to generate a session key on the fly. This allows the content producer to establish sessions with a plurality of client devices without having to store session keys. Also if the content producer deploys a service across multiple server nodes a session can span multiple server nodes without requiring the content producer to propagate a session s keys toward other server nodes.

The following terms describe elements of a named data network NDN architecture such as a content centric network CCN 

Content Object A single piece of named data which is bound to a unique name. Content Objects are persistent which means that a Content Object can move around within a computing device or across different computing devices but does not change. If any component of the Content Object changes the entity that made the change creates a new Content Object that includes the updated content and binds the new Content Object to a new unique name.

Name A name in an NDN is typically location independent and uniquely identifies a Content Object. A data forwarding device can use the name or name prefix to forward an Interest packet toward a network node that generates or stores the Content Object regardless of a network address or physical location for the Content Object. In some embodiments the name may be a hierarchically structured variable length identifier HSVLI . The HSVLI can be divided into several hierarchical components which can be structured in various ways. For example the individual name components parc home ndn and test.txt can be structured in a left oriented prefix major fashion to form the name parc home ndn test.txt. Thus the name parc home ndn can be a parent or prefix of parc home ndn test.txt. Additional components can be used to distinguish between different versions of the content item such as a collaborative document.

In some embodiments the name can include a non hierarchical identifier such as a hash value that is derived from the Content Object s data e.g. a checksum value and or from elements of the Content Object s name. A description of a hash based name is described in U.S. patent application Ser. No. 13 847 814 entitled ORDERED ELEMENT NAMING FOR NAME BASED PACKET FORWARDING by inventor Ignacio Solis filed 20 Mar. 2013 which is hereby incorporated by reference. A name can also be a flat label. Hereinafter name is used to refer to any name for a piece of data in a name data network such as a hierarchical name or name prefix a flat name a fixed length name an arbitrary length name or a label e.g. a Multiprotocol Label Switching MPLS label .

Interest A packet that indicates a request for a piece of data and includes a name or a name prefix for the piece of data. A data consumer can disseminate a request or Interest across an information centric network which NDN routers can propagate toward a storage device e.g. a cache server or a data producer that can provide the requested data to satisfy the request or Interest.

In some embodiments the NDN system can include a content centric networking CCN architecture. However the methods disclosed herein are also applicable to other NDN or other information centric network ICN architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12 338 175 entitled CONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK by inventors Van L. Jacobson and Diana K. Smetters filed 18 Dec. 2008 which is hereby incorporated by reference.

Computing environment can also include a client device which can include any computing device that can disseminate Interests and receive Content Objects via NDN . For example client device can include a smartphone . a tablet computer . and or a personal computing device . e.g. a laptop . Specifically client device can disseminate an Interest that includes an encrypted suffix to protect the privacy of a local user .

In some embodiments computing environment can include a content producer that can host data or services for one or more client devices. For example content producer can include s set of computing devices . .that each can receive and process Interests for one or more client devices. When a computing device of content producer receives an Interest from client device computing device can generate or retrieve a session key to decrypt the Interest s name. Once computing device has processed the Interest to obtain or generate a Content Object to return to client device computing device uses the session key or a key provided by client device to encrypt the Content Object before returning the Content Object.

Content producer can also include an authentication request in serialized server setup message . In response to receiving the authentication request client device generates a serialized resume setup message which includes any information that content producer can use to authenticate client device . After authenticating client device content producer can return a Content Object with a server confirmation message that informs client device that the session has been established.

Once the session is established client device and content producer have reached an agreement on the keys that each device can use to encrypt and decrypt the name suffix from each other s Interests and or to encrypt the payload in a Content Object. Client device can then proceed to disseminate Interests to request data or services from content producer such that the Interests include an encrypted name. Also content producer can satisfy an Interest by returning a Content Object whose payload is encrypted for client device .

Note that a Content Object can include a name for the payload s contents a metadata block a signature block and a payload that includes a piece of data. In some embodiments content producer can return the information needed to establish or maintain a session within the metadata of a Content Object. For example content producer can create a Content Object so that the metadata indicates a digital certificate associated with the Content Object s payload. The Content Object s metadata can include the bytes of the digital certificate or can include a key locator that can be used to retrieve the digital certificate from a trusted entity. This behavior is not possible using typical Internet protocol IP sessions such as over a transport layer security TLS protocol or a secure socket layer SSL protocol that requires exchanging digital certificates as packet payload data over several iterations.

In some embodiments the client device can marshal the encoded setup message to generate a character stream that includes the encoded setup message and appends the marshalled character stream to the Interest s name. The Interest s name can have the form routable prefix setup serialized encoded setup 1 In expression 1 the name component routable prefix can include a name prefix or domain associated with the content producer. The name component setup indicates a control value which notifies the content producer that the client device is setting up a session with the content producer. In some embodiments the encoded setup message can also include a random number N1 e.g. a nonce to ensure the Interest has a unique name so that routing nodes of a named data network don t use a cached object to satisfy the Interest. This allows the Interest to reach the content producer to which the client device desires to initiate a session.

The client device then disseminates the Interest over a named data network to send the encoded setup message to the content producer operation . After the content producer processes the Interest the client device receives a Content Object from the content producer that includes a serialized server setup packet operation . The client device can decrypt the serialized server setup packet using the temporary key or a private key that complements a temporary public key and obtains at least a session identifier and a session key operation . In some embodiments the serialized server setup packet can also include the random number N1 and another random number N2.

Also in some embodiments the serialized server setup packet can include a message that indicates the handshake is complete or can include an authentication request for authenticating the client device. Hence the client device determines whether the serialized server setup packet includes an authentication request operation . If the serialized server setup packet includes the message stating that the handshake is complete the session is established between the client device and the content producer and the client device can proceed to disseminate encrypted Interests for the content producer.

Otherwise the client device generates a serialized resume setup packet that includes the session identifier and a public key certificate for the client device operation and encrypts the serialized resume setup packet using the session key provided by the content producer. The client device generates an Interest that includes the encrypted serialized resume setup packet for example so that the Interest s name has the form routable prefix session id serialized resume setup 2 

In expression 2 the name component setup includes the session identifier as the control value that the content producer uses to determine how to process the Interest. The serialized resume setup packet can include the session identifier signed with the client s private key. The serialized resume setup packet can also include other information that can be used to authenticate the client device such as the client s public key certificate and can also include the certificate change.

The client device then disseminates the Interest over a named data network to send the serialized resume setup packet to the content producer operation . The content producer uses the serialized resume setup packet to authenticate the client device and returns a Content Object that specifies the outcome of the authentication. The client device receives the Content Object operation which either confirms that the session is established or notifies that the client device could not be authenticated.

In some embodiments the content producer can generate the session key based on the session identifier and a secret. For example during the session the client device may disseminate various Interests that request different data or different services from the content producer. However these Interests may not all arrive at the same server of the content producer that initiated the session with the client device. Also the content producer may have a plurality of sessions with various client devices which makes it undesirable to store session keys for all active session. In some embodiments the server that receives the Interest can generate the session key on the fly using the session identifier from the Interest s name and using the secret that is common across all servers of the content producer.

The content producer then generates a serialized server setup packet that includes the session identifier and the session key and is encrypted using the client device s temporary key operation and generates a Content Object that includes the encrypted serialized server setup packet. The content producer then returns the Content Object to satisfy the client device s Interest operation .

In some embodiments the content producer can either finish the session initiating handshake or can request additional information from the client device to authenticate the client device. For example if the content producer does not need to authenticate the client device the content producer can generate the serialized server setup packet to include a message that indicates the handshake is complete. On the other hand if the content producer needs to authenticate the client device the content producer generates the serialized server setup packet to include an authentication request for authenticating the client device. The client device responds to the authentication request by disseminating an Interest that includes a serialized resume setup packet for the content producer.

The content producer can authenticate the client device using the signed session identifier or using the public key certificate operation . For example recall that the signed session identifier is signed using the client device s private key. The content producer can process the session identifier using the client device s public key to obtain the plaintext session identifier. Alternatively the content producer can analyze the public key certificate and or the certificate chain to authenticate the client device.

The content producer then determines whether client authentication was successful operation . If so the content producer proceeds to return a Content Object that confirms that the session is active operation . Otherwise if the content producer could not authenticate the client device the content producer returns a Content Object that includes a message notifying that the authentication was not successful and or that the session is not active operation .

The client device then obtains the components that need to be combined into the Interest s name which can include the routable prefix the plaintext suffix and a session identifier associated with the content producer operation . The client device can determine the session identifier for example by performing a lookup operation in a table based on the routable prefix. If a matching entry does not exist the client device can proceed to initiate or re establish the session. To generate a secure Interest name the client device determines a session key that corresponds to the session with the content producer operation and encrypts the plaintext suffix using the session key operation . The client device can then generate the Interest so that the Interest s name includes the routable prefix and the encrypted name suffix operation . For example the Interest s name can have the form routable prefix session id encrypted suffix 4 The client device can disseminate the Interest over a named data network to obtain the desired content from the content producer operation .

Once the content producer receives the Interest the content producer can use the session key to decrypt the Interest s encrypted suffix and can return a Content Object that satisfies the Interest. Note that the Content Object s name also includes the name 4 with the encrypted suffix and includes a payload encrypted using the session key. The client device can process the Content Object using the session key.

In some embodiments the client device can also use the session key to regenerate the Content Object s plaintext name. For example the client device can use the session key to decrypt the encrypted suffix and replaces the encrypted suffix in the Content Object s name with the plaintext suffix. The Content Object s plaintext name has the form presented in expression 3 .

Recall that the content producer may maintain active sessions for a plurality of users whose requests may arrive at any of the content producer s various server computers. This makes it inefficient to have each server computer store the set of possible session keys for all active user sessions. In some embodiments the content producer s severs can generate the session key on the fly based on the Interest s session identifier. The content producer determines a session identifier from the Interest s name operation and generates a symmetric key based on the session identifier and a secret value operation . For example the content producer can use a function session key session id secret 5 

In expression 5 function can include any function that generates a cryptographic key such as a hash function. The secret can include any number or character sequence that is common to one or more devices associated with the content producer. This way any of the content producer s devices can obtain a session key for any active session without having to store a session key. The secret can be persistent over a period of time e.g. a month a year etc. and can be used across various sessions with a plurality of client devices.

The content producer then decrypts the encrypted suffix using the session key to obtain a plaintext suffix operation and can also generate a plaintext name for the Interest by replacing the encrypted suffix with the plaintext suffix operation . The plaintext name can have the form of expression 3 . The content producer can process the Interest using the plaintext suffix or using the plaintext name operation .

For example the content producer can perform a lookup operation in a local FIB using the plaintext name to determine a local application that can retrieve or generate a Content Object that satisfies the Interest. Alternatively or additionally the content producer or a local application can use the plaintext suffix to determine the data or service being requested by the client device. Once the content producer or a local application has retrieved or generated a piece of data requested by the Interest the content producer can generate and return a Content Object to satisfy the Interest.

Note that the Content Object s name includes the name from the Interest which includes the encrypted suffix and has a form presented under expression 4 . This allows routing nodes along a path traversed by the Interest to use the Content Object s name to find a matching entry in a local PIT and to return the Content Object via an interface specified by the matching PIT entry. The content producer then returns the Content Object to satisfy the Interest operation .

In some other embodiments the client device does not store keys for active sessions. Rather the client device can generate the keys at runtime as necessary. For example the client device can generate a session key using a function session key session id secret 6 If the client device is configured to use a public private key pair the client device can generate the public key using a function public key session id secret 7 Once the client device receives a Content Object from the content producer the client device can use another hash function to generate the corresponding private key to decrypt the Content Object s payload private key session id secret 8 

The functions and can include any function that generates a cryptographic key such as a hash function.

To generate a secure Interest the client device determines a public key that was received from the content producer operation and uses the content producer s public key to encrypt the plaintext suffix as well as the client device s encryption key e.g. a symmetric session key or a public key operation . The client device can generate the Interest so that the Interest s name includes the routable prefix and the encrypted name suffix operation . For example the Interest s name can have the form routable prefix session id encrypted suffix 9 The client device can disseminate the Interest over a named data network to obtain the desired content from the content producer operation . Once the content producer receives the Interest the content producer can use a local private key to decrypt the Interest s encrypted suffix and uses the key it obtains from the Interest to encrypt a Content Object for the client device.

In some embodiments during operation the client device can obtain a stored decryption key that corresponds to the session identifier. Alternatively the client device can use a hash function to generate the decryption key when necessary at runtime. For example the client device can use a function to generate a symmetric session key based on the session identifier as presented under expression 6 . If the client device is using a public private key pair the client device can use a function to generate the private key based on the session identifier and a secret as presented in expression 8 . The secret value can be persistent over a period of time and can be used across various sessions with one or more content producers. For example the client device can generate a new secret value each time the computer is turned on. Alternatively the client device can generate a secret value for each active interface for example as a part of a setup procedure that initializes or activates the interface.

In some embodiments the content producer can generate a plaintext name by replacing the encrypted suffix with the plaintext suffix operation and processes the Interest using the plaintext name to obtain or generate a piece of data operation . Alternatively the content producer does not need to generate the plaintext name to process the Interest. For example the content producer may obtain or generate the piece of data based on the plaintext suffix without generating the full plaintext name .

The content producer then encrypts the piece of data using the encryption key that it obtained from the Interest s encrypted suffix operation and generates a Content Object that includes the Interest s name and includes the encrypted piece of data operation . The Content Object s name includes the name from the Interest that includes the encrypted suffix which allows routing nodes along a path traversed by the Interest to use the Content Object s name to find a matching entry in a local PIT. The content producer then returns the Content Object to satisfy the Interest operation .

In some embodiments communication mechanism can send and or receive Interests and Content Objects over a named data network NDN such as a content centric network CCN . Session managing mechanism can establish a session with a remote device over the NDN or CCN. Request processing mechanism can obtain a request for data from a local user or application and determines whether the request can be satisfied locally or needs to be disseminated across an NDN or CCN. Cryptography mechanism can determine an encryption key that corresponds to a session with a remote computer system and encrypts the name suffix associated with the request using the session encryption key.

Interest processing mechanism can generate or process an incoming Interest an Interest whose name includes a routable prefix to the remote computer system and includes the encrypted suffix. Content Object processing mechanism can generate a Content Object or process an incoming Content Object that includes an encrypted suffix and includes an encrypted payload.

Transport security system can include instructions which when executed by computer system can cause computer system to perform methods and or processes described in this disclosure. Specifically transport security system may include instructions for sending and or receiving Interests and Content Objects over a named data network NDN such as a content centric network CCN communication mechanism . Further transport security system can include instructions for establishing a session with a remote device over the NDN or CCN session managing mechanism . Transport security system can also include instructions for obtaining a request for data from a local user or application and determining whether the request can be satisfied locally or needs to be disseminated across an NDN or CCN request processing mechanism .

Transport security system may also include instructions for determining an encryption key that corresponds to a session with a remote computer system and encrypting the name suffix associated with the request using the session encryption key cryptography mechanism . Further transport security system can include instructions for generating an Interest or processing an incoming Interest whose name includes a routable prefix to the remote computer system and includes the encrypted suffix Interest processing mechanism . Transport security system can also include instructions for generating a Content Object or processing an incoming Content Object that includes an encrypted suffix and includes an encrypted payload Content Object processing mechanism .

Data can include any data that is required as input or that is generated as output by the methods and or processes described in this disclosure. Specifically data can store at least session identifiers for one or more active sessions cryptographic keys e.g. a session key or a public private key pair for one or more active sessions and or a secret value that facilitates generating cryptographic keys for one or more active sessions.

The data structures and code described in this detailed description are typically stored on a computer readable storage medium which may be any device or medium that can store code and or data for use by a computer system. The computer readable storage medium includes but is not limited to volatile memory non volatile memory magnetic and optical storage devices such as disk drives magnetic tape CDs compact discs DVDs digital versatile discs or digital video discs or other media capable of storing computer readable media now known or later developed.

The methods and processes described in the detailed description section can be embodied as code and or data which can be stored in a computer readable storage medium as described above. When a computer system reads and executes the code and or data stored on the computer readable storage medium the computer system performs the methods and processes embodied as data structures and code and stored within the computer readable storage medium.

Furthermore the methods and processes described above can be included in hardware modules. For example the hardware modules can include but are not limited to application specific integrated circuit ASIC chips field programmable gate arrays FPGAs and other programmable logic devices now known or later developed. When the hardware modules are activated the hardware modules perform the methods and processes included within the hardware modules.

The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly many modifications and variations will be apparent to practitioners skilled in the art. Additionally the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims.

