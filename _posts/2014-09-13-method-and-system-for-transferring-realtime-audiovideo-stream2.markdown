---

title: Method and system for transferring real-time audio/video stream
abstract: A method and system for transferring real-time audio/video stream (AVS) is provided. The method for transferring real-time AVS includes the following steps of: first, receiving a real-time AVS by a server; transforming the real-time AVS into a fragmented media data (FMD) and storing the FMD in a storage module of the server, wherein the FMD comprises a starting-point, an overall fragment information and at least one media fragment (MF); next, generating a segmented media data (SMD) by encapsulating the FMD when the server receives a playback command. The step of generating the SMD comprises encapsulating the starting-point and the overall fragment information into an initial segment information of the SMD. Each playable segment of the SMD has multiple MFs and a segment index recording segment order to indicate each MF. The final step is to transfer the SMD to browser software for playback.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09641908&OS=09641908&RS=09641908
owner: YUAN ZE UNIVERSITY
number: 09641908
owner_city: Taoyuan County
owner_country: TW
publication_date: 20140913
---
The present disclosure relates to an audio video stream AVS process in particular to a real time AVS process.

With the development of network technology network services with high speed and wideband are provided so that the transmission speed of multimedia data on the network is substantially improved. Subsequently multimedia data transmitted on the network becomes more popular. Users can completely and clearly present information by multimedia data. The information such as instructional videos live news and web TV can be greatly transmitted. Many academic institutions research and development organizations and related operators continuously develop the codec technology and the specification of multimedia. Hence the related applications for browsing live audio video data on the network are very plentiful. For example users can use personal electronic devices to watch real time audio video data on the Internet by installing mobile phone applications or web playback programs on the smart phones or the computer equipments.

However in current development of network multimedia the related software or applications have to be installed in the personal devices. Each manufacture such as camera developer server provider or user browser provider may use their own codec specification or network transfer specification. Consequently users have to install variety of software or applications depending on the requirements from different developers or providers. This will cause inconvenience to users. Furthermore the real time transmission quality of network multimedia may be bad to be intermittent or unstable due to the development problems even if the software or applications required by the developers or providers are installed. Therefore the quality of playing multimedia on the network is unable to have great user experience under the well developed network transmission environment.

Accordingly a method for transferring real time AVS is disclosed in the present disclosure. The method provides a codec specification of more flexible real time AVS process. A server encodes a real time AVS into a fragmented media data FMD and encapsulates the FMD into a segmented media data SMD according to a playback command transmitted from a user equipment. Thus the user equipment can easily analyze the real time AVS and flexibly play the real time AVS according to demands so as to smoothly transmit and provide better user experiences.

An embodiment of the present disclosure provides a method for transferring real time AVS. The method for transferring real time AVS includes the following steps of first receiving a real time AVS by a server next transforming the real time AVS into an FMD and storing the FMD in a storage module of the server wherein the FMD comprises a starting point an overall fragment information and at least one media fragment MF next generating an SMD by encapsulating the FMD when the server receives a playback command. The step of generating the SMD by encapsulating the FMD comprises encapsulating the starting point and the overall fragment information of the FMD into an initial segment information of the SMD. Each playable segment has multiple MFs and a segment index recording segment order to indicate each MF. The final step is to transfer the SMD to browser software for playback.

Another embodiment of the present disclosure provides a system for transferring real time AVS. The system for transferring real time AVS comprises a server an FMD codec module an SMD codec module and a transferring module. The server is configured to receive a real time AVS generated by at least one camera from network. The FMD codec module is configured to encode the real time AVS into an FMD. The SMD codec module is configured to transform the FMD into an SMD. The transferring module is configured to transfer the SMD requested from a browser software by a network transfer protocol.

In view of above the method and system for transferring real time AVS in the embodiments of the present disclosure not only provide real time AVS process and playback method with high compatibility but also adopt the technical means of encoding the real time AVS into the FMD to improve the performance when the real time AVS is loaded to the server. In addition since the SMD provided to the browser software is encapsulated from the FMD the browser software can easily analyze the SMD without installing additional codec. Accordingly the browser software can smoothly receive and play the real time AVS so as to increase the playback performance.

In order to further understand the techniques means and effects of the present disclosure the following detailed descriptions and appended drawings are hereby referred such that through which the purposes features and aspects of the present disclosure can be thoroughly and concretely appreciated however the appended drawings are merely provided for reference and illustration without any intention to be used for limiting the scope of the present disclosure.

In the following paragraphs drawings will be referred to explain each embodiment of the present disclosure. However the concept in the present disclosure may be implemented in different forms and should not be limited by the embodiments described in the present disclosure. Besides the same reference numbers are used in the drawings and the description to refer to the same or like parts.

The server is the node in the real time AVS transferring network architecture for collecting real time AVS and providing the collected real time audio video data to the user equipment . In the present embodiment the server receives the network packets of real time AVS then immediately analyzes these real time AVS packets and transforms into the FMD. The FMD in the present embodiment is the media data of the fragmented MP4 format. The embodiment of the data format of the FMD is illustrated in . Next after the AVS is transformed into the data format of the FMD the server stores the FMD. Then the server further encapsulates the processed FMD into the SMD for providing the data format of the real time AVS when a playback commend is requested from the user equipment .

The user equipment is an electronic device for users to receive and play the real time AVS by acquiring the real time AVS of the cameras and from the server through the Internet. The user equipment can be for example a personal desktop a notebook a mobile handheld device or a tablet. Any electronic device with browser software supporting Hypertext Markup Language HTML can be the user equipment of the present embodiment. Accordingly users can execute the browser software supporting HTML such as Chrome Opera Internet Explorer Firefox Safari etc. The user equipment establishes communication connection with the server by Hypertext Transfer Protocol HTTP or Hypertext Transfer Protocol Secure HTTPS to send the request for playing the real time AVS to the server . After acquiring the related real time AVS the browser software of the user equipment plays the real time AVS of the cameras and .

The SMD codec module is configured to encapsulate the FMD into the SMD. The SMD is for example the segmented MPEG 4 media data. The data format of the SMD is illustrated in . In an embodiment of the present disclosure the server can receive a playback commend from the user equipment. For example after the browser software of the user equipment establishes receiving and transmitting channels with the server through HTTP or HTTPS a multimedia interface is provided and a playback button on the multimedia interface is pressed. After receiving the playback commend from the user equipment the server decodes the FMD in the storage module and encapsulates into the SMD. The transferring module transfers the SMD to the multimedia interface of the browser software of the user equipment to respond the playback request from the user equipment.

The data format of the FMD comprises a starting point an overall segment information a media fragment MF and MF random access point . The starting point is the file execution information of the media for example the support application information of the multimedia. The starting point can be implemented as the file type and compatibility ftyp of the MP4 data format. The overall segment information records the metadata information of the multimedia which can be implemented as the container for all the metadata moov of the MP4 data format. The overall segment information comprises an overall segment description and a track information . The overall segment description records the media characteristic information of the multimedia such as establishment time time length etc. The overall segment description can be implemented as the movie header and overall declarations mvhd of the MP4 data format. The track information records the overall track information of the multimedia such as audio frequency subtitles etc. The track information can be implemented as the container for an individual track or stream trak of the MP4 data format.

MF records contents of the multimedia. The MF in the present embodiment has a playable media data . It should be noted that an FMD may comprise at least one MF . The order of each MF can be acquired from the information recorded in each MF . MF comprises an MF information and a media data . The MF information records the fragment description information of the multimedia which can be implemented as the movie fragment moof of the MP4 data format. The MF information comprises a fragment header and a track information . The fragment header records the fragment characteristic information which can be implemented as the movie fragment header mfhd of the MP4 data format. The track information records the single track information which can be implemented as the track fragment traf of the MP4 data format. The media data records the multimedia data which can be implemented as media data container mdat of the MP4 data format. If the FMD has multiple MFs the fragment headers and the track information of the MFs can be used to identify the order between each MF so that the codec can play the media data according to the accurate time sequence.

The MF random access point is at the end of the FMD and is used to indicate the termination of the FMD . The MF random access point can be implemented as the movie fragment random access mfra of the MP4 data format. The MF random access point comprises a track fragment access point and a MF access offset . The track fragment access point records the end point of the track which can be implemented as the track fragment random access tfra of the MP4 data format. The MF access offset records the offset of the MF which can be implemented as the movie fragment random access offset mfro of the MP4 data format.

The embodiment of the present disclosure transforms the real time AVS into the FMD and utilizes the data format of the FMD to provide simple and quick transformation. Hence the transforming and loading time can be reduced to conserve the time for processing the real time AVS.

Referring to and it should be noted that if the server directly provides the multiple transformed FMD to the user equipment each FMD may have the MF random access point to record the termination and the offset of the FMD . Hence when the user equipment plays the real time AVS it has to read each MF random access point and compute the offset value by itself to acquire the next FMD. This may degrade the efficiency when the user equipment plays the real time AVS. In order to increase the efficiency when the user equipment plays the real time AVS the server in the embodiment of the preset disclosure further encapsulates the FMD into the data format of the SMD to increase the efficiency when the user equipment plays the real time AVS.

Referring to to during the process of generating the SMD the SMD codec module decodes the FMD to acquire the starting point and the overall segment information and encapsulates the portions recording the overall general information of the multimedia into the initial segment information . Then the server encapsulates the MF of the FMD into the multiple playable segments of the SMD .

Referring to again the multiple playable segments of the SMD comprise segment indexes and multiple MFs . The segment index sidx records the fragment order of the MF to indicate the order of each MF of the playable segment . The data format of the MF is illustrated in . is a schematic diagram of the data format of the MF provided in accordance with an embodiment of the present disclosure. The MF Fragment records contents of the multimedia. The MF in the present embodiment comprises a fragment description information and a media data . The fragment description information records the detailed information of the fragment of the multimedia which can be implemented as the moof of the MP4 data format. The fragment description information comprises a fragment header and a track header . The fragment header records the fragment characteristic information which can be implemented as the mfhd of the MP4 data format. The track header records the single track information specifically the header information of the single track which can be implemented as the track fragment header tfhd of the MP4 data format. The media data records multimedia data which can be implemented as the mdat of the MP4 data format.

Referring to and after decoding the MF of the FMD the SMD codec module individually encapsulates the MF of the FMD into the playable segment . Therefore the encapsulated playable segment has multiple MFs with the same data format as the MF . Each MF has the fragment header and the track header of the fragment so that each MF in the playable segment can be identified by the segment index . For example the track time point or the length of each track of each MF can be identified. The SMD in the present embodiment is provided for the server to promptly decode the FMD and quickly encapsulate the initial segment information without additional decoding time. Further the data format of the multiple MFs in the SMD is the same as the data format of the multiple MFs in the FMD . By reading the segment index of the playable segment the SMD has enough information to provide the media data of the multiple MFs under the situation of non continuous reading. In contrast the FMD is restricted by reading the MF random access point to acquire the data of the MF in the next FMD .

For example when the user equipment downloads the real time AVS from the server and plays the SMD on the browser software the browser software analyzes the data format of the SMD reads the initial segment information to acquire the general data of the multimedia and identifies each MF according to the segment index of each playable segment . Accordingly when the browser software does not download the playable segments or the MFs according to the order of the playable segments and or the order of MFs e.g. the time axis order of the multimedia or each segment order the browser software can still play the downloaded playable segments and or MFs on the multimedia interface. Therefore the server provided in of the embodiment of the present disclosure not only transforms the real time AVS into the FMD in to increase the transforming efficiency but also encapsulates the FMD into the SMD in to increase the efficiency of downloading and playing the real time AVS for the user equipment and reduce the waiting time for users. Hence the browser software can play the real time AVS more similar to the playing time in the live scene. The discrepancy between the user equipment and the live scene can be reduced and the user experiences when watching the real time AVS can be improved.

The multiple time point buttons in is provided for the user to directly switch the playing time point of the real time AVS. Referring to and in the present embodiment each playable segment in the may further comprises multiple continuous MFs encapsulated in one segment data Segment as illustrated by the dotted line in . Hence a playable segment may comprises at least one segment data . For example if each MF has the playing time of 1 second the segment data with 10 MFs can provide the real time AVS for 10 seconds. Thus the user equipment in can store the downloaded segment data in the buffer for playback. The user may design each MF and or the segment data in different playing time lengths according to practical demands. The present embodiment is merely provided for illustration without any intention to limit the scope of the present disclosure. The multiple time point buttons on the multimedia interface of the browser software may correspond to the segment data respectively. For example every 10 seconds is a time unit for playing forward or playing back. The user can directly utilize the time point to request the specific real time AVS to the server. Hence the downloading time for the unnecessary real time AVS can be saved and the user may still watch the real time multimedia information smoothly.

It should be mentioned that the browser software in the embodiments of the present disclosure supports the hypertext markup language specifically the HTML5 so that the browser software can analyze the video tag in the webpage program. Thus the user equipment can communicate with the server through the Internet communication protocol. With the FMD encoding technology and the SMD encapsulating technology provided in the embodiments of the present disclosure the user equipment can directly play the real time AVS provided by the server in the browser software through the video tag embedded in the webpage language.

Accordingly the method and system for transferring real time AVS provided in the embodiments of the present disclosure make the server transform the real time AVS into the FMD to save the processing time for the real time AVS and reduce the loading time. Further after receiving the playback commend from the user equipment the server can encapsulate the FMD into the SMD to increase the efficiency of downloading and playing the real time AVS for the user equipment. Besides the FMD and SMD provided in the embodiments of the present disclosure are the modifications from the same multimedia data format. Thus the browser software of the user equipment does not need to install any additional codec. The browser software only needs to plug Application Programming Interface API to analyze the data format of the SMD. Then the browser software can successfully decode the multimedia information in the data format by utilizing self codec and play the real time AVS on the multimedia interface of the browser software for the user.

The above mentioned descriptions represent merely the embodiment of the present disclosure without any intention to limit the scope of the present disclosure thereto. Various equivalent changes alternations or modifications based on the claims of present disclosure are all consequently viewed as being embraced by the scope of the present disclosure.

