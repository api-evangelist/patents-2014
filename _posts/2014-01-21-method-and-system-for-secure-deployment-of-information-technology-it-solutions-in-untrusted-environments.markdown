---

title: Method and system for secure deployment of information technology (IT) solutions in untrusted environments
abstract: Described herein are techniques related to shielding data, thereby enabling the shielded data to be distributively placed in untrusted computing environments for cost effective storage. A method and system may include a trusted agent operable in a trusted computing environment. The trusted agent includes a transformation knowledge key generator and a data transformer. The transformation knowledge key generator is operable to generate a transformation knowledge key, the transformation knowledge key being generated with at least two shielding algorithms to shield the data. The data transformer is operable to transform the data into N segments of shielded data using the transformation knowledge key. A communications agent securely coupled to the trusted agent is operable to securely transfer one or more of the N segments of shielded data to one or more storage devices in untrusted computing environments.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09336363&OS=09336363&RS=09336363
owner: Cofactor Computing LLC
number: 09336363
owner_city: Austin
owner_country: US
publication_date: 20140121
---
U.S. patent application Ser. No. 14 160 531 filed concurrently entitled METHOD AND SYSTEM FOR SHIELDING DATA IN UNTRUSTED ENVIRONMENTS and filed by Sumedh Wasudeo Sathaye and Nitin Sadashiv Deshmukh.

An information technology IT solution typically includes software hardware and service components or a combination thereof that work cooperatively to solve a specific problem or address a user need. Recently technologies have arisen that allow Cloud service providers CSP s to offer cost effective IT products and services such as virtualized scalable data centers unlimited range of applications platforms and storage technologies and others for a per use fee or a flat fee. As a result many of these CSP s offer cost effective outsourcing of IT operations to an enterprise that may be scaled instantly seamlessly and on demand in a Cloud computing environment.

A typical in house IT data center operates in a trusted and controlled environment. However it may not be as cost effective as CSP service and may not be easily scalable. Accordingly there is a need for developing methods and systems for deploying secure IT solutions in a Cloud based unsecure environment.

The following Detailed Description is provided with reference to the accompanying figures. In the figures the left most digit s of a reference number usually identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items.

This document discloses one or more systems apparatuses methods etc. for deployment of IT solutions in untrusted environments.

Depending on the IT solution the data no may originate and be stored in a trusted computing environment may also be referred to as a trusted environment or may originate and be stored in an untrusted computing environment may also be referred to as an untrusted environment or a cloud environment . A trusted data center may include one or more computing resources not shown residing in the trusted computing environment that are configured to deliver IT solutions. An entity that owns or operates the data center may assign an administrator to maintain complete control over the IT related processes and data.

In an implementation additional characteristics of the trusted computing environment may include 1 ability to locate data and computation at all times e.g. identify the physical location of all data and computation that is located in the trusted data center 2 ability to configure dedicated computing resources for use by trusted users e.g. configure resources such as physical storage devices central processing units physical network connections for internal use only and not shared with any user outside of the organization 3 control of services provided via a set of request response protocols offered to trusted users 4 such that an administrator has full control over deployment of resources e.g. space power physical security heating cooling distribute computing software and others .

In an implementation additional characteristics of the untrusted computing environment may include 1 sharing of resources with third parties e.g. parties external to the entity that owns the data that typically provide lower costs and improved scalability 2 ability to configure computing resources needed for use in a shared environment is controlled in real time by a third party e.g. a cloud services provider or a virtual private data center may dynamically re allocate computing resources from one end user to another as needed 3 control of services provided is via a published set of request response protocols offered to any paid user 4 owner or operator of the data has no direct control over deployment of resources e.g. space power physical security heating cooling distribute computing software and others 5 multi tenancy in any untrusted computing environment such as a cloud.

Although no computing environment may be guaranteed to be 100 safe from unwanted attacks at all the time and under any circumstance an administrator may be able to configure and control a computing environment and designate it to be trusted e.g. create the trusted data center that has an acceptable level of risk in loss of the data no in proportion to the value of the data being shielded.

Although use of encrypted keys to secure data in an untrusted computing environment e.g. a cloud environment is well known the security of the encrypted key used to encrypt the data is becoming increasingly unsafe. Size of the encryption key relative to the size of the data being shielded often becomes a large overhead cost resulting in higher price and lower performance in many IT applications.

In an implementation a transformation knowledge key may be used to transform the data no into shielded data . The shielded data may be stored in the trusted computing environment or the untrusted computing environment in a configurable manner to take advantage of the lower cost options. The transformation knowledge key may be generated with one or more shielding algorithms not shown to shield the data. In an implementation the transformation knowledge key may be represented as a data byte string not shown .

In an implementation the transformation knowledge key may be used to shield data at rest e.g. long term data stored on a hard disc drive or magnetic media data in motion flight or transit e.g. data being exchanged between or within the trusted environment and the untrusted environment and data in solid state memory e.g. transient short term or transaction oriented data that is stored in random access memory . Additional details of techniques to shield data in motion flight or transit and data in solid state memory are described with reference to .

An input to generate the transformation knowledge key is data object metadata . The data object metadata provides information such as type size checksum access control permissions and other attributes of the data to be shielded and policies and parameters in force to manage the data . Knowledge about the data object metadata may influence the nature type size of the transformation knowledge key . Additional details of the transformation knowledge key are described with reference to .

It may also be challenging to generate an encryption key that is guaranteed to be 100 safe and secure from unwanted attacks at all the time and under any circumstance. A technique used to generate the transformation knowledge key accepts this risk and mitigates it by dynamically changing the transformation knowledge key in a configurable manner in the trusted computing environment . In addition a unique instance of the transformation knowledge key may be generated for each instance of storage of the shielded data. Thus loss of data due to a compromised instance of the transformation knowledge key may be limited to loss of just one record of the data . The techniques and systems described herein generate extraordinary levels of shielding for the data thereby making the data no suitable to be stored in shielded form in the untrusted environment and benefit from the lower cost and improved scalability. Additional details of the transformation knowledge key using one or more shielding algorithms are described with reference to .

With continuing reference to the system illustrates a 3 tier IT solution architecture for storing shielded data in an untrusted environment to reduce costs and improve scalability. In an implementation the 3 tier architecture may include a database layer an application layer an a user interface layer . The database layer is typically a conventional data warehouse that makes use of clustered multi processor systems configured with high availability redundancy features such as master slave storage volumes and back up archiving volumes.

The application layer is typically comprised of one or more server computers e.g. a web application server and all application related executables reside in this tier. The user interface layer is typically comprised of one or more client computers that may be configured to provide a user interface e.g. a web browser to access application features hosted by one or more of the application servers. Thus the application layer provides an interface between user interface layer and the database layer . In an implementation the application layer may include cache memory to improve performance and support backup functions.

In an implementation the system is configured to include one or more components of the 3 tier IT solution architecture to exclusively reside in the trusted environment . The system includes one or more instances of application servers a database DB system and a trusted agent residing in the trusted environment . In addition the system is also configured to include data storage devices and at least one remote agent shown as a remote agent that is configured as a remote storage agent residing in the untrusted environment . Although at least one instance of the remote agent is shown in the system it is understood that the system may be configured to include more than one instance of the remote agent . Similarly although only one trusted agent is shown system may be implemented with more than one trusted agents residing in the trusted environment . The trusted agent is configured to communicate with the remote agent via a secure communications link .

As described herein the trusted agent and the remote agent may be configured to function as an agent for a user e.g. entity administrator solution provider data owner and others or another program to perform one or more functions in an autonomous and continuous manner. The trusted agent and the remote agent may implemented as hardware software firmware or a combination thereof. In an implementation the remote agent is configured as a storage agent that is coupled to the data storage devices . The remote agent may also be configured to perform additional functions that are described with reference to .

In an implementation the trusted agent includes at least one instance of the following components a server a data storage drive referred to as a drive a database a configurator an administration module and a policy engine .

The server is the main engine of the system . It is configured to provide various services to other components included in the system . The services may be subscribed to and or access via published APIs. The server may be made available as a standalone process a daemon a dynamically linked library a shared library or it may be included and made part of other IT solution computation components.

The drive provides shared storage services to components of the system via the server . That is system components may read or write data to the drive as if it is a direct access storage device e.g. a hard disk . Services provided by the drive may be exposed to the operating system OS via a device driver interface.

The database is a private database designed to hold any and all information pertinent to storage function s in the system . For each piece of the data to be shielded representing each instance of storage the database holds a unique handle and a unique instance of the transformation knowledge key . It holds the knowledge e.g. in the form of configuration data logic rules objects procedures and others of various locations e.g. at the remote agent which one or more segments of the shielded data are stored. The database also holds policies that control the behavior of each instance of storage via execution in the policy engine . The database also holds storage configuration information and parameter values. The database may also hold user access and other privilege information such as credentials to access untrusted zone storage elements.

The policy engine is operable to read interpret hold and apply behavioral policies for the entire system . The policies e.g. configured as rules may be specified in a textual or other representations. The policies may be configured via several different methods e.g. via uploaded policy files or via using graphical user interfaces. The policy engine may provide a policy capture feature that combines the configuration administration and policy capture functions that reside in and is accessible only from the trusted computing environment . In an implementation only the server may be accessible from outside of the trusted computing environment . As described earlier services provided by the server may be subscribed to and or accessed via published API s.

The configurator is a module that enables allows an IT solution provider or an administrator to specify the configuration parameters for the system . The administration module enables an authorized user or administrator to perform administration functions such as access control user add remove modify plot trends of data access and others. Other functions may include 1 cost monitoring 2 alarms indicators 3 event logging and action triggers 4 co ordination between system instances residing in other trusted environments and 5 data replication across other system instances residing in other trusted environments. In an implementation the configurator may include multiple instances of system instances to serve a single IT solution. Examples of configuration data controlled by the configuration module may include data storage locations the control scaling parameters that affect the behavior of solution on the untrusted environment and others.

In an implementation a data visualization DV agent may be configured to enable a data owner an authorized user or an administrator to visualize the physical locations of all shielded data that may be deployed in the IT solution including shielded data in the trusted environment the untrusted environment or a combination thereof. Thus the DV agent may be configured to extend the amount of control the data owner an authorized user or an administrator may be able to exert on the shielded data by being able to pinpoint data locations on demand or displayed in real time as a part of system monitoring function. The system monitoring function may include issuing alarms or alert messages when an unauthorized access to the shielded data is detected. The DV agent which is a component of the trusted agent may be configured to be accessible only from the trusted environment .

In an implementation the remote agent which is configured as a remote storage agent may act on two types of commands received from the server 1 store commands and 2 retrieve commands. The store commands include instructions for the remote agent to store one or more segments of the shielded data . The remote agent is configured to execute the instructions resulting in storage of the shielded data in the untrusted computing environment . The remote agent may be configured to associate a unique identifier handle e.g. a text string with each segment of the shielded data . If asked to do so the remote agent returns the value of the identifier to the server which may store it in the database .

With the retrieve commands the remote agent receives one or more identifier handles from the server . In response remote agent retrieves the associated segments of the shielded data stored in the untrusted computing environment and transfers them to the server via communications link .

In an implementation the trusted agent may also include additional agents not shown such as 1 an agent to keep track of user and application identities encoded in suitable format 2 user access control agent that serves as a single authentication and authorization mechanism for requests to access agents residing in the untrusted environment and solution elements 3 data transformer that transforms the data in to the shielded data 4 transformation knowledge key generator that generates the transformation knowledge key 5 compliance and monitoring agent and a communications agent to handle secure communications in trusted as well as untrusted environments. Additional details about the data transformer and the transformation knowledge key generator are described with reference to .

It is understood that depending on an application specification a multi tier IT solution architecture for shielding data may include more than 3 layers e.g. a 5 layer IT solution. Conversely it may implement it as a single layer IT solution.

In an implementation the system is configured to include one or more components of the 3 tier IT solution architecture including a database layer an application layer an a user interface layer to exclusively reside in the untrusted environment and the trusted agent to reside exclusively in the trusted environment . The system includes one or more application severs a database DB system an instance of the remote agent configured as a remote compute agent and an instance of the remote agent configured as a remote storage agent . In addition the system is also configured to include data storage devices coupled to the remote storage agent residing in the untrusted environment .

The trusted agent is configured to communicate with the remote storage agent via a secure communications link and with the remote compute agent via a secure communications link . Although only one instance of the remote storage agent and the remote compute agent is shown in the system it is understood that the system may be configured to include more than one instance of the remote agents .

In an implementation the trusted agent is substantially similar to the trusted agent described with reference to . Referring back to similar to the trusted agent the trusted agent may include at least one instance of the following components a server a drive a database a configurator an administration module and a policy engine a DV agent . Each component of the trusted agent provides similar functionality and services as those provided by corresponding components of the trusted agent described with reference to . In addition the trusted agent is configured to delegate some computational functions e.g. related to client or user transactions to the remote compute agent for execution in the untrusted environment thereby reducing costs and improving scalability.

The remote compute agent may be configured as a single purpose agent or a unified multi purpose super agent performing functions complementary to that supported by the trusted agent . The IT solution and the underlying platform typically communicate with each other via well known OS calls e.g. disk file read modify delete or network socket communications. The remote agent may be configured to either 1 intercept the calls communication between different layers of the IT solution e.g. between the application server and the database or 2 the application server and or the database may be aware e.g. be explicitly configured to send all their communications through the remote compute agent . The remote compute agent may communicate via a protocol well understood by the application layer and the database layer and the related parts of the IT solution e.g. the data caching devices associated with the application layer. The one or more communication channels between these entities are built with well known and understood secure tunnels e.g. openssl tunnels HTTP Secure tunnels and similar others.

The remote compute agent may include an instance of the policy engine agent which co operating with the policy engine agent holds serves and applies policies rules which control behavior of various parts of the platform apparatus residing in the untrusted environment . In an implementation the remote compute agent is operable to receive transformation logic data e.g. a code dictionary a set of code interpretation rules and other to interpret the transformation knowledge key and the transformation knowledge key itself. As described herein the transformation logic data may include data associated with reconstruction of the data from the shielded data or rules or logic associated with the policy engine agent and policies rules that may be used to unshield the data using the transformation knowledge key . In an implementation the trusted agent sends transformation logic data to the remote agent to interpret the transformation knowledge key and the transformation knowledge key itself.

Encoded in the policies the remote agent may be instructed to intercept specific data requested by the solution application e.g. lookup of user directory during the authentication step of the IT solution. Upon matching intercepts the remote agent may execute actions specified in the policy. In an implementation the actions may be as follows 1 send a data lookup request to the trusted agent using a handle e.g. a user login name 2a receive unshielded response data to pass along to the application server that requested it or 2b receive shielded data transformation knowledge key to be used to unshield the data which then will be passed along to the application server that requested it. Several types of data intercept request receive use may be encoded in the policy engine . The interception of requests may be explicit e.g. the application server is aware of these extra steps or implicit the application server speaks the regular API for access of these data which is converted into the intercept request receive use sequence by agent .

As described with reference to the data may originate in the trusted environment or the untrusted environment . For example in an IT solution for the insurance marketplace a user operating in the user interface layer may enter new insurance policy data on their web browser accessing a web site supported by the application layer . The new insurance policy data which originates in the untrusted environment may be transferred by the application server to the remote compute agent to the trusted agent for data transformation and storage.

Referring to illustrated are components in the server that are configured to generate one or more instances of the transformation knowledge key . A data transformer is operable to use the transformation knowledge key to transform the data no into the shielded data . In an implementation the shielded data may be further shielded by splitting it into N segments of shielded data where N is a positive integer using the transformation knowledge key . In an implementation the at least one segment of the shielded data is the shielded data and the N segments of shielded data may be represented as the N sub segments of the at least one segment of the shielded data. Thus a unique instance of the transformation knowledge key may be used for each instance of data transformation of the data no to the shielded data . In an implementation one or more instances of the transformation knowledge key may be configured to be identical. In an implementation one instance of the transformation knowledge key may be the assigned to a client or an application requesting the trusted agent to shield the data or reconstruct the shielded data .

A transformation knowledge key generator is operable to select at least two shielding algorithms not shown that are stored in a library of shielding algorithms to generate one or more instances of the transformation knowledge key . In general a greater level of shielding protection for the data may be achieved by selecting more than 2 shielding algorithms but additional compute power may be needed. The transformation knowledge key generator combines knowledge in the form of configuration data logic rules objects procedures and others from the library of shielding algorithms the policy engine and the configurator to generate the transformation knowledge key . A communications agent residing in the trusted environment may be configured to communicate information with other computing devices via the communications link .

In an implementation to improve shielding of data in motion flight or in transit the communications agent may be configured to establish N concurrently operable secure channels of communications e.g. using openssl tunnels via the communications links with one or more remote agents e.g. the remote compute agent and the remote storage agent N being a positive integer. The policy engine may be configured to select one or more of the N channels based on factors such as response time latency security of channel and others. Thus the trusted agent and the remote agent may be configured to communicate over more than one simultaneous communication channels so that sensitive data such as the transformation knowledge key or the data segment itself can be transferred through untrusted environment e.g. the Internet using a configurable split communication technique. In an implementation the splitting of the communication messages between N channels may be performed in accordance with one of the shielding algorithms selected from the library of shielding algorithms .

In an implementation the trusted agent and the remote agent may include additional agents not shown that may apply the shielding techniques to shield data in transit. These additional agents when presented with message data may perform the following 1 open N simultaneous communication links between them N being a positive integer the N links being operable on separate network ports in the respective agents 2 the sender agent generates an instance of the transformation knowledge key TKK for the message data which may be called message TKK 3 the sender agent applies the message TKK to the message data 4 the application of the message TKK may transform the message data into one or more message data segments 5 the sender agent may send the message TKK to the receiver agent on a separate secure communication channel e.g. encrypted OpenSSL channel or a FIPS 148 channel 6 the sender agent may send the message data segments over the multiple communication channels to the receiver agent 7 the receiver agent after receiving the message data segments applies the message TKK in reverse to the message data segments to reconstruct the original message. This implementation may use internal communication links e.g. message pipes message queues between processes or external communication links e.g. real network links .

In another implementation the remote compute agent may shield data in main memory of a system operating in the untrusted environment . At run time when presented with data that will exclusively reside in main memory e.g. in memory databases event log buffers and other it may request the trusted agent to generate an instance of the transformation knowledge key TKK for memory storage e.g. a memory TKK for the data. The memory TKK may be generated for a large piece of data or one memory TKK may be generated per data sub element e.g. for each element of a data structure. Once the memory TKK s are generated by the trusted agent they may be conveyed to the remote compute agent over a separate secure channel e.g. encrypted OpenSSL channel or a FIPS 148 channel . A data transformer instance in the remote compute agent may then apply the memory TKK to the in memory data to shield it. It may then delete the memory TKK. When an application server or any other part of the IT solution stack requests the in memory data the data transformer may request the pertinent memory TKK from the trusted agent upon receiving which may apply it in reverse to unshield the memory data and present it to the requesting part of the IT solution. In another implementation for shielding of in memory data one or more IT solution components may be programmed to invoke special data object class implementations one each for data types e.g. for integer data floating point data character string data array data etc. which may 1 request the trusted agent for a memory TKK for the data element 2 apply the memory TKK to the element and store it in memory and 3 on demand fetch and reverse apply the memory TKK to supply the data element.

Referring to each component is generated by selecting a shielding algorithm from the library of shielding algorithms . For example the transformation knowledge key generator may generate the first component represented by an N character code e.g. 2K32S2A7 N being a positive integer by selecting a first shielding type algorithm and combining knowledge from the policy engine and the configurator . Similar procedure may be used by the transformation knowledge key generator to generate the remaining components using shielding algorithms respectively. The number of characters used for encoding each component may vary and be different than or be the same as the N character code. Additional details of the library of shielding algorithms are described with reference to .

The transformation knowledge key in the form a coded data byte string may be used as a recipe for shielding the data no. In an implementation the recipe may include coded information in the form of data instructions expressions operations parameters methods or procedures for the data transformer to shield the data by transformation.

In an implementation data transformation or a shielding process implemented in the data transformer may support four transformation operator types K N O and S where K N O and S each correspond to one of the library of shielding algorithms . Additional details of the K N O and S transformation operator types is described with reference to . Each K N O transformation operator type is associated with an input data and an output data whereas the S transformation operator type is associated one input data and more than one output data. Each transformation operator type may have associated parameters that may specify details of the data transformation process. All data transformations processes are reversible. That is input data may be reconstructed based on output data for each transformation operator type and the transformation knowledge key .

In an implementation each component of the transformation knowledge key may be constructed as a data byte string that may include the following coded information Transformation Operator Type Input data descriptor IP1 Output data descriptor OP1 Transformation Algorithm Type P1 Transformation Algorithm Parameter P2 .

In an implementation a component may be expressed as a transformation expression and may include one or more transformation operator types in the configurable order e.g. K N K N O N S and others . A first level of transformation expression that operates on the data includes at least two transformation operator types.

In an implementation the coded data byte string may include nested codes e.g. in instances when the data is shielded and then split into multiple segments and each segment is shielded further by another separate data transformation. In an implementation the transformation knowledge key may include a nested instance of another transformation knowledge key not shown . For example a splitting algorithm may split data into 2 segments and another splitting algorithm may further split one of the 2 previously split segments into 2 sub segments. A nested example of a transformation expression may include K N S K1 N1 K2 N2 . The nesting feature of transformation expression and establishing the configurable order of transformation operators within each transformation expression generates extraordinary shielding protection for the data .

The transformation knowledge key is an encoded representation of the transformation expression. The transformation knowledge key is therefore an ordered sequence of operations that are progressively performed by the data transformer for shielding the data . Additional details of nested instances of the transformation knowledge key are described with reference to .

The coded information included in the transformation knowledge key may be processed parsed interpreted or acted on by the data transformer in the configurable order or in reverse of the configurable order when reconstructing the data from the shielded data . Thus the code corresponding to each component of the transformation knowledge key is used by the data transformer to transform the data into the shielded data that may be split into N segments of shielded data wherein N is a positive integer.

The order of concatenation of the components to form the transformation knowledge key or another instance of the transformation knowledge key may be configurable and defines the configurable order. For example the configurable order may be selected to be a forward sequence of the components e.g. a reverse sequence of the components e.g. or any other random sequence of the components e.g. . Although the transformation knowledge key is shown to have 4 components it is understood that systems having a transformation knowledge key having more number of components or less than 4 components but at least two components may be configured.

In an implementation transformation of the data into N segments of shielded data may be performed in the configurable order of the components of the transformation knowledge key . The data transformation may be processed in a cascade arrangement of the components where output of a current component is provided as an input to the next component. For example a data transformation process for shielding the data using the transformation knowledge key having 4 components e.g. may include generating partially shielded data or intermediate data at the end of processing first 3 of the 4 components and the generating the N segments of shielded data after processing the last component in the configurable order.

In an implementation the data transformer may perform shielding of the data in a sequence that includes at least 2 selectable components from the 4 components of the transformation knowledge key . Additional details of the data transformer using a 2 component and a 4 component cascaded arrangement for shielding the data is described with reference to .

Referring back to in response to a request the data transformer is also operable to gather the N segments of shielded data that may be distributed across one or more remote agents for storage and reconstruct the data from the N segments of shielded data using a corresponding one of the transformation knowledge key . That is the data transformer is also configured to process codes making up the transformation knowledge key in an order that is reverse of the configurable order to reconstruct the data from the N segments of shielded data . Additional details of the shielding algorithms and the data transformation process to generate the shielded data and reconstruct the data are described with reference to .

In an implementation the data transformer is operable to reconstruct the data using the transformation knowledge key and data from I ones of the N segments of shielded data stored in the trusted environment and the J ones of the N segments of shielded data received from the remote agent via the communications link .

Depending on the distribution policy configured in the policy engine other permutations and combinations of storing the 3 shielded data segments may be possible e.g. o in the trusted agent and 4 in the 3 remote agents or 2 in the trusted agent and 2 in the 3 remote agents and others. Each one of the 3 remote agents may be configured to store o or more ones of the N segments of shielded data as directed by the trusted agent .

The second data transformer is operable to transform the N segments of partially shielded data into the N segments of shielded data using the transformation knowledge key . The data transformation operation may process an M digit code M is a positive integer of a component e.g. second one of 2 components generated by at least one of the shielding algorithms stored in the library of shielding algorithms to further shield the N segments of partially shielded data .

In an implementation the system may be configured with a single instance of the data transformer that operates on the two components. For example a first iteration of the data transformer may process the first component and feed the results of the first iteration of data transformation back to its input and apply the second iteration of data transformation to the results thus achieving the same result as the first and second data transformer .

In an implementation the system may be used to reconstruct the data from the N segments of shielded data using a corresponding instance of the transformation knowledge key .

Referring back to in an implementation the data transformer is configured in a cascade arrangement to include a first data transformer 1DT a second data transformer 2DT a third data transformer 3DT and a fourth data transformer 4DT that are operable to transform data using codes included in the 4 components e.g. respectively. The 1DT is operable to transform the data in to a first partially shielded data by applying a P digit code P is a positive integer of a component e.g. first one of 4 components generated by at least one of the shielding algorithms stored in the library of shielding algorithms . The partially shielded output of the 1DT is provided as an input to the next stage e.g. the 2DT for further shielding.

The 2DT may perform a data transformation operation to generate a second partially shielded data in accordance with an M digit code M is a positive integer of a component e.g. second one of 4 components generated by at least one of the shielding algorithms stored in the library of shielding algorithms .

In an implementation the third component e.g. third one of 4 components may be configured to include a code to perform a split transformation operation. The splitting operation may be performed in accordance with a P digit code of the third component generated by at least one of the shielding algorithms stored in the library of shielding algorithms . The 3DT is configured to process the splitting operation to further shield the second partially shielded data into a first one of a third partially shielded data and a second one of a third partially shielded data .

In an implementation to increase the level of shielding protection nested codes may be configured in one or more of the components of the transformation knowledge key . In an implementation data byte string may include nested codes that may be configured to include the following information Transformation Operator Type1 Input data descriptor P1 Output data descriptor P1 Transformation Operator Type2 Input data descriptor P1 Output data P2 Transformation Algorithm Type P2A Transformation Algorithm Parameter P2P Transformation Algorithm Type P1A Transformation Algorithm Parameter P2A .

The 4DT is operable to perform another splitting operation on the second one of the third partially shielded data . Since the splitting operation is not performed on the first one of the third partially shielded data it represents a leaf node or an end node of a configurable order . Some data transformation operations may be performed in parallel e.g. generation of the shielded data points . Thus the N segments of shielded data may be represented as a collection of leaf nodes of the configurable order that includes the first one of the third partially shielded data . The second one of the third partially shielded data is split into 2 leaf nodes included in the N segments of shielded data . In an implementation a transformation path from the data to a leaf node e.g. or uses an instance of the transformation knowledge key .

In an implementation 1DT may perform data transformation encoded as K I P O P Po AES Sym P1 AES Key the 2DT may perform data transformation encoded as N I P O P Po Toggle P1 Odd the 3DT may perform data transformation encoded as S I P O P Po 7 P1 Top and 4DT may perform data transformation encoded as S I P O P Po XOR P1 25 . Since O P is split for again nested codes may be used and the encoded data byte string representing the transformation knowledge key may be expressed as K I P O P Po AES Sym P1 AES Key N I P O P Po Toggle P1 Odd S I P O P S I P O P Po XOR P1 25 Po 7 P1 Top .

In an implementation the system may be used to reconstruct the data from the N segments of shielded data shown to include using N corresponding instances of the transformation knowledge key .

It is understood that if the transformation knowledge key is configured to include M components M being a positive integer the order of processing the M components to perform the data transformation is forward from left to right as defined in the configurable order. When a splitting component appears it leads to a nested instance of the transformation knowledge key which is interpreted and applied in exactly the same manner. Similarly a reverse transformation e.g. reconstructing or unshielding is processed from right to left looking for the first outermost component from right interpreting it and applying the unshielding transformations specified within. If the outermost component is a splitting component then its nested transformation knowledge key are interpreted first and applied in reverse.

In an implementation the first shielding algorithm may include an encryption type shielding algorithm described earlier with reference to as a transformation operator type K that may be configured to generate the first component of the transformation knowledge key . The second shielding algorithm may include a noise insertion type algorithm described earlier with reference to as a transformation operator type N configured to generate the second component of the transformation knowledge key . The third shielding algorithm may include a data splitting type algorithm described earlier with reference to as a transformation operator type S configured to generate the third component of the transformation knowledge key . The fourth shielding algorithm may include the data byte reformatting type algorithm described earlier with reference to as a transformation operator type O configured to generate the fourth component of the transformation knowledge key .

In an implementation codes for shielding algorithms e.g. transformation operator types K N O S and their parameters may configurable by an authorized user or administrator so that interpretation of keys may be different and unique to each IT solution. By assigning codes to algorithms and parameters an administrator or a data owner may define proprietary mnemonic from the library of algorithms . Then the transformation key generator may generate for the IT solution unique instances of the transformation knowledge key for shielding the data .

In an implementation the level of shielding protection of the data may be further enhanced by adding a cryptographic hash type shielding algorithm a communication channel selection algorithm and or a user configured shielding algorithm for ultimate control of generating shielded data that is suitable for storage in untrusted environments . An example of a user configured shielding algorithm may include configuring an N dimensional matrix that has a user configured bit pattern for each of the matrix elements.

In an implementation the encryption type algorithm is an Advanced Encryption Standard AES the AES using a symmetric key where the encryption type algorithm independently controls a shielding factor by configuring the symmetric key having S bits S being a positive integer. In an implementation the encryption type algorithm may use asymmetric keys where the encryption type algorithm independently controls a shielding factor by configuring at least one of the asymmetric keys having A bits A being a positive integer. Other well known encryption type algorithms e.g. DES RSA HASH MD5 AES SHA 1 HMAC and others may be used.

In an implementation the noise insertion type algorithm is configured to shield the data by inserting a noise pattern in the data in accordance with coded instructions included in the second component .

In an implementation the noise pattern is configured to be one of a toggle pattern a swap pattern a rotation pattern and a XOR pattern each member of the noise pattern corresponding to a coded instruction.

In an implementation the data splitting type algorithm is configured to split the data into N segments of partially shielded data . The splitting operation may be configured to be placed in any order in the configurable order e.g. the third component may be selected in the configurable order to be different than the last N being a positive integer.

In an implementation the data byte reformatting type algorithm is configured to shield the data by changing data byte sequence in accordance with coded instructions in the transformation knowledge key where the data byte reformatting type algorithm is selectable to be at least one of big endian small endian origin offset or any one of P factorial permutations where P is an integer less than or equal to size of the data.

Referring back to the process begins at operation where a client or a user opens a webpage to access the service s offered by an application that may be offered by an IT solution provider. As described earlier the application may include financial applications e.g. banks credit cards equity markets and others healthcare applications patient records insurance providers employers and others corporate applications confidential financial legal product related data government applications taxes social security defense homeland security and personal data applications. For example the user may request to access insurance policy information and possibly make changes to an existing policy with an insurance provider. The webpage presents the user with a login password prompt.

Next at operation the user enters login information e.g. user name and password. At operation an application server e.g. the application server uses the login name password to create a data handle. At operation the application server presents the data handle to a remote agent e.g. the remote compute agent which communicates the handle to the trusted zone agent e.g. the trusted agent via a trusted communications agent e.g. the communications agent asking it to look up the user credentials. At operation the trusted zone agent uses the data handle to look up a corresponding transformation knowledge key e.g. the transformation knowledge key from its database. At operation the trusted zone agent uses the data handle to also lookup the location of the user credential data stored in shielded form possibly in an untrusted zone. At operation the trusted zone agent directs a remote agent residing in an untrusted zone e.g. the remote compute agent to lookup the shielded user authentication record and sends it back to the trusted zone agent. At operation upon receiving the shielded user authentication record a data transformer e.g. the data transformer in the trusted zone agent unshields the user authentication record applying the transformation knowledge key in the reverse order. After applying all the reverse transformations the unshielded user authentication record is controlled by the trusted agent and resides in the trusted environment.

Next at operation the unshielded user authentication record is communicated to the application server in the untrusted zone via a trusted communication agent e.g. the communications agent . In an implementation the application server uses the unshielded user authentication record to authenticate the user and promptly destroys all instances of the authentication record that may be stored in main memory or cache or any other storage device in the untrusted zone. At operation once the user is authenticated the user is presented with menu options such as policy lookup policy modify policy cancellation policy payment and similar others. At operation the user selects the policy look up option to review and or modify policy. At operation the application server creates a new data handle using the user identity verified using the user authentication record earlier and relevant policy information and presents it to the remote compute agent in the untrusted zone.

Next at operation the untrusted zone compute agent sends the handle to the trusted agent requesting the data record. At operation the trusted agent using the handle looks up the corresponding transformation knowledge key and the locations of the shielded data segments for the relevant policy record. At operation as described in previous operations the trusted agent requests one or more remote data agents for the N segments of shielded data segments. At operation in response to receiving the N segments of the shielded data the trusted agent reconstructs or reverse transforms the shielded data using the TKK as the recipe to un shield the data. At operation the unshielded or reconstructed data related to the insurance policy data requested by the user via the application server is sent to the remote compute agent using the secure communication agent which then transfers it to the application server. At operation the application server uses the policy record to create a user friendly display for presentation to the user on the user s workstation device.

Next at operation the application server may hold the insurance policy record in cache memory in unshielded form while it is being used by the user and may not store the data in unshielded form in the untrusted environment e.g. after usage the insurance policy record may be discarded . At operation in response to the requested policy related information being displayed on a screen in an implementation the user may elect to modify an existing policy. At operation in an implementation the user makes changes to the insurance policy based on forms and other means of input collection on the user s workstation and saves the changes. At operation the changes are applied to the user s policy record by the application server logic resulting in a modified data record. At operation the modified data record is referred to by a data handle which may be the same as the old data handle for the user s record or in some implementations it may be a different data handle. However the data handle is unique in the IT solution.

Next at operation the record data handle and the modified policy record are presented by the application server to the remote compute agent which in turns sends the two pieces of the data to the trusted agent. At operation the trusted zone agent generates a new instance of a transformation knowledge key for the modified record invokes the data transformer which leads to the generation of N segments of shielded data. At operation the N segments of shielded data are deployed across multiple remote data agents residing in untrusted environment for storage.

The order in which any process or method described herein is not intended to be construed as a limitation and any number of the described process blocks can be combined in any order to implement the process method or alternate method. Additionally individual blocks may be deleted from the process without departing from the spirit and scope of the subject matter described herein. Furthermore the process may be implemented in any suitable hardware software firmware or a combination thereof without departing from the scope of the invention. For example the process may be optimized further. The application server may be configured to invoke the remote agent directly with the data handle and look for the data requested e.g. policy record . The remote agent may then consult with the trusted zone agent using the data handle and the two together in co operation may present the data record to the application server.

Referring back to the process begins at block where a transformation knowledge key is generated in a trusted computing environment the transformation knowledge key being generated with at least two shielding algorithms to shield the data.

At block the data is transformed into at least one segment of shielded data using the transformation knowledge key. At block the at least one segment of shielded data is communicated for storage. At block the at least one segment of shielded data is split into N sub segments of shielded data N being a non negative integer. At block I ones of the N sub segments are stored in the trusted computing environment I being a non negative integer. At block J ones of the N sub segments are communicated for storage in a untrusted computing environment J being a non negative integer and I J N.

At block the J ones of the N sub segments of shielded data are received from the storage e.g. in response to a request from the trusted agent. At block the data is reconstructed from the I ones and the J ones of the N sub segments of shielded data from the trusted locations and the untrusted locations respectively using the transformation knowledge key.

In an implementation the computer system includes a processor coupled to a bus a memory device coupled to the processor via the bus a communications device coupled to the processor via the bus and a peripherals controller coupled to the processor via the bus . The communications device is configured to communicate with other computer systems not shown via a communications link .

A user interaction device may include a display . The peripherals controller may be used to control peripherals such as a touch screen a mouse a trackball or similar other cursor positioning devices a hard disk storage device and others. The display is configured to provide a graphical user interface for user interaction.

It should be understood that depending on the computing load more than one processor may be included in the computer system . The memory device is operable to store instructions or commands that are executable by the processor to perform one or more functions. It should also be understood that the term computer system is intended to encompass any device having a processor that is capable of executing program instructions from a memory medium. Various solutions applications functions processes method s programs agents and operations described herein may be implemented using the computer system . Any system such as system and or any processes or methods such as process as described herein may be implemented using the computer system . For example the processor is operable to execute the instructions stored in memory device for generating the transformation knowledge key .

The components of the computer system may be modules of computer executable instructions which are instructions executable on a computer mobile device or the processors of such devices. While shown here as agents the components may be embodied as hardware firmware software or any combination thereof. The techniques described herein may be performed as a whole or in part by hardware software firmware or some combination thereof.

In various implementations the program instructions may be implemented in various ways including procedure based techniques component based techniques object oriented techniques rule based techniques among others. The program instructions can be stored on the memory or any computer readable medium for use by or in connection with any computer related system or method. A computer readable medium is an electronic magnetic optical or other physical device or means that can contain or store a computer program for use by or in connection with a computer related system method process or procedure. Programs can be embodied in a computer readable medium for use by or in connection with an instruction execution system device component element or apparatus such as a system based on a computer or processor or other system that can fetch instructions from an instruction memory or storage of any appropriate type. A computer readable medium can be any structure device component product or other means that can store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

Realizations in accordance with the present invention have been described in the context of particular embodiments. These embodiments are meant to be illustrative and not limiting. Many variations modifications additions and improvements are possible. Accordingly plural instances may be provided for components described herein as a single instance. Boundaries between various components operations and data stores are somewhat arbitrary and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of claims that follow. Finally structures and functionality presented as discrete components in the various configurations may be implemented as a combined structure or component. These and other variations modifications additions and improvements may fall within the scope of the invention as defined in the claims that follow.

The term techniques for instance may refer to one or more devices apparatuses systems methods articles of manufacture and or computer readable instructions as indicated by the context described herein. As used in this application the term or is intended to mean an inclusive or rather than an exclusive or. That is unless specified otherwise or clear from context X employs A or B is intended to mean any of the natural inclusive permutations. That is if X employs A X employs B or X employs both A and B then X employs A or B is satisfied under any of the foregoing instances. In addition the articles a and an as used in this application and the appended claims should generally be construed to mean one or more unless specified otherwise or clear from context to be directed to a singular form. Unless the context indicates otherwise the term logic used herein includes hardware software firmware circuitry logic circuitry integrated circuitry other electronic components and or a combination thereof that is suitable to perform the functions described for that logic.

Systems and methods described herein may include one or more IT solutions for shielding data that may be implemented in one or more trusted environments and or in one or more untrusted environments. In some implementations a single instance of the trusted and or the remote agent may serve multiple IT solutions concurrently referred to as a federated approach thereby enabling one IT solution to talk to another IT solution. In some implementations the trusted agent may be spread across single or multiple locations such that all the instances may operate in co operation with each other. They may replicate each other s databases assist in speeding up the processes of shielding and unshielding. They may act as backup agents to each other in order to provide high availability lower latency to the solution as a whole. Replicated trusted agent databases may be used in extraordinary circumstances e.g. for data recovery in a disaster situation.

Systems and methods described herein provide extraordinary levels of data shielding to data that enables users to take advantage of significantly lower cost and improved scalability offered by Cloud based services without compromising on the integrity and confidentiality of the data stored in untrusted environments. Extraordinary results are derived from use of the following features that significantly improve data shielding and lower costs 1 the order of performing data transformations may be determined in real time. This makes it virtually impossible to reconstruct shielded data since the system is always dynamically altering the process to reconstruct the data 2 algorithms are user specified and encoded. This gives complete control to a user to protect proprietary data 3 levels and types of algorithms used for data transformations are under the control of a user 4 user maintains full control of distribution of the results of the transformations across multiple trusted and untrusted locations 5 the transformation knowledge keys themselves may be shielded 6 lack of a single segment of shielded data which may be stored in a secured environment will make extraordinarily difficult if not practically impossible to reconstruct the original data.

The systems and methods described herein provide extraordinary levels of data shielding to data by providing the data owner or administrator with the following control techniques 1 credentials to access the trusted and untrusted computing environments 2 knowledge about the location and identification for each segment of shielded data 3 access to the transformation knowledge key and decoding of the transformation knowledge key 4 knowledge about interpreting codes and parameters for the K N O S transformation operator types 5 knowledge about the data shielding algorithms including proprietary ones stored in the library of shielding algorithms 6 knowledge about the data transformer operation including structure and sequence of processing K N O S transformation operator types and 7 knowledge about how to reconstruct the data from the N segments of shielded data that may be stored in the trusted as well as untrusted environments and the transformation knowledge key.

The following examples pertain to further embodiments. A method and system may include a trusted agent operable in a trusted computing environment. The trusted agent includes a transformation knowledge key generator and a data transformer. The transformation knowledge key generator is operable to generate a transformation knowledge key the transformation knowledge key being generated with at least two shielding algorithms to shield the data. The data transformer is operable to transform the data into N segments of shielded data using the transformation knowledge key. A communications agent that is securely coupled to the trusted agent is operable to securely transfer one the N segments of shielded data to one or more storage devices in untrusted computing environments.

In certain implementations at least one remote agent coupled to the trusted agent the at least one remote agent operable in an untrusted computing environment wherein the trusted agent is configured to store I ones of the N segments of shielded data in the trusted environment wherein the at least one remote agent is configured to store J ones of the N segments of the shielded data in the untrusted environment wherein I J N and wherein I and J are non negative integers.

In certain implementations the data transformer receives the J ones of the N segments of shielded data from the at least one remote agent in response to a request wherein the data transformer reconstructs the data from I ones of the N segments of shielded data stored in the trusted environment and the J ones of the N segments of shielded data received from the at least one remote agent using the N instances of the transformation knowledge key.

In certain implementations the at least one remote agent is configured as N I remote agents coupled to the trusted agent wherein the N I remote agents are operable in N I instances of the untrusted environment wherein the J ones of the N segments of the shielded data are distributively stored in the N I remote agents.

In certain implementations I 1 and J N 1 wherein N 1 segments of shielded data are transferred to N 1 remote agents.

In certain implementations I o and J N wherein the N segments of shielded data are transferred to N remote agents.

In certain implementations the communications agent is operable to send to the at least one remote agent transformation logic data to interpret the transformation knowledge key and the transformation knowledge key.

In certain implementations the at least one remote agent reconstructs the data from the N segments of shielded data using the transformation logic data and the transformation knowledge key

In certain implementations the trusted agent is configured to change the transformation logic data and the transformation knowledge key communicated to the at least one remote agent the change being made in dependence of a transaction of the at least one remote agent.

In certain implementations the trusted agent is configured to change the transformation logic data and the transformation knowledge key communicated to the at least one remote agent the change being made in dependence of a configurable timer value.

In certain implementations the data transformer is operable to split the data into N segments of partially shielded data and transform the N segments of the partially shielded data into the N segments of shielded data using the N instances of the transformation knowledge key.

In certain implementations the at least one remote agent is configured as a storage agent the storage agent being configured to access storage components using published application programming interfaces API s for the storage components.

In certain implementations the at least one remote agent is configured as a compute agent the compute agent being configured to communicate data associated with an application software program the data being communicated to the trusted agent via a secure communications agent.

In certain implementations the trusted computing environment is controlled by a trusted entity and the untrusted computing environment is controlled by a third party that is different than the trusted entity.

In certain implementations the N instances of the transformation knowledge key are shielded and stored in the trusted computing environment.

In certain implementations each one of the at least two shielding algorithms is configured to generate a data byte string the transformation knowledge key being generated by concatenation of each one of the data byte string in a configurable order.

In certain implementations the at least two shielding algorithms are configured by selecting codes representing at least two shielding algorithms selectable from a library of shielding algorithms the data byte string being generated by concatenating the codes.

In certain implementations a policy engine agent is configured to make a change in the trusted agent the policy engine agent being operable to add a new shielding algorithm to the library of shielding algorithms wherein the policy engine agent resides exclusively in the trusted environment.

In certain implementations one of the at least two shielding algorithms is different than an encryption key type shielding algorithm.

In certain implementations the transformation knowledge key is unique to each instance of the storage.

In certain implementations the transformation knowledge key generator and all instances of the transformation knowledge key exclusively reside in the trusted environment.

In certain implementations the communications agent is configured to select one or more simultaneous channels of communications from N channels of communications available to communicate any segment of the N segments of shielded data.

In certain implementations a method of shielding data the method comprising generating a transformation knowledge key in a trusted computing environment the transformation knowledge key being generated with at least two shielding algorithms to shield the data transforming the data into the at least one segment of shielded data using the transformation knowledge key and communicating the at least one segment of shielded data for storage.

In certain implementations one or more computer readable storage media storing instructions that when executed by one or more processors cause the one or more processors to perform acts comprising generating a transformation knowledge key in the trusted computing environment the transformation knowledge key being generated with at least two shielding algorithms to shield the data transforming the data into at least one segment of shielded data using the transformation knowledge key and communicating the at least one segment of shielded data for storage.

