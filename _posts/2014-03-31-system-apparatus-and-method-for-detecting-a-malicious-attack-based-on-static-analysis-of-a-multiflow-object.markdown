---

title: System, apparatus and method for detecting a malicious attack based on static analysis of a multi-flow object
abstract: In an embodiment, a threat detection and prevention system comprises a network-traffic static analysis logic and a classification engine. The network-traffic static analysis logic is configured to conduct an analysis of a multi-flow object by analyzing characteristics of the multi-flow object and determining if the characteristics of the multi-flow object is associated with a malicious attack such as being indicative of an exploit for example. The classification engine is configured to receive results of the analysis of the multi-flow object and, based on the results of the analysis of the multi-flow object, determine whether the multi-flow object is associated with a malicious attack.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09432389&OS=09432389&RS=09432389
owner: FireEye, Inc.
number: 09432389
owner_city: Milpitas
owner_country: US
publication_date: 20140331
---
Embodiments of the disclosure relate to the field of network and cyber security. More specifically one embodiment of the disclosure relates to a system apparatus and method for detecting a malicious attack based at least in part on results associated with an analysis of the characteristics of a multi flow object where such analysis may be triggered through feedback signaling after virtual processing of the multi flow object.

Over the last decade malicious software has become a pervasive problem for Internet users as most networked resources include software vulnerabilities that are subject to attack. For instance over the past few years more and more vulnerabilities are being discovered in software that is loaded onto network devices such as vulnerabilities within operating systems for example. While some vulnerabilities continue to be addressed through software patches prior to the release of such software patches network resources continue to be the targeted by exploits.

In general an exploit is information that attempts to take advantage of a vulnerability by adversely influencing or attacking normal operations of a targeted computer. As an illustrative example a Portable Execution Format PDF file may be infected with an exploit that is activated upon execution opening of the PDF file and takes advantage of a vulnerability associated with particular version or versions of Acrobat Reader or another PDF reader application. This type of malicious attack may be designed to subsequently control operations of the targeted computer which may include secretive transmission of stored sensitive information.

Currently known security appliances are deployed with the capability of conducting a static analysis of a single flow for anomalous behavior that may represent a malicious attack. However such analysis has been prone to false negatives because conventional security appliances fail to analyze the characteristics associated with multiple related flows.

Various embodiments of the disclosure relate to an electronic device with network connectivity such as a threat detection and prevention TDP system for example where the electronic device comprises a static analysis engine a dynamic analysis engine and a classification engine.

According to various embodiments a TDP system comprises a feedback path e.g. over a communication medium to a static analysis engine over which a feedback signal request message may be sent from either a dynamic analysis engine or classification engine so as to trigger one or more actions by the static analysis engine. These actions may include 1 modifying a multi flow object MFO by re aggregating messages and flows stored in the TDP system that correspond to multiple related flows described below so as to generate a modified MFO 2 performing a static analysis or enhanced static analysis on the MFO or modified MFO and or 3 providing the results of the static analysis of the MFO or modified MFO to the dynamic analysis engine or the classification engine. The enhanced static analysis may constitute more in depth static analysis or may encompass different type s of static analysis as may be identified based on the dynamic analysis results. In one embodiment the dynamic analysis engine may perform a dynamic analysis on the MFO prior to the request message being sent and or may perform a dynamic analysis on the MFO after its static analysis or on the modified MFO after its static analysis.

Based on the above discussion it is contemplated that multiple embodiments of the invention are described and some or all of the above described features may be present in any of these embodiments. Also throughout the application the terms multi flow object and MFO should be construed as corresponding to a multi flow object or a modified multi flow object that includes one or more additional messages for a related flow or one or more additional related flows after a static analysis has been conducted on the multi flow object.

According to one embodiment of the disclosure the static analysis engine comprises network traffic static analysis logic that is configured to parse incoming network traffic by aggregating or re aggregating information associated with multiple related flows identifying the multiple related flows as a multi flow object MFO or a modified MFO and subsequently storing markers associated with the MFO e.g. MFO or modified MFO as described above . In general a marker is information associated with characteristics of these flows. Examples of the markers may include but are not limited or restricted to characteristics related to communication protocols applicable to the multiple related flows. For example markers may include the following i header types within HTTP based message s ii parameter values for corresponding headers within HTTP based message s and or iii ordering and or protocol information associated with HTTP based messages formulating the flows.

Furthermore the network traffic static analysis logic is configured to analyze information associated with the characteristics of the MFO including the markers without executing the MFO to determine if the information identifies abnormalities that are suspicious or even malicious in nature. For instance the network traffic static analysis logic may analyze the content of messages within the MFO for abnormalities e.g. message formatting informalities such as headers that are not in typical order presence of additional headers or absence of expected headers unexpected or varying parameter values in the header fields presence of executables etc. as well as analyze the anomalous ordering of messages associated with the multi flow object hereinafter message ordering .

In particular according to an first embodiment of the disclosure a static analysis of characteristics of the MFO may be conducted in real time by the network traffic static analysis logic to produce results. These static analysis results may be automatically provided to the classification engine which uses the results to determine if the MFO is part of a malicious attack e.g. indicative of an exploit . The static analysis results may include a score namely a value representing a level of confidence or probability that certain characteristics for one or more objects within the MFO are anomalous and may be associated with a malicious attack e.g. indicative of an exploit . For instance according to this embodiment of the disclosure the static analysis may be directed to stored markers message ordering and or ii message formatting.

According to another second embodiment of the disclosure a first static analysis of the characteristics of the MFO may be conducted in real time. The first static analysis comprises heuristic analysis e.g. examination of content within the MFO based on experimental knowledge or statistics to determine statistical probabilities as to whether the content is associated with a malicious attack determinative analysis e.g. examination of content within the MFO where anomalies may be determined with reference to a rule or policy and or signature matching e.g. examination of content within the MFO with reference to a database of exploit malware or vulnerability signatures . The results of the first static analysis may include a first score indicating whether or not the MFO has characteristics associated with a malicious attack.

Independent of whether or not the score is provided to the classification engine a second enhanced static analysis is conducted on the MFO namely the MFO on which the first static analysis was conducted or a modified MFO in the event that one or more additional messages flows associated with the MFO were received after the first static analysis. According to one embodiment of the disclosure the second static analysis is conducted in response to a triggering event such as feedback signaling for example. The second static analysis also referred to as multi flow analysis may be conducted to analyze characteristics e.g. message ordering message formatting etc. of the MFO that may not have been analyzed fully or in any manner during the first static analysis. The second static analysis results generated by the network traffic static analysis logic may include i a second score based on newly uncovered anomalous characteristics ii anomalous characteristics detected during the second static analysis which may include markers associated with the MFO and or iii an updated score or markers for the modified MFO which now may include for example additional related flow or additional messages within one of its flows beyond those flows and messages detected at time t . Time t may correspond to the time at which the first static analysis was conducted on the MFO and in some embodiments may correspond to the time at which a first score associated with the MFO was reported to the classification engine. The modified MFO may include one or more flows and additional messages received and stored in the TDP system between t and t where t may correspond to the time at which the second static analysis was initiated conducted on the modified MFO.

It is contemplated that besides conducting static analysis of its characteristics the network traffic static analysis logic may route the MFO e.g. MFO or modified MFO to the dynamic analysis engine for virtual processing in order to verify that the MFO is part of a malicious attack. According to the first embodiment of the disclosure the network traffic static analysis logic may operate as a filter by providing a suspicious MFO to the dynamic analysis engine for further in depth analysis. The MFO is suspicious suspect upon determining that it likely has characteristics associated with a malicious attack. Alternatively according to the second embodiment of the disclosure the network traffic static analysis logic may operate to provide the MFO to the dynamic analysis engine upon receiving the feedback signaling and i determining that there have been additional messages or flows since a prior static analysis for that MFO was conducted and or ii determining that the second static analysis produces the score or updated score above a certain threshold to denote that the network traffic static analysis logic still considers the MFO to be suspicious.

Of course it is contemplated that after parsing the network traffic the network traffic static analysis logic may simply forward the MFO or portions thereof to the dynamic analysis engine without analysis of its characteristics unless and until the dynamic analysis engine or the classification engine provides feedback signaling and the static analysis is invoked or triggered.

The dynamic analysis engine comprises virtual execution logic to automatically and subsequently analyze without user assistance content associated with a MFO provided from the network traffic static analysis logic in order to verify whether the MFO is part of a malicious attack e.g. indicative of an exploit . In general the dynamic analysis engine conducts virtual machine VM based analysis to recreate the attack scenario for the multiple related flows associated with the MFO and monitors the resultant behaviors for anomalous activity. The dynamic analysis engine provides results associated with this VM based analysis VM based results to the classification engine.

According to one embodiment of the disclosure in response to a triggering event the classification engine issues multi flow feedback signaling to the network traffic static analysis logic. The triggering event may be caused by a failure to detect the MFO as being part of a malicious attack due to any number of factors e.g. defect in the software and or incomplete content analyzed . The multi flow feedback signaling may be configured as a request message that identifies the multi flow object under analysis where such identification may be represented by the source client IP address an identifier assigned to the multi flow object e.g. a sequence number monotonic count value etc. or the like.

Upon receipt of the multi flow feedback signaling the classification engine receives results of a subsequent static analysis from the network traffic static analysis logic. For instance as described above the network traffic static analysis logic may be configured in response to the multi flow feedback signaling to conduct the second in depth static analysis and the second static analysis results are returned to the classification engine. Hence the decision as to whether the MFO is malicious or not may be conducted at the end of this feedback loop based in part on the second static analysis.

Accordingly a determination is made by the classification engine as to whether a MFO is part of a malicious attack based on results provided by i the network traffic static analysis logic alone or ii the network traffic static analysis logic and the dynamic analysis engine.

In the following description certain terminology is used to describe features of the invention. For example in certain situations both terms logic and engine are representative of hardware firmware and or software that is configured to perform one or more functions. As hardware logic or engine may include circuitry having data processing or storage functionality. Examples of such circuitry may include but is not limited or restricted to a microprocessor one or more processor cores a programmable gate array a microcontroller an application specific integrated circuit wireless receiver transmitter and or transceiver circuitry semiconductor memory or combinatorial logic.

Logic or engine may be software in the form of one or more software modules such as executable code in the form of an executable application an application programming interface API a subroutine a function a procedure an applet a servlet a routine source code object code a shared library dynamic load library or one or more instructions. These software modules may be stored in any type of a suitable non transitory storage medium or transitory storage medium e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals or digital signals . Examples of non transitory storage medium may include but are not limited or restricted to a programmable circuit a semiconductor memory non persistent storage such as volatile memory e.g. any type of random access memory RAM persistent storage such as non volatile memory e.g. read only memory ROM power backed RAM flash memory phase change memory etc. a solid state drive hard disk drive an optical disc drive or a portable memory device. As firmware the executable code is stored in persistent storage.

The term object generally refers to a collection of data such as a group of related packets associated with a request response message pairing for example normally having a logical structure or organization that enables classification for purposes of analysis. For instance an object may be a self contained element where different types of such objects may include an executable file non executable file such as a document or a dynamically link library a Portable Document Format PDF file a JavaScript file Zip file a Flash file a document for example a Microsoft Office document an electronic mail email downloaded web page an instant messaging element in accordance with Session Initiation Protocol SIP or another messaging protocol or the like.

The term flow generally refers to a collection of related objects e.g. messages communicated during a single communication session between a single source network device e.g. client device and a single destination network device e.g. server .

Similarly the term multi flow object generally refers to a collection of related flows having one or more objects communicated proximate in time where the one or more objects are either directed to a single client device from one or more servers or directed to one or more servers from the single client device. As an illustrative example a multi flow object may include one or more objects associated with a set of related flows such as a sequence of transmissions in accordance with a particular communication protocol e.g. Hypertext Transfer Protocol HTTP . For instance a first flow GET HTTP Request message may be user initiated while subsequent flows e.g. other HTTP messages initiated to complete the GET HTTP Request message may be initiated automatically without user intervention.

A communication session may be defined as a semi permanent information exchange between source and destination electronic devices. For example the communication session may be in accordance with protocols at the application layer HTTP session layer or transport layer TCP of the OSI model.

A message generally refers to information transmitted as information in a prescribed format where each message may be in the form of one or more packets frames HTTP based transmissions or any other series of bits having the prescribed format.

The term transmission medium is a physical or logical communication path between two or more electronic devices e.g. any devices with data processing and network connectivity such as for example a security appliance a server a mainframe a computer such as a desktop or laptop netbook tablet firewall smart phone router switch bridge etc. . For instance the communication path may include wired and or wireless segments and or shared memory locations. Examples of wired and or wireless segments include electrical wiring optical fiber cable bus trace or a wireless channel using infrared radio frequency RF or any other wired wireless signaling mechanism.

In certain instances the term verified are used herein to represent that there is a prescribed level of confidence or probability on the presence of an exploit within an object under analysis. Also an exploit may be construed broadly as information e.g. executable code data command s etc. that attempts to take advantage of a software vulnerability namely a coding error or artifact of software e.g. computer program that allows an attacker to alter legitimate control flow during processing of the software computer program by an electronic device and thus causes the electronic device to experience undesirable or unexpected behaviors.

The term computerized generally represents that any corresponding operations are conducted by hardware in combination with software and or firmware. Also the terms compare or comparison generally mean determining if a match e.g. a certain level of matching is achieved between two items where one of the items may include a particular signature pattern.

Lastly the terms or and and or as used herein are to be interpreted as inclusive or meaning any one or any combination. Therefore A B or C or A B and or C mean any of the following A B C A and B A and C B and C A B and C. An exception to this definition will occur only when a combination of elements functions steps or acts are in some way inherently mutually exclusive.

The invention may be utilized for detection verification and or prioritization of malicious content such as exploits. As this invention is susceptible to embodiments of many different forms it is intended that the present disclosure is to be considered as an example of the principles of the invention and not intended to limit the invention to the specific embodiments shown and described.

Referring to an exemplary block diagram of an operational flow of threat detection and prevention within an electronic device is shown. Herein some or all of the incoming objects associated with the monitored network traffic namely multiple flows are received over a network by a network traffic static analysis logic . The network traffic static analysis logic is part of the static analysis engine which may further conduct signature and or vulnerability checks aside from the operations described herein.

According to one embodiment the network traffic static analysis logic is configured to aggregate multiple related flows as a multi flow object and analyze characteristics of the multi flow object for use in classifying the multi flow object as either benign or malicious. According to one embodiment of the disclosure multi flow analysis results may be provided to classification engine for classification of the multi flow object independent of VM based results and or without being triggered by multi flow feedback signaling as described below.

More specifically the network traffic static analysis logic aggregates multiple related flows to produce a multi flow object . The aggregation may be performed by collecting information associated with messages from to the same network address such as communications sourced from the same client Internet Protocol IP address for example. During or after aggregating the multiple related flows forming the multi flow object the network traffic static analysis logic further correlates and stores information hereinafter markers associated with characteristics of these flows. These characteristics may be directed to content within messages forming the multiple related flows protocol format message ordering or the like.

Although not shown in as an illustrative example a HTTP GET Request message flow and subsequent HTTP messages flows etc. to complete the HTTP GET Request message may be construed as the multi flow object . The markers associated with this multi flow object may include parameter values for corresponding headers such as i domain name of the server to which the GET HTTP request is directed Host ii content types that are acceptable for the response Accept iii list of acceptable languages for response e.g. Accept Language iv type of connection preferred by the user initiating the request Connection or the like. The markers may further include format information directed to placement of the headers within the messages as well as detected ordering of the messages themselves.

During and or subsequent to generation of the multi flow object the network traffic static analysis logic may conduct an static analysis of the characteristics of the multi flow object where the markers are analyzed for abnormalities. For instance the network traffic static analysis logic may analyze the markers for anomalous characteristics such as abnormalities within the content itself e.g. headers that are not in typical order additional headers presence of executables etc. and or anomalous activity e.g. abnormal ordering of messages associated with the multi flow object . The results of such analysis e.g. the multi flow analysis results may be provided to classification engine for classifying the multi flow object as malicious or benign with or without i consideration of the VM based results or ii prompting by multi flow feedback signaling from classification engine .

Additionally or in the alternative the network traffic static analysis logic may be configured as a filtering device to determine if the multi flow object is to be provided for in depth analysis by the dynamic analysis engine . The multi flow object may be provided to dynamic analysis engine which comprises a virtual execution logic as illustrated in . The dynamic analysis engine attempts to verify whether the suspect multi flow object is associated with a malicious attack e.g. an exploit through virtual processing of the suspect multi flow object and monitoring behaviors during such virtual processing as described below.

The results of this VM based analysis hereinafter VM based results are output from the dynamic analysis engine for subsequent use by correlation engine in classifying whether the multi flow object is part of a malicious attack e.g. an exploit . Although not illustrated in the VM based results may include 1 the suspect multi flow object 2 an identifier assigned to the multi flow object or perhaps identifiers associated to each flow of the multi flow object 3 time of analysis 4 one or more scores that may be used to verify that the suspect multi flow object is likely an exploit and if so i detected anomalous behaviors and or ii name and or version number of the software e.g. operating system OS type and version application type and version etc. .

According to this embodiment of the disclosure upon receipt of the VM based results and or the multi flow analysis results the classification engine determines whether the suspect multi flow object is malicious or benign and provides information that is used by the reporting logic to generate a report for at least identifying those suspect multi flow objects that are determined to be malicious.

According to an embodiment of the disclosure upon receipt of the VM based results without receipt of the multi flow analysis results the classification engine may be configured to determine whether the suspect multi flow object is malicious or benign as described above. However upon failing to classify the suspect multi flow object as an exploit e.g. a computed score falls below a prescribed threshold the static results update logic in the classification engine may be configured to generate a request message multi flow feedback signaling that prompts the network traffic static analysis logic to commence static analysis of characteristics associated with the multi flow object hereinafter multi flow analysis .

According to one embodiment the multi flow analysis may correspond to a first static analysis of the multi flow object e.g. signature matching heuristics determinative analysis etc. with results provided to classification engine as shown in . According to another embodiment the multi flow analysis may correspond to a second enhanced static analysis conducted on the multi flow object e.g. additional signature matching determinative analysis and or heuristics static analysis of different characteristics of the multi flow object that have not been previously considered such as markers message ordering message formatting etc. to verify whether the suspect multi flow object still should be considered as being associated with a malicious attack e.g. an exploit . Alternatively the multi flow analysis may be conducted in real time where the multi flow feedback signaling merely prompts for the return of the multi flow analysis results to the classification engine .

It is contemplated that the multi flow analysis is directed to the multi flow object which may be the multi flow object present at the first static analysis or a modified multi flow object in which i one or more additional related messages associated with a flow of the multi flow object or ii one or more additional related flows of the multi flow object are received after the first static analysis.

The multi flow analysis results may be used at least in part to cause the classification engine to conduct a secondary verification to determine whether the suspect multi flow object is associated with a malicious attack. According to one embodiment of the disclosure the multi flow analysis results may include a value e.g. a score that represents the likelihood of the multi flow object being an exploit. Additionally or in the alternative the multi flow analysis results may include anomalous characteristics detected during the multi flow analysis. As yet another alternative embodiment the multi flow analysis results simply may be a certain return value or an active logical signal that signifies that the network traffic static analysis logic detects the presence of one or more anomalous characteristics associated with the suspect multi flow object that signify an exploit.

Of course when the multi flow analysis results include detected anomalous characteristics it is contemplated that the network traffic static analysis logic may assign different weightings to different types of anomalous characteristics in order to avoid an unacceptable level of false positives e.g. the presence of an executable with a response message may not be assigned a high threat level unless the type of response message normally has no executables irregular message ordering may have a higher threat level than improper syntax in a particular message type etc. . The weightings may be static in nature or may be dynamic for user customization.

In lieu of the classification engine generating the multi flow feedback signaling it is contemplated that such signaling may be produced by dynamic analysis engine . For instance the dynamic analysis engine may virtually process the suspect multi flow object and the monitored behaviors are provided to a score determination logic deployed therein. Where the resultant score fails to exceed a threshold value the dynamic analysis engine would transmit the multi flow feedback signaling to the network traffic static analysis logic to upload the multi flow analysis results to classification engine .

Referring to an exemplary block diagram of a communication system deploying a plurality of threat detection and prevention TDP systems N 1 where N 3 for this embodiment and TDP system is equivalent to TDP system of communicatively coupled to a management system via a network is shown. In general management system is adapted to manage TDP systems . For instance management system is responsible for updating software deployed within network traffic static analysis logic within TDP systems . Such updating may be conducted automatically or conducted manually via uploads by an administrator. Also such updating may be conducted freely among the TDP systems or subject to a subscription basis.

Herein according to the embodiment illustrated in a first TDP system is an electronic device that is adapted to analyze information associated with network traffic from at least one client device for transmission over a communication network such as communications with server device . The communication network may include a public network such as the Internet in which case an optional firewall represented by dashed lines may be interposed prior to accessing client device . Alternatively the communication network may be a private network such as a wireless data telecommunication network wide area network a type of local area network LAN or a combination of networks.

As shown the first TDP system may be communicatively coupled with the communication network via a network interface . In general the network interface operates as a data capturing device sometimes referred to as a tap or network tap that is configured to receive data propagating to from the client device and provide at least some of this data to the first TDP system or a duplicated copy of the data. Alternatively as shown in the first TDP system may be positioned behind the firewall and in line with client device .

According to an embodiment of the disclosure the network interface may be further configured to capture metadata from network traffic associated with client device . According to one embodiment the metadata may be used at least in part to determine protocols application types and other information that may be used by logic within the first TDP system to determine particular software profile s . The software profile s are used for selecting and or configuring a run time environment in one or more virtual machines selected or configured as part of the dynamic analysis engine as described below. These software profile s may be directed to different software or different versions of the same software application extracted from software image s fetched from storage device .

In some embodiments although not shown network interface may be contained within the first TDP system . In other embodiments the network interface can be integrated into an intermediary device in the communication path e.g. firewall router switch or other networked electronic device which in some embodiments may be equipped with SPAN ports or can be a standalone component such as an appropriate commercially available network tap.

As further shown in the first TDP system comprises static analysis engine a scheduler a storage device dynamic analysis engine classification engine and reporting logic . Herein the static analysis engine comprises network traffic static analysis logic which may include one or more software modules that when executed by one or more processors analyzes characteristics of a multi flow object. Such analysis may involve signature matching determinative analysis and or heuristics as described above as well as analysis of markers namely stored information associated with characteristics of the multi flow object that is generated based on the aggregation or re aggregation of multiple related flows. These characteristics of the multi flow object may include content within messages that are part of the multiple related flows protocol format message ordering or the like.

In general referring to the network traffic static analysis logic is communicatively coupled to receive network traffic which may be multiple flows that are related to each other. For instance a series of HTTP messages operating as multiple related flows may be routed over communication network . The network traffic static analysis logic comprises traffic pre filter logic that i parses the incoming network traffic ii aggregates information associated with characteristics of the network traffic from the same client IP address e.g. IP address of client device for a given communication session and iii stores the information associated with the characteristics e.g. markers within the data store . A controller and timer may be utilized for delimiting a session e.g. period of time during which related flows may be part of a particular multi flow object .

A correlation logic within the network traffic static analysis logic is configured to conduct a static analysis of content associated with the multi flow object . For instance according to one embodiment of the disclosure the correlation logic may be configured to analyze the markers stored within the data store . As previously described this static analysis may include checking for deviations in messaging practices set forth in applicable communication protocols e.g. HTTP TCP etc. . For example HTTP messages may be analyzed to determine compliance with certain message formats established for the protocol e.g. out of order requests or responses . Furthermore header or payload parameters of the HTTP messages may be analyzed to determine further compliance. Of course in accordance with another embodiment of the disclosure the correlation logic may be configured to conduct a first static analysis e.g. signature matching deterministic analysis heuristics etc. and conduct a second static analysis of the markers upon receipt of notification that additional static analysis is needed by the classification engine .

When implemented the score determination logic may be configured to determine a probability or level of confidence that the multi flow object is associated with a malicious attack. More specifically the score determination logic may be configured to apply score values based at least in part on i pattern matches ii heuristic or determinative analysis results iii analyzed deviations in messaging practices set forth in applicable communication protocols e.g. HTTP TCP etc. iv analyzed compliance with certain message formats established for the protocol e.g. out of order commands and or v analyzed header or payload parameters to determine compliance. Based on the analysis score determination logic may generate a score that may be part of the multi flow analysis results as described above and illustrated in .

Besides being configured to generate the multi flow analysis results the network traffic static analysis logic may route the suspect multiple flow object to dynamic analysis engine which is configured to provide more in depth analysis of multiple flow object analyzing its content in order to verify whether or not the suspect object is an exploit. Information associated with the multi flow object may continue to be buffered in multi flow data store until expiration of the session time period.

More specifically after analysis of the characteristics of the suspect multiple flow object has been completed the network traffic static analysis logic may provide the object to the dynamic analysis engine for in depth dynamic analysis by one or more virtual machines VMs M 1 of the virtual execution logic . For instance the virtual execution logic operating in combination with processing logic described below is adapted to simulate the transmission and or receipt of signaling by a destination device represented by VM to replay in sequence protocol information associated with the related flows associated with the multi flow object . Of course if suspect object is not suspected of being an exploit the network traffic static analysis logic may simply denote that the suspect multi flow object is benign and refrain from passing the object to the dynamic analysis engine for analysis.

According to one embodiment the scheduler may be adapted to configure the VMs based on metadata associated with the multiple related flows of the multi flow object received by the network traffic static analysis logic . For instance the VMs may be configured with software profiles corresponding to the software images stored within storage device . As an alternative embodiment the VMs may be configured according to one or more software configurations that are being used by electronic devices connected to a particular enterprise network e.g. client device or prevalent types of software configurations e.g. a Windows 7 OS Internet Explorer ver. 10 web browser Adobe PDF reader application . As yet another alternative embodiment the VMs may be configured to support concurrent virtual execution of a variety of different software configurations in efforts to verify that the suspect object is an exploit. Of course it is contemplated that the VM configuration described above may be handled by logic other than the scheduler .

According to one embodiment of the disclosure the dynamic analysis engine is adapted to execute one or more VMs to simulate the receipt and execution of content associated with the multi flow object under analysis within a run time environment as expected by the type of object. For instance dynamic analysis engine may optionally include processing logic to emulate and provide anticipated signaling to the VM s . . . and or during virtual processing.

For example the processing logic may be adapted to provide and sometimes modify e.g. modify IP address etc. packets associated with the suspect multi flow object in order to control return signaling back to the virtual execution environment . Hence the processing logic may suppress e.g. discard the return network traffic so that the return network traffic is not transmitted to the communication network . According to one embodiment of the disclosure for a particular suspect multi object being multiple related flows such as TCP or UDP flows the processing logic may be configured to send packets to the virtual execution environment via a TCP connection or UDP session. Furthermore the processing logic synchronizes return network traffic by terminating the TCP connection or UDP session.

As further shown in the monitoring logic within the virtual execution logic may be configured to monitor behaviors of one or more VMs . . . and or such as VM configured to execute the suspect multi flow object . This monitoring is conducted to detect anomalous e.g. unexpected irregular etc. activity indicative of an exploit. When anomalous activity is detected the monitoring logic operating with an optional score determination logic may route the VM based results e.g. computed score information associated with the detected anomalous behaviors and other information associated with the detected malicious activity by the suspect object to classification engine .

It is noted that the score determination logic may not be implemented within the dynamic analysis engine so that the VM based results may exclude any scores but rather includes information associated with the detected anomalous behaviors by the monitoring logic . The VM based results are subsequently weighted by the prioritization logic and analyzed by the score determination logic implemented within the classification engine .

In general the classification engine may be configured to receive the VM based results . According to one embodiment of the disclosure the classification engine comprises prioritization logic and score determination logic . The prioritization logic may be configured to apply weighting to results provided from dynamic analysis engine and or network traffic static analysis logic . These results may include a score produced by score determination logic . Alternatively the results may include a score produced by score determination logic and or a score produced by score determination logic . Additionally or in the alternative the results may include anomalous behaviors detected by monitoring logic and or anomalous characteristics detected by correlation logic .

The score determination logic comprises one or more software modules that are used to determine a final probability as to whether the suspect multi flow object is an exploit and the resultant score representative of this final probability may be included as part of results provided to alert report generation logic within reporting logic .

According to one embodiment of the disclosure where the score determination logic has failed to determine that the suspect multi flow object based on the multi flow analysis results and or the VM based results the classification engine may refrain from providing the results to alert report generation logic or the results can be provided to alert report generation logic for processing to denote no detected exploit within the multiple related flows associated with the multi flow object .

According to another embodiment of the disclosure where the score determination logic has failed to generate a score that signifies that the suspect multi flow object is malicious static results update logic may be configured to signal the network traffic static analysis logic via multi flow feedback signaling to modify the original multi flow object by parsing and re aggregating additional related messages associated with a flow that corresponds to the multi flow object and or re aggregating additional related flows that correspond to the multi flow object for storage in data store where the additional related message and or flow was processed after to particular activity e.g. static analysis . The modified multi flow object may be subsequently analyzed where anomalies may be detected for the additional related messages flows. Additionally or in the alternative static results update logic may be configured to i perform a static analysis first or second enhanced static analysis on information e.g. markers associated with the multi flow object original or modified to generate the multi flow analysis results and or ii provide the multi flow analysis results to the classification engine or the dynamic analysis engine . The multi flow analysis e.g. analysis of the construct of the multi flow object including messaging ordering formats etc. may be conducted by the correlation logic .

For instance the correlation logic may be configured to analyze the markers stored within the data store as described above. In the event that deviations in the message formats and or deviations in message ordering for example the correlation logic generates and outputs the multi flow analysis results to indicate to the prioritization logic which may indicate that the network traffic static analysis logic has determined the presence of an exploit so as to alter the final score assigned by the score determination logic .

However if the score determination logic generates a final score representing that the suspect multi flow object has been verified by the virtual execution logic as an exploit information associated with the VM based results with or without multi flow analysis results may be provided to alert report generation logic and displayed accordingly.

Of course in lieu of certain aspects of the multi flow analysis being conducted by TDP systems it is contemplated that cloud computing services may be implemented to handle such analysis e.g. analysis of the characteristics of the suspect multi flow object as conducted by correlation logic . Additionally or in the alternative cloud computing services may be configured with virtual execution logic that conducts virtual execution of the suspect multi flow object as described herein. In accordance with this embodiment TDP system may be adapted to establish secured communications with cloud computing services for exchanging information.

Referring now to first TDP system may be coupled with the communication network in line with client device . Contrary to the embodiment illustrated in first TDP system comprises an interface unit that directs signaling on communication network to network traffic static analysis logic or classification engine given that the dynamic analysis engine is deployed as part of the cloud computing services . Hence multiple flows associated with network traffic are routed to network traffic static analysis logic via communication path . The suspect multi flow objects may be routed via path to the dynamic analysis engine being part of the cloud computing services . Similarly related flows that are not determined to be at least suspect may be returned via path for continued routing to client device .

The results of the dynamic analysis engine e.g. exploit information may be routed via path to the classification engine . The score determination logic is configured to generate a score that may classify the threat of the possible exploit. According to one embodiment of the disclosure where the score falls below a prescribed threshold normally where the score determination logic has failed to determine that the suspect multi flow object is malicious the classification engine may send multi flow feedback signaling to the network traffic static analysis logic to i modify the original multi flow object ii perform a static analysis and or iii provide the multi flow analysis results as described above.

In the event of message deviations such as deviations in format and or ordering for example the correlation logic generates multi flow analysis results which are returned to classification engine . Thereafter the prioritization logic applies selected weighting to the inputs namely the VM based results and the multi flow analysis results which may alter the final score assigned by the score determination logic to identify that the multi flow object is malicious.

Of course where the score determination logic is implemented within the dynamic analysis engine the multi flow feedback signaling may be provided directly from the dynamic analysis engine via path . Upon determining that the suspect multi flow object is malicious the correlation logic generates multi flow analysis results that are provided as input to the prioritization logic for weighting which may alter the final score assigned by the score determination logic to identify whether the multi store object is malicious or not.

Referring now to an exemplary block diagram of logic associated with TDP system of FIGS. A B is shown. TDP system comprises one or more processors that are coupled to communication interface logic via a first transmission medium . Communication interface logic enables communications with other TDP systems and management system of . According to one embodiment of the disclosure communication interface logic may be implemented as a physical interface including one or more ports for wired connectors. Additionally or in the alternative communication interface logic may be implemented with one or more radio units for supporting wireless communications with other electronic devices.

Processor s is further coupled to persistent storage via transmission medium . According to one embodiment of the disclosure persistent storage may include a network traffic static analysis logic including traffic pre filter logic and correlation logic b the dynamic analysis engine that comprises virtual execution logic the monitoring logic and or an optional score determination logic c classification engine including prioritization logic score determination logic and static results update logic d alert report generation logic and e data stores and . Of course when implemented as hardware one or more of these logic units could be implemented separately from each other.

Traffic pre filter logic comprises one or more software modules that parse the incoming network traffic aggregate or re aggregate information associated with network traffic from to the same client IP address e.g. IP address of client device for a given communication session and store the information e.g. markers within data store .

Controller operating in combination with timer controls the traffic filter logic to assist in delimiting the given communication session so that the communication session may not extend beyond time period T . Hence the controller and or timer ensure that the multi flow object comprises related flows in close temporal proximity.

According to one embodiment correlation logic is configured to analyze the characteristics of the multi flow object namely multiple related flows based on analysis rules . This multi flow analysis may involve accessing the stored markers namely information associated with characteristics of the multiple related flow forming the multi flow object and determining if the markers indicate any abnormalities in the content within the multi flow object e.g. message formatting informalities presence of executables message ordering etc. . The results of the multi flow analysis may be stored in data store .

Score determination logic is an optional component that may operate in combination with the correlation logic to produce a score that may be weighted by classification engine in determining if the suspect multi flow object is part of a malicious attack.

Virtual execution environment comprises one or more software modules that are used for performing an in depth dynamic and or real time analysis of the suspect object using one or more VMs. More specifically the virtual execution environment is adapted to run the VM s which virtually process the content associated with the suspect multi flow object by simulating transmission and or receipt and execution of such content in order to determine the presence of one or more exploits.

Furthermore the monitoring logic monitors behaviors for each flow of the suspect multi flow object processed by the VM s in real time and may also log at least anomalous behaviors by the VM s configured with certain software and features that are presumably targeted by the matched exploit. In essence the monitoring logic identifies the effects that the suspect multi flow object would have had on a physical electronic device with the same software feature configuration. Such effects may include at least unusual attempted network transmissions unusual changes in performance and the like.

Thereafter according to the observed behaviors of the virtually executed object that are captured by the monitoring logic the score determination logic when deployed within the dynamic analysis engine determines whether the multi flow object is associated with one or more exploits. This may be accomplished by analysis of the severity of the observed anomalous behaviors and or the likelihood of the anomalous behaviors result from an exploit is evaluated and reflected in a score . As a result this logic collectively outputs the VM based results for use by classification engine .

The prioritization logic comprises one or more software modules that are used for weighting information associated with results e.g. VM based results and or multi flow analysis results . For instance the prioritization logic may assign a higher priority and larger weight to either the VM based results or the multi flow analysis results . For instance the scores generated by score determination logic and or score determination logic may be weighted differently so that one of these scores is given a higher priority than the other. Alternatively if implemented to receive the anomalous characteristics and behaviors as part of VM based results and or multi flow analysis results the prioritization logic may be configured to apply different weights to the monitored anomalous characteristics and behaviors.

The score determination logic may be adapted to receive both the VM based results and multi flow analysis results along with weighting provided by prioritization logic . Based on these results the score determination logic generates a final score that signifies whether the suspect object is determined to be part of a malicious attack e.g. an exploit or benign.

Alternatively the score determination logic may be adapted to receive the VM based results along with weighting provided by prioritization logic and based on the score and or observed anomalous behaviors generates a score that signifies whether the suspect object is determined to be part of a malicious attack e.g. an exploit or benign. Where the suspect object is initially determined to be benign i.e. no exploit the static results update logic may be adapted to signal the correlation logic of the network traffic static analysis logic to provide the multi flow analysis results for use in verifying the presence of an exploit within the suspect multi flow object as described above. It is contemplated that in lieu of sending the multi flow analysis results automatically the network traffic static analysis logic may only send these results to classification engine if such results are determined by the network traffic static analysis logic to potentially alter the conclusion reached by the score determination logic .

Continuing the above example processor s may invoke alert report generation logic which produces alerts which may include a detailed summary of at least the exploit detected by the TDP system . Furthermore the alert report generation logic or a separate signature generation logic not shown located within or remote from the TDP system may generate an indicator or signature for any detected malware which may be based on and in some cases incorporate one or more markers from the static analysis and enhanced static analysis if conducted and or behaviors from the dynamic analysis. The signatures may be used to block subsequent malicious traffic at the TDP system or distributed e.g. via management system to and used to block subsequent malicious traffic at other TDP systems e.g. TDP systems of .

Referring to a general exemplary flowchart illustrating a threat detection and prevention process is shown where multi flow analysis is conducted to determine whether a multi flow object is malicious. First information associated with a plurality of flows is grouped e.g. aggregated by the pre filter to produce a multi flow object block . This grouping is conducted in accordance with a selected grouping policy. For instance multiple related flows may be grouped according to their originating source client IP address over a predetermined period of time T .

Thereafter a static analysis is conducted on the multi flow object where the characteristics of the multi flow object are analyzed for use in determining if the multi flow object is a part of a malicious attack such as an exploit block . Examples of characteristics of the multi flow object being analyzed may include but is not limited or restricted to the construct of the messages being part of the multiple related flows e.g. header types header order parameter values for corresponding headers within HTTP based message etc. message ordering and or protocol information associated with HTTP based messages formulating the flows. Additionally information directed to the particular type of object e.g. HTML PDF executable etc. may be used as part of the characteristics of the multi flow object.

The multi flow analysis results are subsequently stored within a data store block . Based on at least the multi flow analysis results for the suspect multi flow object a determination is made as to whether these results are sufficient to classify the multi flow object as malicious block . If so an alert and or report may be generated to identify that the multi flow object is associated with a malicious attack block .

Referring to a flowchart illustrating a second exemplary threat detection and prevention process is shown where both static and dynamic multi flow analysis is conducted to determine whether a multi flow object is malicious. First information associated with a plurality of flows is grouped e.g. aggregated to produce a multi flow object block . This grouping is conducted in accordance with a selected grouping policy as described above. Second a static analysis is conducted on the multi flow object where the characteristics of the multi flow object as described above for are analyzed for use in determining if the multi flow object is a part of a malicious attack such as an exploit for example block . Such analysis produces the multi flow analysis results described above.

Based at least in part on the multi flow analysis results for the suspect multi flow object a determination is made as to whether the multi flow object is suspicious namely the characteristics of the multi flow object tends to suggest that the object is part of a malicious attack block . If so the multi flow analysis results for the suspect multi flow object are subsequently stored within a data store and provided for use in classifying the multi flow object as malicious or benign block .

Furthermore dynamic VM based analysis is scheduled and performed on information associated with the suspect multi flow object to produce VM based results blocks and . Based on both the multi flow analysis results and the VM based results a determination is made as to whether the multi flow object should be classified as being part of a malicious attack as set forth in block . If so information associated with the malicious attack is stored and an alert and or report may be generated to identify that the multi flow object is associated with a malicious attack block . Otherwise the suspect multi flow object is concluded as being benign.

Referring to a flowchart illustrating a third exemplary threat detection and prevention process is shown where dynamic multi flow analysis is conducted to determine whether a suspect multi flow object is malicious and upon failing to verify that the suspect multi flow object is malicious considering the static multi flow analysis conducted by the network traffic static analysis logic.

Herein information associated with a plurality of flows is grouped e.g. aggregated to produce a multi flow object block . This grouping is conducted in accordance with a selected grouping policy as described in . However where the static analysis is conducted prior to the elapse of time period T information associated with flows that are part of the multi flow object may be stored in the event that additional static analysis is needed.

During or after grouping at time t during or at end of time period T a static analysis is conducted on the multi flow object where the characteristics of the multi flow object as described above are analyzed for use in determining if the multi flow object under analysis is a part of a malicious attack such as an exploit block . Such analysis produces multi flow analysis results.

Based at least in part on the multi flow analysis results for the suspect multi flow object a determination is made as to whether the multi flow object is suspicious namely the characteristics of the multi flow object tends to suggest that the object is part of a malicious attack block . If so the multi flow analysis results for the suspect multi flow object are subsequently stored within a data store and provided for use in classifying the multi flow object as malicious or benign block .

Additionally dynamic VM based analysis is scheduled and performed on information associated with the suspect multi flow object to produce the VM based results blocks and . Based on the VM based results a determination is made as to whether the multi flow object should be classified as being part of a malicious attack e.g. indicative of an exploit as set forth in block . If so information associated with the malicious attack is stored and an alert and or report may be generated to identify that the multi flow object is associated with a malicious attack block . Otherwise multi flow feedback signaling is provided to the network traffic static analysis logic that conducted a second static analysis of the multi flow object block . The second enhanced static analysis may analyze the information associated with additional message s flow s that were not analyzed during the prior static analysis of the multi flow object and or may analyze different types of information e.g. markers in lieu of signature matching conducted in the first static analysis etc. . Thereafter the multi flow analysis results for the suspect multi flow object are returned to the classification engine which based on both the VM based results and the multi flow analysis results determines whether the multi flow object should be classified as being part of a malicious attack e.g. indicative of an exploit or not see blocks and .

Where the multi flow object should be classified as being part of a malicious attack information associated with the malicious attack is stored and an alert and or report may be generated to identify that the multi flow object is associated with a malicious attack block . Otherwise the suspect multi flow object is concluded as being benign.

Referring to an illustrative example of the operations conducted by the threat detection and prevention process where traffic pre filter logic and correlation logic collectively generate a multi flow object based on multiple related flows and performs static analysis operations on the multi flow object for use in determining whether the multiple related flows are associated with a malicious attack by featuring one or more exploits.

As shown the traffic pre filter logic monitors flows from to a client device. Multiple flows may constitute a single object especially where these flows are initiated from an outgoing request message. For instance as shown the user for the client device initiates a HTTP Get Request for the company A s website A.com flow and in response receives an HTTP Response with the content associated with the webpage for company A A.HTML flow as represented by flow . Without user initiation return of the A.HTML prompts the browser located in the client device to initiate a request for different objects such as the following 1 a JPEG object A.com Object1.jpg flow 2 a PDF file A.com Object2.pdf flow and 3 a JAR file to support Java based communications A.com Object3.jar flow . Lastly an executable is provided as part of the flow e.g. flow . Flows are part of the same multi flow object.

The characteristics of the multi flow object which is associated with multiple related flows are analyzed by correlation logic . The results of the analysis are stored in data store . The results may be data that is subsequently processed to generate a score where the score and data are provided as the multi flow analysis results. These results may be provided in real time or in response to a triggering event from the classification engine as shown in .

As shown in the characteristics of the multi flow object may be represented as a first set of markers namely information associated with the fields within headers of the HTTP GET Request. The first set of markers further comprise information associated with the fields within the headers of subsequent HTTP Request and or Response messages.

Referring back to upon determining that the suspect multi flow object has not been detected as being malicious the classification engine notifies the network traffic static analysis logic of a missed detection via multi flow feedback signaling . The missed detection may be due to a variety of reasons including insufficient duration for analysis e.g. time delayed exploits software run on the VM s does not activate the exploit S.exe of or the like.

Upon learning that the suspect multi flow object failed VM diagnostics the network traffic static analysis logic returns multi flow analysis results to classification engine for subsequent determination if the suspect multi flow object should be determined as an exploit. Of course the multi flow analysis results may include a generated score and anomalous characteristics uncovered for the multi flow object or may be as simple as an active signal logic 1 . Depending on the weighting applied to the multi flow analysis results the classification engine may now classify the multi flow object as malicious.

In the foregoing description the invention is described with reference to specific exemplary embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims.

