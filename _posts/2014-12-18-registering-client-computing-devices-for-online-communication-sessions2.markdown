---

title: Registering client computing devices for online communication sessions
abstract: Registering a client computing device for online communication sessions. A registration server receives a message that has a push token that is unique to the client computing device and a phone number of the client computing device from an SMS (Short Message Service) transit device, which received an SMS message having the push token from the client computing device and determined the phone number of the client computing device from that SMS message. The registration server associates the push token and the phone number and stores it in a registration data store, which is used for inviting users for online communication sessions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09577976&OS=09577976&RS=09577976
owner: Apple Inc.
number: 09577976
owner_city: Cupertino
owner_country: US
publication_date: 20141218
---
This application is a continuation of co pending U.S. application Ser. No. 13 860 370 filed on Apr. 10 2013 which is a continuation of U.S. application Ser. No. 12 886 479 filed on Sep. 20 2010 now issued as U.S. Pat. No. 8 423 058 which claims the benefit of U.S. Provisional Application No. 61 382 479 filed Sep. 13 2010 U.S. Provisional Application Nos. 61 378 924 and 61 378 926 each filed Aug. 31 2010 U.S. Provisional Application No. 61 351 814 filed Jun. 4 2010 and U.S. Provisional Applications Nos. 61 321 865 and 61 321 866 each filed Apr. 7 2010 which are each hereby incorporated by reference.

This application may include related subject matter to co assigned U.S. Provisional Application No. 61 321 832 filed Apr. 7 2010 and is entitled Apparatus and Method For Inviting Users to Online Sessions which is incorporated by reference herein.

Embodiments of the invention relate to the field of computer networking and more specifically for registering client computing devices for online communication sessions.

Many implementations to provide online communication sessions e.g. instant messaging video conferencing etc. require users of computing devices to install software and or register with the service. Thus as a prerequisite for a user to establish an online communication session with another user both users must be registered and or have the same software installed. Many implementations also maintain presence e.g. a friendlist that allows users to determine the status of other users e.g. online offline away etc. .

Large public networks such as the Internet frequently have connections to smaller private networks such as those maintained by a corporation Internet service provider or even individual households. By their very nature public networks must have a commonly agreed upon allocation of network addresses i.e. public addresses. For a variety of reasons maintainers of private networks often choose to use private network addresses for the private networks that are not part of the commonly agreed upon allocation. Thus for network traffic from the private network to be able to traverse the public network some form of private public network address translation NAT is required.

A device performing NAT operations alters the data packets being sent out of the private network to comply with the addressing scheme of the public network. Particularly the network address translator replaces the originating private address and port number of a packet with its own public address and an assigned port number. A network address translator also alters the data packets being received for computers on the private network to replace the destination public address and port number with the correct private address and port number of the intended recipient. As used herein the term address should be construed to include both an address and a port number if appropriate in the context as would be understood by one of ordinary skill in the art.

NAT has become increasingly common in modern network computing. One advantage of NAT is that it slows the depletion of public network address space. For example TCP IP addressing which is used on the Internet comprises four strings of three digits each thus providing a finite address space. Additionally certain portions of this address space are reserved for particular uses or users further depleting the actual number of addresses available. However if NAT is used a private network or subnet may use an arbitrary number of addresses and still present only a single standardized public address to the outside world. This makes the number of available addresses practically limitless because each private network could theoretically use exactly the same private addresses.

One advantage provided by NAT is increased security arising from the fact that those on the public network cannot determine the actual i.e. private network address of a computer on a private network. This is because only the public address is provided on the public network by the network address translator. Additionally this public address may correspond to any number of computers on the private network.

Different NAT types employ different levels of security. For example with a full cone NAT once an internal address iAddr iPort is mapped to an external address eAddr ePort any external host can send packets to iAddr iPort by sending packets to eAddr ePort. With a restricted cone NAT an external host with an address hAddr can send packets to iAddr iPort by sending packets to eAddr ePort only if iAddr iPort had previously sent a packet to hAddr. The port of the external host is irrelevant. With a Port Restricted Cone NAT an external host having an address port hAddr hPort can send packets to iAddr iPort by sending packets to eAddr ePort only if iAddr iPort previously sent a packet to hAddr hPort. Finally with a Symmetric NAT each request from the same iAddr iPort to a specific destination IP address and port is mapped to a unique eAddr ePort. If the same internal host sends a packet to a different destination a different external address and port mapping is used. Only an external host that receives a packet from an internal host can send a packet back to the internal host.

Peer to peer P2P computing refers to a distributed network architecture comprised of computing nodes which make a portion of their resources directly available to other network participants. Peers in a P2P network establish direct communication channels with one another and act as both clients and servers in contrast to the traditional client server model in which servers supply resources and clients consume resources.

The NAT operations described above pose numerous problems for P2P connections. For example establishing a direct connection between two peers becomes increasingly difficult if one or both of the peers is located behind one or more of the NAT types described above. This problem is exacerbated by the fact that client devices such as the Apple iPod Touch Apple iPhone Apple iPad and various other devices e.g. RIM Blackberry devices Palm Pre devices etc are frequently moved between networks having different NAT implementations. For example the Apple iPhone is capable of communicating over Wi Fi networks e.g. 802.11b g n networks 3G networks e.g. Universal Mobile Telecommunications System UMTS networks High Speed Uplink Packet Access HSUPA networks etc and Bluetooth networks known as personal area networks PANs . Future client devices will be capable of communicating over additional communication channels such as WiMAX International Mobile Telecommunication IMT Advanced and Long Term Evolution LTE Advanced to name a few.

Hands free units e.g. headsets car kits are typically used to peer with a computing device for hands free services. For example it is common for a computing device that includes cellular telephony functionality to include the ability to peer with a hands free unit that acts as an auditory relay between the hands free unit and the computing device.

A method and apparatus for automatically registering a client computing device client device e.g. a workstation a laptop a palmtop a mobile phone a smartphone a multimedia phone a tablet a portable media player a GPS unit a gaming system etc. for online communication sessions e.g. P2P video conferencing P2P instant messaging etc. is described. In one embodiment upon an event at a computing device e.g. the computing device powering on the client device automatically begins a registration process for online communication sessions. The automatic registration process includes the client device transmitting an SMS short message service message with an identifying token e.g. its push token to an SMS transit device e.g. an SMS gateway or an SMS aggregator . The identifying token uniquely identifies a client device and in one embodiment is a push token that can contain information that allows a push notification service to locate the client device. The identifying token in the push notification service embodiment is also used as a way of establishing trust that a particular notification is legitimate. In other embodiments any registry or mapping of client devices to unique tokens may be used to associate identifying tokens with client devices and to provide a trusted method of associating the identity of the client device with a uniquely identified token.

The SMS transit device determines the phone number of the client device e.g. by examining the header of the SMS message and transmits an IP Internet Protocol message to a registration server with the identifying token and the phone number. The registration server generates a signature based on the identifying token and the phone number and transmits these to the SMS transit device for delivery to the client device. The SMS transit device transmits an SMS message to the client device including the signature identifying token and phone number. The client device then transmits an IP message to the registration server with the signature identifying token and phone number. The registration server validates the information from the client device and stores an association between the identifying token and the phone number in an online communication session registration data store. Together the associated pair of the identifying token and the phone number uniquely identify the device in an online communication session network.

After the client device has been registered a user at the client device may initiate and or accept an invitation for an online communication session e.g. video chat conference session instant messaging session etc. . In one embodiment the phone number of a client device is used as the online communication session endpoint identifier of an online communication session. By way of example a user at a client device may invite other user s at other client device s to participate in an online communication session using their phone number s . In some embodiments the client device does not natively know its own phone number.

In the following description numerous specific details are set forth. However it is understood that embodiments of the invention may be practiced without these specific details. In other instances well known circuits structures and techniques have not been shown in detail in order not to obscure the understanding of this description. Those of ordinary skill in the art with the included descriptions will be able to implement appropriate functionality without undue experimentation.

References in the specification to one embodiment an embodiment an example embodiment etc. indicate that the embodiment described may include a particular feature structure or characteristic but every embodiment may not necessarily include the particular feature structure or characteristic. Moreover such phrases are not necessarily referring to the same embodiment. Further when a particular feature structure or characteristic is described in connection with an embodiment it is submitted that it is within the knowledge of one skilled in the art to effect such feature structure or characteristic in connection with other embodiments whether or not explicitly described.

In the following description and claims the terms coupled and connected along with their derivatives may be used. It should be understood that these terms are not intended as synonyms for each other. Coupled is used to indicate that two or more elements which may or may not be in direct physical or electrical contact with each other co operate or interact with each other. Connected is used to indicate the establishment of communication between two or more elements that are coupled with each other.

A method and apparatus for automatically registering a client computing device client device e.g. a workstation a laptop a palmtop a mobile phone a smartphone a multimedia phone a tablet a portable media player a GPS unit a gaming system etc. for online communication sessions e.g. P2P video conferencing P2P instant messaging etc. is described. In one embodiment upon an event at a computing device e.g. the computing device powering on the client device automatically begins a registration process for online communication sessions. The automatic registration process includes the client device transmitting an SMS short message service message with an identifying token e.g. its push token and a client device identifier to an SMS transit device e.g. an SMS gateway or an SMS aggregator . The identifying token uniquely identifies a client device for online communication session messages e.g. invite request and accept invite messages and in one embodiment is a push token that can contain information that allows a push notification service to locate the client device. The identifying token in the push notification service embodiment is also used as a way of establishing trust that a particular notification is legitimate. In other embodiments any registry or mapping of client devices to unique tokens may be used to associate identifying tokens with client devices and to provide a trusted method of associating the identity of the client device with a uniquely identified token. The device identifier uniquely identifies the client device and is typically based on one or more hardware identifiers e.g. a serial number of the device an ICC ID Integrated Circuit Card ID of a SIM Subscriber Identity Module card etc. .

The SMS transit device determines the phone number of the client device e.g. by examining the header of the SMS message and transmits an IP Internet Protocol message to a registration server with the identifying token device identifier and the phone number. The registration server generates a signature based on the identifying token device identifier and the phone number and transmits these to the SMS transit device for delivery to the client device. The SMS transit device transmits an SMS message to the client device including the signature and phone number. The client device then transmits an IP message to the registration server with the signature device identifier identifying token and phone number.

The registration server validates the information from the client device and stores an association between the identifying token and the phone number in an online communication session registration data store. Together the associated pair of the identifying token and the phone number uniquely identify the device in an online communication session network. After the client device has been registered a user at the client device may initiate and or accept an invitation for an online communication session e.g. video chat conference session instant messaging session etc. . In one embodiment the phone number of a client device is used as the online communication session endpoint identifier of an online communication session. By way of example a user at a client device may invite other user s at other client device s to participate in an online communication session using their phone number s . In some embodiments the client device does not natively know its own phone number.

After registering for online communication sessions the client device can invite and or accept invitations for online communication sessions. The client device is identified in the online communication sessions through an online communication session endpoint identifier. While in one embodiment the online communication session endpoint identifier is a phone number of the client device in other embodiments the online communication session endpoint identifier is a different identifier e.g. a username e.g. an Apple ID an email address a mailing address a MAC address or other identifier .

The SMS network which includes the carrier SMSC Short Message Service Center and the SMS transit device e.g. an SMS gateway or an SMS aggregator . The carrier SMSC is computing carrier specific and receives and delivers SMS messages. For example the carrier SMSC delivers SMS messages sent from the client device to the SMS transit device and delivers SMS messages sent from the SMS transit device to the client device . The SMS transit device separates the mobile network and the IP network.

The registration server registers client devices such as the client device for online communication sessions. Registering a client device for online communication sessions includes associating an identifying token of a device with the phone number of the device or other online communication session endpoint identifier . The associations between identifying tokens and online communication session end identifiers are stored in the online communication session registration data store .

Upon an event occurring at the client device e.g. the client device powering on an online communication session application e.g. a P2P video conferencing application a P2P instant message application etc. launching etc. the client device begins a registration process for online communication sessions. In one embodiment the registration process begins automatically without user interaction while in other embodiments the registration process begins after a user selects to register the client device for online communication sessions.

In embodiments where the phone number of the client device is used as the online communication session endpoint identifier and is thus to be associated with the identifying token of the client device in the registration data store the phone number of the client device must be determined Since the client device does not natively know its own phone number in some embodiments the phone number of the client device is determined through the client device transmitting an SMS message. For example at operation the client device transmits an SMS message with its identifying token and the device identifier to the SMS transit device through the carrier SMSC . In some embodiments the SMS message is addressed to a phone number which may be a standard length number or a short code a type of phone number that is typically significantly shorter than a full telephone number that is specifically established for online communication session registration. The phone number that the SMS message is addressed to is stored in the client device e.g. in a carrier bundle .

The carrier SMSC receives the SMS message and delivers it to the SMS transit device . The SMS transit device determines the phone number of the client device at operation . For example the SMS transit device examines the header of the SMS message to determine the phone number of the client device . After determining the phone number the SMS transit device transmits an IP message to the registration server with the phone number of the client device the identifying token and the device identifier . This is sometimes referred to as a registration request message.

The registration server receives the IP message from the SMS transit device including the phone number of the client device the identifying token and the device identifier and creates a signature. The signature may be based on the phone number of the client device the identifying token and or the device identifier and is used for validation purposes which will be described in greater detail later herein . In some embodiments a random number is also used when generating the signature to account for situations where multiple client devices have the same phone number. The registration server transmits the signature phone number device identifier and the token back to the SMS transit device at operation e.g. in an IP message . This is sometimes referred to as a registration response message.

The SMS transit device receives the signature phone number device identifier and token from the registration server and generates an SMS message with the signature and phone number for the client device . The SMS transit device transmits the SMS message to the client device with the signature and phone number at operation through the carrier SMSC .

The client device receives and processes the SMS message including storing its phone number. The client device transmits an IP message with its identifying token device identifier its phone number and the signature generated by the registration server to the registration server at operation . This is sometimes referred to as a registration validation request message.

Using the signature the registration server validates the data sent by the client device . For example the registration server compares the signature sent by the client device with the signature generated during operation . If they match then the data is validated. Assuming that the data is valid the registration server stores an association between the identifying token and the phone number of the client device in the online communication session registration data store .

In an alternative embodiment instead of determining the phone number of the client device through transmission of SMS messages the user of the device is prompted to input the phone number of the client device . In these embodiments the client device directly transmits the phone number of the client device as input by the user and its identifying token to the registration server which may associate them in the online communication session registration data store .

As illustrated in the client device includes the client online communication session registration module client registration module the carrier bundle s the push token the device identifier the SMS module and the client online communication session registration data store client registration data store . The client registration module controls the registration of the client device for online communication sessions. The carrier bundle s include settings specific to a carrier including the phone number for the SMS transit device used for registration e.g. the number for the SMS transit device and other settings e.g. Access Point Name APN settings multimedia messaging service MMS settings etc. . The SMS module transmits and receives SMS messages. The client registration data store stores data related to online communication session registration e.g. the phone number of the client device once determined .

Referring to at block the client registration module detects or receives an event that triggers online communication session registration. Examples of such events include the client device powering on a user opening an online communication application e.g. a P2P video conferencing application a P2P instant messaging application etc. etc. In some embodiments the registration process is performed each time the client device powers on while in other embodiments the registration process is performed the first time the client device is powered on. Flow moves from block to block .

At block the client registration module determines whether there is a valid identifying token for the client device . If there is not a identifying token or the identifying token has expired then flow moves to block where alternative action is taken. For example in embodiments using push tokens the client device can initiate a token generation procedure by requesting a push token be generated by a push notification service which is typically remote from the client device . The push notification service generates a push token specific to the client device and returns it to the client device . If there is a valid identifying token then flow moves to block where the client registration module access the identifying token . Flow moves from block to block .

At block the client registration module accesses the device identifier . Flow then moves to block where the client registration module determines the phone number for the SMS transit device used in the registration process. For example the client registration module accesses the carrier bundle s to determine the phone number of the SMS transit device. The phone number may be a short code or may be a standard length number. In this example the SMS transit device used in the registration process is the SMS transit device . Flow moves from block to block .

At block an SMS message having the identifying token and the device identifier is transmitted to the determined number the SMS transit device . For example the client registration module requests the SMS module to transmit an SMS message with the identifying token and device identifier to the determined number. The SMS module transmits the SMS message with the identifying token to the determined number. Flow moves from block to block . The SMS message will be received by the carrier SMSC which delivers it to the SMS transit device .

At block the SMS transit device determines the phone number of the client device based on the received SMS message. For example the SMS transit device examines the header of the SMS message which will include the phone number of the sender which in this case is the client device . Flow then moves to block where the SMS transit device transmits the phone number of the client device the identifying token and the device identifier to the registration server e.g. in a secure IP message . Flow moves from block to block .

Referring back to at block the signature generator generates a signature for the phone number identifying token and device identifier tuple it received from the SMS transit device . The signature will be used to validate the pairing of the phone number and the identifying token prior to storing the pair in the registration data store . In some embodiments the signature is based on the phone number identifying token and or device identifier e.g. a cryptographic hash is applied to phone number identifying token and or device identifier or some portion thereof to generate the signature . In some embodiments the signature is also based on a random number to account for situations where multiple client devices have the same phone number. The signature generator stores the signature and optionally the phone number identifying token and or device identifier in the validation data store . Flow then moves to block where the SMS transit interface transmits the signature phone number device identifier and identifying token to the SMS transit device . Flow moves from block to block .

The SMS transit device receives the signature phone number and identifying token from the registration server . At block the SMS transit device transmits an SMS message through the carrier SMSC with the signature and phone number for the client device . Flow next moves to block .

At block the SMS module receives the SMS message with the signature and the phone number and stores the signature and the phone number in the client registration data store . Flow then moves to block where the client registration module transmits an IP message to the registration server with its phone number identifying token device identifier and signature. Flow then moves to block .

The client device interface receives the phone number identifying token device identifier and signature from the client device. The information is passed to the validation module which determines whether the data is valid at block . For example the same hash function as applied when generating the signature is used on the phone number identifying token and or device identifier received from the client device and the validation module compares the result with the signature that was previously generated stored in the validation data store . If the signatures match then the data is valid and flow moves to block .

At block the association module of the registration server stores an association of the phone number of the client device and the identifying token of the client device in the registration data store . In some embodiments the registration server may transmit a registration status message to the client device alerting the client device whether registration was successful.

After the client device has been registered a user at the client device may initiate and or accept an invitation for an online communication session e.g. video chat conference session instant messaging session etc. . By way of example a user at a client device may invite other user s at other client device s to participate in an online communication session using their phone number s . In some embodiments the client device does not natively know its own phone number. While embodiments have described the use of SMS messages during registration in other embodiments other types of text messaging may be used e.g. MMS Multimedia Messaging Service .

While was described in relation to registering a phone number as an online communication session endpoint identifier in other embodiments an email address is used as an online communication session endpoint identifier. illustrates a general network topology used to register a client device for online communication sessions using an email address as an online communication session endpoint identifier. The client devices A N use the registration service to register for online communication sessions. For example in one embodiment the user of a client device A uses the online communication session client to register an email address for use as an online communication session identifier for online communications over the network e.g. the Internet .

At operation the registration service receives an authentication request from the client device A. For example with reference to which describes exemplary operations for a user providing initialization information at operation the online communication session application is started on the client device A. Flow then moves to operation and the client device A receives input from the user including a user ID and password and one or more email address to register for use as online communication session endpoint identifier s . Flow then moves to operation and the client device A transmits the user ID and password to the registration service .

Although the client device A is registering an email address as an online communication session endpoint identifier and may not include phone functionality it may send an online communication session invitation using a phone number instead of an email address. In addition to receiving a user ID password and one or more email addresses to register in some embodiments the user can also provide information regarding what country and or region they are currently located so that a corresponding country code and or region code can be used if the user initiates an online communication session to a phone number that does not include a country code and or region code. For example in the United States a local telephone call can be placed by using 7 digits thus the country code and area code are not required . The underlying telephone system automatically determines the country and area code and completes the call. However in cases where the client device A does not include telephone functionality the client device A cannot rely on the underlying telephone system to automatically include the country code and or region code when inviting a user to an online communication session using a telephone number that does not include the country code and or region code.

At operation the client device A receives input from the user regarding what country and or region e.g. area code state province city etc. they are located in. Flow then moves to operation where the client device associates the corresponding country and or region telephone codes with the online communication session application for use if the user initiates an online communication session to a phone number that does not include a country code and or region code. For example if the user indicates that they are located in the United States and the user invites a user to an online communication session using a 10 digit phone number that does not include the country code the client device A automatically adds the country code for the United States to the phone number.

With reference back to after receiving the authentication request from the client device A an authentication process is performed using the provided username and password. In one embodiment the registration service performs the authentication process while in another embodiment the user directory service performs the authentication process. The user directory service is a centralized service that provides user accounting authentication and other services. The user directory service manages the user records . In one embodiment each authenticated user is associated with a user record that includes various information e.g. one or more of a user ID password mailing address telephone number name birthday country a list of emails associated with the user which may also indicate whether the email address is validated etc. . If authentication is successful then flow moves to operation . If authentication fails then flow moves to operation and alternative action is taken e.g. the registration service transmits an error message to the client device A that indicates that the username and or password is not correct .

At operation the registration service generates and or access an online communication session profile associated with the user ID. For example the registration service may include an online communication session account server that manages the online communication session profile records . In one embodiment each user that is registering or registered for online communication sessions has a corresponding online communication session profile record. Each online communication session profile record may include a set of one or more email addresses including their validation status that are associated with the profile. Each online communication session profile record may also include one or more push tokens that correspond to one or more client devices respectively that are registered for online communication sessions. Each profile record may also include profile credentials which are used to validate certain communications from the client devices. Each profile record may also indicate which client devices as indicated by push tokens have registered or are trying to register which email addresses.

Flow moves from operation to operation and the registration service transmits an authentication reply to the client device A that includes the profile ID e.g. a string that identifies the profile associated with the provided user ID and the profile credentials. The authentication reply may also indicate that the authentication was successful. Flow then moves to operation and the registration service receives an email validation request from the client device A that includes one or more email addresses to validate profile ID profile credentials and the push token of the client device A. The email validation request message may also include the device ID of the client device A. The registration service then determines whether the profile credentials are valid for the profile ID at operation . If they are not then flow moves to operation and alternative action is taken e.g. the registration service transmits an error message to the client device A . If they profile credentials are valid then flow moves to operation . At operation the registration service associates the push token with the profile. For example the online communication session account server stores the push token in the profile record for the user.

Flow then moves to operation and the registration service determines whether the email address is validated. A validated email address is an email address that has been validated as belonging to the user requesting that is requesting it to be registered for use as an online communication session endpoint identifier. The online communication session account server accesses the user s profile record to determine whether the email address is validated. If the profile record does not indicate that the email address is validated in some embodiments the registration service transmits an email address validation request to the user directory service to determine whether the user record for the user indicates that the email address is validated. If the email address is not validated then flow moves to operation and the registration service causes a validation email message to be sent to the email address that includes a link that when selected or when entered into an Internet browser causes the email address to be validated. For example selection of the link causes an email address validation message to be sent that includes the email address and a validation token that are used to validate the email address. The registration service may also transmit an email address needs validating message to the client device that indicates that the email address is not validated and thus needs to be validated and may also indicate a validation email message was sent to the email address in question. Flow then moves to operation which will be described in reference to . However if the email address is validated then flow moves to operation .

At operation the registration service transmits an email address validated success message to the client device that indicates that the email address has been validated. Flow then moves to operation and the registration service receives an activate email request from the client device that includes the email address profile ID and profile credentials. The registration service then determines whether the profile credentials are valid for the profile ID at operation . If they are not then flow moves to operation and alternative action is taken e.g. the registration service transmits an error message to the client device A . If they profile credentials are valid then flow moves to operation .

At operation the registration service generates or accesses email credentials for the email address. For example in one embodiment the online communication session account server stores the email credentials for each validated email address of a user in that user s profile record . Flow then moves to operation and the registration service transmits an activation success message to the client device A that includes the email address and the email credentials.

Flow moves from operation to operation and the registration service receives a registration request message that includes the email address the email credentials the profile ID the profile credentials the push token of the client device A and the device ID of the client device A. In one embodiment the request message is received at the online communication session registration server . The online communication session registration server manages the online communication session registration data store . The online communication session registration data store associates a push token and optionally the device ID with the profile that has a set of one or more email addresses as online communication session endpoint identifier s . Thus each record in the communication session registration data store represents that a particular device with a particular push token is using an online communication session profile that has one or more email addresses that can be used to invite a user at that device to an online communication session. Flow moves from operation to operation .

At operation the registration service e.g. the online communication session registration server determines whether the profile credentials are valid. If they are not valid then flow moves to operation and alternative action is taken e.g. the registration service transmits an error message to the client device A . If they are valid then flow moves to operation and the registration service e.g. the online communication session registration server determines whether the email address credentials are valid. If they are not then flow moves to operation . If they are valid then flow moves to operation .

At operation the registration service e.g. the online communication session registration server associates the client device A with its push token with the profile having the email address and stores the association in the registration data store . Flow then moves to operation and the registration service generates an online communication session account identifier and online communication session credentials and transmits them to the client device A at operation .

There are different ways to validate email addresses in different embodiments. With reference to which is a flow diagram that illustrates exemplary operations for validating an email address at operation the client device A determines whether it includes an email client that includes an account for an email address that it has tried to register and has not received a positive validation email message. If it does not include such an email client then flow moves to operation otherwise flow moves to operation .

At operation the email account is automatically periodically checked for a validation email message e.g. the validation email message transmitted in operation . In one embodiment the online communication session application periodically requests the email client to check for the validation email message the email client may poll the email server to check for the validation email message . The validation email message is identified by a set of one or more criteria including the From field the To field and a validation token the validation token may be unique for each email address being validated that is used to validate the email address. The validation token may be located in the header or the body of the validation email message. If the validation email message is received then flow moves from operation to operation otherwise flow moves to operation .

At operation the validation email message is returned to the online communication session application and it parses the message to locate the validation token. After locating the validation token the online communication session application transmits an email address validation message to the registration service with the validation token the email address the profile ID and profile credentials. Thus in this embodiment the email address is automatically validated without requiring the user to click on a link or otherwise validate the email address. In one embodiment after receiving the message and determining that the profile credentials are valid the registration service transmits an email validated push message via the push notification service to the device that indicates that the email address has been successfully validated. Thus flow moves from operation to operation and the client device A waits to receive the email address validated push message.

If a validation email message has not been received then flow moves to operation where the client device determines whether an email validated push message has been received that indicates that the email address that is trying to be registered has been validated. If such a message is received then flow moves to operation otherwise flow moves back to operation .

At operation the client device A does not include an email client that includes an account for the email address that is being registered the client device A waits to receive an email validated push message has been received that indicates that the email address that is trying to be registered has been validated. If such a message is received then flow moves to operation otherwise flow remains at operation .

At operation the client device A displays that the email address has been validated and queries the user to continue with the registration process with that email address. If the client device A receives input indicating to continue with the registration process then flow moves to operation and the client device A transmits an active email request that includes the email address the profile ID and the profile credentials to the registration server. The operations described beginning at operation of are then performed. If the client device A receives input indicating that the user does not want to continue with the registration process then flow moves from operation to operation and the process exits.

Flow then moves to operation and the registration service updates the validation state for the email address in the profile records . Flow then moves to operation and the registration service determines whether there are client devices that are associated with the online communication session profile that have asked to validate the email address that have not received an email address validated message. For example the registration service accesses the profile record for the online communication session profile to determine which client devices e.g. as identified by unique push tokens have asked to validate the email address and which have not received an email address validation message for that email address. For each such client device the registration service transmits an email validated push message to that client device that includes the profile ID profile credentials and the email address that has been validated at operation . The email validated push message may also include a status update to indicate that the email address has been validated. If there are no devices that have asked to validate the email address that have not received an email address validated message then flow moves to operation and the process exits.

As illustrated in a general network topology implemented in one embodiment can include a number of client devices A N A N respectively communicating with one another and with one or more services and over a network . Although illustrated as a single network cloud the network can include a variety of different components including public networks such as the Internet and private networks such as local Wi Fi networks e.g. 802.11n home wireless networks or wireless hotspots local area Ethernet networks cellular data networks e.g. 3G 4G Edge etc. and WiMAXs networks to name a few. The client devices A N may connect to the network over different network links. For example client device A may be connected to a home Wi Fi network represented by network link A and the client device N may be connected to a 3G network e.g. Universal Mobile Telecommunications System UMTS High Speed Uplink Packet Access HSUPA etc. over the network link N. Each of the network links A N over which the client devices A N are connected may be coupled to a public network such as the Internet through a gateway and or NAT Network Address Translation device not shown in thereby enabling communication between the various client devices A N over the public network. However if two client devices are on the same local or private network e.g. the same Wi Fi network then the two devices may communicate directly over that local private network bypassing the public network. It should be noted of course that the underlying principles of the invention are not limited to any particular set of network types or network topologies.

Each of the client devices A N can communicate with a connection data exchange CDX service an invitation service a registration service a push notification service and a relay service . In one embodiment the services can be implemented as software executed across one or more physical computing devices such as servers.

In one embodiment the CDX service operates as a central exchange point for connection data required to establish online communication sessions between two or more client devices. Specifically one embodiment of the CDX service generates NAT traversal data sometimes referred to as Hole Punch data in response to client device requests to enable external services and clients to communicate through the NAT of each client device i.e. to punch a hole through the NAT to reach the device . For example in one embodiment the CDX service detects the external IP address and port needed to communicate with the client device and provides this information to the client device. In one embodiment the CDX service also receives and processes lists of client devices generated by the invitation service and efficiently and securely distributes connection data to each of the client devices included on the lists as described in detail below .

Users of the client devices A N use the invitation service to invite users to participate in collaborative online communication sessions e.g. P2P video conferencing P2P instant messaging chats conference etc. . For example a user of the client device A requests an online communication session with one or more users of one or more different client devices by transmitting an invitation request to the invitation service that includes an online communication session endpoint identifier of each of the other users. The online communication session endpoint identifier may be different in different embodiments e.g. a telephone number a username e.g. an Apple ID an email address a mailing address a MAC address or other identifier . The invitation service reads the online communication session endpoint identifier s from the invitation request and performs a lookup in the registration data store to locate the client device s that are associated with the online communication session endpoint identifier s .

The client devices A N use the registration service to register for online communication sessions. For example in one embodiment when each of the client devices A N is powered on and is activated on the network it causes its identifying token e.g. its push token to be associated with an online communication session endpoint identifier. The associations are stored in the registration data store . In one embodiment the client devices A N register for participation for online communication session service using the registration service as described with respect to while in other embodiments the registration process occurs differently e.g. by providing both their push token and their online communication session endpoint identifier .

The push notification service uses the push tokens of the client devices A N to transmit push notifications to the client devices A N. In one embodiment the push notifications are used to transmit the invitations for the online communication sessions. The relay service establishes online communication session connections between client devices when the NAT types of the client devices are not compatible or P2P connection establishment has failed between the client devices.

In one embodiment communication between the client devices and the CDX service is established using a relatively lightweight network protocol such as User Datagram Protocol UDP sockets. As is known by those of skill in the art UDP socket connections do not require hand shaking dialogues for guaranteeing packet reliability ordering or data integrity and therefore do not consume as much packet processing overhead as TCP socket connections. Consequently UDP s lightweight stateless nature is useful for servers that answer small queries from a vast number of clients. Moreover unlike TCP UDP is compatible with packet broadcasting in which packets are sent to all devices on a local network and multicasting in which packets are sent to a subset of devices on the local network . As described below even though UDP may be used security can be maintained on the CDX service by encrypting NAT traversal data using session keys.

In contrast to the low overhead lightweight network protocol used by the CDX service in one embodiment communication between the client devices A N and the invitation service registration service push notification service and or the relay service is established with an inherently secure network protocol such as Hypertext Transfer Protocol Secure HTTPS which relies on Secure Sockets Layer SSL or Transport Layer Security TLS connections. Details associated with these protocols are well known by those of skill in the art.

While embodiments described in reference to are specific to using push tokens and push notifications other embodiments are not so limited. For example in other embodiments any registry or mapping of client devices to unique tokens may be used to associate identifying tokens with client devices and to provide a trusted method of associating the identity of the client device with a uniquely identified token.

At operation the client device A requests its connection data from the connection data exchange . The connection data includes information for client devices to exchange with each other to establish an online communication session e.g. a P2P session . Connection data includes the IP address of the client device e.g. the public IP address the port number of the request and other information e.g. priority information etc. . The connection data exchange determines the connection data of the client device A e.g. the public private IP addresses and ports NAT type of the client device A s NAT device . At operation the connection data exchange returns the connection data to the client device A .

At operation the client device A transmits an online communication session invitation request to the invitation service to invite the client device B to an online communication session e.g. a P2P video conference a P2P instant messaging session etc. . In one embodiment the invitation includes the connection data of client device A which may include public private IP addresses and ports for client device A and the NAT type for client device A s NAT device and an online communication session endpoint identifier associated with the user at the client device B e.g. a telephone number of client device B a username of the user e.g. an Apple ID an email address a mailing address a MAC address etc. . The online communication session invitation request can take the form of an HTTPS request and may include a client certificate signed by a pre specified certificate authority.

At operation the invitation service determines the push token s associated with the online communication session endpoint identifier included in the request of operation . For example the invitation service accesses the registration data store to determine the push token s that are associated with the online communication session endpoint identifier. As illustrated in the push token is assigned to the client device B and thus is associated with its online communication session endpoint identifier. illustrates an exemplary registration data store according to one embodiment. As illustrated in each of the online communication session identifier records includes a push token field and an online communication session identifier field . As illustrated in the same online communication session identifier may be associated with multiple push tokens. In such a case multiple invitations will be transmitted e.g. one per push token .

The invitation service transmits a push request message to the push notification service . At operation the push notification service transmits an online communication session invite request in the form of a push notification message to the client device B . The request includes the connection data the online communication session endpoint identifier and the push token of the client device A the push token . The invite request may also include information specific to the online communication session to provide the user of the client device B with information about the invite e.g. the name of the person sending the invite e.g. username real name phone number or some combination thereof what the invite is for e.g. a P2P video conference a P2P instant messaging session etc. etc. .

The online communication session invite request will be received and displayed on the client device B if it is turned on and operating correctly. The invite request includes a mechanism for the user to accept or decline the invitation e.g. an accept button and a decline button . The user at the client device A may receive a notification if the invite request is denied. Assuming that a user at the client device B accepts the invitation request at operation the client device B requests its connection data from the connection data exchange . The connection data exchange determines the connection data of the client device B e.g. the public private IP addresses and ports NAT type of the client device B s NAT device and at operation returns the connection data to the client device B .

The client device B then transmits an accept message to the invitation service at operation . The accept message includes the client device B s connection data and includes the push token of the client device A . The accept message may also contain an indication as to whether it is a retry from a previous failed direct P2P connection attempt between the client device A and client device B . The accept message can take the form of an HTTPS message.

In some embodiments the invitation service determines whether a P2P connection between the client device A and the client device B is feasible. At operation the invitation service determines whether a direct P2P connection between client devices A and B is feasible. For example in one embodiment if the accept message received from the client device B indicates that it is a retry from a previous failed direct connection attempt or a specified number of previous failed direct connection attempts then the invitation service may conclude that a direct P2P connection is infeasible. To determine feasibility the invitation service may compare the NAT type data for the client devices A and B to determine if the NAT devices of the client devices A and B will support a direct P2P connection. In one embodiment the accept message described above does not include an indication of previous failed attempts. Rather after a failed direct connection attempt either of the client devices may transmit a special relay invitation request e.g. in place of the invite request at operation in indicating that a relay connection is needed. In response the invitation service may automatically invoke the relay operations described herein as described below .

Certain combinations of NAT types are known to be incompatible for establishing P2P connections. For example a full cone NAT may be used with any other NAT type except a closed firewalled NAT to establish a direct P2P connection. By contrast a symmetric NAT can only be used with a full cone NAT to establish a direct P2P connection. The feasibility of combining various NAT types in one embodiment is set forth in the NAT compatibility table shown in in which columns represent NAT types of one client device e.g. client device A and rows represent NAT types of the other client device e.g. client device B . A 1.0 in a cell indicates that the NAT types in the associated row and column are compatible and a 0.0 indicates that the NAT types are incompatible.

If the invitation service determines that a direct P2P connection is feasible then the invitation service transmits a push request to the push notification service to transmit acceptance of the invitation request. Thus at operation B the push notification service transmits an online communication session accept message in the form of a push notification to the client device A . The accept message includes the connection data the online communication session endpoint identifier and the push token of the client device B . The accept message will be displayed on the client device A . Since the client devices A and B have each other s connection data the client devices A and B have sufficient information to establish a direct P2P connection. Thus at operation A the client devices A and B establish a direct P2P connection using the exchanged connection data. The direct P2P connection may be established through known mechanisms e.g. using Internet Connectivity Establishment ICE or other known P2P connectivity mechanisms .

If however the invitation service determines that a direct P2P connection is infeasible then it transmits a relay lookup request at operation B to the relay service to determine one or more relay hosts for the client devices A and B to use for the connection. The relay lookup request may contain the networking information for the client devices A and B e.g. NAT traversal connection data and or NAT type data which is used by the relay service to select appropriate relay hosts for both of the client devices.

As illustrated in in one embodiment the relay service includes a relay lookup module a multiple relay hosts A B and a relay host database containing network information related to each of the relay hosts A B. While illustrates two relay hosts it should be understood that there may be more or less relay hosts in some embodiments. The invitation service transmits a relay lookup request to the relay lookup module which queries the relay host database using the network information for the client devices A and B. Upon receiving the database results the relay lookup module provides a response identifying the selected relay hosts A B at operation B to the invitation service .

In one embodiment the relay lookup response contains a relay token generated by the relay service and the network addresses IP addresses ports of the selected relay hosts A B to be used by client devices A and B for the relay connection. In one embodiment the relay token is associated with the relay session and is used by the relay hosts A B to authenticate the client devices A and B upon connecting to the relay service . The token may take on various forms including for example unique ID relay session ID code a digital certificate and or a unique encryption key associated with the relay session.

The invitation service transmits a relay response to the client devices A and B indicating that a relay connection will be made. In one embodiment the relay response to the client device B can include the relay token and the network information for the relay host B. In one embodiment the response to the client device B can be sent directly bypassing the push notification service because it is being sent in response to the client device B s invite accept message. The invitation service also transmits a relay response to the client device A which can include the relay token and the network information for relay host A A. In this instance the response is pushed to client device A via the push notification service .

At operation B the client device A uses the network information for relay host A to establish a connection with the relay service . Similarly at operation B the client device B uses the network information for relay host B to establish a connection with the relay service . In each of these transactions new holes are opened in any NAT firewalls of the client devices A and B and the NAT traversal connection data for the client devices A and B may be determined by the relay service and returned to client devices A and B respectively e.g. by determining the public IP port for the devices . In one embodiment the relay service and the client devices A and B implement the Traversal Using Relay NAT TURN protocol which as understood by those of skill in the art allows an element behind a NAT or firewall to receive incoming data over TCP or UDP connections.

At operation B the client device A transmits a relay update to the invitation service which is forwarded to the push notification service and pushed to the client device B at operation B. Similarly at operation B the client device B transmits a relay update to the invitation service which is forwarded to the push notification service and pushed to client device A at operation B. The relay update transmitted by the client device A can include the session token each device s online communication session endpoint identifier and the NAT traversal connection data determined by the relay service

At operation B and B the client devices A and B respectively establish an online communication session connection through the relay service . In one embodiment the relay connections can be established when client device A sends the NAT traversal connection data of client device B to the relay service and vice versa thereby allowing the relay service to determine the correct path to each peer s relay host A B.

Using the techniques described above the invitation service may be implemented as a stateless service which is inherently scalable and resilient even in a large scale system with a vast number of client devices. For example because the push notification service is inherently capable of locating and pushing content to registered client devices the invitation service is not required to track the current location of each device. Additionally because devices can transmit NAT traversal connection data with requests and responses the invitation service is never required to maintain any per connection state information thereby reducing the storage and processing requirements of the invitation service. Such an implementation is particularly useful in a large scale system.

While describes a user at a client device inviting a single user to an online communication session embodiments are not so limited. For example in some embodiments a user at a client device may invite multiple users to an online communication session. For example the user may transmit a single invite request message to the invitation service with multiple online communication session endpoint identifiers to invite multiple users at different client devices to participate in an online communication session.

In some situations a user may have multiple client devices that are associated with the same online communication session endpoint identifier. is a data flow diagram illustrating exemplary operations for managing invitations when a user has multiple client devices that are associated with the same online communication session endpoint identifier.

The client device A operated by the user A transmits a request for its connection data from the connection data exchange at operation . The connection data exchange returns client device A s connection data at operation . The client device then transmits an online communication session invitation request to the invitation service with a user ID B to invite the user B to an online communication session e.g. a P2P video conference a P2P instant messaging session a video call etc. . The invite request includes A s connection data.

The invitation service performs a directory lookup at operation based on B s ID included in the invite request message. In this example the directory lookup operation returns a push token for the client device B and a push token for the client device B. Thus the client devices B and B are associated with B s ID. The invitation service then transmits a push request message at operation to the push notification service to push the invite request messages to the client device B and the client device B . The push notification service transmits an online communication session invite request in the form of a push notification message to the client device B at operation and to the client device B at operation . Each invite request message includes the connection data of the client device A the online communication session endpoint identifier used by user A and the push token of the client device A . The invite requests may also include information specific to the online communication session e.g. the name of the person sending the invite e.g. username real name phone number or some combination thereof what the invite is for e.g. a P2P video conference a P2P instant messaging session etc. etc. . Thus an online communication session invite request is sent to each of the devices that are associated with the online communication session endpoint identifier included in the original invitation request.

In one embodiment the invitation service transmits a status message to the inviting client device to indicate which client device s the invite was transmitted to. Thus at operation the invitation service transmits an invite status update to the client device A that indicates that an online communication session invite request was sent to the client device B and the client device B . In one embodiment the client device A tracks which client devices accept the invitation and keeps the other client devices apprised of the state of the online communication session.

In one embodiment the client device B and the client device B will display an invitation request if they are powered on and capable of receiving the invite request. In the example illustrated in a user at the client device B will be accepting the invitation. Thus at operation the client device B requests its connection data from the connection data exchange . The connection data exchange determines the connection data of the client device B and at operation returns it to the client device B .

The client device B then transmits an accept message to the invitation service at operation . The accept message includes the connection data of the client device B and the push token of the client device A . The accept message may also contain an indication as to whether it is a retry from a previous failed direct P2P connection attempt between the client device A and the client device B . In addition the accept message can also include the online communication session endpoint identifiers of A and B and the push token for the client device B .

In some embodiments after receiving an accept message to an online communication session the invitation service determines whether a direct P2P connection is feasible. Thus at operation the invitation service performs a direct P2P compatibility check to determine whether a direct P2P connection between the client device A and the client device B is feasible in a similar fashion as previously described. If the client devices are compatible for a direct P2P connection then the operations described in reference to beginning at operation are performed. If the client devices are not compatible for a direct P2P connection then the operations described in reference to beginning at operation are performed.

With reference to which illustrates operations performed when a direct P2P connection is feasible at operation the invitation service transmits a push request to the push notification service to transmit acceptance of the invitation by the client device B . At operation the push notification service transmits an online communication session accept message in the form of a push notification to the client device A . This accept message includes the connection data and the push token of the client device B and the online communication session endpoint identifier used by the user B.

In one embodiment sometime after receiving the accept message that indicates that the client device B has accepted the invite the client device A informs the client device B that client device A has accepted the invite. Thus at operation the client device A transmits an invite update request to the invitation service that includes the online communication session endpoint identifier of user B and indicates that the client device B has accepted the invite. The invite update request may also instruct or indicate to the invitation service which client device associated with the online communication session endpoint identifier of user B should receive the invite update message in this example the client device B should receive the invite update message .

The invitation service performs a directory lookup based on the online communication session endpoint identifier of user B to determine the push token of the client device B . After determining the push token the invitation service transmits a push request at operation to the push notification service to push the invite update message to the client device B . At operation the push notification service transmits an invite update message in the form of a push notification message to the client device B . The invite update message indicates that the client device B has accepted the online communication session invitation. The client device B may display the invite update message and may maintain state of the online communication session between the client device A and the client device B e.g. the duration of the online communication session etc. . As will be described in greater detail with reference to in one embodiment the client device B can transmit a transfer request to cause the online communication session to transfer from the client device B to the client device B .

Sometime after receiving the invite accept message in operation the client device A and the client device B establish a direct P2P connection using the exchanged connection data at operation . The direct P2P connection may be established through known mechanisms e.g. using Internet Connectivity Establishment ICE or other known P2P connectivity mechanisms . It should be understood that the operation may be performed prior to or during the operations .

While describes an example where only a single client device accepts the invite message in some situations multiple client devices may accept an invitation to an online communication session directed to a single user. For example the client device B and the client device B may accept the invitation in some situations. In one embodiment the client device A establishes an online communication session with the first client device it receives an accept message from. The client device A may cause a cancel message to be sent to the other client device s e.g. the cancel message may be transmitted to the invitation service and then pushed via the push notification service to those other client device s . Referring back to operation of if a direct P2P connection is not feasible between the client device A and client device B then the operations described in are performed. is a data flow diagram illustrating exemplary operations that are performed when a direct P2P connection is infeasible. At operation the invitation service transmits a relay lookup request to the relay service to determine a relay host to be used by the client device A and the client device B . The relay lookup request may contain the networking information for the client devices e.g. NAT traversal connection data and or NAT type data which is used by the relay service to select appropriate relay hosts for the client devices. As illustrated in one embodiment of the relay service includes a plurality of relay hosts A B and a relay host database containing network information related to each of the relay hosts. For example the invitation service transmits a relay lookup request to a relay service which queries the relay host database using the network information for the client devices. Upon receiving the database lookup results the relay service provides a relay lookup response at operation identifying the selected relay hosts A B. In one embodiment the relay lookup response contains a relay token generated by the relay service and the network addresses IP addresses ports of the relay hosts A B to be used by the client devices for the relay connection. In one embodiment the relay token is associated with the relay session and is used by the relay hosts A B to authenticate the client device A and the client device B upon connecting to the relay service . The token may take on various forms including for example unique ID relay session ID code a digital certificate and or a unique encryption key associated with the relay session.

The invitation service then transmits a relay response to the client device B at operation that contains an indication that a relay connection will be made. In one embodiment the relay response can include the relay token and the network information for the relay host selected for the client device B . In one embodiment the relay response can be sent directly to the client device B bypassing the push notification service . The invitation service also transmits a relay response to the client device A at operation that includes the relay token and the network information for the relay host selected for the client device A . In some embodiments the relay response is pushed to mobile device A via the push notification service .

At operation the client device A then transmits an invite update request to the invitation service that includes the online communication session endpoint identifier of user B and indicates that the client device B has accepted the invite. The invite update request may also instruct or indicate to the invitation service which client device associated with the online communication session endpoint identifier of user B should receive the invite update message in this example the client device B should receive the invite update message .

The invitation service performs a directory lookup based on the online communication session endpoint identifier of user B to determine the push token of the client device B . After determining the push token the invitation service transmits a push request at operation to the push notification service to push the invite update message to the client device B . At operation the push notification service transmits an invite update message in the form of a push notification message to the client device B . The invite update message indicates that the client device B has accepted the online communication session invitation. The client device B may display the invite update message and may maintain state of the online communication session between the client device A and the client device B e.g. the duration of the online communication session etc. . In one embodiment the client device B can transmit a transfer request to cause the online communication session to transfer from the client device B to the client device B .

At operation the client device A uses the network information for its selected relay host to establish a connection with the relay service . Similarly at operation the client device B uses the network information for its selected relay host to establish a connection with the relay service . In each of these operations new holes can be opened in any NAT firewalls of the client devices and the NAT traversal connection data for the client devices may be determined by the relay service and returned to them e.g. by determining the public IP port of the client devices . In one embodiment the relay service and the client device A and the client device B implement the Traversal Using Relay NAT TURN protocol which as understood by those of skill in the art allows an element behind a NAT or firewall to receive incoming data over TCP or UDP connections.

At operation the client device A transmits a relay update to the invitation service which is forwarded to the push notification service at operation and pushed to the client device B at operation . Similarly at operation the client device B transmits a relay update to the invitation service which is forwarded to the push notification service at operation and pushed to the client device A at operation . The relay update message transmitted by the client device A can include the relay token each online communication session identifier and the NAT traversal connection data determined by the relay service at operations and . In one embodiment the relay update operations are performed since one or more of the client device s NAT information may have changed. Finally at operations and the client device A and the client device B respectively establish a P2P connection through the relay service . In one embodiment the relay connections can be established responsive to the client device A transmitting the NAT traversal connection data of the client device B to the relay service and vice versa thereby allowing the relay service to determine the correct path to each peer s relay host.

Sometime after the online communication session has ended at operation the client device A transmits an online communication session update request to the invitation service . The online communication session update is sent to notify the client device B which was not part of the online communication session of the termination of the online communication session. The online communication session update request may include user B s online communication session identifier and may instruct or indicate to the invitation service which client device associated with user B e.g. the client device B is to receive the update.

The invitation service performs a directory lookup operation based on the online communication session endpoint identifier of user B to determine the push token of the client device B . After determining the push token the invitation service transmits a push request at operation to the push notification service to push the update message to the client device B . At operation the push notification service transmits an online communication session update message in the form of a push notification message to the client device B . The online communication session update message indicates that the online communication session between the client device A and the client device B has ended.

At operation the client device B requests its connection data from the connection data exchange and receives the requested connection data at operation if it does not already know its connection data . The client device B then transmits a transfer request message at operation to the invitation service that includes the push token of the client device A and the connection data of the client device B . The transfer request message may also include the online communication session endpoint identifiers of A and or B and or the push token for the client device A .

The invitation service then transmits a push request to the push notification service at operation to cause the push notification service to transmit the transfer message in the form of a push notification to the client device A . The invitation service also performs a direct P2P compatibility check at operation to determine whether a direct P2P connection between the client device A and the client device B is feasible. For purposes of this example a direct connection is feasible however it should be understood that an online communication session transfer may also occur in a relay situation.

At operation the push notification service transmits the transfer request message to the client device A . The transfer request message may include B s online communication session endpoint identifier and the connection data for the client device B . The transfer request message also indicates which device i.e. the client device B that is requesting the online communication session transfer e.g. through a device ID and or push token of the client device B . The transfer request message may cause the online communication session application of the client device A to display the transfer request and may allow the user to accept or deny the transfer request. Assuming that the transfer request is accepted the client device A establishes a direct P2P connection with the client device B using the exchanged connection data at operation . It should be understood that at this point the online communication session between the client device A and the client device B is active. The client device A then transmits an online communication session update to the client device B that indicates that the online communication session will transfer to the client device B . In one embodiment this update message is transmitted on the existing online communication session between the client devices. The client device A then switches to the online communication session with the client deice B at operation and tears down the online communication session with the client device B at operation .

While embodiments have been described with reference to inviting a single user to an online communication session which may or may not be associated with multiple client device in some embodiments multiple users may be invited to an online communication session. is a flow diagram illustrating exemplary operations for initiating and establishing an online communication session with multiple users.

The client device requests its connection data from the connection data exchange at operation and the requested connection data is returned at operation . At operation the client device A transmits an invitation request to the invitation service that includes the connection data of the client device A an online communication session endpoint identifier associated with user B and an online communication session endpoint identifier associated with user C. Thus a user at the client device A is inviting multiple users to an online communication session.

The invitation service performs a directory lookup operation to determine the push tokens associated with user B s online communication session endpoint identifier and user C s online communication session endpoint identifier. In this example and for purposes of simplicity the directory lookup returns a result of the client device B being associated with user B s online communication session endpoint identifier and the client device C being associated with user C s online communication session endpoint identifier. The invitation service then transmits a push request to the push notification service to request that the push notification service transmit the invitations in the form of push messages to the client devices B and C. The push notification service then transmits the invite request to the client device B at operation and transmits the invite request to the client device C at operation . Each invite request message includes the connection data of the client device A the online communication session endpoint identifier used by user A and the push token of the client device A .

In one embodiment the invitation service transmits a status message to the inviting client device to indicate which client device s the invite was transmitted to. Thus at operation the invitation service transmits an invite status update to the client device A that indicates that an online communication session invite request was sent to the client device B and the client device C . In one embodiment the client device B and the client device C will display an invitation request if they are powered on and capable of receiving the invite request.

In the example illustrated in each of the invitations will be accepted. Thus at operation the client device B requests its connection data from the connection data exchange . The connection data exchange determines the connection data of the client device B and at operation returns it to the client device B . Similarly the client device C requests its connection data from the connection data exchange at operation . The connection data exchange determines the connection data of the client device C and at operation returns it to the client device C . The client device B then transmits an accept message to the invitation service at operation and the client device C transmits an accept message to the invitation service at operation . The invitation service then performs a direct P2P compatibility check to determine whether a direct P2P connection is feasible between the client device A and the client device B and between the client device A and the client device C . For purposes of this example a direct P2P connection is feasible between the client devices. Thus using the exchanged connection data the client device A and the client device B establish a direct P2P connection for the online communication session at operation and the client device A and the client device B establish a direct P2P connection for the online communication session at operation . In this example the client device A essentially acts as the host of the online communication session. Thus data being transmitted between the client device B and the client device C is relayed by the client device A . In other embodiments a full mesh of connections is established between the parties. In such an embodiment another P2P connection would be established between the client device B and the client device C .

While embodiments described herein describe a mechanism to register client devices for online communication sessions in some embodiments the registration may implement an API to allow different applications to register online communication session endpoint identifier and push tokens. The API implemented in one embodiment is an interface implemented by a software component hereinafter API implementing software component that allows a different software component hereinafter API calling software component to access and use one or more functions methods procedures data structures and or other services provided by the API implementing software component. For example an API allows a developer of an API calling software component which may be a third party developer to leverage specified features provided by an API implementing software component. There may be one API calling software component or there may be more than one such software component. An API can be a source code interface that a computer system or program library provides in order to support requests for services from a software application. An API can be specified in terms of a programming language that can be interpretative or compiled when an application is built rather than an explicit low level description of how data is laid out in memory.

The API defines the language and parameters that API calling software components use when accessing and using specified features of the API implementing software component. For example an API calling software component accesses the specified features of the API implementing software component through one or more API calls sometimes referred to as function or method calls exposed by the API. The API implementing software component may return a value through the API in response to an API call from an API calling software component. While the API defines the syntax and result of an API call e.g. how to invoke the API call and what the API call does the API typically does not reveal how the API call accomplishes the function specified by the API call. Various function calls or messages are transferred via the one or more application programming interfaces between the calling software API calling software component and an API implementing software component. Transferring the function calls or messages may include issuing initiating invoking calling receiving returning or responding to the function calls or messages. Hence an API calling software component can transfer a call and an API implementing software component can transfer a call.

By way of example the API implementing software component and the API calling software component may be an operating system a library a device driver an API an application program or other software module it should be understood that the API implementing software component and the API calling software component may be the same or different type of software module from each other . The API calling software component may be a local software component i.e. on the same data processing system as the API implementing software component or a remote software component i.e. on a different data processing system as the API implementing software component that communicates with the API implementing software component through the API over a network. It should be understood that an API implementing software component may also act as an API calling software component i.e. it may make API calls to an API exposed by a different API implementing software component and an API calling software component may also act as an API implementing software component by implementing an API that is exposed to a different API calling software component.

The API may allow multiple API calling software components written in different programming languages to communicate with the API implementing software component thus the API may include features for translating calls and returns between the API implementing software component and the API calling software component however the API may be implemented in terms of a specific programming language.

It will be appreciated that the API implementing software component may include additional functions methods classes data structures and or other features that are not specified through the API and are not available to the API calling software component . It should be understood that the API calling software component may be on the same system as the API implementing software component or may be located remotely and accesses the API implementing software component using the API over a network. While illustrates a single API calling software component interacting with the API it should be understood that other API calling software components which may be written in different languages or the same language than the API calling software component may use the API .

The API implementing software component the API and the API calling software component may be stored in a machine readable medium which includes any mechanism for storing information in a form readable by a machine e.g. a computer or other data processing system . For example a machine readable medium includes magnetic disks optical disks random access memory read only memory flash memory devices etc.

In some embodiments a client device can transition from an established audio only circuit switched call to a video call without significantly interrupting communication between the parties. For example one party of an established audio only circuit switched call selects to transition to a video call which includes video frames and audio which causes a video call initiation message a form of an online communication session invitation message to be sent to the other participant s of the call. If the other participant s accept the video call invitation a P2P connection will be established between the participant s client devices. While the P2P connection is being negotiated the participants are able to communicate through the audio only circuit switched call. After the P2P connection is established and video is communicated between the parties the client devices transition to the video call. The audio only circuit switched call is then dropped and the participants are able to communicate through the video call.

As illustrated in the graphical user interface is currently being displayed on the display screen . The user of the client device is currently participating in an audio only phone call with the phone number 408 555 1234 . The graphical user interface includes several different options for the user during the call. For example the client device performs the following responsive to receiving user input e.g. tapping or other predefined gestures on the appropriate icon ends the call when input is applied to the end call icon mutes the audio call responsive to input being applied to the mute icon displays a numeric keypad e.g. to add additional phone numbers to the call responsive to input being applied to the keypad icon places the call on speakerphone responsive to input being applied to the speaker icon which changes the audio output to the speaker adds a call responsive to input being applied to the add call icon places the call on hold responsive to input being applied to the hold icon displays the user s contact list responsive to input being applied to the contacts icon and transitions to a video call responsive to input being applied to the video call icon .

As illustrated in the client devices and are connected through an audio only circuit switched call either the user of the client device or the user of the client device initiated the call . Thus the users of the client device and can communicate over the established circuit switched audio call. At block the client device receives input to transition to a video call. For example the user has selected to transition to a video call by tapping or performing another defined gesture on the video call icon .

Flow then moves to block where the client device causes a video call invite message which is a form of an online communication session invitation request message to be sent to the client device as identified by the phone number of the client device . In some embodiments the online communication session invitation request message is sent using the architecture described in . Flow then moves to block .

At block the client device determines whether the audio is presently being routed through the speakerphone e.g. the speaker or through the headphone headset jack. If it is then flow moves to block . If it is not then flow moves to block where client device routes the audio through the speakerphone of the client device e.g. the speaker and flow moves to block .

At block the client device displays a video preview of what the front facing camera is currently capturing to allow the user of the client device to prepare for the video call e.g. to properly position the client device for the video call . illustrates the client device displaying the video preview that displays video of what the front facing camera is currently capturing. Although not illustrated in in some embodiments a cancel button is also displayed on the GUI that allows the user to cancel the video call invitation. Flow moves from block to block .

At block the client device receives a video call invite message inviting the user of the client device to a video call. Flow moves from block to block . In some embodiments the client device has an architecture that is similar to the client device . For example as illustrated in the client device includes the speaker which is used during speakerphone mode front facing camera which captures video used for the video call microphone which captures sound the receiver speaker which is typically used when a user holds the client device to their ear during a call and the display screen which is a touch screen in some embodiments . The client device may also include a headphone headset jack a proximity sensor an ambient light sensor accelerometer s and other components. It should be understood that the architecture of the client device is exemplary and different architectures that include more or less components may be used in embodiments.

At block the client device plays one or more audio tones indicating receipt of the message to alert the user of the message. The audio tones may be different in different embodiments e.g. the audio tones may be similar to call waiting tones used on the client device although they are not originated by the carrier associated with the client device the audio tones may be unique and specific for video calls etc. . In some embodiments the client device does not play audio tones indicating receipt of the video call invite message if the client device is not near the user s ear e.g. as indicated by a proximity sensor of the client device and or if the call is currently on speakerphone mode. Flow moves from block to block .

At block the client device displays the video call invite message and optionally displays a video preview of what the front facing camera is currently capturing to allow the user of the client device to prepare for the video call and flow moves to block . illustrates the GUI that displays the video call invite . As illustrated in the video call invite includes an accept button a deny button and the video preview which shows what the front facing camera is currently capturing . Although illustrates the video call invite including the video preview that is the video preview is contained within the video call invite in other embodiments the video preview is located outside and or is overlapping the video call invite . The user of the client device may select the accept button to accept the video call invite e.g. by tapping or performing another predefined gesture for input on the accept button and can select the deny button to deny the video call invite e.g. by tapping or performing another predefined gesture for input on the deny button .

At block the client device determines whether input has been received to accept the video call e.g. whether the user has accepted the video call invite by selecting the accept button . If the client device receives input to accept the video call then flow moves to block otherwise flow moves to block . At block the client device causes a video call accept message to be transmitted to the client device . In some embodiments the accept message is transmitted to the client device using the architecture described in . Flow then moves to block .

At block it is determined whether input has been received to reject the video call request e.g. whether the user has rejected the video call invite by selecting the deny button . If the client device receives input to deny the video call invitation then flow moves to block otherwise flow moves back to block . At block the client device causes a video call deny message to be transmitted to the client device . The client device may also clear the video call invite and stop displaying the video preview . In some embodiments the video call deny message is transmitted to the client device using the architecture described in .

At block the client device determines whether it has received a video call accept message from the client device . If it has then flow moves to block otherwise flow moves to block where the client device determines whether it has received a video call deny message from the client device . If it has then flow moves to block otherwise flow moves back to block .

With reference to at block the user at the client device has accepted the video call invitation the client device determines whether audio is presently being routed through the speakerphone e.g. the speaker or the headset of the client device . If it is not then flow moves to block where the audio route is changed from the speaker to the speakerphone e.g. the speaker and flow moves to block . If the audio is already being routed through the speakerphone or a headset then flow moves to block .

At block the client device displays a video preview of what the front facing camera is currently capturing. The operation in block is performed only if the video preview is not currently being displayed as a result of the operation in block . Flow moves from block to block .

At blocks and the client devices and establish a P2P connection with each other. The P2P connection may be established through known mechanisms e.g. using Internet Connectivity Establishment ICE or other known P2P connectivity mechanisms . Assuming that the P2P connection is successfully established flow moves from blocks and to blocks and respectively where the client devices and begin transmitting video to each other over the P2P connection the video from the front facing video cameras and . In some embodiments the video includes both video frames and corresponding audio captured by the microphones and of the client devices and respectively while in other embodiments the video and audio are separate streams communicated across the P2P connection.

Flow moves from blocks and to blocks and respectively. At blocks and the client devices and respectively determine whether they have received one or more video frames from their peer. If they have then flow moves from blocks and to blocks and respectively. If they have not then flow remains at blocks and until one or more video frames have been received.

In some embodiments the client devices and wait to receive video frames from each other for a certain amount of time and if they do not exchange video frames over that time alternative action is taken. For example in some embodiments the video call is cancelled and a message is displayed on the screens of the client devices and that the video call could not be established. The video call may fail to establish for a number of reasons including that bandwidth is insufficient for the video call the video frames have failed to transmit or be received etc. While in some embodiments the client devices wait for a single frame of video before proceeding in other embodiments the client devices wait to receive a number of frames over a given time period e.g. a flow of video frames before proceeding.

At blocks and the client devices and respectively transition to the video call. Transitioning to the video call includes displaying the video that is being received and changing the audio route from the circuit switched audio call to the video call. In some embodiments the video preview e.g. the video preview moves to a corner of the screen and shrinks in size and the video being received from the peer is revealed. Thus it should be understood that until the audio route has been changed from the circuit switched audio call to the video call the participants can communicate through the circuit switched audio call that is the circuit switched audio call remains established while the video call is being negotiated . After transitioning to the video call the circuit switched audio call can be dropped. Thus flow moves from blocks and to blocks and respectively where the circuit switched audio call is dropped.

The client device then initiates a circuit switched audio call request to the client device e.g. the client device automatically calls the number of the client device . In some embodiments this is performed in the background and does not require user interaction. The call is routed through a number of network elements of the carrier network infrastructure e.g. base stations mobile switching centers etc. .

The client device receives and answers the circuit switched call . In one embodiment the client device displays the incoming call request and may play audio tones indicating the incoming call request e.g. call waiting tones or other tones and requires user intervention to answer the call. In another embodiment the client device automatically answers the call without user intervention and may or may not play audio tones indicating the incoming call request . After the call is answered the audio only circuit switched call is established between the client devices and .

After the audio only circuit switched call is successfully established the client devices and transition to the audio only call and respectively. For example transitioning to the audio only call includes changing the audio route from the video call to the circuit switched call stopping displaying the video that is being received and stopping transmitting video. The client device may also stop displaying the video preview. Thus it should be understood that while the circuit switched audio only call is being negotiated users at the client devices and can communicate through the video call that is the video call remains established while the audio only circuit switched call is being negotiated . After successfully transitioning to the audio only circuit switched call the client devices and end the P2P connection . The users at the client devices and may then communicate through the audio only circuit switched call.

While embodiments of the invention have been described in relation to a video call having two participants embodiments are not so limited as there may be more participants in the video call. In such embodiments the client device may display multiple video streams from each different participant in the video chat.

While embodiments of the invention have been described in relation to a video call having two participants where each participant transmits video embodiments are not so limited. For example in some embodiments only a single party may be transmitting video to the other participant s and those other participant s may only be transmitting audio. In some embodiments each participant may determine whether to suspend transmitting video at any point during the video call.

In some embodiments the quality of the video transmitted during the call is dynamically adjusted based on network conditions. For example during periods when the network is congested the bitrate of the video may be lowered. Similarly during periods when the network is relatively free of congestion the bitrate of the video may be increased. In some embodiments if network conditions prevent video from being transmitted the participant client devices automatically transition to an audio only circuit switched call. Thus if the bandwidth drops below a certain level the participant client devices may automatically transition to an audio only circuit switched call or may prompt the user to transition to an audio only circuit switched call .

In one embodiment the client devices include functionality to support interaction with a hands free device e.g. a headset a car kit over a WPAN Wireless Personal Area Network e.g. Bluetooth ZigBee etc. including support to manage IP video calls with the hands free unit. is a block diagram illustrating a client device interfacing with a hands free unit to manage IP video calls in accordance with one embodiment. The client device includes the ability to initiate video calls e.g. invite one or more recipients to an online communication session that is a video call and the ability to accept video calls. In some embodiments the client device also includes cellular telephony components to make and receive cellular telephone calls and or access the Internet or other network through a cellular connection.

As depicted in the client device includes the IP video call manager the telephony manager the audio manager and the hands free manager . In some embodiments the client device also includes the cellular call manager . The IP video call manager manages a P2P video call application including establishing an IP P2P video call over the IP network through the IP video call service as previously described herein. In one embodiment the IP video call service includes one or more of the invitation service the push notification service the registration service and or the registration service and the relay service . The cellular call manager manages the cellular components to make and receive audio only cellular telephone calls over the cellular network using the cellular audio call service .

The IP video call manager and the cellular call manager are coupled with the telephony manager . The telephony manager manages the telephony operations for both of the IP video call manager and the cellular call manager including tracking the call history both for video calls and audio only cellular calls and other information related to the calls. The telephony manager also interfaces with the hands free manager to provide hands free services via an external hands free device for IP video calls and cellular calls on behalf of the IP video call manager and the cellular call manager . In one embodiment a common message format is used between the IP video call manager the cellular call manager and the telephony manager to provide support for the hands free services for disparate protocol and call types IP video call and audio only cellular call . Thus the telephony manager provides similar support for hands free services regardless of whether the hands free services are for an IP video call or an audio only cellular call. This also prevents the hands free manager from the need to understand whether the hands free services are for an IP video call or for an audio only cellular call such that standard commands that are understandable by the hands free devices can be used to provide hands free services for IP video calls as well as for audio only cellular calls.

In one embodiment the telephony manager also arbitrates between the IP video call manager and the cellular call manager . For example the telephony manager can cause an IP video call to be placed on hold to switch to an established audio only cellular call and or cause an audio only cellular call to be placed on hold to switch to an IP video call.

The hands free manager provides support for hands free processing. In one embodiment the hands free manager implements a Bluetooth protocol stack for connection to Bluetooth compliant hands free devices such as Bluetooth headset and Bluetooth car kits. In one specific embodiment the hands free manager implements a Bluetooth headset profile e.g. as defined in the Headset Profile HSP 1.2 specification of Dec. 18 2008 and or a Bluetooth hands free profile e.g. as defined in the Hands Free Profile 1.5 HFP 1.5 specification of Nov. 25 2005 . The hands free manager allows the hands free unit to act as an auditory relay for an IP video call and for an audio only cellular call over the WPAN as well as perform other hands free services. For example in the case of an IP video call the audio portion of the call may be routed through the hands free unit instead of a speaker of the client device while the video portion of the call remains being displayed by the client device or by an attached display . The hands free unit also includes a microphone to capture audio information which is then transmitted to the client computing device . Thus a user can use the hands free unit to talk and or listen to audio during an IP video call and or during an audio only cellular call.

The hands free manager also supports other hands free services responsive to receiving input from the hands free unit including performing one or more of the following for IP video calls and or audio only cellular calls allowing a user to answer a call end a call place a call on hold mute a call increase decrease volume of a call transfer audio to the client device transfer audio to the hands free unit place a call and redial the last call. Thus a user can use the hands free unit to answer an IP video call end an IP video call place an IP video call on hold and or on mute increase decrease the volume of an IP video call transfer audio of the IP video call to be output to a speaker of the client device transfer audio from the client device to the hands free unit place an IP video call and redial the last IP video call.

The IP video call manager the cellular call manager and the hands free manager are also coupled with the audio manager . The audio manager routes audio of the IP video calls and the audio only cellular calls through different sources. For example the audio manager can cause the audio to be output through a speaker of the client device suitable for speakerphone mode through a speaker of the client device used when a user holds the client device to their ear during a call through a headset headphone jack to a headset or headphone that is plugged into the client device and through a peered hands free unit such as the hands free unit .

At operation the IP video call manager receives an IP video call invitation from another client device that invites the user of the client device to participate in an IP video call. The IP video call invitation may take the form of the invitation as described previously herein. The IP video call manager processes the invitation request including causing the invitation to be displayed at operation . For example the invitation request may be displayed in a similar way as the exemplary video call invitation illustrated in .

In addition the IP video call manager generates and transmits a call object to the telephony manager . The call object includes a set of parameters regarding the call. For example the call object parameters include one or more of a status of the call e.g. connecting and call participant identifier e.g. the phone number email address or other online communication session endpoint identifier a start time an indication whether it is an outgoing or incoming call and a call identifier used internally to identify the call.

In one embodiment the call object is a generic call object that while the parameters are based on the information from the IP video call invitation is in a format that is common for both IP video call invitation requests and incoming audio only cellular calls. Thus when receiving an incoming audio only cellular call the cellular call manager generates a incoming call object of the same format. Thus from the perspective of the telephony manager an IP video call invitation request or an incoming audio only cellular call appears to be same.

The telephony manager stores the information in the call object as part of a call history structure. The telephony manager also generates and sends an incoming call message to the hands free manager . In one embodiment the telephony manager only sends the incoming call message if there is a hands free device such as the hands free device peered with the client device e.g. the telephony manager first checks whether there is a hands free device that is peered with the client device . In other embodiments the telephony manager sends the incoming call message to the hands free manager regardless of whether there is a peered hands free device and the hands free manager determines whether to drop ignore the message or process it depending on whether there is a peered hands free device. For the purposes of and subsequent Figures it is assumed that the hands free device is peered to the client computing device . In one embodiment the incoming call message includes the call identifier.

Responsive to receiving the incoming call message the hands free manager causes a series of messages to be transmitted to the hands free device alerting it and the user that there is an incoming call. As depicted in the hands free manager establishes an audio connection e.g. a Synchronous Connection Oriented SCO link with the hands free device prior to sending a ring tone message over the established audio connection . This ring tone message is selected by the client device and may be customizable by the user of the client device . In one embodiment the ring tone message for IP video calls is different than the ring tone for audio only cellular calls. In another embodiment an audio connection is not established until after the call is answered. In such an embodiment a ring alert message is sent to the hands free device which then determines locally whether to play a ring tone to alert the user of the incoming call the ring alert message may also be sent prior to sending the ring tone message . In such an embodiment the ring alert message may be sent multiple times to the hands free device until the call is answered or terminated.

Sometime after receiving the ring alert message and or the ring message the hands free device transmits the answered message that indicates that a user has answered the call. For example the user has pressed an answer button on their hands free device or otherwise has taken action on the hands free device to answer the call. The hands free manager receives the answered message and transmits an answered message to the telephony manager . In one embodiment the answered message includes the call identifier. Although not illustrated in the hands free manager may also transmit an acknowledgement message to the hands free device responsive to receiving the answered message .

The telephony manager determines that the answered call message belongs to the call indicated in the call object e.g. by comparing the call identifier included in the message with the information stored from the call object and transmits a message to the IP video call manager that indicates that the call has been answered. Responsive to receiving this message the IP video call manager establishes an IP video call at an operation . For example the IP video call manager causes an IP video call accept message to be sent to an invitation service as described previously herein and a P2P connection is established either direct or through a relay with the computing device that transmitted the invitation.

Sometime after the IP video call has been established the IP video call manager transmits a call object to the telephony manager . The call object includes a similar set of parameters as the call object with the exception that the status has changed from connecting to connected. In one embodiment the call object is a generic call object that is in a format that is common for both established IP video calls and connected audio only cellular calls.

In addition sometime after the IP video call has been established audio manager routes the audio portion of the established IP video call through the hands free device . In one embodiment the IP video call manager or the telephony manager requests the audio manager to route the audio through the hands free device. The audio manager may also transmit a message to the hands free manager that indicates that the audio route will be changed to go through the hands free device . If an audio connection is not yet established the hands free manager will establish an audio connection with the hands free device . Assuming that there is an established audio connection the audio portion of the video call is routed to the hands free device . Thus the audio portion of the video call is handled through the hands free device while the video portion of the video call is displayed on the client device .

At operation the IP video call manager causes one or more IP video call invitation messages to be sent to other client device s to invite user s to an IP video call. The IP video call invitation message s may take the form of the invitation as described previously herein. The IP video call manager generates and transmits a call object to the telephony manager . Similar to the call object the call object includes a set of parameters regarding the call and is in a generic format. The telephony manager stores the information in the call object as part of a call history structure.

In one embodiment the telephony manager also generates and sends an outgoing call message to the hands free manager that indicates that there is an outgoing call. Responsive to this message the hands free manager establishes an audio connection with the hands free device if a custom in band ring tone is to be sent and then transmits a ring tone message to the hands free device . In other embodiment the hands free manager transmits only a ring tone alert message to the hands free device instead of establishing an audio connection and transmitting an in band ring tone.

Sometime after sending the IP video call invitation the IP video call manager receives an IP video call accept message which may take the form of a video call accept message as previously described herein. After receiving this message a P2P IP video call is established with the accepting client device at operation e.g. a P2P connection either direct or through a relay is established with the computing device that accepted the invitation .

Sometime after the IP video call has been established the IP video call manager transmits a call object to the telephony manager . The call object includes a similar set of parameters as the call object with the exception that the status has changed from connecting to connected. The call object is also in a generic format. In addition sometime after the IP video call has been established audio manager routes the audio portion of the established IP video call through the hands free device . In one embodiment the IP video call manager or the telephony manager requests the audio manager to route the audio through the hands free device. The audio manager may also transmit a message to the hands free manager that indicates that the audio route will be changed to go through the hands free device . If an audio connection is not yet established the hands free manager will establish an audio connection with the hands free device . Assuming that there is an established audio connection the audio portion of the video call is routed to the hands free device . Thus the audio portion of the video call is handled through the hands free device while the video portion of the video call is displayed on the client device .

The hands free manager receives a call request from the hands free device . The call request may be generated in response to a user selecting a phone number or other online communication session endpoint identifier to be called. For example the user may select a redial button on the hands free device which requests that the last call be redialed. The hands free manager transmits a call request message to the telephony manager . The telephony manager determines whether the call request message is requesting a call to an identifier that is associated with a video call and thus the call request message should be sent to the IP video call manager or associated with a phone number for an audio only cellular call and thus should be sent to the cellular call manager . For example in case that the call request is a redial request the telephony manager accesses the last dialed call which can be either an IP video call or an audio only cellular call to determine where to send the call request. As depicted in the telephony manager sends the call request message to the IP video call manager . The call request message includes the identifier of the requested participant for the video call e.g. a phone number an email address or other online communication session endpoint identifier . Responsive to receiving the call request message the IP video call manager causes an IP video call invitation message to be sent to the indicated participant at operation as described in . The remaining operations depicted in are performed as described in reference to . Thus the client device supports establishing an IP video call as a result of user action at a peered hands free device.

While illustrates transferring audio to a hands free device responsive to receiving direct input at the client device in other embodiments the user may cause the audio to be transferred to the hands free device through input at the hands free device . In such embodiments the hands free manager receives a command from the hands free device to transfer the audio. The hands free manager then sends the request to the audio manager which then reroutes the audio.

In addition while illustrates transferring audio to a hands free device in some embodiments audio can also be transferred from the hands free device to a speaker or headphones of the client device . This can be initiated at the client device and or the hands free device . In such embodiments the audio manager receives the route audio request either from the IP video call manager or the hands free manager to route the audio to the client device and acts accordingly.

As illustrated in the computer system which is a form of a data processing system includes the bus es which is coupled with the processing system power supply memory and the nonvolatile memory e.g. a hard drive flash memory Phase Change Memory PCM etc. . The bus es may be connected to each other through various bridges controllers and or adapters as is well known in the art. The processing system may retrieve instruction s from the memory and or the nonvolatile memory and execute the instructions to perform operations as described above. The bus interconnects the above components together and also interconnects those components to the optional dock the display controller display device Input Output devices e.g. NIC Network Interface Card a cursor control e.g. mouse touchscreen touchpad etc. a keyboard etc. and the optional wireless transceiver s e.g. Bluetooth WiFi Infrared etc. .

According to one embodiment the exemplary architecture of the data processing system may be included in the client devices etc. or other computing devices described herein. The data processing system includes the processing system which may include one or more microprocessors and or a system on an integrated circuit. The processing system is coupled with a memory a power supply which includes one or more batteries an audio input output a display controller and display device optional input output input device s and wireless transceiver s . It will be appreciated that additional components not shown in may also be a part of the data processing system in certain embodiments and in certain embodiments fewer components than shown in may be used. In addition it will be appreciated that one or more buses not shown in may be used to interconnect the various components as is well known in the art.

The memory may store data and or programs for execution by the data processing system . The audio input output may include a microphone and or a speaker to for example play music and or provide telephony functionality through the speaker and microphone. The display controller and display device may include a graphical user interface GUI . The wireless e.g. RF transceivers e.g. a WiFi transceiver an infrared transceiver a Bluetooth transceiver a wireless cellular telephony transceiver etc. may be used to communicate with other data processing systems. The one or more input devices allow a user to provide input to the system. These input devices may be a keypad keyboard touch panel multi touch panel etc. The optional other input output may be a connector for a dock.

The techniques shown in the figures can be implemented using code and data stored and executed on one or more computing devices e.g. client devices servers etc. . Such computing devices stores and transmits internally and or with other computing devices over a network code composed of software instructions and data using machine readable media such as non transitory tangible machine readable media e.g. machine readable storage media such as magnetic disks optical disks read only memory flash memory devices and transitory propagating signals e.g. electrical optical acoustical or other form of propagated signals such as carrier waves infrared signals digital signals etc. . In addition such computing devices typically include a set of one or more processors coupled to one or more other components such as one or more non transitory tangible machine readable media to store code and or data user input output devices e.g. a keyboard a touchscreen and or a display and network connections to transmit code and or data using transitory propagating signals . The coupling of the set of processors and other components is typically through one or more busses and bridges also termed as bus controllers . Thus a non transitory machine readable medium of a given computing device typically stores instructions for execution on the set of one or more processors of that computing device. One or more parts of an embodiment may be implemented using different combinations of software firmware and or hardware.

While operations have been described herein with reference to automatically validating an email address without requiring a user to click on a link included in a validation email message with respect to validating an email address for use as an online communication session endpoint identifier embodiments are not so limited. For example in some embodiments the operations described with reference to automatically validating an email address are performed when an email address needs to be validated for other reasons. For example a user may be registering for a service that requires an email address to be validated as belonging to that user as a part of the registration process. The user provides the email address to the service and receives a message e.g. through display of a web page of the service that indicates that the email address needs to be validated and that a validation email message has been sent or will be sent to the email address that was provided the validation email message may or may not include a validation link . An application on the client device may automatically check an email account corresponding to the email address for the validation message and when it is located automatically parse the message to locate a validation token and transmit an email address validation message that includes the email address and the validation token to an email validation server associated with the service to validate the email address. While the flow diagrams in the figures show a particular order of operations performed by certain embodiments it should be understood that such order is exemplary e.g. alternative embodiments may perform the operations in a different order combine certain operations overlap certain operations etc. .

While the invention has been described in terms of several embodiments those skilled in the art will recognize that the invention is not limited to the embodiments described can be practiced with modification and alteration within the spirit and scope of the appended claims. The description is thus to be regarded as illustrative instead of limiting.

