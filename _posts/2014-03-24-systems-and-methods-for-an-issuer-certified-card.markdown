---

title: Systems and methods for an issuer certified card
abstract: The present solution is directed to an architecture and a process for registering cards for use, such as bank cards, credit cards, loyalty cards, club cards, or any other card that is configured to carry data or monetary value. The solution provides safe and fast means for registering the card in a mobile computing environment. The system enables a card issuer to unambiguously identify an end userâ€”for example, by one or two factor authentication. Responsive to the identification of the end user by the system, a 2D code that encodes the data needed for registration of the card is presented to the user. The data can be encrypted and the method of delivery to the user can be selected by user or the card issuer. With a mobile application, the user scans the presented 2D code. The mobile application transmits the data of the 2D code to the server, which decrypts and verifies the data. Responsive to decrypting and verifying the data, the card of the card holder is registered. In some implementations, the user may also wish to register the card with an e-wallet application on their mobile devices, such that the user may use the card from the mobile device at a later date.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09159064&OS=09159064&RS=09159064
owner: CELLUM INNOVACIOS ES SZOLGALTATO ZRT.
number: 09159064
owner_city: Budapest
owner_country: HU
publication_date: 20140324
---
A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the file or records of the Patent and Trademark Office but otherwise reserves all copyright rights whatsoever.

Two dimensional 2D codes e.g. bar codes allow for a few kilobytes of information to be stored and decoded using image processing algorithms. Today these 2D codes are often scanned and decoded by smartphones or other mobile devices.

The present solution is directed to an architecture and a process for registering cards for use such as bank cards credit cards loyalty cards club cards or any other card that is configured to carry data or monetary value. The solution provides safe and fast means for registering the card in a mobile computing environment. The system enables a card issuer to unambiguously identify an end user for example by one or two factor authentication. Responsive to the identification of the end user by the system a 2D code that encodes the data needed for registration of the card is presented to the user. The data can be encrypted and the method of delivery to the user can be selected by user or the card issuer. With a mobile application the user scans the presented 2D code. The mobile application transmits the data of the 2D code to the server which decrypts and verifies the data. Responsive to decrypting and verifying the data the card of the card holder is registered. In some implementations the user may also wish to register the card with an e wallet application on their mobile devices such that the user may use the card from the mobile device at a later date.

According to one aspect of the disclosure a method for providing registration of a card of a card holder via a two dimension code includes identifying by a server providing registration of cards of card holders a card holder of a card. A two dimension 2D code encoded with registration information for the card of the card holder is then generated. At least a portion of the registration information is encrypted via asymmetric encryption. The method also includes transmitting by the server to a device of the card holder the 2D code to provide to the server for registration of the card.

In some implementations the method can include registering by the server the card of the card holder upon decrypting and verification of the registration information received by the server from an application on the device of the card holder that scanned the 2D code. In some implementations the application can include a mobile wallet of the card holder and the card is a mobile payment instrument.

In some implementations the method also includes authenticating by the server the card holder via one or two factor authentication and or biometric authentication. Information about the card or card holder can be validated with a third party server such as that of an issuer. In some implementations the third party also provides at least a portion of the registration information to encode in the 2D code.

In some implementations the method also includes generating the registration information for the card of the card holder to be encoded in the 2D code. The method can also include encrypting the registration information encoded in the 2D code. In some implementations the 2D code is a motion code including a sequence of a plurality of 2D codes to be displayed at a frequency each of the plurality of 2D codes encoded with a portion of the registration information. The method can also include transmitting by the server the 2D code via a secure communication channel between the server and the device of the card holder.

The method can also include receiving by the server from the device of the card holder content from a scan of the 2D code by the device the content including the registration information. The server may then decrypt the encrypted portion of the registration information. The card is then registered using the decrypted and unencrypted portions of the registration information.

In some implementations the method includes validating by the server a portion of the registration information via a third party server. The card can be one a bank card a loyalty card a rewards card a points card an advantage car and a club card.

In some implementations the registration information can include at least one of information visible on the corresponding card or information not visible and encoded on the corresponding card. The method can also include receiving by the server a pin assigned to the card holder from one of an application on the device of the card holder in which the card holder enters the pin via the application or from the 2D code and controlling by the server access to the server by confirming the pin.

According to another aspect of the disclosure a system for providing registration of a card of a card holder via a two dimension code includes a server. The server is configured to register cards of card holders. The server includes an authentication module configured to identify a card holder of a card and a generator. The generator is configured to generate a two dimension 2D code encoded with registration information for the card of the card holder at least a portion of the registration information encrypted via asymmetric encryption. The server also includes a transmitter configured to transmit to a device of the card holder the 2D code to provide to the server for registration of the card.

In some implementations the server can also be configured to register the card of the card holder upon decrypting and verification of the registration information received by the server from an application on the device of the card holder that scanned the 2D code. The application can include a mobile wallet of the card holder and the card can be a mobile payment instrument.

In some implementations the authenticator is configured to authenticate the card holder via one or two factor authentication and or biometric authentication. The server may also be configured to validate registration information on one of the card or the card holder via a third party server. The server may also be configured to receive at least a portion of the registration information to encode in the 2D code from a third party server. The server can be configured to transmit the 2D code via a secure communication channel between the server and the device of the card holder.

In some implementations the generator is configured to generate the registration information for the card of the card holder to be encoded in the 2D code. The generator may generate a 2D code that is a motion code including a sequence of a plurality of 2D codes to be displayed at a frequency each of the plurality of 2D codes encoded with a portion of the registration information. The generator may also be configured to encrypt the registration information encoded in the 2D code.

The receiver of the server can be configured to receive from the device of the card holder content from a scan of the 2D code by the device the content including the registration information. The server can also include a decryptor configured to decrypt the encrypted portion of the registration information.

The server may also include a registrar to register the card of the card holder using the decrypted portion of the registration information. The registrar can be further configured to validate a portion of the registration information via a third party server.

In some implementations the registration information includes information visible on the corresponding card or information not visible and encoded on the corresponding card. The server can also be configured to receive a pin assigned to the card holder by the server from one of an application on the device of the card holder in which the card holder enters the pin via the application or from the 2D code. The server can be configured to control access to the server by validating the pin.

For purposes of reading the description of the various embodiments below the following descriptions of the sections of the specification and their respective contents may be helpful

Section A describes a network environment and computing environment which may be useful for practicing embodiments described herein.

Section B describes embodiments of systems and methods for generating and displaying motion QR codes.

Prior to discussing specific embodiments of the present solution it may be helpful to describe aspects of the operating environment as well as associated system components e.g. hardware elements in connection with the methods and systems described herein. Referring to an embodiment of a network environment is depicted. In brief overview the network environment includes one or more clients also generally referred to as local machine s client s client node s client machine s client computer s client device s endpoint s or endpoint node s in communication with one or more servers also generally referred to as server s node or remote machine s via one or more networks . In some embodiments a client has the capacity to function as both a client node seeking access to resources provided by a server and as a server providing access to hosted resources for other clients 

Although shows a network between the clients and the servers the clients and the servers may be on the same network . In some embodiments there are multiple networks between the clients and the servers . In one of these embodiments a network not shown may be a private network and a network may be a public network. In another of these embodiments a network may be a private network and a network a public network. In still another of these embodiments networks and may both be private networks.

The network may be connected via wired or wireless links. Wired links may include Digital Subscriber Line DSL coaxial cable lines or optical fiber lines. The wireless links may include BLUETOOTH Wi Fi Worldwide Interoperability for Microwave Access WiMAX an infrared channel or satellite band. The wireless links may also include any cellular network standards used to communicate among mobile devices including standards that qualify as 1G 2G 3G or 4G. The network standards may qualify as one or more generation of mobile telecommunication standards by fulfilling a specification or standards such as the specifications maintained by International Telecommunication Union. The 3G standards for example may correspond to the International Mobile Telecommunications 2000 IMT 2000 specification and the 4G standards may correspond to the International Mobile Telecommunications Advanced IMT Advanced specification. Examples of cellular network standards include AMPS GSM GPRS UMTS LTE LTE Advanced Mobile WiMAX and WiMAX Advanced. Cellular network standards may use various channel access methods e.g. FDMA TDMA CDMA or SDMA. In some embodiments different types of data may be transmitted via different links and standards. In other embodiments the same types of data may be transmitted via different links and standards.

The network may be any type and or form of network. The geographical scope of the network may vary widely and the network can be a body area network BAN a personal area network PAN a local area network LAN e.g. Intranet a metropolitan area network MAN a wide area network WAN or the Internet. The topology of the network may be of any form and may include e.g. any of the following point to point bus star ring mesh or tree. The network may be an overlay network which is virtual and sits on top of one or more layers of other networks . The network may be of any such network topology as known to those ordinarily skilled in the art capable of supporting the operations described herein. The network may utilize different techniques and layers or stacks of protocols including e.g. the Ethernet protocol the internet protocol suite TCP IP the ATM Asynchronous Transfer Mode technique the SONET Synchronous Optical Networking protocol or the SDH Synchronous Digital Hierarchy protocol. The TCP IP internet protocol suite may include application layer transport layer internet layer including e.g. IPv6 or the link layer. The network may be a type of a broadcast network a telecommunications network a data communication network or a computer network.

In some embodiments the system may include multiple logically grouped servers . In one of these embodiments the logical group of servers may be referred to as a server farm or a machine farm . In another of these embodiments the servers may be geographically dispersed. In other embodiments a machine farm may be administered as a single entity. In still other embodiments the machine farm includes a plurality of machine farms . The servers within each machine farm can be heterogeneous one or more of the servers or machines can operate according to one type of operating system platform e.g. WINDOWS NT manufactured by Microsoft Corp. of Redmond Wash. while one or more of the other servers can operate on according to another type of operating system platform e.g. Unix Linux or Mac OS X .

In one embodiment servers in the machine farm may be stored in high density rack systems along with associated storage systems and located in an enterprise data center. In this embodiment consolidating the servers in this way may improve system manageability data security the physical security of the system and system performance by locating servers and high performance storage systems on localized high performance networks. Centralizing the servers and storage systems and coupling them with advanced system management tools allows more efficient use of server resources.

The servers of each machine farm do not need to be physically proximate to another server in the same machine farm . Thus the group of servers logically grouped as a machine farm may be interconnected using a wide area network WAN connection or a metropolitan area network MAN connection. For example a machine farm may include servers physically located in different continents or different regions of a continent country state city campus or room. Data transmission speeds between servers in the machine farm can be increased if the servers are connected using a local area network LAN connection or some form of direct connection. Additionally a heterogeneous machine farm may include one or more servers operating according to a type of operating system while one or more other servers execute one or more types of hypervisors rather than operating systems. In these embodiments hypervisors may be used to emulate virtual hardware partition physical hardware virtualize physical hardware and execute virtual machines that provide access to computing environments allowing multiple operating systems to run concurrently on a host computer. Native hypervisors may run directly on the host computer. Hypervisors may include VMware ESX ESXi manufactured by VMWare Inc. of Palo Alto Calif. the Xen hypervisor an open source product whose development is overseen by Citrix Systems Inc. the HYPER V hypervisors provided by Microsoft or others. Hosted hypervisors may run within an operating system on a second software level. Examples of hosted hypervisors may include VMware Workstation and VIRTUALBOX.

Management of the machine farm may be de centralized. For example one or more servers may comprise components subsystems and modules to support one or more management services for the machine farm . In one of these embodiments one or more servers provide functionality for management of dynamic data including techniques for handling failover data replication and increasing the robustness of the machine farm . Each server may communicate with a persistent store and in some embodiments with a dynamic store.

Server may be a file server application server web server proxy server appliance network appliance gateway gateway server virtualization server deployment server SSL VPN server or firewall. In one embodiment the server may be referred to as a remote machine or a node. In another embodiment a plurality of nodes may be in the path between any two communicating servers.

Referring to a cloud computing environment is depicted. A cloud computing environment may provide client with one or more resources provided by a network environment. The cloud computing environment may include one or more clients in communication with the cloud over one or more networks . Clients may include e.g. thick clients thin clients and zero clients. A thick client may provide at least some functionality even when disconnected from the cloud or servers . A thin client or a zero client may depend on the connection to the cloud or server to provide functionality. A zero client may depend on the cloud or other networks or servers to retrieve operating system data for the client device. The cloud may include back end platforms e.g. servers storage server farms or data centers.

The cloud may be public private or hybrid. Public clouds may include public servers that are maintained by third parties to the clients or the owners of the clients. The servers may be located off site in remote geographical locations as disclosed above or otherwise.

Public clouds may be connected to the servers over a public network. Private clouds may include private servers that are physically maintained by clients or owners of clients. Private clouds may be connected to the servers over a private network . Hybrid clouds may include both the private and public networks and servers .

The cloud may also include a cloud based delivery e.g. Software as a Service SaaS Platform as a Service PaaS and Infrastructure as a Service IaaS . IaaS may refer to a user renting the use of infrastructure resources that are needed during a specified time period. IaaS providers may offer storage networking servers or virtualization resources from large pools allowing the users to quickly scale up by accessing more resources as needed. Examples of IaaS include AMAZON WEB SERVICES provided by Amazon.com Inc. of Seattle Wash. RACKSPACE CLOUD provided by Rackspace US Inc. of San Antonio Tex. Google Compute Engine provided by Google Inc. of Mountain View Calif. or RIGHTSCALE provided by RightScale Inc. of Santa Barbara Calif. PaaS providers may offer functionality provided by IaaS including e.g. storage networking servers or virtualization as well as additional resources such as e.g. the operating system middleware or runtime resources. Examples of PaaS include WINDOWS AZURE provided by Microsoft Corporation of Redmond Wash. Google App Engine provided by Google Inc. and HEROKU provided by Heroku Inc. of San Francisco Calif. SaaS providers may offer the resources that PaaS provides including storage networking servers virtualization operating system middleware or runtime resources. In some embodiments SaaS providers may offer additional resources including e.g. data and application resources. Examples of SaaS include GOOGLE APPS provided by Google Inc. SALESFORCE provided by Salesforce.com Inc. of San Francisco Calif. or OFFICE 365 provided by Microsoft Corporation. Examples of SaaS may also include data storage providers e.g. DROPBOX provided by Dropbox Inc. of San Francisco Calif. Microsoft SKYDRIVE provided by Microsoft Corporation Google Drive provided by Google Inc. or Apple ICLOUD provided by Apple Inc. of Cupertino Calif.

Clients may access IaaS resources with one or more IaaS standards including e.g. Amazon Elastic Compute Cloud EC2 Open Cloud Computing Interface OCCI Cloud Infrastructure Management Interface CIMI or OpenStack standards. Some IaaS standards may allow clients access to resources over HTTP and may use Representational State Transfer REST protocol or Simple Object Access Protocol SOAP . Clients may access PaaS resources with different PaaS interfaces. Some PaaS interfaces use HTTP packages standard Java APIs JavaMail API Java Data Objects JDO Java Persistence API JPA Python APIs web integration APIs for different programming languages including e.g. Rack for Ruby WSGI for Python or PSGI for Perl or other APIs that may be built on REST HTTP XML or other protocols. Clients may access SaaS resources through the use of web based user interfaces provided by a web browser e.g. GOOGLE CHROME Microsoft INTERNET EXPLORER or Mozilla Firefox provided by Mozilla Foundation of Mountain View Calif. . Clients may also access SaaS resources through smartphone or tablet applications including e.g. Salesforce Sales Cloud or Google Drive app. Clients may also access SaaS resources through the client operating system including e.g. Windows file system for DROPBOX.

In some embodiments access to IaaS PaaS or SaaS resources may be authenticated. For example a server or authentication server may authenticate a user via security certificates HTTPS or API keys. API keys may include various encryption standards such as e.g. Advanced Encryption Standard AES . Data resources may be sent over Transport Layer Security TLS or Secure Sockets Layer SSL .

The client and server may be deployed as and or executed on any type and form of computing device e.g. a computer network device or appliance capable of communicating on any type and form of network and performing the operations described herein. depict block diagrams of a computing device useful for practicing an embodiment of the client or a server . As shown in each computing device includes a central processing unit and a main memory unit . As shown in a computing device may include a storage device an installation device a network interface an I O controller display devices a keyboard and a pointing device e.g. a mouse. The storage device may include without limitation an operating system software and a software of the mQR application . As shown in each computing device may also include additional optional elements e.g. a memory port a bridge one or more input output devices generally referred to using reference numeral and a cache memory in communication with the central processing unit .

The central processing unit is any logic circuitry that responds to and processes instructions fetched from the main memory unit . In many embodiments the central processing unit is provided by a microprocessor unit e.g. those manufactured by Intel Corporation of Mountain View Calif. those manufactured by Motorola Corporation of Schaumburg Ill. the ARM processor and TEGRA system on a chip SoC manufactured by Nvidia of Santa Clara Calif. the POWER7 processor those manufactured by International Business Machines of White Plains N.Y. or those manufactured by Advanced Micro Devices of Sunnyvale Calif. The computing device may be based on any of these processors or any other processor capable of operating as described herein. The central processing unit may utilize instruction level parallelism thread level parallelism different levels of cache and multi core processors. A multi core processor may include two or more processing units on a single computing component. Examples of a multi core processors include the AMD PHENOM IIX2 INTEL CORE i5 and INTEL CORE i7.

Main memory unit may include one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the microprocessor . Main memory unit may be volatile and faster than storage memory. Main memory units may be Dynamic random access memory DRAM or any variants including static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Single Data Rate Synchronous DRAM SDR SDRAM Double Data Rate SDRAM DDR SDRAM Direct Rambus DRAM DRDRAM or Extreme Data Rate DRAM XDR DRAM . In some embodiments the main memory or the storage may be non volatile e.g. non volatile read access memory NVRAM flash memory non volatile static RAM nvSRAM Ferroelectric RAM FeRAM Magnetoresistive RAM MRAM Phase change memory PRAM conductive bridging RAM CBRAM Silicon Oxide Nitride Oxide Silicon SONOS Resistive RAM RRAM Racetrack Nano RAM NRAM or Millipede memory. The main memory may be based on any of the above described memory chips or any other available memory chips capable of operating as described herein. In the embodiment shown in the processor communicates with main memory via a system bus described in more detail below . depicts an embodiment of a computing device in which the processor communicates directly with main memory via a memory port . For example in the main memory may be DRDRAM.

A wide variety of I O devices may be present in the computing device . Input devices may include keyboards mice trackpads trackballs touchpads touch mice multi touch touchpads and touch mice microphones multi array microphones drawing tablets cameras single lens reflex camera SLR digital SLR DSLR CMOS sensors accelerometers infrared optical sensors pressure sensors magnetometer sensors angular rate sensors depth sensors proximity sensors ambient light sensors gyroscopic sensors or other sensors. Output devices may include video displays graphical displays speakers headphones inkjet printers laser printers and 3D printers.

Devices may include a combination of multiple input or output devices including e.g. Microsoft KINECT Nintendo Wiimote for the WII Nintendo WII U GAMEPAD or Apple IPHONE. Some devices allow gesture recognition inputs through combining some of the inputs and outputs. Some devices provides for facial recognition which may be utilized as an input for different purposes including authentication and other commands. Some devices provides for voice recognition and inputs including e.g. Microsoft KINECT SIRI for IPHONE by Apple Google Now or Google Voice Search.

Additional devices have both input and output capabilities including e.g. haptic feedback devices touchscreen displays or multi touch displays. Touchscreen multi touch displays touchpads touch mice or other touch sensing devices may use different technologies to sense touch including e.g. capacitive surface capacitive projected capacitive touch PCT in cell capacitive resistive infrared waveguide dispersive signal touch DST in cell optical surface acoustic wave SAW bending wave touch BWT or force based sensing technologies. Some multi touch devices may allow two or more contact points with the surface allowing advanced functionality including e.g. pinch spread rotate scroll or other gestures. Some touchscreen devices including e.g. Microsoft PIXELSENSE or Multi Touch Collaboration Wall may have larger surfaces such as on a table top or on a wall and may also interact with other electronic devices. Some I O devices display devices or group of devices may be augment reality devices. The I O devices may be controlled by an I O controller as shown in . The I O controller may control one or more I O devices such as e.g. a keyboard and a pointing device e.g. a mouse or optical pen. Furthermore an I O device may also provide storage and or an installation medium for the computing device . In still other embodiments the computing device may provide USB connections not shown to receive handheld USB storage devices. In further embodiments an I O device may be a bridge between the system bus and an external communication bus e.g. a USB bus a SCSI bus a FireWire bus an Ethernet bus a Gigabit Ethernet bus a Fibre Channel bus or a Thunderbolt bus.

In some embodiments display devices may be connected to I O controller . Display devices may include e.g. liquid crystal displays LCD thin film transistor LCD TFT LCD blue phase LCD electronic papers e ink displays flexile displays light emitting diode displays LED digital light processing DLP displays liquid crystal on silicon LCOS displays organic light emitting diode OLED displays active matrix organic light emitting diode AMOLED displays liquid crystal laser displays time multiplexed optical shutter TMOS displays or 3D displays. Examples of 3D displays may use e.g. stereoscopy polarization filters active shutters or autostereoscopy. Display devices may also be a head mounted display HMD . In some embodiments display devices or the corresponding I O controllers may be controlled through or have hardware support for OPENGL or DIRECTX API or other graphics libraries.

In some embodiments the computing device may include or connect to multiple display devices which each may be of the same or different type and or form. As such any of the I O devices and or the I O controller may include any type and or form of suitable hardware software or combination of hardware and software to support enable or provide for the connection and use of multiple display devices by the computing device . For example the computing device may include any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices . In one embodiment a video adapter may include multiple connectors to interface to multiple display devices . In other embodiments the computing device may include multiple video adapters with each video adapter connected to one or more of the display devices . In some embodiments any portion of the operating system of the computing device may be configured for using multiple displays . In other embodiments one or more of the display devices may be provided by one or more other computing devices or connected to the computing device via the network . In some embodiments software may be designed and constructed to use another computer s display device as a second display device for the computing device . For example in one embodiment an Apple iPad may connect to a computing device and use the display of the device as an additional display screen that may be used as an extended desktop. One ordinarily skilled in the art will recognize and appreciate the various ways and embodiments that a computing device may be configured to have multiple display devices 

Referring again to the computing device may comprise a storage device e.g. one or more hard disk drives or redundant arrays of independent disks for storing an operating system or other related software and for storing application software programs such as any program related to the software for the experiment tracker system. Examples of storage device include e.g. hard disk drive HDD optical drive including CD drive DVD drive or BLU RAY drive solid state drive SSD USB flash drive or any other device suitable for storing data. Some storage devices may include multiple volatile and non volatile memories including e.g. solid state hybrid drives that combine hard disks with solid state cache. Some storage device may be non volatile mutable or read only. Some storage device may be internal and connect to the computing device via a bus . Some storage device may be external and connect to the computing device via a I O device that provides an external bus. Some storage device may connect to the computing device via the network interface over a network including e.g. the Remote Disk for MACBOOK AIR by Apple. Some client devices may not require a non volatile storage device and may be thin clients or zero clients . Some storage device may also be used as an installation device and may be suitable for installing software and programs. Additionally the operating system and the software can be run from a bootable medium for example a bootable CD e.g. KNOPPIX a bootable CD for GNU Linux that is available as a GNU Linux distribution from knoppix.net.

Client device may also install software or application from an application distribution platform. Examples of application distribution platforms include the App Store for iOS provided by Apple Inc. the Mac App Store provided by Apple Inc. GOOGLE PLAY for Android OS provided by Google Inc. Chrome Webstore for CHROME OS provided by Google Inc. and Amazon Appstore for Android OS and KINDLE FIRE provided by Amazon.com Inc. An application distribution platform may facilitate installation of software on a client device . An application distribution platform may include a repository of applications on a server or a cloud which the clients may access over a network . An application distribution platform may include application developed and provided by various developers. A user of a client device may select purchase and or download an application via the application distribution platform.

Furthermore the computing device may include a network interface to interface to the network through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 Gigabit Ethernet Infiniband broadband connections e.g. ISDN Frame Relay ATM Gigabit Ethernet Ethernet over SONET ADSL VDSL BPON GPON fiber optical including FiOS wireless connections or some combination of any or all of the above. Connections can be established using a variety of communication protocols e.g. TCP IP Ethernet ARCNET SONET SDH Fiber Distributed Data Interface FDDI IEEE 802.11a b g n ac CDMA GSM WiMax and direct asynchronous connections . In one embodiment the computing device communicates with other computing devices via any type and or form of gateway or tunneling protocol e.g. Secure Socket Layer SSL or Transport Layer Security TLS or the Citrix Gateway Protocol manufactured by Citrix Systems Inc. of Ft. Lauderdale Fla. The network interface may comprise a built in network adapter network interface card PCMCIA network card EXPRESSCARD network card card bus network adapter wireless network adapter USB network adapter modem or any other device suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein.

A computing device of the sort depicted in may operate under the control of an operating system which controls scheduling of tasks and access to system resources. The computing device can be running any operating system such as any of the versions of the MICROSOFT WINDOWS operating systems the different releases of the Unix and Linux operating systems any version of the MAC OS for Macintosh computers any embedded operating system any real time operating system any open source operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system capable of running on the computing device and performing the operations described herein. Typical operating systems include but are not limited to WINDOWS 2000 WINDOWS Server 2012 WINDOWS CE WINDOWS Phone WINDOWS XP WINDOWS VISTA and WINDOWS 7 WINDOWS RT and WINDOWS 8 all of which are manufactured by Microsoft Corporation of Redmond Wash. MAC OS and iOS manufactured by Apple Inc. of Cupertino Calif. and Linux a freely available operating system e.g. Linux Mint distribution distro or Ubuntu distributed by Canonical Ltd. of London United Kingdom or Unix or other Unix like derivative operating systems and Android designed by Google of Mountain View Calif. among others. Some operating systems including e.g. the CHROME OS by Google may be used on zero clients or thin clients including e.g. CHROMEBOOKS.

The computer system can be any workstation telephone desktop computer laptop or notebook computer netbook ULTRABOOK tablet server handheld computer mobile telephone smartphone or other portable telecommunications device media playing device a gaming system mobile computing device or any other type and or form of computing telecommunications or media device that is capable of communication. The computer system has sufficient processor power and memory capacity to perform the operations described herein. In some embodiments the computing device may have different processors operating systems and input devices consistent with the device. The Samsung GALAXY smartphones e.g. operate under the control of Android operating system developed by Google Inc. GALAXY smartphones receive input via a touch interface.

In some embodiments the computing device is a gaming system. For example the computer system may comprise a PLAYSTATION 3 or PERSONAL PLAYSTATION PORTABLE PSP or a PLAYSTATION VITA device manufactured by the Sony Corporation of Tokyo Japan a NINTENDO DS NINTENDO 3DS NINTENDO WII or a NINTENDO WII U device manufactured by Nintendo Co. Ltd. of Kyoto Japan an XBOX 360 device manufactured by the Microsoft Corporation of Redmond Wash.

In some embodiments the computing device is a digital audio player such as the Apple IPOD IPOD Touch and IPOD NANO lines of devices manufactured by Apple Computer of Cupertino Calif. Some digital audio players may have other functionality including e.g. a gaming system or any functionality made available by an application from a digital application distribution platform. For example the IPOD Touch may access the Apple App Store. In some embodiments the computing device is a portable media player or digital audio player supporting file formats including but not limited to MP3 WAV M4A AAC WMA Protected AAC RIFF Audible audiobook Apple Lossless audio file formats and .mov .m4v and .mp4 MPEG 4 H.264 MPEG 4 AVC video file formats.

In some embodiments the computing device is a tablet e.g. the IPAD line of devices by Apple GALAXY TAB family of devices by Samsung or KINDLE FIRE by Amazon.com Inc. of Seattle Wash. In other embodiments the computing device is a eBook reader e.g. the KINDLE family of devices by Amazon.com or NOOK family of devices by Barnes Noble Inc. of New York City N.Y.

In some embodiments the communications device includes a combination of devices e.g. a smartphone combined with a digital audio player or portable media player. For example one of these embodiments is a smartphone e.g. the IPHONE family of smartphones manufactured by Apple Inc. a Samsung GALAXY family of smartphones manufactured by Samsung Inc or a Motorola DROID family of smartphones. In yet another embodiment the communications device is a laptop or desktop computer equipped with a web browser and a microphone and speaker system e.g. a telephony headset. In these embodiments the communications devices are web enabled and can receive and initiate phone calls. In some embodiments a laptop or desktop computer is also equipped with a webcam or other video capture device that enables video chat and video call.

In some embodiments the status of one or more machines in the network is monitored generally as part of network management. In one of these embodiments the status of a machine may include an identification of load information e.g. the number of processes on the machine CPU and memory utilization of port information e.g. the number of available communication ports and the port addresses or of session status e.g. the duration and type of processes and whether a process is active or idle . In another of these embodiments this information may be identified by a plurality of metrics and the plurality of metrics can be applied at least in part towards decisions in load distribution network traffic management and network failure recovery as well as any aspects of operations of the present solution described herein. Aspects of the operating environments and components described above will become apparent in the context of the systems and methods disclosed herein.

Referring now to the systems and methods of the architecture process and implementation of a motion QR code will be described. In general a motion QR code is a 2D code that is played as a motion picture of 2D codes or as a sequence of 2D codes over time. The motion QR code is encoded with a flow of data that is displayed or played to sequentially reveal display or otherwise visualize a plurality of 2D codes encoding such data. The 2D codes can include 2D barcodes QR codes Aztec codes data matrix codes or similar codes and are generically referred to as 2D codes. In comparison to a traditional 2D code the motion QR code dramatically increases the amount of information encoded carried and displayed. The QR motion codes can be displayed on and scanned by applications executing on client devices such as smartphones and tablet computers. The QR motion codes can be incorporated into IDs certificates tickets passes or other documents and management systems.

The system also includes a plurality of client devices . Each client device executes the above described mQR application . Each client device may include a camera for scanning or otherwise reading a QR code such as a motion code and a display device for presenting or display a QR code such as a motion code. The mQR server communications with client device directly or either indirectly through the communication server . The client device is in communication with the mQR server directly or either through a permission issuer . In some implementations the client device is referred to as the user client device and the client device is referred to as the issuer client device .

Each and or any of the components of the mQR server may include or be implemented as one or more applications programs libraries scripts services processes tasks and or any type and form of executable instructions executing on one or more devices such as any of the servers .

The mQR server includes a transmit and receive TX RX module for sending and or receiving communications such as network packets to from other devices over one or more networks . In some implementations the TX RX module is a network interface or similar I O port as described above in relation to . Through the TX RX module the mQR server sends data to and receives data from the various components of the system . For example and as described below the mQR server uses the TX RX module to transmit mQR codes to the client device . The TX RX module communicates with the components of the system through a network such as the above described network . For example the mQR server may communicate with the components of the system over a local area network LAN a wide area network WAN wireless area network intranets and other communication networks such as mobile telephone networks the Internet or a combination thereof.

The mQR server also includes a mQR generation module . The mQR generation module is configured to create generate or otherwise provide mQR codes that encodes one or more data items such as a flow of data requested by a requestor. Generally a mQR code can be referred to in two forms. The data form such as the form transmitted between devices may be referred to as a mQR byte array. The display form such as the visual presentation of the data form may be referred to as the mQR code. The term mQR code may be used herein to describe the mQR byte array in its data form and or the mQR code in its displayed form.

The mQR generation module is configured to receive a request to generate a mQR code and generates the mQR code responsive to the request. In some implementations the request is received from the permission issuer or another component of the system . The request includes data or a flow of data e.g. content that is to be encoded by the mQR generation module to become the generated mQR code. The mQR generation module generates the mQR code as a byte array which is later displayed by a client . The mQR byte array is described further in relation to . In general the mQR generation module arranges the data of the mQR code into a series or sequence of a plurality of 2D codes. In some implementations the mQR generation module also includes a mask display frequency permissions data or any other information for the subsequent display or visualization of the mQR code as further described herein.

The mQR server also includes an authentication module . In some implementation the authentication module is configured to authenticate a user and or device of the user. The authentication module may be configured to use one factor or two factor authentication. In some embodiments the authentication module uses biometric information of a user to authenticate the user. The authentication module may communicate with one or more other servers to authenticate a user and or device of the user.

In some implementations the authentication module is configured to authenticate the mQR code. In some implementations the authentication module digitally signs with a digital signature the mQR byte array after the byte array is generated by the mQR generation module . For example the byte array generated by the mQR generation module may be signed with a private signature. Signing the mQR byte array by the authentication module enables the other components of the system to determine the authenticity of the mQR byte array when they receive the mQR byte array. For example an mQR application executing on a client may be configured to convert the mQR byte array into an mQR code for display only if the mQR byte array is signed with an acceptable digital signature and its authenticity is verified. Likewise the authentication module may verify the authenticity of an mQR byte array or data flow that is received by or presented to the mQR server based on the digital signature.

The mQR server may also include an encryption module for encrypting the mQR code such as the byte array and any portion of communications herein and for decrypting the same. The encryption module may be configured to perform asymmetric or symmetric encryption and or decryption. Although generally the encryption module is referred to as encrypting the encryption module may be designed and constructed to perform both encryption and decryption. The encryption module may encrypt the item to be encrypted such as the byte array of the mQR code using a private key that the encryption module stores and or maintains for decryption. The encryption module may decrypt using the private key any item that the encryption module has encrypted. The mQR server can be configured to encrypt the mQR byte array before the byte array is transmitted to a client . In some implementations the encryption module encrypts the bye array for storage in the mQR storage . In another implementation the encryption module is involved in encrypting the communications between the mQR server and the various components of the system . For example the encryption module may manage a secure communication protocols for example Secure Socket Layer Transport Layer Security or Secure HyperText Transfer Protocol HTTPS connection to the client for the delivery of a mQR code byte code array to the client

The mQR server also includes a mQR storage . In some implementations the mQR storage is similar to the above described storage device . In some implementations the mQR server maintains a record of the mQR codes that the mQR server generates and distributes to any type and form of database. For example after generating and delivering a mQR code to a client the mQR server may save the mQR code and or any information related to the mQR code into the mQR storage comprising a database. The mQR server may track the usage and or activity of the mQR code to the database in storage. When the client device attempts to use the mQR code the mQR code is authenticated with the mQR server . The mQR server may ensure that a copy of the mQR code is saved in the mQR storage before further processing the mQR code. In some implementations the mQR server may verify the mQR code has not been used before by referencing the mQR storage . For example assume that the mQR is used as a concert ticket. When the guest presents his ticket at the gate the mQR is processed with the system by the concert attendant. The mQR server may then indicate to the attendant that the mQR code is valid and has not been used before. The mQR server may then save an indication that the mQR code has been used in association with the mQR code saved in the mQR storage . If a second user later attempts to use the same mQR code the mQR server may indicate to the attendant that the mQR code was previously used. In some implementations the mQR codes stored in the mQR storage are deleted from the mQR storage . The deletion of mQR codes from the mQR storage may be done at predetermined intervals e.g. mQR codes older may be phased out after 30 days or the mQR codes may be deleted after they are indicated as being used.

The system also includes a communication server . The communication server is a server or similar device that is configured to perform or handle communications between the mQR server and any client devices. As described below an issuer of a mQR code can select to have the mQR server send the mQR code directly to a client or the issuer may request that the mQR code be pushed to the client such via a push communication channel. In some implementations the communication server is a push server. For example the communication server may be a push server using the HTTP server push protocol long polling Flash XML socket relays or similar push protocols. In some implementations the communication server may be a push server maintained by third party for example the Apple Push Notification Service or the Android Cloud to Device Messaging Service. In some implementations transmitting a mQR byte array to the client through the communication server enables the mQR server to determine that the mQR server is addressing a valid client and not another entity masking itself as a valid client .

The system also includes a plurality of client devices . The clients illustrated in relation to system are similar to the clients described above in relationship to . Each client includes one or more processors to execute the mQR application . A mQR code transaction typically includes a first client on the issuer side of the transaction and a second client on the user side of the transaction. In some implementations the mQR application executed by each of the clients is capable of performing the functions described herein on either side of the transaction. In other implementations the user client executes a user mQR application and the issuer client executes an issuer mQR application .

As an overview the mQR application is configured to receive process and or handle the motion codes of the present solution. The mQR application may receive a mQR code from the mQR server . The mQR code may be received as a mQR byte array. The mQR application is designed constructed and or configured to understand interpret and process the structure format and or information carried by and or stored via the mQR byte array. The mQR application process and or translates the mQR byte array into a visualization of the mQR code that is displayed via the display . The application may be configured to display the series sequence or motion picture of the plurality of 2D codes of the mQR code at a predetermined frequency between about 1 frame second to about 40 frames second. The application may be configured to display the series sequence or motion picture of the plurality of 2D codes of the mQR code through a predetermined number of loops such as 1 2 3 or N times. The application may be configured to display the series sequence or motion picture of the plurality of 2D codes of the mQR code continuously until a predetermined event such as a user requesting the application to stop displaying the mQR code or receiving an indication that the mQR code was scanned or read.

The clients may include a camera such as to scan or read any codes 2D codes or motion codes. On the issuer side of the transaction the client uses the display and camera to scan a displayed mQR code. The application on the client that scans the mQR code may translate decode or otherwise generate the byte array that corresponds to the mQR code. The byte array may be forwarded to the mQR server for authentication and or further processing.

The system also includes a permission issuer . In some implementations the permission issuer is a server or other computing device owned or operated by the entity that requests the mQR code be issued. For example the permission issuer may be a ticket agent or similar entity that issues tickets to users. The permission issuer is in communication with the mQR server . The permission issuer sends mQR requests to the mQR server . As described below the mQR server then generates the mQR responsive to the request. In some implementations the requests can include content a desired method of delivery and a recipient e.g. an email address or phone number of the recipient . In some implementations the permission issuer provides the authentication module of the mQR server with the private signature key with which the mQR code data array is signed.

In some implementations the request to generate a mQR code comes from a third party. For example the request may come from a distributer of tickets. In these implementations the third party may transmit the request to the mQR server . Realizing the request is from a third party the mQR server may then forward the request to the permission issuer for authorization. Responsive to receiving authorization from the permission issuer the mQR server may then generate and transmit the mQR code responsive the request form the third party.

In some implementations the system may include a client device and application on the client for the issuer or a controller or entity controlling access or use of the mQR code of the issuer. The issuer or controller client scans a mQR code and then sends an indication of the scanned mQR code directly to the mQR server . In other implementations the clients sends the indication to the permission issuer which then forwards the indication or other data to the mQR server . The indication sent to the mQR server or the permission issuer can be a scan log. The scan log can include information relating the scan of the mQR code. For example the scan log can indicate when and where the mQR was scanned who scanned the mQR code the user of the mQR code event or other ticket information time stamp information or any combination thereof. In some implementations if the indication is sent directly to the mQR server the mQR server may forward a log or other report back to the permission issuer to indicate that a mQR code was used.

The mQR byte array includes a plurality of data items representing or implementing a flow of data encoded by and to be delivered or provided via a sequence of 2D codes of the mQR code and or information for generating and displaying or visualizing the mQR code. When displayed an mQR code is displayed as a series of QR codes. Each of the 2D code data items represent the data encoded in each of the series of QR codes. Each of the 2D code data items includes a flow of data that is used to generate one of the QR codes e.g. frames of the mQR code. As described below in relation to in some implementations the data flows from the request into each of the 2D code data items in a non sequential manner. For example a first portion of the data may flow into the 2D code data item and a second portion of the data may flow into the 2D code data item . As illustrated in the mQR byte array includes n 2D code data items . The number of code data items can be varied responsive to the amount of data that is to be transferred with the mQR code.

The color data item is the data item for encoding or identifying one or more colors for the mQR. In some implementations the mQR code is displayed in one or more colors. In some implementations the mQR may change color responsive data within the permissions data item . For example the mQR code may display as a first color and then display as a second color a predetermined amount of time before the mQR code is to be used. Furthering the example the mQR code may turn from red to green when the doors open for a concert or when the client is within a given distance of the concert hall.

Similarly the mQR code may be displayed with a mask. A mask is an image that blocks or obfuscates a portion or the entirety of the mQR code. The data for the mask is stored encoded or otherwise identified by the mask data item . A mask may be applied to an mQR code for security purposes or to ensure that the mQR code is only used at a predetermined time. The mask may cover a portion of the mQR code and prevent the entirety of the mQR code from being displayed until a predetermined amount of time. In some implementations the mask blocks a portion or region of the mQR code responsive to the current time or location of the client displaying the mQR code.

The mQR byte array may also include a permissions data item for the storage of the permissions associated with the mQR byte array . As described above different colors and masks may be used to control the permissions of who when e.g. date or time and where e.g. place or location an mQR code may be used. In some implementations the data stored within the permissions data item indicates to the mQR application displaying the mQR code when an mQR code may be displayed. The data within the permissions data item may be encrypted or digitally signed such that the mQR application knows that the permissions and the array have not been altered. In some implementations the user is authenticated through one or two factor authentication before the mQR code is displayed. The mQR application may perform a hash on a password the user enters and then compare the hash to a hash saved in the permissions data item to determine if the mQR code should be displayed. The mQR application may authenticate a user using passwords finger prints facial characteristics DNA or any combination thereof.

The mQR byte array may include a steganography data item . In some implementations the mQR code is hidden within an image or video. The data for the images that hide the mQR code or otherwise provide the steganogram is stored in the steganography data item . In some implementations the steganography data item also stores audio data. The application may play the audio data when displaying the mQR code in a manner where the audio signal is not perceivable to the human ear. For example the audio signal may be an additional way in which the mQR code is authenticated.

In some implementations the mQR byte array includes a frequency data item. In other implementations the frequency data item may be coded or configured into the executable instructions of the application . The data at the frequency data item indicates at what speed the 2D QR codes should be displayed in visualization the mQR code. In some implementations the display frequency of the mQR code is between about 1 frame second to about 40 frames second. In some implementations the frequency data item includes a plurality of frequencies. In these implementations the display frequency of the mQR code may dynamically update as the application displays the mQR code.

The mQR byte array may also include instruction data items related to the generation and visualization of the mQR code on the client device . For example the mQR byte array may include information such as mQR code display size length or number of times the mQR code is to be displayed header information that indicates the location of the above described data items within the mQR byte array or any combination thereof.

In some implementations the non sequential encoding of the array provides an extra layer of security. For example if the data was sequentially displayed then a third party viewing the display of the mQR could possibly collect and decode the data transmitted by the mQR code . However if the mQR code is generated with non sequential byte array then if a third party intercepts the mQR code they will be unable to create the data because they do not in what order to place the bytes decoded from the mQR code .

In further details of step the mQR server receives a request to generate a mQR code. The request may comprise a request to generate data flow to be displayed via the mQR code. The request may identify any combination i data to be encoded in the data flow ii the method of delivery the assembled byte array to the client device and or iii the information necessary to identify the client and the client device In some implementations the request comes from an issuer that is located remotely from the server that receives the request. For example the issuer may be a venue that is selling tickets for a concert that is going to be held at the venue. The request can include data the issuer wishes to be included in the mQR code such as but not limited to ticket information seating information user information or any combination thereof. The request can also include an indication of how the issuer wishes the mQR code to be delivered to the recipient of the mQR code. For example the issuer may request the mQR code be delivered to the recipient through a secure channel using the above described communication server by email by text message or by a similar messaging service. The request can also include permissions information. For example the request may include a hashed password or other security feature to ensure that only a valid recipient of the mQR code is able to display the mQR code. The permission information may also include masking data times locations and other conditions under which the mQR code may be displayed.

At step the server generates the mQR code. The mQR server may generate the byte array of the mQR code using the data and information from the request such as by encoding a flow of data from the request into the sequence of 2D codes of the mQR code. In some implementations the server collects the information from the issuer and encodes the data into the mQR byte array. In some implementations the server encodes and packages the data in a format similar to that described above in relation to . The server may also encode other information necessary for the visualization the mQR code into the mQR byte array. For example the server may include specific colors for the display of the mQR code or a specific frequency at which the mQR code is to be displayed. In some implementations the server also encrypts the mQR byte array or includes other security features into the byte array such as stenography data.

At step the server digitally signs the mQR byte array. The server may sign the encoded mQR byte code array with a private signature key. In some implementations the private signature key is provided by the issuer. By signing the mQR byte array a client receiving the mQR byte array can determine that the mQR byte array is authentic and was delivered from a valid server.

At step the mQR byte array is transmitted. The server transmits the mQR byte array to the client device. As described above in relation to the server may transmit the mQR byte array to the client directly or through a secure push server such as the communication server . As described above the method of transmission can be determined by the issuer in the request of step . In some implementations the mQR byte array is pushed by the communication server directly to the mQR application executing on the client . In other implementations the server delivers the mQR byte array to the client device through a third party application. For example the server may deliver the mQR byte array through email or a text message. The user may then click on an attachment or link in the email to open the mQR code in the mQR application .

At step the mQR code is displayed by the client. The client receives the mQR code as a mQR byte array. When a user wishes to display the mQR code the user launches the mQR code application on the client. The application then decodes the mQR code array and generates a visualization of the mQR code for display. Decoding can include generating the plurality of 2D QR codes that form the mQR code and applying the appropriate masks colors or other security features as are encoded in the mQR byte code array. Responsive to decoding the mQR byte array into a mQR code the client device such as via the application displays the mQR code. In some implementations the mQR code is played through a predetermined number of times. In other implementations the application continues to display the mQR code in a continuous manor until the mQR code is successful scanned or the user quits the application. The server may provide the client with an indication when the displayed mQR code has successfully been scanned.

At step the displayed mQR code is scanned. As the client device displays the mQR code the mQR code may be scanned by an issuer or controller client device. The issuer or controller client device may be a smart phone or tablet with a camera. Using the camera the issuer client may scan or record the mQR code displayed on the client. Responsive to scanning or recording the mQR code the issuer or controller client re encodes the mQR code into a mQR byte array.

The mQR byte array may be transmitted to the permission issuer or to the mQR server for authentication. For example the issuer or controller client may transmit the re encoded byte array to the server to determine if the mQR code has been used before. In some implementations the issuer or controller client may transmit an indication of the re encoded byte array. For example the issuer or controller client may transmit a hash of the re encoded byte array to the permission issuer or the server for authentication. In some implementations the issuer or controller client is loaded with indications of mQR codes from the mQR storage such that the issuer client can authenticate mQR codes without reconnecting to the permission issuer or the server. For example if an event is to be held in a remote location with poor network connectivity the issuer or controller client may download an indication of the mQR codes tickets that were sold for the event. The mQR codes may then be verified at the event without the issuer or controller client having to reconnect to the server. At a later point in time such as when the issuer or controller client reestablishes a network connection the issuer or controller client may transmit an indication of the scanned mQR codes to the permission issuer and or server.

At step when the mQR code is successfully scanned by the issuer client the application scanning the mQR code on the issuer client generates an indication that the mQR code was scanned. The indication may be a log of the scan result or a similar data structure that is transmitted to the permission issuer and or server when a successful scan has been made. In some implementations the application on the issuer or controller client also generates a local indication for the user of the issuer or controller client. For example the application may generate an audible tone or flash. The indication alerts the users of the issuer client and the user client that the mQR code was successfully scanned. Additionally the application on the issuer or controller client may provide a negative indication if a mQR code is not successfully read after a predetermined number of attempts or amount of time.

Referring now to the systems and methods for providing registration of a card of a card holder via a two dimensional code are described. The system and methods described herein enable mobile phones or similar mobile computing environments to register banking cards loyalty cards club cards reward cards or any combination thereof in a fast and safe manner. In some implementations the user may also wish to register their cards e.g. credit cards with an e wallet application on their mobile devices such that the user may use the card from the mobile device.

As an overview a user may apply for a card or for a service that is associated with a card. For example the user may sign up for a new bank account which includes a linked banking card. The bank may deliver to the user e.g. card holder the card and a 2D code encoded with registration information for the card holder to register the card and or register for a service associated with the card. In order to register the card the card holder scans the provided 2D code. Scanning the 2D code with the application described herein transmits registration information to the server to register the card. All or part of the registration information transmitted to the server may be encoded with asymmetric encryption. Responsive to the received registration information the server identifies and authenticates the card and card holder associated with the registration information. Responsive to a successful authentication the system registers the card such as for the card holder to use services of the issuer. In some cases the issuer may activate the card as part of or responsive to registration. In some cases the issuer may process access to a service such as online card account management associated with the card as part of or responsive to registration.

In some embodiments the server and any of its components may be implemented or deployed as part of the issuer server . For example the issuer may implement the systems and methods described herein to deploy a 2D code based registration system for card holders. In some embodiments the server may be implemented or deployed by a registration service that registers cards on behalf of the issuer or implements a registration process using 2D codes for the issuer.

Although the systems and methods described in connection with may be described using 2D codes implementations of these systems and methods may use any embodiments of the mQR or motion codes described in connection with . In some implementations the server may include any of the components described in relation to any of the mQR servers described herein such as in connection with .

As described above in relation to the server includes a transmit and receive TX RX module for sending and or receiving communications such as network packets to from other devices over one or more networks . The server may transmit 2D codes or motions codes via the TX RX module to user devices such as devices of card holders or to the others servers such as a communication server. For example responsive to generating a 2D code the server may transmit the generated 2D code to a client device for display and eventual scan by another client device . In some implementations the 2D code for registering a card may be sent to the user through a means outside of the network . For example after registering for a service the system may send the 2D code to the user through a postal service. The 2D code may be mailed in a welcoming packet sent to the user after the service associated with the card is opened. The server may receive 2D codes or motions codes or any data encoded in such codes via the TX RX module from user devices such as from devices of card holders or from others servers.

The server via the TX RX module may establish secure communication channels or connections with any other device such as a device of the card holder. The server may send the 2D code and or receive content from a scan of the 2D code over such secure communication channels. In some implementations the server may communicate with a device of a card holder via a communication server as described in connection with .

The server also includes a code generation module . The code generation module is configured to create generate or otherwise provide 2D codes that encode one or more data items such as data for the registration information. The code generation module can be configured to receive registration information from the issuer and generate 2D codes responsive to receiving the registration information. The request can include data or a flow of data e.g. content that is to be encoded by the code generation module into the generated 2D code. In some implementations the content that is encoded into the 2D code is received at least in part from the user e.g. card holder . The code generation module may include part or all of the received registration information in the encoded 2D code. The generated 2D code may be 2D barcodes QR codes Aztec codes data matrix codes embodiments of the motion code or mQR code described herein or any combination thereof. As described above the 2D code may be generated as a byte array which is later displayed by a client as a 2D code. In other implementations the code generation module may generate a physical 2D code e.g. a printed 2D code that is delivered physically to the user such as by mail.

In some implementations the code generation module encrypts the generated 2D code or a portion of the data included in the 2D code. The code generation module may encrypt the 2D codes using asymmetric or symmetric encryption. The data of the 2D code may be encrypted using a private key that the code generation module stores and or maintains for decryption.

The generation module may also decrypt using the private key any data items from the 2D code that the server receives which are encrypted. In some implementations the code server includes a separate encryption module like the above described encryption module for handling encryption and or decryption of data.

The issuer may provide to the server and the server via the code generator may encode into 2D codes various implementations of registration information. The registration information may include information to register any type and form of card such as a bank card a loyalty card a rewards card a points card an advantage card or a club card. The registration information may comprise any type of data one may find or obtain for a physical card of the card holder such as name account identifier or number date of expiration issuer identification such as name or contact information and any security features such as a credit card validation CCV number and any data encoded on the magnetic strip or circuitry of the card. The registration information may comprise any type of data associated with or included as part of an account of the card holder in connection with the card such as contact information address phone number etc. for home and or work emergency or backup contact information and personal information such as birth date social security number etc. The registration information may comprise a pin or code that the issuer assigned to the card holder for the card such as a pin to access an ATM machine or make a debit payment at a point of sale. The registration information may comprise information on user s credit history such as other accounts of card holder or past residences of card holder. The registration information may comprise any information that the issuer may select to authenticate the user such as authenticating the user via third party services in which information on user s credit history amount of payments or credit allocated and or residences are verified.

In some aspects the card or associated registration information thereof to be registered may be considered to have human viewable data and data that is invisible to a human user. For example a user s name and credit card number may be printed on the front of the user s credit card. The user s came and credit card number may be considered human viewable data. The card may be an integrated circuit card ICC or smart card and include an integrated circuit or magnetic strip on which data that the user cannot view is stored which may be called or considered invisible data. The code generation module may encrypt the invisible data and leave unencrypted the visible data for the 2D code. In some implementations the code generation module may encrypt both visible and invisible data onto the 2D code. In some implementations the code generation module may choose not to encrypt or leave unencrypted some or portions of the invisible data.

The server may include an authentication module . In some implementations the authentication module is configured to authenticate a user and or device of the user. The authentication module may be configured to use one factor or two factor authentication to authenticate the user. In some embodiments the authentication module uses biometric information of a user to authenticate the user. In some implementations the authentication module authenticates the user prior to the generation of the 2D code. For example having received a card the user may log into a website to register the card. The user may provide to the authentication module information such as a password or pin. If the authentication module determines the presented password or pin are correct the authentication module may enable the code generation module to generate a 2D code of the registration information to provide to the user. The user can then scan the presented 2D code to register the card via the server. In other implementations the authentication module authenticates the user after the generation of the 2D code but prior to the registration of the card. For example the user may be sent a new bank card in the mail. A 2D code may be enclosed with the new bank card. After scanning the 2D code the application may request the user to enter a PIN to confirm the user is the owner of the card. Authentication of the user just prior to registration of the card helps to ensure that the 2D code was not intercepted by a third party during delivery. In a situation where the 2D code was intercepted if an unintended recipient attempted to scan the card the unintended recipient would be presented with a request for a password PIN or biometric authentication. Not able to resent the required identification the authentication module would not allow the registration of the card.

The server may include a storage module . In some implementations the storage module is the above described storage device . In some implementations the server maintains a record of the 2D codes that the server generates and distributes using any type or form of database stored in the storage module . For example upon or responsive to generating and delivering a 2D code to a client the server may save the registration information and 2D code in the storage module . The server may track and save the usage and or activity of the 2D code in the storage module . The server may upon decoding and verification of registration information from a 2D code store the registration information and any visible and any invisible data for the card of the card holder for subsequent utilization by the server and or card holder.

In some implementations the server may verify the 2D code has not been used before by referencing the storage module . In some implementations as a safety feature the 2D code can be saved into the storage module in association with a valid for date. For example the 2D code may be valid for the next 60 days or a specific range for example valid starting in 3 days and ending in 60. If by the end of the valid for date range the card has not been registered the 2D card may be voided such that the user has to request a new 2D code to register the card.

The server can also include a registrar module . The registrar module may be configured to register a card of the card holder based on registration information received for a card holder such as registration information from data encoded onto the 2D code. The registrar module may decode and verify unencrypted received from a scan of the 2D code. The registrar module may decrypt encrypted portions of the data received from a scan of the 2D code and decode and verify such decrypted data. The registrar module may decode and verify unencrypted data received from a scan of the 2D code. The registrar module may verify or validate the registration information or a portion thereof with a third party such as the issuer via server of issuer . For example upon receiving registration information from the user s client device the registrar module may forward a portion of the information to the issuer . For example the server may receive registration information form the user s client device and then authenticate the user and ensure the 2D code was a valid 2D code. The registrar module may then forward information such as the user s ID and account number to the issuer such that the issuer can validate that the card is being registered to the correct user s account. The registrar module may verify or validate the registration information or a portion thereof based on data and information stored by the server to storage.

In some implementations the registrar module responsive to verification or validation of the registration information communicates with the issuer via the issuer s server to activate the card. In some implementations the registrar module responsive to verification or validation of the registration information communicates with the issuer via the issuer s server to register and activate the card. In some implementations the registrar module interfaces with a server of the issuer to implement or cause registration of the card holder of the card on the issuer s systems. For example the registrar module may make application programming interface API calls or communications to the server of the issuer to facilitate implement or configure registration of the card of card holder via application s of the server of the issuer.

The system also includes a plurality of client devices . The client devices may be any type of computing device such as but not limited to a laptop smart phone tablet computer server or a combination thereof. As described below in relation to a 2D code used to register the user s card is delivered to or provided to the device of the user such as a device of the card holder. In some implementations the 2D code is delivered to first client owned by or in use by the user. For example the 2D code may be sent to the user through email. Using an email application the 2D code may be displayed on the display of the first client device . The user may then scan the displayed 2D code with a second client device . For example while the 2D code is displayed on the screen of the user s laptop e.g. client device the user may use his smartphone e.g. client device to scan the 2D code. In some implementations the user scans the 2D code using the application executing on the client device . The application scans the 2D code using the camera of the client device .

The client device may also include any type and form of electronic wallet or mobile payment application generally referred to as an e wallet application the e wallet application may also be referred to as a mobile wallet or m wallet . In some implementations responsive to the card begin registered with the server information associated with the card such as registration information or portions thereof may be saved in the e wallet application . The information may be saved in the e wallet application such that the user may use the card electronically upon or after registration. In some implementations the application may incorporate the e wallet application or functionality thereof. In some implementations the e wallet application may be configured to request and or obtain and or store the 2D codes from the server. In some implementations the e wallet application may be configured to scan the 2D code s of cards of card holders and communicate with the server to register cards in the e wallet application.

Further to step a card holder is identified. In some implementations the card holder is the owner of a card such as a credit card loyalty card reward card bank card or club card which the card holder would like to register or otherwise register for a service in connection with or associated to the card such as online account management of the card As an example the user recently opened an account with a bank and would like to register and activate a new debit card associated with the account. In some implementations the card holder is identified to the server via the authentication module using one or two factor authentication. Biometric authentication may also be used. In some implementations the card holder is identified to the server by the issuer. In some implementations the server receives a request to generate a 2D code from the issuer for an identifier card holder and or for a card of the card holder. In some implementations the server identifies a plurality of card holders and or cards of card holders such as from the issuer. In some implementations the server responsive to identifying a plurality of card holders and or cards of card holders generates or provides a request to the code generator module to generate a 2D code for the identified card holder and or for the identified card of the card holder.

At step a 2D code is generated. The issuer of the card may provide the server with registration information to include or to be encoded in the 2D code. In some implementations some or all of the generated 2D code is encrypted with asymmetrical encryption. The generated 2D code may be a mQR code. In some implementations the 2D code is generated responsive to receiving a request from the issuer. For example and continuing the above bank example after the user opens the new account with the bank the bank may forward a request to the server requesting that a 2D registration code be generated and or sent to the user.

At step the 2D code is communicated or delivered to the card holder of the card. In some implementations the server communicates the 2D code to a device of the card holder through a secure communication channel. In some implementations the server communicates the 2D code to the user via a communication channel such as email a website SMS push notification. In some implementations the issuer or registrar for the issuer sends the 2D code via mail. As described above the 2D code may be mailed to the card holder responsive to the opening the new account. In another example the card holder may log into a website and after entering information regarding the card the 2D code may be delivered to the user through the website e.g. the website generates and displays the 2D code to the user .

At step the 2D code is scanned by the user using an application on the device of the user e.g. card holder . In some implementations the 2D code is scanned by the user with a specific client device for which the user would like to associate the registered card. For example at the end of the registration process information indicative of the registered card can be placed in an e wallet application executing on the client device.

At step the server receives content from a scan of the 2D code such as encrypted and or unencrypted registration informed encoded in the 2D code. The server may decrypt the encrypted portions of the content received from the scan of the 2D code using a private key maintained by or known by the server. The server may decrypt the encrypted portions using a decryptor module or functionality such as via the encryption module described herein. The server may receive visible or unencrypted portions of content from the scan of the 2D code. The server may decode and or use the decrypted content and or the unencrypted visible content to establish create obtain or provide the registration information for registering the card and or card holder.

In some implementation of using a motion code for the 2D code and responsive to the user scanning the motion code the application decodes the plurality of 2D codes and converts the decoded content into a byte array. All or a portion of the byte array may be transmitted back to the server. The mQR byte array may remain in its encrypted form such that the data within the byte array cannot be read by the client device. In some implementations the byte array may only be decrypted and read by the server using a private key maintained by the server.

In some implementations the device appends or includes an identifier to with the byte array for a motion code or to the content from the scan of the 2D code that is transmitted to the server. The identifier may be a device identifier e.g. a unique identifier UDID or an identifier associated with the e wallet . The server may use the identifier to link the card to the user s client device.

At step the card holder and or card is registered. Responsive to the server having the registration information the server identifies the card and or card holder associated with the registration information. The server may register the card and or card holder with the issuer using the registration information. The server may register the card and or card holder for an application or service of the issuer such as a mobile application or online application or service. The server may maintain the registration information for subsequent utilization by the card holder or the server on behalf of the card holder. In some embodiments the server facilitates or communicates with e wallet application to identify provide validate or approve the card as a mobile payment instrument. In some implementations the server registers the card responsive to decrypting and verifying the registration information received from the mobile application.

In some implementations prior to completing the registration process the server may request that the user be authenticated to ensure that the true owner of the card is registering the card. For example the user may scan the 2D code with the application. The server may then prompt the application to request a password or pin from the user. If the user provides the correct password the server may then complete the registration process. In some implementations the application may request a password prior to sending the information from the 2D scan to the server. Requesting the pin or password prior to sending the information to the server enables the password to be sent with the information from the 2D scan rather than having the server make a request back to the application on the client device. For example instructions to request a password prior to transmitting the information to the server may be encoded in content of the scanned 2D code.

While the invention has been particularly shown and described with reference to specific embodiments it should be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention described in this disclosure.

