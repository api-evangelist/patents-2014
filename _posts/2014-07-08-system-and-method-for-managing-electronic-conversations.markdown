---

title: System and method for managing electronic conversations
abstract: A system provides a conversation construct for the routing of external communications to a party within an entity. Internal interactions of individuals in the entity may be associated by a server system with the conversation construct. Messages may be associated with interactions that may have as participants less than all participants of a conversation construct. An interaction may be a backchannel interaction and exclude one or more participants of a parent interaction. Interactions may be grouped into sequences that likewise may have a limited set of participants. A sequence may have a state associated therewith used by the entity to track progress in achieving an objective. A conversation construct and the sequences and interactions thereof may be presented in an interface to a user that includes those portions of the conversation construct for which the user is a participant.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09497150&OS=09497150&RS=09497150
owner: TUUL, INC.
number: 09497150
owner_city: Alameda
owner_country: US
publication_date: 20140708
---
Computers and mobile devices are enabled with multiple networking input output capabilities including Ethernet and wireless cellular and WiFi bands . These multiple data channels are now commonly used for communication services including text voice video gestures and other sensor data. These services might be carried over a number of different protocol services including SMS EMS MMS media messaging and various formats that are carried over internet protocol based services and such as XMPP SMTP SIP RTP etc.

In terms of scope SMS messages are only text based. MMS and other proprietary text focused message services have expanded their scope to allow richer user interaction and incorporate multimedia including emoticons audio video etc. In terms of person to person or peer to peer p2p interaction text messaging XMPP iMessage Skype Facebook Whatsapp Wechat and other proprietary applications and standards which allow for group messaging all follow the same standard models of interaction between two or more parties messaging each other 

The systems and methods disclosed in this application extend the capabilities of a mobile or other messaging platform to enable performance of complex tasks and the use of the platform to provide services in a more efficient manner.

It will be readily understood that the components of the present invention as generally described and illustrated in the Figures herein could be arranged and designed in a wide variety of different configurations. Thus the following more detailed description of the embodiments of the invention as represented in the Figures is not intended to limit the scope of the invention as claimed but is merely representative of certain examples of presently contemplated embodiments in accordance with the invention. The presently described embodiments will be best understood by reference to the drawings wherein like parts are designated by like numerals throughout.

The invention has been developed in response to the present state of the art and in particular in response to the problems and needs in the art that have not yet been fully solved by currently available apparatus and methods.

The standard model implemented by prior approaches as outlined in the Background section make the various instant messaging solutions suitable for direct person to person interaction. However when there is a need to a interact among a group which represents many individuals such as a business b there is a need to track multiple chats with unrelated people regarding a single subject or c have interactions which require a greater level of precision and workflow then a purely text and multimedia based solution is inadequate. The systems and methods described herein provide for workflow and organizational aliasing. In some embodiments systems and methods as disclosed herein may implement some or all of the principles and concepts below 

Embodiments in accordance with the present invention may be embodied as an apparatus method or computer program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a module or system. Furthermore the present invention may take the form of a computer program product embodied in any tangible medium of expression having computer usable program code embodied in the medium.

Any combination of one or more computer usable or computer readable media may be utilized. For example a computer readable medium may include one or more of a portable computer diskette a hard disk a random access memory RAM device a read only memory ROM device an erasable programmable read only memory EPROM or Flash memory device a portable compact disc read only memory CDROM an optical storage device and a magnetic storage device. In selected embodiments a computer readable medium may comprise any non transitory medium that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

Computer program code for carrying out operations of the present invention may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on a computer system as a stand alone software package on a stand alone hardware unit partly on a remote computer spaced some distance from the computer or entirely on a remote computer or server. In the latter scenario the remote computer may be connected to the computer through any type of network including a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions or code. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a non transitory computer readable medium that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable medium produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

Referring to the systems and methods disclosed herein may be implemented using the illustrated network environment . A server system may access and store data in a conversation database storing data for conversations conducted according to the methods described herein. The server system may include one or more processors and one or more separate computing devices that may be co located or remote from one another. The functions implemented by the server system according to the methods described herein may also be implemented by a workstation or network of workstations.

The server system may interact with mobile devices smart phones tablet computers wearable computers or the like as well as one or more workstation computers laptop computers desktop computers other servers or the like . In some embodiments a group of mobile devices and workstations may be associated with an entity e.g. a company or division of a company or other organization. Another group of mobile devices and workstations may be associated with a different entity or simply be defined as devices not associated with the same entity as the first group i.e. the public at large. The systems and methods herein provide an improved approach to handling conversations that include both communications of an entity with those outside the entity as well as internal communications among individuals of the entity.

The server system mobile devices and workstations may communicate with one another over a network such as the Internet local area network LAN wide area network WAN or any other network topology. Communication may be over any wired or wireless connection. In particular at least a portion of the path between mobile devices and the server may be a cellular wireless network. Communication among the mobile devices and workstations of the group may be over an internal i.e. non publically accessible network. Communication between devices of the group and the group may occur directly between the devices or be routed through the server system . Direct communication between devices from different groups may be reported to the server system in order to perform the methods described herein for managing communications.

Computing device includes one or more processor s one or more memory device s one or more interface s one or more mass storage device s one or more Input Output I O device s and a display device all of which are coupled to a bus . Processor s include one or more processors or controllers that execute instructions stored in memory device s and or mass storage device s . Processor s may also include various types of computer readable media such as cache memory.

Memory device s include various computer readable media such as volatile memory e.g. random access memory RAM and or nonvolatile memory e.g. read only memory ROM . Memory device s may also include rewritable ROM such as Flash memory.

Mass storage device s include various computer readable media such as magnetic tapes magnetic disks optical disks solid state memory e.g. Flash memory and so forth. As shown in a particular mass storage device is a hard disk drive . Various drives may also be included in mass storage device s to enable reading from and or writing to the various computer readable media. Mass storage device s include removable media and or non removable media.

I O device s include various devices that allow data and or other information to be input to or retrieved from computing device . Example I O device s include cursor control devices keyboards keypads microphones monitors or other display devices speakers printers network interface cards modems lenses CCDs or other image capture devices and the like.

Display device includes any type of device capable of displaying information to one or more users of computing device . Examples of display device include a monitor display terminal video projection device and the like.

Interface s include various interfaces that allow computing device to interact with other systems devices or computing environments. Example interface s include any number of different network interfaces such as interfaces to local area networks LANs wide area networks WANs wireless networks and the Internet. Other interface s include user interface and peripheral device interface . The interface s may also include one or more user interface elements . The interface s may also include one or more peripheral interfaces such as interfaces for printers pointing devices mice track pad etc. keyboards and the like.

Bus allows processor s memory device s interface s mass storage device s and I O device s to communicate with one another as well as other devices or components coupled to bus . Bus represents one or more of several types of bus structures such as a system bus PCI bus IEEE 1394 bus USB bus and so forth.

For purposes of illustration programs and other executable program components are shown herein as discrete blocks although it is understood that such programs and components may reside at various times in different storage components of computing device and are executed by processor s . Alternatively the systems and procedures described herein can be implemented in hardware or a combination of hardware software and or firmware. For example one or more application specific integrated circuits ASICs can be programmed to carry out one or more of the systems and procedures described herein.

The conversation may be a construct e.g. a meta conversation or container of many conversations which represents a collection of N where N can be any number of sequences . A sequence may be a collection also and may be defined as a collection that contains M actual messaging sessions or message exchanges which may be referred to as interactions. Each interaction is defined by the inclusion of one or more parties in collaboration in which they send messages data and media to each other or themselves via the available network and protocol for transmission and reception. An interaction is the unit by which communication occurs in that the parties that are involved are attached i.e. actually send and or receive messages at that level. In some embodiments an interaction may further include a sub interaction which is an interaction that is initiated based on an existing interaction or sub interaction that already started. A sub interaction may by definition exclude one or more parties that were involved in the parent interaction but include one of the participants. A sub interaction may further include new parties that were not participants in the parent interaction. A sub interaction is also referred to herein as a backchannel. 

In summary the conversation may be a data structure and corresponding functions for containing multiple sequences of interactions and sub interactions between multiple parties. The conversation may contain the connections between discrete communications sessions via sequences that though they may have differing parties and subject matter still have temporal and contextual relationships between the contained interactions while maintaining the privacy between one person s view of the interaction and others who may be involved.

In some embodiments a conversation is defined between a group of P individuals here referred to as Group A and a single party external to the group or between group A and a separate similar group of R individuals B external to the group. In this form each conversation has one permanent participant and is defined in terms of the external party. The external party addresses group A via the conversation as an intermediary or proxy and the external party may and will usually have no control over which individual they will speak with within the group. The routing of those messages is performed by the server system based on an internal system state linguistic interpretation and operational rules and logic as configured by the group for that conversation. A different group member may respond to the external party at a given time depending on the needs of the external and internal parties. In some embodiments representatives of a group are not discoverable outside their group.

For example electronic addressing information for parties C D and E are not published and may not be enabled for communications from party A a priori and A may have no a priori or electronic data channel with which to address parties C D or E outside the scope of an intermediated interaction according the methods described herein. A server system performing methods as described herein may access rules defining routing communications from party A to the same representative from among parties C D or E if the rules of the meta conversation for the group including parties C D and E are configured to allow it and the representative is available. Otherwise the rules may instruct the server system to route follow ups to an appropriate e.g. available other group member in the same group and that is specified in the routing rules as responding to similar requests.

In some embodiments a conversation is defined or classified based on a user identifier of the individual who started the conversation. This conversation may be ongoing or have a discrete start and end. In such embodiments an individual may or may not be part of a pre defined group and the individual may invite other public or private groups or individuals into sequences of interactions or sub interactions of a conversation . In this manner a conversation may provide a data construct associated for organizing communications with respect to an event a selected group of people or an activity.

A sequence may be a container for M M being any representable number of interactions. A sequence may have a subject a categorical labeling state and start and end time. Each sequence may have stored in the definition thereof a user identifier for a primary participant. In some embodiments a sequence may include messages from members of a group to an external party. Interactions e.g. specific messages between members of the group and the external party may be routed by the server system according to rules or logic driven choice to a group organizational structure called a sub group or team. The sub group organizational structure pertains to the group of people who are responders to the external party regarding that category. In this case a sequence may include a primary interaction which is one in a series of interactions or communications with the external party e.g. a first interaction and the primary participant may be stored in the sequence as an identifier of the external party.

In some embodiments a conversation may be generated by a user without an interaction with another user or designation of another participant. Accordingly an identifier of the user that generated the conversation may be stored in the conversation as the primary participant. Other participants may be added by the user to the conversation such that they or the user may initiate a new sequence and interactions within that conversation .

A representation of a conversation may be presented on a computing device such as any of the computing devices . For example a specific portion of the conversation may be selected by the server system for display to a particular user. Hereinafter the portion of a conversation and sequence made accessible by the server system to a particular participant shall be referred to as the point of view POV of a particular participant in a sequence . Each sequence may incorporate messages of one or more sub conversations that are part of the sequence . The server system may exclude any sequence or sub conversation from the POV of an individual that does not include that individual as a participant unless specifically given privilege to do so by group rules accessible by the server and granting this authority. The group rules may be defined for the group at a system level and the rules granting global or other visibility apply only to members of that group. In some embodiments a default rule used by the server system to determine an individual s POV may be that the POV of an individual does not include any conversation that does not include that individual. For example the default behavior of the server system is that the POV of a party in a conversation and sequence is restricted to the interactions in which the party directly participated. For example an exception to the default rule may be allowed by conversational rules and convention of the server system such that those users that are recorded to be administrators of a conversation may have included in the POV thereof the sequences and interactions contained in conversations such that they can review interactions in which they did not directly participate.

As an example in the interactions of a conversation between two parties A and B from the perspective of party A party B is having a continuous conversation with party A. However party B may be comprised of many group members which are actually responding by proxy to party A for example parties C D and E . Parties C and E may only have in their POVs those interactions of the conversation with A in which they C and E were participants. Thus the portion of the conversation with A in the POV of C will have a much more limited time and subject scope than the entirety of the conversation between A and B. In particular party A may have a POV including all interactions of the conversation including those of other sub parties for example E regarding various subjects. These interactions may span multiple sub conversations which happen between A and internal members of B. Additionally parties C and D may participate in interactions within the scope of the conversation with A but party D may not have any interactions directly with A. Accordingly the POV of A does not include the sub conversation between C and D even though the sub conversation between C and D is part of the conversation including A as the primary participant. In the POV of the company or group B in the conversation with A all interactions between A C and D are related as branches of a tree representing the conversation i.e. as sub conversations of the conversation . In some embodiments sub conversations that are internal to group B e.g. the example conversation between C and D may be included by the server system in the POV of party A if specifically allowed by rules input to the server system .

The server system may implement backchannel conversations of a sequence based on privacy rules and limitations such that it implicitly is not viewable e.g. included in the POV of an individual except for individuals of the group explicitly involved and those with administrative privilege to do so. Additionally access to the interactions of a participant in a back channel regarding the parent conversation or parent sub conversation may be restricted by the server system by default. For example in some embodiments no information regarding the original conversation is included in the POV of anyone added to the back channel conversation. The method by which the back channel is created may be either for a user to find someone in a group or category of interest or to seek out a conversation with one or more specific known individuals.

Interactions which may include sub interactions may be identified by unique identifiers by the server system may have a time duration and implicit subject matter and may include messages from two or more participants. An interaction may be populated by the server system with messages between the individuals included in the conversation including the interaction. For example an interaction may be a conversation as defined according to a conventional messaging protocol and include the messages of such a conventional conversation. Accordingly the interaction may be stored as a data structure that corresponds to a traditional 1 1 chat multi user chat or group chat according to any mobile messaging protocol instant messaging protocol email or some other messaging protocol. Participants in the interaction will be provided access by the server system in the POVs thereof the text audio video or other application data transferred between an individual or group of party A and the group on side B as part of the interaction. An interaction may also have associated therewith by the server system a category or group which corresponds to a group organizational structure or unit that pertains to the group of people who are responders to the external party regarding that category.

In some embodiments the server system may maintain a state or status for a sequence the state describing the stage of processing which has been attached to the sequence. For a support ticket processing system states may include open pending processing closed need information or some other state. The state may be displayed with a representation of a sequence in the POV of a user. In some embodiments the state of a sequence may be hidden from the POV of one or more users that include the sequence in the POV thereof. In some embodiments tags mays also be attached to a sequence where a tag is a user defined text element that describes what is happening. Categories may be pre defined by a group and provided to the serer system . Categories may be selected from a collection of pre defined categories and applied to a sequence by the server system according to rules or received by the server system from a user. Categories may be distinguishable from tags in that a tag may be any user defined value whereas a category must be selected from a limited set of values.

At step party A connects to party B. Step may include an initial message from party A to a group e.g. company or group within a company including party B or directly addressed to party B or vice versa from B to A . The initial message may be generated by party A in the context of the conversation and sequence if these data structures already exist. Generating a message in the context of a conversation and sequence may include generating a message in an interface that is currently presenting a POV to the conversation and sequence one a user device or by generating a message for which an association to the conversation and sequence is explicitly made by a user by inputting identifiers to these data constructs or otherwise selecting them from a list of available data constructs.

As a result of the connection interactions between party A and party B may be generated that each include one or more messages from A to B responses from B to A messages from A to B and so on. As noted above each interaction according to the methods described herein may itself be include conversation as defined according to some other p2p protocol such as an SMS MMS or EMS conversation an instant messaging conversation or some other conversation. The data defining these p2p conversations may be stored by the server system as the interaction and may be updated as messages are sent and received. A category may be associated with the interaction by one or more of the participants in this case the category selected was category A.

The sequence may further be extended by generating other interactions. For example at step a new backchannel interaction between A and B is generated by the server system responsive to an instruction from party A or B. Subsequent interactions between A and B in the context of this backchannel will be associated by the server system with this backchannel and excluded by the server system from the POV of other participants in the sequence and conversation in accordance with the functionality associated with backchannel interactions as described herein. The interaction may inherit the category of interaction and therefore have category A associated therewith. Alternatively a new category may be associated with the interaction by one of the participants.

At step party B may add party C to the backchannel interaction . This may be performed by party B sending a message to party C in the context of or referencing the backchannel interaction . Subsequent messages form C to A or B responses from A or B and other messages among the parties A B and C in the context of the backchannel interaction may then be added to the interaction by the server system . As for other backchannel interaction the interactions among A B and C may be excluded from the POV of other participants of the conversation and sequence .

In some applications party B may additionally initiate a new interaction with party C. For example a backchannel interaction may be initiated including messages from party B responses from party C and or other messages between parties B and C. The interaction may have a category associated therewith by one of the participants in this case category B.

An interaction such as backchannel interaction may be modified as to the participants that one or both can have the interaction in their POV and can transmit and receive messages in the context of the interaction. For example interaction may be modified by party C at step to add party D to the interaction such as by sending a message by party C to party D. At step party B is removed such as by the server system in response to an instruction from party A. Subsequent interactions between C and D may then be associated with interaction of parties C and D. Interaction may be excluded from the POV of party B. The interaction may then include messages between parties C and D. As for other interactions a category may be associated with interaction such as category C in this case.

Referring to the POVs for the parties of the conversation of may be as illustrated. For example party A may be granted access by the server system to POV A of the sequence and be provided access to interactions to which A was a party. In the illustrated embodiment POV A may include access to interaction of parties B and C due to party A being an administrator or otherwise granted access to interaction . The interactions and may be presented to party A in an interface on a device using data received from the server system regarding the interactions . Likewise a user may interface with the server system in order to view sort filter edit or take other actions with respect to records of the interactions .

In a like manner party B may view and interact with POV B including interactions party C may view and interact with POV C including interactions and party D may view and interact with POV D including interactions .

In another example an individual party H may simply initiate communication with external party A by way of server system or some other direct routing as part of the same sequence . At step party H exchanges messages with party H as party of an interaction within sequence these interactions being added to sequence by the server system .

The method may include adding parties B and C to a conversation. This may include party A selecting on an interface to the server system provided on a computing device interface elements corresponding to parties B and C in the context of a conversation or otherwise providing an indication on an interface on a computing device to add parties B and C to the conversation. A conversation sequence and interaction maybe created in response to the instruction at step conversation A sequence A and interaction A in the illustrated example.

At step parties B and C accept requests. For example upon receiving the instruction to add parties B and C at step invitations may be transmitted by the server system to user B and C either by transmitting to devices associated with users B and C associating the invitation with accounts associated with users B and C or some other means. These invitations may then be presented on an interface of a device operated by users B and C the interface being operable to receive an acceptance or rejection of the invitation and transmitting notification of the acceptance or rejection to the server system or directly to party A.

After accepting the invitations messages within the conversation may be sent among the parties A B and C. As noted above messages may be transmitted by way of any p2p protocol and may be sent by way of the server system or reported to the server system such as by a module presenting an interface on devices operated by parties A B and C that is operable to receive and transmit messages within a given conversation and transmit notification of the messages to the server system for forwarding and or recording in a record of the conversation.

In some embodiments a user that invoked creation of the conversation party A in this case may further invoke creation of a sequence or interaction that excludes one or more parties in the conversation a backchannel interaction. For example an interface to the server system may receive a selection of a party to include in the backchannel interaction or to exclude from the backchannel interaction. In the illustrated example party A removes party B at step to create a backchannel including parties A and C. In response the server system may restrict access of party B and others from the backchannel interaction i.e. not include it in the POV of those not party to the backchannel interaction.

Party C may accept the request to participate in the backchannel interaction. For example an invitation may be transmitted to party C and presented in an interface on a device of party C. The interface may receive acceptance or rejection of the invitation and transmit the acceptance to the server system and or party A. Parties A and C may then send messages to one another at step in the context of the backchannel interaction in the same manner as for other methods described herein.

In the same manner as for steps another backchannel may be created between party A and another party that excludes party C. For example at step party A removes party C and adds D to create another backchannel interaction at step party D accepts the request and at step A and D send messages directly to one another in the backchannel interaction.

The party that invoked creation of the conversation may further instruct the server system to name that party as a participant in the conversation. This naming of the party as a participant may be recorded by the server system as an event in conversation A created at step .

Party A may continue to generate events and add other data to conversation A without adding other participants. For example at step party A may provide text photos video or other data to the server system with an instruction to make a note about the event and the server system may add a corresponding record of the note with the provided data to conversation A.

Party A may invite other participants to join conversation A and conduct interactions within conversation A such as according to the other methods described herein. For example party A may instruct the server system to create a back channel interaction with party B that is a child of event A. Party B may be requested to join the backchannel interaction and accept the request in the same manner as for other methods described herein. Likewise party A and party B may send messages to one another within the backchannel interaction in the same manner as for other methods described herein.

As for other methods disclosed herein parties B and C may accept the request and parties A B and C may send messages directly to one another in the context of conversation X sequence and interaction Y.

In an identical manner party A may add parties D and E to a conversation such as to conversation X or to a different conversation. A corresponding conversation M sequence and interaction N may be created to contain messages among parties A D and E in the same manner as for other methods disclosed herein. Alternatively sequence and interaction N may be added to conversation X. Parties D and E may accept the request and messages may be sent among parties A D and E in the same manner as for other methods disclosed herein.

One or more conversations sequences or interactions may be merged as shown for steps . For example some or all of the conversations X and M may be merged sequences and may be merged and interactions Y and N may be merged.

At step party A instructs the server system to merge sequences and . For example party A may provide an input to an interface to the server system that indicates that sequences and should be merged such as dragging an icon for sequence over sequence or vice versa. In response the serve system adds the interactions of sequence to sequence such as a backchannel interaction to interaction Y.

Sequence interactions may further be copied linked or otherwise added by the server system to sequence such that the interactions of sequence will be show in the POV of users as being part of sequence .

Party A may then take instruct the server system to take any actions with respect to sequence . For example party A may instruct the server system to remove party C and add party D to an interaction in order to create a backchannel in the same manner as for other methods described herein.

Referring to a conversation sequence or interaction may be split into two conversations sequences or interactions according to the illustrated method .

For example in the same manner as for other methods disclosed herein a conversation one or more sequences and one or more interactions may be generated for one or more parties according to the methods described herein. For example party A may contact group M and conversation X sequence and interaction Y may be created . One or more parties from group M may be added to the conversation such as party B from group M being added to interaction Y at step in the same manner as for other methods described herein. Parties A and B may send messages to one another within interaction Y in the same manner as for other methods disclosed herein.

Party B may instruct the server system to split sequence into two sequences such as by providing such an instruction to an interface to the serve presented on a device . In response the server system creates two sequence instances for sequences and . The participants in the original sequence may be maintained by the server system as participants of the sequences and . Accordingly these users may continue to send messages in the context of either sequence or in the same manner for interactions belonging to a sequence according to the other methods described herein.

The participants in the sequences and following splitting may be independently changed. In particular participants may be added or removed from either sequence independently. The process of adding or removing a participant to the sequences and may be performed in the same manner as for other methods described herein. For example party C may be added to sequence party B may remove him herself from the sequence and A and C may then send messages to one another within sequence in the same manner as for any of the other methods described herein.

An interaction may further include a reference to a parent interaction . For example a user may create a new interaction such as a backchannel interaction from an existing interaction. Accordingly the server system may include in the parent interaction field of the new interaction a reference to the existing interaction.

A sequence may further include a last received or sent field that includes a reference to the last message that was sent or received in the interaction . The server system may store in the participants field of a sequence user identifiers of participants of the interaction .

A conversation may additionally define one or more of categories that are available to be associated with an interaction or sequence that are in the conversation . A teams field may include a list of identifiers for teams that are authorized to participate in the conversation .

A roles field may define one or more roles associated with the conversation. For example the roles field indicate user identifiers of users along with a role in the conversation performed by each user. An administrators field may store user identifiers for those users having administrative privileges as defined hereinabove. A responders field may define routing rules for external inquiries that are received by the conversation e.g. to which user identifier an external inquiry may be addressed that is assigned to the conversation .

Referring to a conversation sequence interaction or message may be stored by the server system as an object that is accessed and updated according to the methods described herein. For example an object may include a global unique identifier used by the server system to address the object . A state may indicate a state of the object such as active if messages may currently be exchanged for that object or inactive if messages are not permitted to be associated with the object.

An object may also have a category or folder associated therewith as well as one or more tags or other metadata. Tags and categories may be associated with an object in the manner described hereinabove. In some embodiments an object may have one or more names aliases or labels associated therewith.

An object may have a start time and end time associated therewith. The start and end times may indicate a life for the object after which the object is no longer used to store messages in accordance with the methods described herein.

An object may be encrypted when shared between devices and may define an encryption type used to perform such encryption. The encryption type maybe any encryption type known in the art.

At step a user asks an entity for an interaction hereinafter the request such as by clicking a link on a web site hosted by the server system or transmission a message to the server system by any P2P protocol. At step the server system determined whether the request is received during business hours. If not at step then feedback may be transmitted to the user such as a message by any protocol indicating that no one is available to respond to the request. An entry may be placed in a queue referencing the request with sufficient information to respond later such as a user name account number phone number or other addressing information.

The queue may be managed to ensure a given level of service. For example at step a required response time as specified in a service level agreement SLA may be compared to an amount of time that an entry has been in a queue without being responded to. If at step this time is found to have been exceeded then at step feedback may be provided such as a message indicating that a response will be provided shortly. In either case during the time that a message is in the queue an amount of time since the last queue status update was provided to the user may be evaluated at step . If it is found to exceed a status update time then feedback may be provide at step e.g. a message indicating that a response to the request is pending.

If at step the request is found to have been received during business hours then the subsequent steps of the method may be executed. In some embodiments some or all of the steps of the method may be executed with respect to requests added to the queue at step .

At step customer information is looked up such as from a database accessible by the server system . The account or database entry used to obtain this information may be identified from information provided in the request a user identifier account number phone number or other address used by any messaging protocol. The data retrieved may include information describing a user s relationship with the provider such as an account number geographical location of the user tier of service contracted for spending history and the like.

At step content of the request may be processed such as by performing natural language processing NLP to determine the subject matter of the request e.g. a category department account product or some other concept or entity. If at step it is found that the request can be routed then at step some or all of a team service level agreement and category may be identified for the request. Other information the time before pending e.g. before a request is selected from a queue and responded to by a representative time before close e.g. a request is retired as being completed or otherwise no longer active and category queue size for the team e.g. a number of requests in a queue for the team and assigned to the category assigned to the request . If at step this information is not found to be obtainable from the request then at step user selected values for a category and or a requested provider e.g. department team or individual provided in the request by the user may be used to select a respondent department team or individual to the request and or classification of the request to a particular category. Processing may then continue at step .

In some instances requests may be generated internally by an entity. For example in response to a previous request by a customer an individual may instruct the serer system at step to split a ticket e.g. record containing the status of the request to generate another request that is then routed according to the steps of the method such as by assigning a category and continuing processing at step .

Following step the method may include identifying at step any available representatives for the team identified at step . For example the server system may maintain a queue for each representative indicating requests assigned to that representative. One or more available representatives may be selected in a round robin fashion or some other load balancing approach or may be selected based on a size of the queue for the one or more representatives of a team e.g. the representative having the fewest request in his her queue may be selected. In some embodiment step may include identifying all representatives of team that are on duty or otherwise currently working on responding to requests or that are available to respond to requests if needed e.g. on call or working remotely .

At step the queues of the one or more available representative selected may be evaluated. For example the number of requests in the queues may be compared to a threshold condition. Where the size of the available representatives queues exceeds some threshold condition e.g. a maximum number of requests or requests per available representative then the request may be placed in a queue for subsequent assignment o an individual representative. The queue at step may be a team specific queue whereas requests that have not yet been assigned to a particular team may be assigned to the same or a different queue.

If the size of the available representatives queue is not found to exceed the threshold condition at step then the method may include evaluating at step whether one of the available representatives has previously responded to requests from the user the user at step . If so then the request is assigned to the selected representative e.g. added to the queue of the selected representative. If not the method may include identifying a representative from among the available representatives based on one or more criteria. For example at step if the representative with the lowest average processing time is available e.g. is not currently responding to a request or has queue below some threshold then the request is assigned to that representative. Otherwise the available representative with the smallest queue may be identified at step and the request assigned to that representative. Alternatively a representative may be identified at step according to any load balancing or task assignment method.

Once assigned to a representative the progress of a request may be periodically evaluated or other actions may be taken with respect to the request. For example if at step the request e.g. a ticket used to track progress of the request by the server system is found to have been completed then at step it is assigned to be retired e.g. flagged as completed or inactive and a request is generated for the user to rate a response to the representative s handling of the request. The user s rating may be obtained and stored in association with the retired request according to any method known in the art. If when checked at step the request is not found to have been completed the request may remain assigned to the representative selected as described above.

In another example if a request is found to require escalation to a supervisor or require consultation with a specialist then the request may be assigned to the supervisor or specialist determined at step . If not then the request may remain assigned to the representative to which it was originally assigned.

In another example if the user is found not to be responding to messages from the assigned representative then one or more actions may be taken. For example if a time since the last response form the user is found to exceed some predetermined time limit then at step the request may be flagged as pending and feedback may be provided to the user i.e. a message indicating that a response is expected We noticed you went away . Periodically the time since the last response of the user may again be evaluated to determine whether the time since the last response exceeds some time limit which may be larger than the time limit at step e.g. between two and ten times longer than the time threshold at step . If this time limit is not found to have been exceeded then step may be repeated. Otherwise the request may be retired and feedback may be provided to the user i.e. a message indicating that the request was being closed or closed for lack of a response from the user.

In some embodiments requests handled by a representative may be initiated by the representative. For example at step a representative may contact a user such as by invoking transmission of a message by the server system to the user. The contact may not have a category associated therewith. At step the server system may evaluate whether the customer contacted has an identifier associated therewith i.e. has a corresponding record stored or accessed by the server system. For example the actual messages between the user and the representative that responds to the request may be by any peer to peer protocol. In particular a messaging session may be implemented as a conventional chat where two or more users are placed in a conversation or room and are subscribed to postings to each other. For example when A sends a message B receives it and when B sends a message A receives it. Accordingly a pipe or the conduit may exist between the two parties. In any such system an identifier may be defined each user and potentially also the conversation they are engaged in. So if we the pipe is not being provided directly by the server system or event if it is an identifier may be provided to the parties as well as the API application programming interface that will send the messages to the appropriate service that will then use those identifiers to route messages to the appropriate parties within the chat session between the parties. Accordingly step may include determining whether the user has such an identifier.

If at step the user is found to have such an identifier then a request may be created and added to the queue of the representative the request referencing the identifier determined to exist step . If the user contacted does not have an identifier then the contact may be flagged as pending and pushed to the user.

The method may be invoked in multiple ways. For example the method may be invoked upon receiving by the server system notification of a user clicking on a link or other interface element requesting an interaction or sending a message. The method may also be invoked upon receiving by the server system a request from the user to add parties to an existing conversation or a new conversation.

If a conversation is found to exist for the user then any sequences for that conversation may be retrieved at step . If a conversation is not found to exist for the user then a conversation is created i.e. a conversation object as described hereinabove.

The method may further include determining at step whether any sequences exist for the conversation determined to exist at step or created at step . If not one is made at step . If a sequence is found to exist at step then the sequence may be evaluated at step to determine whether it is active. If so then at step some or all of the interactions participants MRU most recently used interaction may be retrieved in reverse chronological order. The interactions of the downloaded sequence may be evaluated at step to determine whether they are active and if not then an interaction may be created at step which may be a backchannel interaction as described above.

If the sequence is not found to be active then at step the sequence may be evaluated to determine whether any old interactions occurred within the inactive sequence. If so these may be downloaded at step . Downloading may be performed in the background with respect to subsequent steps i.e. the subsequent steps illustrated may be performed while step is ongoing. For example processing may continue at step and step as described above.

After making an interaction at step or determining that a sequence has an active interaction at step the method may include evaluating at step whether some or all of the parties of the interaction have carrier identifiers i.e. identifiers used to identify the participants in a chat session or other messaging session as described above with respect to step . For example a session may be conducted over some other service other than one provided by the server system e.g. SKYPE SMS Text instant messaging or the like . Accordingly the carrier identifier may be an identifier for such a provider or usable according to a software developer kit SDK or other data interface to a service of such a provider. If so then chatting between the user and other participants in the interaction steps may be enabled and subsequent interactions among the participants may be associated with the interaction as described hereinabove.

If at step carrier identifiers are not found then the method may include determining whether the conversation is with a group as opposed to with just two participants. If not then the carrier identifiers may be obtained from the sequence steps at step and chat between the participants may be enabled .

If the conversation is found to be with a group then whether the participants of the conversation can be found is determined at step . If so then carrier identifiers may be obtained for the participants and chat enabled . If at step participants cannot be retrieved then at step a process may be initiated to add the request to a queue e.g. placed on a queue according step described above for response at a later time as representatives become available as described hereinabove. In particular as a representative becomes available later the request will then be routed to the representative as described above.

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

