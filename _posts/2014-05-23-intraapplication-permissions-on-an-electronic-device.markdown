---

title: Intra-application permissions on an electronic device
abstract: Various embodiments are provided in which intra-application permissions may be granted on an electronic device. An application may access data from another application if the application has the proper permission signed by a permissions server. In one embodiment, a request is received by a first application that is installed on a device. The request is from a second application for permission to access data associated with the first application. A permissions record for the second application may be stored in an application package of the second application. The first application may access the permissions record to determine whether the second application has permission to access the data associated with the first application. The first application may provide the second application with access to the data associated with the first application based, at least in part, on the permissions record stored in the application package of the second application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09489524&OS=09489524&RS=09489524
owner: BlackBerry Limited
number: 09489524
owner_city: Waterloo, Ontario
owner_country: CA
publication_date: 20140523
---
Embodiments of the subject matter generally relate to the field of electronic devices and more particularly to intra application permissions on electronic devices.

Electronic devices such as mobile devices smartphones tablet computers etc. can be configured to allow different types of applications to execute thereon. The applications can be pre installed or downloaded for example over a network. For example the applications can be downloaded from an application distribution platform that may be integrated with an operating system of the electronic device. These applications are typically tailored to the screen size and the hardware for the particular electronic device.

As part of an installation of an application an electronic device may present to a user a list of permissions that the user must authorize so that the application can be installed and operate on the electronic device. The application distribution platform may be designed such that all permissions associated with an application must be accepted prior to installation of the application. These permissions can include authorizations to allow the application to access data on the electronic device. For example some applications need permissions to access the phone logs contacts calendar information information about the device s current location and location history device identifiers or other information uniquely identifying the device etc. A group of applications may be associated with permissions for sharing data among applications in the group of applications. However for such a permission the group of applications must be associated with a common application provider certificate and the group of applications may be unable to limit the types of data shared between applications associated with the common application provider certificate.

The description that follows includes example systems methods techniques instruction sequences and computer program products that embody techniques of the present subject matter. However it is understood that the described embodiments may be practiced without these specific details. For instance although examples refer to authorizing permissions as part of installation of an application some embodiments for authorize permissions to applications that are already installed on the device. In other instances well known instruction instances protocols structures and techniques have not been shown in detail in order not to obfuscate the description.

Various embodiments are provided in which intra application permissions may be granted on an electronic device. An application may access data from another application if the application has the proper permission signed by a permissions server. The permissions may be granted on a per application basis and may not be associated with a common application provider certificate. Permissions or restrictions may be granular based on the types of data that can be accessed between the applications. Permissions or restrictions as described according to some embodiments may not depend on a current underlying permission or restriction system present on the electronic device.

In one embodiment a request is received by a first application that is installed on a device. The request is from a second application for permission to access data associated with the first application. In some embodiments a permissions record for the second application may for example be stored in an application package of the second application. The first application may access the permissions record to determine whether the second application has permission to access the data associated with the first application. The first application may provide the second application with access to the data associated with the first application based at least in part on the permissions record stored in the application package of the second application.

Some embodiments are used during installation of an application e.g. a candidate application that is being installed on an electronic device. As part of the installation the candidate application may request permission from another application already installed on the electronic device e.g. an installed application to access data controlled by the installed application. Thus a permission of a second application e.g. a candidate application can be defined as an authorization needed by a first application e.g. an installed application to access data that is controlled by the first application. In some embodiments the permission of the candidate application needs to be vetted by the installed application prior to allowing the candidate application to be installed and operational on an electronic device.

Therefore there can be two applications that are part of a process for requesting permission. A second application e.g. candidate application may be an application that has not yet been installed on the electronic device but is a candidate for installation depending on whether its permissions are authorized. The first application e.g. installed application is the application from which permission is being requested. There can be one to any number of permissions that need to be authorized prior to installation of the candidate application. Accordingly more than one installed application may need to vet permissions for the candidate application. For example in some instances there can be a one to one relationship between the number of permissions required and the number of installed applications whose authorization is needed. In other examples there may be more than one permission required from one or more installed applications by a candidate application.

While described such that operations for authorizing a permissions request is related to installation of a candidate application in some embodiments these operations can be used to authorize a permission for an application that is already installed. For example an application already installed on an electronic device can be upgraded or expanded through code or data downloaded at run time from a remote source. The upgrade can include one or more new permissions. Thus the upgraded application can also include an updated permissions record having one or more new permissions that need to be authorized by other installed applications. Also the second application can download a new permissions record from a remote server at runtime. In some embodiments the second application could send the permissions request to the first application on an on demand basis. For example the candidate application may request the permission s the first time the application is executed on the device. In other examples the first time a certain type of data is required by the candidate application a request for permission may at that time be requested from the first installed application. Accordingly the operations described herein can be used to authorize the one or more new permissions in an updated permissions record for an application that is already installed.

In some embodiments the candidate application may need to access data from the installed application in order to function as intended on the device. In some embodiments the permission is not obtained from the installed application the candidate application may for example not be installed on the device may be uninstalled from the device may be prevented from operating on the device or may not function as intended. In some embodiments if the permission is requested as part of an update to an application which has already been installed as described above the update may for example be declined or cancelled the application may be uninstalled may be prevented from operating or may not function as intended. In some embodiments once the permission to access data in the installed program is granted to the candidate program the candidate program can access the permitted data during operation without requesting further permissions.

The permissions server includes a permissions authority unit . The permission authority unit can be software hardware firmware or a combination thereof. For example the permissions authority unit can be software executing on a processor of the permissions server. The permissions authority unit can create permissions records for applications that are to be installed and executed on electronic devices. The permissions records for a second application can include a number of entries. Each entry can include an identification of a first application from which a permission is needed. The permission may be an authorization to access data by the second application that is controlled by the first application. The permissions may be used by the second application to execute after its installation on an electronic device. The permissions record can also include one or more digital certificates used to digitally sign the second application. Accordingly the permissions authority unit can be a centralized entity that can determine which permissions should be authorized between different applications executing on electronic devices. The permissions authority unit can also digitally sign a permissions record to authenticate the permissions record. As further described below a permissions record for a second application can for example be stored along with the second application as part of an application package that can be downloaded to electronic devices for installation. In some embodiments there can be multiple permissions authorities. For example application A may recognize permissions authority X as a recognized permissions authority while application B may recognize permissions authority Y as a recognized permissions authority. Accordingly different applications can use different permissions authorities to authorize their permissions.

The application server includes an application package unit . The application package unit can be software hardware firmware or a combination thereof. For example the application package unit can be software executing on a processor. The application server can also include a machine readable storage medium for storage of different application packages that can be downloaded to electronic devices. In this example the application package unit downloads an application package to the electronic device over the network . For example a process on the electronic device can download an application package thereby causing the application package unit to transmit the application package to the electronic device over the network . In some embodiments the application package is not downloaded from the application server . For example the application package can be emailed to the electronic device . Also the application package can be loaded from a device that is coupled to the electronic device . For example the application package can be loaded from a Universal Serial Bus USB device that is connected to a port on the electronic device . The application package includes a second application and a permissions record . The application package can also include an installation file associated with the second application. The installation file can be stored by an application installer of the electronic device . When the second application is installed on the electronic device the application package can be stored on the electronic device . The application package can remain stored on the electronic device after the second application is installed and is operational.

In some embodiments the permissions authority unit digitally signs the permissions record . In some embodiments a developer can create the second application . The developer can also create the permissions record that has not yet been digitally signed by the permissions authority unit . The developer can then transmit the permissions record to the permissions server using a device that is coupled to the network . The permissions authority unit can validate the content of the permissions record . Validation can include whether the defined permissions in the permissions record for access of data between applications can be authorized. If the content is validated the permissions authority unit can digitally sign the permissions record and return digital signature of the permissions record to the developer. The developer can then embed the digital signature of the permissions record and the permissions record into the application package . The developer can then sign the application package and upload the application package to the application server . Subsequently the electronic device obtains a copy of the application package and installed the second application . After being installed the second application can then request data from the first application . The second application can provide the signed permissions record as proof of authorization to the first application as further described below . Thus the permissions record includes a list of permissions that may be needed from other installed applications on the electronic device .

The electronic device includes a package manager and a first application . The package manager can be software hardware firmware or a combination thereof. For example the package manager can be software executing on a processor of the electronic device . As shown by the dashed lines the electronic device may be in the process of storing the application package that includes the second application and the permissions record . An example of a permissions record is depicted in which is described in more detail below.

The first application can be software that executes on a processor. For example the first application can be an application that was pre loaded on the electronic device or was previously downloaded and installed in the electronic device e.g. after its permissions in its permissions record were authorized by other already installed applications .

As further described below the first application can use a permissions authority digital certificate to authenticate a digital signature of the permissions authority unit that is appended to the permissions record . Also the first application can retrieve a copy of the digital certificate used to authenticate the second application from the package manager . In particular the package manager can have or retrieve the digital certificates of applications.

The permissions server may not need to be continually connected to the network . For example the permissions server can be offline while signing the permissions record . Also the permissions server can be offline at the time of the verification by the first application regarding access of data by the second application . In some embodiments the permissions authority digital signature can be stored in the electronic device thereby not requiring the permissions server to be online at the time of the verification of the permissions record . For example the permissions authority digital certificate can be embedded in the first application .

The permissions server includes a network interface a processor the permissions authority unit and a machine readable storage medium that are communicatively coupled together through a bus . The machine readable storage medium can be a volatile or non volatile medium for storage of data. The network interface can be software hardware firmware or a combination thereof used for communication over the network .

The application server includes a network interface a processor the application package unit and a machine readable storage medium that are communicatively coupled together through a bus . The network interface can be software hardware firmware or a combination thereof used for communication over the network .

The electronic device includes a network interface a processor the package manager and a machine readable storage medium that are communicatively coupled together through a bus . The network interface can be software hardware firmware or a combination thereof used for communication over the network . The machine readable storage medium can be a volatile or non volatile medium for storage of data. In this example the machine readable storage medium is configured to store the first application a permissions authority digital certificate and a second application digital certificate . The machine readable storage medium is configured to store the application package that includes the second application and the permissions record . In this example as shown by the dashed lines the second application is not yet installed.

As part of the first application granting access to the second application either during or after install of either the first application or the second application the first application obtains the permissions record before authorizing the second application to access data controlled by the first application . The second application can make a permission request to the first application . The first application can then determine whether to authorize permission. The operations of the permission authorization by the first application are described in reference to the flow charts depicted in which are described in more detail below .

At block a request is received by a first application that is installed on a device. The request is from a second application and is for permission to access data associated with the first application. For example the second application can be a candidate application that is attempting to be installed on the device. The request can be for a permission to access data by the candidate application after installation of the candidate application on the device. In some embodiments this request can be received in response to downloading the candidate application for installation on the device. With reference to the second application can access the permission record that lists the permissions needed to be authorized in order for the second application to be installed and execute on the electronic device . In this example the second application determines there is one permission that needs to be authorized prior to its installation. The permission needs to be authorized by the first application . The second application transmits a permissions request to the first application . In some embodiments the second application can already be installed on the device. For example the permissions request can be received if an update is received for a permissions record of an application that is already installed on the device. Operations of the flowchart continue at block .

At block a permissions record for the second application is accessed. In some embodiments the permissions record can be accessed from the application package for the second application. With reference to the first application can access the permissions record for the second application . The first application can obtain the permissions record from the second application . Alternatively the first application can retrieve the permissions record that is still within the application package stored in the machine readable storage medium . The first application can access the permissions record using a file system path associated with the application package . Accordingly the first application can access the application package for the second application at runtime when the second application attempts to access data from the first application . In some embodiments the first application can access the permissions record for the second application from a source other than the application package . For example the first application can retrieve the permissions record from a server over the network at runtime in response to the permissions request from the second application . Operations of the flowchart continue at block .

At block there is verification that the second application has permission to access the data associated with the first application based at least in part on the permissions record stored in the application package of the second application. For example with reference to the second application is the second application . In one embodiment a second application digital certificate stored in the permissions record is verified. In some embodiments the second application digital certificate stored in the permissions record can be verified by determining whether the second application digital certificate stored in the permissions record matches a different copy of the second application digital certificate from a trusted source. For example with reference to the trusted source can be the package manager . Thus the first application the first application can determine if the second application digital certificate used to authenticate the second application provided by the package manager matches the second application digital certificate stored in the permissions record . If the two second application digital certificates match the second application digital certificate stored in the permissions record is validated. In some embodiments the first application can determine if the two second application digital certificates match by performing a bit wise comparison of the bits of the two second application digital certificates. If verified the first application can authorize permission. If not verified the first application can deny permission. Once the different permissions in the permissions record are verified the second application can be permitted to access the data in the first application protected by the permission. In this example of the flowchart only the second application digital certificate stored in the permissions record is validated prior to authorizing permissions. In some other embodiments a permissions authority digital signature that can be appended to the permissions record can also be validated prior to authorizing permission. An example of such operations is depicted in which are described in more detail below. Operations of the flowchart are complete.

The permissions record may include a digital certificate of the candidate application . In particular the digital certificate of the candidate application is a digital certificate used to authenticate the candidate application for which the permissions record is associated. As described in more detail below the installed applications use the digital certificate of the candidate application to authorize the permissions in the permissions record . The permissions record also includes a permissions authority digital signature . The installed applications use the permission authority digital signature to validate the permissions in the permissions record . In particular the permissions authority digital signature can be used to verify that the permissions record was authenticated by a permissions authority that determines which permissions are authorized between applications on electronic devices. A more detailed description of these operations are now described.

At block a permissions request may be received by a first application from a second application to access data controlled by or associated with the first application by the second application. The permissions request can be received at runtime after the first application and second application are installed. For example the permissions request can be received if the second application is already installed and is being upgraded to include one or more new permissions. In a different example the permissions request can be received in response to initiation of installation of the second application a candidate application on a device. With reference to the application package that includes the second application and the permissions record are downloaded from the application server into the machine readable storage medium of the electronic device . With reference to the second application can access the permission record that lists the permissions needed to be authorized in order for the second application . In this example the second application determines there is one permission that needs to be authorized. The permission needs to be authorized by the first application . The second application transmits a permissions request to the first application . Operations of the flowchart continue at block .

At block the permissions record for the second application is accessed by the first application. With reference to the first application accesses the permissions record for the second application . The first application can obtain the permissions record from the second application . Alternatively the first application can retrieve the permissions record that is still within the application package stored in the machine readable storage medium . Accordingly the first application can access the application package for the second application at runtime when the second application attempts to access data from the first application . Operations of the flowchart continue at block .

At block the permissions record can be verified by the first application that the permissions record was digitally signed by a recognized permissions authority. With reference to the first application verifies that the permissions record was digitally signed by the permissions authority unit . For example a permissions authority digital signature created by the permissions authority unit can be appended to the permissions record . As described above the permissions authority unit can be a centralized entity that can determine which permissions should be authorized between different applications executing on electronic devices. In addition to creating a permissions record for an application the permissions authority unit can digitally sign the permissions record to authenticate the permissions record. A copy of the permissions authority digital certificate can be stored in the machine readable storage medium or memory of the electronic device . In some embodiments the permissions authority digital certificate can be downloaded from the permissions server . The permissions authority digital certificate can include a public signing key that is used to verify the permissions authority digital signature that is appended to the permissions record . Accordingly the first application can use the public signing key in the permissions authority digital certificate to verify a digital signature over the permissions record . Operations of the flowchart continue at block .

At block a determination is made of whether the permissions record was correctly digitally signed by a recognized permissions authority. With reference to the first application can make this determination based on the successful verification of the digital signatures over the permissions record as described above . In particular if the digital signature can be successfully verified by the first application using the public signing key of the permissions authority in the permissions authority digital certificate. If the permissions record has been digitally signed by the permissions authority operations of the flowchart continue at transition point A. Otherwise operations of the flowchart continue at transition point B.

At block a digital certificate for the second application is accessed by the first application from the package manager. With reference to the first application accesses the second application digital certificate for the second application from the package manager . In particular the package manager can include copies of the digital certificates for the different applications that are downloaded into the electronic device . As described above the second application digital certificate can be used to digitally sign the second application to authenticate the second application . Operations of the flowchart continue at block .

At block the digital certificate that is within the permissions record is retrieved by the first application. With reference to the first application can retrieve the second application digital certificate for the candidate application from the permissions record . Operations of the flowchart continue at block .

At block a determination is made of whether the digital certificate in the permissions record matches the digital certificate provided by the package manager. In some embodiments the first application can determine if the two second application digital certificates match by performing a bit wise comparison of the bits of the two second application digital certificates. With reference to the first application determines if the second application digital certificate used to authenticate the second application provided by the package manager matches the second application digital certificate stored in the permissions record . If the two second application digital certificates match operations of the flowchart continue at block . Otherwise operations of the flowchart continue at block .

At block permission for the second application is authorized to access the data that is associated with or controlled by the first application. With reference to if the permissions listed in the permissions record are authorized the second application is then permitted to access data that is controlled by the first application on the electronic device shown as the installed application in . Thus similar operations described in can be performed for each of the installed applications identified in the permissions record . Operations of the flowchart are complete along this branch of the flowchart .

At block permission for the second application is denied access to the data that is associated with or controlled by the first application. With reference to the first application denies access by the second application to access data that is controlled by the first application .

Also from transition point B of to transition point B of operations of the flowchart start at block . Accordingly the permission for the second application can be denied if the digital signature appended to the permissions record is not authenticated or the digital certificate in the permissions record does not match the digital certificate used to authenticate the second application provided by the package manager. Operations of the flowchart are complete along this branch of the flowchart .

While described such that verification of the digital signature of the permissions authority block occurs prior to determination of whether the two copies of the digital certificates for the second application match blocks in some embodiments the order of these operations can be switched. Thus the determination of whether the two copies of the digital certificates for the second application match can occur prior to the verification of the digital signature of the permissions authority.

Therefore as described the permissions authority signing key in the permission authority digital certificate that is used to sign the permissions record can be different from the signing key in the digital certificate for the second application that is stored in the permissions record for verifying permission by the first application. Also the signing key for the first application and the signing key for the second application can be different. Therefore while allowing the first application and the second application to be signed with different signing keys some embodiments can still restrict the sharing of permissions to a subset of applications that are executing on the electronic device. Additionally as described the permission authorization can be without displaying a request for authorization to a user of the device.

It is noted that the first application and second application described above may be created by different entities. For example the first application may be provided by a first company and the second application may be provided by a second company. The first and second applications do not need to be associated with a common application provider certificate and can be installed separately using the application installer of the electronic device. Using the permissions record provided by the permissions server and stored in the application package a second application can be granted access to part or all of the data maintained by the first application. Therefore intra application permissions can be granted despite limitations of the application installer and regardless of whether the applications are associated with a common application provider certificate.

In some embodiments an application can be digitally signed more than once. For example the application can be digitally signed using multiple different private keys associated with multiple different digital certificates. Accordingly for the examples described herein the second application can have multiple digital certificates. Thus the permissions record for the second application can store more than one digital certificate for the second application. In turn the operations by the first application to verify that the second application has permission to access its data can be modified such that the first application can verify one a subset or all of the digital certificates associated with the second application that is stored in the permissions record.

The example sequence of operations described above are but one possible example of many possible sequences. Many other sequences are possible with different operations and different ordering of operations. The embodiments are not limited to any particular ordering of operations.

As will be appreciated by one skilled in the art aspects of the present disclosure may be embodied as a system method or computer program product. Accordingly aspects of the present disclosure may take the form of an entirely hardware embodiment a software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present disclosure may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more non transitory computer readable medium s may be utilized. Non transitory computer readable media comprise all computer readable media with the sole exception being a transitory propagating signal. The non transitory computer readable medium may be a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

Computer program code for carrying out operations of the embodiments may be written in any combination of one or more programming languages including an object oriented programming language such as Java Smalltalk C or the like and conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on a user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through any type of network including a local area network LAN a personal area network PAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

Further realizations may include fewer or additional components not illustrated in e.g. video cards audio cards additional network interfaces peripheral devices etc. . The processor the storage device s the network interface the memory and the display are coupled to the bus . Although illustrated as being coupled to the bus the memory may be coupled to the processor .

While the embodiments are described with reference to various implementations and exploitations it will be understood that these embodiments are illustrative and that the scope of the subject matter is not limited to them. In general techniques for intra application permissions on electronic devices as described herein may be implemented with facilities consistent with any hardware system or hardware systems. Many variations modifications additions and improvements are possible.

Plural instances may be provided for components operations or structures described herein as a single instance. Finally boundaries between various components operations and data stores are somewhat arbitrary and particular operations are illustrated in the context of specific illustrative configurations. Other allocations of functionality are envisioned and may fall within the scope of the subject matter. In general structures and functionality presented as separate components in the example configurations may be implemented as a combined structure or component. Similarly structures and functionality presented as a single component may be implemented as separate components. These and other variations modifications additions and improvements may fall within the scope of the subject matter.

