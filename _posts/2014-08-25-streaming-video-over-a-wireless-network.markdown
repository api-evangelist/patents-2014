---

title: Streaming video over a wireless network
abstract: Streaming video to a wireless device is described. For example, one embodiment of a computer-implemented method for providing a multimedia stream to a wireless device over a wireless network comprises: receiving a request for a video stream from a wireless device; requesting the video stream from a streaming server on behalf of the wireless device; streaming the video stream from the streaming server and storing the video stream or portions thereof in a buffer; streaming the video stream from the buffer to the wireless device; detecting that the wireless device has lost communication with the wireless network; sending a command to the streaming server to pause the streaming of the video stream and maintaining a network connection to the remote streaming server; detecting that the wireless device has regained communication with the wireless network; determining a point within the video stream at which the wireless device lost communication; and resuming streaming of the video stream to the wireless device at the determined point within the video stream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09143547&OS=09143547&RS=09143547
owner: Microsoft Technology Licensing, LLC
number: 09143547
owner_city: Redmond
owner_country: US
publication_date: 20140825
---
This application is a continuation of and claims priority to U.S. patent application Ser. No. 12 062 062 filed Apr. 3 2008 entitled System and Method for Streaming Video over a Wireless Network. The entire teachings of the above application is incorporated herein by reference.

The set of network protocols which enable communication over the Internet is sometimes referred to as the TCP IP protocol suite after its two most well known protocols the Transmission Control Protocol TCP and the Internet Protocol IP . The TCP protocol which resides at the transport layer of the Internet protocol stack is a reliable connection oriented protocol which ensures that data arrives at its destination undamaged and in order. In addition the TCP layer continuously measures network load and throttles its sending rate in order to avoid overloading the network. The IP protocol performs the basic task of moving packets of data from source to destination using IP addresses. IP can carry data for a number of different higher level protocols each of which are identified by a unique IP Protocol Number.

In order to establish communication with a remote host on a TCP IP network a socket connection to the remote host must be established. A socket is defined by the combination of the IP address of the remote host and a port number identifying a remote application type. For example port is the standard port number for Hypertext Transport Protocol HTTP traffic and port packets are typically processed by a Web server.

A variety of wireless messaging and personal information management PIM devices have been introduced over the past few years including for example the T Mobile Sidekick LX designed by the assignee of the present application. The TCP IP protocol is used by many of these devices to communicate over wireless networks e.g. the General Packet Radio Service GPRS used on GSM networks . Consequently in order to communicate with a remote host these devices must open and maintain a socket connection to the remote host in the same manner as wired computer systems e.g. PC desktops and notebooks .

One problem with this scenario is that due to the inherent unreliability of wireless networks wireless socket connections may not be suitable for certain types of applications. For example stream based applications such as Secure Shell SSH connections require a significant amount of initialization overhead in order to establish e.g. negotiating encryption variables user authentication data etc and must be maintained over a relatively long period of time i.e. in comparison to transaction based applications such as Web browsing . Similarly when a user is viewing a video or audio stream over a wireless network and the wireless connection is temporarily broken the user must reconnect to the remote server and start the video or audio stream from the beginning. For these types of connections when a socket is closed e.g. due to an unreliable wireless network it is typically quite burdensome on the end user who loses all state information associated with the connection and must then take the time to reestablish the connection with the remote server.

Accordingly what is needed is an improved mechanism for maintaining connections with remote servers over a wireless network.

A system and method are described for streaming video to a wireless device. For example one embodiment of a computer implemented method for providing a multimedia stream to a wireless device over a wireless network comprises receiving a request for a video stream from a wireless device requesting the video stream from a streaming server on behalf of the wireless device streaming the video stream from the streaming server and storing the video stream or portions thereof in a buffer streaming the video stream from the buffer to the wireless device detecting that the wireless device has lost communication with the wireless network sending a command to the streaming server to pause the streaming of the video stream and maintaining a network connection to the remote streaming server detecting that the wireless device has regained communication with the wireless network determining a point within the video stream at which the wireless device lost communication and resuming streaming of the video stream to the wireless device at the determined point within the video stream.

Throughout the description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without some of these specific details. In other instances well known structures and devices are shown in block diagram form to avoid obscuring the underlying principles of the present invention.

Various embodiments may be implemented on a wireless device which communicates with a data processing service as illustrated generally in . Embodiments of a service and data processing device are described in U.S. Pat. No. 6 721 804 entitled NPS AM Ser. No. 09 714 897 filed Nov. 15 2000 which is assigned to the assignee of the present application and which is incorporated herein by reference. Certain features of the service and an exemplary data processing device will now be described followed by a detailed description of a system and method for streaming video to a wireless device using a service. As an initial matter however it should be noted that the specific data processing device and system architecture described in U.S. Pat. No. 6 721 804 are not required for implementing the underlying principles of the invention. Rather the embodiments of the invention described below may be implemented on virtually any type of data processing device including standard personal computers personal digital assistants and wireless telephones.

In one embodiment the service converts standard applications and data into a format which each data processing device can properly interpret. Thus as illustrated in one embodiment of the service includes content conversion logic for processing requests for Internet content . More particularly the service acts as a proxy for the data processing device forwarding Internet requests to the appropriate Internet site on behalf of the data processing device receiving responses from the Internet site in a standard Internet format e.g. Web pages with embedded audio video and graphical content e mail messages with attachments . . . etc and converting the standard Internet responses into a format which the data processing device can process e.g. bytecodes as described in the co pending applications .

For example the conversion logic may include a hypertext markup language HTML rendering module not shown for interpreting HTML code and downloading any embedded content in the HTML code e.g. graphics video sound . . . etc to the service . The conversion logic may then combine the HTML code and embedded content and generate a set of bytecodes for accurately reproducing the requested content on the data processing device . As described above in one embodiment the bytecodes may be Java bytecodes applets. However the conversion logic may generate various other types of interpreted and or non interpreted code depending on the particular type of data processing device being used e.g. one with an interpreter module or one without .

Because one embodiment of the service maintains an intimate knowledge of the capabilities configuration of each data processing device e.g. screen size graphics audio capabilities available memory processing power user preferences . . . etc it can reconstruct the requested Internet content accurately while at the same time minimizing the bandwidth required to transmit the content to the device . For example the conversion logic may perform pre scaling and color depth adjustments to the requested content so that it will be rendered properly within the data processing device s s display. In making these calculations the conversion may factor in the memory and processing power available on the data processing device . In addition the conversion logic may compress the requested content using a variety of compression techniques and thereby preserve network bandwidth.

To solve the connectivity problems associated with wireless socket connections described above the assignee of the present application developed techniques for emulating an open socket connection even when wireless connectivity is temporarily lost. These techniques are described in the co pending U.S. patent application SMPSCOWN Ser. No. 11 305 789 which is assigned to the assignee of the present application and which is incorporated herein by reference. Specifically as illustrated in in one embodiment a resumable socket module is configured above the TCP IP layer of the network protocol stack on the wireless device . In this embodiment the resumable socket module acts as an interface between the TCP IP layer and applications which require network communication e.g. SSH clients Web browsers email clients etc . The client side protocol stack also includes a set of wireless network layers for supporting wireless communication at the data link physical tier of the OSI protocol stack e.g. GPRS GSM wireless network layers . The technical details of these layers are well known and are not pertinent to the underlying principles of the invention.

In one embodiment the resumable socket module coordinates with a corresponding service side resumable socket module at the data service to emulate an open socket connection even when wireless connectivity is temporarily lost illustrated in as a virtual socket connection . Specifically in one embodiment the resumable socket modules and on the wireless device and service respectively monitor the number of bytes transmitted and received between the application and remote server . Even when the wireless device loses network connectivity e.g. due to the user moving out of range the service maintains an open socket connection with the remote server on behalf of the user. In one embodiment the service maintains the open socket connection for a specified time period e.g. 5 minutes . If the wireless device reconnects to the wireless network within this specified time period the resumable socket module on the client and the resumable socket module on the service communicate with one another to synchronize the data transmitted received. Thus because the user s session with the remote server is preserved the user will not lose any session state information and will not be burdened with re connecting and re authenticating with the remote server.

In one embodiment the TCP IP layer is implemented using the Java Application Programming Interface API for TCP sockets. The resumable socket module then communicates with the TCP IP module by invoking methods via the Java sockets API. See e.g. Calvert TCP IP Sockets in Java Practical Guide for Programmers Morgan Kaufmann 2002 for additional detail related to Java TCP socket implementations. It should be noted however that the particular type of program code used within the network stack is not pertinent to the underlying principles of the invention.

In addition in one embodiment retransmission buffers and are maintained by each of the resumable socket modules and respectively. The retransmission buffers and may be implemented as predefined regions in memory which store a specified number of bytes transmitted from resumable socket module and resumable socket module respectively e.g. 32 kBytes 16 kBytes etc . This allows the resumable socket modules and to transmit the bytes stored therein in the event that the wireless connectivity of the wireless device is temporarily lost.

At the resumable socket modules on the wireless device and the service begin counting the number of bytes transmitted and received over the new socket connection and temporarily buffering the bytes transmitted. As mentioned above this may be accomplished via counter modules and and retransmission buffers and . At the wireless device loses it s connection to the wireless network. Nonetheless at this stage the resumable socket module on the wireless device emulates an open socket connection with the network application on the wireless device and the resumable socket module on the service maintains the open socket connection with the remote server on behalf of the wireless device . Thus the socket connection is preserved notwithstanding the fact that the wireless network is temporarily unavailable.

As mentioned above in one embodiment the service maintains the open socket connection for a specified period of time e.g. 5 minutes . If wireless connectivity is not reestablished with the wireless device during that period of time determined at then at the socket connection with the remote server is closed and the counter values and the raw data stored within the buffers within the resumable socket modules is cleared.

If however the device s wireless connectivity is reestablished with the specified period of time then at the resumable socket modules and communicate to identify the data that needs to be re transmitted from each of the retransmission buffers and respectively and synchronize this data at . For example in one embodiment the resumable socket module on the wireless device sends a message to the resumable socket module on the service indicating the number of the last incoming byte that it received. The resumable socket module on the service then transmits those bytes yet to be received by the resumable socket module on the wireless device. For example if the resumable socket module on the wireless device indicates that the last byte that it received is byte 502 and the outgoing byte number stored within the outgoing counter on the service is 2000 as illustrated in then the resumable socket module transmits bytes 503 to 2000 from the retransmission buffer . Alternatively in one embodiment the resumable socket module on the service may first transmit an indication that the outgoing byte number stored in its outgoing counter is 2000. In response the resumable socket module on the wireless device may request byte s 503 through 2000 from the resumable socket module on the service which resumable socket module will then transmit. Various alternate additional synchronization mechanisms may be employed while still complying with the underlying principles of the invention.

The resumable socket module on the service may be brought up to date in the same manner as described above. For example if the resumable socket module on the service indicates that the last byte that it received is byte 2 and the outgoing byte number stored within the outgoing counter on the wireless device is 21 then the resumable socket module transmits bytes 2 through 22 from its retransmission buffer .

In one embodiment of the invention described above the resumable socket module appears as a normal TCP or UDP connection to the application i.e. providing the same API as a standard TCP connection. As a result these embodiments are implemented transparently to existing applications i.e. without the need to modify the existing application and or the socket API . When the underlying i.e. real TCP connection is broken the application simply sees that no data has arrived for a period of time and outgoing data is stored temporarily within the retransmission buffer. After the device reconnects to the wireless network the application will see incoming data arriving again. If the device is not able to reconnect the application simply sees the socket disconnected i.e. a few minutes after it actually happened .

One embodiment of the invention employs additional techniques to maintain a connection with a remote streaming server when streaming video and or audio to a wireless device. Specifically in one embodiment when the wireless device temporarily loses its connection to the wireless network and therefore the service while streaming video the service pauses the video stream at the remote streaming server on behalf of the user. The service may also continue to receive the video stream for a specified period of time after the wireless device loses its connection prior to pausing the video . When the wireless device reconnects to the wireless network the service resumes the video stream from the correct point i.e. the point where the wireless device lost contact with the wireless device .

As illustrated in this embodiment of the invention includes a resumable streaming module executed on the service which acts as a streaming proxy for the wireless device . In response to a request from the wireless device to stream video content the resumable streaming module initiates a connection to a remote streaming server on behalf of the wireless device using the set of protocols supported by the streaming server and authentication information e.g. user name and password provided by the user. In one embodiment the streaming server streams video content using Real time Transport Protocol RTP a standardized packet format for delivering multimedia content over the Internet and the Real Time Streaming Protocol RTSP which allows a client to remotely control a streaming media server with VCR like commands such as play pause fast forward and rewind. While the remainder of this detailed description will be described with respect to RTP RTSP it should be noted that the underlying principles of the invention are not limited to any particular set of protocols.

In operation the resumable streaming module stores video content received from the remote streaming server within a buffer and attempts to deliver the video content to a playback buffer on the wireless device . Various different buffer types may be used including first in first out FIFO buffers and circular buffers. Moreover the buffers may be implemented using dedicated hardware or using a specified portion of a larger memory e.g. such as system RAM . The underlying principles of the invention remain the same regardless of the hardware and software configuration used to implement the buffers. In addition although illustrated as a single buffer in a separate receive buffer for receiving content from the streaming server and transmit buffer for storing content prior to transmission to the wireless device may be used.

When the wireless device remains connected to service via the wireless network the resumable streaming module temporarily buffers the video stream and forwards the video stream to the wireless device . A video player application on the wireless device then renders the video stream. In one embodiment a resumable streaming module on the wireless device transmits an acknowledgement each time it successfully receives a packet of video data. The acknowledgement serves to notify the resumable streaming module that it may remove or overwrite the video packet in its local buffer . In one embodiment the packet of video data is an RTP packet.

In one embodiment of the invention when the wireless device loses its connection to the wireless network the resumable streaming module maintains a connection with the remote streaming server on behalf of the user. As a result the user is not forced to reestablish a connection to the remote streaming server and begin the streaming process from the beginning each time the wireless device moves out of range of the wireless network e.g. when the user drives through a tunnel . In one embodiment in response to detecting that the wireless device has lost its connection the resumable streaming module issues a pause command to the remote streaming server to pause the video playback. In one embodiment the pause command is the RTSP PAUSE command. However as mentioned above the underlying principles of the invention are not limited to any particular protocol.

In an alternate embodiment the resumable streaming module does not issue the pause command as soon as it detects that the wireless device has lost its connection. Rather in this embodiment it continues to receive the video stream from the remote streaming server for a period of time. If the wireless device does not reconnect to the wireless network following the period of time the resumable streaming module then issues the pause command.

When the wireless device reconnects to the wireless network it transmits a notification to the resumable streaming module . In response the resumable streaming module streams video content to the wireless device from the point where it left off i.e. before the wireless device lost its connection . In one embodiment the notification sent by the wireless device identifies the video content successfully received prior to the lost connection. This may be accomplished in a variety of ways. For example in one embodiment the resumable streaming module on the wireless device tracks the number of bytes successfully received and the resumable streaming module on the service tracks the number of bytes transmitted. In this embodiment the notification sent by the wireless device indicates the number of bytes successfully received and the resumable streaming module subtracts these values to determine and re transmit the video content which was lost in transmission i.e. the content which was transmitted but not received .

Alternatively in one embodiment the resumable streaming module on the wireless device identifies the specific point in the video stream which has been received and or rendered. For example the resumable streaming module may uniquely identify the last successfully received video packet e.g. using a packet ID or sequence number . In response the resumable streaming module on the service transmits the video stream from the point identified by the resumable streaming module on the wireless device. Various other techniques may be used to identify the appropriate point from which to resume playback while still complying with the underlying principles of the invention.

In one embodiment if the wireless device does not reconnect to the wireless network within a specified period of time e.g. 1 hour then the resumable streaming module disconnects from the remote streaming server. In some circumstances however the resumable streaming module will be able to maintain the connection with the remote streaming server for an extended period of time e.g. by communicating with the server to notify the server that it is still online . In one embodiment the connection with the remote streaming server is a TCP socket connection employing a first set of network protocols and the connection with the wireless device employs a second set of network protocols.

In addition to buffering the stream the service may perform other operations to allow the stream to be rendered on the wireless device. For example in one embodiment the content conversion module described above with respect to converts the video stream from a first format in which it is received from the streaming server to a second format which the wireless device can process. The type of conversion may depend on variables such as the current available bandwidth and the video processing capabilities of the wireless device. For example if the wireless device is connected through a relatively low bandwidth wireless connection then the content conversion module may compress the video stream more than it is already compressed so that it may be sent to the wireless device. The content conversion module may also modify the format of the video stream to a format that the wireless device is capable of interpreting e.g. MPEG 4 Real Video etc. .

Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine executable instructions which cause a general purpose or special purpose processor to perform certain steps. Alternatively these steps may be performed by specific hardware components that contain hardwired logic for performing the steps or by any combination of programmed computer components and custom hardware components.

Elements of the present invention may also be provided as a machine readable medium for storing the machine executable instructions. The machine readable medium may include but is not limited to floppy diskettes optical disks CD ROMs and magneto optical disks ROMs RAMs EPROMs EEPROMs magnetic or optical cards propagation media or other type of media machine readable medium suitable for storing electronic instructions. For example the present invention may be downloaded as a computer program which may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection .

Throughout the foregoing description for the purposes of explanation numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent however to one skilled in the art that the invention may be practiced without some of these specific details. For example although the embodiments described above are limited to a wireless implementation the underlying principles of the invention may be employed in a variety of different types of networks. Similarly while the protocol stack described above is implemented using RTP RTSP and TCP IP the underlying principles of the invention are not limited to any particular type of streaming protocol stack. For example in one embodiment UDP is used instead of TCP.

Accordingly the scope and spirit of the invention should be judged in terms of the claims which follow.

