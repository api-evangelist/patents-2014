---

title: Web page error reporting
abstract: An error in a web page displayed on a device is detected. The error is assigned to a bucket to indicate a type of the error, and a record describing the current state of the device is generated. Both an indication of the bucket and the record describing the current state of the device are then sent to a server. At the server, error information including error records and bucket identifiers are received from multiple devices. Each error record describes a current state of one of the multiple devices at a time when an error in a web page displayed on the one device was detected. Each bucket identifier corresponds to one of the error records and describes a type of the error associated with that error record. The error records are grouped into multiple baskets based at least in part on the current state information in the error records.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09384119&OS=09384119&RS=09384119
owner: Microsoft Technology Licensing, LLC
number: 09384119
owner_city: Redmond
owner_country: US
publication_date: 20140127
---
This application is a continuation of U.S. patent application Ser. No. 13 294 898 filed Nov. 11 2011 entitled Web Page Error Reporting to Kellie Eickmeyer et al. which is hereby incorporated by reference herein in its entirety. U.S. patent application Ser. No. 13 294 898 is a continuation of U.S. patent application Ser. No. 12 772 684 now U.S. Pat. No. 8 060 789 filed May 3 2010 entitled Web Page Error Reporting to Kellie Eickmeyer et al. which is hereby incorporated by reference herein in its entirety and which is a continuation of U.S. patent application Ser. No. 11 820 710 now U.S. Pat. No. 7 739 551 filed Jun. 20 2007 entitled Web Page Error Reporting to Kellie Eickmeyer et al. which is hereby incorporated by reference herein in its entirety.

The world wide web or simply the web has made available many different web pages that users can navigate to and read. Some web pages maintain this simple functionality while other web pages have evolved to the point where they embed programs that run when a user navigates to the web page. These programs can improve the user s experience of the web page and can also increase the functionality that is made available to users of the web page. However one problem faced with these programs as well as web pages in general is that it is difficult for the web page designer or web site publisher to get feedback regarding errors that occur during operation of these programs or display of the web page.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In accordance with one or more aspects of the web page error reporting discussed herein an error in a web page displayed on a device is detected. The error is assigned to a bucket to indicate a type of the error and a record describing the current state of the device is generated. At least one of the record and an indication of the bucket is sent to an error reporting server.

Web page error reporting is discussed herein. Programs referred to herein as web applications can be embedded in web pages. An error monitoring module on a device monitors web pages as they are displayed on the device including monitoring of web applications as they run on the device. The error monitoring module detects errors in the web pages and web applications as they occur. When an error is detected the error is assigned to one of multiple buckets based on the type of error and a record describing the current state of the device is generated. This record and the assigned bucket for the error is sent to a reporting server. The reporting server collects records from multiple devices and uses the records as well as the assigned buckets to assign the errors to one of multiple baskets. The information regarding the baskets as well as the generated records can be made available to the web page and or web application designer in order for the designer to review the errors and determine any appropriate changes that should be made to the web page and or web application.

Web page source s and error reporting server s can be implemented on one or more computing devices. Multiple ones of web page source s and error reporting server s can optionally be implemented on the same computing device e.g. two web page sources may be implemented on the same computing device a web page source and an error reporting server may be implemented on the same computing device and so forth .

Web page source makes web pages available to devices . One or more of these web pages can each include one or more web application s . A web application refers to an application that is accessed over the Internet and run on a device . A web application is not a stand alone application. Rather the web application is included or embedded in a web page that is loaded by another application running on device such as a web browser. When the web page is loaded the web application is also loaded and run by the other application e.g. the web browser . Additional information can be displayed or otherwise presented by the web page along with the user interface generated by running the web application. Alternatively the only information displayed or otherwise presented to the user from the web page is from the user interface generated by running the web application.

A web application can be included directly in a web page by for example including the instructions or code for the web application as part of the markup for the web page itself. A web application can also be included indirectly in a web page by for example including a link or other reference to where the instructions or the code for the web application can be obtained. The web browser or other application on device accesses this linked to or otherwise referenced location to obtain the instructions or the code for the web application. Web applications can be written in any of a variety of different languages such as the JScript development software available from Microsoft Corporation of Redmond Wash. the JavaScript technology available from Sun Microsystems Inc. of Santa Clara Calif. AJAX Asynchronous JavaScript and XML and so forth.

References to errors in web pages are made herein. It is to be appreciated that errors in web pages include errors in web applications embedded in web pages errors in other portions of the web pages and errors in web pages in which no web applications are embedded.

Web page source can be for example a web server that hosts web pages. Alternatively web page source can be other components or devices such as a cache a proxy and so forth. Additionally it is to be appreciated that a web page and or web application once obtained from another component or device via network can be cached locally at devices .

Web page source can have one or more web pages and different sources typically have different web pages . Alternatively two or more sources may have the same web page . Web applications are typically included as part of a web page s that can be navigated to by devices .

Devices represent any of a variety of different types of computing devices such as desktop computers laptop computers handheld computers or personal digital assistants PDAs automotive computers cellular phones game consoles and so forth. Devices obtain web pages from web page source s and display those web pages including running any web applications embedded therein. Different devices can obtain and display different web pages or alternatively the same web pages. Web pages are selected ones of web pages . A particular web application can be selected to be run on device in a variety of different manners such as by the user of a device navigating to a web page that includes a web application e.g. using a web browser or other suitably configured application the user entering a command to select a particular web application another program not shown running on device or on some other device selecting a program and so forth. As used herein the user refers to the end user of a device e.g. an individual viewing web pages .

Each device also includes a web page error monitoring module . Web page error monitoring module monitors web pages for errors. When an error is detected by module module reports the error by sending an indication of a type of the error and optionally a record of a current state of the device at the time the error was detected to error reporting server . Web page error monitoring module can be implemented as a stand alone program or alternatively can be incorporated as part of another program e.g. a web browser .

Device includes a web page error monitoring module an error reporting module a device state record creation module a bucketizing module a user form user interface UI module and a bucket log module . Each of modules can be implemented in software firmware hardware or combinations thereof. A web page which can include a web application is also displayed on device . Web page can be any of web pages of . It is to be appreciated that although a single web page is illustrated in multiple different web pages can be displayed on device sequentially and or concurrently.

Generally web page error monitoring module monitors web page and detects errors in web page . These errors can be automatically detected or alternatively user form UI module can present a user interface that allows the user of web page to specify errors he or she identifies. User specified errors are grouped together in buckets by bucket log module and automatically detected errors are grouped together in buckets by bucketizing module . In response to a detected error whether user specified or automatically detected device state record creation module generates a record describing a current state of device . Error reporting module sends this record to error reporting server of . Error reporting module also sends to server an indication of a type of the error being reported this type being identified by the bucket to which the error is assigned by module or .

Any of a variety of different errors can be encountered when displaying a web page including errors encountered when running a web application embedded in the web page. Generally an error refers to the situation where something with the web page and or web application does not behave as desired or intended by the author or developer of the page or application. Examples of errors include errors in an operating system running on device triggers contained in an application displaying a web page e.g. a web browser that dictate an error condition has arisen bugs in an application displaying a web page e.g. a web browser that cause undesired behavior bugs in web pages and or web applications that produce behavior not intended by the author or developer server errors that cause malfunctions in the web page or web application and so forth.

Detection of errors by web page error monitoring module includes both automatic error detection and user specified error detection. Module is illustrated as a separate module in device although it is to be appreciated that module can be implemented as part of another module. For example module can be implemented as part of a web browser or other suitably configured program and the functionality of module discussed herein will be performed by the web browser or other suitably configured program.

Automatic error detection is performed by module monitoring web page for various triggers and detecting that an error has occurred when the condition s defined by one of these triggers has been satisfied. Any of a variety of different triggers can be defined using any of a variety of different conditions. For example network issues can be triggers performance issues can be triggers permission errors can be triggers script errors can be triggers and so forth. Network issue triggers include for example the inability to access a desired location or device on the network inability to access a desired network and so forth. Performance issue triggers include for example delays in displaying of web pages delays between user selection of an option e.g. a button and the action corresponding to that option occurring delays in installing code and so forth. Permission error triggers include for example being denied access to a particular web page being denied access to a local object or other resource and so forth. Script error triggers include for example attempting to access an unavailable object attempting to access a nonexistent object and so forth.

Various other triggers related to the web page or web application can also lead to module detecting that an error has occurred. For example parsing errors encountered by the application displaying the web page e.g. a web browser can be triggers indicating an error. By way of another example layout and rendering errors encountered by the application displaying the web page e.g. a web browser can be triggers indicating an error. By way of yet another example source errors in a web application can be triggers indicating an error. By way of still another example web page specific or web application specific errors can be triggers indicating an error. Such page or application specific errors can be defined in the page or application by the author of the page or application allowing the author to customize the trigger and error detection as he or she desires.

Automatic error detection can also be performed by module using information that is available in web page and or a web application embedded in web page . For example the particular triggers can be specified in information embedded in tags in the web application or web page in header information of the web application or web page in metadata associated with the web application or web page and so forth.

Additionally in one or more embodiments the triggers used by web page error monitoring module are optionally implemented based on various criteria. These criteria can include for example requests from or options being set by a user of device information in web page or the web application embedded in web page and so forth. For example module may monitor web page for errors only if the user of device has opted in to error reporting in general or error reporting for web pages. By way of another example particular web pages or web applications may include information e.g. in tags in a header in metadata etc. requesting that the web page or web application be monitored for errors.

When an error is automatically detected bucketizing module assigns the error to a particular one of multiple buckets. Different types of errors are assigned to different buckets so in assigning a detected error to a particular bucket bucketizing module is assigning a particular error type to the detected error. Generally bucketizing module assigns the error to a bucket based at least in part on the trigger that occurred that caused the error to be detected.

Various bucketing criteria can be used to assign the error to a bucket. In one or more embodiments the error is assigned to a bucket based at least in part on the trigger that occurred that caused the error to be detected. In this manner errors that were caused by the same triggers are grouped together in the same bucket.

Table I lists example bucketing criteria that can be used to assign errors to different buckets. It is to be appreciated that Table I is only an example and that other criteria could alternatively be used in addition to or in place of criteria listed in Table I. Additionally it is to be appreciated that not all of the criteria listed in Table I need be used to assign an error to a bucket.

In addition to or alternatively in place of the automatically detected errors user specified errors can be detected. In the case of user specified errors the errors are identified by the user rather than being automatically detected. An option for the user to initiate reporting of an error is typically presented to the user. This option can be for example an icon a button a menu item from a drop down menu and so forth. When the user believes he or she has encountered an error the user can select this option to indicate that an error has been encountered. For example if a user believes that the display of the web page does not look correct or that a particular operation is taking too long he or she can indicate that an error has been encountered.

When the user indicates an error has been encountered user form UI module displays a form for the user to fill out regarding the error. This form can provide any of a variety of different data input options such as a drop down menu from which the user can select an error type e.g. web page does not display correctly response is taking too long etc. a set of radio buttons from which the user can select an error type a text field into which the user can type a description of the error and so forth. In one or more embodiments the user is also able to select a portion of the display in which he or she believes the error occurred. For example if the user believes particular characters are not being displayed correctly he or she can select a locate error position option. The user can then use a cursor control device such as a mouse to navigate a pointer over those characters and make a selection such as by pressing a mouse button . In response to the selection module or alternatively module detects the portion of the web page that was selected such as by analyzing the DOM tree for the web page to determine the portion.

In response to the user describing the error in the form displayed by user form UI module bucket log module assigns the user specified error to a particular one of the multiple buckets. Each user specified error has an associated ID that is used to assign the error to a bucket. This ID can be automatically generated such as by using the same bucketing criteria discussed above with respect to bucketizing module . Alternatively this ID can be assigned in other manners. For example each of the different error type options that are presented to the user as part of the form by module e.g. via a drop down menu via radio buttons etc. can be associated with a different value and this value can be the associated ID that is used to assign the error to a bucket.

When an error is detected by module whether it is an automatically detected error or a user specified error device state record creation module generates an error record describing a current state of device . This error record can include any of a variety of information describing the current state of device including applications web applications or other applications running on device hardware that is included in device settings of software or hardware of device current status of device on the network e.g. network of and so forth. The data included in this record is intended to give the developer of web page or alternatively another party responsible for correcting errors in web page information regarding the state of device at the time the error occurred in order to assist in correcting any errors that may be in web page .

The error record generated by device state record creation module represents a current state of the device at the time the error was detected. However it is to be appreciated that certain delays may occur and that certain state of the device may change between the time the error is detected and the error record is generated. For example after the error is detected several or many additional instructions may be executed before the error record is generated and these additional instructions alter the state of the device. Module attempts to generate the record quickly so that little state has changed between the time the error is detected and the time the error record is generated.

Table II lists example data that can be included in the error record generated by module . The data listed in Table II is data representing the current state of device at the time the data is captured. This capture occurs very shortly e.g. as soon as module can be invoked after the error is detected by module . It is to be appreciated that Table II is only an example and that other data could alternatively be included in the error record in addition to or in place of data listed in Table II. Additionally it is to be appreciated that not all of the data listed in Table II need be included in the error record. References to the web page in Table II refer to the web page having the detected error.

In one or more embodiments web page error monitoring module invokes device state record creation module to create an error record that includes the current state of device only if data collection for the bucket to which the error is assigned is turned on. Collection of current state data may be turned on only for certain buckets. Accordingly module obtains an indication of the bucket to which the error is assigned from bucketizing module and invokes module to create the record of the current state of device only if data collection for that bucket is turned on. If data collection for that bucket is turned off then module need not create the record of the current state of device . Alternatively module may create the record or at least begin creating the record regardless of whether data collection for the bucket is turned on but then not have the record sent to error reporting server unless data collection for the bucket is turned on.

Data collection for a particular bucket can be turned on and off for various reasons. For example situations can arise where error reporting server of has already obtained a large amount of data regarding a particular type of error. In such cases error reporting server can notify device that data collection for the bucket corresponding to that particular type of error is turned off so that server does not become inundated with error records for the same type of error from devices.

Error reporting module sends a notification that the error occurred to error reporting server of . This notification is sent for both automatically detected errors and user specified errors. Module can send this notification as soon as the error occurs and all the data has been collected or alternatively module can collect the information regarding the errors and batch the sending of information regarding multiple errors together e.g. once per day once per week as soon as a certain number of errors have been detected etc. .

Error reporting module sends the error record created by module to error reporting server optionally only if the bucket to which the error is assigned is turned on . Error reporting module also sends an indication of a type of the error being reported which is typically a bucket identifier of the bucket to which the error is assigned whether by bucketizing module or bucket log module . This bucket identifier and the error record correspond to or are associated with the same error and thus the bucket identifier and the error record correspond to or are associated with each other.

Along with the type of the error being reported additional information such as the criteria used to assign the error to a bucket can also be sent if not already included as part of the record generated by module . Sending the indication of the type of error even if no record is sent allows error reporting server to maintain a count of how frequently the error occurs even if records of the current states of the devices are not generated for every error.

In one or more alternate embodiments the errors may not be assigned to buckets by device . Rather when an error is detected the record of the current state of device can be generated and sent to error reporting server of . Server in turn can optionally assign the error to a bucket in the same manner as device discussed above or alternatively may simply assign the error to a particular basket as discussed below.

In one or more embodiments web page error monitoring module monitors web page for errors assigns detected errors to buckets and creates device state records as discussed herein. However prior to sending the created record and assigned bucket to server the user is informed that this data will be sent and is permitted to choose whether the data is set. The user can also be given the option to view the specific data that will be sent as well as view a privacy policy that informs the user how the data will be used.

In addition some of the operation of device could be transferred to the web page source s such as the devices hosting the web pages. For example when module detects an error the error record of the current state of device could be sent to the device hosting the web page in which the error was detected or hosting the web page that includes the web application in which the error was detected. This hosting device could then assign the error to a bucket or alternatively make the error record immediately available to a designer or other administrator of the web page so that what correction if any should be made can be determined quickly.

It should also be noted that although the web page error monitoring module is discussed as detecting the errors the web page and or web application itself can alternatively detect the errors. For example the web page and or web application could have code or instructions that operate analogous to module as discussed above to detect errors. Module could then be invoked by the web page or web application such as through an application programming interface API exposed by module to act on the detected error as discussed above. In such situations the detection performed by module would be detection of the error via a call made by the web page and or web application to the exposed API.

Initially a web page error to be reported is detected act . As discussed above this can be an automatic detection or alternatively a user specified detection. The detected error is assigned to a particular bucket act that identifies the type of the error.

A check is then made as to whether data collection for the bucket to which the error is assigned is turned on act . If data collection is turned on then an error record of the current state of the device is generated act . The generated record as well as a bucket identifier that indicates the bucket to which the error is assigned is sent to the error reporting server act . Additional information such as the criteria used to assign the error to a bucket is optionally included in this data sent to the error reporting server. The reporting process for the detected error is then complete act .

Returning to act if data collection for the bucket to which the error is assigned is turned off then a bucket identifier that indicates the bucket to which the error is assigned is sent to the error reporting server act . Additional information such as the criteria used to assign the error to a bucket is optionally included in this data sent to the error reporting server. The reporting process for the detected error is then complete act . Alternatively if data collection for the bucket to which the error is assigned is turned off then the record of the current state of the device may still be generated but simply not sent to the error reporting server or the record may still be sent to the error reporting server but deleted or ignored by the error reporting server.

Error reporting server includes an error information collection module a received error information data store an error information analysis module an analyzed error information data store an error information viewing module and an error information reporting module . Each of modules and can be implemented in software firmware hardware or combinations thereof. Additionally modules and as well as stores and can be implemented on the same device or alternatively can be implemented on two or more different devices.

As discussed above error reporting server receives information regarding errors detected by devices including an identifier of the type of error as well as possibly a record of the current state of the device. This information received from the devices is received by error information collection module which stores the data in received error information data store . This data stored in store includes a count of how many times errors of particular types are detected by the various devices. In situations where only the identifier of the type of error e.g. an indication of the bucket to which the detected error was assigned is received then the count of how many times that error has been detected is incremented in data store by error information collection module .

The information stored by error information collection module in data store is obtained from multiple devices of . These multiple devices use the same criteria for assigning errors to buckets so multiple devices can detect errors and assign the detected errors to the same bucket. Thus error information collection module can and typically does receive information regarding detected errors that are assigned to the same bucket from multiple devices.

Error information analysis module accesses the information stored in data store received from multiple devices and analyzes the data to assign the errors to one of multiple baskets. Errors are assigned to baskets based at least on the type of the error. These baskets are similar to the buckets discussed above however the baskets can and typically do include data from multiple devices rather than a single device. Additionally error information analysis module attempts to group errors into more general baskets in order to find common problems across multiple web pages.

Error information analysis module can assign errors to baskets using any of a variety of different basketing criteria. This basketing criteria can be the same as the bucketing criteria discussed above e.g. using the example criteria from Table I above can be based on data received in the error record e.g. the data from Table II above or alternatively can be different criteria. Module assigns similar types of errors to the same basket. In one or more embodiments module uses only selected ones of the criteria as were used by bucketing module of to assign the errors to buckets. This selected criteria are chosen so that similar types of errors are assigned to the same basket.

For example assume that the criteria used by bucketing module of is the criteria discussed above with respect to Table I. The selected criteria used by module can be the name version and DOM tree hash. In such situations errors that occurred at approximately the same portion of the web page would be grouped into the same basket even though the errors occurred for different domains. By way of another example the selected criteria used by module may be the name version and failure ID. In such situations user specified errors in the same web application where the user specified the same error type would be grouped into the same basket even though the errors occurred for different domains different DOM tree hash values and different action stack hash values.

The creation of baskets can be viewed as merging or combining multiple buckets into a single basket. All of the errors and corresponding information that were previously assigned to those multiple buckets are now assigned to the new basket.

In one or more embodiments the received error information is monitored by error information collection module and or error information analysis module to determine when data collection for a particular bucket should be turned off. When greater than a threshold number of current device state records are received for a particular bucket then data collection for that bucket is turned off by module and or module sending a notification to the devices of that data collection for that bucket is turned off. This threshold number can be for example ten although larger or smaller numbers can alternatively be used. However error information collection module continues to receive the information identifying which bucket a detected error was assigned to so that the count of the number of errors of that type the number of errors that were assigned to that bucket can be incremented appropriately in data store .

Additionally it should be noted that once server turns off data collection for a particular bucket the data collection can subsequently be turned back on. This can be accomplished for example by module and or module sending a notification to the devices of that data collection for that bucket is turned on. Data collection may be turned back on for a bucket for different reasons such as the situation where data collection was turned off because the threshold number of current device state records had been received but a developer of a web page having errors may desire more information.

Error information analysis module stores the baskets of records in analyzed error information data store . Data store may be a different store or alternatively the same store as received error information data store . For each basket data store stores the error information for each error assigned to the basket. This error information includes for example records of current device state information for the errors assigned to the basket and a count of the number of times an error was assigned to a bucket that was included in this basket.

The error information stored in analyzed error information data store can also be accessed by error information viewing module and error information reporting module . Modules and operate to display or otherwise present the data from store to web application developers web page administrators or any other party. The data can be displayed at different locations such as at server at a remote device that accesses modules and or e.g. via network of and so forth or module may generate reports that are transmitted to other devices or for which hard copies are produced.

Error information viewing module displays or otherwise presents the records of current device states to a party requesting them. Individual records can be accessed and the contents of those records can be displayed to the requesting party. Error information reporting module generates and displays or otherwise presents records summarizing the information stored in data store . Any of a variety of different reports can be generated such as how many errors were recorded for a particular basket how many errors were reported for a particular web page and or version of the web page what errors were reported during a particular time period such as last week in the last 24 hours in the month of October 2006 and so forth .

Additionally in one or more embodiments a module such as error information collection module also returns online error response information to devices of . Online error response information is information that can be displayed to a user of a device to inform the user of actions he or she can take to avoid encountering a particular error again in the future. For example the user may need to change settings on his or her device install a new version of a program install a software patch on his or her device and so forth.

A developer of the web application or alternatively other individuals can determine what actions the users should take for particular types of errors and this information can be returned to the devices by module . The information can be returned whenever a detected error for which online error response information is available is received by module . Alternatively module can send the information to web page error monitoring module of of the device so that the device itself can determine the appropriate online error response information to display when an error is detected without notifying server of the detected error. For example the online error response information for a particular type of error may be that the user should install a particular software patch on his or her device. When module receives an error from a device with a bucket identifier corresponding to that particular type of error this online error response information can be returned to device for display to the user.

Initially error information is received from multiple devices act . As discussed above this error information includes bucket identifiers optionally records of current device state and optionally the data used by the devices to assign the errors to particular buckets. The received error records are analyzed and grouped into multiple baskets act . These baskets can then be made available for viewing act reports can be generated regarding the errors that were detected act and or online error response information can be made available to the devices act .

Numerous usage scenarios can be created using the web page error reporting discussed herein. Fees could be charged in exchange for the error reporting being performed and or various collected information being made available. For example a fee could be charged to various web page developers or providers for performing the error reporting discussed herein. By way of another example a fee could be charged for certain reports generated by error reporting server . By way of yet another example a fee could be charged for the ability to send online error response information to devices. By way of still another example a fee could be charged for allowing access to the individual records stored in analyzed error information data store of .

Computing device includes one or more processors or processing units one or more computer readable media which can include one or more memory and or storage components one or more input output I O devices and a bus that allows the various components and devices to communicate with one another. Computer readable media and or I O device s can be included as part of or alternatively may be coupled to computing device . Bus represents one or more of any of several types of bus structures including a memory bus or memory controller a peripheral bus an accelerated graphics port and a processor or local bus using any of a variety of bus architectures. Bus can include wired and or wireless buses.

Memory storage component represents one or more computer storage media. Component can include volatile media such as random access memory RAM and or nonvolatile media such as read only memory ROM Flash memory optical disks magnetic disks and so forth . Component can include fixed media e.g. RAM ROM a fixed hard drive etc. as well as removable media e.g. a Flash memory drive a removable hard drive an optical disk and so forth .

One or more input output devices allow a user to enter commands and information to computing device and also allows information to be presented to the user and or other components or devices. Examples of input devices include a keyboard a cursor control device e.g. a mouse a microphone a scanner and so forth. Examples of output devices include a display device e.g. a monitor or projector speakers a printer a network card and so forth.

Various techniques may be described herein in the general context of software or program modules. Generally software includes routines programs objects components data structures and so forth that perform particular tasks or implement particular abstract data types. An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available medium or media that can be accessed by a computing device. By way of example and not limitation computer readable media may comprise computer storage media and communications media. 

 Computer storage media include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by a computer.

 Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as carrier wave or other transport mechanism. Communication media also include any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

